{"total_count": 122, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jamesls/fakeredis/issues/279", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/279/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/279/events", "html_url": "https://github.com/jamesls/fakeredis/issues/279", "id": 680216938, "node_id": "MDU6SXNzdWU2ODAyMTY5Mzg=", "number": 279, "title": "Hypothesis found difference between real and fake redis", "user": {"login": "mgetka", "id": 26625348, "node_id": "MDQ6VXNlcjI2NjI1MzQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/26625348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgetka", "html_url": "https://github.com/mgetka", "followers_url": "https://api.github.com/users/mgetka/followers", "following_url": "https://api.github.com/users/mgetka/following{/other_user}", "gists_url": "https://api.github.com/users/mgetka/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgetka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgetka/subscriptions", "organizations_url": "https://api.github.com/users/mgetka/orgs", "repos_url": "https://api.github.com/users/mgetka/repos", "events_url": "https://api.github.com/users/mgetka/events{/privacy}", "received_events_url": "https://api.github.com/users/mgetka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-17T12:59:43Z", "updated_at": "2020-08-18T12:51:25Z", "closed_at": "2020-08-18T12:51:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Below is a test log with difference between real and fake redis.\r\n```\r\n=================================== FAILURES ===================================\r\n_____________________________ TestTransaction.test _____________________________\r\n\r\nself = <test_hypothesis.TestTransaction object at 0x7f6b64c7c250>\r\n\r\n    @pytest.mark.slow\r\n    def test(self):\r\n        class Machine(CommonMachine):\r\n            create_command_strategy = self.create_command_strategy\r\n            command_strategy = self.command_strategy\r\n    \r\n>       hypothesis.stateful.run_state_machine_as_test(Machine)\r\n\r\ntest/test_hypothesis.py:468: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n../../../virtualenv/python3.7.6/lib/python3.7/site-packages/hypothesis/stateful.py:161: in run_state_machine_as_test\r\n    run_state_machine(state_machine_factory)\r\n../../../virtualenv/python3.7.6/lib/python3.7/site-packages/hypothesis/stateful.py:80: in run_state_machine\r\n    @given(st.data())\r\ntest/test_hypothesis.py:454: in one_command\r\n    self._compare(command)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = Machine({}), command = Command('exec')\r\n\r\n    def _compare(self, command):\r\n        fake_result, fake_exc = self._evaluate(self.fake, command)\r\n        real_result, real_exc = self._evaluate(self.real, command)\r\n    \r\n        if fake_exc is not None and real_exc is None:\r\n            raise fake_exc\r\n        elif real_exc is not None and fake_exc is None:\r\n            assert real_exc == fake_exc, \"Expected exception {} not raised\".format(real_exc)\r\n        elif (real_exc is None and isinstance(real_result, list)\r\n              and command.args and command.args[0].lower() == 'exec'):\r\n            assert fake_result is not None\r\n            # Transactions need to use the normalize functions of the\r\n            # component commands.\r\n            assert len(self.transaction_normalize) == len(real_result)\r\n            assert len(self.transaction_normalize) == len(fake_result)\r\n            for n, r, f in zip(self.transaction_normalize, real_result, fake_result):\r\n                assert n(f) == n(r)\r\n            self.transaction_normalize = []\r\n        else:\r\n>           assert fake_result == real_result\r\nE           assert [] == None\r\n\r\ntest/test_hypothesis.py:424: AssertionError\r\n----------------------------- Captured stdout call -----------------------------\r\nFalsifying example:\r\nstate = Machine()\r\nstate.init_attrs(attrs={'fields': [b'', b'\\x00'],\r\n 'keys': [b'', b'\\x00'],\r\n 'scores': [0.0, 1.0],\r\n 'values': [b'', b'\\x00']})\r\nstate.init_data(commands=[Command('set', b'', b'')])\r\nstate.one_command(command=Command('watch', b''))\r\nstate.one_command(command=Command('move', b'', 1))\r\nstate.one_command(command=Command('multi'))\r\nstate.one_command(command=Command('exec'))\r\nstate.teardown()\r\n```\r\n[Travis job summary](https://travis-ci.com/github/mgetka/fakeredis/jobs/372207219).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/274", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/274/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/274/events", "html_url": "https://github.com/jamesls/fakeredis/issues/274", "id": 666142366, "node_id": "MDU6SXNzdWU2NjYxNDIzNjY=", "number": 274, "title": "TypeError: '<=' not supported between instances of 'NoneType' and 'int', when using run_in_thread sleep_time=None", "user": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-27T09:41:10Z", "updated_at": "2020-08-15T09:11:01Z", "closed_at": "2020-08-15T09:11:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "when using:\r\n\r\n```\r\nimport fakeredis\r\n\r\n\r\ndef main():\r\n    redis = fakeredis.FakeStrictRedis()\r\n    redis_pubsub = redis.pubsub()\r\n    redis_pubsub.subscribe(my_channel=lambda: None)\r\n    return redis_pubsub.run_in_thread(sleep_time=None)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\n```\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\r\n>>>     self.run()\r\n  File \"/home/graingert/.virtualenvs/fr-demo/lib/python3.8/site-packages/redis/client.py\", line 2598, in run\r\n    pubsub.get_message(ignore_subscribe_messages=True,\r\n  File \"/home/graingert/.virtualenvs/fr-demo/lib/python3.8/site-packages/redis/client.py\", line 2513, in get_message\r\n    response = self.parse_response(block=False, timeout=timeout)\r\n  File \"/home/graingert/.virtualenvs/fr-demo/lib/python3.8/site-packages/redis/client.py\", line 2428, in parse_response\r\n    if not block and not connection.can_read(timeout=timeout):\r\n  File \"/home/graingert/.virtualenvs/fr-demo/lib/python3.8/site-packages/fakeredis/_server.py\", line 2549, in can_read\r\n    return self._selector.check_can_read(timeout)\r\n  File \"/home/graingert/.virtualenvs/fr-demo/lib/python3.8/site-packages/fakeredis/_server.py\", line 2474, in check_can_read\r\n    if timeout <= 0:\r\nTypeError: '<=' not supported between instances of 'NoneType' and 'int'\r\n\r\nKeyboardInterrupt\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/270", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/270/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/270/events", "html_url": "https://github.com/jamesls/fakeredis/issues/270", "id": 647261146, "node_id": "MDU6SXNzdWU2NDcyNjExNDY=", "number": 270, "title": "TypeError: hset() got an unexpected keyword argument 'mapping'", "user": {"login": "beheh", "id": 929769, "node_id": "MDQ6VXNlcjkyOTc2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/929769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beheh", "html_url": "https://github.com/beheh", "followers_url": "https://api.github.com/users/beheh/followers", "following_url": "https://api.github.com/users/beheh/following{/other_user}", "gists_url": "https://api.github.com/users/beheh/gists{/gist_id}", "starred_url": "https://api.github.com/users/beheh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beheh/subscriptions", "organizations_url": "https://api.github.com/users/beheh/orgs", "repos_url": "https://api.github.com/users/beheh/repos", "events_url": "https://api.github.com/users/beheh/events{/privacy}", "received_events_url": "https://api.github.com/users/beheh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-29T11:01:25Z", "updated_at": "2020-06-29T16:05:45Z", "closed_at": "2020-06-29T14:05:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "As per redis-py's [CHANGES](https://github.com/andymccurdy/redis-py/blob/master/CHANGES) as of 3.5.0 hset now accepts multiple keys at once, deprecating hmset. This is implemented through the backwards-compatible signature:\r\n\r\n```python\r\ndef hset(self, name, key=None, value=None, mapping=None)\r\n```\r\n\r\nThough on fakeredis 1.4.1, explicitly specifying the mapping kwarg through code like\r\n\r\n```python\r\nredis.hset(\"key\", mapping={\"a\": \"val1\", \"b\": \"val2\"})\r\n```\r\n\r\nfails with\r\n\r\n```\r\nTypeError: hset() got an unexpected keyword argument 'mapping'\r\n```\r\n\r\nI tried to build a pull request but I found the magic `@command` handling very confusing and hard to work with.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/269", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/269/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/269/events", "html_url": "https://github.com/jamesls/fakeredis/issues/269", "id": 620944216, "node_id": "MDU6SXNzdWU2MjA5NDQyMTY=", "number": 269, "title": "Inconsistent HSET behaviour with booleans in Lua", "user": {"login": "upcFrost", "id": 287771, "node_id": "MDQ6VXNlcjI4Nzc3MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/287771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/upcFrost", "html_url": "https://github.com/upcFrost", "followers_url": "https://api.github.com/users/upcFrost/followers", "following_url": "https://api.github.com/users/upcFrost/following{/other_user}", "gists_url": "https://api.github.com/users/upcFrost/gists{/gist_id}", "starred_url": "https://api.github.com/users/upcFrost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/upcFrost/subscriptions", "organizations_url": "https://api.github.com/users/upcFrost/orgs", "repos_url": "https://api.github.com/users/upcFrost/repos", "events_url": "https://api.github.com/users/upcFrost/events{/privacy}", "received_events_url": "https://api.github.com/users/upcFrost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T12:40:45Z", "updated_at": "2020-05-20T12:21:03Z", "closed_at": "2020-05-20T12:14:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nFound an inconsistent behaviour of fakeredis when using HSET and booleans. See the script below\r\n\r\n```python\r\nimport fakeredis\r\nredis = fakeredis.FakeStrictRedis()\r\ncall = redis.register_script('redis.call(\"HSET\", \"mykey\", \"luavalue\", true)')\r\ncall()\r\nredis.hget(\"mykey\", \"luavalue\")\r\n# b'1'\r\n```\r\n\r\nReal redis:\r\n```\r\n127.0.0.1:6379> eval 'redis.call(\"HSET\", \"mykey\", \"test_value\", true)' 0\r\n(error) ERR Error running script (call to f_100352cfb27b6960ee5471ec9b8f92fed22e57df): @user_script:1: @user_script: 1: Lua redis() command arguments must be strings or integers\r\n```\r\n\r\nWith redis-py fails as well\r\n\r\nRedis 6.0.3\r\nFakeredis 1.4.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/267", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/267/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/267/events", "html_url": "https://github.com/jamesls/fakeredis/issues/267", "id": 589133500, "node_id": "MDU6SXNzdWU1ODkxMzM1MDA=", "number": 267, "title": "AttributeError: 'FakeServer' object has no attribute 'exists'", "user": {"login": "sr-verde", "id": 10595600, "node_id": "MDQ6VXNlcjEwNTk1NjAw", "avatar_url": "https://avatars2.githubusercontent.com/u/10595600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sr-verde", "html_url": "https://github.com/sr-verde", "followers_url": "https://api.github.com/users/sr-verde/followers", "following_url": "https://api.github.com/users/sr-verde/following{/other_user}", "gists_url": "https://api.github.com/users/sr-verde/gists{/gist_id}", "starred_url": "https://api.github.com/users/sr-verde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sr-verde/subscriptions", "organizations_url": "https://api.github.com/users/sr-verde/orgs", "repos_url": "https://api.github.com/users/sr-verde/repos", "events_url": "https://api.github.com/users/sr-verde/events{/privacy}", "received_events_url": "https://api.github.com/users/sr-verde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-27T13:28:01Z", "updated_at": "2020-03-27T13:45:51Z", "closed_at": "2020-03-27T13:45:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Attribute exists does not exist, but redis-py has it.\r\n\r\n```\r\n    return self._client.exists(self._name) == 1\r\nAttributeError: 'FakeServer' object has no attribute 'exists'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/265", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/265/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/265/events", "html_url": "https://github.com/jamesls/fakeredis/issues/265", "id": 576114231, "node_id": "MDU6SXNzdWU1NzYxMTQyMzE=", "number": 265, "title": "redis.log call in Lua script fails", "user": {"login": "upcFrost", "id": 287771, "node_id": "MDQ6VXNlcjI4Nzc3MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/287771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/upcFrost", "html_url": "https://github.com/upcFrost", "followers_url": "https://api.github.com/users/upcFrost/followers", "following_url": "https://api.github.com/users/upcFrost/following{/other_user}", "gists_url": "https://api.github.com/users/upcFrost/gists{/gist_id}", "starred_url": "https://api.github.com/users/upcFrost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/upcFrost/subscriptions", "organizations_url": "https://api.github.com/users/upcFrost/orgs", "repos_url": "https://api.github.com/users/upcFrost/repos", "events_url": "https://api.github.com/users/upcFrost/events{/privacy}", "received_events_url": "https://api.github.com/users/upcFrost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-05T09:34:34Z", "updated_at": "2020-03-17T08:21:36Z", "closed_at": "2020-03-17T08:21:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nLua scripts fail for me if they use the `redis.log` directive. \r\n\r\nExample:\r\n```\r\ndef test_redis_lua(self):\r\n        lua = \"\"\"redis.log(redis.LOG_WARNING, \"foo bar\")\"\"\"\r\n        script = self.redis.register_script(lua)\r\n        script()\r\n```\r\n\r\nError:\r\n```\r\n.......\r\nexcept LuaError as ex:\r\n>           raise redis.ResponseError(str(ex))\r\nE           redis.exceptions.ResponseError: [string \"<python>\"]:1: attempt to call a nil value (field 'log')\r\nE           stack traceback:\r\nE           \t[string \"<python>\"]:1: in main chunk\r\n\r\n../../venv/3/lib/python3.7/site-packages/fakeredis/_server.py:2352: ResponseError\r\n```\r\n\r\nI'm using fakeredis-1.2.1.\r\n\r\nAdding a very basic stub like `redis.log = function(lvl, msg) return nil end` to `_server.py:2333` works for me, but ofc it'd be nice to log the messages", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/263", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/263/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/263/events", "html_url": "https://github.com/jamesls/fakeredis/issues/263", "id": 564833504, "node_id": "MDU6SXNzdWU1NjQ4MzM1MDQ=", "number": 263, "title": "Bug - FakeConnection has no attribute host", "user": {"login": "victorct-pronto", "id": 56981448, "node_id": "MDQ6VXNlcjU2OTgxNDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/56981448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victorct-pronto", "html_url": "https://github.com/victorct-pronto", "followers_url": "https://api.github.com/users/victorct-pronto/followers", "following_url": "https://api.github.com/users/victorct-pronto/following{/other_user}", "gists_url": "https://api.github.com/users/victorct-pronto/gists{/gist_id}", "starred_url": "https://api.github.com/users/victorct-pronto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victorct-pronto/subscriptions", "organizations_url": "https://api.github.com/users/victorct-pronto/orgs", "repos_url": "https://api.github.com/users/victorct-pronto/repos", "events_url": "https://api.github.com/users/victorct-pronto/events{/privacy}", "received_events_url": "https://api.github.com/users/victorct-pronto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-13T17:17:36Z", "updated_at": "2020-03-06T08:36:09Z", "closed_at": "2020-03-06T08:36:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Everything on the library is working fine, except when you print the instance it gives the following error:\r\n\r\n```\r\nIn [15]: _conn = fakeredis.FakeStrictRedis()\r\n\r\nIn [16]: _conn\r\nOut[16]: ---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n/usr/local/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj)\r\n    700                 type_pprinters=self.type_printers,\r\n    701                 deferred_pprinters=self.deferred_printers)\r\n--> 702             printer.pretty(obj)\r\n    703             printer.flush()\r\n    704             return stream.getvalue()\r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/lib/pretty.py in pretty(self, obj)\r\n    397                         if cls is not object \\\r\n    398                                 and callable(cls.__dict__.get('__repr__')):\r\n--> 399                             return _repr_pprint(obj, self, cycle)\r\n    400\r\n    401             return _default_pprint(obj, self, cycle)\r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/lib/pretty.py in _repr_pprint(obj, p, cycle)\r\n    687     \"\"\"A pprint that just redirects to the normal repr function.\"\"\"\r\n    688     # Find newlines and replace them with p.break_()\r\n--> 689     output = repr(obj)\r\n    690     for idx,output_line in enumerate(output.splitlines()):\r\n    691         if idx:\r\n\r\n/usr/local/lib/python3.7/site-packages/redis/client.py in __repr__(self)\r\n    745\r\n    746     def __repr__(self):\r\n--> 747         return \"%s<%s>\" % (type(self).__name__, repr(self.connection_pool))\r\n    748\r\n    749     def set_response_callback(self, command, callback):\r\n\r\n/usr/local/lib/python3.7/site-packages/redis/connection.py in __repr__(self)\r\n   1098         return \"%s<%s>\" % (\r\n   1099             type(self).__name__,\r\n-> 1100             repr(self.connection_class(**self.connection_kwargs)),\r\n   1101         )\r\n   1102\r\n\r\n/usr/local/lib/python3.7/site-packages/redis/connection.py in __repr__(self)\r\n    520\r\n    521     def __repr__(self):\r\n--> 522         repr_args = ','.join(['%s=%s' % (k, v) for k, v in self.repr_pieces()])\r\n    523         return '%s<%s>' % (self.__class__.__name__, repr_args)\r\n    524\r\n\r\n/usr/local/lib/python3.7/site-packages/redis/connection.py in repr_pieces(self)\r\n    525     def repr_pieces(self):\r\n    526         pieces = [\r\n--> 527             ('host', self.host),\r\n    528             ('port', self.port),\r\n    529             ('db', self.db)\r\n\r\nAttributeError: 'FakeConnection' object has no attribute 'host'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/262", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/262/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/262/events", "html_url": "https://github.com/jamesls/fakeredis/issues/262", "id": 560460204, "node_id": "MDU6SXNzdWU1NjA0NjAyMDQ=", "number": 262, "title": "Cannot repr redis object without host attribute", "user": {"login": "pudo", "id": 41628, "node_id": "MDQ6VXNlcjQxNjI4", "avatar_url": "https://avatars0.githubusercontent.com/u/41628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pudo", "html_url": "https://github.com/pudo", "followers_url": "https://api.github.com/users/pudo/followers", "following_url": "https://api.github.com/users/pudo/following{/other_user}", "gists_url": "https://api.github.com/users/pudo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pudo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pudo/subscriptions", "organizations_url": "https://api.github.com/users/pudo/orgs", "repos_url": "https://api.github.com/users/pudo/repos", "events_url": "https://api.github.com/users/pudo/events{/privacy}", "received_events_url": "https://api.github.com/users/pudo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-05T15:49:11Z", "updated_at": "2020-02-06T07:02:41Z", "closed_at": "2020-02-06T06:49:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "This seems to be due to the lack of `.host` attribute on the fake redis object:\r\n\r\n```\r\n  File \"/aleph/aleph/worker.py\", line 77, in get_worker\r\n    log.info(\"Listen: %s, stages: %s\", kv, OPERATIONS)\r\n  File \"/usr/lib/python3.7/logging/__init__.py\", line 1378, in info\r\n    self._log(INFO, msg, args, **kwargs)\r\n  File \"/usr/lib/python3.7/logging/__init__.py\", line 1514, in _log\r\n    self.handle(record)\r\n  File \"/usr/lib/python3.7/logging/__init__.py\", line 1524, in handle\r\n    self.callHandlers(record)\r\n  File \"/usr/lib/python3.7/logging/__init__.py\", line 1586, in callHandlers\r\n    hdlr.handle(record)\r\n  File \"/usr/lib/python3.7/logging/__init__.py\", line 894, in handle\r\n    self.emit(record)\r\n  File \"/usr/local/lib/python3.7/dist-packages/nose/plugins/logcapture.py\", line 82, in emit\r\n    self.buffer.append(self.format(record))\r\n  File \"/usr/lib/python3.7/logging/__init__.py\", line 869, in format\r\n    return fmt.format(record)\r\n  File \"/usr/lib/python3.7/logging/__init__.py\", line 608, in format\r\n    record.message = record.getMessage()\r\n  File \"/usr/lib/python3.7/logging/__init__.py\", line 369, in getMessage\r\n    msg = msg % self.args\r\n  File \"/usr/local/lib/python3.7/dist-packages/werkzeug/local.py\", line 367, in <lambda>\r\n    __str__ = lambda x: str(x._get_current_object())\r\n  File \"/usr/local/lib/python3.7/dist-packages/redis/client.py\", line 747, in __repr__\r\n    return \"%s<%s>\" % (type(self).__name__, repr(self.connection_pool))\r\n  File \"/usr/local/lib/python3.7/dist-packages/redis/connection.py\", line 1100, in __repr__\r\n    repr(self.connection_class(**self.connection_kwargs)),\r\n  File \"/usr/local/lib/python3.7/dist-packages/redis/connection.py\", line 522, in __repr__\r\n    repr_args = ','.join(['%s=%s' % (k, v) for k, v in self.repr_pieces()])\r\n  File \"/usr/local/lib/python3.7/dist-packages/redis/connection.py\", line 527, in repr_pieces\r\n    ('host', self.host),\r\nAttributeError: 'FakeConnection' object has no attribute 'host'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/261", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/261/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/261/events", "html_url": "https://github.com/jamesls/fakeredis/issues/261", "id": 558199331, "node_id": "MDU6SXNzdWU1NTgxOTkzMzE=", "number": 261, "title": "Update hypothesis tests for new hypothesis version", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-31T15:29:39Z", "updated_at": "2020-08-04T08:47:36Z", "closed_at": "2020-08-04T08:47:36Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The latest versions of hypothesis no longer provide GenericStateMachine, so cannot be used with the current unit tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/260", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/260/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/260/events", "html_url": "https://github.com/jamesls/fakeredis/issues/260", "id": 558078176, "node_id": "MDU6SXNzdWU1NTgwNzgxNzY=", "number": 260, "title": "Broken with redis-py 3.4.0", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-31T11:32:32Z", "updated_at": "2020-02-03T06:15:49Z", "closed_at": "2020-02-03T06:15:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running the example with redis-py 3.4.0 reveals the breakage:\r\n\r\n```\r\n$ cat test.py\r\nimport fakeredis\r\nr = fakeredis.FakeStrictRedis()\r\nassert r.set('foo', 'bar') is True\r\nassert r.get('foo') == 'bar'\r\n$ python test.py\r\nTraceback (most recent call last):\r\n  File \"/.../python3.8/site-packages/redis/connection.py\", line 550, in connect\r\n    sock = self._connect()\r\n  File \"/.../python3.8/site-packages/redis/connection.py\", line 892, in _connect\r\n    sock.connect(self.path)\r\nFileNotFoundError: [Errno 2] No such file or directory\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 3, in <module>\r\n    assert r.set('foo', 'bar') is True\r\n  File \"/.../python3.8/site-packages/redis/client.py\", line 1772, in set\r\n    return self.execute_command('SET', *pieces)\r\n  File \"/.../python3.8/site-packages/redis/client.py\", line 881, in execute_command\r\n    conn = self.connection or pool.get_connection(command_name, **options)\r\n  File \"/.../python3.8/site-packages/redis/connection.py\", line 1178, in get_connection\r\n    connection.connect()\r\n  File \"/.../python3.8/site-packages/redis/connection.py\", line 555, in connect\r\n    raise ConnectionError(self._error_message(e))\r\nredis.exceptions.ConnectionError: Error 2 connecting to unix socket: utf-8. No such file or directory.\r\n```\r\n\r\nIt seems the `encoding` argument is being intrepreted as `path` now. This is not documented on the upstream changelog: https://github.com/andymccurdy/redis-py/blob/master/CHANGES", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/259", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/259/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/259/events", "html_url": "https://github.com/jamesls/fakeredis/issues/259", "id": 548980131, "node_id": "MDU6SXNzdWU1NDg5ODAxMzE=", "number": 259, "title": "Can't use lock", "user": {"login": "davidt99", "id": 8295100, "node_id": "MDQ6VXNlcjgyOTUxMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidt99", "html_url": "https://github.com/davidt99", "followers_url": "https://api.github.com/users/davidt99/followers", "following_url": "https://api.github.com/users/davidt99/following{/other_user}", "gists_url": "https://api.github.com/users/davidt99/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidt99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidt99/subscriptions", "organizations_url": "https://api.github.com/users/davidt99/orgs", "repos_url": "https://api.github.com/users/davidt99/repos", "events_url": "https://api.github.com/users/davidt99/events{/privacy}", "received_events_url": "https://api.github.com/users/davidt99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-13T14:50:08Z", "updated_at": "2020-01-15T14:40:47Z", "closed_at": "2020-01-15T14:40:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using redis lock raises an error:\r\n```python\r\n>>> redis = fakeredis.FakeRedis()\r\n>>> lock = redis.lock('asd', 12*60*60)\r\n>>> with lock:\r\n...     print('')\r\n... \r\n\r\nTraceback (most recent call last):\r\n  File \".venv/lib/python3.6/site-packages/fakeredis/_server.py\", line 2361, in evalsha\r\n    script = self._server.script_cache[sha1]\r\nKeyError: b'c3f8721cbb97f72bc19e972846bd7aaf91901658'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \".venv/lib/python3.6/site-packages/redis/client.py\", line 3575, in __call__\r\n    return client.evalsha(self.sha, len(keys), *args)\r\n  File \".venv/lib/python3.6/site-packages/redis/client.py\", line 2761, in evalsha\r\n    return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)\r\n  File \".venv/lib/python3.6/site-packages/redis/client.py\", line 775, in execute_command\r\n    return self.parse_response(connection, command_name, **options)\r\n  File \".venv/lib/python3.6/site-packages/redis/client.py\", line 789, in parse_response\r\n    response = connection.read_response()\r\n  File \".venv/lib/python3.6/site-packages/fakeredis/_server.py\", line 2565, in read_response\r\n    raise response\r\n  File \".venv/lib/python3.6/site-packages/fakeredis/_server.py\", line 715, in _run_command\r\n    result = func(*args)\r\n  File \".venv/lib/python3.6/site-packages/fakeredis/_server.py\", line 2363, in evalsha\r\n    raise redis.exceptions.NoScriptError(NO_MATCHING_SCRIPT_MSG)\r\nredis.exceptions.NoScriptError: No matching script. Please use EVAL.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\n  File \".venv/lib/python3.6/site-packages/redis/lock.py\", line 150, in __exit__\r\n    self.release()\r\n  File \".venv/lib/python3.6/site-packages/redis/lock.py\", line 226, in release\r\n    self.do_release(expected_token)\r\n  File \".venv/lib/python3.6/site-packages/redis/lock.py\", line 231, in do_release\r\n    client=self.redis)):\r\n  File \".venv/lib/python3.6/site-packages/redis/client.py\", line 3581, in __call__\r\n    return client.evalsha(self.sha, len(keys), *args)\r\n  File \".venv/lib/python3.6/site-packages/redis/client.py\", line 2761, in evalsha\r\n    return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)\r\n  File \".venv/lib/python3.6/site-packages/redis/client.py\", line 774, in execute_command\r\n    connection.send_command(*args)\r\n  File \".venv/lib/python3.6/site-packages/redis/connection.py\", line 620, in send_command\r\n    self.send_packed_command(self.pack_command(*args))\r\n  File \".venv/lib/python3.6/site-packages/redis/connection.py\", line 600, in send_packed_command\r\n    self._sock.sendall(item)\r\n  File \".venv/lib/python3.6/site-packages/fakeredis/_server.py\", line 778, in sendall\r\n    self._parser.send(data)\r\n  File \".venv/lib/python3.6/site-packages/fakeredis/_server.py\", line 699, in _parse_commands\r\n    self._process_command(fields)\r\n  File \".venv/lib/python3.6/site-packages/fakeredis/_server.py\", line 797, in _process_command\r\n    result = self._run_command(func, sig, fields[1:], False)\r\n  File \".venv/lib/python3.6/site-packages/fakeredis/_server.py\", line 715, in _run_command\r\n    result = func(*args)\r\n  File \".venv/lib/python3.6/site-packages/fakeredis/_server.py\", line 2364, in evalsha\r\n    return self.eval(script, numkeys, *keys_and_args)\r\n  File \".venv/lib/python3.6/site-packages/fakeredis/_server.py\", line 2317, in eval\r\n    from lupa import LuaRuntime, LuaError\r\nModuleNotFoundError: No module named 'lupa'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/256", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/256/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/256/events", "html_url": "https://github.com/jamesls/fakeredis/issues/256", "id": 527471841, "node_id": "MDU6SXNzdWU1Mjc0NzE4NDE=", "number": 256, "title": "Add note on how to get default server", "user": {"login": "penguindustin", "id": 1649836, "node_id": "MDQ6VXNlcjE2NDk4MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1649836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/penguindustin", "html_url": "https://github.com/penguindustin", "followers_url": "https://api.github.com/users/penguindustin/followers", "following_url": "https://api.github.com/users/penguindustin/following{/other_user}", "gists_url": "https://api.github.com/users/penguindustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/penguindustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/penguindustin/subscriptions", "organizations_url": "https://api.github.com/users/penguindustin/orgs", "repos_url": "https://api.github.com/users/penguindustin/repos", "events_url": "https://api.github.com/users/penguindustin/events{/privacy}", "received_events_url": "https://api.github.com/users/penguindustin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-23T00:03:40Z", "updated_at": "2019-11-28T05:46:47Z", "closed_at": "2019-11-28T05:46:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use pytest and mock out redis in a fixture. One of the handy things fakeredis does is provide a way to programmatically mock connection errors. I think it would nice to note how to get the fake server instance in the case where you don't provide a server yourself. I can also do a PR for this is wanted, if not feel free to close this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/255", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/255/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/255/events", "html_url": "https://github.com/jamesls/fakeredis/issues/255", "id": 526157804, "node_id": "MDU6SXNzdWU1MjYxNTc4MDQ=", "number": 255, "title": "fakeredis does not support all the redis connection arguments", "user": {"login": "nateyoder", "id": 2685555, "node_id": "MDQ6VXNlcjI2ODU1NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2685555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nateyoder", "html_url": "https://github.com/nateyoder", "followers_url": "https://api.github.com/users/nateyoder/followers", "following_url": "https://api.github.com/users/nateyoder/following{/other_user}", "gists_url": "https://api.github.com/users/nateyoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/nateyoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nateyoder/subscriptions", "organizations_url": "https://api.github.com/users/nateyoder/orgs", "repos_url": "https://api.github.com/users/nateyoder/repos", "events_url": "https://api.github.com/users/nateyoder/events{/privacy}", "received_events_url": "https://api.github.com/users/nateyoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-20T20:12:19Z", "updated_at": "2019-11-28T05:51:33Z", "closed_at": "2019-11-28T05:51:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some unsupported arguments include socket_timeout, socket_connect_timeout, socket_keepalive, socket_keepalive_options, socket_type, retry_on_timeout, socket_read_size and health_check_interval. While I wouldn't expect this to necessarily be simulated by fakeredis it would be nice to be able to use this in the from_url command.\r\n\r\nEx: FakeRedis.from_url(redis_url, db=None, socket_connect_timeout=5, socket_timeout=30)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/254", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/254/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/254/events", "html_url": "https://github.com/jamesls/fakeredis/issues/254", "id": 517095879, "node_id": "MDU6SXNzdWU1MTcwOTU4Nzk=", "number": 254, "title": "Adding support for TIME command", "user": {"login": "lknix", "id": 954612, "node_id": "MDQ6VXNlcjk1NDYxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/954612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lknix", "html_url": "https://github.com/lknix", "followers_url": "https://api.github.com/users/lknix/followers", "following_url": "https://api.github.com/users/lknix/following{/other_user}", "gists_url": "https://api.github.com/users/lknix/gists{/gist_id}", "starred_url": "https://api.github.com/users/lknix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lknix/subscriptions", "organizations_url": "https://api.github.com/users/lknix/orgs", "repos_url": "https://api.github.com/users/lknix/repos", "events_url": "https://api.github.com/users/lknix/events{/privacy}", "received_events_url": "https://api.github.com/users/lknix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-04T11:36:42Z", "updated_at": "2020-08-04T09:02:14Z", "closed_at": "2020-08-04T09:02:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "After a quick glance it seems something like this should be added to `FakeSocket` class in order to support the command:\r\n\r\n```python\r\nimport time\r\n\r\n@command(())\r\ndef time(self):\r\n  return bytes(time.time()).split(\".\")\r\n```\r\nNOTE: I know there are microsecond precission issues with `time` on Windows (python 2.x), but it's probably good enough for what we want here.\r\n\r\nI can open a PR if this is the right approach.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/253", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/253/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/253/events", "html_url": "https://github.com/jamesls/fakeredis/issues/253", "id": 496039579, "node_id": "MDU6SXNzdWU0OTYwMzk1Nzk=", "number": 253, "title": "UNLINK command still not working", "user": {"login": "foreverest", "id": 13933008, "node_id": "MDQ6VXNlcjEzOTMzMDA4", "avatar_url": "https://avatars3.githubusercontent.com/u/13933008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foreverest", "html_url": "https://github.com/foreverest", "followers_url": "https://api.github.com/users/foreverest/followers", "following_url": "https://api.github.com/users/foreverest/following{/other_user}", "gists_url": "https://api.github.com/users/foreverest/gists{/gist_id}", "starred_url": "https://api.github.com/users/foreverest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foreverest/subscriptions", "organizations_url": "https://api.github.com/users/foreverest/orgs", "repos_url": "https://api.github.com/users/foreverest/repos", "events_url": "https://api.github.com/users/foreverest/events{/privacy}", "received_events_url": "https://api.github.com/users/foreverest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-19T21:40:03Z", "updated_at": "2019-09-20T21:57:44Z", "closed_at": "2019-09-20T21:57:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "FakeRedis 1.0.5\r\nAttributeError: 'FakeRedis' object has no attribute 'unlink'\r\n\r\n```\r\nPython 3.7.4 (default, Jul  9 2019, 15:11:16) \r\n[GCC 7.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import fakeredis\r\n>>> fakeredis.__version__\r\n'1.0.5'\r\n>>> r = fakeredis.FakeRedis()\r\n>>> r.set('foo', 42)\r\nTrue\r\n>>> r.unlink('foo')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'FakeRedis' object has no attribute 'unlink'\r\n>>> r.delete('foo')\r\n1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/251", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/251/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/251/events", "html_url": "https://github.com/jamesls/fakeredis/issues/251", "id": 484820924, "node_id": "MDU6SXNzdWU0ODQ4MjA5MjQ=", "number": 251, "title": "zscan gives error", "user": {"login": "abdolsamad", "id": 33170805, "node_id": "MDQ6VXNlcjMzMTcwODA1", "avatar_url": "https://avatars1.githubusercontent.com/u/33170805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abdolsamad", "html_url": "https://github.com/abdolsamad", "followers_url": "https://api.github.com/users/abdolsamad/followers", "following_url": "https://api.github.com/users/abdolsamad/following{/other_user}", "gists_url": "https://api.github.com/users/abdolsamad/gists{/gist_id}", "starred_url": "https://api.github.com/users/abdolsamad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abdolsamad/subscriptions", "organizations_url": "https://api.github.com/users/abdolsamad/orgs", "repos_url": "https://api.github.com/users/abdolsamad/repos", "events_url": "https://api.github.com/users/abdolsamad/events{/privacy}", "received_events_url": "https://api.github.com/users/abdolsamad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-08-24T14:08:05Z", "updated_at": "2019-08-26T10:21:52Z", "closed_at": "2019-08-26T10:21:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using redis, following code:\r\n```python\r\nimport redis\r\nrds = redis.StrictRedis(host=\"redis\",port= 6379)\r\nrds.zadd('key',{'val:0':1})\r\nresult = rds.zscan('key')\r\nprint(result)\r\n```\r\nproduces:\r\n```python\r\n(0, [(b'val:0', 1.0)])\r\n```\r\n\r\nBut in fake redis:\r\n```python\r\nimport fakeredis\r\nrds = fakeredis.FakeStrictRedis()\r\nrds.zadd('key',{'val:0':1})\r\nresult = rds.zscan('key')\r\n```\r\nraises an exception in `zscan`:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/IPython/core/interactiveshell.py\", line 3326, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-10-4814d682e624>\", line 2, in <module>\r\n    result = rds.zscan('key')\r\n  File \"/usr/local/lib/python3.7/site-packages/redis/client.py\", line 1921, in zscan\r\n    return self.execute_command('ZSCAN', *pieces, **options)\r\n  File \"/usr/local/lib/python3.7/site-packages/redis/client.py\", line 838, in execute_command\r\n    conn.send_command(*args)\r\n  File \"/usr/local/lib/python3.7/site-packages/redis/connection.py\", line 670, in send_command\r\n    check_health=kwargs.get('check_health', True))\r\n  File \"/usr/local/lib/python3.7/site-packages/redis/connection.py\", line 649, in send_packed_command\r\n    self._sock.sendall(item)\r\n  File \"/usr/local/lib/python3.7/site-packages/fakeredis/_server.py\", line 777, in sendall\r\n    self._parser.send(data)\r\n  File \"/usr/local/lib/python3.7/site-packages/fakeredis/_server.py\", line 698, in _parse_commands\r\n    self._process_command(fields)\r\n  File \"/usr/local/lib/python3.7/site-packages/fakeredis/_server.py\", line 796, in _process_command\r\n    result = self._run_command(func, sig, fields[1:], False)\r\n  File \"/usr/local/lib/python3.7/site-packages/fakeredis/_server.py\", line 714, in _run_command\r\n    result = func(*args)\r\n  File \"/usr/local/lib/python3.7/site-packages/fakeredis/_server.py\", line 2056, in zscan\r\n    return self._scan(key.value.items, cursor, *args)\r\n  File \"/usr/local/lib/python3.7/site-packages/fakeredis/_server.py\", line 863, in _scan\r\n    if cursor >= len(keys):\r\nTypeError: object of type 'method' has no len()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/249", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/249/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/249/events", "html_url": "https://github.com/jamesls/fakeredis/issues/249", "id": 480255954, "node_id": "MDU6SXNzdWU0ODAyNTU5NTQ=", "number": 249, "title": "Support UNLINK command", "user": {"login": "zsblevins", "id": 1643322, "node_id": "MDQ6VXNlcjE2NDMzMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1643322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zsblevins", "html_url": "https://github.com/zsblevins", "followers_url": "https://api.github.com/users/zsblevins/followers", "following_url": "https://api.github.com/users/zsblevins/following{/other_user}", "gists_url": "https://api.github.com/users/zsblevins/gists{/gist_id}", "starred_url": "https://api.github.com/users/zsblevins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zsblevins/subscriptions", "organizations_url": "https://api.github.com/users/zsblevins/orgs", "repos_url": "https://api.github.com/users/zsblevins/repos", "events_url": "https://api.github.com/users/zsblevins/events{/privacy}", "received_events_url": "https://api.github.com/users/zsblevins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-13T16:39:51Z", "updated_at": "2019-08-15T07:09:42Z", "closed_at": "2019-08-15T07:09:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Swapping calls from delete to unlink yields:\r\n`redis.exceptions.ResponseError: Command # 1 (UNLINK <key>) of pipeline caused error: unknown command 'UNLINK'`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/245", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/245/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/245/events", "html_url": "https://github.com/jamesls/fakeredis/issues/245", "id": 476337758, "node_id": "MDU6SXNzdWU0NzYzMzc3NTg=", "number": 245, "title": "AttributeError: 'FakeConnection' object has no attribute 'health_check_interval'", "user": {"login": "vii", "id": 37696, "node_id": "MDQ6VXNlcjM3Njk2", "avatar_url": "https://avatars0.githubusercontent.com/u/37696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vii", "html_url": "https://github.com/vii", "followers_url": "https://api.github.com/users/vii/followers", "following_url": "https://api.github.com/users/vii/following{/other_user}", "gists_url": "https://api.github.com/users/vii/gists{/gist_id}", "starred_url": "https://api.github.com/users/vii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vii/subscriptions", "organizations_url": "https://api.github.com/users/vii/orgs", "repos_url": "https://api.github.com/users/vii/repos", "events_url": "https://api.github.com/users/vii/events{/privacy}", "received_events_url": "https://api.github.com/users/vii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-02T20:09:03Z", "updated_at": "2019-08-14T09:57:35Z", "closed_at": "2019-08-14T09:57:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "fakeredis==1.0.3\r\nredis==3.3.4\r\nhiredis==1.0.0\r\n\r\n```\r\n>>> import fakeredis\r\n>>> r = fakeredis.FakeStrictRedis()\r\n>>> r.set('foo', 'bar')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/srv/venvs/service/trusty/service_venv_python3.6/lib/python3.6/site-packages/redis/client.py\", line 1519, in set\r\n    return self.execute_command('SET', *pieces)\r\n  File \"/srv/venvs/service/trusty/service_venv_python3.6/lib/python3.6/site-packages/redis/client.py\", line 838, in execute_command\r\n    conn.send_command(*args)\r\n  File \"/srv/venvs/service/trusty/service_venv_python3.6/lib/python3.6/site-packages/redis/connection.py\", line 674, in send_command\r\n    check_health=kwargs.get('check_health', True))\r\n  File \"/srv/venvs/service/trusty/service_venv_python3.6/lib/python3.6/site-packages/redis/connection.py\", line 648, in send_packed_command\r\n    self.check_health()\r\n  File \"/srv/venvs/service/trusty/service_venv_python3.6/lib/python3.6/site-packages/redis/connection.py\", line 629, in check_health\r\n    if self.health_check_interval and time() > self.next_health_check:\r\nAttributeError: 'FakeConnection' object has no attribute 'health_check_interval'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/242", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/242/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/242/events", "html_url": "https://github.com/jamesls/fakeredis/issues/242", "id": 474061541, "node_id": "MDU6SXNzdWU0NzQwNjE1NDE=", "number": 242, "title": "redis 3.3.0 returns different values than expected causing failing tests in test_fakeredis.py", "user": {"login": "isms", "id": 1284973, "node_id": "MDQ6VXNlcjEyODQ5NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1284973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isms", "html_url": "https://github.com/isms", "followers_url": "https://api.github.com/users/isms/followers", "following_url": "https://api.github.com/users/isms/following{/other_user}", "gists_url": "https://api.github.com/users/isms/gists{/gist_id}", "starred_url": "https://api.github.com/users/isms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isms/subscriptions", "organizations_url": "https://api.github.com/users/isms/orgs", "repos_url": "https://api.github.com/users/isms/repos", "events_url": "https://api.github.com/users/isms/events{/privacy}", "received_events_url": "https://api.github.com/users/isms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-29T13:47:02Z", "updated_at": "2019-08-14T09:24:14Z", "closed_at": "2019-08-14T09:24:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Excluding health check failures covered by #240, there are still this unexpected results:\r\n```\r\n======================================================================\r\nFAIL: test_ping (__main__.TestFakeStrictRedis)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test_fakeredis.py\", line 2963, in test_ping\r\n    self.assertEqual(self.redis.execute_command('ping', 'test'), b'test')\r\nAssertionError: False != b'test'\r\n\r\n======================================================================\r\nFAIL: test_zadd_minus_zero (__main__.TestFakeStrictRedis)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test_fakeredis.py\", line 1786, in test_zadd_minus_zero\r\n    self.assertEqual(self.redis.execute_command('zscore', 'foo', 'a'), b'-0')\r\nAssertionError: -0.0 != b'-0'\r\n\r\n======================================================================\r\nFAIL: test_ping (__main__.TestFakeStrictRedisDecodeResponses)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test_fakeredis.py\", line 2963, in test_ping\r\n    self.assertEqual(self.redis.execute_command('ping', 'test'), b'test')\r\n  File \"test_fakeredis.py\", line 4271, in assertEqual\r\n    super(DecodeMixin, self).assertEqual(a, self._decode(b), msg)\r\nAssertionError: False != 'test'\r\n\r\n======================================================================\r\nFAIL: test_zadd_minus_zero (__main__.TestFakeStrictRedisDecodeResponses)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test_fakeredis.py\", line 1786, in test_zadd_minus_zero\r\n    self.assertEqual(self.redis.execute_command('zscore', 'foo', 'a'), b'-0')\r\n  File \"test_fakeredis.py\", line 4271, in assertEqual\r\n    super(DecodeMixin, self).assertEqual(a, self._decode(b), msg)\r\nAssertionError: -0.0 != '-0'\r\n\r\n======================================================================\r\nFAIL: test_ping (__main__.TestRealStrictRedis)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test_fakeredis.py\", line 2963, in test_ping\r\n    self.assertEqual(self.redis.execute_command('ping', 'test'), b'test')\r\nAssertionError: False != b'test'\r\n\r\n======================================================================\r\nFAIL: test_zadd_minus_zero (__main__.TestRealStrictRedis)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test_fakeredis.py\", line 1786, in test_zadd_minus_zero\r\n    self.assertEqual(self.redis.execute_command('zscore', 'foo', 'a'), b'-0')\r\nAssertionError: -0.0 != b'-0'\r\n\r\n======================================================================\r\nFAIL: test_ping (__main__.TestRealStrictRedisDecodeResponses)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test_fakeredis.py\", line 2963, in test_ping\r\n    self.assertEqual(self.redis.execute_command('ping', 'test'), b'test')\r\n  File \"test_fakeredis.py\", line 4271, in assertEqual\r\n    super(DecodeMixin, self).assertEqual(a, self._decode(b), msg)\r\nAssertionError: False != 'test'\r\n\r\n======================================================================\r\nFAIL: test_zadd_minus_zero (__main__.TestRealStrictRedisDecodeResponses)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test_fakeredis.py\", line 1786, in test_zadd_minus_zero\r\n    self.assertEqual(self.redis.execute_command('zscore', 'foo', 'a'), b'-0')\r\n  File \"test_fakeredis.py\", line 4271, in assertEqual\r\n    super(DecodeMixin, self).assertEqual(a, self._decode(b), msg)\r\nAssertionError: -0.0 != '-0'\r\n\r\n----------------------------------------------------------------------\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/241", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/241/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/241/events", "html_url": "https://github.com/jamesls/fakeredis/issues/241", "id": 474056063, "node_id": "MDU6SXNzdWU0NzQwNTYwNjM=", "number": 241, "title": "DeprecationWarning of assertRaisesRegexp in test_fakeredis.py", "user": {"login": "isms", "id": 1284973, "node_id": "MDQ6VXNlcjEyODQ5NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1284973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isms", "html_url": "https://github.com/isms", "followers_url": "https://api.github.com/users/isms/followers", "following_url": "https://api.github.com/users/isms/following{/other_user}", "gists_url": "https://api.github.com/users/isms/gists{/gist_id}", "starred_url": "https://api.github.com/users/isms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isms/subscriptions", "organizations_url": "https://api.github.com/users/isms/orgs", "repos_url": "https://api.github.com/users/isms/repos", "events_url": "https://api.github.com/users/isms/events{/privacy}", "received_events_url": "https://api.github.com/users/isms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-29T13:36:30Z", "updated_at": "2019-07-31T14:01:05Z", "closed_at": "2019-07-31T14:01:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\ntest_fakeredis.py:3621: DeprecationWarning: Please use assertRaisesRegex instead.\r\n  redis.ResponseError, 'value is not an integer or out of range'):\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/240", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/240/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/240/events", "html_url": "https://github.com/jamesls/fakeredis/issues/240", "id": 474053640, "node_id": "MDU6SXNzdWU0NzQwNTM2NDA=", "number": 240, "title": "redis 3.3.0 adds `Connection.health_check_interval` attribute", "user": {"login": "isms", "id": 1284973, "node_id": "MDQ6VXNlcjEyODQ5NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1284973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isms", "html_url": "https://github.com/isms", "followers_url": "https://api.github.com/users/isms/followers", "following_url": "https://api.github.com/users/isms/following{/other_user}", "gists_url": "https://api.github.com/users/isms/gists{/gist_id}", "starred_url": "https://api.github.com/users/isms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isms/subscriptions", "organizations_url": "https://api.github.com/users/isms/orgs", "repos_url": "https://api.github.com/users/isms/repos", "events_url": "https://api.github.com/users/isms/events{/privacy}", "received_events_url": "https://api.github.com/users/isms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-29T13:31:40Z", "updated_at": "2019-08-13T12:50:06Z", "closed_at": "2019-07-30T10:25:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "An attribute added to `redis.connection.Connection` last week in `3.3.0` causes an error with current `FakeConnection` since this attr is now expected.\r\n\r\nHere is an example traceback from `rq` up through `redis` (with `redis==3.3.0` and `fakeredis==1.0.3`):\r\n\r\n```\r\nTraceback (most recent call last):\r\n ... <snip project specific traceback lines>\r\n  File \"/path/to/virtualenv/lib/python3.6/site-packages/rq/queue.py\", line 336, in enqueue\r\n    at_front=at_front, meta=meta\r\n  File \"/path/to/virtualenv/lib/python3.6/site-packages/django_rq/queues.py\", line 70, in enqueue_call\r\n    return self.original_enqueue_call(*args, **kwargs)\r\n  File \"/path/to/virtualenv/lib/python3.6/site-packages/django_rq/queues.py\", line 66, in original_enqueue_call\r\n    return super(DjangoRQ, self).enqueue_call(*args, **kwargs)\r\n  File \"/path/to/virtualenv/lib/python3.6/site-packages/rq/queue.py\", line 286, in enqueue_call\r\n    job = self.enqueue_job(job, at_front=at_front)\r\n  File \"/path/to/virtualenv/lib/python3.6/site-packages/rq/queue.py\", line 362, in enqueue_job\r\n    pipe.execute()\r\n  File \"/path/to/virtualenv/lib/python3.6/site-packages/redis/client.py\", line 3677, in execute\r\n    return execute(conn, stack, raise_on_error)\r\n  File \"/path/to/virtualenv/lib/python3.6/site-packages/redis/client.py\", line 3544, in _execute_transaction\r\n    connection.send_packed_command(all_cmds)\r\n  File \"/path/to/virtualenv/lib/python3.6/site-packages/redis/connection.py\", line 632, in send_packed_command\r\n    self.check_health()\r\n  File \"/path/to/virtualenv/lib/python3.6/site-packages/redis/connection.py\", line 613, in check_health\r\n    if self.health_check_interval and time() > self.next_health_check:\r\nAttributeError: 'FakeConnection' object has no attribute 'health_check_interval'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/239", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/239/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/239/events", "html_url": "https://github.com/jamesls/fakeredis/issues/239", "id": 462420768, "node_id": "MDU6SXNzdWU0NjI0MjA3Njg=", "number": 239, "title": "delete while scanning doesn't match redis behaviour", "user": {"login": "Amir-Hadadi", "id": 8851855, "node_id": "MDQ6VXNlcjg4NTE4NTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8851855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amir-Hadadi", "html_url": "https://github.com/Amir-Hadadi", "followers_url": "https://api.github.com/users/Amir-Hadadi/followers", "following_url": "https://api.github.com/users/Amir-Hadadi/following{/other_user}", "gists_url": "https://api.github.com/users/Amir-Hadadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amir-Hadadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amir-Hadadi/subscriptions", "organizations_url": "https://api.github.com/users/Amir-Hadadi/orgs", "repos_url": "https://api.github.com/users/Amir-Hadadi/repos", "events_url": "https://api.github.com/users/Amir-Hadadi/events{/privacy}", "received_events_url": "https://api.github.com/users/Amir-Hadadi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 425476483, "node_id": "MDU6TGFiZWw0MjU0NzY0ODM=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/HelpWanted", "name": "HelpWanted", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-30T16:07:37Z", "updated_at": "2020-08-04T09:30:43Z", "closed_at": "2020-08-04T09:30:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "scan_iter runs on just half the keys if they are updated (delete/rename) while iterated on. unlike real redis..\r\n\r\n[fakeredis.txt](https://github.com/jamesls/fakeredis/files/3343068/fakeredis.txt)\r\n\r\nfakeredis 1.0.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/238", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/238/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/238/events", "html_url": "https://github.com/jamesls/fakeredis/issues/238", "id": 457118195, "node_id": "MDU6SXNzdWU0NTcxMTgxOTU=", "number": 238, "title": "Remove six?", "user": {"login": "knyghty", "id": 3871354, "node_id": "MDQ6VXNlcjM4NzEzNTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3871354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knyghty", "html_url": "https://github.com/knyghty", "followers_url": "https://api.github.com/users/knyghty/followers", "following_url": "https://api.github.com/users/knyghty/following{/other_user}", "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}", "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions", "organizations_url": "https://api.github.com/users/knyghty/orgs", "repos_url": "https://api.github.com/users/knyghty/repos", "events_url": "https://api.github.com/users/knyghty/events{/privacy}", "received_events_url": "https://api.github.com/users/knyghty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-17T19:49:39Z", "updated_at": "2019-06-18T06:27:52Z", "closed_at": "2019-06-18T06:27:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like since you took out Python 3 support, there's no reason to use six anymore. The reason I mention this is I can't use this package because the version of six required conflicts with other packages.\r\n\r\nIs there some reason six is still used here? Happy to provide a PR for this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/237", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/237/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/237/events", "html_url": "https://github.com/jamesls/fakeredis/issues/237", "id": 443230770, "node_id": "MDU6SXNzdWU0NDMyMzA3NzA=", "number": 237, "title": "LLEN is unsupprted but not listed in the list of unsupported functions", "user": {"login": "dtracers", "id": 1933836, "node_id": "MDQ6VXNlcjE5MzM4MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1933836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtracers", "html_url": "https://github.com/dtracers", "followers_url": "https://api.github.com/users/dtracers/followers", "following_url": "https://api.github.com/users/dtracers/following{/other_user}", "gists_url": "https://api.github.com/users/dtracers/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtracers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtracers/subscriptions", "organizations_url": "https://api.github.com/users/dtracers/orgs", "repos_url": "https://api.github.com/users/dtracers/repos", "events_url": "https://api.github.com/users/dtracers/events{/privacy}", "received_events_url": "https://api.github.com/users/dtracers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-13T06:46:23Z", "updated_at": "2019-05-13T07:13:42Z", "closed_at": "2019-05-13T07:07:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/235", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/235/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/235/events", "html_url": "https://github.com/jamesls/fakeredis/issues/235", "id": 411436117, "node_id": "MDU6SXNzdWU0MTE0MzYxMTc=", "number": 235, "title": "Does not work with redis-py 3.2", "user": {"login": "MattBlack85", "id": 4163222, "node_id": "MDQ6VXNlcjQxNjMyMjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4163222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattBlack85", "html_url": "https://github.com/MattBlack85", "followers_url": "https://api.github.com/users/MattBlack85/followers", "following_url": "https://api.github.com/users/MattBlack85/following{/other_user}", "gists_url": "https://api.github.com/users/MattBlack85/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattBlack85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattBlack85/subscriptions", "organizations_url": "https://api.github.com/users/MattBlack85/orgs", "repos_url": "https://api.github.com/users/MattBlack85/repos", "events_url": "https://api.github.com/users/MattBlack85/events{/privacy}", "received_events_url": "https://api.github.com/users/MattBlack85/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-18T11:42:54Z", "updated_at": "2019-03-25T11:41:31Z", "closed_at": "2019-03-25T08:08:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I install 1.0.1 and try to execute what doc says I obtain the following error:\r\n```Python\r\nIn [1]: import fakeredis                                                                                                                                                                                                                                                                                                   \r\n\r\nIn [2]: r = fakeredis.FakeStrictRedis()                                                                                                                                                                                                                                                                                    \r\n\r\nIn [3]: r.set('a', 'b')                                                                                                                                                                                                                                                                                                    \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-3-9aae901f3e7b> in <module>\r\n----> 1 r.set('a', 'b')\r\n\r\n~/.local/share/virtualenvs/api-fKmI9ai6/lib/python3.6/site-packages/redis/client.py in set(self, name, value, ex, px, nx, xx)\r\n   1449         if xx:\r\n   1450             pieces.append('XX')\r\n-> 1451         return self.execute_command('SET', *pieces)\r\n   1452 \r\n   1453     def __setitem__(self, name, value):\r\n\r\n~/.local/share/virtualenvs/api-fKmI9ai6/lib/python3.6/site-packages/elasticapm/instrumentation/packages/base.py in call_if_sampling(self, module, method, wrapped, instance, args, kwargs)\r\n    103         transaction = get_transaction()\r\n    104         if not transaction or not transaction.is_sampled:\r\n--> 105             return wrapped(*args, **kwargs)\r\n    106         else:\r\n    107             return self.call(module, method, wrapped, instance, args, kwargs)\r\n\r\n~/.local/share/virtualenvs/api-fKmI9ai6/lib/python3.6/site-packages/elasticapm/instrumentation/packages/base.py in call_if_sampling(self, module, method, wrapped, instance, args, kwargs)\r\n    103         transaction = get_transaction()\r\n    104         if not transaction or not transaction.is_sampled:\r\n--> 105             return wrapped(*args, **kwargs)\r\n    106         else:\r\n    107             return self.call(module, method, wrapped, instance, args, kwargs)\r\n\r\n~/.local/share/virtualenvs/api-fKmI9ai6/lib/python3.6/site-packages/redis/client.py in execute_command(self, *args, **options)\r\n    770         pool = self.connection_pool\r\n    771         command_name = args[0]\r\n--> 772         connection = pool.get_connection(command_name, **options)\r\n    773         try:\r\n    774             connection.send_command(*args)\r\n\r\n~/.local/share/virtualenvs/api-fKmI9ai6/lib/python3.6/site-packages/redis/connection.py in get_connection(self, command_name, *keys, **options)\r\n    992         try:\r\n    993             # ensure this connection is connected to Redis\r\n--> 994             connection.connect()\r\n    995             # connections that the pool provides should be ready to send\r\n    996             # a command. if not, the connection was either returned to the\r\n\r\n~/.local/share/virtualenvs/api-fKmI9ai6/lib/python3.6/site-packages/redis/connection.py in connect(self)\r\n    498 \r\n    499         self._sock = sock\r\n--> 500         self._selector = DefaultSelector(sock)\r\n    501         try:\r\n    502             self.on_connect()\r\n\r\n~/.local/share/virtualenvs/api-fKmI9ai6/lib/python3.6/site-packages/redis/selector.py in DefaultSelector(sock)\r\n    194         else:\r\n    195             raise RedisError('Platform does not support any selectors')\r\n--> 196     return _DEFAULT_SELECTOR(sock)\r\n\r\n~/.local/share/virtualenvs/api-fKmI9ai6/lib/python3.6/site-packages/redis/selector.py in __init__(self, sock)\r\n    122             super(PollSelector, self).__init__(sock)\r\n    123             self.read_poller = select.poll()\r\n--> 124             self.read_poller.register(sock, self._READ_POLLER_MASK)\r\n    125             self.ready_poller = select.poll()\r\n    126             self.ready_poller.register(sock, self._READY_POLLER_MASK)\r\n\r\nTypeError: argument must be an int, or have a fileno() method.\r\n```\r\nAny idea of what is wrong? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/234", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/234/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/234/events", "html_url": "https://github.com/jamesls/fakeredis/issues/234", "id": 407794600, "node_id": "MDU6SXNzdWU0MDc3OTQ2MDA=", "number": 234, "title": "Failing to migrate to v1.0 on django project", "user": {"login": "belugame", "id": 16137830, "node_id": "MDQ6VXNlcjE2MTM3ODMw", "avatar_url": "https://avatars3.githubusercontent.com/u/16137830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belugame", "html_url": "https://github.com/belugame", "followers_url": "https://api.github.com/users/belugame/followers", "following_url": "https://api.github.com/users/belugame/following{/other_user}", "gists_url": "https://api.github.com/users/belugame/gists{/gist_id}", "starred_url": "https://api.github.com/users/belugame/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belugame/subscriptions", "organizations_url": "https://api.github.com/users/belugame/orgs", "repos_url": "https://api.github.com/users/belugame/repos", "events_url": "https://api.github.com/users/belugame/events{/privacy}", "received_events_url": "https://api.github.com/users/belugame/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-07T16:46:29Z", "updated_at": "2019-02-20T21:33:02Z", "closed_at": "2019-02-20T07:01:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is on a django 1.11 / python 2.7 project. (also django-redis==4.10.0, redis==2.10.6)\r\nI can't work out how to migrate my settings to be compatible with version 1.0. Or is the setup contradictory to what 1.0 needs?\r\n\r\n\r\nThis is how it worked with the <1.0:\r\n\r\n```\r\nIn [1]: settings.CACHES\r\nOut[1]: \r\n{'admin': {'BACKEND': 'django_redis.cache.RedisCache',\r\n  'KEY_PREFIX': 'admin',\r\n  'LOCATION': 'redis://redis:6379/3',\r\n  'OPTIONS': {'CLIENT_CLASS': 'django_redis.client.DefaultClient',\r\n   'REDIS_CLIENT_CLASS': 'fakeredis.FakeStrictRedis'}},\r\n 'default': {'BACKEND': 'django.core.cache.backends.dummy.DummyCache',\r\n  'LOCATION': 'foobar'},\r\n 'sessions': {'BACKEND': 'django_redis.cache.RedisCache',\r\n  'KEY_PREFIX': 'shop-sessions',\r\n  'LOCATION': 'redis://redis:6379/2',\r\n  'OPTIONS': {'CLIENT_CLASS': 'django_redis.client.DefaultClient',\r\n   'REDIS_CLIENT_CLASS': 'fakeredis.FakeStrictRedis'}}}\r\n```\r\n\r\nWith v1.0 I receive this on pretty much all my tests:\r\n\r\n```\r\n======================================================================\r\nERROR: test_something (foobar.messaging.tests.test_ticket_views.ViewsSupportingCORSTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/var/www/shop/current/app/django-sites/foobar/utils/testcases.py\", line 603, in tearDown\r\n    self.client.logout()\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/test/client.py\", line 685, in logout\r\n    if self.session:\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/test/client.py\", line 459, in session\r\n    session.save()\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/contrib/sessions/backends/cache.py\", line 57, in save\r\n    return self.create()\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/contrib/sessions/backends/cache.py\", line 44, in create\r\n    self._session_key = self._get_new_session_key()\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/contrib/sessions/backends/base.py\", line 164, in _get_new_session_key\r\n    if not self.exists(session_key):\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/contrib/sessions/backends/cache.py\", line 71, in exists\r\n    return session_key and (self.cache_key_prefix + session_key) in self._cache\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/core/cache/backends/base.py\", line 203, in __contains__\r\n    return self.has_key(key)\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django_redis/cache.py\", line 39, in _decorator\r\n    raise e.parent\r\nConnectionError: Error -2 connecting to redis:6379. Name or service not known.\r\n\r\n```\r\n\r\nIt appears to be looking for the \"real\" redis server still. \r\nIf I change REDIS_CLIENT_CLASS to CLIENT_CLASS I get:\r\n\r\n```\r\n    self.client.logout()\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/test/client.py\", line 685, in logout\r\n    if self.session:\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/test/client.py\", line 459, in session\r\n    session.save()\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/contrib/sessions/backends/cache.py\", line 57, in save\r\n    return self.create()\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/contrib/sessions/backends/cache.py\", line 44, in create\r\n    self._session_key = self._get_new_session_key()\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/contrib/sessions/backends/base.py\", line 164, in _get_new_session_key\r\n    if not self.exists(session_key):\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/contrib/sessions/backends/cache.py\", line 71, in exists\r\n    return session_key and (self.cache_key_prefix + session_key) in self._cache\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django/core/cache/backends/base.py\", line 203, in __contains__\r\n    return self.has_key(key)\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django_redis/cache.py\", line 32, in _decorator\r\n    return method(self, *args, **kwargs)\r\n  File \"/var/venv-stable/lib/python2.7/site-packages/django_redis/cache.py\", line 124, in has_key\r\n    return self.client.has_key(*args, **kwargs)\r\nAttributeError: 'FakeStrictRedis' object has no attribute 'has_key'\r\n\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/233", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/233/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/233/events", "html_url": "https://github.com/jamesls/fakeredis/issues/233", "id": 402669268, "node_id": "MDU6SXNzdWU0MDI2NjkyNjg=", "number": 233, "title": "compatibility error with 1.0 release?", "user": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-24T11:44:47Z", "updated_at": "2019-05-31T19:48:43Z", "closed_at": "2019-01-24T11:57:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "we've been using fake redis with our unit tests, post the publishing of the 1.0 release a few hours ago our ci tests started returning failures\r\n\r\n\r\n```\r\n2019-01-24T11:28:53.5373154Z =================================== FAILURES ===================================\r\n2019-01-24T11:28:53.5373831Z ________ EmailTest.test_email_to_email_message_map_without_ldap_manager ________\r\n2019-01-24T11:28:53.5376815Z [gw0] linux2 -- Python 2.7.15 /home/vsts/work/1/s/.tox/py27-cov/bin/python\r\n2019-01-24T11:28:53.5376956Z Traceback (most recent call last):\r\n2019-01-24T11:28:53.5377026Z   File \"/home/vsts/work/1/s/tools/c7n_mailer/tests/test_email.py\", line 53, in setUp\r\n2019-01-24T11:28:53.5377081Z     self.email_delivery = MockEmailDelivery(MAILER_CONFIG, self.aws_session, logger)\r\n2019-01-24T11:28:53.5377156Z   File \"/home/vsts/work/1/s/tools/c7n_mailer/c7n_mailer/email_delivery.py\", line 78, in __init__\r\n2019-01-24T11:28:53.5377208Z     self.ldap_lookup = self.get_ldap_connection()\r\n2019-01-24T11:28:53.5377279Z   File \"/home/vsts/work/1/s/tools/c7n_mailer/tests/test_email.py\", line 46, in get_ldap_connection\r\n2019-01-24T11:28:53.5377511Z     return get_ldap_lookup(cache_engine='redis')\r\n2019-01-24T11:28:53.5377577Z   File \"/home/vsts/work/1/s/tools/c7n_mailer/tests/common.py\", line 359, in get_ldap_lookup\r\n2019-01-24T11:28:53.5377804Z     ldap_lookup.caching.set('michael_bolton', michael_bolton)\r\n2019-01-24T11:28:53.5377860Z   File \"/home/vsts/work/1/s/tools/c7n_mailer/c7n_mailer/ldap_lookup.py\", line 205, in set\r\n2019-01-24T11:28:53.5377929Z     return self.connection.set(key, json.dumps(value))\r\n2019-01-24T11:28:53.5378348Z   File \"/home/vsts/work/1/s/.tox/py27-cov/lib/python2.7/site-packages/redis/client.py\", line 1394, in set\r\n2019-01-24T11:28:53.5378576Z     return self.execute_command('SET', *pieces)\r\n2019-01-24T11:28:53.5378834Z   File \"/home/vsts/work/1/s/.tox/py27-cov/lib/python2.7/site-packages/redis/client.py\", line 754, in execute_command\r\n2019-01-24T11:28:53.5378890Z     connection.send_command(*args)\r\n2019-01-24T11:28:53.5379312Z   File \"/home/vsts/work/1/s/.tox/py27-cov/lib/python2.7/site-packages/redis/connection.py\", line 619, in send_command\r\n2019-01-24T11:28:53.5379370Z     self.send_packed_command(self.pack_command(*args))\r\n2019-01-24T11:28:53.5380023Z   File \"/home/vsts/work/1/s/.tox/py27-cov/lib/python2.7/site-packages/redis/connection.py\", line 615, in send_packed_command\r\n2019-01-24T11:28:53.5380372Z     raise e\r\n2019-01-24T11:28:53.5380664Z AttributeError: 'module' object has no attribute 'ensure_binary'\r\n```\r\n\r\nwhat version of redis client is fakeredis 1.0 intended to work with ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/232", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/232/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/232/events", "html_url": "https://github.com/jamesls/fakeredis/issues/232", "id": 399270377, "node_id": "MDU6SXNzdWUzOTkyNzAzNzc=", "number": 232, "title": "Support flags in ZADD", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-15T10:04:14Z", "updated_at": "2020-08-04T09:25:01Z", "closed_at": "2020-08-04T09:25:01Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "ZADD supports flags NX, XX, CH and INCR, which are not yet implemented.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/230", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/230/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/230/events", "html_url": "https://github.com/jamesls/fakeredis/issues/230", "id": 393971605, "node_id": "MDU6SXNzdWUzOTM5NzE2MDU=", "number": 230, "title": "test_pubsub_run_in_thread sometimes fails with RuntimeError: dictionary changed size during iteration", "user": {"login": "ivan", "id": 4458, "node_id": "MDQ6VXNlcjQ0NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan", "html_url": "https://github.com/ivan", "followers_url": "https://api.github.com/users/ivan/followers", "following_url": "https://api.github.com/users/ivan/following{/other_user}", "gists_url": "https://api.github.com/users/ivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan/subscriptions", "organizations_url": "https://api.github.com/users/ivan/orgs", "repos_url": "https://api.github.com/users/ivan/repos", "events_url": "https://api.github.com/users/ivan/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-25T06:37:10Z", "updated_at": "2019-01-14T08:30:23Z", "closed_at": "2019-01-14T08:30:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I observed this with CPython 2.7.15 on Linux 4.14.83 on an Intel 4790K, just once so far:\r\n\r\n```\r\n======================================================================\r\nERROR: test_pubsub_run_in_thread (test_fakeredis.TestFakeStrictRedisDecodeResponses)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/fakeredis-0.16.0/test_fakeredis.py\", line 3171, in test_pubsub_run_in_thread\r\n    pubsub_thread.stop()\r\n  File \"/nix/store/q2svfj4gqvz77mq7sf0mm796kbic580q-python2.7-redis-2.10.6/lib/python2.7/site-packages/redis/client.py\", line 2607, in stop\r\n    self.pubsub.unsubscribe()\r\n  File \"/build/fakeredis-0.16.0/fakeredis.py\", line 230, in decode_response\r\n    val = _decode(func(*args, **kwargs))\r\n  File \"/build/fakeredis-0.16.0/fakeredis.py\", line 508, in func_wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/build/fakeredis-0.16.0/fakeredis.py\", line 2694, in unsubscribe\r\n    *args)\r\n  File \"/build/fakeredis-0.16.0/fakeredis.py\", line 2705, in _usubscribe\r\n    for channel in subscribed_dict:\r\nRuntimeError: dictionary changed size during iteration\r\n\r\n----------------------------------------------------------------------\r\nRan 1997 tests in 82.103s\r\n\r\nFAILED (errors=1, skipped=948)\r\nTest failed: <unittest.runner.TextTestResult run=1997 errors=1 failures=0>\r\nerror: Test failed: <unittest.runner.TextTestResult run=1997 errors=1 failures=0>\r\nException in thread Thread-11:\r\nTraceback (most recent call last):\r\n  File \"/nix/store/pk2s4pk14hsvy410hcpc1hfscy34fn8p-python-2.7.15/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/nix/store/q2svfj4gqvz77mq7sf0mm796kbic580q-python2.7-redis-2.10.6/lib/python2.7/site-packages/redis/client.py\", line 2599, in run\r\n    timeout=sleep_time)\r\n  File \"/build/fakeredis-0.16.0/fakeredis.py\", line 230, in decode_response\r\n    val = _decode(func(*args, **kwargs))\r\n  File \"/build/fakeredis-0.16.0/fakeredis.py\", line 508, in func_wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/build/fakeredis-0.16.0/fakeredis.py\", line 2738, in get_message\r\n    message = self._q.get(True, timeout)\r\n  File \"/nix/store/pk2s4pk14hsvy410hcpc1hfscy34fn8p-python-2.7.15/lib/python2.7/Queue.py\", line 172, in get\r\n    endtime = _time() + timeout\r\nTypeError: 'NoneType' object is not callable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/227", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/227/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/227/events", "html_url": "https://github.com/jamesls/fakeredis/issues/227", "id": 388610425, "node_id": "MDU6SXNzdWUzODg2MTA0MjU=", "number": 227, "title": "fakeredis doesn't work on Alpine linux because of lack of libc", "user": {"login": "szborows", "id": 1025646, "node_id": "MDQ6VXNlcjEwMjU2NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1025646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szborows", "html_url": "https://github.com/szborows", "followers_url": "https://api.github.com/users/szborows/followers", "following_url": "https://api.github.com/users/szborows/following{/other_user}", "gists_url": "https://api.github.com/users/szborows/gists{/gist_id}", "starred_url": "https://api.github.com/users/szborows/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szborows/subscriptions", "organizations_url": "https://api.github.com/users/szborows/orgs", "repos_url": "https://api.github.com/users/szborows/repos", "events_url": "https://api.github.com/users/szborows/events{/privacy}", "received_events_url": "https://api.github.com/users/szborows/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-07T11:12:34Z", "updated_at": "2018-12-08T21:00:50Z", "closed_at": "2018-12-08T21:00:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Alpine Linux uses muslr instead of libc.\r\n\r\nThere were other issues for MacOS and Windows respectively: #107 #188 \r\n\r\nTraceback:\r\n```\r\nTraceback:\r\ntests/test_lib.py:1: in <module>\r\n    import fakeredis\r\n.tox/pylint-error/lib/python3.7/site-packages/fakeredis.py:105: in <module>\r\n    raise ImportError('fakeredis: unable to find libc or equivalent')\r\nE   ImportError: fakeredis: unable to find libc or equivalent\r\n```\r\n\r\nEdit:\r\nimage used: `python:3.7-alpine3.8`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/226", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/226/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/226/events", "html_url": "https://github.com/jamesls/fakeredis/issues/226", "id": 383199142, "node_id": "MDU6SXNzdWUzODMxOTkxNDI=", "number": 226, "title": "client.register_script seems to be missing since redis-py 3.0.0", "user": {"login": "ticosax", "id": 1174343, "node_id": "MDQ6VXNlcjExNzQzNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1174343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ticosax", "html_url": "https://github.com/ticosax", "followers_url": "https://api.github.com/users/ticosax/followers", "following_url": "https://api.github.com/users/ticosax/following{/other_user}", "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}", "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions", "organizations_url": "https://api.github.com/users/ticosax/orgs", "repos_url": "https://api.github.com/users/ticosax/repos", "events_url": "https://api.github.com/users/ticosax/events{/privacy}", "received_events_url": "https://api.github.com/users/ticosax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-21T16:30:04Z", "updated_at": "2018-11-28T05:49:24Z", "closed_at": "2018-11-28T05:49:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Can be triggered when attempting to create a `redis.lock.Lock`\r\n\r\nhttps://github.com/andymccurdy/redis-py/commit/255f01036f6a8d10b4369eca9e491d13d3c3788a", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/225", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/225/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/225/events", "html_url": "https://github.com/jamesls/fakeredis/issues/225", "id": 381454098, "node_id": "MDU6SXNzdWUzODE0NTQwOTg=", "number": 225, "title": "Redis 3.0 has backwards-incompatible ZADD and others", "user": {"login": "jbaum-cmcrc", "id": 16146806, "node_id": "MDQ6VXNlcjE2MTQ2ODA2", "avatar_url": "https://avatars2.githubusercontent.com/u/16146806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbaum-cmcrc", "html_url": "https://github.com/jbaum-cmcrc", "followers_url": "https://api.github.com/users/jbaum-cmcrc/followers", "following_url": "https://api.github.com/users/jbaum-cmcrc/following{/other_user}", "gists_url": "https://api.github.com/users/jbaum-cmcrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbaum-cmcrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbaum-cmcrc/subscriptions", "organizations_url": "https://api.github.com/users/jbaum-cmcrc/orgs", "repos_url": "https://api.github.com/users/jbaum-cmcrc/repos", "events_url": "https://api.github.com/users/jbaum-cmcrc/events{/privacy}", "received_events_url": "https://api.github.com/users/jbaum-cmcrc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-16T05:38:05Z", "updated_at": "2019-01-14T08:27:36Z", "closed_at": "2019-01-14T08:27:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Redis 3.0 has backwards-incompatible ZADD, which now takes a mapping rather than `*args` or even length or `**kwargs`, as well as other backwards-incompatible changes.\r\n\r\nSee:\r\n- \"3.0.0 Backwards incompatible changes\" in the redis-py CHANGES file:\r\n  https://github.com/andymccurdy/redis-py/blob/master/CHANGES\r\n\r\n- The zadd function in the redis-py documentation:\r\n  https://redis-py.readthedocs.io/en/latest/#redis.Redis.zadd", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/223", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/223/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/223/events", "html_url": "https://github.com/jamesls/fakeredis/issues/223", "id": 378715445, "node_id": "MDU6SXNzdWUzNzg3MTU0NDU=", "number": 223, "title": "__delitem__ missing", "user": {"login": "viljoviitanen", "id": 791012, "node_id": "MDQ6VXNlcjc5MTAxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/791012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viljoviitanen", "html_url": "https://github.com/viljoviitanen", "followers_url": "https://api.github.com/users/viljoviitanen/followers", "following_url": "https://api.github.com/users/viljoviitanen/following{/other_user}", "gists_url": "https://api.github.com/users/viljoviitanen/gists{/gist_id}", "starred_url": "https://api.github.com/users/viljoviitanen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viljoviitanen/subscriptions", "organizations_url": "https://api.github.com/users/viljoviitanen/orgs", "repos_url": "https://api.github.com/users/viljoviitanen/repos", "events_url": "https://api.github.com/users/viljoviitanen/events{/privacy}", "received_events_url": "https://api.github.com/users/viljoviitanen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-08T12:44:18Z", "updated_at": "2018-11-08T20:06:03Z", "closed_at": "2018-11-08T20:06:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Noticed fakeredis does not support \"del\" operator, i.e. it does not implement `__delitem__` , while real redis does.\r\n\r\nSo code like this works on real redis:\r\n```python\r\nimport redis\r\nr = redis.StrictRedis(host='localhost', port=6379, db=0)\r\nr['foo'] = 'bar'\r\nprint (r['foo'])  #bar\r\ndel r['foo']\r\nprint (r['foo'])  #KeyError: 'foo'\r\n```\r\nbut fails on fakeredis:\r\n```python\r\nimport fakeredis\r\nr = fakeredis.FakeStrictRedis()\r\nr['foo'] = 'bar'\r\nprint (r['foo'])  #bar\r\ndel r['foo']      #AttributeError: __delitem__\r\n#r.delete('foo')  #this would work\r\n```\r\n\r\nMy guess on this is that even if  `__delitem__` is there in _StrKeyDict, because of name mangling, this happens.\r\n\r\nIf there's interest in getting this fixed, I can probably do a clean enough PR.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/221", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/221/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/221/events", "html_url": "https://github.com/jamesls/fakeredis/issues/221", "id": 374775988, "node_id": "MDU6SXNzdWUzNzQ3NzU5ODg=", "number": 221, "title": "purpose of the project", "user": {"login": "tmbdev", "id": 333887, "node_id": "MDQ6VXNlcjMzMzg4Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/333887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmbdev", "html_url": "https://github.com/tmbdev", "followers_url": "https://api.github.com/users/tmbdev/followers", "following_url": "https://api.github.com/users/tmbdev/following{/other_user}", "gists_url": "https://api.github.com/users/tmbdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmbdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmbdev/subscriptions", "organizations_url": "https://api.github.com/users/tmbdev/orgs", "repos_url": "https://api.github.com/users/tmbdev/repos", "events_url": "https://api.github.com/users/tmbdev/events{/privacy}", "received_events_url": "https://api.github.com/users/tmbdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-28T17:11:27Z", "updated_at": "2020-08-04T09:37:06Z", "closed_at": "2020-08-04T09:37:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing machine learning software that can work both distributed and local, and for local execution, being able to use the Redis API without a server is nice.\r\n\r\nI wanted to suggest updating the mission statement of the project. Right now it says \"This was created for a single purpose: to write unittests.\" It would be nice if the mission statement could explicitly acknowledge other serverless applications of fakeredis. It doesn't really make a practical difference, but it may remind developers to at least keep such use cases in mind.\r\n\r\nSo, maybe say \"Fakeredis is useful in situations where software written to the Redis API must be used in an environment where a Redis server cannot be started. This occurs commonly for unit-testing, but also some application software.\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/220", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/220/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/220/events", "html_url": "https://github.com/jamesls/fakeredis/issues/220", "id": 370898463, "node_id": "MDU6SXNzdWUzNzA4OTg0NjM=", "number": 220, "title": "Error calling redis command with arguments in lua eval", "user": {"login": "dkong", "id": 32360, "node_id": "MDQ6VXNlcjMyMzYw", "avatar_url": "https://avatars2.githubusercontent.com/u/32360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkong", "html_url": "https://github.com/dkong", "followers_url": "https://api.github.com/users/dkong/followers", "following_url": "https://api.github.com/users/dkong/following{/other_user}", "gists_url": "https://api.github.com/users/dkong/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkong/subscriptions", "organizations_url": "https://api.github.com/users/dkong/orgs", "repos_url": "https://api.github.com/users/dkong/repos", "events_url": "https://api.github.com/users/dkong/events{/privacy}", "received_events_url": "https://api.github.com/users/dkong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-17T04:53:47Z", "updated_at": "2019-01-14T08:26:35Z", "closed_at": "2019-01-14T08:26:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Test case demonstrating the issue:\r\n\r\n```python\r\n    def test_eval_zrange(self):\r\n        self.redis.zadd('foo', 1, 'bar')\r\n        val = self.redis.eval(\r\n            '''\r\n            return redis.call(\"ZRANGE\", KEYS[1], ARGV[1], ARGV[2]);\r\n            ''', 1, 'foo', 0, -1\r\n        )\r\n        self.assertEqual(val, ['bar'])\r\n```\r\n\r\nAnd the error (using HEAD):\r\n\r\n```bash\r\n$ nosetests test_fakeredis.py:TestFakeStrictRedis.test_eval_zrange\r\nE\r\n======================================================================\r\nERROR: test_eval_zrange (test_fakeredis.TestFakeStrictRedis)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Users/dara/dev/fakeredis/test_fakeredis.py\", line 3673, in test_eval_zrange\r\n    ''', 1, 'foo', 0, -1\r\n  File \"/Users/dara/dev/fakeredis/fakeredis.py\", line 502, in func_wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/Users/dara/dev/fakeredis/fakeredis.py\", line 510, in func_wrapper\r\n    ret = func(self, *args, **kwargs)\r\n  File \"/Users/dara/dev/fakeredis/fakeredis.py\", line 1061, in eval\r\n    result = lua_runtime.execute(script)\r\n  File \"lupa/_lupa.pyx\", line 262, in lupa._lupa.LuaRuntime.execute\r\n  File \"lupa/_lupa.pyx\", line 1279, in lupa._lupa.run_lua\r\n  File \"lupa/_lupa.pyx\", line 1288, in lupa._lupa.call_lua\r\n  File \"lupa/_lupa.pyx\", line 1313, in lupa._lupa.execute_lua_call\r\n  File \"lupa/_lupa.pyx\", line 235, in lupa._lupa.LuaRuntime.reraise_on_exception\r\n  File \"lupa/_lupa.pyx\", line 1451, in lupa._lupa.py_call_with_gil\r\n  File \"lupa/_lupa.pyx\", line 1438, in lupa._lupa.call_python\r\n  File \"/Users/dara/dev/fakeredis/fakeredis.py\", line 1177, in _lua_redis_call\r\n    result = func(self, *args)\r\n  File \"/Users/dara/dev/fakeredis/fakeredis.py\", line 510, in func_wrapper\r\n    ret = func(self, *args, **kwargs)\r\n  File \"/Users/dara/dev/fakeredis/fakeredis.py\", line 1920, in zrange\r\n    end += 1\r\nTypeError: coercing to Unicode: need string or buffer, int found\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.006s\r\n\r\nFAILED (errors=1)\r\n```\r\n\r\nPython version:\r\n\r\n```\r\nPython 2.7.14 (default, Feb  6 2018, 20:03:13)\r\n[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.39.2)] on darwin\r\n```\r\n\r\nSeems related to the conversion here: https://github.com/jamesls/fakeredis/blob/a4e85b8959713f78e1e893ac375d69a9f8b17abf/fakeredis.py#L1035", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/218", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/218/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/218/events", "html_url": "https://github.com/jamesls/fakeredis/issues/218", "id": 361713913, "node_id": "MDU6SXNzdWUzNjE3MTM5MTM=", "number": 218, "title": "pipeline.watch checks value rather than commands", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-19T11:59:20Z", "updated_at": "2019-01-14T08:24:57Z", "closed_at": "2019-01-14T08:24:57Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In real redis, a command that modifies a key invalidates a WATCH on that key, even if the value remains the same. fakeredis currently compares the value before and after, so it won't invalidate the watch. On the other hand, fakeredis will invalidate the watch if the key expires (because it no longer exists), but real redis won't (see https://code.google.com/archive/p/redis/issues/270).\r\n\r\nFixing this will be a major endeavour, since it will require investigating exactly what conditions trigger expiry in redis, and most likely modifying every single write command to trigger expiry.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/217", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/217/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/217/events", "html_url": "https://github.com/jamesls/fakeredis/issues/217", "id": 361404809, "node_id": "MDU6SXNzdWUzNjE0MDQ4MDk=", "number": 217, "title": "pipeline.watch runs transaction even if no commands are queued", "user": {"login": "taylor-cedar", "id": 25646493, "node_id": "MDQ6VXNlcjI1NjQ2NDkz", "avatar_url": "https://avatars2.githubusercontent.com/u/25646493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taylor-cedar", "html_url": "https://github.com/taylor-cedar", "followers_url": "https://api.github.com/users/taylor-cedar/followers", "following_url": "https://api.github.com/users/taylor-cedar/following{/other_user}", "gists_url": "https://api.github.com/users/taylor-cedar/gists{/gist_id}", "starred_url": "https://api.github.com/users/taylor-cedar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taylor-cedar/subscriptions", "organizations_url": "https://api.github.com/users/taylor-cedar/orgs", "repos_url": "https://api.github.com/users/taylor-cedar/repos", "events_url": "https://api.github.com/users/taylor-cedar/events{/privacy}", "received_events_url": "https://api.github.com/users/taylor-cedar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-09-18T17:22:41Z", "updated_at": "2018-09-25T08:08:42Z", "closed_at": "2018-09-25T08:08:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you modify a key after a `pipeline.watch` from the same client it throws a `redis.WatchError`. It should ignore changes from the current client. This bug makes it so we can't use `redis.lock.Lock`.\r\n\r\nHere is a link to the lock implementation. https://github.com/jamesls/fakeredis/pull/216", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/213", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/213/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/213/events", "html_url": "https://github.com/jamesls/fakeredis/issues/213", "id": 356540077, "node_id": "MDU6SXNzdWUzNTY1NDAwNzc=", "number": 213, "title": "`run_in_thread` method is not supported for `fakepubsub` object", "user": {"login": "AlexEshoo", "id": 8216513, "node_id": "MDQ6VXNlcjgyMTY1MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8216513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexEshoo", "html_url": "https://github.com/AlexEshoo", "followers_url": "https://api.github.com/users/AlexEshoo/followers", "following_url": "https://api.github.com/users/AlexEshoo/following{/other_user}", "gists_url": "https://api.github.com/users/AlexEshoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexEshoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexEshoo/subscriptions", "organizations_url": "https://api.github.com/users/AlexEshoo/orgs", "repos_url": "https://api.github.com/users/AlexEshoo/repos", "events_url": "https://api.github.com/users/AlexEshoo/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexEshoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573068, "node_id": "MDU6TGFiZWwxODU1NzMwNjg=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/FeatureRequest", "name": "FeatureRequest", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-03T15:09:25Z", "updated_at": "2018-09-25T13:09:38Z", "closed_at": "2018-09-25T13:09:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "My application uses the `run_in_thread` method of the `PubSub` object in `py-redis` to execute a callback function in a separate thread on publish events. This does not appear to be supported in fakeredis currently so I can't write unittests for my application by simply dropping `FakeStrictRedis` in place of `StrictRedis` client.\r\n\r\nThis module should support the background thread implementation as the real module does.\r\n\r\nSee the [PubSub Section of the readme](https://github.com/andymccurdy/redis-py#publish--subscribe)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/206", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/206/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/206/events", "html_url": "https://github.com/jamesls/fakeredis/issues/206", "id": 351910032, "node_id": "MDU6SXNzdWUzNTE5MTAwMzI=", "number": 206, "title": "Drop Python 2.6 support?", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-19T15:08:34Z", "updated_at": "2019-01-13T06:07:40Z", "closed_at": "2019-01-13T06:07:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 2.6 is very old.\r\nIf people need it, they can use previous versions.\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/204", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/204/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/204/events", "html_url": "https://github.com/jamesls/fakeredis/issues/204", "id": 351903996, "node_id": "MDU6SXNzdWUzNTE5MDM5OTY=", "number": 204, "title": "Can't Iterate over ARGV or HGETALL results in Lua scripting", "user": {"login": "NimrodParasol", "id": 42515308, "node_id": "MDQ6VXNlcjQyNTE1MzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/42515308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NimrodParasol", "html_url": "https://github.com/NimrodParasol", "followers_url": "https://api.github.com/users/NimrodParasol/followers", "following_url": "https://api.github.com/users/NimrodParasol/following{/other_user}", "gists_url": "https://api.github.com/users/NimrodParasol/gists{/gist_id}", "starred_url": "https://api.github.com/users/NimrodParasol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NimrodParasol/subscriptions", "organizations_url": "https://api.github.com/users/NimrodParasol/orgs", "repos_url": "https://api.github.com/users/NimrodParasol/repos", "events_url": "https://api.github.com/users/NimrodParasol/events{/privacy}", "received_events_url": "https://api.github.com/users/NimrodParasol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-19T13:41:57Z", "updated_at": "2018-08-24T09:03:52Z", "closed_at": "2018-08-24T09:03:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using `eval` to run Lua script, when iterating over ARGV using the following code:\r\n```\r\nfor i, v in ipairs(ARGV) do\r\nend\r\n```\r\nAn exception is thrown: \r\n\r\n```\r\n/home/ubuntu/venv3/lib/python3.5/site-packages/fakeredis.py:2201: in execute\r\n    for name, args, kwargs in self.commands]\r\n/home/ubuntu/venv3/lib/python3.5/site-packages/fakeredis.py:2201: in <listcomp>\r\n    for name, args, kwargs in self.commands]\r\n/home/ubuntu/venv3/lib/python3.5/site-packages/fakeredis.py:221: in decode_response\r\n    val = _decode(func(*args, **kwargs))\r\n/home/ubuntu/venv3/lib/python3.5/site-packages/fakeredis.py:342: in func_wrapper\r\n    return func(*args, **kwargs)\r\n/home/ubuntu/venv3/lib/python3.5/site-packages/fakeredis.py:849: in eval\r\n    result = lua_runtime.execute(script)\r\nlupa/_lupa.pyx:277: in lupa._lupa.LuaRuntime.execute\r\n    ???\r\nlupa/_lupa.pyx:1294: in lupa._lupa.run_lua\r\n    ???\r\nlupa/_lupa.pyx:1303: in lupa._lupa.call_lua\r\n    ???\r\nlupa/_lupa.pyx:1328: in lupa._lupa.execute_lua_call\r\n    ???\r\nlupa/_lupa.pyx:250: in lupa._lupa.LuaRuntime.reraise_on_exception\r\n    ???\r\nlupa/_lupa.pyx:1571: in lupa._lupa.py_object_getindex_with_gil\r\n    ???\r\n\r\n   ???\r\nE   IndexError: list index out of range\r\n```\r\n\r\nThe code is working just fine against a real Redis.\r\nLook like it happens due to `ARGV` being `POBJECT` (a Lupa's type?) instead of a regular Lua table.\r\n\r\nThe same happens when trying to iterate over the results of `redis.call('HGETALL', key)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/203", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/203/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/203/events", "html_url": "https://github.com/jamesls/fakeredis/issues/203", "id": 351809761, "node_id": "MDU6SXNzdWUzNTE4MDk3NjE=", "number": 203, "title": "I ask to release a new version.", "user": {"login": "lowitea", "id": 24208500, "node_id": "MDQ6VXNlcjI0MjA4NTAw", "avatar_url": "https://avatars2.githubusercontent.com/u/24208500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowitea", "html_url": "https://github.com/lowitea", "followers_url": "https://api.github.com/users/lowitea/followers", "following_url": "https://api.github.com/users/lowitea/following{/other_user}", "gists_url": "https://api.github.com/users/lowitea/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowitea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowitea/subscriptions", "organizations_url": "https://api.github.com/users/lowitea/orgs", "repos_url": "https://api.github.com/users/lowitea/repos", "events_url": "https://api.github.com/users/lowitea/events{/privacy}", "received_events_url": "https://api.github.com/users/lowitea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-18T10:26:00Z", "updated_at": "2018-08-20T08:31:16Z", "closed_at": "2018-08-20T08:31:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ask to release a new version. Maybe a minor. Recent changes are very necessary.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/200", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/200/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/200/events", "html_url": "https://github.com/jamesls/fakeredis/issues/200", "id": 349162413, "node_id": "MDU6SXNzdWUzNDkxNjI0MTM=", "number": 200, "title": "AttributeError from mock in _check_conn for patched FakeStrictRedis.eval", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-09T14:50:15Z", "updated_at": "2018-08-10T13:27:55Z", "closed_at": "2018-08-10T13:27:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Because of ed56f4a I cannot patch `eval` anymore easily:\r\n\r\n```python\r\n@pytest.fixture\r\ndef mocked_redis_eval(mocker):\r\n    from app.authentication import failed_logins_cache\r\n\r\n    def mocked_eval(script, numkeys, *keys_and_args):\r\n        \"\"\"Mock fakeredis' eval (used by django-redis for incr).\"\"\"\r\n        assert 'local exists =' in script\r\n        key = keys_and_args[0]\r\n        cur = failed_logins_cache.get(key, 0)\r\n        new = cur + 1\r\n        failed_logins_cache.set(key, new)\r\n        return new\r\n    return mocker.patch('fakeredis.FakeStrictRedis.eval',\r\n                        side_effect=mocked_eval)\r\n```\r\n\r\nMy main intention here is to not require \"lupa\" for tests, since only \"incr\" is used.\r\n\r\nThe problem is that \"mock\" raises an AttributeError when magic names are accessed:\r\n\r\n```\r\n  File \"\u2026/project/.venv/lib/python3.6/site-packages/django_redis/client/default.py\", line 431, in incr                                                           \r\n    return self._incr(key=key, delta=delta, version=version, client=client, ignore_key_check=ignore_key_check)                                                                               \r\n  File \"\u2026/project/.venv/lib/python3.6/site-packages/django_redis/client/default.py\", line 401, in _incr                                                          \r\n    value = client.eval(lua, 1, key, delta)\r\n  File \"\u2026/Vcs/fakeredis/fakeredis.py\", line 341, in func_wrapper\r\n    if not func.__self__.connected:\r\n  File \"\u2026/pyenv/3.6.6/lib/python3.6/unittest/mock.py\", line 584, in __getattr__                                                                                         \r\n    raise AttributeError(name)\r\nAttributeError: __self__\r\n```\r\n\r\nIt gets accessed here: https://github.com/jamesls/fakeredis/blob/b354e472f22551907deccb2bbbd25594f80b24bc/fakeredis.py#L336-L343\r\n\r\nNeed to investigate myself, but wanted to file this here already.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/199", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/199/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/199/events", "html_url": "https://github.com/jamesls/fakeredis/issues/199", "id": 346898205, "node_id": "MDU6SXNzdWUzNDY4OTgyMDU=", "number": 199, "title": "future.types.newbytes does not encode correctly", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-08-02T07:49:55Z", "updated_at": "2018-08-02T08:14:53Z", "closed_at": "2018-08-02T08:14:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "python-future provides future.types.newbytes which is meant to behave like the Python 3 bytes type in Python 2. However, `fakeredis.to_bytes` doesn't handle it correctly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/198", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/198/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/198/events", "html_url": "https://github.com/jamesls/fakeredis/issues/198", "id": 343200238, "node_id": "MDU6SXNzdWUzNDMyMDAyMzg=", "number": 198, "title": "Why zadd incompatible with either redis-py or mockredis", "user": {"login": "qwIvan", "id": 7613160, "node_id": "MDQ6VXNlcjc2MTMxNjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7613160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qwIvan", "html_url": "https://github.com/qwIvan", "followers_url": "https://api.github.com/users/qwIvan/followers", "following_url": "https://api.github.com/users/qwIvan/following{/other_user}", "gists_url": "https://api.github.com/users/qwIvan/gists{/gist_id}", "starred_url": "https://api.github.com/users/qwIvan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qwIvan/subscriptions", "organizations_url": "https://api.github.com/users/qwIvan/orgs", "repos_url": "https://api.github.com/users/qwIvan/repos", "events_url": "https://api.github.com/users/qwIvan/events{/privacy}", "received_events_url": "https://api.github.com/users/qwIvan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-20T18:10:35Z", "updated_at": "2018-07-20T18:48:22Z", "closed_at": "2018-07-20T18:48:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "redis-py:\r\nhttps://github.com/andymccurdy/redis-py/blob/master/redis/client.py#L1688\r\n\r\n\r\nmockredis:\r\nhttps://github.com/locationlabs/mockredis/blob/99fc1af668a0872262a00752800bdacb168dd0ee/mockredis/tests/test_scan.py#L197-L208\r\n\r\n\r\nfakeredis:\r\nhttps://github.com/jamesls/fakeredis/blob/5bd2f1b1498633c73fd99762be78e6ebf02a728e/test_fakeredis.py#L1610-L1622", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/196", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/196/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/196/events", "html_url": "https://github.com/jamesls/fakeredis/issues/196", "id": 338123581, "node_id": "MDU6SXNzdWUzMzgxMjM1ODE=", "number": 196, "title": "BLPOP does not block", "user": {"login": "irvinlim", "id": 9884746, "node_id": "MDQ6VXNlcjk4ODQ3NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/9884746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irvinlim", "html_url": "https://github.com/irvinlim", "followers_url": "https://api.github.com/users/irvinlim/followers", "following_url": "https://api.github.com/users/irvinlim/following{/other_user}", "gists_url": "https://api.github.com/users/irvinlim/gists{/gist_id}", "starred_url": "https://api.github.com/users/irvinlim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irvinlim/subscriptions", "organizations_url": "https://api.github.com/users/irvinlim/orgs", "repos_url": "https://api.github.com/users/irvinlim/repos", "events_url": "https://api.github.com/users/irvinlim/events{/privacy}", "received_events_url": "https://api.github.com/users/irvinlim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-04T04:06:20Z", "updated_at": "2018-07-04T07:29:38Z", "closed_at": "2018-07-04T07:29:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if fakeredis is supposed to block on `BLPOP` if there are no elements to pop, as mentioned here: https://redis.io/commands/blpop\r\n\r\nI've created a very simple repro [here](https://github.com/irvinlim/fakeredis-repro), which you can see that fakeredis returns immediately and does not wait until the `timeout` set, as follows:\r\n\r\n```python\r\nredis = StrictRedis(**config)\r\nfakeredis = FakeStrictRedis()\r\nredis.flushall()\r\nfakeredis.flushall()\r\n\r\nprint '[+] FakeRedis BLPOP:'\r\nnow = time()\r\npopped = fakeredis.blpop('hello_world', 10)\r\nprint '[*] Took %.2f seconds' % (time() - now)\r\nprint '[*] Popped value:', popped\r\nprint\r\n\r\nprint '[+] Redis BLPOP:'\r\nnow = time()\r\npopped = redis.blpop('hello_world', 10)\r\nprint '[*] Took %.2f seconds' % (time() - now)\r\nprint '[*] Popped value:', popped\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n[+] FakeRedis BLPOP:\r\n[*] Took 0.00 seconds\r\n[*] Popped value: None\r\n\r\n[+] Redis BLPOP:\r\n[*] Took 10.03 seconds\r\n[*] Popped value: None\r\n```\r\n\r\nAfter reading the [source](https://github.com/jamesls/fakeredis/blob/5bd2f1b1498633c73fd99762be78e6ebf02a728e/fakeredis.py#L1143), it seems that the `timeout` argument is not being used in any way for `blpop`, `brpop` and `brpoplpush`, nor does it sleep or wait indefinitely if no timeout is set, unlike a real Redis connection.\r\n\r\nIs this intentional or an oversight?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/193", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/193/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/193/events", "html_url": "https://github.com/jamesls/fakeredis/issues/193", "id": 330680169, "node_id": "MDU6SXNzdWUzMzA2ODAxNjk=", "number": 193, "title": "Unsupported keyword argument 'score_cast_func' to zrangebyscore()", "user": {"login": "fferrara", "id": 7924559, "node_id": "MDQ6VXNlcjc5MjQ1NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7924559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fferrara", "html_url": "https://github.com/fferrara", "followers_url": "https://api.github.com/users/fferrara/followers", "following_url": "https://api.github.com/users/fferrara/following{/other_user}", "gists_url": "https://api.github.com/users/fferrara/gists{/gist_id}", "starred_url": "https://api.github.com/users/fferrara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fferrara/subscriptions", "organizations_url": "https://api.github.com/users/fferrara/orgs", "repos_url": "https://api.github.com/users/fferrara/repos", "events_url": "https://api.github.com/users/fferrara/events{/privacy}", "received_events_url": "https://api.github.com/users/fferrara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-08T14:26:55Z", "updated_at": "2018-06-08T19:10:01Z", "closed_at": "2018-06-08T14:39:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the latest version of `redis-py`, [zrangebyscore() accepts a keyword argument called score_cast_func.](http://redis-py.readthedocs.io/en/latest/#redis.StrictRedis.zrangebyscore)\r\n\r\nFakeredis [does not support it yet](https://github.com/jamesls/fakeredis/blob/master/fakeredis.py#L1630-L1631).\r\n\r\nI'll do a PR ASAP.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/191", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/191/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/191/events", "html_url": "https://github.com/jamesls/fakeredis/issues/191", "id": 325359237, "node_id": "MDU6SXNzdWUzMjUzNTkyMzc=", "number": 191, "title": "__getitem__ behavior does not match redis-py", "user": {"login": "dnoetzel", "id": 38896508, "node_id": "MDQ6VXNlcjM4ODk2NTA4", "avatar_url": "https://avatars3.githubusercontent.com/u/38896508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnoetzel", "html_url": "https://github.com/dnoetzel", "followers_url": "https://api.github.com/users/dnoetzel/followers", "following_url": "https://api.github.com/users/dnoetzel/following{/other_user}", "gists_url": "https://api.github.com/users/dnoetzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnoetzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnoetzel/subscriptions", "organizations_url": "https://api.github.com/users/dnoetzel/orgs", "repos_url": "https://api.github.com/users/dnoetzel/repos", "events_url": "https://api.github.com/users/dnoetzel/events{/privacy}", "received_events_url": "https://api.github.com/users/dnoetzel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-22T15:55:53Z", "updated_at": "2018-05-22T16:27:11Z", "closed_at": "2018-05-22T16:27:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Environment:\r\n- Python 3.6.5\r\n- fakeredis-0.10.3\r\n- redis-2.10.6\r\n\r\nExample:\r\n```\r\n>>> from redis import StrictRedis\r\n>>> from fakeredis import FakeStrictRedis\r\n>>> \r\n>>> redis = StrictRedis(host='localhost', port=6379, decode_responses=True)\r\n>>> fakeredis = FakeStrictRedis(decode_responses=True)\r\n>>> redis['non-existent key']\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/dnoetzel/.local/share/virtualenvs/dnoetzel-8_UrYaNn/lib/python3.6/site-packages/redis/client.py\", line 986, in __getitem__\r\n    raise KeyError(name)\r\nKeyError: 'non-existent key'\r\n>>> print(fakeredis['non-existent key'])\r\nNone\r\n>>> \r\n```\r\n\r\nExpected behavior:\r\n`__getitem__` raises a `KeyError` when trying to fetch a non-existent key (as redis-py [does](https://github.com/andymccurdy/redis-py/blob/2035e9821ebf2d884f10928e9c88e17179ac4842/redis/client.py#L979))\r\nActual behavior:\r\n`__getitem__` returns `None`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/190", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/190/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/190/events", "html_url": "https://github.com/jamesls/fakeredis/issues/190", "id": 319396563, "node_id": "MDU6SXNzdWUzMTkzOTY1NjM=", "number": 190, "title": "Does not work with alpine?", "user": {"login": "qwIvan", "id": 7613160, "node_id": "MDQ6VXNlcjc2MTMxNjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7613160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qwIvan", "html_url": "https://github.com/qwIvan", "followers_url": "https://api.github.com/users/qwIvan/followers", "following_url": "https://api.github.com/users/qwIvan/following{/other_user}", "gists_url": "https://api.github.com/users/qwIvan/gists{/gist_id}", "starred_url": "https://api.github.com/users/qwIvan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qwIvan/subscriptions", "organizations_url": "https://api.github.com/users/qwIvan/orgs", "repos_url": "https://api.github.com/users/qwIvan/repos", "events_url": "https://api.github.com/users/qwIvan/events{/privacy}", "received_events_url": "https://api.github.com/users/qwIvan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-02T03:15:16Z", "updated_at": "2018-05-03T07:31:14Z", "closed_at": "2018-05-03T07:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/docker-library/python/issues/111", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/188", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/188/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/188/events", "html_url": "https://github.com/jamesls/fakeredis/issues/188", "id": 317428911, "node_id": "MDU6SXNzdWUzMTc0Mjg5MTE=", "number": 188, "title": "Import fails on osx, says it cannot find libc or msvcrt", "user": {"login": "shaleh", "id": 1377996, "node_id": "MDQ6VXNlcjEzNzc5OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1377996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shaleh", "html_url": "https://github.com/shaleh", "followers_url": "https://api.github.com/users/shaleh/followers", "following_url": "https://api.github.com/users/shaleh/following{/other_user}", "gists_url": "https://api.github.com/users/shaleh/gists{/gist_id}", "starred_url": "https://api.github.com/users/shaleh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shaleh/subscriptions", "organizations_url": "https://api.github.com/users/shaleh/orgs", "repos_url": "https://api.github.com/users/shaleh/repos", "events_url": "https://api.github.com/users/shaleh/events{/privacy}", "received_events_url": "https://api.github.com/users/shaleh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-24T23:23:10Z", "updated_at": "2018-04-25T18:44:05Z", "closed_at": "2018-04-25T18:44:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "libc.dylib exists but ctypes skips it. Possibly because it is a symlink.\r\n\r\nI added `find_library('System')` which is what libc links to and the import worked.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/187", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/187/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/187/events", "html_url": "https://github.com/jamesls/fakeredis/issues/187", "id": 312617876, "node_id": "MDU6SXNzdWUzMTI2MTc4NzY=", "number": 187, "title": "rpush edge-case behaves differently between fakeredis and real redis.", "user": {"login": "smitelli", "id": 935080, "node_id": "MDQ6VXNlcjkzNTA4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/935080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smitelli", "html_url": "https://github.com/smitelli", "followers_url": "https://api.github.com/users/smitelli/followers", "following_url": "https://api.github.com/users/smitelli/following{/other_user}", "gists_url": "https://api.github.com/users/smitelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/smitelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smitelli/subscriptions", "organizations_url": "https://api.github.com/users/smitelli/orgs", "repos_url": "https://api.github.com/users/smitelli/repos", "events_url": "https://api.github.com/users/smitelli/events{/privacy}", "received_events_url": "https://api.github.com/users/smitelli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-09T17:26:06Z", "updated_at": "2019-01-14T08:29:43Z", "closed_at": "2019-01-14T08:29:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Python 3.5.3\r\n* Redis 3.2.6 server\r\n* fakeredis-0.10.2\r\n* redis-2.10.6\r\n\r\nTest case:\r\n\r\n    from redis import StrictRedis\r\n    from fakeredis import FakeStrictRedis\r\n\r\n    redis = StrictRedis(host='localhost', port=6379, decode_responses=True)\r\n    fakeredis = FakeStrictRedis(decode_responses=True)\r\n    nothing = []\r\n\r\n    try:\r\n        redis.rpush('testkey', *nothing)\r\n        print('redis worked')\r\n    except:\r\n        print('redis raised')\r\n\r\n    try:\r\n        fakeredis.rpush('testkey', *nothing)\r\n        print('fakeredis worked')\r\n    except:\r\n        print('fakeredis raised')\r\n\r\nExpected output:\r\n\r\n    redis raised\r\n    fakeredis raised\r\n\r\nActual output:\r\n\r\n    redis raised\r\n    fakeredis worked\r\n\r\nDebates about whether or not it's appropriate to pass zero-length positional args this way, this is an inconsistency between fakeredis and real redis that bit us today. I would have to assume there are other commands that show similar differences, but I have not yet done an exhaustive search for them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/185", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/185/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/185/events", "html_url": "https://github.com/jamesls/fakeredis/issues/185", "id": 310802057, "node_id": "MDU6SXNzdWUzMTA4MDIwNTc=", "number": 185, "title": "flushall() doesn't clean everything", "user": {"login": "kedder", "id": 59499, "node_id": "MDQ6VXNlcjU5NDk5", "avatar_url": "https://avatars0.githubusercontent.com/u/59499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kedder", "html_url": "https://github.com/kedder", "followers_url": "https://api.github.com/users/kedder/followers", "following_url": "https://api.github.com/users/kedder/following{/other_user}", "gists_url": "https://api.github.com/users/kedder/gists{/gist_id}", "starred_url": "https://api.github.com/users/kedder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kedder/subscriptions", "organizations_url": "https://api.github.com/users/kedder/orgs", "repos_url": "https://api.github.com/users/kedder/repos", "events_url": "https://api.github.com/users/kedder/events{/privacy}", "received_events_url": "https://api.github.com/users/kedder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-03T11:43:44Z", "updated_at": "2018-04-03T12:16:27Z", "closed_at": "2018-04-03T12:16:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When database contains expired keys, `flushall()` doesn't completely clean the database:\r\n\r\n```\r\nPython 2.7.14 (default, Sep 23 2017, 22:06:14) \r\n[GCC 7.2.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import fakeredis\r\n>>> r = fakeredis.FakeStrictRedis()\r\n>>> r.set('test', 1)\r\nTrue\r\n>>> r.set('test2', 2)\r\nTrue\r\n>>> r.expire('test', -1)\r\nTrue\r\n>>> r.flushall()\r\nTrue\r\n>>> r.get('test2')\r\n'2'\r\n```\r\n\r\nThe last sentece is expected to return None, because `flushall()` was executed before. However it left the `test2` value around.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/182", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/182/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/182/events", "html_url": "https://github.com/jamesls/fakeredis/issues/182", "id": 307934854, "node_id": "MDU6SXNzdWUzMDc5MzQ4NTQ=", "number": 182, "title": "Pattern matching does not match redis behaviour", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-03-23T08:05:49Z", "updated_at": "2018-04-03T12:17:24Z", "closed_at": "2018-04-03T12:17:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The implementation of KEYS and SCAN uses `fnmatch.fnmatch` to match the pattern. This has a few problems:\r\n- At a minimum it should use fnmatchcase to avoid being case-insensitive on some OSes.\r\n- It does not support backslash escapes.\r\n- It uses `!` instead of `^` for negated\r\n- It seems to handle invalid ranges like `[e-a]` differently (raises an exception, whereas redis does something unspecified I still need to work out).\r\n\r\nIt also operates by turning both arguments into native strings using the system default encoding, even though they might not be valid in that encoding.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/181", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/181/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/181/events", "html_url": "https://github.com/jamesls/fakeredis/issues/181", "id": 307424887, "node_id": "MDU6SXNzdWUzMDc0MjQ4ODc=", "number": 181, "title": "upgrade Twine & other packaging dependencies?", "user": {"login": "brainwane", "id": 842790, "node_id": "MDQ6VXNlcjg0Mjc5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/842790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brainwane", "html_url": "https://github.com/brainwane", "followers_url": "https://api.github.com/users/brainwane/followers", "following_url": "https://api.github.com/users/brainwane/following{/other_user}", "gists_url": "https://api.github.com/users/brainwane/gists{/gist_id}", "starred_url": "https://api.github.com/users/brainwane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brainwane/subscriptions", "organizations_url": "https://api.github.com/users/brainwane/orgs", "repos_url": "https://api.github.com/users/brainwane/repos", "events_url": "https://api.github.com/users/brainwane/events{/privacy}", "received_events_url": "https://api.github.com/users/brainwane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-21T21:29:15Z", "updated_at": "2018-03-22T14:42:58Z", "closed_at": "2018-03-22T14:42:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I'm a [Twine](https://twine.readthedocs.io) maintainer; thanks for using Twine. I noticed you've pinned some old versions of Twine and other packaging dependencies in `requirements-dev.txt`. Twine [has changes in 1.11.0](https://twine.readthedocs.io/en/latest/changelog.html) that you might find useful, and I hope you'll upgrade. If you have any trouble upgrading, please do [let us know](https://github.com/pypa/twine/issues).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/180", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/180/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/180/events", "html_url": "https://github.com/jamesls/fakeredis/issues/180", "id": 306334471, "node_id": "MDU6SXNzdWUzMDYzMzQ0NzE=", "number": 180, "title": "zadd with no member-score pairs should fail", "user": {"login": "jbaum-cmcrc", "id": 16146806, "node_id": "MDQ6VXNlcjE2MTQ2ODA2", "avatar_url": "https://avatars2.githubusercontent.com/u/16146806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbaum-cmcrc", "html_url": "https://github.com/jbaum-cmcrc", "followers_url": "https://api.github.com/users/jbaum-cmcrc/followers", "following_url": "https://api.github.com/users/jbaum-cmcrc/following{/other_user}", "gists_url": "https://api.github.com/users/jbaum-cmcrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbaum-cmcrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbaum-cmcrc/subscriptions", "organizations_url": "https://api.github.com/users/jbaum-cmcrc/orgs", "repos_url": "https://api.github.com/users/jbaum-cmcrc/repos", "events_url": "https://api.github.com/users/jbaum-cmcrc/events{/privacy}", "received_events_url": "https://api.github.com/users/jbaum-cmcrc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-19T05:06:12Z", "updated_at": "2018-03-23T07:47:36Z", "closed_at": "2018-03-23T07:47:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When zadd is called with no member-score pairs, FakeStrictRedis returns 0 but StrictRedis raises an exception.\r\n\r\nExpectation: FakeStrictRedis.zadd should raise an exception when called with zero member-score pairs, to match StrictRedis.\r\n\r\n```\r\n>>> from fakeredis import FakeStrictRedis\r\n>>> from redis import StrictRedis\r\n>>> \r\n>>> fake = FakeStrictRedis()\r\n>>> real = StrictRedis(...)\r\n>>> \r\n>>> fake.zadd('foo')\r\n0\r\n>>> real.zadd('foo')\r\nTraceback (most recent call last):\r\n  ...\r\nredis.exceptions.ResponseError: wrong number of arguments for 'zadd' command\r\n>>> \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/176", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/176/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/176/events", "html_url": "https://github.com/jamesls/fakeredis/issues/176", "id": 293892752, "node_id": "MDU6SXNzdWUyOTM4OTI3NTI=", "number": 176, "title": "AttributeError: 'FakeStrictRedis' object has no attribute 'eval'", "user": {"login": "Panter7777", "id": 9367120, "node_id": "MDQ6VXNlcjkzNjcxMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9367120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Panter7777", "html_url": "https://github.com/Panter7777", "followers_url": "https://api.github.com/users/Panter7777/followers", "following_url": "https://api.github.com/users/Panter7777/following{/other_user}", "gists_url": "https://api.github.com/users/Panter7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/Panter7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Panter7777/subscriptions", "organizations_url": "https://api.github.com/users/Panter7777/orgs", "repos_url": "https://api.github.com/users/Panter7777/repos", "events_url": "https://api.github.com/users/Panter7777/events{/privacy}", "received_events_url": "https://api.github.com/users/Panter7777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-02T13:44:38Z", "updated_at": "2018-03-12T16:21:24Z", "closed_at": "2018-02-13T09:38:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "fakeredis==0.9.0\r\nDjango==1.11.5\r\nredis==2.10.6\r\ndjango-redis==4.8.0\r\n\r\nuse cache from django `from django.core.cache import cache`\r\n```python \r\n# settings.py\r\nCACHES = {\r\n    'default': {\r\n        'BACKEND': 'django_redis.cache.RedisCache',\r\n        'LOCATION': REDIS_URL,\r\n        'OPTIONS': {\r\n            'CLIENT_CLASS': 'django_redis.client.DefaultClient',\r\n            'SERIALIZER': 'django_redis.serializers.json.JSONSerializer',\r\n        },\r\n        'KEY_PREFIX': 'backend',\r\n    }\r\n}\r\n# Settings for tests\r\nif 'test' in sys.argv[1:]:\r\n    import fakeredis\r\n    CACHES['default']['OPTIONS']['REDIS_CLIENT_CLASS'] = \"fakeredis.FakeStrictRedis\"\r\n\r\n````\r\n```python\r\nFile \".../customer/views.py\", line 111, in login\r\n    cache.incr(key)\r\n  File \".../lib/python3.5/site-packages/django_redis/cache.py\", line 33, in _decorator\r\n    return method(self, *args, **kwargs)\r\n  File \".../lib/python3.5/site-packages/django_redis/cache.py\", line 117, in incr\r\n    return self.client.incr(*args, **kwargs)\r\n  File \".../lib/python3.5/site-packages/django_redis/client/default.py\", line 427, in incr\r\n    return self._incr(key=key, delta=delta, version=version, client=client)\r\n  File \".../lib/python3.5/site-packages/django_redis/client/default.py\", line 398, in _incr\r\n    value = client.eval(lua, 1, key, delta)\r\nAttributeError: 'FakeStrictRedis' object has no attribute 'eval'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/165", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/165/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/165/events", "html_url": "https://github.com/jamesls/fakeredis/issues/165", "id": 272594490, "node_id": "MDU6SXNzdWUyNzI1OTQ0OTA=", "number": 165, "title": "linsert implementation is incomplete", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-09T14:59:58Z", "updated_at": "2018-03-22T15:08:08Z", "closed_at": "2018-03-22T15:08:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It\r\n- does not examine `where` (it only implements `BEFORE`)\r\n- does not handle the case of the pivot not being in the list.\r\n\r\nI have a fix in a branch I am preparing for PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/164", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/164/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/164/events", "html_url": "https://github.com/jamesls/fakeredis/issues/164", "id": 272594186, "node_id": "MDU6SXNzdWUyNzI1OTQxODY=", "number": 164, "title": "Several incr/decr functions do not convert the value to bytes", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-09T14:59:07Z", "updated_at": "2017-11-10T14:28:54Z", "closed_at": "2017-11-10T14:28:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The implementations of `decr`, `hincrby` and `hincrbyfloat` store the int/float value internally, instead of the stringified version. This can lead to errors e.g.\r\n```python\r\n>>> f = fakeredis.FakeStrictRedis()\r\n>>> f.decr('key', 1)\r\n-1\r\n>>> f.append('key', 'x')\r\nTypeError: unsupported operand type(s) for +=: 'int' and 'str'\r\n```\r\nI have a fix in a branch I am preparing for PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/163", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/163/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/163/events", "html_url": "https://github.com/jamesls/fakeredis/issues/163", "id": 272593378, "node_id": "MDU6SXNzdWUyNzI1OTMzNzg=", "number": 163, "title": "getset does not to_bytes the value", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-09T14:56:55Z", "updated_at": "2018-03-22T15:07:45Z", "closed_at": "2018-03-22T15:07:45Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In 0.9.0, the implementation of `getset` doesn't pass the value through `to_bytes` (unlike `set`).\r\n\r\nThis leads to problems like the following:\r\n```python\r\n>>> f = fakeredis.FakeStrictRedis()\r\n>>> f.getset('key', 3)\r\n>>> f.append('key', 'hello')\r\nTypeError: unsupported operand type(s) for +=: 'int' and 'str'\r\n```\r\n\r\nI have a fix in a branch I am preparing for a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/162", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/162/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/162/events", "html_url": "https://github.com/jamesls/fakeredis/issues/162", "id": 265788191, "node_id": "MDU6SXNzdWUyNjU3ODgxOTE=", "number": 162, "title": "Publish changelog", "user": {"login": "peterbe", "id": 26739, "node_id": "MDQ6VXNlcjI2NzM5", "avatar_url": "https://avatars2.githubusercontent.com/u/26739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterbe", "html_url": "https://github.com/peterbe", "followers_url": "https://api.github.com/users/peterbe/followers", "following_url": "https://api.github.com/users/peterbe/following{/other_user}", "gists_url": "https://api.github.com/users/peterbe/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterbe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterbe/subscriptions", "organizations_url": "https://api.github.com/users/peterbe/orgs", "repos_url": "https://api.github.com/users/peterbe/repos", "events_url": "https://api.github.com/users/peterbe/events{/privacy}", "received_events_url": "https://api.github.com/users/peterbe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-16T14:22:39Z", "updated_at": "2018-03-22T15:07:32Z", "closed_at": "2018-03-22T15:07:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be wonderful to have a change log as versions increment. For example, pyup made [a PR on my repo](https://github.com/mozilla-services/tecken/pull/473) and it fails the include a change log for going from 0.8.2 to 0.9.0. The tests fail and now I need to dig through the commit history to find what might be the reason. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/159", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/159/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/159/events", "html_url": "https://github.com/jamesls/fakeredis/issues/159", "id": 255791390, "node_id": "MDU6SXNzdWUyNTU3OTEzOTA=", "number": 159, "title": "FakeRedis does not have a close method", "user": {"login": "pawel-lmcb", "id": 26512216, "node_id": "MDQ6VXNlcjI2NTEyMjE2", "avatar_url": "https://avatars2.githubusercontent.com/u/26512216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pawel-lmcb", "html_url": "https://github.com/pawel-lmcb", "followers_url": "https://api.github.com/users/pawel-lmcb/followers", "following_url": "https://api.github.com/users/pawel-lmcb/following{/other_user}", "gists_url": "https://api.github.com/users/pawel-lmcb/gists{/gist_id}", "starred_url": "https://api.github.com/users/pawel-lmcb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pawel-lmcb/subscriptions", "organizations_url": "https://api.github.com/users/pawel-lmcb/orgs", "repos_url": "https://api.github.com/users/pawel-lmcb/repos", "events_url": "https://api.github.com/users/pawel-lmcb/events{/privacy}", "received_events_url": "https://api.github.com/users/pawel-lmcb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-07T01:55:45Z", "updated_at": "2018-03-23T08:19:05Z", "closed_at": "2018-03-23T08:19:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Settings this up for the testing environment in my django app, I get the following:\r\n(in settings.py)\r\n  CACHES = {\r\n    \"default\": {\r\n      \"BACKEND\" : \"fakeredis.FakeRedis\",\r\n      \"OPTIONS\": {\r\n        \"REDIS_CLIENT_CLASS\": \"fakeredis.FakeRedis\",\r\n      }\r\n    }\r\n  }\r\n\r\nError\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/site-packages/mock/mock.py\", line 1305, in patched\r\n    return func(*args, **keywargs)\r\n  File \"/Users/<removed>/Development/<removed>/aws/tests.py\", line 81, in test_aws_credentials_retry\r\n    response = self.client.post('<removed>', data=data)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/test/client.py\", line 541, in post\r\n    secure=secure, **extra)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/test/client.py\", line 343, in post\r\n    secure=secure, **extra)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/test/client.py\", line 409, in generic\r\n    return self.request(**r)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/test/client.py\", line 476, in request\r\n    response = self.handler(environ)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/test/client.py\", line 158, in __call__\r\n    response.close()                    # will fire request_finished\r\n  File \"/usr/local/lib/python2.7/site-packages/django/http/response.py\", line 254, in close\r\n    signals.request_finished.send(sender=self._handler_class)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/dispatch/dispatcher.py\", line 191, in send\r\n    response = receiver(signal=self, sender=sender, **named)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/core/cache/__init__.py\", line 123, in close_caches\r\n    cache.close()\r\nAttributeError: 'FakeRedis' object has no attribute 'close'\r\n\r\nAdding in close method to fakeredis.py like below solves this for me\r\n\r\ndef close():\r\n  pass\r\n\r\nHowever I don't want to fork, and in case I am doing something wrong wanted to raise this here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/158", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/158/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/158/events", "html_url": "https://github.com/jamesls/fakeredis/issues/158", "id": 247602454, "node_id": "MDU6SXNzdWUyNDc2MDI0NTQ=", "number": 158, "title": "TypeError: can't compare offset-naive and offset-aware datetimes", "user": {"login": "TvoroG", "id": 1325161, "node_id": "MDQ6VXNlcjEzMjUxNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1325161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TvoroG", "html_url": "https://github.com/TvoroG", "followers_url": "https://api.github.com/users/TvoroG/followers", "following_url": "https://api.github.com/users/TvoroG/following{/other_user}", "gists_url": "https://api.github.com/users/TvoroG/gists{/gist_id}", "starred_url": "https://api.github.com/users/TvoroG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TvoroG/subscriptions", "organizations_url": "https://api.github.com/users/TvoroG/orgs", "repos_url": "https://api.github.com/users/TvoroG/repos", "events_url": "https://api.github.com/users/TvoroG/events{/privacy}", "received_events_url": "https://api.github.com/users/TvoroG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-03T06:14:14Z", "updated_at": "2019-01-14T08:28:20Z", "closed_at": "2019-01-14T08:28:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Thanks for fakeredis!\r\n\r\nThere is a problem with timezone-aware datetimes. This test will fail on fakeredis but it pass on real one:\r\n```python\r\ndef test_expire_should_expire_key_by_aware_datetime(self):\r\n    from datetime import timezone\r\n    self.redis.set('foo', 'bar')\r\n    self.assertEqual(self.redis.get('foo'), b'bar')\r\n    self.redis.expireat('foo', datetime.utcnow().replace(tzinfo=timezone.utc) + timedelta(seconds=1))\r\n    sleep(1.5)\r\n    self.assertEqual(self.redis.get('foo'), None)\r\n```\r\n```\r\n======================================================================\r\nERROR: test_expire_should_expire_key_by_aware_datetime (test_fakeredis.TestFakeRedis)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/fakeredis/test_fakeredis.py\", line 2678, in test_expire_should_expire_key_by_aware_datetime\r\n    self.redis.set('foo', 'bar')\r\n  File \"/fakeredis/fakeredis.py\", line 315, in get\r\n    value = self._db.get(name)\r\n  File \"/.virtualenvs/fakeredis/lib/python3.5/_collections_abc.py\", line 597, in get\r\n    return self[key]\r\n  File \"/fakeredis/fakeredis.py\", line 116, in __getitem__\r\n    self._update_expired_keys()\r\n  File \"/fakeredis/fakeredis.py\", line 150, in _update_expired_keys\r\n    if now > self._ex_keys[key]:\r\nTypeError: can't compare offset-naive and offset-aware datetimes\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/157", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/157/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/157/events", "html_url": "https://github.com/jamesls/fakeredis/issues/157", "id": 246055143, "node_id": "MDU6SXNzdWUyNDYwNTUxNDM=", "number": 157, "title": "setrange not implemented", "user": {"login": "jpunwin", "id": 1405477, "node_id": "MDQ6VXNlcjE0MDU0Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1405477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpunwin", "html_url": "https://github.com/jpunwin", "followers_url": "https://api.github.com/users/jpunwin/followers", "following_url": "https://api.github.com/users/jpunwin/following{/other_user}", "gists_url": "https://api.github.com/users/jpunwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpunwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpunwin/subscriptions", "organizations_url": "https://api.github.com/users/jpunwin/orgs", "repos_url": "https://api.github.com/users/jpunwin/repos", "events_url": "https://api.github.com/users/jpunwin/events{/privacy}", "received_events_url": "https://api.github.com/users/jpunwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-27T14:18:00Z", "updated_at": "2017-10-12T15:20:41Z", "closed_at": "2017-10-12T15:20:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nJust a note that the setrange is not implemented (just a pass)\r\n\r\nCould possibly be implemented with:\r\n\r\n```\r\n setrange(self, name, offset, value):\r\n     _tmp = self.get(name)\r\n     if not _tmp:\r\n         _tmp = \"\"\r\n     _tmp = _tmp[0:offset] + value + _tmp[offset+len(value):]\r\n     self.set(name, _tmp)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/155", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/155/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/155/events", "html_url": "https://github.com/jamesls/fakeredis/issues/155", "id": 240542977, "node_id": "MDU6SXNzdWUyNDA1NDI5Nzc=", "number": 155, "title": "Empty sets still exist", "user": {"login": "tapple", "id": 140755, "node_id": "MDQ6VXNlcjE0MDc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/140755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tapple", "html_url": "https://github.com/tapple", "followers_url": "https://api.github.com/users/tapple/followers", "following_url": "https://api.github.com/users/tapple/following{/other_user}", "gists_url": "https://api.github.com/users/tapple/gists{/gist_id}", "starred_url": "https://api.github.com/users/tapple/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tapple/subscriptions", "organizations_url": "https://api.github.com/users/tapple/orgs", "repos_url": "https://api.github.com/users/tapple/repos", "events_url": "https://api.github.com/users/tapple/events{/privacy}", "received_events_url": "https://api.github.com/users/tapple/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-05T05:41:39Z", "updated_at": "2018-03-22T14:29:03Z", "closed_at": "2018-03-22T14:29:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "sets that have every element removed should answer False to exists, and should not be returned by keys or scan. However, they do. I don't know if sorted sets, lists, hashes, or strings also have this problem\r\n\r\nIn [1]: import fakeredis\r\nIn [2]: import redis\r\nIn [3]: r = fakeredis.FakeStrictRedis()\r\nIn [4]: r.sadd('s', 1)\r\nOut[4]: 1\r\nIn [5]: assert r.exists('s')\r\nIn [8]: assert b's' in r.keys()\r\nIn [9]: r.srem('s', 1)\r\nOut[9]: 1\r\nIn [10]: assert not r.exists('s')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAssertionError\r\n\r\nIn [11]: assert b's' not in r.keys()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAssertionError\r\n\r\nIn [12]: r = redis.StrictRedis()\r\nIn [13]: r.sadd('s', 1)\r\nOut[13]: 1\r\nIn [14]: assert r.exists('s')\r\nIn [15]: assert b's' in r.keys()\r\nIn [16]: r.srem('s', 1)\r\nOut[16]: 1\r\nIn [17]: assert not r.exists('s')\r\nIn [18]: assert b's' not in r.keys()\r\nIn [19]:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/153", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/153/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/153/events", "html_url": "https://github.com/jamesls/fakeredis/issues/153", "id": 239637640, "node_id": "MDU6SXNzdWUyMzk2Mzc2NDA=", "number": 153, "title": "Expire not resetting key data to None", "user": {"login": "ibigpapa", "id": 694054, "node_id": "MDQ6VXNlcjY5NDA1NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/694054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibigpapa", "html_url": "https://github.com/ibigpapa", "followers_url": "https://api.github.com/users/ibigpapa/followers", "following_url": "https://api.github.com/users/ibigpapa/following{/other_user}", "gists_url": "https://api.github.com/users/ibigpapa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibigpapa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibigpapa/subscriptions", "organizations_url": "https://api.github.com/users/ibigpapa/orgs", "repos_url": "https://api.github.com/users/ibigpapa/repos", "events_url": "https://api.github.com/users/ibigpapa/events{/privacy}", "received_events_url": "https://api.github.com/users/ibigpapa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-29T23:22:11Z", "updated_at": "2018-03-22T15:06:21Z", "closed_at": "2018-03-22T15:06:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's my code snippet to reproduce the issue.\r\n\r\n```python\r\nimport time\r\n\r\nfrom fakeredis import FakeStrictRedis\r\nfrom pytest import fixture\r\n\r\n@fixture()\r\ndef mock_redis():\r\n    r = FakeStrictRedis()\r\n    yield r\r\n    r.flushall()\r\n\r\n\r\ndef test_force_expire(self, mock_redis: FakeStrictRedis):\r\n    mock_redis.set('Monty', 'Help help i am being oppressed', ex=300)\r\n    mock_redis.expire('Monty', -1)\r\n    time.sleep(5)\r\n    assert mock_redis.get('Monty') is None\r\n```\r\nProduces this AssertionError\r\n```python\r\n>       assert mock_redis.get('Monty') is None\r\nE       AssertionError: assert b'Help help i am being oppressed' is None\r\nE        +  where b'Help help i am being oppressed' = <bound method FakeStrictRedis.get of <fakeredis.FakeStrictRedis object at 0x7f76b6e66dd8>>('Monty')\r\nE        +    where <bound method FakeStrictRedis.get of <fakeredis.FakeStrictRedis object at 0x7f76b6e66dd8>> = <fakeredis.FakeStrictRedis object at 0x7f76b6e66dd8>.get\r\ntests/core/test_redis.py:187: AssertionError\r\n```\r\n\r\nVersion:\r\n```python\r\n>>> fakeredis.__version__\r\n'0.8.2'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/146", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/146/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/146/events", "html_url": "https://github.com/jamesls/fakeredis/issues/146", "id": 213714055, "node_id": "MDU6SXNzdWUyMTM3MTQwNTU=", "number": 146, "title": "Pubsub messages and channel names are forced to be ASCII strings on Python 2", "user": {"login": "ludwigschwardt", "id": 392144, "node_id": "MDQ6VXNlcjM5MjE0NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/392144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ludwigschwardt", "html_url": "https://github.com/ludwigschwardt", "followers_url": "https://api.github.com/users/ludwigschwardt/followers", "following_url": "https://api.github.com/users/ludwigschwardt/following{/other_user}", "gists_url": "https://api.github.com/users/ludwigschwardt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ludwigschwardt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ludwigschwardt/subscriptions", "organizations_url": "https://api.github.com/users/ludwigschwardt/orgs", "repos_url": "https://api.github.com/users/ludwigschwardt/repos", "events_url": "https://api.github.com/users/ludwigschwardt/events{/privacy}", "received_events_url": "https://api.github.com/users/ludwigschwardt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-13T09:35:33Z", "updated_at": "2018-03-22T15:03:03Z", "closed_at": "2018-03-22T15:03:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Pubsub message strings (and channel names) are explicitly encoded to the default encoding, which is a problem for the usual Python 2 strings.\r\n\r\nHere is a simple example that breaks fakeredis but not redis-py on Python 2.7.13:\r\n\r\n```Python\r\nr = fakeredis.FakeStrictRedis()\r\np = r.pubsub()\r\np.subscribe('\\xff')\r\n# UnicodeDecodeError: 'ascii' codec can't decode byte 0xff in position 0: ordinal not in range(128)\r\np.subscribe('test')\r\nr.publish('test', '\\xff')\r\n# UnicodeDecodeError: 'ascii' codec can't decode byte 0xff in position 0: ordinal not in range(128)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/145", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/145/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/145/events", "html_url": "https://github.com/jamesls/fakeredis/issues/145", "id": 213009590, "node_id": "MDU6SXNzdWUyMTMwMDk1OTA=", "number": 145, "title": "expire / _expire: accept 'long' also as time", "user": {"login": "agroszer", "id": 350912, "node_id": "MDQ6VXNlcjM1MDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/350912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroszer", "html_url": "https://github.com/agroszer", "followers_url": "https://api.github.com/users/agroszer/followers", "following_url": "https://api.github.com/users/agroszer/following{/other_user}", "gists_url": "https://api.github.com/users/agroszer/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroszer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroszer/subscriptions", "organizations_url": "https://api.github.com/users/agroszer/orgs", "repos_url": "https://api.github.com/users/agroszer/repos", "events_url": "https://api.github.com/users/agroszer/events{/privacy}", "received_events_url": "https://api.github.com/users/agroszer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-09T11:29:01Z", "updated_at": "2018-03-23T08:14:49Z", "closed_at": "2018-03-23T08:14:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "redis-py does not check/fail either", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/141", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/141/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/141/events", "html_url": "https://github.com/jamesls/fakeredis/issues/141", "id": 204398204, "node_id": "MDU6SXNzdWUyMDQzOTgyMDQ=", "number": 141, "title": "`incrby` rejects string amounts", "user": {"login": "eswald", "id": 67649, "node_id": "MDQ6VXNlcjY3NjQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/67649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eswald", "html_url": "https://github.com/eswald", "followers_url": "https://api.github.com/users/eswald/followers", "following_url": "https://api.github.com/users/eswald/following{/other_user}", "gists_url": "https://api.github.com/users/eswald/gists{/gist_id}", "starred_url": "https://api.github.com/users/eswald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eswald/subscriptions", "organizations_url": "https://api.github.com/users/eswald/orgs", "repos_url": "https://api.github.com/users/eswald/repos", "events_url": "https://api.github.com/users/eswald/events{/privacy}", "received_events_url": "https://api.github.com/users/eswald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-31T19:21:30Z", "updated_at": "2019-01-14T08:28:59Z", "closed_at": "2019-01-14T08:28:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "`redis.StrictRedis.incrby` accepts strings for its `amount` parameter, because the network protocol ends up turning it into a string anyway.  However, FakeStrictRedis does not, requiring that it be an actual `int` instance.\r\n\r\nGranted, being stricter guarantees that Redis will work whenever FakeRedis does, but it's still a surprising difference.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/135", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/135/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/135/events", "html_url": "https://github.com/jamesls/fakeredis/issues/135", "id": 195414472, "node_id": "MDU6SXNzdWUxOTU0MTQ0NzI=", "number": 135, "title": "Scan includes expired keys", "user": {"login": "tommikaikkonen", "id": 2487359, "node_id": "MDQ6VXNlcjI0ODczNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2487359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommikaikkonen", "html_url": "https://github.com/tommikaikkonen", "followers_url": "https://api.github.com/users/tommikaikkonen/followers", "following_url": "https://api.github.com/users/tommikaikkonen/following{/other_user}", "gists_url": "https://api.github.com/users/tommikaikkonen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommikaikkonen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommikaikkonen/subscriptions", "organizations_url": "https://api.github.com/users/tommikaikkonen/orgs", "repos_url": "https://api.github.com/users/tommikaikkonen/repos", "events_url": "https://api.github.com/users/tommikaikkonen/events{/privacy}", "received_events_url": "https://api.github.com/users/tommikaikkonen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 425476483, "node_id": "MDU6TGFiZWw0MjU0NzY0ODM=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/HelpWanted", "name": "HelpWanted", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-14T01:11:15Z", "updated_at": "2018-04-03T12:10:01Z", "closed_at": "2018-04-03T12:10:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is the desired functionality, but using `scan` and `scan_iter` includes expired keys.\r\n\r\nHere is how to reproduce (just save to file and run with python3)\r\n\r\n```python\r\nfrom fakeredis import FakeStrictRedis\r\nfrom time import sleep\r\n\r\n\r\ndef main():\r\n    redis = FakeStrictRedis()\r\n    redis.set('expiringkey', 'value')\r\n    redis.expire('expiringkey', 0)\r\n\r\n    sleep(1)\r\n\r\n    keys = list(redis.scan_iter())\r\n    print(keys)  # prints [b'expiringkey'], expected []\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n\r\n```\r\n\r\nLooks like the culprit is [the `__iter__` implementation of `_StrKeyDict`](https://github.com/jamesls/fakeredis/blob/master/fakeredis.py#L127), which doesn't call `self._update_expired_keys()` like `__getitem__` does. I suppose it should be called before returning the iterator, resulting in keys being expired at the start of each `scan` call.\r\n\r\nIf this is indeed a bug and my solution sounds good, I can submit a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/132", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/132/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/132/events", "html_url": "https://github.com/jamesls/fakeredis/issues/132", "id": 184061770, "node_id": "MDU6SXNzdWUxODQwNjE3NzA=", "number": 132, "title": "srandmember does not support `number` argument", "user": {"login": "RossLarner", "id": 12039474, "node_id": "MDQ6VXNlcjEyMDM5NDc0", "avatar_url": "https://avatars3.githubusercontent.com/u/12039474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RossLarner", "html_url": "https://github.com/RossLarner", "followers_url": "https://api.github.com/users/RossLarner/followers", "following_url": "https://api.github.com/users/RossLarner/following{/other_user}", "gists_url": "https://api.github.com/users/RossLarner/gists{/gist_id}", "starred_url": "https://api.github.com/users/RossLarner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RossLarner/subscriptions", "organizations_url": "https://api.github.com/users/RossLarner/orgs", "repos_url": "https://api.github.com/users/RossLarner/repos", "events_url": "https://api.github.com/users/RossLarner/events{/privacy}", "received_events_url": "https://api.github.com/users/RossLarner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 425476483, "node_id": "MDU6TGFiZWw0MjU0NzY0ODM=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/HelpWanted", "name": "HelpWanted", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-19T20:11:20Z", "updated_at": "2018-03-22T15:00:27Z", "closed_at": "2018-03-22T15:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the great library! It would be fantastic if fakeredis supported the optional `number` argument to `srandmember`, returning a list of `number` random members of the given set (available in Redis 2.6+)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/129", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/129/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/129/events", "html_url": "https://github.com/jamesls/fakeredis/issues/129", "id": 178108880, "node_id": "MDU6SXNzdWUxNzgxMDg4ODA=", "number": 129, "title": " AttributeError: 'CacheKey' object has no attribute 'encode'", "user": {"login": "cleder", "id": 1218010, "node_id": "MDQ6VXNlcjEyMTgwMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1218010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cleder", "html_url": "https://github.com/cleder", "followers_url": "https://api.github.com/users/cleder/followers", "following_url": "https://api.github.com/users/cleder/following{/other_user}", "gists_url": "https://api.github.com/users/cleder/gists{/gist_id}", "starred_url": "https://api.github.com/users/cleder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cleder/subscriptions", "organizations_url": "https://api.github.com/users/cleder/orgs", "repos_url": "https://api.github.com/users/cleder/repos", "events_url": "https://api.github.com/users/cleder/events{/privacy}", "received_events_url": "https://api.github.com/users/cleder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 105266355, "node_id": "MDU6TGFiZWwxMDUyNjYzNTU=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/Pending", "name": "Pending", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-20T16:24:34Z", "updated_at": "2018-06-10T11:59:08Z", "closed_at": "2018-06-10T11:59:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "core/models.py:2535: in save\n    return super(Topic, self).save(_args, *_kwargs)\ncore/models.py:293: in save\n    return super(TimestampedBase, self).save(_args, *_kwargs)\n../.virtualenvs/primarysite/local/lib/python2.7/site-packages/django/db/models/base.py:734: in save\n    force_update=force_update, update_fields=update_fields)\n../.virtualenvs/primarysite/local/lib/python2.7/site-packages/django/db/models/base.py:771: in save_base\n    update_fields=update_fields, raw=raw, using=using)\n../.virtualenvs/primarysite/local/lib/python2.7/site-packages/django/dispatch/dispatcher.py:189: in send\n    response = receiver(signal=self, sender=sender, *_named)\ncore/signal_handlers/cache_signals.py:27: in invalidate_navigation_cache\n    invalidate_all_topic_menu_node_cache(site_id=instance.site.id)\ncore/utils/caching.py:120: in invalidate_all_topic_menu_node_cache\n    cache.delete_pattern(cache_key_pattern)\n../.virtualenvs/primarysite/local/lib/python2.7/site-packages/django_redis/cache.py:32: in _decorator\n    return method(self, *args, *_kwargs)\n../.virtualenvs/primarysite/local/lib/python2.7/site-packages/django_redis/cache.py:95: in delete_pattern\n    return self.client.delete_pattern(_args, *_kwargs)\n../.virtualenvs/primarysite/local/lib/python2.7/site-packages/django_redis/client/default.py:262: in delete_pattern\n    for key in client.scan_iter(pattern):\n../.virtualenvs/primarysite/local/lib/python2.7/site-packages/fakeredis.py:1574: in scan_iter\n    cursor, data = self.scan(cursor=cursor, match=match, count=count)\n../.virtualenvs/primarysite/local/lib/python2.7/site-packages/fakeredis.py:1558: in scan\n    return self._scan(self.keys(), int(cursor), match, count or 10)\n../.virtualenvs/primarysite/local/lib/python2.7/site-packages/fakeredis.py:1551: in _scan\n    if not match or fnmatch.fnmatch(to_native(val), to_native(match)):\n\n---\n\nx = <django_redis.util.CacheKey object at 0x8dd1090>, charset = 'ascii', errors = 'strict'\n\n```\ndef to_native(x, charset=sys.getdefaultencoding(), errors='strict'):\n    if x is None or isinstance(x, str):\n        return x\n```\n\n> ```\n>   return x.encode(charset, errors)\n> ```\n> \n> E       AttributeError: 'CacheKey' object has no attribute 'encode'\n\n../.virtualenvs/primarysite/local/lib/python2.7/site-packages/fakeredis.py:56: AttributeError\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/125", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/125/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/125/events", "html_url": "https://github.com/jamesls/fakeredis/issues/125", "id": 172528304, "node_id": "MDU6SXNzdWUxNzI1MjgzMDQ=", "number": 125, "title": "TypeError: unsupported operand type(s) for |=: '_Hash' and 'set'", "user": {"login": "seperman", "id": 2314797, "node_id": "MDQ6VXNlcjIzMTQ3OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2314797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seperman", "html_url": "https://github.com/seperman", "followers_url": "https://api.github.com/users/seperman/followers", "following_url": "https://api.github.com/users/seperman/following{/other_user}", "gists_url": "https://api.github.com/users/seperman/gists{/gist_id}", "starred_url": "https://api.github.com/users/seperman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seperman/subscriptions", "organizations_url": "https://api.github.com/users/seperman/orgs", "repos_url": "https://api.github.com/users/seperman/repos", "events_url": "https://api.github.com/users/seperman/events{/privacy}", "received_events_url": "https://api.github.com/users/seperman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-22T19:00:17Z", "updated_at": "2016-08-22T19:14:24Z", "closed_at": "2016-08-22T19:14:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error when using `sadd` **only** when I have already used `hmset` on the same Redis key. It comes from this line:\n\n``` py\nfakeredis.py(903)sadd()\n    901         a_set = self._db.setdefault(name, set())\n    902         card = len(a_set)\n--> 903         a_set |= set(to_bytes(x) for x in values)\n```\n\nBasically a_set becomes `_Hash` and thus can't do union with `set(to_bytes(x) for x in values)`.\n\nThis happens while running tests. My assumption is that eventhough I'm creating a new Fakeredis for each test in test's `setUp`, you are using a global object that keeps the key type from one test to the other.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/124", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/124/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/124/events", "html_url": "https://github.com/jamesls/fakeredis/issues/124", "id": 172485224, "node_id": "MDU6SXNzdWUxNzI0ODUyMjQ=", "number": 124, "title": "deleting key before executing transaction", "user": {"login": "klem4", "id": 1667435, "node_id": "MDQ6VXNlcjE2Njc0MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1667435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klem4", "html_url": "https://github.com/klem4", "followers_url": "https://api.github.com/users/klem4/followers", "following_url": "https://api.github.com/users/klem4/following{/other_user}", "gists_url": "https://api.github.com/users/klem4/gists{/gist_id}", "starred_url": "https://api.github.com/users/klem4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klem4/subscriptions", "organizations_url": "https://api.github.com/users/klem4/orgs", "repos_url": "https://api.github.com/users/klem4/repos", "events_url": "https://api.github.com/users/klem4/events{/privacy}", "received_events_url": "https://api.github.com/users/klem4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-22T15:40:15Z", "updated_at": "2018-09-29T06:13:22Z", "closed_at": "2018-09-29T06:13:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I think i found a bug. In my example, i want to make a transaction with combination of GET and DELETE methods, but because pipe.delete() runs redis.delete command immediately, when the execute are called, key already deleted from DB!\n\ntest script:\n\n``` python\n# coding: utf-8\n\nfrom redis import Redis\nfrom fakeredis import FakeRedis\n\nKEY = 'x'\nVALUE = '1'\n\nr = FakeRedis() #Redis()\nr.set(KEY, VALUE)\nassert r.get(KEY) == VALUE\n\n\ndef get_check_delete(pipe):\n    real_value = pipe.get(KEY)\n    if not real_value == VALUE:\n        raise ValueError(KEY)\n    pipe.delete(KEY)\n\n\nprint r.transaction(get_check_delete, KEY)\n```\n\nproblem code i think:\nfakeredis.py:1144 and fakeredis.py:1209\n\n``` python\ndef transaction(self, func, *keys):\n        with self.pipeline() as p:\n            for _ in range(5):\n                try:\n                    p.watch(*keys)\n                    func(p) <-------------- key deleted here!\n                    return p.execute() <--------------- deleted key unavailable in execute!\n...\n```\n\nmy example code based on redis's lock mechanism:\nredis/lock.py:108\n\n``` python\ndef do_release(self):\n        name = self.name\n        token = self.token\n\n        def execute_release(pipe):\n            lock_value = pipe.get(name)\n            if lock_value != token:\n                raise LockError(\"Cannot release a lock that's no longer owned\")\n            pipe.delete(name)\n\n        self.redis.transaction(execute_release, name)\n```\n\nif you agree there it is bug, i can try to create pull requests and tests to fix it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/122", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/122/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/122/events", "html_url": "https://github.com/jamesls/fakeredis/issues/122", "id": 169909166, "node_id": "MDU6SXNzdWUxNjk5MDkxNjY=", "number": 122, "title": "ConnectionPool mock isn't implemented", "user": {"login": "z0rc", "id": 787519, "node_id": "MDQ6VXNlcjc4NzUxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/787519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0rc", "html_url": "https://github.com/z0rc", "followers_url": "https://api.github.com/users/z0rc/followers", "following_url": "https://api.github.com/users/z0rc/following{/other_user}", "gists_url": "https://api.github.com/users/z0rc/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0rc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0rc/subscriptions", "organizations_url": "https://api.github.com/users/z0rc/orgs", "repos_url": "https://api.github.com/users/z0rc/repos", "events_url": "https://api.github.com/users/z0rc/events{/privacy}", "received_events_url": "https://api.github.com/users/z0rc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 105266355, "node_id": "MDU6TGFiZWwxMDUyNjYzNTU=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/Pending", "name": "Pending", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-08T12:17:06Z", "updated_at": "2019-01-15T10:56:53Z", "closed_at": "2019-01-15T10:10:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "My code uses single `redis.ConnectionPool` across multiple threads, pool is passed as a parameter to thread function. I'd like to be able to test this function with `fakeredis`, but since ConnectionPool mock is missing, I'm stuck with using real redis-server (temporary created as docker container during tests).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/120", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/120/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/120/events", "html_url": "https://github.com/jamesls/fakeredis/issues/120", "id": 161685741, "node_id": "MDU6SXNzdWUxNjE2ODU3NDE=", "number": 120, "title": "Using complex keys breaks expiring of keys", "user": {"login": "kairichard", "id": 35398, "node_id": "MDQ6VXNlcjM1Mzk4", "avatar_url": "https://avatars3.githubusercontent.com/u/35398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kairichard", "html_url": "https://github.com/kairichard", "followers_url": "https://api.github.com/users/kairichard/followers", "following_url": "https://api.github.com/users/kairichard/following{/other_user}", "gists_url": "https://api.github.com/users/kairichard/gists{/gist_id}", "starred_url": "https://api.github.com/users/kairichard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kairichard/subscriptions", "organizations_url": "https://api.github.com/users/kairichard/orgs", "repos_url": "https://api.github.com/users/kairichard/repos", "events_url": "https://api.github.com/users/kairichard/events{/privacy}", "received_events_url": "https://api.github.com/users/kairichard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573076, "node_id": "MDU6TGFiZWwxODU1NzMwNzY=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/Bug", "name": "Bug", "color": "e11d21", "default": false, "description": null}, {"id": 425476483, "node_id": "MDU6TGFiZWw0MjU0NzY0ODM=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/HelpWanted", "name": "HelpWanted", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-22T13:40:48Z", "updated_at": "2018-03-22T14:58:45Z", "closed_at": "2018-03-22T14:58:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is an issue with how keys are stored in `_StrKeyDict#_ex_key` and `_StrKeyDict#_dict`. Consider the following case\n\n``` python\nimport fakeredis\nfrom time import sleep\nr = fakeredis.FakeStrictRedis()\n\n\nclass Key(object):\n    def __init__(self, k):\n        self.k = k\n\n    def __str__(self):\n        return str(self.k)\n\n\nr.set(Key(\"a\"), \"value\", 1)\nr.set(Key(\"a\"), \"value\", 10)\n\nsleep(2)\n\nprint r.get(Key(\"a\")) # None instead of value\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/119", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/119/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/119/events", "html_url": "https://github.com/jamesls/fakeredis/issues/119", "id": 161398174, "node_id": "MDU6SXNzdWUxNjEzOTgxNzQ=", "number": 119, "title": "FakeStrictRedis ttl should not return None", "user": {"login": "marakal", "id": 7149724, "node_id": "MDQ6VXNlcjcxNDk3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7149724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marakal", "html_url": "https://github.com/marakal", "followers_url": "https://api.github.com/users/marakal/followers", "following_url": "https://api.github.com/users/marakal/following{/other_user}", "gists_url": "https://api.github.com/users/marakal/gists{/gist_id}", "starred_url": "https://api.github.com/users/marakal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marakal/subscriptions", "organizations_url": "https://api.github.com/users/marakal/orgs", "repos_url": "https://api.github.com/users/marakal/repos", "events_url": "https://api.github.com/users/marakal/events{/privacy}", "received_events_url": "https://api.github.com/users/marakal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573076, "node_id": "MDU6TGFiZWwxODU1NzMwNzY=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/Bug", "name": "Bug", "color": "e11d21", "default": false, "description": null}, {"id": 425476483, "node_id": "MDU6TGFiZWw0MjU0NzY0ODM=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/HelpWanted", "name": "HelpWanted", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-21T10:12:39Z", "updated_at": "2016-12-07T05:06:16Z", "closed_at": "2016-12-07T05:06:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "StrictRedis' ttl and pttl methods return -1 when expire is not set and -2 when key does not exist ([documentation of python redis](https://pypi.python.org/pypi/redis), [documentation of redis](http://redis.io/commands/ttl)), but FakeStrictRedis' methods return None instead.\n\n```\nIn [1]: r = redis.StrictRedis(db=0)\n\nIn [2]: r.ttl(\"foo\")\nOut[2]: -2\n\nIn [3]: f = fakeredis.FakeStrictRedis()\n\nIn [4]: f.ttl(\"foo\")\nOut[4]: None\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/117", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/117/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/117/events", "html_url": "https://github.com/jamesls/fakeredis/issues/117", "id": 157663091, "node_id": "MDU6SXNzdWUxNTc2NjMwOTE=", "number": 117, "title": "setex arguments time and value are inverted", "user": {"login": "nbigot", "id": 1997452, "node_id": "MDQ6VXNlcjE5OTc0NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1997452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbigot", "html_url": "https://github.com/nbigot", "followers_url": "https://api.github.com/users/nbigot/followers", "following_url": "https://api.github.com/users/nbigot/following{/other_user}", "gists_url": "https://api.github.com/users/nbigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbigot/subscriptions", "organizations_url": "https://api.github.com/users/nbigot/orgs", "repos_url": "https://api.github.com/users/nbigot/repos", "events_url": "https://api.github.com/users/nbigot/events{/privacy}", "received_events_url": "https://api.github.com/users/nbigot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 105266355, "node_id": "MDU6TGFiZWwxMDUyNjYzNTU=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/Pending", "name": "Pending", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-31T12:47:40Z", "updated_at": "2016-08-23T20:29:40Z", "closed_at": "2016-08-23T20:29:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIt seems that some arguments (time and value) order are inverted for the setex function.\nI got an error when using fakeredis version 0.7.0\n\nUsing **redis-py**:\n\n```\nimport redis\n# ...\nr.setex('mykey', 'myvalue', 10)\n```\n\nUsing **fakeredis version 0.7.0**\n\n```\nimport fakeredis\nr = fakeredis.FakeStrictRedis()\nr.setex('mykey', 10, 'myvalue')\n```\n\nCan actually be overcome by naming the args:\n\n```\nimport redis\nr.setex(name='mykey', value='myvalue', time=10)\n```\n\nBut it would be cool if it can have the same order for the args.\nWhat do you think?\n\nRegards.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/109", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/109/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/109/events", "html_url": "https://github.com/jamesls/fakeredis/issues/109", "id": 136464131, "node_id": "MDU6SXNzdWUxMzY0NjQxMzE=", "number": 109, "title": "Add support for ZRANGEBYLEX, ZREVRANGEBYLEX, ZREMRANGEBYLEX, ZLEXCOUNT", "user": {"login": "ikreymer", "id": 1015759, "node_id": "MDQ6VXNlcjEwMTU3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1015759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikreymer", "html_url": "https://github.com/ikreymer", "followers_url": "https://api.github.com/users/ikreymer/followers", "following_url": "https://api.github.com/users/ikreymer/following{/other_user}", "gists_url": "https://api.github.com/users/ikreymer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikreymer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikreymer/subscriptions", "organizations_url": "https://api.github.com/users/ikreymer/orgs", "repos_url": "https://api.github.com/users/ikreymer/repos", "events_url": "https://api.github.com/users/ikreymer/events{/privacy}", "received_events_url": "https://api.github.com/users/ikreymer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-25T18:03:05Z", "updated_at": "2016-03-13T04:55:41Z", "closed_at": "2016-03-13T04:55:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to add support for redis lexicographical ordering functions, which are currently missing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/107", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/107/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/107/events", "html_url": "https://github.com/jamesls/fakeredis/issues/107", "id": 134816370, "node_id": "MDU6SXNzdWUxMzQ4MTYzNzA=", "number": 107, "title": "fakeredis does not work on Windows because of a libc dependency", "user": {"login": "krakip", "id": 5626116, "node_id": "MDQ6VXNlcjU2MjYxMTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5626116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krakip", "html_url": "https://github.com/krakip", "followers_url": "https://api.github.com/users/krakip/followers", "following_url": "https://api.github.com/users/krakip/following{/other_user}", "gists_url": "https://api.github.com/users/krakip/gists{/gist_id}", "starred_url": "https://api.github.com/users/krakip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krakip/subscriptions", "organizations_url": "https://api.github.com/users/krakip/orgs", "repos_url": "https://api.github.com/users/krakip/repos", "events_url": "https://api.github.com/users/krakip/events{/privacy}", "received_events_url": "https://api.github.com/users/krakip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-19T09:34:47Z", "updated_at": "2016-03-13T04:58:14Z", "closed_at": "2016-03-13T04:58:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently fakeredis only looks for libc when searching for an implementation of strtod. On Windows, libc is not available and this function is found in msvcrt.lib.\n\nThe fix is to check for both libraries and use whichever is present.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/106", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/106/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/106/events", "html_url": "https://github.com/jamesls/fakeredis/issues/106", "id": 133017162, "node_id": "MDU6SXNzdWUxMzMwMTcxNjI=", "number": 106, "title": "randomkey method is not implemented, but is not in the list of unimplemented commands", "user": {"login": "Jwpe", "id": 1651943, "node_id": "MDQ6VXNlcjE2NTE5NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1651943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jwpe", "html_url": "https://github.com/Jwpe", "followers_url": "https://api.github.com/users/Jwpe/followers", "following_url": "https://api.github.com/users/Jwpe/following{/other_user}", "gists_url": "https://api.github.com/users/Jwpe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jwpe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jwpe/subscriptions", "organizations_url": "https://api.github.com/users/Jwpe/orgs", "repos_url": "https://api.github.com/users/Jwpe/repos", "events_url": "https://api.github.com/users/Jwpe/events{/privacy}", "received_events_url": "https://api.github.com/users/Jwpe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573068, "node_id": "MDU6TGFiZWwxODU1NzMwNjg=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/FeatureRequest", "name": "FeatureRequest", "color": "fbca04", "default": false, "description": null}, {"id": 425476483, "node_id": "MDU6TGFiZWw0MjU0NzY0ODM=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/HelpWanted", "name": "HelpWanted", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-11T16:14:49Z", "updated_at": "2018-03-23T07:48:42Z", "closed_at": "2018-03-23T07:47:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Relevant code:\n\nhttps://github.com/jamesls/fakeredis/blob/master/fakeredis.py#L356\n\nRelevant documentation:\n\nhttps://github.com/jamesls/fakeredis#unimplemented-commands\n\nThere's a discrepancy here. Would it be better to implement the `randomkey` method, or just add it to the list of unimplemented commands?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/103", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/103/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/103/events", "html_url": "https://github.com/jamesls/fakeredis/issues/103", "id": 127998262, "node_id": "MDU6SXNzdWUxMjc5OTgyNjI=", "number": 103, "title": "Append does not create key if it doesn't exist", "user": {"login": "giesberge", "id": 13120315, "node_id": "MDQ6VXNlcjEzMTIwMzE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13120315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giesberge", "html_url": "https://github.com/giesberge", "followers_url": "https://api.github.com/users/giesberge/followers", "following_url": "https://api.github.com/users/giesberge/following{/other_user}", "gists_url": "https://api.github.com/users/giesberge/gists{/gist_id}", "starred_url": "https://api.github.com/users/giesberge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giesberge/subscriptions", "organizations_url": "https://api.github.com/users/giesberge/orgs", "repos_url": "https://api.github.com/users/giesberge/repos", "events_url": "https://api.github.com/users/giesberge/events{/privacy}", "received_events_url": "https://api.github.com/users/giesberge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-21T19:14:01Z", "updated_at": "2016-02-08T18:20:23Z", "closed_at": "2016-02-08T18:20:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the redis documentation:\n\n> If key already exists and is a string, this command appends the value at the end of the string. If key does not exist it is created and set as an empty string, so APPEND will be similar to SET in this special case.\n\nIf a non-existent key is appended to fakeredis it returns a KeyError.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/102", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/102/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/102/events", "html_url": "https://github.com/jamesls/fakeredis/issues/102", "id": 123521515, "node_id": "MDU6SXNzdWUxMjM1MjE1MTU=", "number": 102, "title": "Ability to mock no connection to server", "user": {"login": "Amertz08", "id": 8210235, "node_id": "MDQ6VXNlcjgyMTAyMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8210235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amertz08", "html_url": "https://github.com/Amertz08", "followers_url": "https://api.github.com/users/Amertz08/followers", "following_url": "https://api.github.com/users/Amertz08/following{/other_user}", "gists_url": "https://api.github.com/users/Amertz08/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amertz08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amertz08/subscriptions", "organizations_url": "https://api.github.com/users/Amertz08/orgs", "repos_url": "https://api.github.com/users/Amertz08/repos", "events_url": "https://api.github.com/users/Amertz08/events{/privacy}", "received_events_url": "https://api.github.com/users/Amertz08/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573068, "node_id": "MDU6TGFiZWwxODU1NzMwNjg=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/FeatureRequest", "name": "FeatureRequest", "color": "fbca04", "default": false, "description": null}, {"id": 425476483, "node_id": "MDU6TGFiZWw0MjU0NzY0ODM=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/HelpWanted", "name": "HelpWanted", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-22T17:17:40Z", "updated_at": "2018-08-27T06:04:04Z", "closed_at": "2018-08-27T06:04:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think it would be useful to mock the errors thrown when you are unable to connect to the redis server. It appears that redis-py throws a `ConnectionError` with these args `('Error 61 connecting to localhost:6379. Connection refused.',)` when it cannot reach the server.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/101", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/101/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/101/events", "html_url": "https://github.com/jamesls/fakeredis/issues/101", "id": 123029444, "node_id": "MDU6SXNzdWUxMjMwMjk0NDQ=", "number": 101, "title": "Should raise an error when attempting to get a key holding a list", "user": {"login": "bluemoo", "id": 26662, "node_id": "MDQ6VXNlcjI2NjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/26662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluemoo", "html_url": "https://github.com/bluemoo", "followers_url": "https://api.github.com/users/bluemoo/followers", "following_url": "https://api.github.com/users/bluemoo/following{/other_user}", "gists_url": "https://api.github.com/users/bluemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluemoo/subscriptions", "organizations_url": "https://api.github.com/users/bluemoo/orgs", "repos_url": "https://api.github.com/users/bluemoo/repos", "events_url": "https://api.github.com/users/bluemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/bluemoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573076, "node_id": "MDU6TGFiZWwxODU1NzMwNzY=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/Bug", "name": "Bug", "color": "e11d21", "default": false, "description": null}, {"id": 425476483, "node_id": "MDU6TGFiZWw0MjU0NzY0ODM=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/HelpWanted", "name": "HelpWanted", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-18T21:29:16Z", "updated_at": "2018-03-22T14:29:01Z", "closed_at": "2018-03-22T14:29:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's what happens when I try to use 'get' on a key that I've used to store a list:\n\n```\n>>> from redis_cache import get_redis_connection\n>>> client = get_redis_connection('persistent')\n>>> client.rpush('foo', 1)\n1L\n>>> client.get('foo')\nTraceback (most recent call last):\n  File \"<console>\", line 1, in <module>\n  File \"/home/noah/envs/adioso/lib/python2.6/site-packages/redis/client.py\", line 551, in get\n    return self.execute_command('GET', name)\n  File \"/home/noah/envs/adioso/lib/python2.6/site-packages/redis/client.py\", line 361, in execute_command\n    return self.parse_response(connection, command_name, **options)\n  File \"/home/noah/envs/adioso/lib/python2.6/site-packages/redis/client.py\", line 371, in parse_response\n    response = connection.read_response()\n  File \"/home/noah/envs/adioso/lib/python2.6/site-packages/redis/connection.py\", line 311, in read_response\n    raise response\nResponseError: WRONGTYPE Operation against a key holding the wrong kind of value\n```\n\nUsing fakeredis, I don't get any error:\n\n```\n>>> import fakeredis\n>>> client = fakeredis.FakeStrictRedis()\n>>> client.rpush('foo', 1)\n1\n>>> client.get('foo')\n\"['1']\"\n```\n\nI think the fix to this might involve tracking the type of item at each key, which could get involved. Is this of interest to fakeredis?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/99", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/99/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/99/events", "html_url": "https://github.com/jamesls/fakeredis/issues/99", "id": 122895777, "node_id": "MDU6SXNzdWUxMjI4OTU3Nzc=", "number": 99, "title": "Interaction of incr and mget does not match redis", "user": {"login": "bluemoo", "id": 26662, "node_id": "MDQ6VXNlcjI2NjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/26662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluemoo", "html_url": "https://github.com/bluemoo", "followers_url": "https://api.github.com/users/bluemoo/followers", "following_url": "https://api.github.com/users/bluemoo/following{/other_user}", "gists_url": "https://api.github.com/users/bluemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluemoo/subscriptions", "organizations_url": "https://api.github.com/users/bluemoo/orgs", "repos_url": "https://api.github.com/users/bluemoo/repos", "events_url": "https://api.github.com/users/bluemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/bluemoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-18T07:20:32Z", "updated_at": "2016-08-16T06:15:09Z", "closed_at": "2016-08-16T06:15:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Redis returns the results of mget as a list of strings. In fakeredis, if you use incr and then mget, you get a list of integers, not strings.\n\nHere's the bug in action (note the last item is a list containing an integer):\n\n```\n>>> import fakeredis\n>>> cache = fakeredis.FakeStrictRedis()\n>>> cache.incr('a', 1)\n1\n>>> cache.get('a')\n'1'\n>>> cache.incr('a', 1)\n2\n>>> cache.get('a')\n'2'\n>>> cache.mget(['a'])\n[2]\n```\n\nHere's how it works against my redis instance:\n\n```\n>>> from django.core.cache import get_cache\n>>> \n>>> redis_cache = get_cache('persistent').raw_client\n>>> redis_cache.incr('a',1)\n1\n>>> redis_cache.get('a')\n'1'\n>>> redis_cache.incr('a',1)\n2\n>>> redis_cache.get('a')\n'2'\n>>> redis_cache.mget(['a'])\n['2']\n```\n\nIt looks like incr always transforms the item into an integer, but get works around it by calling to_bytes on the value before returning it. Perhaps the solution is to do the same on each item in mget.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/93", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/93/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/93/events", "html_url": "https://github.com/jamesls/fakeredis/issues/93", "id": 109141558, "node_id": "MDU6SXNzdWUxMDkxNDE1NTg=", "number": 93, "title": "Pipeline.execute doesn't support the raise_on_error kwarg", "user": {"login": "Tinche", "id": 1909233, "node_id": "MDQ6VXNlcjE5MDkyMzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1909233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tinche", "html_url": "https://github.com/Tinche", "followers_url": "https://api.github.com/users/Tinche/followers", "following_url": "https://api.github.com/users/Tinche/following{/other_user}", "gists_url": "https://api.github.com/users/Tinche/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tinche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tinche/subscriptions", "organizations_url": "https://api.github.com/users/Tinche/orgs", "repos_url": "https://api.github.com/users/Tinche/repos", "events_url": "https://api.github.com/users/Tinche/events{/privacy}", "received_events_url": "https://api.github.com/users/Tinche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-30T17:33:01Z", "updated_at": "2015-10-01T04:22:47Z", "closed_at": "2015-10-01T04:22:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This appears simple to add. If I created a pull request, would you be interested in merging it in?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/91", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/91/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/91/events", "html_url": "https://github.com/jamesls/fakeredis/issues/91", "id": 102789251, "node_id": "MDU6SXNzdWUxMDI3ODkyNTE=", "number": 91, "title": "Unicode errors in set()", "user": {"login": "domenkozar", "id": 126339, "node_id": "MDQ6VXNlcjEyNjMzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/126339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domenkozar", "html_url": "https://github.com/domenkozar", "followers_url": "https://api.github.com/users/domenkozar/followers", "following_url": "https://api.github.com/users/domenkozar/following{/other_user}", "gists_url": "https://api.github.com/users/domenkozar/gists{/gist_id}", "starred_url": "https://api.github.com/users/domenkozar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domenkozar/subscriptions", "organizations_url": "https://api.github.com/users/domenkozar/orgs", "repos_url": "https://api.github.com/users/domenkozar/repos", "events_url": "https://api.github.com/users/domenkozar/events{/privacy}", "received_events_url": "https://api.github.com/users/domenkozar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573076, "node_id": "MDU6TGFiZWwxODU1NzMwNzY=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/Bug", "name": "Bug", "color": "e11d21", "default": false, "description": null}, {"id": 425476483, "node_id": "MDU6TGFiZWw0MjU0NzY0ODM=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/HelpWanted", "name": "HelpWanted", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-24T13:08:10Z", "updated_at": "2017-10-12T15:17:44Z", "closed_at": "2017-10-12T15:17:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nfeeds/cache.py:128: in store_feed_content\n    self.redis_client.set(feed_key, raw_content)\n.tox/py27/lib/python2.7/site-packages/fakeredis.py:386: in set\n    self._db[name] = to_bytes(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nx = '<feed\u00e1n/>', charset = 'ascii', errors = 'strict'\n\n    def to_bytes(x, charset=sys.getdefaultencoding(), errors='strict'):\n        if x is None:\n            return None\n        if isinstance(x, (bytes, bytearray, buffer)) or hasattr(x, '__str__'):\n>           return bytes(x)\nE           UnicodeEncodeError: 'ascii' codec can't encode character u'\\xe1' in position 5: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/90", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/90/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/90/events", "html_url": "https://github.com/jamesls/fakeredis/issues/90", "id": 102720169, "node_id": "MDU6SXNzdWUxMDI3MjAxNjk=", "number": 90, "title": "HINCRBYFLOAT changes hash value type to float", "user": {"login": "ze-phyr-us", "id": 4436927, "node_id": "MDQ6VXNlcjQ0MzY5Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4436927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ze-phyr-us", "html_url": "https://github.com/ze-phyr-us", "followers_url": "https://api.github.com/users/ze-phyr-us/followers", "following_url": "https://api.github.com/users/ze-phyr-us/following{/other_user}", "gists_url": "https://api.github.com/users/ze-phyr-us/gists{/gist_id}", "starred_url": "https://api.github.com/users/ze-phyr-us/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ze-phyr-us/subscriptions", "organizations_url": "https://api.github.com/users/ze-phyr-us/orgs", "repos_url": "https://api.github.com/users/ze-phyr-us/repos", "events_url": "https://api.github.com/users/ze-phyr-us/events{/privacy}", "received_events_url": "https://api.github.com/users/ze-phyr-us/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573076, "node_id": "MDU6TGFiZWwxODU1NzMwNzY=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/Bug", "name": "Bug", "color": "e11d21", "default": false, "description": null}, {"id": 425476483, "node_id": "MDU6TGFiZWw0MjU0NzY0ODM=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/HelpWanted", "name": "HelpWanted", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-24T06:40:38Z", "updated_at": "2018-03-22T14:57:24Z", "closed_at": "2018-03-22T14:57:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "redis-py always returns hash values as bytes, even when they are valid floating point numbers. fakeredis is consistent with that when you set the value with HSET:\n\n```\nIn [1]: import redis, fakeredis\n\nIn [2]: real = redis.StrictRedis()\nIn [3]: real.hset('h', 'x', 1.5)\nOut[3]: 1\nIn [4]: real.hgetall('h')\nOut[4]: {b'x': b'1.5'}\n\nIn [5]: fake = fakeredis.FakeStrictRedis()\nIn [6]: fake.hset('h', 'x', 1.5)\nOut[6]: 1\nIn [7]: fake.hgetall('h')\nOut[7]: {b'x': b'1.5'}\n```\n\nHowever, it breaks when you use HINCRBYFLOAT:\n\n```\n# Standard behavior\nIn [8]: real.hincrbyfloat('h2', 'x', 1.5)\nOut[8]: 1.5\nIn [9]: real.hgetall('h2')\nOut[9]: {b'x': b'1.5'}\n\n# Incompatible behavior\nIn [10]: fake.hincrbyfloat('h2', 'x', 1.5)\nOut[10]: 1.5\nIn [11]: fake.hgetall('h2')\nOut[11]: {b'x': 1.5}\nIn [12]: fake.hget('h2', 'x')\nOut[12]: 1.5\n```\n\nHINCRBY has the same problem, it changes the type to int:\n\n```\nIn [13]: real.hincrby('h3', 'x', 15)\nOut[13]: 15\nIn [14]: real.hgetall('h3')\nOut[14]: {b'x': b'15'}\n\nIn [15]: fake.hincrby('h3', 'x', 15)\nOut[15]: 15\nIn [16]: fake.hgetall('h3')\nOut[16]: {b'x': 15}\nIn [17]: fake.hget('h3', 'x')\nOut[17]: 15\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/89", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/89/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/89/events", "html_url": "https://github.com/jamesls/fakeredis/issues/89", "id": 102465482, "node_id": "MDU6SXNzdWUxMDI0NjU0ODI=", "number": 89, "title": "Document flushall()", "user": {"login": "arnuschky", "id": 179920, "node_id": "MDQ6VXNlcjE3OTkyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/179920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnuschky", "html_url": "https://github.com/arnuschky", "followers_url": "https://api.github.com/users/arnuschky/followers", "following_url": "https://api.github.com/users/arnuschky/following{/other_user}", "gists_url": "https://api.github.com/users/arnuschky/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnuschky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnuschky/subscriptions", "organizations_url": "https://api.github.com/users/arnuschky/orgs", "repos_url": "https://api.github.com/users/arnuschky/repos", "events_url": "https://api.github.com/users/arnuschky/events{/privacy}", "received_events_url": "https://api.github.com/users/arnuschky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-21T21:29:26Z", "updated_at": "2015-10-01T04:31:16Z", "closed_at": "2015-10-01T04:31:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe `flushall()` should be mentioned in the readme, as it's quite essential for using FakeRedis in unit tests.\n\nExample:\n\n``` python\n    def setUp(self):\n        # setup fake redis for testing\n        self.r = fakeredis.FakeStrictRedis()\n\n    def tearDown(self):\n        # clear data in fake redis\n        self.r.flushall()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/88", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/88/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/88/events", "html_url": "https://github.com/jamesls/fakeredis/issues/88", "id": 101486916, "node_id": "MDU6SXNzdWUxMDE0ODY5MTY=", "number": 88, "title": "Working with RQ", "user": {"login": "joeyespo", "id": 634573, "node_id": "MDQ6VXNlcjYzNDU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/634573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeyespo", "html_url": "https://github.com/joeyespo", "followers_url": "https://api.github.com/users/joeyespo/followers", "following_url": "https://api.github.com/users/joeyespo/following{/other_user}", "gists_url": "https://api.github.com/users/joeyespo/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeyespo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeyespo/subscriptions", "organizations_url": "https://api.github.com/users/joeyespo/orgs", "repos_url": "https://api.github.com/users/joeyespo/repos", "events_url": "https://api.github.com/users/joeyespo/events{/privacy}", "received_events_url": "https://api.github.com/users/joeyespo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-17T18:54:43Z", "updated_at": "2018-03-23T08:36:43Z", "closed_at": "2018-03-23T08:36:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like RQ [doesn't work](https://github.com/nvie/rq/issues/282) with fakeredis. This is probably a concern of RQ, but thought I'd ask here to see what you think.\n\nThe problem is that RQ does something different when the connection is `Redis` vs `StrictRedis`, and uses `isinstance` to differentiate.\n\n`FakeRedis` and `FakeStrictRedis` inherit from `object` directly, so this obviously won't work. Since all the methods are there, would it be possible to inherit from `Redis` and `StrictRedis` instead? All the behavior would still be masked, but now these classes can be dropped in wherever the superclasses are explicitly expected.\n\nSure, using `isinstance` isn't very Pythonic, but doing this would allow the fake classes to fit in more real-world cases. `Mock` objects do this too: `isinstance(Mock(int), int)  # => True`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/83", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/83/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/83/events", "html_url": "https://github.com/jamesls/fakeredis/issues/83", "id": 90246398, "node_id": "MDU6SXNzdWU5MDI0NjM5OA==", "number": 83, "title": "zadd() not working in FakeRedis", "user": {"login": "loisaidasam", "id": 213281, "node_id": "MDQ6VXNlcjIxMzI4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/213281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loisaidasam", "html_url": "https://github.com/loisaidasam", "followers_url": "https://api.github.com/users/loisaidasam/followers", "following_url": "https://api.github.com/users/loisaidasam/following{/other_user}", "gists_url": "https://api.github.com/users/loisaidasam/gists{/gist_id}", "starred_url": "https://api.github.com/users/loisaidasam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loisaidasam/subscriptions", "organizations_url": "https://api.github.com/users/loisaidasam/orgs", "repos_url": "https://api.github.com/users/loisaidasam/repos", "events_url": "https://api.github.com/users/loisaidasam/events{/privacy}", "received_events_url": "https://api.github.com/users/loisaidasam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-22T23:52:16Z", "updated_at": "2015-06-30T18:24:06Z", "closed_at": "2015-06-27T21:44:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Apparently it's just adding the first key/value of `**kwargs` to the ZSet...\n\nhttps://github.com/jamesls/fakeredis/blob/e7e0069914e0edcfc37eed6a3a7e64a00371a440/fakeredis.py#L1300-L1301\n\nAny reason?\n\nAlso not returning the number of items added...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/79", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/79/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/79/events", "html_url": "https://github.com/jamesls/fakeredis/issues/79", "id": 73812349, "node_id": "MDU6SXNzdWU3MzgxMjM0OQ==", "number": 79, "title": "Implement redis-py's .lock()", "user": {"login": "akshayjshah", "id": 972790, "node_id": "MDQ6VXNlcjk3Mjc5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/972790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akshayjshah", "html_url": "https://github.com/akshayjshah", "followers_url": "https://api.github.com/users/akshayjshah/followers", "following_url": "https://api.github.com/users/akshayjshah/following{/other_user}", "gists_url": "https://api.github.com/users/akshayjshah/gists{/gist_id}", "starred_url": "https://api.github.com/users/akshayjshah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akshayjshah/subscriptions", "organizations_url": "https://api.github.com/users/akshayjshah/orgs", "repos_url": "https://api.github.com/users/akshayjshah/repos", "events_url": "https://api.github.com/users/akshayjshah/events{/privacy}", "received_events_url": "https://api.github.com/users/akshayjshah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573068, "node_id": "MDU6TGFiZWwxODU1NzMwNjg=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/FeatureRequest", "name": "FeatureRequest", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-05-07T02:39:46Z", "updated_at": "2018-03-22T14:29:03Z", "closed_at": "2018-03-22T14:29:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "`fakeredis.FakeStrictRedis` doesn't implement [redis-py's .lock()](https://github.com/andymccurdy/redis-py/blob/master/redis/client.py#L495) method. Are you open to a pull request that uses the standard lib's `threading.Lock` to fake the same behavior?\n\n(Of course, I'll follow the contribution guidelines :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/78", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/78/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/78/events", "html_url": "https://github.com/jamesls/fakeredis/issues/78", "id": 73515513, "node_id": "MDU6SXNzdWU3MzUxNTUxMw==", "number": 78, "title": "Behaviour of transaction() does not match redis-py", "user": {"login": "okey", "id": 105824, "node_id": "MDQ6VXNlcjEwNTgyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/105824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/okey", "html_url": "https://github.com/okey", "followers_url": "https://api.github.com/users/okey/followers", "following_url": "https://api.github.com/users/okey/following{/other_user}", "gists_url": "https://api.github.com/users/okey/gists{/gist_id}", "starred_url": "https://api.github.com/users/okey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/okey/subscriptions", "organizations_url": "https://api.github.com/users/okey/orgs", "repos_url": "https://api.github.com/users/okey/repos", "events_url": "https://api.github.com/users/okey/events{/privacy}", "received_events_url": "https://api.github.com/users/okey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573068, "node_id": "MDU6TGFiZWwxODU1NzMwNjg=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/FeatureRequest", "name": "FeatureRequest", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-06T04:58:48Z", "updated_at": "2018-03-22T14:28:59Z", "closed_at": "2018-03-22T14:28:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is redis-py's [`transaction()`](https://github.com/andymccurdy/redis-py/blob/c4e2f56dbf6e04a23e6a346ac54278cfbf4035e1/redis/client.py#L473)\n\nAs you can see, it takes keyword arguments: `def transaction(self, func, *watches, **kwargs)`\nfakeredis' [`transaction()`](https://github.com/jamesls/fakeredis/blob/master/fakeredis.py#L1257) does not expect keyword arguments: `def transaction(self, func, *keys)`\n\nNaturally this results in a `TypeError` when trying to use keyword arguments.\n\nThe three current kwargs are `shard_hint=None`, `value_from_callable=False`, and `watch_delay=None`. The fakeredis implementation, however, does not support any of these.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/77", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/77/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/77/events", "html_url": "https://github.com/jamesls/fakeredis/issues/77", "id": 72844577, "node_id": "MDU6SXNzdWU3Mjg0NDU3Nw==", "number": 77, "title": "Support the decode_responses argument", "user": {"login": "twidi", "id": 193474, "node_id": "MDQ6VXNlcjE5MzQ3NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/193474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twidi", "html_url": "https://github.com/twidi", "followers_url": "https://api.github.com/users/twidi/followers", "following_url": "https://api.github.com/users/twidi/following{/other_user}", "gists_url": "https://api.github.com/users/twidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/twidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twidi/subscriptions", "organizations_url": "https://api.github.com/users/twidi/orgs", "repos_url": "https://api.github.com/users/twidi/repos", "events_url": "https://api.github.com/users/twidi/events{/privacy}", "received_events_url": "https://api.github.com/users/twidi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573068, "node_id": "MDU6TGFiZWwxODU1NzMwNjg=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/FeatureRequest", "name": "FeatureRequest", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-03T18:24:07Z", "updated_at": "2016-08-13T23:19:57Z", "closed_at": "2016-08-13T23:19:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `redis-py`, `StrictRedis` accepts a `decode_responses` argument, set to `False` by default, but when set to `True`, it will decode all bytes values using its `charset` argument, default to utf-8.\n\nWhen my team uses Redis, we set this argument to `True`. So we expect strings (we use python 3), not bytes.\nBut `fakeredis` always returns bytes. It encodes everything in bytes but never decodes.\n\nSo in our tests we have inconsistent behavior if we swap between a real redis server and `fakeredis`.\n\nViewing the code of `fakeredis` it's not so easy to support it because not everything goes through a single method, as does `redis-py` with `read_response`.\n\nDo you think it's possible to have this feature? Would you accept a pull-request on this subject?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/74", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/74/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/74/events", "html_url": "https://github.com/jamesls/fakeredis/issues/74", "id": 60735434, "node_id": "MDU6SXNzdWU2MDczNTQzNA==", "number": 74, "title": "Bug: `hmset` mutates the dict upon storage", "user": {"login": "csojinb-picwell", "id": 10120327, "node_id": "MDQ6VXNlcjEwMTIwMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/10120327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csojinb-picwell", "html_url": "https://github.com/csojinb-picwell", "followers_url": "https://api.github.com/users/csojinb-picwell/followers", "following_url": "https://api.github.com/users/csojinb-picwell/following{/other_user}", "gists_url": "https://api.github.com/users/csojinb-picwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/csojinb-picwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csojinb-picwell/subscriptions", "organizations_url": "https://api.github.com/users/csojinb-picwell/orgs", "repos_url": "https://api.github.com/users/csojinb-picwell/repos", "events_url": "https://api.github.com/users/csojinb-picwell/events{/privacy}", "received_events_url": "https://api.github.com/users/csojinb-picwell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-11T21:47:11Z", "updated_at": "2015-03-12T02:52:29Z", "closed_at": "2015-03-12T02:52:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that `hmset` seems to mutate the hash that is passed in for storage. It looks like everything is being cast to a string on the input dict itself, instead of on a copy.\n\n```\nIn [1]: conn = fakeredis.FakeStrictRedis()\n\nIn [2]: to_store = {'key': [123, 456]}\n\nIn [3]: conn.hmset('fake-key', to_store)\nOut[3]: True\n\nIn [4]: to_store\nOut[4]: {'key': '[123, 456]'}\n\n```\n\nThis differs from the behavior of actual redis, which does not mutate the input dictionary\n\n```\nIn [5]: conn = get_redis_connection()  # wired up to real redis\n\nIn [6]: to_store = {'key': [123, 456]}\n\nIn [7]: conn.hmset('fake-key', to_store)\nOut[7]: True\n\nIn [8]: to_store\nOut[8]: {'key': [123, 456]}\n```\n\nAs you might imagine, this resulted in some very confusing test results.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/72", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/72/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/72/events", "html_url": "https://github.com/jamesls/fakeredis/issues/72", "id": 59283959, "node_id": "MDU6SXNzdWU1OTI4Mzk1OQ==", "number": 72, "title": "Strange behavior with Watch statement", "user": {"login": "mcscope", "id": 3921648, "node_id": "MDQ6VXNlcjM5MjE2NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3921648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcscope", "html_url": "https://github.com/mcscope", "followers_url": "https://api.github.com/users/mcscope/followers", "following_url": "https://api.github.com/users/mcscope/following{/other_user}", "gists_url": "https://api.github.com/users/mcscope/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcscope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcscope/subscriptions", "organizations_url": "https://api.github.com/users/mcscope/orgs", "repos_url": "https://api.github.com/users/mcscope/repos", "events_url": "https://api.github.com/users/mcscope/events{/privacy}", "received_events_url": "https://api.github.com/users/mcscope/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573076, "node_id": "MDU6TGFiZWwxODU1NzMwNzY=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/Bug", "name": "Bug", "color": "e11d21", "default": false, "description": null}, {"id": 425476483, "node_id": "MDU6TGFiZWw0MjU0NzY0ODM=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/HelpWanted", "name": "HelpWanted", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-02-27T19:42:25Z", "updated_at": "2018-09-29T06:08:09Z", "closed_at": "2018-09-29T06:08:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think I've discovered a discrepancy between redis's watch statement implementation and fakeredis's mocking of that implementation. \nCode that runs fine on actual redis throws a watch error every time when using fakeredis. \n\nI reduced the code down into the minimal example, below.\n\n```\nkey = 'testkey'\nfake_redis = fakeredis.FakeStrictRedis()\nredis = RedisProxy() # however you connect to your redis\nwith fake_redis.pipeline(transaction=True) as pl:\n    pl.watch(key)\n    pl.hset(key, 'blah1', \"blah2\")\n\n    pl.execute()\n```\n\nif you use redis.pipeline, this code works fine, if you use fake_redis.pipeline, you get the following\n\n```\nIn [8]:     pl.execute()\n---------------------------------------------------------------------------\nWatchError                                Traceback (most recent call last)\n<ipython-input-8-622a4d39c733> in <module>()\n----> 1 pl.execute()\n\n/usr/local/Cellar/python/2.7.8_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/fakeredis-0.5.1-py2.7.egg/fakeredis.pyc in execute(self)\n   1247                     'Watched key%s %s changed' % (\n   1248                         '' if len(mismatches) == 1 else\n-> 1249                         's', ', '.join(k for (k, _, _) in mismatches)))\n   1250         ret = [getattr(self.owner, name)(*args, **kwargs)\n   1251                for name, args, kwargs in self.commands]\n\nWatchError: Watched key testkey changed\n\n```\n\nA watch shouldn't throw an error if it's modified by the same connection that set the watch - it should only error if it's modified by another connection, to prevent race conditions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/69", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/69/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/69/events", "html_url": "https://github.com/jamesls/fakeredis/issues/69", "id": 56265763, "node_id": "MDU6SXNzdWU1NjI2NTc2Mw==", "number": 69, "title": ".mget(n) should fail when n = []", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-02-02T17:24:50Z", "updated_at": "2015-03-11T03:59:18Z", "closed_at": "2015-03-11T03:59:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Real Redis: `ResponseError: wrong number of arguments for 'mget' command`\nFake redis: no issues\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/67", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/67/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/67/events", "html_url": "https://github.com/jamesls/fakeredis/issues/67", "id": 54291096, "node_id": "MDU6SXNzdWU1NDI5MTA5Ng==", "number": 67, "title": "not support scan command?", "user": {"login": "liamchzh", "id": 2217445, "node_id": "MDQ6VXNlcjIyMTc0NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2217445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liamchzh", "html_url": "https://github.com/liamchzh", "followers_url": "https://api.github.com/users/liamchzh/followers", "following_url": "https://api.github.com/users/liamchzh/following{/other_user}", "gists_url": "https://api.github.com/users/liamchzh/gists{/gist_id}", "starred_url": "https://api.github.com/users/liamchzh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liamchzh/subscriptions", "organizations_url": "https://api.github.com/users/liamchzh/orgs", "repos_url": "https://api.github.com/users/liamchzh/repos", "events_url": "https://api.github.com/users/liamchzh/events{/privacy}", "received_events_url": "https://api.github.com/users/liamchzh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-14T07:08:15Z", "updated_at": "2015-03-11T03:59:54Z", "closed_at": "2015-03-11T03:59:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/66", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/66/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/66/events", "html_url": "https://github.com/jamesls/fakeredis/issues/66", "id": 51177425, "node_id": "MDU6SXNzdWU1MTE3NzQyNQ==", "number": 66, "title": "Use lupa to fake eval support for redis", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573068, "node_id": "MDU6TGFiZWwxODU1NzMwNjg=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/FeatureRequest", "name": "FeatureRequest", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-06T09:38:32Z", "updated_at": "2018-03-22T14:55:50Z", "closed_at": "2018-03-22T14:55:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://pypi.python.org/pypi/lupa is a bridge from python to lua.\nIt can be used to provide the same environment as redis provides so that lua scripts will be able to be tested without using a real redis instance.\nWhat do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/65", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/65/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/65/events", "html_url": "https://github.com/jamesls/fakeredis/issues/65", "id": 50507607, "node_id": "MDU6SXNzdWU1MDUwNzYwNw==", "number": 65, "title": "fakeredis should support `execute_command` method", "user": {"login": "lfyzjck", "id": 800042, "node_id": "MDQ6VXNlcjgwMDA0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/800042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfyzjck", "html_url": "https://github.com/lfyzjck", "followers_url": "https://api.github.com/users/lfyzjck/followers", "following_url": "https://api.github.com/users/lfyzjck/following{/other_user}", "gists_url": "https://api.github.com/users/lfyzjck/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfyzjck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfyzjck/subscriptions", "organizations_url": "https://api.github.com/users/lfyzjck/orgs", "repos_url": "https://api.github.com/users/lfyzjck/repos", "events_url": "https://api.github.com/users/lfyzjck/events{/privacy}", "received_events_url": "https://api.github.com/users/lfyzjck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573068, "node_id": "MDU6TGFiZWwxODU1NzMwNjg=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/FeatureRequest", "name": "FeatureRequest", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-12-01T10:19:13Z", "updated_at": "2019-01-14T08:33:19Z", "closed_at": "2019-01-14T08:33:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "In some cases, people may use redis.Redis.execute_command directly\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/62", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/62/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/62/events", "html_url": "https://github.com/jamesls/fakeredis/issues/62", "id": 42687284, "node_id": "MDU6SXNzdWU0MjY4NzI4NA==", "number": 62, "title": "Using `GET` with a hash returns a stringified representation of that hash", "user": {"login": "sgammon", "id": 171897, "node_id": "MDQ6VXNlcjE3MTg5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/171897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgammon", "html_url": "https://github.com/sgammon", "followers_url": "https://api.github.com/users/sgammon/followers", "following_url": "https://api.github.com/users/sgammon/following{/other_user}", "gists_url": "https://api.github.com/users/sgammon/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgammon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgammon/subscriptions", "organizations_url": "https://api.github.com/users/sgammon/orgs", "repos_url": "https://api.github.com/users/sgammon/repos", "events_url": "https://api.github.com/users/sgammon/events{/privacy}", "received_events_url": "https://api.github.com/users/sgammon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-13T05:04:20Z", "updated_at": "2015-02-21T23:30:16Z", "closed_at": "2015-02-21T23:30:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you set a key to a value in a hash (thereby provisioning it in Fakeredis' internal storage), but then access it as if it were a simple key, `fakeredis` responds by stringifying an internal object and passing it back, where it should raise a `TypeError`.\n\nSteps to reproduce:\n1) `fakeredis.hset('hash', 'key', 'value')`\n2) `fakeredis.get('hash')` produces `'<fakeredis._StrKeyDict object at 0x10ad47d90>'`\n\nHow Redis handles this:\n1) `HSET blab bleebs 5`\n2) `HGET blab bleebs` produces `5`\n3) `GET blab` produces `(error) WRONGTYPE Operation against a key holding the wrong kind of value`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamesls/fakeredis/issues/60", "repository_url": "https://api.github.com/repos/jamesls/fakeredis", "labels_url": "https://api.github.com/repos/jamesls/fakeredis/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/jamesls/fakeredis/issues/60/comments", "events_url": "https://api.github.com/repos/jamesls/fakeredis/issues/60/events", "html_url": "https://github.com/jamesls/fakeredis/issues/60", "id": 42132098, "node_id": "MDU6SXNzdWU0MjEzMjA5OA==", "number": 60, "title": "redis.type(key) returns None regardless of data added", "user": {"login": "morgajel", "id": 1386700, "node_id": "MDQ6VXNlcjEzODY3MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1386700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morgajel", "html_url": "https://github.com/morgajel", "followers_url": "https://api.github.com/users/morgajel/followers", "following_url": "https://api.github.com/users/morgajel/following{/other_user}", "gists_url": "https://api.github.com/users/morgajel/gists{/gist_id}", "starred_url": "https://api.github.com/users/morgajel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morgajel/subscriptions", "organizations_url": "https://api.github.com/users/morgajel/orgs", "repos_url": "https://api.github.com/users/morgajel/repos", "events_url": "https://api.github.com/users/morgajel/events{/privacy}", "received_events_url": "https://api.github.com/users/morgajel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 185573068, "node_id": "MDU6TGFiZWwxODU1NzMwNjg=", "url": "https://api.github.com/repos/jamesls/fakeredis/labels/FeatureRequest", "name": "FeatureRequest", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-07T01:49:33Z", "updated_at": "2015-04-04T06:38:17Z", "closed_at": "2015-04-04T06:38:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "While trying to mock a list, I found that trying to return the type returns None.\n\n> > > import fakeredis\n> > > redis=fakeredis.FakeStrictRedis()\n> > > redis.lpush('bar', 2)\n> > > 2\n> > > print redis.type('bar')\n> > > None\n", "performed_via_github_app": null, "score": 1.0}]}