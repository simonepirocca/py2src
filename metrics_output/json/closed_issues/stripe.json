{"total_count": 243, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/stripe/stripe-python/issues/671", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/671/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/671/events", "html_url": "https://github.com/stripe/stripe-python/issues/671", "id": 674087367, "node_id": "MDU6SXNzdWU2NzQwODczNjc=", "number": 671, "title": "Deletion during iteration fails", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "richardm-stripe", "id": 52928443, "node_id": "MDQ6VXNlcjUyOTI4NDQz", "avatar_url": "https://avatars1.githubusercontent.com/u/52928443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardm-stripe", "html_url": "https://github.com/richardm-stripe", "followers_url": "https://api.github.com/users/richardm-stripe/followers", "following_url": "https://api.github.com/users/richardm-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/richardm-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardm-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardm-stripe/subscriptions", "organizations_url": "https://api.github.com/users/richardm-stripe/orgs", "repos_url": "https://api.github.com/users/richardm-stripe/repos", "events_url": "https://api.github.com/users/richardm-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/richardm-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "richardm-stripe", "id": 52928443, "node_id": "MDQ6VXNlcjUyOTI4NDQz", "avatar_url": "https://avatars1.githubusercontent.com/u/52928443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardm-stripe", "html_url": "https://github.com/richardm-stripe", "followers_url": "https://api.github.com/users/richardm-stripe/followers", "following_url": "https://api.github.com/users/richardm-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/richardm-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardm-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardm-stripe/subscriptions", "organizations_url": "https://api.github.com/users/richardm-stripe/orgs", "repos_url": "https://api.github.com/users/richardm-stripe/repos", "events_url": "https://api.github.com/users/richardm-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/richardm-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2020-08-06T07:27:35Z", "updated_at": "2020-08-12T02:17:48Z", "closed_at": "2020-08-06T16:54:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.8 and stripe 2.50\r\n\r\nI have a script running on a test instance which deletes old data, with criteria `created`, and it regularly fails, but continues when re-started.  This occurs on all models I have attempted so far, and my guess it is the pagination.  I can do a complete fetch of the list of objects before beginning deletion, and it is reasonable to require some pre-fetching at some level.  Ideally it should be possible to ask the paginator to always be one page ahead of the record being emitted from the generator so this can not happen, and even default to this if it doesnt have significant perf implications, and I suspect it doesn't.\r\n\r\n```py\r\ndelete <class 'djstripe.models.billing.Plan'> acct_1GW7fzHlqM9uH8UM {'created': {'lt': '1593993600'}}\r\nDeleting Plan for acct_1GW7fzHlqM9uH8UM:\r\nlist_kwargs {'stripe_account': 'acct_1GW7fzHlqM9uH8UM', 'created': {'lt': '1593993600'}}\r\n  id=plan_HIcUnkN0AnyVDg, pk=None (<Plan: id=plan_HIcUnkN0AnyVDg>)\r\n  id=plan_HIcUjIxlNluhQe, pk=None (<Plan: id=plan_HIcUjIxlNluhQe>)\r\n  id=plan_HIcTPG8yANf9ML, pk=None (<Plan: id=plan_HIcTPG8yANf9ML>)\r\n  id=plan_HIcTfqs3uqo8Qq, pk=None (<Plan: id=plan_HIcTfqs3uqo8Qq>)\r\n  id=plan_HIcTNXrD8izMUQ, pk=None (<Plan: id=plan_HIcTNXrD8izMUQ>)\r\n  id=plan_HIcRNPUeR7WOok, pk=None (<Plan: id=plan_HIcRNPUeR7WOok>)\r\n  id=plan_HIcR36hhEE09re, pk=None (<Plan: id=plan_HIcR36hhEE09re>)\r\n  id=plan_HIcQ7395qtJpO3, pk=None (<Plan: id=plan_HIcQ7395qtJpO3>)\r\n  id=plan_HIcQJyJu2sL8ho, pk=None (<Plan: id=plan_HIcQJyJu2sL8ho>)\r\n  id=plan_HIcQn319nczaX0, pk=None (<Plan: id=plan_HIcQn319nczaX0>)\r\nTraceback (most recent call last):\r\n  File \"...\"\r\n    for stripe_obj in model.api_list(**list_kwargs):\r\n  File \"/usr/lib/python3.8/site-packages/stripe/api_resources/list_object.py\", line 120, in auto_paging_iter\r\n    page = page.next_page()\r\n  File \"/usr/lib/python3.8/site-packages/stripe/api_resources/list_object.py\", line 157, in next_page\r\n    return self.list(\r\n  File \"/usr/lib/python3.8/site-packages/stripe/api_resources/list_object.py\", line 15, in list\r\n    stripe_object = self._request(\r\n  File \"/usr/lib/python3.8/site-packages/stripe/api_resources/list_object.py\", line 80, in _request\r\n    response, api_key = requestor.request(method_, url_, params, headers)\r\n  File \"/usr/lib/python3.8/site-packages/stripe/api_requestor.py\", line 122, in request\r\n    resp = self.interpret_response(rbody, rcode, rheaders)\r\n  File \"/usr/lib/python3.8/site-packages/stripe/api_requestor.py\", line 373, in interpret_response\r\n    self.handle_error_response(rbody, rcode, resp.data, rheaders)\r\n  File \"/usr/lib/python3.8/site-packages/stripe/api_requestor.py\", line 152, in handle_error_response\r\n    raise err\r\nstripe.error.InvalidRequestError: Request req_HQ7JuiqFh7u60d: No such plan: 'plan_HIcQn319nczaX0'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/668", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/668/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/668/events", "html_url": "https://github.com/stripe/stripe-python/issues/668", "id": 672344759, "node_id": "MDU6SXNzdWU2NzIzNDQ3NTk=", "number": 668, "title": "Unable to access stripe error classes", "user": {"login": "crazyberry7", "id": 22305906, "node_id": "MDQ6VXNlcjIyMzA1OTA2", "avatar_url": "https://avatars2.githubusercontent.com/u/22305906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crazyberry7", "html_url": "https://github.com/crazyberry7", "followers_url": "https://api.github.com/users/crazyberry7/followers", "following_url": "https://api.github.com/users/crazyberry7/following{/other_user}", "gists_url": "https://api.github.com/users/crazyberry7/gists{/gist_id}", "starred_url": "https://api.github.com/users/crazyberry7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crazyberry7/subscriptions", "organizations_url": "https://api.github.com/users/crazyberry7/orgs", "repos_url": "https://api.github.com/users/crazyberry7/repos", "events_url": "https://api.github.com/users/crazyberry7/events{/privacy}", "received_events_url": "https://api.github.com/users/crazyberry7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-08-03T21:10:43Z", "updated_at": "2020-08-03T22:11:52Z", "closed_at": "2020-08-03T22:11:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe I'm missing something, but stripe/__init__.py is missing an import statement for error.py\r\n\r\ne.g. \"from error.py import *\"\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/667", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/667/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/667/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/667/events", "html_url": "https://github.com/stripe/stripe-python/issues/667", "id": 666697228, "node_id": "MDU6SXNzdWU2NjY2OTcyMjg=", "number": 667, "title": "AttributeError when calling stripe.Invoice.retrieve: module 'stripe.api_resources' has no attribute 'LineItem'", "user": {"login": "alanhamlett", "id": 522344, "node_id": "MDQ6VXNlcjUyMjM0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/522344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhamlett", "html_url": "https://github.com/alanhamlett", "followers_url": "https://api.github.com/users/alanhamlett/followers", "following_url": "https://api.github.com/users/alanhamlett/following{/other_user}", "gists_url": "https://api.github.com/users/alanhamlett/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhamlett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhamlett/subscriptions", "organizations_url": "https://api.github.com/users/alanhamlett/orgs", "repos_url": "https://api.github.com/users/alanhamlett/repos", "events_url": "https://api.github.com/users/alanhamlett/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhamlett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-28T02:08:26Z", "updated_at": "2020-07-28T02:51:42Z", "closed_at": "2020-07-28T02:51:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Might be related to #655, after upgrading to 2.49.0 I'm getting exceptions when calling `stripe.Invoice.retrieve` that's definitely a stripe-python bug:\r\n\r\n```\r\nFile \"/opt/wakatime/current/wakatime/models/billing.py\", line 1888, in create_stripe_receipt\r\n    invoice = stripe.Invoice.retrieve(invoice_id)\r\n  File \"/opt/wakatime/current/venv/lib/python3.6/site-packages/stripe/api_resources/abstract/api_resource.py\", line 12, in retrieve\r\n    instance.refresh()\r\n  File \"/opt/wakatime/current/venv/lib/python3.6/site-packages/stripe/api_resources/abstract/api_resource.py\", line 16, in refresh\r\n    self.refresh_from(self.request(\"get\", self.instance_url()))\r\n  File \"/opt/wakatime/current/venv/lib/python3.6/site-packages/stripe/stripe_object.py\", line 246, in request\r\n    response, api_key, self.stripe_version, self.stripe_account\r\n  File \"/opt/wakatime/current/venv/lib/python3.6/site-packages/stripe/util.py\", line 165, in convert_to_stripe_object\r\n    klass = get_object_classes().get(\r\n  File \"/opt/wakatime/current/venv/lib/python3.6/site-packages/stripe/util.py\", line 135, in get_object_classes\r\n    from stripe.object_classes import OBJECT_CLASSES\r\n  File \"/opt/wakatime/current/venv/lib/python3.6/site-packages/stripe/object_classes.py\", line 49, in <module>\r\n    api_resources.LineItem.OBJECT_NAME: api_resources.LineItem,\r\nAttributeError: module 'stripe.api_resources' has no attribute 'LineItem'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/664", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/664/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/664/events", "html_url": "https://github.com/stripe/stripe-python/issues/664", "id": 652874896, "node_id": "MDU6SXNzdWU2NTI4NzQ4OTY=", "number": 664, "title": "You do not have permission to pass this beta header: oxxo_beta is broken", "user": {"login": "victorct-pronto", "id": 56981448, "node_id": "MDQ6VXNlcjU2OTgxNDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/56981448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victorct-pronto", "html_url": "https://github.com/victorct-pronto", "followers_url": "https://api.github.com/users/victorct-pronto/followers", "following_url": "https://api.github.com/users/victorct-pronto/following{/other_user}", "gists_url": "https://api.github.com/users/victorct-pronto/gists{/gist_id}", "starred_url": "https://api.github.com/users/victorct-pronto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victorct-pronto/subscriptions", "organizations_url": "https://api.github.com/users/victorct-pronto/orgs", "repos_url": "https://api.github.com/users/victorct-pronto/repos", "events_url": "https://api.github.com/users/victorct-pronto/events{/privacy}", "received_events_url": "https://api.github.com/users/victorct-pronto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-07-08T03:05:50Z", "updated_at": "2020-07-08T17:53:45Z", "closed_at": "2020-07-08T04:24:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Library version: 2.48.0\r\nAPI Version: 2020-03-02; oxxo_beta=v1\r\n\r\nSo I use an application where I have two different stripe accounts (One for connect and other for customers), and on both of the apps I have the OXXO Beta Active (Mexico City), the problem is, whenever I do a request with one of the following methods: \r\n\r\n- `stripe.Account.create_external_account`\r\n- `stripe.Account.modify`\r\n\r\nI'm getting the next error `Invalid Stripe API version: 2020-03-02; oxxo_beta=v1. You do not have permission to pass this beta header: oxxo_beta. If you have any questions, we can help at https://support.stripe.com/.`\r\n\r\nThe problem is, it only happens with these requests, if I use on of the following methods for example:\r\n\r\n- `stripe.Customer.create_source`\r\n- `stripe.Account.create`\r\n- `stripe.Customer.create`\r\n\r\nI get a successful response, here are some examples of how I'm using them:\r\n\r\n`stripe.Customer.create_source`: \r\n\r\n```\r\nstripe.Customer.create_source(customer_id, source=card_token, stripe_version=\"2020-03-02; oxxo_beta=v1\",\r\n                                             api_key=ENV.STRIPE_DRIVER_SECRET_KEY)\r\n```\r\n\r\n`stripe.Account.create_external_account`:\r\n\r\n```\r\nexternal_account = stripe.Account.create_external_account(\r\n            account_id,\r\n            external_account=external_account,\r\n            stripe_version=\"2020-03-02; oxxo_beta=v1\",\r\n            api_key=ENV.STRIPE_DRIVER_SECRET_KEY\r\n        )\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/663", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/663/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/663/events", "html_url": "https://github.com/stripe/stripe-python/issues/663", "id": 652865784, "node_id": "MDU6SXNzdWU2NTI4NjU3ODQ=", "number": 663, "title": "API is not the same as the other methods", "user": {"login": "victorct-pronto", "id": 56981448, "node_id": "MDQ6VXNlcjU2OTgxNDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/56981448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victorct-pronto", "html_url": "https://github.com/victorct-pronto", "followers_url": "https://api.github.com/users/victorct-pronto/followers", "following_url": "https://api.github.com/users/victorct-pronto/following{/other_user}", "gists_url": "https://api.github.com/users/victorct-pronto/gists{/gist_id}", "starred_url": "https://api.github.com/users/victorct-pronto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victorct-pronto/subscriptions", "organizations_url": "https://api.github.com/users/victorct-pronto/orgs", "repos_url": "https://api.github.com/users/victorct-pronto/repos", "events_url": "https://api.github.com/users/victorct-pronto/events{/privacy}", "received_events_url": "https://api.github.com/users/victorct-pronto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-07-08T02:52:46Z", "updated_at": "2020-07-17T16:26:43Z", "closed_at": "2020-07-17T16:26:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "In your [documentation](https://stripe.com/docs/api/versioning?lang=python) says that in order to use multiple api versions you have to use `stripe_version` as a parameter to a function, but in the `File` class the  `create` method follows a different convention and the parameter is called `api_version` I think it should follow what is already posted on the documentation\r\n\r\nhttps://github.com/stripe/stripe-python/blob/d3835ab73fcb8270d68e99ccc19fe2f21465b312/stripe/api_resources/file.py#L29", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/662", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/662/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/662/events", "html_url": "https://github.com/stripe/stripe-python/issues/662", "id": 644546266, "node_id": "MDU6SXNzdWU2NDQ1NDYyNjY=", "number": 662, "title": "Unable to charge test card", "user": {"login": "aldwnesx", "id": 52225831, "node_id": "MDQ6VXNlcjUyMjI1ODMx", "avatar_url": "https://avatars3.githubusercontent.com/u/52225831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldwnesx", "html_url": "https://github.com/aldwnesx", "followers_url": "https://api.github.com/users/aldwnesx/followers", "following_url": "https://api.github.com/users/aldwnesx/following{/other_user}", "gists_url": "https://api.github.com/users/aldwnesx/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldwnesx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldwnesx/subscriptions", "organizations_url": "https://api.github.com/users/aldwnesx/orgs", "repos_url": "https://api.github.com/users/aldwnesx/repos", "events_url": "https://api.github.com/users/aldwnesx/events{/privacy}", "received_events_url": "https://api.github.com/users/aldwnesx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-06-24T11:38:58Z", "updated_at": "2020-06-24T15:43:38Z", "closed_at": "2020-06-24T15:43:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to charge cards via Python.\r\nHowever, I cannot get it to work.\r\naccording to documentation I can use the test stripe cards\r\nhttps://stripe.com/docs/testing\r\n\r\nHowever when using one of the test cards, i am getting error\r\n\r\n    stripe.error.InvalidRequestError: Request req_y3tPpc4nHFd7Pi: No such token: 4242424242424242\r\n\r\nPlease let me know how I can test. I do not have a stripe account with cards or balances.\r\n\r\n\r\n    stripe.api_key = \"sk_test_4eC39HqLyjWDarjtT1zdp7dc\"\r\n    \r\n    a = stripe.Charge.create(\r\n      amount=2000,\r\n      currency=\"usd\",\r\n      source=\"4242424242424242\",\r\n      description=\"My First Test Charge (created for API docs)\",\r\n    )\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/661", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/661/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/661/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/661/events", "html_url": "https://github.com/stripe/stripe-python/issues/661", "id": 637223703, "node_id": "MDU6SXNzdWU2MzcyMjM3MDM=", "number": 661, "title": "Auto paginator in rare case attempts to call next on list object even though has_more should be false", "user": {"login": "asaf-erlich", "id": 1738335, "node_id": "MDQ6VXNlcjE3MzgzMzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1738335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asaf-erlich", "html_url": "https://github.com/asaf-erlich", "followers_url": "https://api.github.com/users/asaf-erlich/followers", "following_url": "https://api.github.com/users/asaf-erlich/following{/other_user}", "gists_url": "https://api.github.com/users/asaf-erlich/gists{/gist_id}", "starred_url": "https://api.github.com/users/asaf-erlich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asaf-erlich/subscriptions", "organizations_url": "https://api.github.com/users/asaf-erlich/orgs", "repos_url": "https://api.github.com/users/asaf-erlich/repos", "events_url": "https://api.github.com/users/asaf-erlich/events{/privacy}", "received_events_url": "https://api.github.com/users/asaf-erlich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-06-11T18:09:41Z", "updated_at": "2020-07-20T16:53:40Z", "closed_at": "2020-07-20T16:53:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm a developer from [Stitch](https://www.stitchdata.com/) where I am helping to diagnose an issue one of our shared customers has running our [tap-stripe code](https://app.circleci.com/pipelines/github/singer-io/tap-stripe) to download stripe data. There is a request made by the auto paginator which fails with the error:\r\n```\r\nRequest req_zbWCK7axFicC3v: Old `id` values cannot be used to specify an invoice line item in this API version. Please use the current value of the `id` field of the invoice line item object.\r\n```\r\nThis occurs when the previous list request using curl returns the following (wrote ... / REDACTED for a lot of values, not 100% sure what customer data is public / private exactly):\r\n```\r\ncurl -H 'Stripe-Account: REDACTED' -H 'Stripe-Version: 2018-0\r\n9-24' -u REDACTED: -G 'https://api.stripe.com/v1/invoices/<REDACTED>/lines?limit=100'\r\n{\r\n  \"object\": \"list\",\r\n  \"data\": [\r\n    ...\r\n  ],\r\n  \"has_more\": false,\r\n  ...\r\n}\r\n```\r\nBut I put a debugger in the python sdk in the next_page method and when printing self I get:\r\n```\r\nself\r\n<ListObject list at 0x7fce04929f48> JSON: {\r\n  \"data\": [\r\n    ...\r\n  ],\r\n  \"has_more\": true,\r\n  \"object\": \"list\",\r\n  \"total_count\": 11,\r\n  ...\r\n}\r\n```\r\nNote the \"has_more\" is different. It looks like a bug in the python sdk to me. Let me know if you need more information to reproduce this. I can reach out to the shared customer to ask for their information for you. A support ticket is an option as well.\r\n\r\nPython version: 3.5.2\r\nPython stripe library version: 2.48.0 (also tested earlier on 2.10.1, but we tried upgrading to see if that fixes it)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/660", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/660/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/660/events", "html_url": "https://github.com/stripe/stripe-python/issues/660", "id": 635184155, "node_id": "MDU6SXNzdWU2MzUxODQxNTU=", "number": 660, "title": "Intermittent APIConnectionError(message='Could not verify Stripe's SSL certificate.  Please make sure that your network is not intercepting certificates", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-09T07:32:55Z", "updated_at": "2020-06-09T20:57:00Z", "closed_at": "2020-06-09T20:35:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Over the last few days I have started seeing this error occurring, intermittently.  I am using the default http client which is choosing `requests`.  I set `stripe.verify_ssl_certs = False` but it is still happening.\r\n\r\n```py\r\n/usr/lib/python3.8/site-packages/urllib3/connectionpool.py:997: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.stripe.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n  warnings.warn(\r\n[07:11:33][ERROR] oscar_apps.checkout.facade facade.py:get_customer:108 | connected customer retrieve error: APIConnectionError(message='Could not verify Stripe\\'s SSL certificate.  Please make sure that your\\nnetwork is not intercepting certificates.  If this problem persists,\\nlet us know at support@stripe.com.\\n\\n(Network error: SSLError: HTTPSConnectionPool(host=\\'api.stripe.com\\', port=443): Max retries exceeded with url: /v1/customers?email=***** (Caused by SSLError(SSLError(\"read error: Error([(\\'SSL routines\\', \\'SSL_shutdown\\', \\'shutdown while in init\\')])\"))))', http_status=None, request_id=None)\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 665, in urlopen\r\n    httplib_response = self._make_request(\r\n  File \"/usr/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 421, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n  File \"/usr/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 416, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"/usr/lib64/python3.8/http/client.py\", line 1322, in getresponse\r\n    response.begin()\r\n  File \"/usr/lib64/python3.8/http/client.py\", line 303, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/usr/lib64/python3.8/http/client.py\", line 264, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"/usr/lib64/python3.8/socket.py\", line 669, in readinto\r\n    return self._sock.recv_into(b)\r\n  File \"/usr/lib/python3.8/site-packages/urllib3/contrib/pyopenssl.py\", line 332, in recv_into\r\n    raise ssl.SSLError(\"read error: %r\" % e)\r\nssl.SSLError: (\"read error: Error([('SSL routines', 'SSL_shutdown', 'shutdown while in init')])\",)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/659", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/659/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/659/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/659/events", "html_url": "https://github.com/stripe/stripe-python/issues/659", "id": 631032927, "node_id": "MDU6SXNzdWU2MzEwMzI5Mjc=", "number": 659, "title": "Module 'stripe' has no 'Price' memberpylint(no-member)", "user": {"login": "leeadh", "id": 15122358, "node_id": "MDQ6VXNlcjE1MTIyMzU4", "avatar_url": "https://avatars3.githubusercontent.com/u/15122358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leeadh", "html_url": "https://github.com/leeadh", "followers_url": "https://api.github.com/users/leeadh/followers", "following_url": "https://api.github.com/users/leeadh/following{/other_user}", "gists_url": "https://api.github.com/users/leeadh/gists{/gist_id}", "starred_url": "https://api.github.com/users/leeadh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leeadh/subscriptions", "organizations_url": "https://api.github.com/users/leeadh/orgs", "repos_url": "https://api.github.com/users/leeadh/repos", "events_url": "https://api.github.com/users/leeadh/events{/privacy}", "received_events_url": "https://api.github.com/users/leeadh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-06-04T17:54:29Z", "updated_at": "2020-06-04T19:28:06Z", "closed_at": "2020-06-04T19:28:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am able to create a stripe charge and stripe payment intent. however when I try to do stripe.price it keeps throwing me this error. I have already ensured that my file is not named stripe (its called sample.py). Whats wrong", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/658", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/658/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/658/events", "html_url": "https://github.com/stripe/stripe-python/issues/658", "id": 624697400, "node_id": "MDU6SXNzdWU2MjQ2OTc0MDA=", "number": 658, "title": "How to delete a price using API", "user": {"login": "moskrc", "id": 364857, "node_id": "MDQ6VXNlcjM2NDg1Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/364857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moskrc", "html_url": "https://github.com/moskrc", "followers_url": "https://api.github.com/users/moskrc/followers", "following_url": "https://api.github.com/users/moskrc/following{/other_user}", "gists_url": "https://api.github.com/users/moskrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/moskrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moskrc/subscriptions", "organizations_url": "https://api.github.com/users/moskrc/orgs", "repos_url": "https://api.github.com/users/moskrc/repos", "events_url": "https://api.github.com/users/moskrc/events{/privacy}", "received_events_url": "https://api.github.com/users/moskrc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-26T08:28:56Z", "updated_at": "2020-06-02T15:35:09Z", "closed_at": "2020-05-26T15:42:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI want to delete a price inside a product, I can do it in the Stripe dashboard, but I can\u2019t do this using API\r\n\r\nCode: \r\n\r\n```\r\nstripe.Price.delete(\"price_HLez6Zi58HejNP\")\r\n```\r\n\r\nResult:\r\n\r\n```\r\n  File \"../src/payments/models.py\", line 81, in delete\r\n    stripe.Price.delete(self.stripe_id)\r\nAttributeError: type object 'Price' has no attribute 'delete'\r\n```\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/657", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/657/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/657/events", "html_url": "https://github.com/stripe/stripe-python/issues/657", "id": 620027929, "node_id": "MDU6SXNzdWU2MjAwMjc5Mjk=", "number": 657, "title": "Unpickled Stripe objects can't be updated", "user": {"login": "imankulov", "id": 75075, "node_id": "MDQ6VXNlcjc1MDc1", "avatar_url": "https://avatars3.githubusercontent.com/u/75075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imankulov", "html_url": "https://github.com/imankulov", "followers_url": "https://api.github.com/users/imankulov/followers", "following_url": "https://api.github.com/users/imankulov/following{/other_user}", "gists_url": "https://api.github.com/users/imankulov/gists{/gist_id}", "starred_url": "https://api.github.com/users/imankulov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imankulov/subscriptions", "organizations_url": "https://api.github.com/users/imankulov/orgs", "repos_url": "https://api.github.com/users/imankulov/repos", "events_url": "https://api.github.com/users/imankulov/events{/privacy}", "received_events_url": "https://api.github.com/users/imankulov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-18T08:52:12Z", "updated_at": "2020-05-20T13:56:59Z", "closed_at": "2020-05-18T15:33:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like unpickled Stripe objects can't interact properly with the Stripe API. Reproduced at least for the Customer object. Reproduced for the Python2.7 and Python3.8.\r\n\r\n**Version info**\r\n\r\n```python\r\n>>> import sys\r\n>>> import stripe\r\n>>> stripe.version.VERSION\r\n'2.48.0'\r\n>>> sys.version_info\r\nsys.version_info(major=3, minor=8, micro=1, releaselevel='final', serial=0)\r\n```\r\n\r\n**Everything works well with regular Stripe objects**\r\n\r\n```python\r\n>>> cc = stripe.Customer.retrieve(id='cus_xxxx')\r\n>>> cc.description = 'foo'\r\n>>> ok = cc.save()\r\n>>> cc.save()\r\n<Customer customer id=cus_xxxx> JSON: {\r\n  \"address\": null,\r\n  \"balance\": 0,\r\n...\r\n```\r\n\r\n**Pickle + unpickle makes a customer object impossible to save**\r\n\r\n```python\r\n>>> import pickle\r\n>>> cc2 = pickle.loads(pickle.dumps(cc))\r\n>>> cc2.description = 'bar'\r\n>>> cc2.save()\r\nInvalidRequestError                       Traceback (most recent call last)\r\n...\r\nInvalidRequestError: Request req_xxxx: Received unknown parameters: object, created, currency, delinquent, discount, livemode, sources, subscriptions, tax_ids. Did you mean source, description, or tax_id_data?\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/654", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/654/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/654/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/654/events", "html_url": "https://github.com/stripe/stripe-python/issues/654", "id": 614484808, "node_id": "MDU6SXNzdWU2MTQ0ODQ4MDg=", "number": 654, "title": "It's not really clear what the limit paramer in stripe.Model.list() do", "user": {"login": "PabloCastellano", "id": 73274, "node_id": "MDQ6VXNlcjczMjc0", "avatar_url": "https://avatars1.githubusercontent.com/u/73274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PabloCastellano", "html_url": "https://github.com/PabloCastellano", "followers_url": "https://api.github.com/users/PabloCastellano/followers", "following_url": "https://api.github.com/users/PabloCastellano/following{/other_user}", "gists_url": "https://api.github.com/users/PabloCastellano/gists{/gist_id}", "starred_url": "https://api.github.com/users/PabloCastellano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PabloCastellano/subscriptions", "organizations_url": "https://api.github.com/users/PabloCastellano/orgs", "repos_url": "https://api.github.com/users/PabloCastellano/repos", "events_url": "https://api.github.com/users/PabloCastellano/events{/privacy}", "received_events_url": "https://api.github.com/users/PabloCastellano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-05-08T03:53:30Z", "updated_at": "2020-05-11T20:39:04Z", "closed_at": "2020-05-11T20:39:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. Not sure if it's a bug or a feature.\r\n\r\nI've been reading the Pagination documentation and specially the [Auto pagination](https://stripe.com/docs/api/pagination/auto) section and I'm confused now.\r\n\r\nThe example shown is the following one\r\n\r\n```\r\ncustomers = stripe.Customer.list(limit=3)\r\nfor customer in customers.auto_paging_iter():\r\n  # Do something with customer\r\n```\r\n\r\nI read it as \"I want to get just 3 customers\". And in fact, `stripe.Customer.list(limit=3)` returns a list of 3 objects. However calling `auto_paging_iter()` right after that, loops over **all pages** and ends up returning **all** customers.\r\n\r\nhttps://github.com/stripe/stripe-python/blob/036f258ddcdd01a2900146a090fc205f9faf612a/stripe/api_resources/list_object.py#L106-L123\r\n\r\nFor my use case I just want to limit the number of results, that is, getting the most recent N stripe Events. And I want to easily auto paginate over that list. How can I do it? \r\n\r\nAnd if limit is not understood as the limit of results, but the limit of results **in each page**... then what is the point of using a limit and then iterating over all pages as show in the example?\r\n\r\nThe documentation section also says:\r\n\r\n> To use the auto-pagination feature in Python, simply issue an initial \"list\" call with the parameters you need, then call auto_paging_iter() on the returned list object to iterate over all objects matching your initial parameters.\r\n\r\nauto_paging_iter() is definitely not honouring my initial parameters!\r\n\r\nCheers\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/653", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/653/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/653/events", "html_url": "https://github.com/stripe/stripe-python/issues/653", "id": 613722591, "node_id": "MDU6SXNzdWU2MTM3MjI1OTE=", "number": 653, "title": "Clarify response type and handling of errors in the README?", "user": {"login": "mrcoles", "id": 136651, "node_id": "MDQ6VXNlcjEzNjY1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrcoles", "html_url": "https://github.com/mrcoles", "followers_url": "https://api.github.com/users/mrcoles/followers", "following_url": "https://api.github.com/users/mrcoles/following{/other_user}", "gists_url": "https://api.github.com/users/mrcoles/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrcoles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrcoles/subscriptions", "organizations_url": "https://api.github.com/users/mrcoles/orgs", "repos_url": "https://api.github.com/users/mrcoles/repos", "events_url": "https://api.github.com/users/mrcoles/events{/privacy}", "received_events_url": "https://api.github.com/users/mrcoles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-05-07T02:09:36Z", "updated_at": "2020-05-22T00:58:32Z", "closed_at": "2020-05-22T00:58:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "It\u2019d be helpful if the README had info on the response object type and handling error responses. It seems that trying it in a Python REPL is the best way, but it\u2019s still unexpected that they\u2019re both objects with attributes and dicts.\r\n\r\n**Response type:**\r\n\r\nIf the response is a success, then the response is always an instance of `stripe.stripe_object.StripeObject` or the subclass `stripe.api_resources.list_object.ListObject`, which is a dict or list matching the response body, but it has a couple other bells and whistles, including the ability to access and set values via attributes (instead of dictionary item lookup). It\u2019s possible I have a blind spot in the reading the docs, but I don\u2019t see this explained in the [Python API docs](https://stripe.com/docs/api?lang=python).\r\n\r\n**Error handling:**\r\n\r\nThis one is covered really well in the sample code in the [Python API docs \u201cHandling Errors\u201d section](https://stripe.com/docs/api/errors/handling?lang=python), but a little redundancy having it in the README (or just a clear deep-link to that section in the docs) would be nice.\r\n\r\nI think this would help people feel more confident using the library. Regardless, thanks for providing this and keep up the great work with the client and API!\r\n\r\nLoosely related issues:\r\n\r\n*   Are stripe objects dicts? https://github.com/stripe/stripe-python/issues/494\r\n*   Type annotations feature request https://github.com/stripe/stripe-python/issues/650\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/647", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/647/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/647/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/647/events", "html_url": "https://github.com/stripe/stripe-python/issues/647", "id": 589611284, "node_id": "MDU6SXNzdWU1ODk2MTEyODQ=", "number": 647, "title": "Feature Request: Function for Express OAuth Authorization", "user": {"login": "jensenbox", "id": 189265, "node_id": "MDQ6VXNlcjE4OTI2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/189265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jensenbox", "html_url": "https://github.com/jensenbox", "followers_url": "https://api.github.com/users/jensenbox/followers", "following_url": "https://api.github.com/users/jensenbox/following{/other_user}", "gists_url": "https://api.github.com/users/jensenbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/jensenbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jensenbox/subscriptions", "organizations_url": "https://api.github.com/users/jensenbox/orgs", "repos_url": "https://api.github.com/users/jensenbox/repos", "events_url": "https://api.github.com/users/jensenbox/events{/privacy}", "received_events_url": "https://api.github.com/users/jensenbox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-03-28T16:32:30Z", "updated_at": "2020-04-06T20:20:35Z", "closed_at": "2020-04-06T20:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "While I realize that I could easily replicate and modify the functionality of the staticmethod `stripe.OAuth.authorize_url(**params)` it would be very nice to have that as part of the standard library but for Express signups.\r\n\r\nhttps://stripe.com/docs/connect/express-accounts#integrating-oauth\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/645", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/645/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/645/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/645/events", "html_url": "https://github.com/stripe/stripe-python/issues/645", "id": 585650583, "node_id": "MDU6SXNzdWU1ODU2NTA1ODM=", "number": 645, "title": "stripe.OAuth.token doesn't offer a way to override global api_key", "user": {"login": "jarcoal", "id": 431261, "node_id": "MDQ6VXNlcjQzMTI2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/431261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarcoal", "html_url": "https://github.com/jarcoal", "followers_url": "https://api.github.com/users/jarcoal/followers", "following_url": "https://api.github.com/users/jarcoal/following{/other_user}", "gists_url": "https://api.github.com/users/jarcoal/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarcoal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarcoal/subscriptions", "organizations_url": "https://api.github.com/users/jarcoal/orgs", "repos_url": "https://api.github.com/users/jarcoal/repos", "events_url": "https://api.github.com/users/jarcoal/events{/privacy}", "received_events_url": "https://api.github.com/users/jarcoal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-03-22T05:42:30Z", "updated_at": "2020-03-24T05:08:39Z", "closed_at": "2020-03-23T21:58:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unlike most of the stripe object methods, [stripe.OAuth.token](https://github.com/stripe/stripe-python/blob/598566add896a571088c76acc073a8243afbbfb2/stripe/oauth.py#L39-L43) doesn't offer a way to pass in an `api_key` to override the global API key.\r\n\r\nThis capability is necessary to generate test access tokens from a production refresh token: https://stripe.com/docs/connect/testing#test-keys-for-livemode-applications", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/643", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/643/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/643/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/643/events", "html_url": "https://github.com/stripe/stripe-python/issues/643", "id": 563922599, "node_id": "MDU6SXNzdWU1NjM5MjI1OTk=", "number": 643, "title": "Minimum charge currency issue", "user": {"login": "KumarGeoSpark", "id": 24431309, "node_id": "MDQ6VXNlcjI0NDMxMzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/24431309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KumarGeoSpark", "html_url": "https://github.com/KumarGeoSpark", "followers_url": "https://api.github.com/users/KumarGeoSpark/followers", "following_url": "https://api.github.com/users/KumarGeoSpark/following{/other_user}", "gists_url": "https://api.github.com/users/KumarGeoSpark/gists{/gist_id}", "starred_url": "https://api.github.com/users/KumarGeoSpark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KumarGeoSpark/subscriptions", "organizations_url": "https://api.github.com/users/KumarGeoSpark/orgs", "repos_url": "https://api.github.com/users/KumarGeoSpark/repos", "events_url": "https://api.github.com/users/KumarGeoSpark/events{/privacy}", "received_events_url": "https://api.github.com/users/KumarGeoSpark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-02-12T11:03:59Z", "updated_at": "2020-02-13T10:11:52Z", "closed_at": "2020-02-12T15:48:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "python: Python 3.6.5 (default, Jul 26 2018, 23:29:40)\r\nstripe==2.10.1\r\n\r\nWe are having a issue while charging $0.50 USD . As this is the minimum amount one has to charge according to stripe docs to make a succesful minimum payment.\r\n\r\nBut while charging it we are facing a error from your stripe as:\r\n\r\nattached in the image here as heighlighted in console:\r\nhttps://user-images.githubusercontent.com/24431309/74328846-a8d1df80-4db4-11ea-9a38-b9e31d1b739c.png\r\n\r\n![Screenshot 2020-02-07 at 6 07 07 PM](https://user-images.githubusercontent.com/24431309/74328846-a8d1df80-4db4-11ea-9a38-b9e31d1b739c.png)\r\nSo why is my charge getting converted from USD to EUROS even if I pass the \r\nparam to stripe  using this function from stripe library\r\n```\r\nstripe.Charge.create(\r\n                    amount=<your amount>,\r\n                    currency=\"USD\",\r\n                    customer=card.stripe_cus_id,\r\n                    description=\"xyz\"\r\n                )\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/642", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/642/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/642/events", "html_url": "https://github.com/stripe/stripe-python/issues/642", "id": 563770224, "node_id": "MDU6SXNzdWU1NjM3NzAyMjQ=", "number": 642, "title": "ValueError when trying to pickle customer data due to a field containing emtpy string", "user": {"login": "eka", "id": 157223, "node_id": "MDQ6VXNlcjE1NzIyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/157223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eka", "html_url": "https://github.com/eka", "followers_url": "https://api.github.com/users/eka/followers", "following_url": "https://api.github.com/users/eka/following{/other_user}", "gists_url": "https://api.github.com/users/eka/gists{/gist_id}", "starred_url": "https://api.github.com/users/eka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eka/subscriptions", "organizations_url": "https://api.github.com/users/eka/orgs", "repos_url": "https://api.github.com/users/eka/repos", "events_url": "https://api.github.com/users/eka/events{/privacy}", "received_events_url": "https://api.github.com/users/eka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-12T05:50:55Z", "updated_at": "2020-02-13T03:27:16Z", "closed_at": "2020-02-13T03:27:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI receive a customer data from Stripe and the address_zip is an empty string, that's what I receive from Stripe... now, when I try to retrieve it from cache, due to the cache using pickle I will get the famous ```ValueError: You cannot set address_zip to an empty string. We interpret empty strings as None in requests.You may set...```\r\n\r\nI want to emphasize that the field comes as an empty string calling the Stripe python api.\r\n\r\nIt's easy to reproduce tho:\r\n\r\n```\r\nIn [5]: new_card = stripe.Card.construct_from({'id': 'ca_test', 'address_zip': ''}, 'api_key')\r\n   ...: pc = pickle.dumps(new_card)\r\n   ...: card = pickle.loads(pc)\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-5-3cbc1f7a74ed> in <module>\r\n      1 new_card = stripe.Card.construct_from({'id': 'ca_test', 'address_zip': ''}, 'api_key')\r\n      2 pc = pickle.dumps(new_card)\r\n----> 3 card = pickle.loads(pc)\r\n\r\n/usr/local/lib/python3.6/site-packages/stripe/resource.py in __setitem__(self, k, v)\r\n    131                 \"We interpret empty strings as None in requests.\"\r\n    132                 \"You may set %s.%s = None to delete the property\" % (\r\n--> 133                     k, str(self), k))\r\n    134\r\n    135         super(StripeObject, self).__setitem__(k, v)\r\n\r\nValueError: You cannot set address_zip to an empty string. We interpret empty strings as None in requests.You may set {\r\n  \"id\": \"ca_test\"\r\n}.address_zip = None to delete the property\r\n```\r\n\r\nHere is the proof of the api call from Python:\r\n\r\n![image](https://user-images.githubusercontent.com/157223/74306812-98f0d600-4d89-11ea-96fc-a5ef13a5a93b.png)\r\n\r\n\r\nMy workaround was to sanitize all the fields in case of empty string... \r\nI don't know why the request returns a field with an empty string in the first case tho.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/638", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/638/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/638/events", "html_url": "https://github.com/stripe/stripe-python/issues/638", "id": 547149741, "node_id": "MDU6SXNzdWU1NDcxNDk3NDE=", "number": 638, "title": "Unable to retrieve metadata when running in docker container", "user": {"login": "marty331", "id": 663316, "node_id": "MDQ6VXNlcjY2MzMxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/663316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marty331", "html_url": "https://github.com/marty331", "followers_url": "https://api.github.com/users/marty331/followers", "following_url": "https://api.github.com/users/marty331/following{/other_user}", "gists_url": "https://api.github.com/users/marty331/gists{/gist_id}", "starred_url": "https://api.github.com/users/marty331/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marty331/subscriptions", "organizations_url": "https://api.github.com/users/marty331/orgs", "repos_url": "https://api.github.com/users/marty331/repos", "events_url": "https://api.github.com/users/marty331/events{/privacy}", "received_events_url": "https://api.github.com/users/marty331/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-01-08T22:53:33Z", "updated_at": "2020-01-09T03:58:30Z", "closed_at": "2020-01-09T03:57:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "My app (Flask) is live and works correctly in deployed environments (AWS lambda) however I for running locally I spin up a series of Docker containers.  In all of my API retrieve calls within the Docker container the metadata fields are always empty.  So far I have confirmed this issue exists on Customers, Subscriptions, and Products.\r\n\r\nExample calls are structured such:\r\n`stripe.Customer.retrieve(\"cus_mycustomer\")` and I receive the customer object back, but the metadata portion is always empty.  Is there a fix for this?  I've already reached out in IRC and was told this is not an issue, however it continues to happen.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/634", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/634/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/634/events", "html_url": "https://github.com/stripe/stripe-python/issues/634", "id": 533638213, "node_id": "MDU6SXNzdWU1MzM2MzgyMTM=", "number": 634, "title": "Feature Request: Add error code description to ErrorObject", "user": {"login": "dramirez-tc", "id": 40796002, "node_id": "MDQ6VXNlcjQwNzk2MDAy", "avatar_url": "https://avatars2.githubusercontent.com/u/40796002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dramirez-tc", "html_url": "https://github.com/dramirez-tc", "followers_url": "https://api.github.com/users/dramirez-tc/followers", "following_url": "https://api.github.com/users/dramirez-tc/following{/other_user}", "gists_url": "https://api.github.com/users/dramirez-tc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dramirez-tc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dramirez-tc/subscriptions", "organizations_url": "https://api.github.com/users/dramirez-tc/orgs", "repos_url": "https://api.github.com/users/dramirez-tc/repos", "events_url": "https://api.github.com/users/dramirez-tc/events{/privacy}", "received_events_url": "https://api.github.com/users/dramirez-tc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-05T22:35:50Z", "updated_at": "2019-12-06T19:09:26Z", "closed_at": "2019-12-06T19:09:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have cases where we need to expand the error code to include the error code descriptions, where are documented here:\r\n\r\nhttps://stripe.com/docs/error-codes\r\n\r\nWe keep dictionary of the error code and their description in our server-side code base.  But, I worry that it would get out of sync.\r\n\r\nAdding that to the SDK would be simple.  The ErrorObject.construct_from() func would need to grab it from the API response.  But, the API doesn't currently return the description.  So the API would need to be updated as well.\r\n\r\nIs this something that you think would be valuable to add?  I certainly do.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/633", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/633/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/633/events", "html_url": "https://github.com/stripe/stripe-python/issues/633", "id": 532866952, "node_id": "MDU6SXNzdWU1MzI4NjY5NTI=", "number": 633, "title": "Support for listing Payouts intitiated after a Transfer", "user": {"login": "leokhachatorians", "id": 8422787, "node_id": "MDQ6VXNlcjg0MjI3ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8422787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leokhachatorians", "html_url": "https://github.com/leokhachatorians", "followers_url": "https://api.github.com/users/leokhachatorians/followers", "following_url": "https://api.github.com/users/leokhachatorians/following{/other_user}", "gists_url": "https://api.github.com/users/leokhachatorians/gists{/gist_id}", "starred_url": "https://api.github.com/users/leokhachatorians/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leokhachatorians/subscriptions", "organizations_url": "https://api.github.com/users/leokhachatorians/orgs", "repos_url": "https://api.github.com/users/leokhachatorians/repos", "events_url": "https://api.github.com/users/leokhachatorians/events{/privacy}", "received_events_url": "https://api.github.com/users/leokhachatorians/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-04T18:45:38Z", "updated_at": "2019-12-04T19:07:31Z", "closed_at": "2019-12-04T19:03:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if its a bug, feature request, or something that is currently working as intended.\r\n\r\nI'm currently playing around with the StripeConnect platform and noticed that if I initiate a Transfer, I have no way of programmatically fetching the status of Payouts for that account I transferred too. The accounts I'm transferring to are Stripe Connect Custom accounts and as such they don't have access to a dashboard (I'm pretty sure at least?)\r\n\r\nI can however in my Admin dashboard see the status of the Payout(s) in question though. \r\n\r\nAttempting to call `stripe.Payout.retrieve('id_of_payout')` results in an invalid request stating that Payout doesn't exist.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/632", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/632/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/632/events", "html_url": "https://github.com/stripe/stripe-python/issues/632", "id": 530594371, "node_id": "MDU6SXNzdWU1MzA1OTQzNzE=", "number": 632, "title": "AttributeError: module 'stripe.api_resources' has no attribute 'Mandate'", "user": {"login": "alanhamlett", "id": 522344, "node_id": "MDQ6VXNlcjUyMjM0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/522344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhamlett", "html_url": "https://github.com/alanhamlett", "followers_url": "https://api.github.com/users/alanhamlett/followers", "following_url": "https://api.github.com/users/alanhamlett/following{/other_user}", "gists_url": "https://api.github.com/users/alanhamlett/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhamlett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhamlett/subscriptions", "organizations_url": "https://api.github.com/users/alanhamlett/orgs", "repos_url": "https://api.github.com/users/alanhamlett/repos", "events_url": "https://api.github.com/users/alanhamlett/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhamlett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-30T15:43:08Z", "updated_at": "2019-11-30T20:32:01Z", "closed_at": "2019-11-30T20:32:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python: 3.6.7\r\nStripe-Python: 2.41.0\r\nStripe API: 2019-11-05\r\n\r\nWhen calling [stripe.Invoice.retrieve(invoice_id)](https://stripe.com/docs/api/invoices/retrieve) this exception is raised:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/app/venv/lib/python3.6/site-packages/flask/app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/app/venv/lib/python3.6/site-packages/flask/app.py\", line 1951, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/app/venv/lib/python3.6/site-packages/flask/app.py\", line 1820, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/app/venv/lib/python3.6/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/app/venv/lib/python3.6/site-packages/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/app/venv/lib/python3.6/site-packages/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/app/website/webhooks/views.py\", line 511, in stripe_hook\r\n    invoice = stripe.Invoice.retrieve(invoice_id)\r\n  File \"/app/venv/lib/python3.6/site-packages/stripe/api_resources/abstract/api_resource.py\", line 12, in retrieve\r\n    instance.refresh()\r\n  File \"/app/venv/lib/python3.6/site-packages/stripe/api_resources/abstract/api_resource.py\", line 16, in refresh\r\n    self.refresh_from(self.request(\"get\", self.instance_url()))\r\n  File \"/app/venv/lib/python3.6/site-packages/stripe/stripe_object.py\", line 246, in request\r\n    response, api_key, self.stripe_version, self.stripe_account\r\n  File \"/app/venv/lib/python3.6/site-packages/stripe/util.py\", line 165, in convert_to_stripe_object\r\n    klass = get_object_classes().get(\r\n  File \"/app/venv/lib/python3.6/site-packages/stripe/util.py\", line 135, in get_object_classes\r\n    from stripe.object_classes import OBJECT_CLASSES\r\n  File \"/app/venv/lib/python3.6/site-packages/stripe/object_classes.py\", line 48, in <module>\r\n    api_resources.Mandate.OBJECT_NAME: api_resources.Mandate,\r\nAttributeError: module 'stripe.api_resources' has no attribute 'Mandate'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/629", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/629/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/629/events", "html_url": "https://github.com/stripe/stripe-python/issues/629", "id": 525101119, "node_id": "MDU6SXNzdWU1MjUxMDExMTk=", "number": 629, "title": "Checkout Session object: It makes more sense to allow Negative Amount in \"line_items\"", "user": {"login": "hust-whw", "id": 8982712, "node_id": "MDQ6VXNlcjg5ODI3MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8982712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hust-whw", "html_url": "https://github.com/hust-whw", "followers_url": "https://api.github.com/users/hust-whw/followers", "following_url": "https://api.github.com/users/hust-whw/following{/other_user}", "gists_url": "https://api.github.com/users/hust-whw/gists{/gist_id}", "starred_url": "https://api.github.com/users/hust-whw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hust-whw/subscriptions", "organizations_url": "https://api.github.com/users/hust-whw/orgs", "repos_url": "https://api.github.com/users/hust-whw/repos", "events_url": "https://api.github.com/users/hust-whw/events{/privacy}", "received_events_url": "https://api.github.com/users/hust-whw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-11-19T15:57:56Z", "updated_at": "2019-11-19T16:35:50Z", "closed_at": "2019-11-19T16:23:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a scenario in my use where, due to some discount coupon or product combination discount, a **negative amount** should be allowed to append in \"line_items\" when create the Checkout Session object. Because discounts are supposed to appear in the checkout build-in page by stripe or the customers will never know how the total price came from (The total amount should still be limited to a positive number).\r\n\r\nOr, on the other hand, allowing **Stripe Coupon Object** to Checkout feature makes more sence as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/628", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/628/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/628/events", "html_url": "https://github.com/stripe/stripe-python/issues/628", "id": 520430190, "node_id": "MDU6SXNzdWU1MjA0MzAxOTA=", "number": 628, "title": "The underlying error was: wrap_socket() got an unexpected keyword argument '_context'", "user": {"login": "archienorman11", "id": 4103845, "node_id": "MDQ6VXNlcjQxMDM4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4103845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archienorman11", "html_url": "https://github.com/archienorman11", "followers_url": "https://api.github.com/users/archienorman11/followers", "following_url": "https://api.github.com/users/archienorman11/following{/other_user}", "gists_url": "https://api.github.com/users/archienorman11/gists{/gist_id}", "starred_url": "https://api.github.com/users/archienorman11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archienorman11/subscriptions", "organizations_url": "https://api.github.com/users/archienorman11/orgs", "repos_url": "https://api.github.com/users/archienorman11/repos", "events_url": "https://api.github.com/users/archienorman11/events{/privacy}", "received_events_url": "https://api.github.com/users/archienorman11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-09T13:44:55Z", "updated_at": "2019-11-10T10:52:53Z", "closed_at": "2019-11-10T10:52:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Confirmed that the latest version of `requests` is being used. \r\n\r\n```(Network error: A TypeError was raised with error message Warning: It looks like your installed version of the \"requests\" library is not compatible with Stripe's usage thereof. (HINT: The most likely cause is that your \"requests\" library is out of date. You can fix that by running \"pip install -U requests\".) The underlying error was: wrap_socket() got an unexpected keyword argument '_context')```\r\n\r\n```Unexpected error communicating with Stripe. It looks like there's probably a configuration issue locally.  If this problem persists, let us know at support@stripe.com.```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/626", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/626/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/626/events", "html_url": "https://github.com/stripe/stripe-python/issues/626", "id": 518544183, "node_id": "MDU6SXNzdWU1MTg1NDQxODM=", "number": 626, "title": "CardError returns incorrect response", "user": {"login": "marty331", "id": 663316, "node_id": "MDQ6VXNlcjY2MzMxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/663316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marty331", "html_url": "https://github.com/marty331", "followers_url": "https://api.github.com/users/marty331/followers", "following_url": "https://api.github.com/users/marty331/following{/other_user}", "gists_url": "https://api.github.com/users/marty331/gists{/gist_id}", "starred_url": "https://api.github.com/users/marty331/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marty331/subscriptions", "organizations_url": "https://api.github.com/users/marty331/orgs", "repos_url": "https://api.github.com/users/marty331/repos", "events_url": "https://api.github.com/users/marty331/events{/privacy}", "received_events_url": "https://api.github.com/users/marty331/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-06T15:26:21Z", "updated_at": "2019-11-06T15:41:27Z", "closed_at": "2019-11-06T15:41:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Scenario - A token is created (have tried both through StripeJS widget and Python) which is then presented to create a new Charge.  The token was created with an invalid expiration date (in the future).\r\n\r\nWhen calling `stripe.Charge.create` with that token a CardError is returned (which I would expect), however the returned - user_message, code, and param all are incorrect and state that the CVC code is incorrect (it is not incorrect.)\r\nPlease see screenshot below as evidence:\r\n\r\n<img width=\"1129\" alt=\"Screen Shot 2019-11-06 at 9 19 13 AM\" src=\"https://user-images.githubusercontent.com/663316/68311322-000a3a80-0077-11ea-9211-9b322069f5af.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/622", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/622/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/622/events", "html_url": "https://github.com/stripe/stripe-python/issues/622", "id": 505966147, "node_id": "MDU6SXNzdWU1MDU5NjYxNDc=", "number": 622, "title": "Events List does not honor stripe_version kwarg", "user": {"login": "KAllan357", "id": 221009, "node_id": "MDQ6VXNlcjIyMTAwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/221009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KAllan357", "html_url": "https://github.com/KAllan357", "followers_url": "https://api.github.com/users/KAllan357/followers", "following_url": "https://api.github.com/users/KAllan357/following{/other_user}", "gists_url": "https://api.github.com/users/KAllan357/gists{/gist_id}", "starred_url": "https://api.github.com/users/KAllan357/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KAllan357/subscriptions", "organizations_url": "https://api.github.com/users/KAllan357/orgs", "repos_url": "https://api.github.com/users/KAllan357/repos", "events_url": "https://api.github.com/users/KAllan357/events{/privacy}", "received_events_url": "https://api.github.com/users/KAllan357/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-10-11T17:15:17Z", "updated_at": "2019-12-03T19:03:20Z", "closed_at": "2019-12-03T19:03:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am observing some behavior that seems incorrect and I'm looking for some guidance.\r\n\r\n```\r\n$ python --version\r\nPython 3.5.6\r\n$ pip list\r\nPackage           Version    Location            \r\n----------------- ---------- --------------------\r\n... \r\nstripe            2.37.2\r\n...\r\n```\r\n\r\nWhat I've noticed is that this SDK may not be sending the stripe_version header when using the `stripe.Event.list()` function, which is specifically causing an issue for an Event relating to Invoices' Line Item's `period` field.\r\n\r\nHere's some sample code:\r\n\r\n```\r\nimport stripe                                                                                                                                                                                                       \r\n\r\nstripe.api_key = '<secret>'\r\n\r\nstripe.api_version = '2018-09-24'\r\n\r\ndate_window_start = 1567728000\r\ndate_window_end = 1568332800\r\n\r\nfor e in stripe.Event.list(**{\"limit\": 100,\r\n                              \"type\": \"invoice.*\",\r\n                              \"stripe_account\": '<account>',\r\n                              \"created[gte]\": date_window_start,\r\n                              \"created[lt]\": date_window_end}).auto_paging_iter():\r\n    if e.get('data').get('object').get('id') in ['<affected invoice>', '<affected invoice>', '<affected invoice>']:\r\n        print(e.get('id'))\r\n        print(e.get('api_version'))\r\n        period_data = [l.get('period') for l in e.get('data').get('object').get('lines').to_dict().get('data')]\r\n        print(period_data)\r\n```\r\n\r\nThe output is as follows:\r\n\r\n```\r\n<event id>\r\n2014-11-20\r\n[<StripeObject at 0x7f716ba94a48> JSON: {\r\n  \"end\": 1567896206,\r\n  \"start\": 1567896206\r\n}, <StripeObject at 0x7f716ba94bd8> JSON: {\r\n  \"end\": 1567896206,\r\n  \"start\": 1567896206\r\n}]\r\n```\r\nSpecifically adding another kwarg `stripe_version` seems to have no affect on the above behavior.\r\n\r\nUltimately, the period's start and end value should not match. This seems to correspond to the API version in the response being a version before the changelog entry [here](https://stripe.com/docs/upgrades#2015-04-07) which seems to document a change in this behavior.\r\n\r\nIf you make the same request in curl, the API honors the header and returns data that appears correct:\r\n\r\n```\r\ncurl --globoff -v -H \"Stripe-Version: 2018-09-24\" -u <secret>: \r\n\"https://api.stripe.com/v1/events?type=invoice.%2A&starting_after=evt_1FGGDgH1INVpfABmlEYR9Mts&created[gte]=1567728000&limit=100&created[lt]=1568332800\"\r\n\r\n     \"id\": \"evt_1234\",\r\n      \"object\": \"event\",\r\n      \"api_version\": \"2019-05-16\",\r\n      \"data\": { \"object\": {\"lines\": { \"data\": [{\"period\": {\"end\": 1567900915, \"start\": 1567796676}}]}}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/618", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/618/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/618/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/618/events", "html_url": "https://github.com/stripe/stripe-python/issues/618", "id": 497557917, "node_id": "MDU6SXNzdWU0OTc1NTc5MTc=", "number": 618, "title": "Inconsistency between status of Payment Intent on dashboard and API", "user": {"login": "tiwariayush", "id": 5693204, "node_id": "MDQ6VXNlcjU2OTMyMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5693204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiwariayush", "html_url": "https://github.com/tiwariayush", "followers_url": "https://api.github.com/users/tiwariayush/followers", "following_url": "https://api.github.com/users/tiwariayush/following{/other_user}", "gists_url": "https://api.github.com/users/tiwariayush/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiwariayush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiwariayush/subscriptions", "organizations_url": "https://api.github.com/users/tiwariayush/orgs", "repos_url": "https://api.github.com/users/tiwariayush/repos", "events_url": "https://api.github.com/users/tiwariayush/events{/privacy}", "received_events_url": "https://api.github.com/users/tiwariayush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-24T09:08:15Z", "updated_at": "2019-09-24T10:25:14Z", "closed_at": "2019-09-24T10:25:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhile creating a new session, a new payment intent object is created with default status `requires_payment_method`. But if I check for the same payment intent on stripe dashboard I get status `requires_source`(which I think has been deprciated long ago).\r\n\r\nOn retrieving `payment_intent` on terminal using the API:\r\n```\r\n<PaymentIntent payment_intent id=******* at > JSON: {\r\n  \"amount\": *****,\r\n  \"amount_capturable\": 0,\r\n  \"amount_received\": 0,\r\n  \"application\": null,\r\n  \"application_fee_amount\": null,\r\n  \"canceled_at\": null,\r\n  \"cancellation_reason\": null,\r\n  \"capture_method\": \"automatic\",\r\n  \"charges\": {\r\n    \"data\": [\r\n      {\r\n        \"amount\": 34200,\r\n        \"amount_refunded\": 0,\r\n        \"application\": null,\r\n        \"application_fee\": null,\r\n        \"application_fee_amount\": null,\r\n        \"balance_transaction\": null,\r\n        \"billing_details\": {\r\n          \"address\": {\r\n            \"city\": null,\r\n            \"country\": \"FR\",\r\n            \"line1\": null,\r\n            \"line2\": null,\r\n            \"postal_code\": null,\r\n            \"state\": null\r\n          },\r\n        },\r\n        \"captured\": false,\r\n        \"created\": 1568884906,\r\n        \"currency\": \"eur\",\r\n        \"description\": null,\r\n        \"destination\": null,\r\n        \"dispute\": null,\r\n        \"failure_code\": \"card_declined\",\r\n        \"failure_message\": \"Your card was declined.\",\r\n        \"fraud_details\": {},\r\n        \"invoice\": null,\r\n        \"livemode\": false,\r\n        \"metadata\": {},\r\n        \"object\": \"charge\",\r\n        \"on_behalf_of\": null,\r\n        \"order\": null,\r\n        \"outcome\": {\r\n          \"network_status\": \"declined_by_network\",\r\n          \"reason\": \"generic_decline\",\r\n          \"risk_level\": \"normal\",\r\n          \"risk_score\": 0,\r\n          \"seller_message\": \"The bank did not return any further details with this decline.\",\r\n          \"type\": \"issuer_declined\"\r\n        },\r\n        \"paid\": false,\r\n        \"payment_method_details\": {\r\n          \"card\": {\r\n            \"brand\": \"visa\",\r\n            \"checks\": {\r\n              \"address_line1_check\": null,\r\n              \"address_postal_code_check\": null,\r\n              \"cvc_check\": \"pass\"\r\n            },\r\n            \"country\": \"US\",\r\n            \"exp_month\": ,\r\n            \"exp_year\": ,\r\n            \"funding\": \"credit\",\r\n            \"last4\": \"\",\r\n            \"three_d_secure\": null,\r\n            \"wallet\": null\r\n          },\r\n          \"type\": \"card\"\r\n        },\r\n        \"receipt_number\": null,\r\n        \"refunded\": false,\r\n        \"refunds\": {},\r\n        \"review\": null,\r\n        \"shipping\": null,\r\n        \"source\": null,\r\n        \"source_transfer\": null,\r\n        \"statement_descriptor\": null,\r\n        \"statement_descriptor_suffix\": null,\r\n        \"status\": \"failed\",\r\n        \"transfer_data\": null,\r\n        \"transfer_group\": null\r\n      }\r\n    ],\r\n    \"has_more\": false,\r\n    \"object\": \"list\",\r\n    \"total_count\": 1,\r\n  },\r\n  \"client_secret\": \"\",\r\n  \"confirmation_method\": \"automatic\",\r\n  \"created\": ,\r\n  \"currency\": \"eur\",\r\n  \"customer\": \"\",\r\n  \"description\": null,\r\n  \"id\": \"\",\r\n  \"invoice\": null,\r\n  \"last_payment_error\": {\r\n    \"charge\": \"\",\r\n    \"code\": \"card_declined\",\r\n    \"decline_code\": \"generic_decline\",\r\n    \"doc_url\": \"https://stripe.com/docs/error-codes/card-declined\",\r\n    \"message\": \"Your card was declined.\",\r\n    \"payment_method\": {\r\n      \"billing_details\": {\r\n        \"address\": {\r\n          \"city\": null,\r\n          \"country\": \"FR\",\r\n          \"line1\": null,\r\n          \"line2\": null,\r\n          \"postal_code\": null,\r\n          \"state\": null\r\n        },\r\n      },\r\n      \"card\": {\r\n        \"brand\": \"visa\",\r\n        \"checks\": {\r\n          \"address_line1_check\": null,\r\n          \"address_postal_code_check\": null,\r\n          \"cvc_check\": \"pass\"\r\n        },\r\n        \"country\": \"US\",\r\n        \"exp_month\": ,\r\n        \"exp_year\": ,\r\n        \"fingerprint\": \"\",\r\n        \"funding\": \"credit\",\r\n        \"generated_from\": null,\r\n        \"last4\": \"\",\r\n        \"three_d_secure_usage\": {\r\n          \"supported\": true\r\n        },\r\n        \"wallet\": null\r\n      },\r\n      \"created\": ,\r\n      \"customer\": \"\",\r\n      \"id\": \"\",\r\n      \"livemode\": false,\r\n      \"metadata\": {},\r\n      \"object\": \"payment_method\",\r\n      \"type\": \"card\"\r\n    },\r\n    \"type\": \"card_error\"\r\n  },\r\n  \"livemode\": false,\r\n  \"metadata\": {},\r\n  \"next_action\": null,\r\n  \"object\": \"payment_intent\",\r\n  \"on_behalf_of\": null,\r\n  \"payment_method\": null,\r\n  \"payment_method_options\": {\r\n    \"card\": {\r\n      \"request_three_d_secure\": \"automatic\"\r\n    }\r\n  },\r\n  \"payment_method_types\": [\r\n    \"card\"\r\n  ],\r\n  \"receipt_email\": \"test@test.com\",\r\n  \"review\": null,\r\n  \"setup_future_usage\": null,\r\n  \"shipping\": null,\r\n  \"source\": null,\r\n  \"statement_descriptor\": null,\r\n  \"statement_descriptor_suffix\": null,\r\n  \"status\": \"requires_payment_method\",  <CHECK THE STATUS HERE>\r\n  \"transfer_data\": null,\r\n  \"transfer_group\": null\r\n}\r\n\r\n```\r\n\r\nThe same PI on dashboard looks like this:\r\n```\r\n{\r\n  \"object\": {\r\n    \"id\": \"\",\r\n    \"object\": \"payment_intent\",\r\n    \"allowed_source_types\": [\r\n      \"card\"\r\n    ],\r\n    \"amount\": ,\r\n    \"amount_capturable\": 0,\r\n    \"amount_received\": 0,\r\n    \"application\": null,\r\n    \"application_fee_amount\": null,\r\n    \"canceled_at\": null,\r\n    \"cancellation_reason\": null,\r\n    \"capture_method\": \"automatic\",\r\n    \"charges\": {\r\n      \"object\": \"list\",\r\n      \"data\": [\r\n        {\r\n          \"id\": \"\",\r\n          \"object\": \"charge\",\r\n          \"amount\": ,\r\n          \"amount_refunded\": 0,\r\n          \"application\": null,\r\n          \"application_fee\": null,\r\n          \"application_fee_amount\": null,\r\n          \"balance_transaction\": null,\r\n          \"billing_details\": {\r\n            \"address\": {\r\n              \"city\": null,\r\n              \"country\": \"FR\",\r\n              \"line1\": null,\r\n              \"line2\": null,\r\n              \"postal_code\": null,\r\n              \"state\": null\r\n            },\r\n          },\r\n          \"captured\": false,\r\n          \"created\": ,\r\n          \"currency\": \"eur\",\r\n          \"customer\": \"\",\r\n          \"description\": null,\r\n          \"destination\": null,\r\n          \"dispute\": null,\r\n          \"failure_code\": \"card_declined\",\r\n          \"failure_message\": \"Your card was declined.\",\r\n          \"fraud_details\": {\r\n          },\r\n          \"invoice\": null,\r\n          \"livemode\": false,\r\n          \"metadata\": {\r\n          },\r\n          \"on_behalf_of\": null,\r\n          \"order\": null,\r\n          \"outcome\": {\r\n            \"network_status\": \"declined_by_network\",\r\n            \"reason\": \"generic_decline\",\r\n            \"risk_level\": \"normal\",\r\n            \"risk_score\": 0,\r\n            \"seller_message\": \"The bank did not return any further details with this decline.\",\r\n            \"type\": \"issuer_declined\"\r\n          },\r\n          \"paid\": false,\r\n          \"payment_intent\": \"\",\r\n          \"payment_method\": \"\",\r\n          \"payment_method_details\": {\r\n            \"card\": {\r\n              \"brand\": \"visa\",\r\n              \"checks\": {\r\n                \"address_line1_check\": null,\r\n                \"address_postal_code_check\": null,\r\n                \"cvc_check\": \"pass\"\r\n              },\r\n              \"country\": \"US\",\r\n              \"exp_month\": ,\r\n              \"exp_year\": ,\r\n              \"fingerprint\": \"\",\r\n              \"funding\": \"credit\",\r\n              \"last4\": \"\",\r\n              \"three_d_secure\": null,\r\n              \"wallet\": null\r\n            },\r\n            \"type\": \"card\"\r\n          },\r\n          \"receipt_number\": null,\r\n          \"receipt_url\": \"\",\r\n          \"refunded\": false,\r\n          \"refunds\": {\r\n            \"object\": \"list\",\r\n            \"data\": [\r\n            ],\r\n            \"has_more\": false,\r\n            \"total_count\": 0,\r\n            \"url\": \"/v1/charges//refunds\"\r\n          },\r\n          \"review\": null,\r\n          \"shipping\": null,\r\n          \"source\": null,\r\n          \"source_transfer\": null,\r\n          \"statement_descriptor\": null,\r\n          \"statement_descriptor_suffix\": null,\r\n          \"status\": \"failed\",\r\n          \"transfer_data\": null,\r\n          \"transfer_group\": null\r\n        }\r\n      ],\r\n      \"has_more\": false,\r\n      \"total_count\": 1,\r\n      \"url\": \"/v1/charges?payment_intent=\"\r\n    },\r\n    \"client_secret\": \"\",\r\n    \"confirmation_method\": \"automatic\",\r\n    \"created\": ,\r\n    \"currency\": \"eur\",\r\n    \"customer\": \"\",\r\n    \"description\": null,\r\n    \"invoice\": null,\r\n    \"last_payment_error\": {\r\n      \"charge\": \"\",\r\n      \"code\": \"card_declined\",\r\n      \"decline_code\": \"generic_decline\",\r\n      \"doc_url\": \"https://stripe.com/docs/error-codes/card-declined\",\r\n      \"message\": \"Your card was declined.\",\r\n      \"payment_method\": {\r\n        \"id\": \"\",\r\n        \"object\": \"payment_method\",\r\n        \"billing_details\": {\r\n          \"address\": {\r\n            \"city\": null,\r\n            \"country\": \"FR\",\r\n            \"line1\": null,\r\n            \"line2\": null,\r\n            \"postal_code\": null,\r\n            \"state\": null\r\n          },\r\n        },\r\n        \"card\": {\r\n          \"brand\": \"visa\",\r\n          \"checks\": {\r\n            \"address_line1_check\": null,\r\n            \"address_postal_code_check\": null,\r\n            \"cvc_check\": \"pass\"\r\n          },\r\n          \"country\": \"US\",\r\n          \"exp_month\": ,\r\n          \"exp_year\": ,\r\n          \"fingerprint\": \"\r\n          \"funding\": \"credit\",\r\n          \"generated_from\": null,\r\n          \"last4\": \"0002\",\r\n          \"three_d_secure_usage\": {\r\n            \"supported\": true\r\n          },\r\n          \"wallet\": null\r\n        },\r\n        \"created\": ,\r\n        \"customer\": \"\",\r\n        \"livemode\": false,\r\n        \"metadata\": {\r\n        },\r\n        \"type\": \"card\"\r\n      },\r\n      \"type\": \"card_error\"\r\n    },\r\n    \"livemode\": false,\r\n    \"metadata\": {\r\n    },\r\n    \"next_action\": null,\r\n    \"next_source_action\": null,\r\n    \"on_behalf_of\": null,\r\n    \"payment_method\": null,\r\n    \"payment_method_options\": {\r\n      \"card\": {\r\n        \"request_three_d_secure\": \"automatic\"\r\n      }\r\n    },\r\n    \"payment_method_types\": [\r\n      \"card\"\r\n    ],\r\n    \"receipt_email\": \"\"\r\n    \"review\": null,\r\n    \"setup_future_usage\": null,\r\n    \"shipping\": null,\r\n    \"source\": null,\r\n    \"statement_descriptor\": null,\r\n    \"statement_descriptor_suffix\": null,\r\n    \"status\": \"requires_source\",     <CHECK THE STATUS HERE>\r\n    \"transfer_data\": null,\r\n    \"transfer_group\": null\r\n  }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/617", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/617/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/617/events", "html_url": "https://github.com/stripe/stripe-python/issues/617", "id": 495699833, "node_id": "MDU6SXNzdWU0OTU2OTk4MzM=", "number": 617, "title": "Issue using stripe API v1 while trying to retrieve all list items of Customers structure", "user": {"login": "thetanja", "id": 16289635, "node_id": "MDQ6VXNlcjE2Mjg5NjM1", "avatar_url": "https://avatars2.githubusercontent.com/u/16289635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thetanja", "html_url": "https://github.com/thetanja", "followers_url": "https://api.github.com/users/thetanja/followers", "following_url": "https://api.github.com/users/thetanja/following{/other_user}", "gists_url": "https://api.github.com/users/thetanja/gists{/gist_id}", "starred_url": "https://api.github.com/users/thetanja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thetanja/subscriptions", "organizations_url": "https://api.github.com/users/thetanja/orgs", "repos_url": "https://api.github.com/users/thetanja/repos", "events_url": "https://api.github.com/users/thetanja/events{/privacy}", "received_events_url": "https://api.github.com/users/thetanja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-19T10:03:35Z", "updated_at": "2019-09-20T13:12:27Z", "closed_at": "2019-09-20T13:12:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have encountered an issue using stripe API v1 while trying to retrieve all list items of Customers structure. We had a similar problem with Charges and you solved it. Solution was: \"The reason is that pandas.io.json_normalize calls __copy__ and __deep_copy__ functions which calls __setitem__ function [0] and throws the exception.\r\nIt will throw this exception when the payment_method_details is an empty string, if the value is null, it will be ok.\"\r\n\r\nMore details about the error and code\r\n1. The source code:\r\n\r\n```python\r\nimport pandas as pd\r\nfrom pandas.io.json import json_normalize\r\nimport stripe\r\n\r\nstripe.api_key = \r\n\r\ndef extract_data(api_data):\r\n  data_list = pd.DataFrame()\r\n  for item in api_data.auto_paging_iter():\r\n    flatten = json_normalize(item, sep=\"_\")\r\n  data_list = data_list.append(flatten, sort=True)\r\n  return data_list\r\n\r\nif __name__ == '__main__':\r\n  charges = stripe.Customer.list(limit=100)\r\n  charges_list = extract_data(charges)\r\n```\r\n\r\n```\r\n[2019-09-16 12:19:50,772] {bash_operator.py:127} INFO - Traceback (most recent call last):\r\n[2019-09-16 12:19:50,772] {bash_operator.py:127} INFO - File \"stripe_data_retrieve.py\", line 52, in <module>\r\n[2019-09-16 12:19:50,772] {bash_operator.py:127} INFO - main()\r\n[2019-09-16 12:19:50,772] {bash_operator.py:127} INFO - File \"stripe_data_retrieve.py\", line 48, in main\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - retrieve_stripe_data(timestamps_to_fix_format)\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - File \"stripe_data_retrieve.py\", line 37, in retrieve_stripe_data\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - stripe_data_list = extract_data(stripe_data, timestamps_to_fix_format)\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - File \"stripe_data_retrieve.py\", line 20, in extract_data\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - flatten = json_normalize(item, sep=\"_\")\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - File \"/home/ubuntu/.local/lib/python3.6/site-packages/pandas/io/json/_normalize.py\", line 266, in json_normalize\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - data = nested_to_record(data, sep=sep, max_level=max_level)\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - File \"/home/ubuntu/.local/lib/python3.6/site-packages/pandas/io/json/_normalize.py\", line 106, in nested_to_record\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - new_d.update(nested_to_record(v, newkey, sep, level + 1, max_level))\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - File \"/home/ubuntu/.local/lib/python3.6/site-packages/pandas/io/json/_normalize.py\", line 106, in nested_to_record\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - new_d.update(nested_to_record(v, newkey, sep, level + 1, max_level))\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - File \"/home/ubuntu/.local/lib/python3.6/site-packages/pandas/io/json/_normalize.py\", line 102, in nested_to_record\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - new_d[newkey] = v\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - File \"/home/ubuntu/.local/lib/python3.6/site-packages/stripe/stripe_object.py\", line 106, in __setitem__\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - % (k, str(self), k)\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - ValueError: You cannot set shipping_address_city to an empty string. We interpret empty strings as None in requests.You may set {\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - \"country\": \"\",\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - \"line1\": \"\",\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - \"line2\": \"\",\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - \"postal_code\": \"\",\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - \"state\": \"\"\r\n[2019-09-16 12:19:50,773] {bash_operator.py:127} INFO - }.shipping_address_city = None to delete the property\r\n[2019-09-16 12:19:50,882] {bash_operator.py:131} INFO - Command exited with return code 1\r\n```\r\n\r\n2. Python 3.6.8; Stripe 2.36.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/615", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/615/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/615/events", "html_url": "https://github.com/stripe/stripe-python/issues/615", "id": 493388354, "node_id": "MDU6SXNzdWU0OTMzODgzNTQ=", "number": 615, "title": "Feature request: Reference implementation for using stripe.proxy to stripe-mock", "user": {"login": "bowlofstew", "id": 3189997, "node_id": "MDQ6VXNlcjMxODk5OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3189997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bowlofstew", "html_url": "https://github.com/bowlofstew", "followers_url": "https://api.github.com/users/bowlofstew/followers", "following_url": "https://api.github.com/users/bowlofstew/following{/other_user}", "gists_url": "https://api.github.com/users/bowlofstew/gists{/gist_id}", "starred_url": "https://api.github.com/users/bowlofstew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bowlofstew/subscriptions", "organizations_url": "https://api.github.com/users/bowlofstew/orgs", "repos_url": "https://api.github.com/users/bowlofstew/repos", "events_url": "https://api.github.com/users/bowlofstew/events{/privacy}", "received_events_url": "https://api.github.com/users/bowlofstew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-13T15:29:47Z", "updated_at": "2019-09-13T17:23:55Z", "closed_at": "2019-09-13T17:16:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am attempting to leverage the [stripe-mock](https://github.com/stripe/stripe-mock) library against an application that I am working on that consumes the stripe-python library.  I am attempting to create an docker-compose implementation that allows for local developers to leverage the stripe-mock component in a docker container spun up from the compose manifest.  As part of this I am leveraging the [stripe.proxy](https://sourcegraph.com/github.com/stripe/stripe-python/-/blob/examples/proxy.py) component.  When doing such, I am getting a message of \r\n\r\n```\r\nour container: message='Request to Stripe api' method=get path=https://api.stripe.com/v1/plans?limit=100\r\nour_container: api_version=None message='Post details' post_data=limit=100\r\nstripe mock container    | 2019/09/13 15:22:13 http: TLS handshake error from 172.18.0.3:60840: tls: oversized record received with length 20037```\r\n```\r\n\r\nThe changes introduced to the code looks as follows:\r\n\r\n```\r\nstripe.log = \"debug\"\r\nstripe.proxy = {\"http\": \"http://stripe:12111\", \"https\": \"https://stripe:12112\"}\r\n```\r\nThis from my read of the example [here]() appears to be sufficient to both proxy and log the proxy of request and response pairs.  \r\n\r\nThe docker implementation looks as follows:\r\n\r\n```\r\nversion: \"3.7\"\r\n\r\nservices:\r\n  base:\r\n    image: mozilla/subhub-base\r\n    container_name: base\r\n    build:\r\n      context: .\r\n      dockerfile: Dockerfile.base\r\n  sub:\r\n    container_name: sub\r\n    image: mozilla/sub\r\n    command: python3 sub/app.py\r\n    build:\r\n      context: src/sub\r\n      dockerfile: Dockerfile\r\n      args:\r\n        LOCAL_FLASK_PORT: 5000\r\n        DYNALITE_PORT: 4567\r\n    environment:\r\n        AWS_ACCESS_KEY_ID: \"fake-id\"\r\n        AWS_SECRET_ACCESS_KEY: \"fake-key\"\r\n        STRIPE_API_KEY: $STRIPE_API_KEY\r\n        SUPPORT_API_KEY: $SUPPORT_API_KEY\r\n        PAYMENT_API_KEY: $PAYMENT_API_KEY\r\n        SUPPORT_API_KEY: $SUPPORT_API_KEY\r\n    ports:\r\n      - \"5000:5000\"\r\n    depends_on:\r\n      - base\r\n      - dynalite\r\n\r\n  hub:\r\n    container_name: hub\r\n    image: mozilla/hub\r\n    command: python3 hub/app.py\r\n    build:\r\n      context: src/hub\r\n      dockerfile: Dockerfile\r\n      args:\r\n        LOCAL_FLASK_PORT: 5001\r\n        DYNALITE_PORT: 4567\r\n    environment:\r\n        AWS_ACCESS_KEY_ID: \"fake-id\"\r\n        AWS_SECRET_ACCESS_KEY: \"fake-key\"\r\n        STRIPE_API_KEY: $STRIPE_API_KEY\r\n        HUB_API_KEY: $HUB_API_KEY\r\n    ports:\r\n      - \"5001:5001\"\r\n    depends_on:\r\n      - base\r\n      - dynalite\r\n\r\n  dynalite:\r\n    build: https://github.com/vitarn/docker-dynalite.git\r\n    ports:\r\n      - 4567\r\n\r\n  stripe:\r\n    image: stripemock/stripe-mock:latest\r\n    ports:\r\n      - \"12111:12111\"\r\n      - \"12112:12112\"\r\n```\r\n\r\nDo you have any reference documentation around this use case or best practices available?  I have tried several different incantations of the `stripe.proxy` setting as well to that affect.\r\n\r\nThe entire codebase itself with those changes are available [here](https://github.com/mozilla/subhub/compare/feature/stripe-mock?expand=1) should you want to see the approach.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/613", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/613/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/613/events", "html_url": "https://github.com/stripe/stripe-python/issues/613", "id": 492995950, "node_id": "MDU6SXNzdWU0OTI5OTU5NTA=", "number": 613, "title": "Feature request: Honor order of metadata keys", "user": {"login": "dramirez-tc", "id": 40796002, "node_id": "MDQ6VXNlcjQwNzk2MDAy", "avatar_url": "https://avatars2.githubusercontent.com/u/40796002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dramirez-tc", "html_url": "https://github.com/dramirez-tc", "followers_url": "https://api.github.com/users/dramirez-tc/followers", "following_url": "https://api.github.com/users/dramirez-tc/following{/other_user}", "gists_url": "https://api.github.com/users/dramirez-tc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dramirez-tc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dramirez-tc/subscriptions", "organizations_url": "https://api.github.com/users/dramirez-tc/orgs", "repos_url": "https://api.github.com/users/dramirez-tc/repos", "events_url": "https://api.github.com/users/dramirez-tc/events{/privacy}", "received_events_url": "https://api.github.com/users/dramirez-tc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-12T19:48:24Z", "updated_at": "2019-09-12T22:59:37Z", "closed_at": "2019-09-12T22:10:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to honor the order of metadata keys?  We rely on a lot of metadata and the ordering is important.  In our case alphabetical.  An OrderedDict is passed to Charge.create() but it looks like the ordering gets lost in the api_requestor.py:_encode_nested_dict() func.  Perhaps instead of\r\n\r\n```\r\nd {}\r\n```\r\n\r\n```\r\nfrom collections import OrderedDict\r\nd = OrderedDict()\r\n```\r\n\r\nMaybe there's a more clever way to handle that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/611", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/611/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/611/events", "html_url": "https://github.com/stripe/stripe-python/issues/611", "id": 491963346, "node_id": "MDU6SXNzdWU0OTE5NjMzNDY=", "number": 611, "title": "api_key param no longer passed to nested objects?", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-11T00:57:46Z", "updated_at": "2019-09-11T18:50:48Z", "closed_at": "2019-09-11T18:48:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm hitting an issue with 2.36.0, it seems that the api_key param isn't passed to `Customer.sources` (and presumably other nested objects?).\r\n\r\nEg, this works with 2.35.1:\r\n\r\n```python\r\nc = stripe.Customer.retrieve(id=\"cus_xxxx\", api_key=\"sk_test_123\") \r\nc.sources.create(source=\"tok_visa\")\r\n```\r\n\r\nBut fails with 2.36.0\r\n\r\n```\r\nAuthenticationError: No API key provided. (HINT: set your API key using \"stripe.api_key = <API-KEY>\"). You can generate API keys from the Stripe web interface.  See https://stripe.com/api for details, or email support@stripe.com if you have any questions.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/609", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/609/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/609/events", "html_url": "https://github.com/stripe/stripe-python/issues/609", "id": 490781762, "node_id": "MDU6SXNzdWU0OTA3ODE3NjI=", "number": 609, "title": "Nested retrieve doesn't accept `stripe_account`", "user": {"login": "ryancausey", "id": 2704075, "node_id": "MDQ6VXNlcjI3MDQwNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2704075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryancausey", "html_url": "https://github.com/ryancausey", "followers_url": "https://api.github.com/users/ryancausey/followers", "following_url": "https://api.github.com/users/ryancausey/following{/other_user}", "gists_url": "https://api.github.com/users/ryancausey/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryancausey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryancausey/subscriptions", "organizations_url": "https://api.github.com/users/ryancausey/orgs", "repos_url": "https://api.github.com/users/ryancausey/repos", "events_url": "https://api.github.com/users/ryancausey/events{/privacy}", "received_events_url": "https://api.github.com/users/ryancausey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-08T17:41:44Z", "updated_at": "2019-09-10T18:04:34Z", "closed_at": "2019-09-10T18:02:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "During testing the python API, it appears that making a nested retrieve call doesn't accept the `stripe_account` as a parameter. Is this expected behavior? Does the nested retrieve use the parent stripe object's `stripe_account` it was retrieved with?\r\n\r\nIn this case I was retrieving sources for a customer. To reproduce:\r\n1. retrieve a `customer` object using `stripe_account=<account id>`.\r\n2. attempt to retrieve the `customer.sources` passing `stripe_account=<account id>`\r\n3. expected to work, actual result is below:\r\n```\r\n>>> customer_stripe.sources.retrieve(customer_stripe.id, stripe_account=account.id)\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/home/ryan/.local/share/virtualenvs/django-matsite-MBWSvxvE/lib/python3.7/site-packages/stripe/api_resources/list_object.py\", line 41, in retrieve\r\n    return self.request(\"get\", url, params)\r\n  File \"/home/ryan/.local/share/virtualenvs/django-matsite-MBWSvxvE/lib/python3.7/site-packages/stripe/stripe_object.py\", line 243, in request\r\n    response, api_key = requestor.request(method, url, params, headers)\r\n  File \"/home/ryan/.local/share/virtualenvs/django-matsite-MBWSvxvE/lib/python3.7/site-packages/stripe/api_requestor.py\", line 121, in request\r\n    resp = self.interpret_response(rbody, rcode, rheaders)\r\n  File \"/home/ryan/.local/share/virtualenvs/django-matsite-MBWSvxvE/lib/python3.7/site-packages/stripe/api_requestor.py\", line 372, in interpret_response\r\n    self.handle_error_response(rbody, rcode, resp.data, rheaders)\r\n  File \"/home/ryan/.local/share/virtualenvs/django-matsite-MBWSvxvE/lib/python3.7/site-packages/stripe/api_requestor.py\", line 151, in handle_error_response\r\n    raise err\r\nstripe.error.InvalidRequestError: Request req_6OGzRcJ6BH8uyT: Received unknown parameter: stripe_account\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/608", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/608/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/608/events", "html_url": "https://github.com/stripe/stripe-python/issues/608", "id": 489426320, "node_id": "MDU6SXNzdWU0ODk0MjYzMjA=", "number": 608, "title": "Invoice Settings on Subscription", "user": {"login": "brymcg", "id": 6333380, "node_id": "MDQ6VXNlcjYzMzMzODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6333380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brymcg", "html_url": "https://github.com/brymcg", "followers_url": "https://api.github.com/users/brymcg/followers", "following_url": "https://api.github.com/users/brymcg/following{/other_user}", "gists_url": "https://api.github.com/users/brymcg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brymcg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brymcg/subscriptions", "organizations_url": "https://api.github.com/users/brymcg/orgs", "repos_url": "https://api.github.com/users/brymcg/repos", "events_url": "https://api.github.com/users/brymcg/events{/privacy}", "received_events_url": "https://api.github.com/users/brymcg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-09-04T22:09:31Z", "updated_at": "2019-09-04T22:11:42Z", "closed_at": "2019-09-04T22:11:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I modify Accepted Payment Methods on a subscription through the dashboard I can see that there is an \"invoice_settings\" section in the subscription object:\r\n\r\n<img width=\"318\" alt=\"sub_invsettings\" src=\"https://user-images.githubusercontent.com/6333380/64295403-48e62b80-cf2e-11e9-9d33-5850e8ce7048.png\">\r\n\r\nHowever, this is not in the API documentation nor can I get at it in any way. It is just not supported? Is that on a road map?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/598", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/598/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/598/events", "html_url": "https://github.com/stripe/stripe-python/issues/598", "id": 476421057, "node_id": "MDU6SXNzdWU0NzY0MjEwNTc=", "number": 598, "title": "Exception caught is very general", "user": {"login": "Ranjana-priya", "id": 50353295, "node_id": "MDQ6VXNlcjUwMzUzMjk1", "avatar_url": "https://avatars2.githubusercontent.com/u/50353295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ranjana-priya", "html_url": "https://github.com/Ranjana-priya", "followers_url": "https://api.github.com/users/Ranjana-priya/followers", "following_url": "https://api.github.com/users/Ranjana-priya/following{/other_user}", "gists_url": "https://api.github.com/users/Ranjana-priya/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ranjana-priya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ranjana-priya/subscriptions", "organizations_url": "https://api.github.com/users/Ranjana-priya/orgs", "repos_url": "https://api.github.com/users/Ranjana-priya/repos", "events_url": "https://api.github.com/users/Ranjana-priya/events{/privacy}", "received_events_url": "https://api.github.com/users/Ranjana-priya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-03T06:19:41Z", "updated_at": "2019-08-03T11:11:18Z", "closed_at": "2019-08-03T11:11:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ref: https://deepsource.io/gh/stripe/stripe-python/issues/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/597", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/597/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/597/events", "html_url": "https://github.com/stripe/stripe-python/issues/597", "id": 476153545, "node_id": "MDU6SXNzdWU0NzYxNTM1NDU=", "number": 597, "title": "[1.51.0 -> 2.3.3 Upgrade] TypeError: quote_from_bytes() expected bytes", "user": {"login": "NicolaGenesin", "id": 3284778, "node_id": "MDQ6VXNlcjMyODQ3Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3284778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NicolaGenesin", "html_url": "https://github.com/NicolaGenesin", "followers_url": "https://api.github.com/users/NicolaGenesin/followers", "following_url": "https://api.github.com/users/NicolaGenesin/following{/other_user}", "gists_url": "https://api.github.com/users/NicolaGenesin/gists{/gist_id}", "starred_url": "https://api.github.com/users/NicolaGenesin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NicolaGenesin/subscriptions", "organizations_url": "https://api.github.com/users/NicolaGenesin/orgs", "repos_url": "https://api.github.com/users/NicolaGenesin/repos", "events_url": "https://api.github.com/users/NicolaGenesin/events{/privacy}", "received_events_url": "https://api.github.com/users/NicolaGenesin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 330246849, "node_id": "MDU6TGFiZWwzMzAyNDY4NDk=", "url": "https://api.github.com/repos/stripe/stripe-python/labels/future", "name": "future", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-02T12:24:40Z", "updated_at": "2019-08-06T20:00:40Z", "closed_at": "2019-08-06T19:58:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python Version: 3.6\r\nIssue after updating from stripe==1.51.0 to stripe==2.3.3\r\n\r\nWe're using the Charge APIs, separating Auth from Capture:\r\n \r\n**1)** charge = stripe.Charge.create({..., capture=False}) works fine with both versions\r\n_... some time later ..._\r\n**2)** charge = stripe.Charge.retrieve(payment_id) works fine and returns the same exact object for both versions. This is an example using apple pay in test mode:\r\n\r\n```\r\n<Charge charge id=ch_1F2wzuLu48Aj7sQoaFzwnJP6 at 0x7f6901665a98> JSON: {\r\n  \"amount\": 50,\r\n  \"amount_refunded\": 0,\r\n  \"application\": null,\r\n  \"application_fee\": null,\r\n  \"application_fee_amount\": null,\r\n  \"balance_transaction\": null,\r\n  \"billing_details\": {\r\n    \"address\": {\r\n      \"city\": null,\r\n      \"country\": null,\r\n      \"line1\": null,\r\n      \"line2\": null,\r\n      \"postal_code\": null,\r\n      \"state\": null\r\n    },\r\n    \"email\": null,\r\n    \"name\": null,\r\n    \"phone\": null\r\n  },\r\n  \"captured\": false,\r\n  \"created\": 1564737866,\r\n  \"currency\": \"XXXXXXXXXX\",\r\n  \"customer\": null,\r\n  \"description\": \"XXXXXXXXXX\",\r\n  \"destination\": null,\r\n  \"dispute\": null,\r\n  \"failure_code\": null,\r\n  \"failure_message\": null,\r\n  \"fraud_details\": {},\r\n  \"id\": \"XXXXXXXXXX\",\r\n  \"invoice\": null,\r\n  \"livemode\": false,\r\n  \"metadata\": {\r\n    \"Sale ID\": \"XXXXXXXXXX\",\r\n    \"Session ID\": \"XXXXXXXXXX\"\r\n  },\r\n  \"object\": \"charge\",\r\n  \"on_behalf_of\": null,\r\n  \"order\": null,\r\n  \"outcome\": {\r\n    \"network_status\": \"approved_by_network\",\r\n    \"reason\": null,\r\n    \"risk_level\": \"normal\",\r\n    \"risk_score\": 64,\r\n    \"seller_message\": \"Payment complete.\",\r\n    \"type\": \"authorized\"\r\n  },\r\n  \"paid\": true,\r\n  \"payment_intent\": null,\r\n  \"payment_method\": \"XXXXXXXXXX\",\r\n  \"payment_method_details\": {\r\n    \"card\": {\r\n      \"brand\": \"mastercard\",\r\n      \"checks\": {\r\n        \"address_line1_check\": null,\r\n        \"address_postal_code_check\": null,\r\n        \"cvc_check\": null\r\n      },\r\n      \"country\": \"GB\",\r\n      \"exp_month\": 4,\r\n      \"exp_year\": 2026,\r\n      \"fingerprint\": \"XXXXXXXXXX\",\r\n      \"funding\": \"debit\",\r\n      \"last4\": \"XXXXXXXXXX\",\r\n      \"three_d_secure\": null,\r\n      \"wallet\": {\r\n        \"apple_pay\": {},\r\n        \"dynamic_last4\": \"XXXXXXXXXX\",\r\n        \"type\": \"apple_pay\"\r\n      }\r\n    },\r\n    \"type\": \"card\"\r\n  },\r\n  \"receipt_email\": null,\r\n  \"receipt_number\": null,\r\n  \"receipt_url\": \"https://pay.stripe.com/receipts/XXXXXXXXXX\",\r\n  \"refunded\": false,\r\n  \"refunds\": {\r\n    \"data\": [],\r\n    \"has_more\": false,\r\n    \"object\": \"list\",\r\n    \"total_count\": 0,\r\n    \"url\": \"/v1/charges/XXXXXXXXXX/refunds\"\r\n  },\r\n  \"review\": null,\r\n  \"shipping\": null,\r\n  \"source\": {\r\n    \"amount\": 50,\r\n    \"card\": {\r\n      \"address_line1_check\": null,\r\n      \"address_zip_check\": null,\r\n      \"brand\": \"XXXXXXXXXX\",\r\n      \"country\": \"XXXXXXXXXX\",\r\n      \"cvc_check\": null,\r\n      \"dynamic_last4\": \"XXXXXXXXXX\",\r\n      \"exp_month\": 4,\r\n      \"exp_year\": 2025,\r\n      \"fingerprint\": \"XXXXXXXXXX\",\r\n      \"funding\": \"debit\",\r\n      \"last4\": \"XXXXXXXXXX\",\r\n      \"name\": null,\r\n      \"three_d_secure\": \"optional\",\r\n      \"tokenization_method\": \"apple_pay\"\r\n    },\r\n    \"client_secret\": \"XXXXXXXXXX\",\r\n    \"created\": 1564737867,\r\n    \"currency\": \"gbp\",\r\n    \"flow\": \"none\",\r\n    \"id\": \"XXXXXXXXXX\",\r\n    \"livemode\": false,\r\n    \"metadata\": {},\r\n    \"object\": \"source\",\r\n    \"owner\": {\r\n      \"address\": null,\r\n      \"email\": null,\r\n      \"name\": null,\r\n      \"phone\": null,\r\n      \"verified_address\": null,\r\n      \"verified_email\": null,\r\n      \"verified_name\": null,\r\n      \"verified_phone\": null\r\n    },\r\n    \"statement_descriptor\": null,\r\n    \"status\": \"consumed\",\r\n    \"type\": \"card\",\r\n    \"usage\": \"single_use\"\r\n  },\r\n  \"source_transfer\": null,\r\n  \"statement_descriptor\": null,\r\n  \"status\": \"succeeded\",\r\n  \"transfer_data\": null,\r\n  \"transfer_group\": null\r\n}\r\n```\r\n\r\n**3)** result_charge = stripe.Charge.capture(charge) fails for stripe==2.3.3 with the following error \r\n\r\n```\r\nTypeError: quote_from_bytes() expected bytes\r\n  File \"celery/app/trace.py\", line 240, in trace_task\r\n    R = retval = fun(*args, **kwargs)\r\n  File \"celery/app/trace.py\", line 438, in __protected_call__\r\n    return self.run(*args, **kwargs)\r\n  File \"booking/tasks/booking/sales/request.py\", line 144, in run\r\n    status, error, processing_amount = self.capture_payment(sale)\r\n  File \"booking/tasks/booking/sales/request.py\", line 66, in capture_payment\r\n    result_charge = stripe.Charge.capture(charge)\r\n  File \"stripe/util.py\", line 223, in _wrapper\r\n    return class_method(*args, **kwargs)\r\n  File \"stripe/api_resources/abstract/custom_method.py\", line 20, in custom_method_request\r\n    quote_plus(util.utf8(sid)),\r\n  File \"urllib/parse.py\", line 805, in quote_plus\r\n    string = quote(string, safe + space, encoding, errors)\r\n  File \"urllib/parse.py\", line 789, in quote\r\n    return quote_from_bytes(string, safe)\r\n  File \"urllib/parse.py\", line 814, in quote_from_bytes\r\n    raise TypeError(\"quote_from_bytes() expected bytes\")\r\n```\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/596", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/596/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/596/events", "html_url": "https://github.com/stripe/stripe-python/issues/596", "id": 476106811, "node_id": "MDU6SXNzdWU0NzYxMDY4MTE=", "number": 596, "title": "`del StripeOject.metadata['some_key']` deletes key AND raises `KeyError`", "user": {"login": "apinsard", "id": 1536035, "node_id": "MDQ6VXNlcjE1MzYwMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1536035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinsard", "html_url": "https://github.com/apinsard", "followers_url": "https://api.github.com/users/apinsard/followers", "following_url": "https://api.github.com/users/apinsard/following{/other_user}", "gists_url": "https://api.github.com/users/apinsard/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinsard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinsard/subscriptions", "organizations_url": "https://api.github.com/users/apinsard/orgs", "repos_url": "https://api.github.com/users/apinsard/repos", "events_url": "https://api.github.com/users/apinsard/events{/privacy}", "received_events_url": "https://api.github.com/users/apinsard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-02T10:16:12Z", "updated_at": "2019-08-06T17:32:28Z", "closed_at": "2019-08-06T17:29:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "python: 3.5.3\r\nstripe-python: 2.29.4\r\n\r\nI just experienced quite unexpected `KeyError` exception the following code:\r\n\r\n```python\r\n# pi is a `stripe.PaymentIntent`\r\nif 'damage_deposit_amount' in pi.metadata:\r\n    del pi.metadata['damage_deposit_amount']  # <- raises `KeyError`\r\n```\r\n\r\nAccording to the information I have in my error report `'damage_deposit_amount'` is indeed not in `pi.metadata`. So, I first thought `'key' in StripeObject` always returns `True`.\r\n\r\nHowever, after testing it in a python console I figured out the following: \r\n\r\n```python\r\nIn [1]: from utils.stripe import stripe  # (= import stripe + stripe.api_key = settings.STRIPE['SECRET_KEY'])\r\n\r\nIn [2]: pi = stripe.PaymentIntent.retrieve('pi_deadbeef')\r\n\r\nIn [3]: pi.metadata\r\nOut[3]: \r\n<StripeObject at 0x7f92140c5098> JSON: {\r\n  \"booking_id\": \"13506\",\r\n  \"damage_deposit_amount\": \"20000\",\r\n  \"waiting_for_webhook\": \"True\"\r\n}\r\n\r\nIn [4]: 'foobar' in pi.metadata\r\nOut[4]: False\r\n\r\nIn [5]: del pi.metadata['damage_deposit_amount']\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-5-e399e0ff7d29> in <module>\r\n----> 1 del pi.metadata['damage_deposit_amount']\r\n\r\n/usr/share/virtualenvs/cocoonr/lib/python3.5/site-packages/stripe/stripe_object.py in __delitem__(self, k)\r\n    136         # Allows for unpickling in Python 3.x\r\n    137         if hasattr(self, \"_unsaved_values\"):\r\n--> 138             self._unsaved_values.remove(k)\r\n    139\r\n    140     # Custom unpickling method that uses `update` to update the dictionary\r\n\r\nKeyError: 'damage_deposit_amount'\r\n\r\nIn [6]: pi.metadata\r\nOut[6]: \r\n<StripeObject at 0x7f92140c5098> JSON: {\r\n  \"booking_id\": \"13506\",\r\n  \"waiting_for_webhook\": \"True\"\r\n}\r\n\r\nIn [7]: pi.save()\r\nOut[7]: \r\n<PaymentIntent payment_intent id=pi_deadbeef at 0x7f9214136598> JSON: {\r\n  ...\r\n  \"metadata\": {\r\n    \"booking_id\": \"13506\",\r\n    \"waiting_for_webhook\": \"True\"\r\n  },\r\n  ...\r\n}\r\n\r\nIn [8]: pi = stripe.PaymentIntent.retrieve('pi_deadbeef')\r\n\r\nIn [9]: pi.metadata\r\nOut[9]: \r\n<StripeObject at 0x7f92168b07c8> JSON: {\r\n  \"booking_id\": \"13506\",\r\n  \"damage_deposit_amount\": \"20000\",\r\n  \"waiting_for_webhook\": \"True\"\r\n}\r\n\r\nIn [10]:\r\n```\r\n\r\nTo sum it up:\r\n\r\n1. `del pi.metadata['damage_deposit_amount']` deleted the key, but raised a KeyError.\r\n2. Saving the object returned an object without the deleted key.\r\n3. Reloading the object showed that the key was actually not deleted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/594", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/594/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/594/events", "html_url": "https://github.com/stripe/stripe-python/issues/594", "id": 472513237, "node_id": "MDU6SXNzdWU0NzI1MTMyMzc=", "number": 594, "title": "Retrieving a bank account requires 2 requests to the API when a single one would be enough", "user": {"login": "mobiware", "id": 2219657, "node_id": "MDQ6VXNlcjIyMTk2NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2219657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mobiware", "html_url": "https://github.com/mobiware", "followers_url": "https://api.github.com/users/mobiware/followers", "following_url": "https://api.github.com/users/mobiware/following{/other_user}", "gists_url": "https://api.github.com/users/mobiware/gists{/gist_id}", "starred_url": "https://api.github.com/users/mobiware/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mobiware/subscriptions", "organizations_url": "https://api.github.com/users/mobiware/orgs", "repos_url": "https://api.github.com/users/mobiware/repos", "events_url": "https://api.github.com/users/mobiware/events{/privacy}", "received_events_url": "https://api.github.com/users/mobiware/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-24T20:42:02Z", "updated_at": "2019-07-24T20:54:47Z", "closed_at": "2019-07-24T20:43:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The API documentation shows that a `Bank Account` can be retrieved using a single HTTP API request:\r\nhttps://stripe.com/docs/api/customer_bank_accounts/retrieve?lang=curl\r\n```\r\ncurl https://api.stripe.com/v1/customers/cus_XYZ/sources/ba_XYZ \\\r\n  -u sk_test_XYZ:\r\n```\r\n\r\nHowever the sample code for the same action using the Python SDK translates to 2 requests to the HTTP API:\r\nhttps://stripe.com/docs/api/customer_bank_accounts/retrieve?lang=python\r\n```\r\nimport stripe\r\nstripe.api_key = \"sk_test_XYZ\"\r\n\r\ncustomer = stripe.Customer.retrieve('cus_XYZ')\r\nbank_account = customer.sources.retrieve('ba_XYZ')\r\n```\r\n\r\nThe 1st HTTP request (retrieving the full `Customer` object) is not necessary when one only wants to get a particular `Bank Account`\r\n\r\nWe would need a method in the Python SDK that takes both a `Customer` ID and a `Bank Account` ID and returns the corresponding `Bank Account` object in a single HTTP API request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/593", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/593/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/593/events", "html_url": "https://github.com/stripe/stripe-python/issues/593", "id": 469253596, "node_id": "MDU6SXNzdWU0NjkyNTM1OTY=", "number": 593, "title": "Plan.create product argument requires name", "user": {"login": "Kyle-Verhoog", "id": 6321485, "node_id": "MDQ6VXNlcjYzMjE0ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6321485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kyle-Verhoog", "html_url": "https://github.com/Kyle-Verhoog", "followers_url": "https://api.github.com/users/Kyle-Verhoog/followers", "following_url": "https://api.github.com/users/Kyle-Verhoog/following{/other_user}", "gists_url": "https://api.github.com/users/Kyle-Verhoog/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kyle-Verhoog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kyle-Verhoog/subscriptions", "organizations_url": "https://api.github.com/users/Kyle-Verhoog/orgs", "repos_url": "https://api.github.com/users/Kyle-Verhoog/repos", "events_url": "https://api.github.com/users/Kyle-Verhoog/events{/privacy}", "received_events_url": "https://api.github.com/users/Kyle-Verhoog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-17T14:36:00Z", "updated_at": "2019-07-17T16:27:53Z", "closed_at": "2019-07-17T15:40:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nIn the Stripe official documentation (https://stripe.com/docs/api/plans/create) the `name` argument is not mentioned... but it is used in an example.\r\n\r\nNo `name` argument mentioned:\r\n<img width=\"617\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6321485/61384218-287ae880-a87e-11e9-8e93-a0c4808fd25f.png\">\r\n\r\n`name` being used in the example:\r\n<img width=\"264\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6321485/61384273-49dbd480-a87e-11e9-9eec-ab189afeeb58.png\">\r\n\r\n\r\nWhen trying to create a stripe plan as follows:\r\n\r\n```python\r\nstripe.Plan.create(\r\n    # ... all other required fields\r\n    product={\r\n        id=my_product_id\r\n    }\r\n)\r\n```\r\n\r\nI get a\r\n`stripe.error.InvalidRequestError: Request ...: Missing required param: product[name].`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/591", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/591/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/591/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/591/events", "html_url": "https://github.com/stripe/stripe-python/issues/591", "id": 464296778, "node_id": "MDU6SXNzdWU0NjQyOTY3Nzg=", "number": 591, "title": "TypeError when updating webhooks", "user": {"login": "alexei", "id": 96283, "node_id": "MDQ6VXNlcjk2Mjgz", "avatar_url": "https://avatars2.githubusercontent.com/u/96283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexei", "html_url": "https://github.com/alexei", "followers_url": "https://api.github.com/users/alexei/followers", "following_url": "https://api.github.com/users/alexei/following{/other_user}", "gists_url": "https://api.github.com/users/alexei/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexei/subscriptions", "organizations_url": "https://api.github.com/users/alexei/orgs", "repos_url": "https://api.github.com/users/alexei/repos", "events_url": "https://api.github.com/users/alexei/events{/privacy}", "received_events_url": "https://api.github.com/users/alexei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-04T14:30:38Z", "updated_at": "2019-07-08T19:00:20Z", "closed_at": "2019-07-08T18:58:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code is basically:\r\n```\r\nstripe.WebhookEndpoint.modify(hook['id'], url=url)\r\n```\r\nFails with:\r\n```\r\nTraceback (most recent call last):\r\n  [...snip...]\r\n  File \"stripe/api_resources/abstract/updateable_api_resource.py\", line 12, in modify\r\n    return cls._static_request(\"post\", url, **params)\r\nTypeError: _static_request() got multiple values for keyword argument 'url'\r\n```\r\n\r\nThat's because [stripe.api_resources.abstract.api_resource.APIResource._static_request](https://github.com/stripe/stripe-python/blob/master/stripe/api_resources/abstract/api_resource.py#L48) accepts a `url` argument which conflicts with the `url` kwarg required for hooks:\r\n```\r\n>>> def foo(bar, **kwargs):\r\n...     pass\r\n... \r\n>>> foo('a bar', bar='another bar')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: foo() got multiple values for keyword argument 'bar'\r\n```\r\n\r\nFwiw, using stripe==2.31.0 on Python 2.7.10", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/585", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/585/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/585/events", "html_url": "https://github.com/stripe/stripe-python/issues/585", "id": 453236070, "node_id": "MDU6SXNzdWU0NTMyMzYwNzA=", "number": 585, "title": "Feature request: auto_paging_iter() using ending_before", "user": {"login": "WinnieP", "id": 497472, "node_id": "MDQ6VXNlcjQ5NzQ3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/497472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WinnieP", "html_url": "https://github.com/WinnieP", "followers_url": "https://api.github.com/users/WinnieP/followers", "following_url": "https://api.github.com/users/WinnieP/following{/other_user}", "gists_url": "https://api.github.com/users/WinnieP/gists{/gist_id}", "starred_url": "https://api.github.com/users/WinnieP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WinnieP/subscriptions", "organizations_url": "https://api.github.com/users/WinnieP/orgs", "repos_url": "https://api.github.com/users/WinnieP/repos", "events_url": "https://api.github.com/users/WinnieP/events{/privacy}", "received_events_url": "https://api.github.com/users/WinnieP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-06T20:59:56Z", "updated_at": "2019-10-29T23:21:49Z", "closed_at": "2019-10-29T23:19:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful to support paginating backwards using `auto_paging_iter()` on listable resources. Currently, it assumes you're paginating forwards using `starting_after`. If you try to use it with `ending_before`, the library will attempt to use `starting_after` anyways on the last item's `id` and error out.\r\n\r\nAs a side note on consistency, the API returns an error message like \"Received both starting_after and ending_before parameters. Please pass in only one.\" The documentation at https://stripe.com/docs/api/pagination claims that only ending_before is used in this case (although I think it's good that this is not the actual behavior).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/582", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/582/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/582/events", "html_url": "https://github.com/stripe/stripe-python/issues/582", "id": 451578691, "node_id": "MDU6SXNzdWU0NTE1Nzg2OTE=", "number": 582, "title": "Cannot install since integration of poetry", "user": {"login": "iamareebjamal", "id": 3874064, "node_id": "MDQ6VXNlcjM4NzQwNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3874064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iamareebjamal", "html_url": "https://github.com/iamareebjamal", "followers_url": "https://api.github.com/users/iamareebjamal/followers", "following_url": "https://api.github.com/users/iamareebjamal/following{/other_user}", "gists_url": "https://api.github.com/users/iamareebjamal/gists{/gist_id}", "starred_url": "https://api.github.com/users/iamareebjamal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iamareebjamal/subscriptions", "organizations_url": "https://api.github.com/users/iamareebjamal/orgs", "repos_url": "https://api.github.com/users/iamareebjamal/repos", "events_url": "https://api.github.com/users/iamareebjamal/events{/privacy}", "received_events_url": "https://api.github.com/users/iamareebjamal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-03T16:32:14Z", "updated_at": "2019-06-04T00:05:32Z", "closed_at": "2019-06-03T23:55:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Build is failing in alpine since integration of poetry\r\n\r\nLibrary Version: 2.29.3\r\n\r\nhttps://github.com/sdispater/poetry/issues/760\r\n\r\nNote that I am not using --no-binary CL argument, this is just standard pip install -r requirements.txt in alpine (docker)\r\n\r\nNot that I have any say in the matter, but this could have been integrated in a minor upgrade, i.e., 2.30.x, and not a patch upgrade: 2.29.1 -> 2.29.2 :)\r\n\r\nLogs:\r\n```\r\nCollecting stripe~=2.29 (from -r /requirements/common.txt (line 29))\r\nDownloading https://files.pythonhosted.org/packages/68/26/cc458011dd3ef64ee7b3072c03a3fa31ff25ae2bdb19c8e7946949a6b5b0/stripe-2.29.3.tar.gz (208kB)\r\nInstalling build dependencies: started\r\nInstalling build dependencies: still running...\r\nInstalling build dependencies: finished with status 'error'\r\n/usr/local/lib/python3.6/site-packages/pip/_internal/commands/install.py:244: UserWarning: Disabling all use of wheels due to the use of --build-options / --global-options / --install-options.\r\ncmdoptions.check_install_build_global(options)\r\nERROR: Complete output from command /usr/local/bin/python /usr/local/lib/python3.6/site-packages/pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-thr9o4r9/overlay --no-warn-script-location --no-binary :all: --only-binary :none: -i https://pypi.org/simple -- 'poetry>=0.12':\r\nERROR: Collecting poetry>=0.12\r\nDownloading https://files.pythonhosted.org/packages/1f/69/96862c449a3b586c16cdedd97df1c40c94569fec99c3f5fc484405013817/poetry-0.12.16.tar.gz (154kB)\r\nInstalling build dependencies: started\r\nInstalling build dependencies: finished with status 'done'\r\n...\r\nInstalling build dependencies: started\r\nInstalling build dependencies: still running...\r\nInstalling build dependencies: finished with status 'error'\r\nERROR: Complete output from command /usr/local/bin/python /usr/local/lib/python3.6/site-packages/pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-owlbe57i/overlay --no-warn-script-location --no-binary :all: --only-binary :none: -i https://pypi.org/simple -- 'poetry>=0.12':\r\nERROR: Collecting poetry>=0.12\r\nUsing cached https://files.pythonhosted.org/packages/1f/69/96862c449a3b586c16cdedd97df1c40c94569fec99c3f5fc484405013817/poetry-0.12.16.tar.gz\r\nInstalling build dependencies: started\r\nInstalling build dependencies: finished with status 'done'\r\nGetting requirements to build wheel: started\r\nGetting requirements to build wheel: finished with status 'done'\r\nPreparing wheel metadata: started\r\nPreparing wheel metadata: finished with status 'done'\r\n...\r\nCollecting tomlkit<0.6.0,>=0.5.1 (from poetry>=0.12)\r\nUsing cached https://files.pythonhosted.org/packages/f7/f7/bbd9213bfe76cb7821c897f9ed74877fd74993b4ca2fe9513eb5a31030f9/tomlkit-0.5.3.tar.gz\r\nERROR: Exception:\r\nTraceback (most recent call last):\r\nFile \"/usr/local/lib/python3.6/site-packages/pip/_internal/cli/base_command.py\", line 178, in main\r\nstatus = self.run(options, args)\r\nFile \"/usr/local/lib/python3.6/site-packages/pip/_internal/commands/install.py\", line 352, in run\r\nresolver.resolve(requirement_set)\r\nFile \"/usr/local/lib/python3.6/site-packages/pip/_internal/resolve.py\", line 131, in resolve\r\nself._resolve_one(requirement_set, req)\r\nFile \"/usr/local/lib/python3.6/site-packages/pip/_internal/resolve.py\", line 294, in _resolve_one\r\nabstract_dist = self._get_abstract_dist_for(req_to_install)\r\nFile \"/usr/local/lib/python3.6/site-packages/pip/_internal/resolve.py\", line 242, in _get_abstract_dist_for\r\nself.require_hashes\r\nFile \"/usr/local/lib/python3.6/site-packages/pip/_internal/operations/prepare.py\", line 361, in prepare_linked_requirement\r\nwith self.req_tracker.track(req):\r\nFile \"/usr/local/lib/python3.6/contextlib.py\", line 81, in __enter__\r\nreturn next(self.gen)\r\nFile \"/usr/local/lib/python3.6/site-packages/pip/_internal/req/req_tracker.py\", line 94, in track\r\nself.add(req)\r\nFile \"/usr/local/lib/python3.6/site-packages/pip/_internal/req/req_tracker.py\", line 63, in add\r\n% (link, fp.read()))\r\nLookupError: https://files.pythonhosted.org/packages/f7/f7/bbd9213bfe76cb7821c897f9ed74877fd74993b4ca2fe9513eb5a31030f9/tomlkit-0.5.3.tar.gz#sha256=d6506342615d051bc961f70bfcfa3d29b6616cc08a3ddfd4bc24196f16fd4ec2 (from https://pypi.org/simple/tomlkit/) (requires-python:>=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*) is already being built: tomlkit<0.6.0,>=0.5.1 from https://files.pythonhosted.org/packages/f7/f7/bbd9213bfe76cb7821c897f9ed74877fd74993b4ca2fe9513eb5a31030f9/tomlkit-0.5.3.tar.gz#sha256=d6506342615d051bc961f70bfcfa3d29b6616cc08a3ddfd4bc24196f16fd4ec2 (from poetry>=0.12)\r\n----------------------------------------\r\nERROR: Command \"/usr/local/bin/python /usr/local/lib/python3.6/site-packages/pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-owlbe57i/overlay --no-warn-script-location --no-binary :all: --only-binary :none: -i https://pypi.org/simple -- 'poetry>=0.12'\" failed with error code 2 in None\r\n----------------------------------------\r\nERROR: Command \"/usr/local/bin/python /usr/local/lib/python3.6/site-packages/pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-ma_7fsqp/overlay --no-warn-script-location --no-binary :all: --only-binary :none: -i https://pypi.org/simple -- 'poetry>=0.12a3'\" failed with error code 1 in None\r\n----------------------------------------\r\nERROR: Command \"/usr/local/bin/python /usr/local/lib/python3.6/site-packages/pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-thr9o4r9/overlay --no-warn-script-location --no-binary :all: --only-binary :none: -i https://pypi.org/simple -- 'poetry>=0.12'\" failed with error code 1 in None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/577", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/577/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/577/events", "html_url": "https://github.com/stripe/stripe-python/issues/577", "id": 450611849, "node_id": "MDU6SXNzdWU0NTA2MTE4NDk=", "number": 577, "title": "Check webhook signature before constructing `Event` from the payload", "user": {"login": "rfk", "id": 34695, "node_id": "MDQ6VXNlcjM0Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/34695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfk", "html_url": "https://github.com/rfk", "followers_url": "https://api.github.com/users/rfk/followers", "following_url": "https://api.github.com/users/rfk/following{/other_user}", "gists_url": "https://api.github.com/users/rfk/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfk/subscriptions", "organizations_url": "https://api.github.com/users/rfk/orgs", "repos_url": "https://api.github.com/users/rfk/repos", "events_url": "https://api.github.com/users/rfk/events{/privacy}", "received_events_url": "https://api.github.com/users/rfk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-31T04:40:30Z", "updated_at": "2019-05-31T17:33:51Z", "closed_at": "2019-05-31T17:31:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI happened to be poking around in the details of your webhook signature-checking code, and I noticed that it does some processing on the event payload before checking the signature, in particular calling `stripe.Event.construct_from` on the not-yet-authenticated data:\r\n\r\n  https://github.com/stripe/stripe-python/blob/15d03381b3a3019517e7a31e1607bb5af0bda5a6/stripe/webhook.py#L23-L26\r\n\r\nI don't have any reason to believe that this can be used to trigger bad behaviour, but `Event.construct_from` seems to do quite a lot of dynamic work to hydrate the data into live objects. Calling `WebhookSignature.verify_header` before doing that work could be a nice defense-in-depth measure against bugs elsewhere in the codebase.\r\n\r\nJust a small suggestion that I wanted to pass along; thanks for providing this nice library, and for an API that seems to strongly encourage the webhook-handling code down the right path security-wise!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/571", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/571/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/571/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/571/events", "html_url": "https://github.com/stripe/stripe-python/issues/571", "id": 445701370, "node_id": "MDU6SXNzdWU0NDU3MDEzNzA=", "number": 571, "title": "stripe.PaymentIntent.confirm() should not be an instance method or docs are incorrect", "user": {"login": "benjhastings", "id": 1699468, "node_id": "MDQ6VXNlcjE2OTk0Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1699468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjhastings", "html_url": "https://github.com/benjhastings", "followers_url": "https://api.github.com/users/benjhastings/followers", "following_url": "https://api.github.com/users/benjhastings/following{/other_user}", "gists_url": "https://api.github.com/users/benjhastings/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjhastings/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjhastings/subscriptions", "organizations_url": "https://api.github.com/users/benjhastings/orgs", "repos_url": "https://api.github.com/users/benjhastings/repos", "events_url": "https://api.github.com/users/benjhastings/events{/privacy}", "received_events_url": "https://api.github.com/users/benjhastings/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-18T10:12:51Z", "updated_at": "2019-06-02T12:11:51Z", "closed_at": "2019-05-27T02:11:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to confirm a PaymentIntent. The docs at https://stripe.com/docs/api/payment_intents/confirm and also at https://stripe.com/docs/payments/payment-intents/quickstart#manual-confirmation-flow show the following code:\r\n```\r\nimport stripe\r\nstripe.api_key = \"<my secret key>\"\r\nintent = stripe.PaymentIntent.confirm('<payment_intent_id>',)\r\n```\r\n\r\nHowever, when I do that I get the following error:\r\n```\r\n     24 \r\n     25     def confirm(self, idempotency_key=None, **params):\r\n---> 26         url = self.instance_url() + '/confirm'\r\n     27         headers = util.populate_headers(idempotency_key)\r\n     28         self.refresh_from(self.request('post', url, params, headers))\r\n\r\nAttributeError: 'str' object has no attribute 'instance_url\r\n```\r\nThis is because `confirm` is an instance method rather than a `classmethod`.\r\n\r\nThe only way I could get this working was by doing the following:\r\n\r\n```\r\nimport stripe\r\nstripe.api_key = \"<my secret key>\"\r\nintent = stripe.PaymentIntent('<payment_intent_id>').confirm()\r\n```\r\n\r\nI'm not sure whether this is because the docs are wrong or whether the `confirm` method should be a `classmethod` like `create`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/567", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/567/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/567/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/567/events", "html_url": "https://github.com/stripe/stripe-python/issues/567", "id": 442242699, "node_id": "MDU6SXNzdWU0NDIyNDI2OTk=", "number": 567, "title": "stripe.Invoice.auto_paging_iter can infinite loop", "user": {"login": "timvisher", "id": 34676, "node_id": "MDQ6VXNlcjM0Njc2", "avatar_url": "https://avatars3.githubusercontent.com/u/34676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timvisher", "html_url": "https://github.com/timvisher", "followers_url": "https://api.github.com/users/timvisher/followers", "following_url": "https://api.github.com/users/timvisher/following{/other_user}", "gists_url": "https://api.github.com/users/timvisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/timvisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timvisher/subscriptions", "organizations_url": "https://api.github.com/users/timvisher/orgs", "repos_url": "https://api.github.com/users/timvisher/repos", "events_url": "https://api.github.com/users/timvisher/events{/privacy}", "received_events_url": "https://api.github.com/users/timvisher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-09T13:39:59Z", "updated_at": "2019-05-09T18:13:55Z", "closed_at": "2019-05-09T15:42:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python version: Python 3.5.2\r\nvirtualenv:\r\n```\r\nPackage           Version    Location\r\n----------------- ---------- -----------------------\r\nastroid           2.1.0\r\nbackcall          0.1.0\r\nbackoff           1.3.2\r\ncertifi           2018.11.29\r\nchardet           3.0.4\r\ndecorator         4.3.2\r\nidna              2.8\r\nipdb              0.11\r\nipython           7.3.0\r\nipython-genutils  0.2.0\r\nisort             4.3.10\r\njedi              0.13.3\r\njsonschema        2.6.0\r\nlazy-object-proxy 1.3.1\r\nmccabe            0.6.1\r\nparso             0.3.4\r\npexpect           4.6.0\r\npickleshare       0.7.5\r\npip               19.1.1\r\npkg-resources     0.0.0\r\nprompt-toolkit    2.0.9\r\nptyprocess        0.6.0\r\nPygments          2.3.1\r\npylint            2.1.1\r\npython-dateutil   2.8.0\r\npytz              2018.4\r\nrequests          2.21.0\r\nsetuptools        41.0.1\r\nsimplejson        3.11.1\r\nsinger-python     5.5.0      /opt/code/singer-python\r\nsix               1.12.0\r\nstripe            2.10.1\r\ntap-stripe        1.2.4\r\ntraitlets         4.3.2\r\ntyped-ast         1.3.1\r\nurllib3           1.24.1\r\nwcwidth           0.1.7\r\nwrapt             1.11.1\r\n```\r\n\r\nI'm happy to provide a direct reproduction case via a more secure channel if you need it.\r\n\r\nI am one of the maintainers of the [singer.io's][1] [stripe tap][2] and we've encountered an issue with one of our customers where they are infinitely looping over a particular Invoice's line items.\r\n\r\n[1]: https://www.singer.io/\r\n[2]: https://github.com/singer-io/tap-stripe\r\n\r\nWe call `<Invoice instance>.lines.auto_paging_iter()` ([here][5] using `.lines` as the `object_list` and [here][3] calling `auto_paging_iter()` on the `object_list`) for [each `Invoice`][4]\r\n\r\n[3]: https://github.com/singer-io/tap-stripe/blob/f5c70d09a458bed8a9be711396ddccea5c5dcd35/tap_stripe/__init__.py#L497-L498\r\n[5]: https://github.com/singer-io/tap-stripe/blob/f5c70d09a458bed8a9be711396ddccea5c5dcd35/tap_stripe/__init__.py#L511-L512\r\n[4]: https://github.com/singer-io/tap-stripe/blob/f5c70d09a458bed8a9be711396ddccea5c5dcd35/tap_stripe/__init__.py#L464\r\n\r\nYou can see from the following ipdb log the infinite loop:\r\n\r\n```\r\nipdb> pprint([x.id for x in itertools.islice(parent_obj.lines.auto_paging_iter(), 50)])\r\nINFO message='Request to Stripe api' method=get path=https://api.stripe.com/v1/invoices/in_BPw<redacted>SYz/lines?starting_after=sub_B95<redacted>Cn9\r\nINFO message='Stripe API response' path=https://api.stripe.com/v1/invoices/in_BPw<redacted>SYz/lines?starting_after=sub_B95<redacted>Cn9\r\nINFO message='Request to Stripe api' method=get path=https://api.stripe.com/v1/invoices/in_BPw<redacted>SYz/lines?starting_after=sub_B95<redacted>Cn9\r\nINFO message='Stripe API response' path=https://api.stripe.com/v1/invoices/in_BPw<redacted>SYz/lines?starting_after=sub_B95<redacted>Cn9\r\nINFO message='Request to Stripe api' method=get path=https://api.stripe.com/v1/invoices/in_BPw<redacted>SYz/lines?starting_after=sub_B95<redacted>Cn9\r\nINFO message='Stripe API response' path=https://api.stripe.com/v1/invoices/in_BPw<redacted>SYz/lines?starting_after=sub_B95<redacted>Cn9\r\nINFO message='Request to Stripe api' method=get path=https://api.stripe.com/v1/invoices/in_BPw<redacted>SYz/lines?starting_after=sub_B95<redacted>Cn9\r\nINFO message='Stripe API response' path=https://api.stripe.com/v1/invoices/in_BPw<redacted>SYz/lines?starting_after=sub_B95<redacted>Cn9\r\n```\r\n\r\nObviously, I would expect `auto_paging_iter` not to infinite loop, although I'm not sure whether this indicates a problem in the actual data returned or a problem in the `auto_paging_iter` implementation.\r\n\r\nHappy to provide further details if you need it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/556", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/556/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/556/events", "html_url": "https://github.com/stripe/stripe-python/issues/556", "id": 434043783, "node_id": "MDU6SXNzdWU0MzQwNDM3ODM=", "number": 556, "title": "Stripe Create Person  function create_person does not exist", "user": {"login": "jmgamboa", "id": 3579209, "node_id": "MDQ6VXNlcjM1NzkyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3579209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmgamboa", "html_url": "https://github.com/jmgamboa", "followers_url": "https://api.github.com/users/jmgamboa/followers", "following_url": "https://api.github.com/users/jmgamboa/following{/other_user}", "gists_url": "https://api.github.com/users/jmgamboa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmgamboa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmgamboa/subscriptions", "organizations_url": "https://api.github.com/users/jmgamboa/orgs", "repos_url": "https://api.github.com/users/jmgamboa/repos", "events_url": "https://api.github.com/users/jmgamboa/events{/privacy}", "received_events_url": "https://api.github.com/users/jmgamboa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-17T00:49:01Z", "updated_at": "2019-04-17T01:04:14Z", "closed_at": "2019-04-17T01:03:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\n\r\nI am trying to create a Persons object to update identity verification parameters on accounts.\r\n\r\nI am using the signature provided on the docs\r\n\r\n`stripe.Account.create_person('account id', **kwargs)`\r\n\r\nThe error i am getting is `type object Account has no attribute 'create_person'\r\n\r\nI when to search through the repository and found that this function is not unavailable anywhere but exists in the tests and exists in the stripe api docs. \r\n\r\nhttps://stripe.com/docs/api/persons/create\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/549", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/549/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/549/events", "html_url": "https://github.com/stripe/stripe-python/issues/549", "id": 429079312, "node_id": "MDU6SXNzdWU0MjkwNzkzMTI=", "number": 549, "title": "stripe.Subscription.cancel raises an error", "user": {"login": "joshuamanns", "id": 2895179, "node_id": "MDQ6VXNlcjI4OTUxNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2895179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshuamanns", "html_url": "https://github.com/joshuamanns", "followers_url": "https://api.github.com/users/joshuamanns/followers", "following_url": "https://api.github.com/users/joshuamanns/following{/other_user}", "gists_url": "https://api.github.com/users/joshuamanns/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshuamanns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshuamanns/subscriptions", "organizations_url": "https://api.github.com/users/joshuamanns/orgs", "repos_url": "https://api.github.com/users/joshuamanns/repos", "events_url": "https://api.github.com/users/joshuamanns/events{/privacy}", "received_events_url": "https://api.github.com/users/joshuamanns/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-04T04:35:53Z", "updated_at": "2019-04-04T05:21:07Z", "closed_at": "2019-04-04T05:20:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Python v3.7\r\nUsing Stripe Python SDK v2.21.0\r\n\r\nCalling `stripe.Subscription.cancel(subscription_id)` throws an error, but calling it via curl works.\r\n\r\n```\r\nstripe.Subscription.delete(stripe_subscription_id)\r\n  File \"~/.pyenv/versions/forest-server-37-2/lib/python3.7/site-packages/stripe/api_resources/abstract/deletable_api_resource.py\", line 10, in delete\r\n    self.refresh_from(self.request(\"delete\", self.instance_url(), params))\r\nAttributeError: 'str' object has no attribute 'refresh_from'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/546", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/546/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/546/events", "html_url": "https://github.com/stripe/stripe-python/issues/546", "id": 427641700, "node_id": "MDU6SXNzdWU0Mjc2NDE3MDA=", "number": 546, "title": "Create Session object: How are look like \"raw\" request's header and body?", "user": {"login": "alexei-28", "id": 303539, "node_id": "MDQ6VXNlcjMwMzUzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/303539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexei-28", "html_url": "https://github.com/alexei-28", "followers_url": "https://api.github.com/users/alexei-28/followers", "following_url": "https://api.github.com/users/alexei-28/following{/other_user}", "gists_url": "https://api.github.com/users/alexei-28/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexei-28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexei-28/subscriptions", "organizations_url": "https://api.github.com/users/alexei-28/orgs", "repos_url": "https://api.github.com/users/alexei-28/repos", "events_url": "https://api.github.com/users/alexei-28/events{/privacy}", "received_events_url": "https://api.github.com/users/alexei-28/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-01T11:01:17Z", "updated_at": "2019-04-01T15:34:18Z", "closed_at": "2019-04-01T15:34:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use this example to create Session object.\r\n\r\nhttps://stripe.com/docs/api/checkout/sessions/create?lang=python\r\n\r\nNice.\r\n\r\nBut I have a question:\r\nThe http request's header and body are must be like this \"under the hood\":\r\n\r\n```\r\nAuthorization: Bearer sk_test_4eC39HqLyjWDarjtT1zdp7dc\r\nStripe-Version: 2019-03-14\r\ncheckout_sessions_beta: v1\r\nAccept: application/json\r\nContent-Type: application/x-www-form-urlencoded\r\n\r\nsuccess_url=https://example.com/success&cancel_url=https://example.com/cancel&payment_method_types=[\"card\"]&line_items=[{\"name\":\"T-shirt\",\"description\":\"Comfortable cotton t-shirt\",\"amount\":1500,\"currency\":\"usd\",\"quantity\":2}]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/545", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/545/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/545/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/545/events", "html_url": "https://github.com/stripe/stripe-python/issues/545", "id": 425382965, "node_id": "MDU6SXNzdWU0MjUzODI5NjU=", "number": 545, "title": "Stripe creating subscription on payment failure", "user": {"login": "RedixImpact", "id": 36794064, "node_id": "MDQ6VXNlcjM2Nzk0MDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/36794064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RedixImpact", "html_url": "https://github.com/RedixImpact", "followers_url": "https://api.github.com/users/RedixImpact/followers", "following_url": "https://api.github.com/users/RedixImpact/following{/other_user}", "gists_url": "https://api.github.com/users/RedixImpact/gists{/gist_id}", "starred_url": "https://api.github.com/users/RedixImpact/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RedixImpact/subscriptions", "organizations_url": "https://api.github.com/users/RedixImpact/orgs", "repos_url": "https://api.github.com/users/RedixImpact/repos", "events_url": "https://api.github.com/users/RedixImpact/events{/privacy}", "received_events_url": "https://api.github.com/users/RedixImpact/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-26T12:16:46Z", "updated_at": "2019-03-26T16:31:30Z", "closed_at": "2019-03-26T16:31:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I\u2019m sorry to complain and don\u2019t really know the appropriate place for this to go but the \u201cfeature\u201d mentioned in the title legitimately is just a headache for people. I\u2019m assuming MOST people are using standard checkout forms to initialize a subscription and making the customer track down an invoice which won\u2019t even trigger any webhooks is absolutely insane. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/544", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/544/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/544/events", "html_url": "https://github.com/stripe/stripe-python/issues/544", "id": 421928042, "node_id": "MDU6SXNzdWU0MjE5MjgwNDI=", "number": 544, "title": "Invoice.list(customer=None) returns all invoices", "user": {"login": "kennell", "id": 2326287, "node_id": "MDQ6VXNlcjIzMjYyODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2326287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennell", "html_url": "https://github.com/kennell", "followers_url": "https://api.github.com/users/kennell/followers", "following_url": "https://api.github.com/users/kennell/following{/other_user}", "gists_url": "https://api.github.com/users/kennell/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennell/subscriptions", "organizations_url": "https://api.github.com/users/kennell/orgs", "repos_url": "https://api.github.com/users/kennell/repos", "events_url": "https://api.github.com/users/kennell/events{/privacy}", "received_events_url": "https://api.github.com/users/kennell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-17T14:21:38Z", "updated_at": "2019-03-17T22:21:58Z", "closed_at": "2019-03-17T22:21:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using version `2.21.0` doing the following:\r\n```\r\nimport stripe\r\nstripe.Invoice.list(customer=None)\r\n```\r\nwill return all invoices, for all customers. Is this the intended behaviour? I feel like this should be a empty response.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/536", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/536/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/536/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/536/events", "html_url": "https://github.com/stripe/stripe-python/issues/536", "id": 413381475, "node_id": "MDU6SXNzdWU0MTMzODE0NzU=", "number": 536, "title": "False errors raised intermittently when charging a card for a Connected account", "user": {"login": "kareemcoding", "id": 32601343, "node_id": "MDQ6VXNlcjMyNjAxMzQz", "avatar_url": "https://avatars3.githubusercontent.com/u/32601343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kareemcoding", "html_url": "https://github.com/kareemcoding", "followers_url": "https://api.github.com/users/kareemcoding/followers", "following_url": "https://api.github.com/users/kareemcoding/following{/other_user}", "gists_url": "https://api.github.com/users/kareemcoding/gists{/gist_id}", "starred_url": "https://api.github.com/users/kareemcoding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kareemcoding/subscriptions", "organizations_url": "https://api.github.com/users/kareemcoding/orgs", "repos_url": "https://api.github.com/users/kareemcoding/repos", "events_url": "https://api.github.com/users/kareemcoding/events{/privacy}", "received_events_url": "https://api.github.com/users/kareemcoding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-22T12:24:57Z", "updated_at": "2019-02-23T20:09:02Z", "closed_at": "2019-02-22T12:42:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating a charge, the error below will be raised once every 50 charges or so, even though nothing has changed in my code or the status of the connected account and later on they tried again and it worked.\r\n\r\n`InvalidRequestError You cannot access the connected accounts of your platform's connected accounts.`\r\n\r\nAnd I took a look at the log on my stripe dashboard and everything was fine, but the charge was never created, but the logs think it was. Below is the code that thew the error.\r\n```python\r\ntry:\r\n    charge = stripe.Charge.create(\r\n        amount=payment.stripe_amount,\r\n        currency=payment.currency,\r\n        source=stripeToken,\r\n        description=payment.charge_description,\r\n        application_fee=fee,\r\n        stripe_account=payment.company.account_id,\r\n    )\r\n    return render(request, 'pay/charge-successful.html', {'charge':charge})\r\nexcept stripe.error.CardError as e:\r\n    body = e.json_body\r\n    error  = body.get('error', {})\r\n    error = error['message']\r\n    return render(request,'pay/charge-failed.html',{'reason':error})\r\n```\r\n\r\nThe Stripe logs for the event\r\n\r\n```\r\nPOST /v1/tokens\r\n2019/02/22 03:08:34\r\nSummary\r\nID req_xxx\r\nTime 2019/02/22 03:08:34\r\nMethod POST\r\nURL /v1/tokens\r\nStatus 200\r\nIP address xxx.xxx.xxx.xxx\r\nVersion 2018-11-08\r\nSource Mozilla/5.0 (Android 8.1.0; Mobile; rv:65.0) Gecko/65.0 Firefox/65.0\r\nOrigin https://xxx.xxx\r\n```\r\n\r\n```\r\nRequest POST body\r\n{\r\n  \"card\": {\r\n    \"number\": \"************xxx\",\r\n    \"cvc\": \"*********\",\r\n    \"exp_month\": \"xx\",\r\n    \"exp_year\": \"xx\"\r\n  },\r\n  \"guid\": \"NA\",\r\n  \"muid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxx\",\r\n  \"sid\": \"xxxxxxxx-xxxx-xxxxx-xxxx-xxxxxxxxxxxx\",\r\n  \"payment_user_agent\": \"stripe.js/c08ea5de; stripe-js-v3/c08ea5de\",\r\n  \"referrer\": \"https://xxx.xxx/xxx/\",\r\n  \"key\": \"pk_live_xxxxxxxxxxxxxxxxxxxxxxxx\"\r\n}\r\n\r\n```\r\n```\r\nResponse body\r\n{\r\n  \"id\": \"tok_xxxxxxxxxxxxxxxxxxxx\",\r\n  \"object\": \"token\",\r\n  \"card\": {\r\n    \"id\": \"card_xxxxxxxxxxxxxxxxx\",\r\n    \"object\": \"card\",\r\n    \"address_city\": null,\r\n    \"address_country\": null,\r\n    \"address_line1\": null,\r\n    \"address_line1_check\": null,\r\n    \"address_line2\": null,\r\n    \"address_state\": null,\r\n    \"address_zip\": null,\r\n    \"address_zip_check\": null,\r\n    \"brand\": \"MasterCard\",\r\n    \"country\": \"xx\",\r\n    \"cvc_check\": \"unchecked\",\r\n    \"dynamic_last4\": null,\r\n    \"exp_month\": x,\r\n    \"exp_year\": xxxx,\r\n    \"funding\": \"credit\",\r\n    \"last4\": \"xxxx\",\r\n    \"metadata\": {\r\n    },\r\n    \"name\": null,\r\n    \"tokenization_method\": null\r\n  },\r\n  \"client_ip\": \"xxx.xxx.xxx.xxx\",\r\n  \"created\": 1550804914,\r\n  \"livemode\": true,\r\n  \"type\": \"card\",\r\n  \"used\": false\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/533", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/533/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/533/events", "html_url": "https://github.com/stripe/stripe-python/issues/533", "id": 404860461, "node_id": "MDU6SXNzdWU0MDQ4NjA0NjE=", "number": 533, "title": "'_thread._local' object has no attribute 'session'", "user": {"login": "andreage", "id": 8830271, "node_id": "MDQ6VXNlcjg4MzAyNzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8830271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreage", "html_url": "https://github.com/andreage", "followers_url": "https://api.github.com/users/andreage/followers", "following_url": "https://api.github.com/users/andreage/following{/other_user}", "gists_url": "https://api.github.com/users/andreage/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreage/subscriptions", "organizations_url": "https://api.github.com/users/andreage/orgs", "repos_url": "https://api.github.com/users/andreage/repos", "events_url": "https://api.github.com/users/andreage/events{/privacy}", "received_events_url": "https://api.github.com/users/andreage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-30T16:42:17Z", "updated_at": "2019-01-30T19:13:52Z", "closed_at": "2019-01-30T19:07:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since version 2.20.1 I get the following error when I call `stripe.Source.retrieve` (or any other function):\r\n\r\nFile \"VIRTUALENV_PATH/lib/python3.5/site-packages/stripe/http_client.py\" in request\r\n  211.                 result = self._thread_local.session.request(\r\n\r\nDuring handling of the above exception ('_thread._local' object has no attribute 'session'), another exception occurred:\r\n\r\n[...]\r\n\r\nFile \"VIRTUALENV_PATH/lib/python3.5/site-packages/stripe/http_client.py\" in _handle_request_error\r\n  288.         raise error.APIConnectionError(msg, should_retry=should_retry)\r\n\r\nGoing back to 2.20.0 works. Trying it from a Python shell works.\r\n\r\nStripe Python library: 2.20.1\r\nPython: 3.5.3\r\nrequests: 2.21.0\r\nApache/2.4.25 (Debian) w. WSGI\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/509", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/509/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/509/events", "html_url": "https://github.com/stripe/stripe-python/issues/509", "id": 389447402, "node_id": "MDU6SXNzdWUzODk0NDc0MDI=", "number": 509, "title": "Filter list by custom attributes", "user": {"login": "holmberd", "id": 13058304, "node_id": "MDQ6VXNlcjEzMDU4MzA0", "avatar_url": "https://avatars1.githubusercontent.com/u/13058304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/holmberd", "html_url": "https://github.com/holmberd", "followers_url": "https://api.github.com/users/holmberd/followers", "following_url": "https://api.github.com/users/holmberd/following{/other_user}", "gists_url": "https://api.github.com/users/holmberd/gists{/gist_id}", "starred_url": "https://api.github.com/users/holmberd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/holmberd/subscriptions", "organizations_url": "https://api.github.com/users/holmberd/orgs", "repos_url": "https://api.github.com/users/holmberd/repos", "events_url": "https://api.github.com/users/holmberd/events{/privacy}", "received_events_url": "https://api.github.com/users/holmberd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-10T19:17:49Z", "updated_at": "2018-12-10T21:41:22Z", "closed_at": "2018-12-10T21:41:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does API support filtering a list by a custom attribute, e.g. if a  SKU has a custom attribute called `type` how would the arguments be constructed? `stripe.SKU.list(product='123', attributes_type='test')`\r\n\r\nIt feels like it should since you can perform that request with `curl`:\r\n`curl https://api.stripe.com/v1/skus?limit=1 -d product=prod_1 -d attributes[type]=test ...`\r\n\r\n![image](https://user-images.githubusercontent.com/13058304/49754447-f0b61d80-fc6a-11e8-9c55-e28724918d6b.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/508", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/508/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/508/events", "html_url": "https://github.com/stripe/stripe-python/issues/508", "id": 388884768, "node_id": "MDU6SXNzdWUzODg4ODQ3Njg=", "number": 508, "title": "Add API for checking zero-decimal currencies", "user": {"login": "jxltom", "id": 1401630, "node_id": "MDQ6VXNlcjE0MDE2MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1401630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jxltom", "html_url": "https://github.com/jxltom", "followers_url": "https://api.github.com/users/jxltom/followers", "following_url": "https://api.github.com/users/jxltom/following{/other_user}", "gists_url": "https://api.github.com/users/jxltom/gists{/gist_id}", "starred_url": "https://api.github.com/users/jxltom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jxltom/subscriptions", "organizations_url": "https://api.github.com/users/jxltom/orgs", "repos_url": "https://api.github.com/users/jxltom/repos", "events_url": "https://api.github.com/users/jxltom/events{/privacy}", "received_events_url": "https://api.github.com/users/jxltom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-08T04:39:31Z", "updated_at": "2018-12-10T09:24:01Z", "closed_at": "2018-12-10T09:16:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "It will be nice to add an API or helper function to check if a currency is zero-decimal as documented in https://stripe.com/docs/currencies#zero-decimal. So we don't need to implement the lookup function from the table https://stripe.com/docs/currencies#presentment-currencies, which may be easily outdated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/506", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/506/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/506/events", "html_url": "https://github.com/stripe/stripe-python/issues/506", "id": 387053301, "node_id": "MDU6SXNzdWUzODcwNTMzMDE=", "number": 506, "title": "Unable to update a given subscription from one metered plan to another", "user": {"login": "danish1010", "id": 45180323, "node_id": "MDQ6VXNlcjQ1MTgwMzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/45180323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danish1010", "html_url": "https://github.com/danish1010", "followers_url": "https://api.github.com/users/danish1010/followers", "following_url": "https://api.github.com/users/danish1010/following{/other_user}", "gists_url": "https://api.github.com/users/danish1010/gists{/gist_id}", "starred_url": "https://api.github.com/users/danish1010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danish1010/subscriptions", "organizations_url": "https://api.github.com/users/danish1010/orgs", "repos_url": "https://api.github.com/users/danish1010/repos", "events_url": "https://api.github.com/users/danish1010/events{/privacy}", "received_events_url": "https://api.github.com/users/danish1010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-03T23:34:41Z", "updated_at": "2019-01-16T14:21:42Z", "closed_at": "2019-01-16T14:21:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Stripe library version: 1.19.0**\r\n**Python: 2.7**\r\n\r\nWhen i am changing subscription from one metered plan to another metered plan. I edit the subscription object as mentioned below\r\n```bash\r\n// fetch the subscription object\r\n\r\nsubscription.plan = new_plan_id\r\nsubscription.save()\r\n```\r\n\r\nIssue is subscription.quantity is `None` as its a metered plan and i get this error `InvalidRequestError: Invalid integer:` when i do so. How do i update the subscription plan.\r\n\r\nAnd if i set the quantity `subscription.quantity = 0` then i get the following error `InvalidRequestError: You cannot set the quantity for metered plans`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/505", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/505/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/505/events", "html_url": "https://github.com/stripe/stripe-python/issues/505", "id": 386588730, "node_id": "MDU6SXNzdWUzODY1ODg3MzA=", "number": 505, "title": "InvalidRequestError: Received unknown parameters when updating invoice (from event)", "user": {"login": "boydgreenfield", "id": 535969, "node_id": "MDQ6VXNlcjUzNTk2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/535969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boydgreenfield", "html_url": "https://github.com/boydgreenfield", "followers_url": "https://api.github.com/users/boydgreenfield/followers", "following_url": "https://api.github.com/users/boydgreenfield/following{/other_user}", "gists_url": "https://api.github.com/users/boydgreenfield/gists{/gist_id}", "starred_url": "https://api.github.com/users/boydgreenfield/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boydgreenfield/subscriptions", "organizations_url": "https://api.github.com/users/boydgreenfield/orgs", "repos_url": "https://api.github.com/users/boydgreenfield/repos", "events_url": "https://api.github.com/users/boydgreenfield/events{/privacy}", "received_events_url": "https://api.github.com/users/boydgreenfield/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-02T19:04:56Z", "updated_at": "2019-01-16T14:22:08Z", "closed_at": "2019-01-16T14:22:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Stripe library version: 2.13.0**\r\n\r\nWe're having an issue where we'd like to set `auto_advance = False` on invoices meeting certain criteria as they're generated. Unfortunately, we've seen a number of issues with this causing API errors (`InvalidRequestError` and messages about unknown params), and these have proven quite tricky to debug.*\r\n\r\nIn our backend, we have code that looks something like the following:\r\n\r\n```python\r\ndef _handle_invoice_create(event=None):\r\n    \"\"\"\r\n    Automatically disable auto-advance on creation of subscription-linked invoices >$1000 for manual review.\r\n    \"\"\"\r\n    invoice = event['data']['object']\r\n    if invoice.subscription and invoice.total > 1000 and not invoice.paid:\r\n        invoice.auto_advance = False\r\n        invoice.save()\r\n```\r\n\r\nwhere `event` is being created on our Stripe webhook route with:\r\n\r\n```python\r\nevent = stripe.Webhook.construct_event(\r\n    payload, received_sig, webhook_secret\r\n)\r\n```\r\n\r\nI _believe_ this is a library bug in that: (1) the code used to work with an earlier API version and version `2.0.1` of the client library; and (2) our code is consistent with [the examples in the documentation](https://stripe.com/docs/api/invoices/update). \r\n\r\nIt seems like the issue is that the `invoice` object being generated from the event JSON has extra fields that `invoice.save()` is then sending back to the API and they're being rejected. What is the workaround and proper solution here? Do we need to `stripe.Invoice.retrieve(event['data']['object'].id)` and then update the `invoice` object?\r\n\r\nAny guidance on either the correct pattern (if this is a \"we didn't get the right picture from the documentation\" issue) or a workaround (if a bug) would be greatly appreciated.\r\n\r\n\r\n\r\n\\* I should note we had the above code working just fine with `invoice.closed = True` back on an earlier Stripe library version and the May 2018 API version, but then an API update broke everything as we started to get error messages about not being able to set both `closed` and `auto_advance`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/504", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/504/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/504/events", "html_url": "https://github.com/stripe/stripe-python/issues/504", "id": 386311642, "node_id": "MDU6SXNzdWUzODYzMTE2NDI=", "number": 504, "title": "Subscription Items Not Accessible", "user": {"login": "jakepoz", "id": 392417, "node_id": "MDQ6VXNlcjM5MjQxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/392417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakepoz", "html_url": "https://github.com/jakepoz", "followers_url": "https://api.github.com/users/jakepoz/followers", "following_url": "https://api.github.com/users/jakepoz/following{/other_user}", "gists_url": "https://api.github.com/users/jakepoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakepoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakepoz/subscriptions", "organizations_url": "https://api.github.com/users/jakepoz/orgs", "repos_url": "https://api.github.com/users/jakepoz/repos", "events_url": "https://api.github.com/users/jakepoz/events{/privacy}", "received_events_url": "https://api.github.com/users/jakepoz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-30T19:04:44Z", "updated_at": "2018-12-06T22:05:37Z", "closed_at": "2018-11-30T22:38:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have code such as this:\r\n\r\n```\r\n active_subs = stripe.Subscription.list(status=\"active\", customer=stripe_customer_id)\r\n\r\n for sub in active_subs:\r\n        items = sub.items\r\n        for item in items:\r\n          print(item)\r\n```\r\n\r\nHowever, this throws an exception on the `for item in items` line with a `TypeError: 'builtin_function_or_method' object is not iterable`\r\n\r\nIf you just print the active_subs response, you see that the fully populated items are returned in the response, and you can even read them the values from the PyCharm debugger.\r\n\r\nWe are on python 3.6, and stripe python 2.14.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/501", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/501/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/501/events", "html_url": "https://github.com/stripe/stripe-python/issues/501", "id": 385334519, "node_id": "MDU6SXNzdWUzODUzMzQ1MTk=", "number": 501, "title": "Support custom certificate bundle", "user": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 330246849, "node_id": "MDU6TGFiZWwzMzAyNDY4NDk=", "url": "https://api.github.com/repos/stripe/stripe-python/labels/future", "name": "future", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ob-stripe", "id": 23086931, "node_id": "MDQ6VXNlcjIzMDg2OTMx", "avatar_url": "https://avatars0.githubusercontent.com/u/23086931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ob-stripe", "html_url": "https://github.com/ob-stripe", "followers_url": "https://api.github.com/users/ob-stripe/followers", "following_url": "https://api.github.com/users/ob-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/ob-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ob-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ob-stripe/subscriptions", "organizations_url": "https://api.github.com/users/ob-stripe/orgs", "repos_url": "https://api.github.com/users/ob-stripe/repos", "events_url": "https://api.github.com/users/ob-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/ob-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ob-stripe", "id": 23086931, "node_id": "MDQ6VXNlcjIzMDg2OTMx", "avatar_url": "https://avatars0.githubusercontent.com/u/23086931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ob-stripe", "html_url": "https://github.com/ob-stripe", "followers_url": "https://api.github.com/users/ob-stripe/followers", "following_url": "https://api.github.com/users/ob-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/ob-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ob-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ob-stripe/subscriptions", "organizations_url": "https://api.github.com/users/ob-stripe/orgs", "repos_url": "https://api.github.com/users/ob-stripe/repos", "events_url": "https://api.github.com/users/ob-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/ob-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-28T15:53:35Z", "updated_at": "2018-11-30T17:35:30Z", "closed_at": "2018-11-30T17:32:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Allow users to pass their own certificate bundle or extra certificate, for example when using a proxy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/499", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/499/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/499/events", "html_url": "https://github.com/stripe/stripe-python/issues/499", "id": 384152596, "node_id": "MDU6SXNzdWUzODQxNTI1OTY=", "number": 499, "title": "Unable to use usage record", "user": {"login": "danish1010", "id": 45180323, "node_id": "MDQ6VXNlcjQ1MTgwMzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/45180323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danish1010", "html_url": "https://github.com/danish1010", "followers_url": "https://api.github.com/users/danish1010/followers", "following_url": "https://api.github.com/users/danish1010/following{/other_user}", "gists_url": "https://api.github.com/users/danish1010/gists{/gist_id}", "starred_url": "https://api.github.com/users/danish1010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danish1010/subscriptions", "organizations_url": "https://api.github.com/users/danish1010/orgs", "repos_url": "https://api.github.com/users/danish1010/repos", "events_url": "https://api.github.com/users/danish1010/events{/privacy}", "received_events_url": "https://api.github.com/users/danish1010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-26T02:37:44Z", "updated_at": "2018-11-26T02:40:18Z", "closed_at": "2018-11-26T02:40:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use Stripe's https://stripe.com/docs/api/usage_records/object?lang=python\r\nBut i don't see any function named UsageRecord\r\n```\r\ndir(stripe)\r\n\r\n['APIConnectionError', 'APIError', 'APIRequestor', \r\n'APIResource', 'Account', 'ApplicationFee',\r\n 'AuthenticationError', 'Balance', \r\n'BalanceTransaction', 'Card', \r\n'CardError', 'Charge', 'Coupon', \r\n'CreateableAPIResource', 'Customer', 'DeletableAPIResource',\r\n 'Event', 'InvalidRequestError', 'Invoice', \r\n'InvoiceItem', 'ListObject', 'ListableAPIResource', 'Plan',\r\n 'Recipient', 'SingletonAPIResource', 'StripeError', \r\n'StripeObject', 'StripeObjectEncoder', 'Subscription',\r\n 'Token', 'Transfer', 'UpdateableAPIResource', \r\n'VERSION', '__builtins__', '__doc__', '__file__',\r\n '__name__', '__package__', '__path__', \r\n'api_base', 'api_key', 'api_version', \r\n'convert_to_stripe_object', 'json', \r\n'logger', 'verify_ssl_certs']\r\n```\r\n\r\nPython 2.7\r\nStripe API 1.19.0\r\n\r\nAlso is their a way i can upgrade to that specific version where its available. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/496", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/496/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/496/events", "html_url": "https://github.com/stripe/stripe-python/issues/496", "id": 383318064, "node_id": "MDU6SXNzdWUzODMzMTgwNjQ=", "number": 496, "title": "Unable to create tiered plan ", "user": {"login": "danish1010", "id": 45180323, "node_id": "MDQ6VXNlcjQ1MTgwMzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/45180323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danish1010", "html_url": "https://github.com/danish1010", "followers_url": "https://api.github.com/users/danish1010/followers", "following_url": "https://api.github.com/users/danish1010/following{/other_user}", "gists_url": "https://api.github.com/users/danish1010/gists{/gist_id}", "starred_url": "https://api.github.com/users/danish1010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danish1010/subscriptions", "organizations_url": "https://api.github.com/users/danish1010/orgs", "repos_url": "https://api.github.com/users/danish1010/repos", "events_url": "https://api.github.com/users/danish1010/events{/privacy}", "received_events_url": "https://api.github.com/users/danish1010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-21T22:47:31Z", "updated_at": "2018-11-22T01:22:10Z", "closed_at": "2018-11-22T01:22:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error `tripe.error.InvalidRequestError: Invalid hash` \r\nWhen i am trying to create a tier based plan using the example mentioned on the [page](https://stripe.com/docs/billing/subscriptions/examples#volume-based-pricing)\r\n\r\n```\r\nstripe.Plan.create(\r\n  api_key=\"XXXXX\",\r\n  nickname=\"Car Wash Volume Pricing\",\r\n  product=\"{{CAR_WASH_PRODUCT_ID}}\",\r\n  currency=\"usd\",\r\n  interval=\"month\",\r\n  usage_type=\"metered\",\r\n  billing_scheme=\"tiered\",\r\n  tiers_mode=\"volume\",\r\n  tiers=[\r\n    {\r\n      \"amount\": 700,\r\n      \"up_to\": \"5\",\r\n    },{\r\n      \"amount\": 650,\r\n      \"up_to\": \"10\",\r\n    },{\r\n      \"amount\": 600,\r\n      \"up_to\": \"inf\",\r\n    },\r\n  ]\r\n)\r\n```\r\n\r\nPython 2.7 \r\nStripe API 1.19.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/494", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/494/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/494/events", "html_url": "https://github.com/stripe/stripe-python/issues/494", "id": 381433601, "node_id": "MDU6SXNzdWUzODE0MzM2MDE=", "number": 494, "title": "Are stripe objects dicts?", "user": {"login": "oTree-org", "id": 5423929, "node_id": "MDQ6VXNlcjU0MjM5Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5423929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oTree-org", "html_url": "https://github.com/oTree-org", "followers_url": "https://api.github.com/users/oTree-org/followers", "following_url": "https://api.github.com/users/oTree-org/following{/other_user}", "gists_url": "https://api.github.com/users/oTree-org/gists{/gist_id}", "starred_url": "https://api.github.com/users/oTree-org/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oTree-org/subscriptions", "organizations_url": "https://api.github.com/users/oTree-org/orgs", "repos_url": "https://api.github.com/users/oTree-org/repos", "events_url": "https://api.github.com/users/oTree-org/events{/privacy}", "received_events_url": "https://api.github.com/users/oTree-org/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-16T03:42:14Z", "updated_at": "2018-11-21T09:12:22Z", "closed_at": "2018-11-20T16:08:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "When reading the docs about subscriptions, customers, etc., I sometimes see attribute notation, like \r\n\r\n```\r\nsubscription.tax_percent = 10\r\n```\r\n\r\nAnd sometimes see dict notation, like `subscription['items']['data'][0].id`, and sometimes see a mix (e.g. in the previous example why not use ['id'] at the end?)\r\n\r\nWhat is the difference between the two? I was wondering if I could use dict notation all the way, like `subscription['items']['data'][0]['id']`. That means in my tests using `unittest.mock` I could patch the return values of `create`, `retrieve`, etc. using simple dict literals.\r\n\r\n(By the way the docs have examples on how to use stripe-python, but I can't find any general explanation of how stripe-python is works, e.g. what data types it uses and how those map to JSON responses.)\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/493", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/493/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/493/events", "html_url": "https://github.com/stripe/stripe-python/issues/493", "id": 381182949, "node_id": "MDU6SXNzdWUzODExODI5NDk=", "number": 493, "title": "Auto sending invoice is not working", "user": {"login": "VladSkliar", "id": 11414276, "node_id": "MDQ6VXNlcjExNDE0Mjc2", "avatar_url": "https://avatars1.githubusercontent.com/u/11414276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VladSkliar", "html_url": "https://github.com/VladSkliar", "followers_url": "https://api.github.com/users/VladSkliar/followers", "following_url": "https://api.github.com/users/VladSkliar/following{/other_user}", "gists_url": "https://api.github.com/users/VladSkliar/gists{/gist_id}", "starred_url": "https://api.github.com/users/VladSkliar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VladSkliar/subscriptions", "organizations_url": "https://api.github.com/users/VladSkliar/orgs", "repos_url": "https://api.github.com/users/VladSkliar/repos", "events_url": "https://api.github.com/users/VladSkliar/events{/privacy}", "received_events_url": "https://api.github.com/users/VladSkliar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "remi-stripe", "id": 9683352, "node_id": "MDQ6VXNlcjk2ODMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9683352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remi-stripe", "html_url": "https://github.com/remi-stripe", "followers_url": "https://api.github.com/users/remi-stripe/followers", "following_url": "https://api.github.com/users/remi-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/remi-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/remi-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remi-stripe/subscriptions", "organizations_url": "https://api.github.com/users/remi-stripe/orgs", "repos_url": "https://api.github.com/users/remi-stripe/repos", "events_url": "https://api.github.com/users/remi-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/remi-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-11-15T14:23:23Z", "updated_at": "2018-11-15T14:37:45Z", "closed_at": "2018-11-15T14:37:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "After creating Invoice i try to send invoice not expecting manual or 1hour sending \r\nhttps://stripe.com/docs/api/invoices/send?lang=python#send_invoice\r\n```python\r\ninvoice = stripe.Invoice.create(\r\n  customer=customer.stripe_id,\r\n  auto_advance=False, # auto-finalize this draft after ~1 hour\r\n  billing='send_invoice',\r\n  days_until_due=30\r\n)\r\ninvoice.send_invoice()\r\n```\r\nException ```AttributeError: send_invoice```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/492", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/492/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/492/events", "html_url": "https://github.com/stripe/stripe-python/issues/492", "id": 379001856, "node_id": "MDU6SXNzdWUzNzkwMDE4NTY=", "number": 492, "title": "invoice.send_invoice not working as intended?", "user": {"login": "RedixImpact", "id": 36794064, "node_id": "MDQ6VXNlcjM2Nzk0MDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/36794064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RedixImpact", "html_url": "https://github.com/RedixImpact", "followers_url": "https://api.github.com/users/RedixImpact/followers", "following_url": "https://api.github.com/users/RedixImpact/following{/other_user}", "gists_url": "https://api.github.com/users/RedixImpact/gists{/gist_id}", "starred_url": "https://api.github.com/users/RedixImpact/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RedixImpact/subscriptions", "organizations_url": "https://api.github.com/users/RedixImpact/orgs", "repos_url": "https://api.github.com/users/RedixImpact/repos", "events_url": "https://api.github.com/users/RedixImpact/events{/privacy}", "received_events_url": "https://api.github.com/users/RedixImpact/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-09T02:49:23Z", "updated_at": "2018-11-09T15:35:20Z", "closed_at": "2018-11-09T15:35:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using invoice.send_invoice() on the Stripe Dashboard it says invoice sent via email but when I check my email, I did not receive anything.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/490", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/490/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/490/events", "html_url": "https://github.com/stripe/stripe-python/issues/490", "id": 377146924, "node_id": "MDU6SXNzdWUzNzcxNDY5MjQ=", "number": 490, "title": "Add a global stripe.stripe_account variable", "user": {"login": "stygmate", "id": 1467305, "node_id": "MDQ6VXNlcjE0NjczMDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1467305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stygmate", "html_url": "https://github.com/stygmate", "followers_url": "https://api.github.com/users/stygmate/followers", "following_url": "https://api.github.com/users/stygmate/following{/other_user}", "gists_url": "https://api.github.com/users/stygmate/gists{/gist_id}", "starred_url": "https://api.github.com/users/stygmate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stygmate/subscriptions", "organizations_url": "https://api.github.com/users/stygmate/orgs", "repos_url": "https://api.github.com/users/stygmate/repos", "events_url": "https://api.github.com/users/stygmate/events{/privacy}", "received_events_url": "https://api.github.com/users/stygmate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-04T12:18:11Z", "updated_at": "2018-11-22T08:24:30Z", "closed_at": "2018-11-22T08:24:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "the Goal is to have all request done for a specified connected account.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/488", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/488/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/488/events", "html_url": "https://github.com/stripe/stripe-python/issues/488", "id": 374540498, "node_id": "MDU6SXNzdWUzNzQ1NDA0OTg=", "number": 488, "title": "Wiki is publicly editable", "user": {"login": "jsuter", "id": 641801, "node_id": "MDQ6VXNlcjY0MTgwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/641801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsuter", "html_url": "https://github.com/jsuter", "followers_url": "https://api.github.com/users/jsuter/followers", "following_url": "https://api.github.com/users/jsuter/following{/other_user}", "gists_url": "https://api.github.com/users/jsuter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsuter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsuter/subscriptions", "organizations_url": "https://api.github.com/users/jsuter/orgs", "repos_url": "https://api.github.com/users/jsuter/repos", "events_url": "https://api.github.com/users/jsuter/events{/privacy}", "received_events_url": "https://api.github.com/users/jsuter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-26T20:42:14Z", "updated_at": "2018-10-26T20:58:55Z", "closed_at": "2018-10-26T20:58:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like the footer on the wiki for this repo can be edited by anyone.\r\n\r\ne.g. https://github.com/stripe/stripe-python/wiki/Migration-guide-for-v2\r\n\r\nIt should probably be locked down for security reasons (e.g. misleading documentation).\r\n\r\nEdit: looks like most of the wiki can be edited by the public.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/487", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/487/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/487/events", "html_url": "https://github.com/stripe/stripe-python/issues/487", "id": 373894020, "node_id": "MDU6SXNzdWUzNzM4OTQwMjA=", "number": 487, "title": "Invalid boolean: True", "user": {"login": "ivkalita", "id": 3984307, "node_id": "MDQ6VXNlcjM5ODQzMDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3984307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivkalita", "html_url": "https://github.com/ivkalita", "followers_url": "https://api.github.com/users/ivkalita/followers", "following_url": "https://api.github.com/users/ivkalita/following{/other_user}", "gists_url": "https://api.github.com/users/ivkalita/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivkalita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivkalita/subscriptions", "organizations_url": "https://api.github.com/users/ivkalita/orgs", "repos_url": "https://api.github.com/users/ivkalita/repos", "events_url": "https://api.github.com/users/ivkalita/events{/privacy}", "received_events_url": "https://api.github.com/users/ivkalita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-25T11:08:58Z", "updated_at": "2018-10-25T12:31:02Z", "closed_at": "2018-10-25T12:31:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Starting from today morning I faced a lot of exceptions from stripe API.\r\n\r\nThe simplest way to reproduce the issue is:\r\n```python3\r\n...\r\ninvoice = stripe.Invoice.retrieve('some_invoice_id')\r\ninvoice.closed = True\r\ninvoice.save()\r\n```\r\n\r\nIt results as an exception:\r\n\r\n```\r\nIn [25]: invoice.save()\r\n[25/Oct/2018 12:56:15] INFO [stripe:62] message='Request to Stripe api' method=post path=https://api.stripe.com/v1/invoices/XXX\r\n[25/Oct/2018 12:56:16] INFO [stripe:62] message='Stripe API response' path=https://api.stripe.com/v1/invoices/XXX response_code=400\r\n[25/Oct/2018 12:56:16] INFO [stripe:62] error_code=None error_message='Invalid boolean: True' error_param=closed error_type=invalid_request_error message='Stripe API error received'\r\n---------------------------------------------------------------------------\r\nInvalidRequestError                       Traceback (most recent call last)\r\n<ipython-input-25-5b9a97d7c813> in <module>()\r\n----> 1 invoice.save()\r\n\r\n~/.virtualenvs/project/lib/python3.6/site-packages/stripe/api_resources/abstract/updateable_api_resource.py in save(self, idempotency_key)\r\n     30         if updated_params:\r\n     31             self.refresh_from(self.request('post', self.instance_url(),\r\n---> 32                                            updated_params, headers))\r\n     33         else:\r\n     34             util.logger.debug(\"Trying to save already saved object %r\", self)\r\n\r\n~/.virtualenvs/project/lib/python3.6/site-packages/stripe/stripe_object.py in request(self, method, url, params, headers)\r\n    205             key=self.api_key, api_base=self.api_base(),\r\n    206             api_version=self.stripe_version, account=self.stripe_account)\r\n--> 207         response, api_key = requestor.request(method, url, params, headers)\r\n    208 \r\n    209         return util.convert_to_stripe_object(response, api_key,\r\n\r\n~/.virtualenvs/project/lib/python3.6/site-packages/stripe/api_requestor.py in request(self, method, url, params, headers)\r\n     92         rbody, rcode, rheaders, my_api_key = self.request_raw(\r\n     93             method.lower(), url, params, headers)\r\n---> 94         resp = self.interpret_response(rbody, rcode, rheaders)\r\n     95         return resp, my_api_key\r\n     96 \r\n\r\n~/.virtualenvs/project/lib/python3.6/site-packages/stripe/api_requestor.py in interpret_response(self, rbody, rcode, rheaders)\r\n    304                 rbody, rcode, rheaders)\r\n    305         if not (200 <= rcode < 300):\r\n--> 306             self.handle_error_response(rbody, rcode, resp.data, rheaders)\r\n    307 \r\n    308         return resp\r\n\r\n~/.virtualenvs/project/lib/python3.6/site-packages/stripe/api_requestor.py in handle_error_response(self, rbody, rcode, resp, rheaders)\r\n    117                 rbody, rcode, resp, rheaders, error_data)\r\n    118 \r\n--> 119         raise err\r\n    120 \r\n    121     def specific_api_error(self, rbody, rcode, resp, rheaders, error_data):\r\n\r\nInvalidRequestError: Request req_YYY: Invalid boolean: True\r\n```\r\n\r\nBut, if I use `invoice.closed = 'true'` instead of `invoice.closed = True` it works. There were no such problem before, probably, something was changed on the Stripe side (but I can't find any new release updates). Looks like `'True'` and `'False'` values are not accepted by Stripe anymore. \r\n\r\nPython version: 3.6.6\r\nStripe api version: 2018-09-24\r\nstripe-python version: 2.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/486", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/486/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/486/events", "html_url": "https://github.com/stripe/stripe-python/issues/486", "id": 372583104, "node_id": "MDU6SXNzdWUzNzI1ODMxMDQ=", "number": 486, "title": "Support for tests connecting to stripe-mock via a Unix socket", "user": {"login": "seifertm", "id": 8395347, "node_id": "MDQ6VXNlcjgzOTUzNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8395347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seifertm", "html_url": "https://github.com/seifertm", "followers_url": "https://api.github.com/users/seifertm/followers", "following_url": "https://api.github.com/users/seifertm/following{/other_user}", "gists_url": "https://api.github.com/users/seifertm/gists{/gist_id}", "starred_url": "https://api.github.com/users/seifertm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seifertm/subscriptions", "organizations_url": "https://api.github.com/users/seifertm/orgs", "repos_url": "https://api.github.com/users/seifertm/repos", "events_url": "https://api.github.com/users/seifertm/events{/privacy}", "received_events_url": "https://api.github.com/users/seifertm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-22T16:01:02Z", "updated_at": "2018-10-23T13:07:41Z", "closed_at": "2018-10-23T13:07:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "`stripe-mock` has the ability to listen on a Unix socket for incoming requests.\r\nCurrently, the tests of `stripe-python` only support connection via http, as far as I can tell. It would be nice, if we could configure the tests to connect to stripe-mock via a unix socket. Is this possible?\r\n\r\nBackground:\r\nI am currently trying to update the package for the Stripe client for Gentoo Linux (see https://github.com/gentoo/gentoo/pull/10156). Gentoo packages should generally have a test phase that run some tests to validate their correct installation. We are trying to use `stripe-mock` in the test phase of `stripe-python`. However, it is currently necessary to determine a free port that `stripe-mock` can bind to, because we don't know which ports are used on the system where the `stripe-python` is being installed installed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/485", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/485/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/485/events", "html_url": "https://github.com/stripe/stripe-python/issues/485", "id": 372301642, "node_id": "MDU6SXNzdWUzNzIzMDE2NDI=", "number": 485, "title": "Unable to cancel stripe subscription at period end", "user": {"login": "IlianIliev", "id": 541401, "node_id": "MDQ6VXNlcjU0MTQwMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/541401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlianIliev", "html_url": "https://github.com/IlianIliev", "followers_url": "https://api.github.com/users/IlianIliev/followers", "following_url": "https://api.github.com/users/IlianIliev/following{/other_user}", "gists_url": "https://api.github.com/users/IlianIliev/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlianIliev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlianIliev/subscriptions", "organizations_url": "https://api.github.com/users/IlianIliev/orgs", "repos_url": "https://api.github.com/users/IlianIliev/repos", "events_url": "https://api.github.com/users/IlianIliev/events{/privacy}", "received_events_url": "https://api.github.com/users/IlianIliev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-21T10:48:53Z", "updated_at": "2019-01-10T00:19:08Z", "closed_at": "2018-10-21T15:29:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Python 3.6.5\r\n# stripe 2.10.1\r\n\r\nAccording to the docs https://stripe.com/docs/billing/subscriptions/canceling-pausing I am doing the following:\r\n```\r\nstripe_subscription = stripe.Subscription.retrieve(self.stripe_id)\r\nstripe_subscription.update(cancel_at_period_end=True)\r\n```\r\n\r\nHowever it throws an error: `TypeError: update() got an unexpected keyword argument 'cancel_at_period_end'`\r\n\r\nI have managed to get it working by changing it to:\r\n\r\n```\r\nstripe_subscription = stripe.Subscription.retrieve(self.stripe_id)\r\nstripe_subscription.update({'cancel_at_period_end': True})\r\nstripe_subscription.save()\r\n```\r\n\r\nHowever either the code or the documentation need to be updated. \r\nHowever for I think it will it will be better if we can do the following:\r\n\r\n```\r\nsubscription.cancel()  # cancels subscription immediately\r\nsubscription.cancel(at_period_end=True)  # cancels subscription at period end\r\n```\r\n\r\nBoth methods should commit the change so there is no need to call `.save()` explicitly.\r\n\r\nI am willing to provide a fix in a PR if this sounds good to you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/479", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/479/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/479/events", "html_url": "https://github.com/stripe/stripe-python/issues/479", "id": 363472067, "node_id": "MDU6SXNzdWUzNjM0NzIwNjc=", "number": 479, "title": "AttributeError: type object 'UsageRecordSummary' has no attribute 'list'", "user": {"login": "jandebleser", "id": 957494, "node_id": "MDQ6VXNlcjk1NzQ5NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/957494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jandebleser", "html_url": "https://github.com/jandebleser", "followers_url": "https://api.github.com/users/jandebleser/followers", "following_url": "https://api.github.com/users/jandebleser/following{/other_user}", "gists_url": "https://api.github.com/users/jandebleser/gists{/gist_id}", "starred_url": "https://api.github.com/users/jandebleser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jandebleser/subscriptions", "organizations_url": "https://api.github.com/users/jandebleser/orgs", "repos_url": "https://api.github.com/users/jandebleser/repos", "events_url": "https://api.github.com/users/jandebleser/events{/privacy}", "received_events_url": "https://api.github.com/users/jandebleser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-25T08:50:19Z", "updated_at": "2018-09-28T07:16:09Z", "closed_at": "2018-09-25T11:06:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run the the snippet from here: `https://stripe.com/docs/api/python#usage_record_summary_all`\r\nI get the following error:\r\n`AttributeError: type object 'UsageRecordSummary' has no attribute 'list'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/475", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/475/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/475/events", "html_url": "https://github.com/stripe/stripe-python/issues/475", "id": 360329517, "node_id": "MDU6SXNzdWUzNjAzMjk1MTc=", "number": 475, "title": "Stripe community contributions?", "user": {"login": "leebenson", "id": 719722, "node_id": "MDQ6VXNlcjcxOTcyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/719722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leebenson", "html_url": "https://github.com/leebenson", "followers_url": "https://api.github.com/users/leebenson/followers", "following_url": "https://api.github.com/users/leebenson/following{/other_user}", "gists_url": "https://api.github.com/users/leebenson/gists{/gist_id}", "starred_url": "https://api.github.com/users/leebenson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leebenson/subscriptions", "organizations_url": "https://api.github.com/users/leebenson/orgs", "repos_url": "https://api.github.com/users/leebenson/repos", "events_url": "https://api.github.com/users/leebenson/events{/privacy}", "received_events_url": "https://api.github.com/users/leebenson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-14T14:32:05Z", "updated_at": "2018-09-14T15:33:19Z", "closed_at": "2018-09-14T15:33:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not an issue, just wondering if there's a place to post community code contributions outside of the official API?\r\n\r\nI wrote [stripe-xero-csv](https://github.com/leebenson/stripe-xero-csv) -- a Python CLI tool for creating Xero-compatible `.csv` bank statements -- and thought some folks might find it useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/472", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/472/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/472/events", "html_url": "https://github.com/stripe/stripe-python/issues/472", "id": 359685628, "node_id": "MDU6SXNzdWUzNTk2ODU2Mjg=", "number": 472, "title": "Topup Test Bank Account Code Not Behaving As Expected", "user": {"login": "jake-kent", "id": 11411119, "node_id": "MDQ6VXNlcjExNDExMTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/11411119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jake-kent", "html_url": "https://github.com/jake-kent", "followers_url": "https://api.github.com/users/jake-kent/followers", "following_url": "https://api.github.com/users/jake-kent/following{/other_user}", "gists_url": "https://api.github.com/users/jake-kent/gists{/gist_id}", "starred_url": "https://api.github.com/users/jake-kent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jake-kent/subscriptions", "organizations_url": "https://api.github.com/users/jake-kent/orgs", "repos_url": "https://api.github.com/users/jake-kent/repos", "events_url": "https://api.github.com/users/jake-kent/events{/privacy}", "received_events_url": "https://api.github.com/users/jake-kent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-12T23:14:16Z", "updated_at": "2018-09-13T05:38:29Z", "closed_at": "2018-09-12T23:28:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "python: 3.6.0\r\nstripe: 2.8.0\r\n\r\n```python\r\ntopup = stripe.Topup.create(amount=12345,\r\n    currency='usd',\r\n    source='btok_us_verified_noAccount',\r\n    description='Topup for order #123 with amount 12345',\r\n    statement_descriptor='TopupOrder123')\r\n\r\ntopup['failure_code']\r\nNone\r\n```\r\n\r\nAccording to [documentation](https://stripe.com/docs/connect/testing#testing-top-ups), testing the stripe.Topup.create endpoint in test mode with source='btok_us_verified_noAccount' is supposed to result in a no_account failure.\r\n\r\nHowever, no exception is raised and there is no value set in the Topup object for either failure_code or failure_message when doing so, as shown above.\r\n\r\nPlease advise.\r\n\r\nP.S. it seems that this might be an issue with the API itself, but I couldn't find how to report bugs with the API directly rather than with the stripe-python library. If there's a way, please direct me there and I'll resubmit this issue.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/465", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/465/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/465/events", "html_url": "https://github.com/stripe/stripe-python/issues/465", "id": 351981977, "node_id": "MDU6SXNzdWUzNTE5ODE5Nzc=", "number": 465, "title": "sources.all() error", "user": {"login": "dhararon", "id": 1596624, "node_id": "MDQ6VXNlcjE1OTY2MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1596624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhararon", "html_url": "https://github.com/dhararon", "followers_url": "https://api.github.com/users/dhararon/followers", "following_url": "https://api.github.com/users/dhararon/following{/other_user}", "gists_url": "https://api.github.com/users/dhararon/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhararon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhararon/subscriptions", "organizations_url": "https://api.github.com/users/dhararon/orgs", "repos_url": "https://api.github.com/users/dhararon/repos", "events_url": "https://api.github.com/users/dhararon/events{/privacy}", "received_events_url": "https://api.github.com/users/dhararon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-20T04:34:18Z", "updated_at": "2018-08-20T07:18:31Z", "closed_at": "2018-08-20T07:18:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "i dont see in changelog if .all() was deprecated \r\n```python\r\nstripe.Customer.retrieve(customer).sources.all()\r\n```\r\nError code\r\n```\r\n    stripe_response = stripe.Customer.retrieve(customer).sources.all()\r\n  File \"/home/vagrant/environment/venv/lib/python3.4/site-packages/stripe/stripe_object.py\", line 85, in __getattr__\r\n    raise AttributeError(*err.args)\r\nAttributeError: all\r\n```\r\n\r\ncan you tell me if is it a bug or was deprecated?.\r\n\r\nthank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/464", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/464/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/464/events", "html_url": "https://github.com/stripe/stripe-python/issues/464", "id": 351094964, "node_id": "MDU6SXNzdWUzNTEwOTQ5NjQ=", "number": 464, "title": "Retry mechanism for failing requests", "user": {"login": "jonathan-s", "id": 2124818, "node_id": "MDQ6VXNlcjIxMjQ4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2124818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathan-s", "html_url": "https://github.com/jonathan-s", "followers_url": "https://api.github.com/users/jonathan-s/followers", "following_url": "https://api.github.com/users/jonathan-s/following{/other_user}", "gists_url": "https://api.github.com/users/jonathan-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathan-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathan-s/subscriptions", "organizations_url": "https://api.github.com/users/jonathan-s/orgs", "repos_url": "https://api.github.com/users/jonathan-s/repos", "events_url": "https://api.github.com/users/jonathan-s/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathan-s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 330246849, "node_id": "MDU6TGFiZWwzMzAyNDY4NDk=", "url": "https://api.github.com/repos/stripe/stripe-python/labels/future", "name": "future", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-16T07:55:06Z", "updated_at": "2018-09-07T21:09:19Z", "closed_at": "2018-09-07T21:09:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whether stripe times out, there are other network issues or general randomness of the interwebz it's good to be able to retry. \r\n\r\nSo I would suggest that you implement a retry mechanism as described here: https://gist.github.com/benjiao/28dc36bd87121b3273e0b3e079a8e8d8\r\n\r\nMake it an optional parameter for when initializing the client with a sane default. That way the user of the library can customize it if they deem it necessary. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/454", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/454/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/454/events", "html_url": "https://github.com/stripe/stripe-python/issues/454", "id": 344625497, "node_id": "MDU6SXNzdWUzNDQ2MjU0OTc=", "number": 454, "title": "ScheduledQueryRun missing", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-25T22:10:23Z", "updated_at": "2018-07-27T14:06:06Z", "closed_at": "2018-07-27T14:01:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Could we get a class for ScheduledQueryRun please?\r\n\r\nhttps://stripe.com/docs/api#scheduled_query_run_object\r\n\r\n:)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/451", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/451/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/451/events", "html_url": "https://github.com/stripe/stripe-python/issues/451", "id": 344272835, "node_id": "MDU6SXNzdWUzNDQyNzI4MzU=", "number": 451, "title": "OBJECT_NAME for InvoiceItem", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-25T02:52:53Z", "updated_at": "2018-07-25T12:24:58Z", "closed_at": "2018-07-25T12:22:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While trying to implement dj-stripe/dj-stripe#503 I've been faced with this problem:\r\n\r\n```\r\nValueError: Trying to fit a 'line_item' into a 'InvoiceItem'. Aborting.\r\n```\r\n\r\nI am trying to compare the `object` key with, ultimately, `StripeObject.OBJECT_NAME`. This works for everything except InvoiceItem.\r\n\r\nInvoiceItem is defined with `invoiceitem` as `OBJECT_NAME`, and yet, in the API examples, it's `line_item`:\r\n\r\n```json\r\n{\r\n      \"id\": \"ii_1Cra7SEU4JBg99IS5hUcti1X\",\r\n      \"object\": \"line_item\",\r\n      \"amount\": 1000,\r\n      \"currency\": \"usd\",\r\n      \"description\": \"My First Invoice Item (created for API docs)\",\r\n      \"discountable\": true,\r\n      \"invoice_item\": \"ii_1Cra7SEU4JBg99IS5hUcti1X\",\r\n      \"livemode\": false,\r\n      \"metadata\": {\r\n      },\r\n      \"period\": {\r\n        \"end\": 1532475642,\r\n        \"start\": 1532475642\r\n      },\r\n      \"plan\": null,\r\n      \"proration\": false,\r\n      \"quantity\": 1,\r\n      \"subscription\": null,\r\n      \"type\": \"invoiceitem\"\r\n    },\r\n```\r\n\r\nWhat am I missing? Is `OBJECT_NAME` just wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/447", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/447/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/447/events", "html_url": "https://github.com/stripe/stripe-python/issues/447", "id": 342228580, "node_id": "MDU6SXNzdWUzNDIyMjg1ODA=", "number": 447, "title": "Duplicate requests dependency (causes issues on Python 2)", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-18T08:34:30Z", "updated_at": "2018-07-18T09:24:21Z", "closed_at": "2018-07-18T09:24:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After the stripe-python 2.0 upgrade, dj-stripe's tests on Python 2.7 started failing and I've been trying to investigate why. The error is a little absurd:\r\n\r\n```pytb\r\nTraceback (most recent call last):\r\n  File \"runtests.py\", line 210, in <module>\r\n    main()\r\n  File \"runtests.py\", line 27, in main\r\n    run_test_suite(args)\r\n  File \"runtests.py\", line 152, in run_test_suite\r\n    django.setup()\r\n  File \"/home/adys/src/HearthSim/dj-stripe/.tox/py27-django111/lib/python2.7/site-packages/django/__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/home/adys/src/HearthSim/dj-stripe/.tox/py27-django111/lib/python2.7/site-packages/django/apps/registry.py\", line 85, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"/home/adys/src/HearthSim/dj-stripe/.tox/py27-django111/lib/python2.7/site-packages/django/apps/config.py\", line 94, in create\r\n    module = import_module(entry)\r\n  File \"/usr/lib64/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/adys/src/HearthSim/dj-stripe/djstripe/__init__.py\", line 12, in <module>\r\n    __version__ = pkg_resources.require(\"dj-stripe\")[0].version\r\n  File \"/home/adys/src/HearthSim/dj-stripe/.tox/py27-django111/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 891, in require\r\n    needed = self.resolve(parse_requirements(requirements))\r\n  File \"/home/adys/src/HearthSim/dj-stripe/.tox/py27-django111/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 777, in resolve\r\n    raise DistributionNotFound(req, requirers)\r\npkg_resources.DistributionNotFound: The 'cryptography>=1.3.4; extra == \"security\"' distribution was not found and is required by requests\r\n```\r\n\r\nUsing pipdeptree however, we can see that stripe specifies the `requests` dependency twice:\r\n\r\n```\r\n  - stripe [required: >=1.53.0, installed: 2.0.1]\r\n    - requests [required: >=2, installed: 2.19.1]\r\n      - certifi [required: >=2017.4.17, installed: 2018.4.16]\r\n      - chardet [required: >=3.0.2,<3.1.0, installed: 3.0.4]\r\n      - idna [required: >=2.5,<2.8, installed: 2.7]\r\n      - urllib3 [required: >=1.21.1,<1.24, installed: 1.23]\r\n    - requests [required: >=2, installed: 2.19.1]\r\n      - certifi [required: >=2017.4.17, installed: 2018.4.16]\r\n      - chardet [required: >=3.0.2,<3.1.0, installed: 3.0.4]\r\n      - idna [required: >=2.5,<2.8, installed: 2.7]\r\n      - urllib3 [required: >=1.21.1,<1.24, installed: 1.23]\r\n```\r\n\r\nCurrently, `setup.py` [defines requests twice as a dependency](https://github.com/stripe/stripe-python/blob/66aa334145d7a702fea03473911a8777abbbb60c/setup.py#L47-L48). Once plain, once with the `[security]` extra package.\r\n\r\nWith this information, I found a relevant upstream pip bug: pypa/pip#4957\r\n\r\nThe duplicate-dependency issue is easily worked around by making plain requests only a dependency on python_version >= 3.0. I believe this will fix the resulting issue as well. I'll file a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/446", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/446/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/446/events", "html_url": "https://github.com/stripe/stripe-python/issues/446", "id": 340624801, "node_id": "MDU6SXNzdWUzNDA2MjQ4MDE=", "number": 446, "title": "Bug when using card token in source.create()", "user": {"login": "luxcem", "id": 876685, "node_id": "MDQ6VXNlcjg3NjY4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/876685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luxcem", "html_url": "https://github.com/luxcem", "followers_url": "https://api.github.com/users/luxcem/followers", "following_url": "https://api.github.com/users/luxcem/following{/other_user}", "gists_url": "https://api.github.com/users/luxcem/gists{/gist_id}", "starred_url": "https://api.github.com/users/luxcem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luxcem/subscriptions", "organizations_url": "https://api.github.com/users/luxcem/orgs", "repos_url": "https://api.github.com/users/luxcem/repos", "events_url": "https://api.github.com/users/luxcem/events{/privacy}", "received_events_url": "https://api.github.com/users/luxcem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-12T12:52:46Z", "updated_at": "2018-07-23T13:01:11Z", "closed_at": "2018-07-23T13:01:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "stripe==1.84.1\r\npython==3.6.4\r\n\r\n[The documentation on Testing](https://stripe.com/docs/testing) does not explain how to test Sources. But when using a card token (for example \"tok_visa\") like: \r\n```python\r\ncustomer = stripe.Customer.retrieve(\"cus_aaaaaa\")\r\ncustomer.sources.create(source=\"tok_visa)\r\n```\r\nThe SDK raises those errors: \r\n\r\n```\r\n    def __getitem__(self, k):\r\n        try:\r\n>           return super(StripeObject, self).__getitem__(k)\r\nE           KeyError: 'card'\r\n\r\nlib/python3.6/site-packages/stripe/stripe_object.py:118: KeyError\r\n```\r\n\r\nThe documentation should provide testing Source tokens and the sdk should handle those errors.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/444", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/444/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/444/events", "html_url": "https://github.com/stripe/stripe-python/issues/444", "id": 339759156, "node_id": "MDU6SXNzdWUzMzk3NTkxNTY=", "number": 444, "title": "pypi stripe 2.0 package can not be imported", "user": {"login": "btel", "id": 41565, "node_id": "MDQ6VXNlcjQxNTY1", "avatar_url": "https://avatars2.githubusercontent.com/u/41565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btel", "html_url": "https://github.com/btel", "followers_url": "https://api.github.com/users/btel/followers", "following_url": "https://api.github.com/users/btel/following{/other_user}", "gists_url": "https://api.github.com/users/btel/gists{/gist_id}", "starred_url": "https://api.github.com/users/btel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btel/subscriptions", "organizations_url": "https://api.github.com/users/btel/orgs", "repos_url": "https://api.github.com/users/btel/repos", "events_url": "https://api.github.com/users/btel/events{/privacy}", "received_events_url": "https://api.github.com/users/btel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-10T09:18:37Z", "updated_at": "2018-07-10T14:48:59Z", "closed_at": "2018-07-10T11:48:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installing stripe 2.0 using pip in python 3.5 gives an package that can not be imported:\r\n\r\n```\r\npip install stripe\r\npython -c 'import stripe'\r\nImportError: No module named 'stripe'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/443", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/443/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/443/events", "html_url": "https://github.com/stripe/stripe-python/issues/443", "id": 339180069, "node_id": "MDU6SXNzdWUzMzkxODAwNjk=", "number": 443, "title": "pip install stripe not working", "user": {"login": "daliu", "id": 497912, "node_id": "MDQ6VXNlcjQ5NzkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/497912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daliu", "html_url": "https://github.com/daliu", "followers_url": "https://api.github.com/users/daliu/followers", "following_url": "https://api.github.com/users/daliu/following{/other_user}", "gists_url": "https://api.github.com/users/daliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/daliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daliu/subscriptions", "organizations_url": "https://api.github.com/users/daliu/orgs", "repos_url": "https://api.github.com/users/daliu/repos", "events_url": "https://api.github.com/users/daliu/events{/privacy}", "received_events_url": "https://api.github.com/users/daliu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-07T22:38:08Z", "updated_at": "2018-07-09T09:20:40Z", "closed_at": "2018-07-09T09:20:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys, I'm working with a virtualenv that's configured correctly for other python packages (have downloaded to test), but strangely I keep getting issues with stripe's package.\r\n\r\n\u27a4 pip install -U stripe\r\nUserWarning: Disabling all use of wheels due to the use of --build-options / --global-options / --install-options.\r\n  cmdoptions.check_install_build_global(options)\r\nCollecting stripe\r\n  Using cached https://files.pythonhosted.org/packages/62/0e/d4437ba1611d7cc83256205c86203d0a74032ac5b3b539e5d8d58d0b4e61/stripe-1.84.2.tar.gz\r\n...\r\nRequirement not upgraded as not directly required...\r\nRequirement not upgraded as not directly required...\r\n...\r\nSkipping bdist_wheel for stripe, due to binaries being disabled for it.\r\nInstalling collected packages: stripe\r\n  Running setup.py install for stripe ... done\r\nSuccessfully installed stripe\r\n\r\nBut then when I run my python version (same python version as pip), I'm getting module not found.\r\nMight there be some check that's being missed? Do I need the bdist_wheel?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/440", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/440/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/440/events", "html_url": "https://github.com/stripe/stripe-python/issues/440", "id": 338672269, "node_id": "MDU6SXNzdWUzMzg2NzIyNjk=", "number": 440, "title": "stripe.Account.external_accounts still deserializes into StripeObject instead of ListObject", "user": {"login": "sazlin", "id": 7120031, "node_id": "MDQ6VXNlcjcxMjAwMzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7120031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sazlin", "html_url": "https://github.com/sazlin", "followers_url": "https://api.github.com/users/sazlin/followers", "following_url": "https://api.github.com/users/sazlin/following{/other_user}", "gists_url": "https://api.github.com/users/sazlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sazlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sazlin/subscriptions", "organizations_url": "https://api.github.com/users/sazlin/orgs", "repos_url": "https://api.github.com/users/sazlin/repos", "events_url": "https://api.github.com/users/sazlin/events{/privacy}", "received_events_url": "https://api.github.com/users/sazlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-05T18:01:00Z", "updated_at": "2018-07-06T15:45:00Z", "closed_at": "2018-07-06T15:41:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Bug:\r\nThe recent fix for https://github.com/stripe/stripe-python/issues/438 does not fix the repro provided in that bug. See the same issue here:\r\n```python\r\n...\r\naccount = stripe.Account.retrieve(account_id)\r\naccount_serialized = str(account)\r\nprint account_serialized  # Note that the `external accounts` key has a value of `{}`. Expecting at least an 'object' key in there with value 'list'.\r\naccount_deserialized = stripe.Account.construct_from(json.loads(account_serialized), stripe.api_key)\r\naccount_deserialized.external_accounts  # <StripeObject at 0x113deb050> JSON: {}  <-- wrong type\r\naccount_deserialized.external_accounts.create  # raises AttributeError\r\n```\r\n\r\nRepros with Stripe lib version 1.84.1\r\nPython version 2.7.14\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/438", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/438/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/438/events", "html_url": "https://github.com/stripe/stripe-python/issues/438", "id": 338063279, "node_id": "MDU6SXNzdWUzMzgwNjMyNzk=", "number": 438, "title": "stripe.Account.external_accounts deserializes into StripeObject instead of ListObject", "user": {"login": "sazlin", "id": 7120031, "node_id": "MDQ6VXNlcjcxMjAwMzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7120031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sazlin", "html_url": "https://github.com/sazlin", "followers_url": "https://api.github.com/users/sazlin/followers", "following_url": "https://api.github.com/users/sazlin/following{/other_user}", "gists_url": "https://api.github.com/users/sazlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sazlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sazlin/subscriptions", "organizations_url": "https://api.github.com/users/sazlin/orgs", "repos_url": "https://api.github.com/users/sazlin/repos", "events_url": "https://api.github.com/users/sazlin/events{/privacy}", "received_events_url": "https://api.github.com/users/sazlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-03T21:40:00Z", "updated_at": "2018-07-05T18:02:02Z", "closed_at": "2018-07-04T17:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Bug:\r\nWhen getting a JSON representation of a `stripe.Account` object, the `external_accounts` `ListObject` is serialized as an empty JSON object. This is a problem when the JSON is later deserialized back into a `stripe.Account` object because the `external_accounts` JSON object is missing the `object` key-value that is required to deserialize `external_accounts` back into a `ListObject`. Instead, `external_accounts` is deserialized into a generic `StripeObject` that lacks critical capabilities, such as the ability to create a new external account for the deserialized  `stripe.Account`. Attempting to call `external_accounts.create`, for instance, will raise an `AttributeError: create` exception.\r\n\r\nThis bug was encountered when upgrading our Stripe lib version from `1.27.1` to `1.84.0`. It affects how we cache `stripe.Account` objects.\r\n\r\nExpected:\r\nWhen getting a JSON representation of a `stripe.Account` object, the `external_accounts` object should be serialized in such a way that it can be deserialized back into a `ListObject`.\r\n\r\nFWIW, the serialized `external_accounts` object use to be serialized like the following back in lib version `1.27.1`:\r\n```\r\n    ...\r\n    \"external_accounts\": {\r\n        \"data\": [\r\n        ],\r\n        \"has_more\": false,\r\n        \"object\": \"list\",\r\n        \"total_count\": 0,\r\n        \"url\": \"/v1/accounts/<account id>/external_accounts\"\r\n    },\r\n    ...\r\n```\r\nThis was much better, and such an object seems to be properly deserialized back into a `ListObject` and behaviors such as `external_accounts.create(...)` behave as expected.\r\n\r\nRepro:\r\n```python\r\nimport json\r\nimport stripe\r\nstripe.api_key = <an api key>\r\n\r\naccount_id = <an account id>\r\n\r\naccount = stripe.Account.retrieve(account_id)\r\naccount_serialized = str(account)\r\naccount_deserialized = stripe.Account.construct_from(json.loads(account_serialized), stripe.api_key)\r\n\r\naccount.external_accounts  # <ListObject list at 0x1140ae618> JSON: {}\r\naccount_deserialized.external_accounts  # <StripeObject at 0x113eb6178> JSON: {}\r\n\r\naccount.external_accounts.create  # <bound method ListObject.create of <ListObject list at 0x1140ae618> JSON: {}>\r\naccount_deserialized.external_accounts.create  # AttributeError: create\r\n```\r\n\r\nThis was encountered w/ Python 2.7.14", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/434", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/434/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/434/events", "html_url": "https://github.com/stripe/stripe-python/issues/434", "id": 330982915, "node_id": "MDU6SXNzdWUzMzA5ODI5MTU=", "number": 434, "title": "metadata boolean types are not perserved", "user": {"login": "polski-g", "id": 24984408, "node_id": "MDQ6VXNlcjI0OTg0NDA4", "avatar_url": "https://avatars3.githubusercontent.com/u/24984408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polski-g", "html_url": "https://github.com/polski-g", "followers_url": "https://api.github.com/users/polski-g/followers", "following_url": "https://api.github.com/users/polski-g/following{/other_user}", "gists_url": "https://api.github.com/users/polski-g/gists{/gist_id}", "starred_url": "https://api.github.com/users/polski-g/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polski-g/subscriptions", "organizations_url": "https://api.github.com/users/polski-g/orgs", "repos_url": "https://api.github.com/users/polski-g/repos", "events_url": "https://api.github.com/users/polski-g/events{/privacy}", "received_events_url": "https://api.github.com/users/polski-g/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-10T16:34:24Z", "updated_at": "2018-06-11T08:32:07Z", "closed_at": "2018-06-11T08:32:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using version stripe==1.82.1 on Python 3.6.5.\r\n\r\nCreate a Stripe object via the Python API, lets say a Customer with custom metadata of `{\"something\": True}` (notice the type is bool). But when you fetch it with `stripe.Customer.retrieve()`, you get `{\"something\": \"True\"}` (now the type is str).\r\n\r\nI can monkey-patch this with the code below, but just an FYI.\r\n\r\n```python\r\nfrom stripe.stripe_response import StripeResponse\r\nimport json\r\n\r\n\r\nclass MyDecoder(json.JSONDecoder):\r\n    def __init__(self, *args, **kwargs):\r\n        json.JSONDecoder.__init__(self, object_hook=self.object_hook, *args, **kwargs)\r\n\r\n    def object_hook(self, obj):\r\n        if isinstance(obj, dict) and 'metadata' in obj:\r\n            for k,v in obj['metadata'].items():\r\n                if v == 'True':\r\n                    obj['metadata'][k] = True\r\n                elif v == 'False':\r\n                    obj['metadata'][k] = False\r\n        return obj\r\n\r\n\r\ndef stripe_response__init__(self, body, code, headers):\r\n    self.body = body\r\n    self.code = code\r\n    self.headers = headers\r\n    self.data = json.loads(body, cls=MyDecoder)\r\nStripeResponse.__init__ = stripe_response__init__\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/433", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/433/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/433/events", "html_url": "https://github.com/stripe/stripe-python/issues/433", "id": 329490764, "node_id": "MDU6SXNzdWUzMjk0OTA3NjQ=", "number": 433, "title": "Error in updating customer", "user": {"login": "ziXet", "id": 1327949, "node_id": "MDQ6VXNlcjEzMjc5NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1327949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziXet", "html_url": "https://github.com/ziXet", "followers_url": "https://api.github.com/users/ziXet/followers", "following_url": "https://api.github.com/users/ziXet/following{/other_user}", "gists_url": "https://api.github.com/users/ziXet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziXet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziXet/subscriptions", "organizations_url": "https://api.github.com/users/ziXet/orgs", "repos_url": "https://api.github.com/users/ziXet/repos", "events_url": "https://api.github.com/users/ziXet/events{/privacy}", "received_events_url": "https://api.github.com/users/ziXet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-05T14:46:00Z", "updated_at": "2018-06-05T15:09:58Z", "closed_at": "2018-06-05T15:09:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "After I upgrade to api version 2018-05-21 and stripe python package to 1.82.1 I'm receiving the following error when I want to update a customer. (e.g. email address)\r\n```\r\n{\r\n    \"error\": {\r\n        \"code\": \"parameter_invalid_empty\",\r\n        \"doc_url\": \"https://stripe.com/docs/error-codes/parameter-invalid-empty\",\r\n        \"message\": \"You passed an empty string for 'shipping'. We assume empty values are an attempt to unset a parameter; however 'shipping' cannot be unset. You should remove 'shipping' from your request or supply a non-empty value.\",\r\n        \"param\": \"shipping\",\r\n        \"type\": \"invalid_request_error\"\r\n    }\r\n}\r\n```\r\nHere is what I do:\r\n```\r\nstripe_customer = stripe_api.Customer.retrieve(customer_id)\r\nstripe_customer.email = billing_email\r\nstripe_customer.save()\r\n```\r\nI did not have any issue with the previous version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/432", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/432/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/432/events", "html_url": "https://github.com/stripe/stripe-python/issues/432", "id": 328862797, "node_id": "MDU6SXNzdWUzMjg4NjI3OTc=", "number": 432, "title": "Leaking connections", "user": {"login": "outcoldman", "id": 597158, "node_id": "MDQ6VXNlcjU5NzE1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/597158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/outcoldman", "html_url": "https://github.com/outcoldman", "followers_url": "https://api.github.com/users/outcoldman/followers", "following_url": "https://api.github.com/users/outcoldman/following{/other_user}", "gists_url": "https://api.github.com/users/outcoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/outcoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/outcoldman/subscriptions", "organizations_url": "https://api.github.com/users/outcoldman/orgs", "repos_url": "https://api.github.com/users/outcoldman/repos", "events_url": "https://api.github.com/users/outcoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/outcoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 330246849, "node_id": "MDU6TGFiZWwzMzAyNDY4NDk=", "url": "https://api.github.com/repos/stripe/stripe-python/labels/future", "name": "future", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-03T21:14:51Z", "updated_at": "2019-02-02T11:08:08Z", "closed_at": "2019-02-02T11:08:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "In case of when by default `RequestsClient` is used https://github.com/stripe/stripe-python/blob/master/stripe/http_client.py#L101 you are leaking connection by creating new Session object for every request. But never calling `RequestsClient.close`.\r\n\r\nThe workaround is simple you need to initialize `default_http_client` to make sure that library is going to reuse sessions between calls.  \r\n\r\nTo fix this issue, I guess there are three options:\r\n\r\n1. Change APIRequestor code to cache the `default_http_client` if it is `None`. https://github.com/stripe/stripe-python/blob/master/stripe/api_requestor.py#L78\r\n\r\n2. Make sure that every time you create new APIRequestor - you close the client at the end.\r\n\r\n3. Do not create sessions in RequestsClient.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/429", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/429/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/429/events", "html_url": "https://github.com/stripe/stripe-python/issues/429", "id": 322757682, "node_id": "MDU6SXNzdWUzMjI3NTc2ODI=", "number": 429, "title": "InvalidRequestError: Received unknown parameters - when updating Plan", "user": {"login": "LukGerman", "id": 10104699, "node_id": "MDQ6VXNlcjEwMTA0Njk5", "avatar_url": "https://avatars0.githubusercontent.com/u/10104699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukGerman", "html_url": "https://github.com/LukGerman", "followers_url": "https://api.github.com/users/LukGerman/followers", "following_url": "https://api.github.com/users/LukGerman/following{/other_user}", "gists_url": "https://api.github.com/users/LukGerman/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukGerman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukGerman/subscriptions", "organizations_url": "https://api.github.com/users/LukGerman/orgs", "repos_url": "https://api.github.com/users/LukGerman/repos", "events_url": "https://api.github.com/users/LukGerman/events{/privacy}", "received_events_url": "https://api.github.com/users/LukGerman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-14T10:26:03Z", "updated_at": "2018-05-14T13:19:37Z", "closed_at": "2018-05-14T13:19:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, updating Plan objects using heper library leads to some strange errors: `stripe.error.InvalidRequestError: Request req_pixrHjd0n6OE99: Received unknown parameters: amount, billing_scheme, currency, interval, interval_count, tiers, tiers_mode, transform_usage, usage_type`\r\n\r\nThis is how I try to update plan:\r\n```\r\nplan_in_stripe = self.stripe.Plan.retrieve(plan_data['id'])\r\nplan_in_stripe.update(plan_data)\r\nplan_in_stripe.save()\r\n```\r\n\r\nwhere `plan_data` is:\r\n\r\n```\r\n{\r\n    'id': 'plan_CrL26Isb4h9Uxa',\r\n    'nickname': 'Base',\r\n    'product': 'prod_CrKOiwro4jMsHE',\r\n    'amount': None,\r\n    'interval': 'month',\r\n    'interval_count': 1,\r\n    'currency': 'usd',\r\n    'billing_scheme': 'tiered',\r\n    'tiers': [\r\n        {\r\n            'up_to': 1,\r\n            'amount': 2900\r\n        },\r\n        {\r\n            'up_to': 25,\r\n            'amount': 0\r\n        },\r\n        {\r\n            'up_to': None,\r\n            'amount': 100\r\n        }\r\n    ],\r\n    'tiers_mode': 'graduated',\r\n    'transform_usage': None,\r\n    'usage_type': 'metered'\r\n}\r\n```\r\n\r\nPython 3.6, Stripe Python 1.82 & 1.80 & 1.79\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/428", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/428/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/428/events", "html_url": "https://github.com/stripe/stripe-python/issues/428", "id": 322750341, "node_id": "MDU6SXNzdWUzMjI3NTAzNDE=", "number": 428, "title": "Unable to create tiered plan", "user": {"login": "LukGerman", "id": 10104699, "node_id": "MDQ6VXNlcjEwMTA0Njk5", "avatar_url": "https://avatars0.githubusercontent.com/u/10104699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukGerman", "html_url": "https://github.com/LukGerman", "followers_url": "https://api.github.com/users/LukGerman/followers", "following_url": "https://api.github.com/users/LukGerman/following{/other_user}", "gists_url": "https://api.github.com/users/LukGerman/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukGerman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukGerman/subscriptions", "organizations_url": "https://api.github.com/users/LukGerman/orgs", "repos_url": "https://api.github.com/users/LukGerman/repos", "events_url": "https://api.github.com/users/LukGerman/events{/privacy}", "received_events_url": "https://api.github.com/users/LukGerman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-14T10:04:03Z", "updated_at": "2018-05-14T13:31:35Z", "closed_at": "2018-05-14T13:31:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I think there is a bug that makes impossible to create tiered plan. I get `stripe.error.InvalidRequestError: Request req_LOnLLZfSssUA4c: Missing required param: tiers[2][up_to]`\r\n\r\nThis is my implementation:\r\n\r\n```\r\nstripe.Plan.create(**plan_data)\r\n```\r\n\r\nwhere `plan_data` is:\r\n\r\n```\r\n{\r\n    'id': 'pro',\r\n    'nickname': 'Pro',\r\n    'product': 'prod_CrKOiwro4jMsHE',\r\n    'amount': None,\r\n    'interval': 'month',\r\n    'interval_count': 1,\r\n    'currency': 'usd',\r\n    'billing_scheme': 'tiered',\r\n    'tiers': [\r\n        {\r\n            'up_to': 1,\r\n            'amount': 2900\r\n        },\r\n        {\r\n            'up_to': 25,\r\n            'amount': 0\r\n        },\r\n        {\r\n            'up_to': None,\r\n            'amount': 100\r\n        }\r\n    ],\r\n    'tiers_mode': 'graduated',\r\n    'transform_usage': None,\r\n    'usage_type': 'metered'\r\n}\r\n```\r\nAs you can see, last tier should cover all values between previous tier's `up_to` and infinity, but API prohibits setting that. Also, after creating plan using Stripe dashboard, on receiving webhook `plan.created` event, `tiers` structure is the same, as the one that leads to above error.\r\n\r\nPython 3.6, Stripe Python 1.80.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/427", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/427/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/427/events", "html_url": "https://github.com/stripe/stripe-python/issues/427", "id": 322677667, "node_id": "MDU6SXNzdWUzMjI2Nzc2Njc=", "number": 427, "title": "Verification key being added at some point in update process of Account object", "user": {"login": "dalan-stripe", "id": 23088574, "node_id": "MDQ6VXNlcjIzMDg4NTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/23088574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dalan-stripe", "html_url": "https://github.com/dalan-stripe", "followers_url": "https://api.github.com/users/dalan-stripe/followers", "following_url": "https://api.github.com/users/dalan-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/dalan-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/dalan-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dalan-stripe/subscriptions", "organizations_url": "https://api.github.com/users/dalan-stripe/orgs", "repos_url": "https://api.github.com/users/dalan-stripe/repos", "events_url": "https://api.github.com/users/dalan-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/dalan-stripe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-14T05:33:03Z", "updated_at": "2018-05-14T12:32:25Z", "closed_at": "2018-05-14T12:32:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Came across this when getting a test `Account` verified. \r\n\r\n```\r\nIn [88]: acc1 = stripe.Account.retrieve(\"acct_1CQUihFic48Qf040\")\r\n\r\n...\r\n\r\nIn [91]: acc1['legal_entity'] = {'dob': {'day': 1, 'month': 1, \"year\": 1980}, \"first_name\":\"John\", \"last_name\": \"Smith\", \"type\": \"indivdual\" }\r\n\r\nIn [92]: acc1.save()\r\n---------------------------------------------------------------------------\r\nInvalidRequestError                       Traceback (most recent call last)\r\n<ipython-input-92-674a25efba5b> in <module>()\r\n----> 1 acc1.save()\r\n\r\n/usr/local/lib/python3.6/site-packages/stripe/api_resources/abstract/updateable_api_resource.py in save(self, idempotency_key)\r\n     30         if updated_params:\r\n     31             self.refresh_from(self.request('post', self.instance_url(),\r\n---> 32                                            updated_params, headers))\r\n     33         else:\r\n     34             util.logger.debug(\"Trying to save already saved object %r\", self)\r\n\r\n/usr/local/lib/python3.6/site-packages/stripe/stripe_object.py in request(self, method, url, params, headers)\r\n    205             key=self.api_key, api_base=self.api_base(),\r\n    206             api_version=self.stripe_version, account=self.stripe_account)\r\n--> 207         response, api_key = requestor.request(method, url, params, headers)\r\n    208\r\n    209         return util.convert_to_stripe_object(response, api_key,\r\n\r\n/usr/local/lib/python3.6/site-packages/stripe/api_requestor.py in request(self, method, url, params, headers)\r\n    151         rbody, rcode, rheaders, my_api_key = self.request_raw(\r\n    152             method.lower(), url, params, headers)\r\n--> 153         resp = self.interpret_response(rbody, rcode, rheaders)\r\n    154         return resp, my_api_key\r\n    155\r\n\r\n/usr/local/lib/python3.6/site-packages/stripe/api_requestor.py in interpret_response(self, rbody, rcode, rheaders)\r\n    363                 rbody, rcode, rheaders)\r\n    364         if not (200 <= rcode < 300):\r\n--> 365             self.handle_error_response(rbody, rcode, resp.data, rheaders)\r\n    366\r\n    367         return resp\r\n\r\n/usr/local/lib/python3.6/site-packages/stripe/api_requestor.py in handle_error_response(self, rbody, rcode, resp, rheaders)\r\n    176                 rbody, rcode, resp, rheaders, error_data)\r\n    177\r\n--> 178         raise err\r\n    179\r\n    180     def specific_api_error(self, rbody, rcode, resp, rheaders, error_data):\r\n\r\nInvalidRequestError: Request req_iGQNllzmO01eDB: You passed an empty string for 'legal_entity[verification]'. We assume empty values are an attempt to unset a parameter; however 'legal_entity[verification]' cannot be unset. You should remove 'legal_entity[verification]' from your request or supply a non-empty value.\r\n```\r\n\r\nOne might say, \"@dalan-stripe!, you've mistakenly added the key `verification`\". Hrm:\r\n\r\n```\r\nIn [104]: acc1['legal_entity']['verification']\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-104-3151464b91d9> in <module>()\r\n----> 1 acc1['legal_entity']['verification']\r\n\r\nKeyError: 'verification'\r\n```\r\n\r\nDumping the params to stderr immediately [before sending the request in `api_requestor.py`](https://github.com/stripe/stripe-python/blob/master/stripe/api_requestor.py#L150-L152):\r\n```\r\ndef request(self, method, url, params=None, headers=None):\r\n        import sys\r\n        print(params, file=sys.stderr)\r\n        rbody, rcode, rheaders, my_api_key = self.request_raw(\r\n            method.lower(), url, params, headers)\r\n        resp = self.interpret_response(rbody, rcode, rheaders)\r\n        return resp, my_api_key\r\n```\r\nReturns: \r\n```\r\n{'legal_entity': {'dob': {'day': 1, 'month': 1, 'year': 1980}, 'first_name': 'John', 'last_name': 'Smith', 'type': 'individual', 'personal_address': '', 'business_name': '', 'business_tax_id_provided': '', 'verification': '', 'additional_owners': '', 'address': ''}}\r\n```\r\n\r\nThis `verification` is being added somewhere, but I'm not sure where? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/424", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/424/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/424/events", "html_url": "https://github.com/stripe/stripe-python/issues/424", "id": 317670525, "node_id": "MDU6SXNzdWUzMTc2NzA1MjU=", "number": 424, "title": "getting error when using stripe.Webhook.construct_event", "user": {"login": "DmitrijNov", "id": 38003922, "node_id": "MDQ6VXNlcjM4MDAzOTIy", "avatar_url": "https://avatars2.githubusercontent.com/u/38003922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DmitrijNov", "html_url": "https://github.com/DmitrijNov", "followers_url": "https://api.github.com/users/DmitrijNov/followers", "following_url": "https://api.github.com/users/DmitrijNov/following{/other_user}", "gists_url": "https://api.github.com/users/DmitrijNov/gists{/gist_id}", "starred_url": "https://api.github.com/users/DmitrijNov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DmitrijNov/subscriptions", "organizations_url": "https://api.github.com/users/DmitrijNov/orgs", "repos_url": "https://api.github.com/users/DmitrijNov/repos", "events_url": "https://api.github.com/users/DmitrijNov/events{/privacy}", "received_events_url": "https://api.github.com/users/DmitrijNov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-25T15:06:44Z", "updated_at": "2018-04-25T15:09:33Z", "closed_at": "2018-04-25T15:09:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "`\r\nclass StripeWebhooksView(APIView):\r\n    permission_classes = (AllowAny,)\r\n\r\n    def post(self, request, **kwargs):\r\n        payload = json.dumps(request.data).encode('utf-8')\r\n        sig_header = request.META.get('HTTP_STRIPE_SIGNATURE')\r\n\r\n        try:\r\n            event = stripe.Webhook.construct_event(\r\n                payload, sig_header, settings.STRIPE_WEBHOOK_SECRET\r\n            )\r\n        except ValueError as e:\r\n            print(e)\r\n            return Response(status=400)\r\n        except stripe.error.SignatureVerificationError as e:\r\n            print(e)\r\n            return Response(status=400)\r\n        print(event)\r\n        t = EventHandler(event)\r\n        result = t.execute()\r\n        print(result, result.id)\r\n        return Response(status=200)`\r\n\r\nconstruct_event doesn't works with json object so i converted it string.\r\nNext problem - i'm getting this error \"No signatures found matching the expected signature for payload\"\r\n\r\nWill be appreciated for any suggestions)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/419", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/419/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/419/events", "html_url": "https://github.com/stripe/stripe-python/issues/419", "id": 314287048, "node_id": "MDU6SXNzdWUzMTQyODcwNDg=", "number": 419, "title": "New release needed? ", "user": {"login": "ColdHeat", "id": 166333, "node_id": "MDQ6VXNlcjE2NjMzMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/166333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColdHeat", "html_url": "https://github.com/ColdHeat", "followers_url": "https://api.github.com/users/ColdHeat/followers", "following_url": "https://api.github.com/users/ColdHeat/following{/other_user}", "gists_url": "https://api.github.com/users/ColdHeat/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColdHeat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColdHeat/subscriptions", "organizations_url": "https://api.github.com/users/ColdHeat/orgs", "repos_url": "https://api.github.com/users/ColdHeat/repos", "events_url": "https://api.github.com/users/ColdHeat/events{/privacy}", "received_events_url": "https://api.github.com/users/ColdHeat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-14T01:04:41Z", "updated_at": "2018-05-01T19:06:57Z", "closed_at": "2018-04-24T08:15:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to use the UsageRecord feature https://stripe.com/docs/api#usage_record_create on 1.79.1 from PyPi but it apparently only exists on master? \r\n\r\nShould there be a new release so that the code reflects the documentation? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/418", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/418/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/418/events", "html_url": "https://github.com/stripe/stripe-python/issues/418", "id": 313381461, "node_id": "MDU6SXNzdWUzMTMzODE0NjE=", "number": 418, "title": "Strange behavior of additional_owners field in Connect Custom accounts", "user": {"login": "louischatriot", "id": 926355, "node_id": "MDQ6VXNlcjkyNjM1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/926355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/louischatriot", "html_url": "https://github.com/louischatriot", "followers_url": "https://api.github.com/users/louischatriot/followers", "following_url": "https://api.github.com/users/louischatriot/following{/other_user}", "gists_url": "https://api.github.com/users/louischatriot/gists{/gist_id}", "starred_url": "https://api.github.com/users/louischatriot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/louischatriot/subscriptions", "organizations_url": "https://api.github.com/users/louischatriot/orgs", "repos_url": "https://api.github.com/users/louischatriot/repos", "events_url": "https://api.github.com/users/louischatriot/events{/privacy}", "received_events_url": "https://api.github.com/users/louischatriot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-11T15:43:44Z", "updated_at": "2018-04-11T16:29:41Z", "closed_at": "2018-04-11T16:29:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found two behaviors quite strange when using the library, including something that may be a bug in the library.\r\n\r\n**Issue 1**\r\nWhen creating a Custom account, `additional_owners` cannot be passed as an array even though that's the format the API outputs, see code below:\r\n```python\r\nlegal_entity_data = { 'first_name': 'something', 'additional_owners': [{ 'first_name': 'LLL' }] }\r\naccount_token = stripe.Token.create( account = { 'legal_entity': legal_entity_data, 'tos_shown_and_accepted': True })\r\n# ^\r\n# Raises an InvalidRequestError with message 'Invalid hash'\r\n#\u00a0But it works if we use { 0: { 'first_name' }: 'LLL' } ...\r\n```\r\n\r\n**Issue 2**\r\nI can't remove any formerly created `additional_owners` by deleting the property on the Stripe account object as per https://stripe.com/docs/connect/account-tokens (though given there is no code example I may be interpreting the doc in the wrong way in which case would love to know what the right syntax is)\r\n\r\n```python\r\nlegal_entity_data = { 'first_name': 'something', 'additional_owners': { 0: { 'first_name': 'LLL' }} }\r\naccount_token = stripe.Token.create( account = { 'legal_entity': legal_entity_data, 'tos_shown_and_accepted': True })\r\nstripe_account = stripe.Account.create(type = 'custom', country = 'FR', account_token = account_token.id)\r\n\r\nlegal_entity_data = { 'first_name': 'another' }\r\naccount_token = stripe.Token.create( account = { 'legal_entity': legal_entity_data, 'tos_shown_and_accepted': True })\r\nstripe_account = stripe.Account.retrieve(stripe_account['id'])   # Should be idempotent but just in case\r\nstripe_account.account_token = account_token.id\r\n\r\ndel stripe_account.legal_entity.additional_owners\r\n#\u00a0^\r\n# This raises a KeyError even though the attribute does exit\r\n# Same if I use stripe_account['legal_entity']['additional_owners']\r\n# Btw being able to access properties both as attributes and dict keys smells a lot like magic\r\n#\u00a0and there seems to be some in `stripe_object.py`, from where the KeyError originates\r\n#\r\n# I also tried to set it to None but then the field is just not updated\r\n\r\nstripe_account.save()\r\nstripe_account = stripe.Account.retrieve(stripe_account['id'])   # Should be idempotent but just in case\r\nassert(stripe_account['legal_entity']['first_name'] == 'another')   # Works, means the update did happen\r\nassert(len(stripe_account['legal_entity']['additional_owners']) == 0)\r\n```\r\n\r\nThis seems to be an issue with the lib given I was able to empty `additional_owners` with curl like so `curl https://api.stripe.com/v1/accounts/acct_1CFkpND1z7TNlJFl    -u MY_SECRET_KEY: -d legal_entity[additional_owners]=`\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/417", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/417/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/417/events", "html_url": "https://github.com/stripe/stripe-python/issues/417", "id": 313336842, "node_id": "MDU6SXNzdWUzMTMzMzY4NDI=", "number": 417, "title": "Can't update French Connect Custom account's legal entity with a new account token", "user": {"login": "louischatriot", "id": 926355, "node_id": "MDQ6VXNlcjkyNjM1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/926355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/louischatriot", "html_url": "https://github.com/louischatriot", "followers_url": "https://api.github.com/users/louischatriot/followers", "following_url": "https://api.github.com/users/louischatriot/following{/other_user}", "gists_url": "https://api.github.com/users/louischatriot/gists{/gist_id}", "starred_url": "https://api.github.com/users/louischatriot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/louischatriot/subscriptions", "organizations_url": "https://api.github.com/users/louischatriot/orgs", "repos_url": "https://api.github.com/users/louischatriot/repos", "events_url": "https://api.github.com/users/louischatriot/events{/privacy}", "received_events_url": "https://api.github.com/users/louischatriot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-11T13:59:00Z", "updated_at": "2018-04-11T14:58:21Z", "closed_at": "2018-04-11T14:55:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems like a bug in the library as I can make it work with curl, see code below\r\n\r\n```python\r\n    legal_entity_data = { 'first_name': 'something' }\r\n    account_token = stripe.Token.create( account = { 'legal_entity': legal_entity_data, 'tos_shown_and_accepted': True })\r\n    stripe_account = stripe.Account.create(type = 'custom', country = 'FR', account_token = account_token)\r\n    assert(stripe_account['legal_entity']['first_name'] == 'something')\r\n\r\n    #\u00a0Update a legal_entity field\r\n    legal_entity_data = { 'first_name': 'another' }\r\n    account_token = stripe.Token.create( account = { 'legal_entity': legal_entity_data, 'tos_shown_and_accepted': True })\r\n    stripe_account = stripe.Account.retrieve(stripe_account['id'])   # Should be idempotent but just in case\r\n    stripe_account.account_token = account_token\r\n    stripe_account.save()\r\n\r\n    stripe_account = stripe.Account.retrieve(stripe_account['id'])\r\n    assert(stripe_account['legal_entity']['first_name'] == 'another')\r\n    # ^\r\n    #\u00a0This assertion fails (first_name is still equal to 'something')\r\n    #\u00a0But updating the account with the account token using curl does work, 'first_name' becomes 'another'\r\n    # So this seems like a bug with the Python library\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/405", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/405/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/405/events", "html_url": "https://github.com/stripe/stripe-python/issues/405", "id": 304341243, "node_id": "MDU6SXNzdWUzMDQzNDEyNDM=", "number": 405, "title": "tests: test_is_deletable fails / ResourceWarnings", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-12T11:53:15Z", "updated_at": "2018-03-13T00:05:43Z", "closed_at": "2018-03-13T00:04:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am seeing 10 test failures (for `test_is_deletable`) - are they related to recent changes in stripe-mock (I just installed the master version as per the README):\r\n\r\n```\r\n======================================================================\r\nFAIL: test_is_deletable (tests.api_resources.test_account.AccountExternalAccountsTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"\u2026/Vcs/stripe-python/tests/api_resources/test_account.py\", line 193, in test_is_deletable\r\n    self.assertIsInstance(resource, stripe.BankAccount)\r\nAssertionError: <StripeObject id=this_is_a_fake_id_for_deleted_object at 0x7fe455f47e60> JSON: {\r\n  \"deleted\": true,\r\n  \"id\": \"this_is_a_fake_id_for_deleted_object\"\r\n} is not an instance of <class 'stripe.api_resources.bank_account.BankAccount'>\r\n\r\n======================================================================\r\nFAIL: test_is_deletable (tests.api_resources.test_account.AccountTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"\u2026/Vcs/stripe-python/tests/api_resources/test_account.py\", line 95, in test_is_deletable\r\n    '/v1/accounts/%s' % resource.id\r\n  File \"\u2026/Vcs/stripe-python/tests/helper.py\", line 68, in assert_requested\r\n    return self.request_mock.assert_requested(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 83, in assert_requested\r\n    raise exception\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 75, in assert_requested\r\n    self.request_spy.assert_called_with(*args)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 316, in assert_called_with\r\n    return mock.assert_called_with(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 937, in assert_called_with\r\n    six.raise_from(AssertionError(_error_message(cause)), cause)\r\n  File \"<string>\", line 3, in raise_from\r\nAssertionError: Expected call: request(<ANY>, 'delete', '/v1/accounts/this_is_a_fake_id_for_deleted_object', <ANY>, <ANY>)\r\nActual call: request(<stripe.api_requestor.APIRequestor object at 0x7fe455dfeb70>, 'delete', '/v1/accounts/acct_1BoJ2AKrZ43eBVAb', {}, None)\r\n\r\n======================================================================\r\nFAIL: test_is_deletable (tests.api_resources.test_product.ProductTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"\u2026/Vcs/stripe-python/tests/api_resources/test_product.py\", line 64, in test_is_deletable\r\n    '/v1/products/%s' % resource.id\r\n  File \"\u2026/Vcs/stripe-python/tests/helper.py\", line 68, in assert_requested\r\n    return self.request_mock.assert_requested(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 83, in assert_requested\r\n    raise exception\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 75, in assert_requested\r\n    self.request_spy.assert_called_with(*args)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 316, in assert_called_with\r\n    return mock.assert_called_with(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 937, in assert_called_with\r\n    six.raise_from(AssertionError(_error_message(cause)), cause)\r\n  File \"<string>\", line 3, in raise_from\r\nAssertionError: Expected call: request(<ANY>, 'delete', '/v1/products/this_is_a_fake_id_for_deleted_object', <ANY>, <ANY>)\r\nActual call: request(<stripe.api_requestor.APIRequestor object at 0x7fe45588e470>, 'delete', '/v1/products/prod_CCiTUrJyglMaGj', {}, None)\r\n\r\n======================================================================\r\nFAIL: test_is_deletable (tests.api_resources.test_customer.CustomerTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"\u2026/Vcs/stripe-python/tests/api_resources/test_customer.py\", line 65, in test_is_deletable\r\n    '/v1/customers/%s' % resource.id\r\n  File \"\u2026/Vcs/stripe-python/tests/helper.py\", line 68, in assert_requested\r\n    return self.request_mock.assert_requested(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 83, in assert_requested\r\n    raise exception\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 75, in assert_requested\r\n    self.request_spy.assert_called_with(*args)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 316, in assert_called_with\r\n    return mock.assert_called_with(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 937, in assert_called_with\r\n    six.raise_from(AssertionError(_error_message(cause)), cause)\r\n  File \"<string>\", line 3, in raise_from\r\nAssertionError: Expected call: request(<ANY>, 'delete', '/v1/customers/this_is_a_fake_id_for_deleted_object', <ANY>, <ANY>)\r\nActual call: request(<stripe.api_requestor.APIRequestor object at 0x7fe455ac0630>, 'delete', '/v1/customers/cus_CCiTI4Tpghl0nK', {}, None)\r\n\r\n======================================================================\r\nFAIL: test_is_deletable (tests.api_resources.test_coupon.CouponTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"\u2026/Vcs/stripe-python/tests/api_resources/test_coupon.py\", line 66, in test_is_deletable\r\n    '/v1/coupons/%s' % resource.id\r\n  File \"\u2026/Vcs/stripe-python/tests/helper.py\", line 68, in assert_requested\r\n    return self.request_mock.assert_requested(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 83, in assert_requested\r\n    raise exception\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 75, in assert_requested\r\n    self.request_spy.assert_called_with(*args)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 316, in assert_called_with\r\n    return mock.assert_called_with(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 937, in assert_called_with\r\n    six.raise_from(AssertionError(_error_message(cause)), cause)\r\n  File \"<string>\", line 3, in raise_from\r\nAssertionError: Expected call: request(<ANY>, 'delete', '/v1/coupons/this_is_a_fake_id_for_deleted_object', <ANY>, <ANY>)\r\nActual call: request(<stripe.api_requestor.APIRequestor object at 0x7fe4556da9b0>, 'delete', '/v1/coupons/25OFF', {}, None)\r\n\r\n======================================================================\r\nFAIL: test_is_deletable (tests.api_resources.test_apple_pay_domain.ApplePayDomainTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"\u2026/Vcs/stripe-python/tests/api_resources/test_apple_pay_domain.py\", line 43, in test_is_deletable\r\n    '/v1/apple_pay/domains/%s' % resource.id\r\n  File \"\u2026/Vcs/stripe-python/tests/helper.py\", line 68, in assert_requested\r\n    return self.request_mock.assert_requested(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 83, in assert_requested\r\n    raise exception\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 75, in assert_requested\r\n    self.request_spy.assert_called_with(*args)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 316, in assert_called_with\r\n    return mock.assert_called_with(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 937, in assert_called_with\r\n    six.raise_from(AssertionError(_error_message(cause)), cause)\r\n  File \"<string>\", line 3, in raise_from\r\nAssertionError: Expected call: request(<ANY>, 'delete', '/v1/apple_pay/domains/this_is_a_fake_id_for_deleted_object', <ANY>, <ANY>)\r\nActual call: request(<stripe.api_requestor.APIRequestor object at 0x7fe4588d8438>, 'delete', '/v1/apple_pay/domains/apwc_1BoJ2MKrZ43eBVAbwqOtiDAK', {}, None)\r\n\r\n======================================================================\r\nFAIL: test_is_deletable (tests.api_resources.test_sku.SKUTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"\u2026/Vcs/stripe-python/tests/api_resources/test_sku.py\", line 69, in test_is_deletable\r\n    '/v1/skus/%s' % resource.id\r\n  File \"\u2026/Vcs/stripe-python/tests/helper.py\", line 68, in assert_requested\r\n    return self.request_mock.assert_requested(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 83, in assert_requested\r\n    raise exception\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 75, in assert_requested\r\n    self.request_spy.assert_called_with(*args)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 316, in assert_called_with\r\n    return mock.assert_called_with(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 937, in assert_called_with\r\n    six.raise_from(AssertionError(_error_message(cause)), cause)\r\n  File \"<string>\", line 3, in raise_from\r\nAssertionError: Expected call: request(<ANY>, 'delete', '/v1/skus/this_is_a_fake_id_for_deleted_object', <ANY>, <ANY>)\r\nActual call: request(<stripe.api_requestor.APIRequestor object at 0x7fe45582bb38>, 'delete', '/v1/skus/sku_CCiTarxGpuFjAr', {}, None)\r\n\r\n======================================================================\r\nFAIL: test_is_deletable (tests.api_resources.test_plan.PlanTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"\u2026/Vcs/stripe-python/tests/api_resources/test_plan.py\", line 67, in test_is_deletable\r\n    '/v1/plans/%s' % resource.id\r\n  File \"\u2026/Vcs/stripe-python/tests/helper.py\", line 68, in assert_requested\r\n    return self.request_mock.assert_requested(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 83, in assert_requested\r\n    raise exception\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 75, in assert_requested\r\n    self.request_spy.assert_called_with(*args)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 316, in assert_called_with\r\n    return mock.assert_called_with(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 937, in assert_called_with\r\n    six.raise_from(AssertionError(_error_message(cause)), cause)\r\n  File \"<string>\", line 3, in raise_from\r\nAssertionError: Expected call: request(<ANY>, 'delete', '/v1/plans/this_is_a_fake_id_for_deleted_object', <ANY>, <ANY>)\r\nActual call: request(<stripe.api_requestor.APIRequestor object at 0x7fe45571db00>, 'delete', '/v1/plans/gold', {}, None)\r\n\r\n======================================================================\r\nFAIL: test_is_deletable (tests.api_resources.test_recipient.RecipientTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"\u2026/Vcs/stripe-python/tests/api_resources/test_recipient.py\", line 64, in test_is_deletable\r\n    '/v1/recipients/%s' % resource.id\r\n  File \"\u2026/Vcs/stripe-python/tests/helper.py\", line 68, in assert_requested\r\n    return self.request_mock.assert_requested(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 83, in assert_requested\r\n    raise exception\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 75, in assert_requested\r\n    self.request_spy.assert_called_with(*args)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 316, in assert_called_with\r\n    return mock.assert_called_with(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 937, in assert_called_with\r\n    six.raise_from(AssertionError(_error_message(cause)), cause)\r\n  File \"<string>\", line 3, in raise_from\r\nAssertionError: Expected call: request(<ANY>, 'delete', '/v1/recipients/this_is_a_fake_id_for_deleted_object', <ANY>, <ANY>)\r\nActual call: request(<stripe.api_requestor.APIRequestor object at 0x7fe455ce7e80>, 'delete', '/v1/recipients/rp_1BoJ2NKrZ43eBVAbOlxIQK1Q', {}, None)\r\n\r\n======================================================================\r\nFAIL: test_is_deletable (tests.api_resources.test_subscription_item.SubscriptionItemTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"\u2026/Vcs/stripe-python/tests/api_resources/test_subscription_item.py\", line 71, in test_is_deletable\r\n    '/v1/subscription_items/%s' % resource.id\r\n  File \"\u2026/Vcs/stripe-python/tests/helper.py\", line 68, in assert_requested\r\n    return self.request_mock.assert_requested(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 83, in assert_requested\r\n    raise exception\r\n  File \"\u2026/Vcs/stripe-python/tests/request_mock.py\", line 75, in assert_requested\r\n    self.request_spy.assert_called_with(*args)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 316, in assert_called_with\r\n    return mock.assert_called_with(*args, **kwargs)\r\n  File \"\u2026/Vcs/stripe-python/.tox/py36/lib/python3.6/site-packages/mock/mock.py\", line 937, in assert_called_with\r\n    six.raise_from(AssertionError(_error_message(cause)), cause)\r\n  File \"<string>\", line 3, in raise_from\r\nAssertionError: Expected call: request(<ANY>, 'delete', '/v1/subscription_items/this_is_a_fake_id_for_deleted_object', <ANY>, <ANY>)\r\nActual call: request(<stripe.api_requestor.APIRequestor object at 0x7fe455844b70>, 'delete', '/v1/subscription_items/si_CCiTeY6cvtsSog', {}, None)\r\n\r\n----------------------------------------------------------------------\r\nRan 343 tests in 2.465s\r\n\r\nFAILED (failures=10)\r\nTest failed: <unittest.runner.TextTestResult run=343 errors=0 failures=10>\r\nerror: Test failed: <unittest.runner.TextTestResult run=343 errors=0 failures=10>\r\nsys:1: ResourceWarning: unclosed <socket.socket fd=47, family=AddressFamily.AF_INET6, type=2049, proto=6, laddr=('::1', 43170, 0, 0), raddr=('::1', 12111, 0, 0)>\r\n\u2026\r\nsys:1: ResourceWarning: unclosed <socket.socket fd=87, family=AddressFamily.AF_INET6, type=2049, proto=6, laddr=('::1', 43542, 0, 0), raddr=('::1', 12111, 0, 0)>\r\nERROR: InvocationError: '\u2026/Vcs/stripe-python/.tox/py36/bin/python -W all -bb -W error::BytesWarning -m coverage.__main__ run setup.py test'\r\n__________________________________________________________________________________________ summary ___________________________________________________________________________________________\r\nERROR:   py36: commands failed\r\n  9.06s user 0.76s system 96% cpu 10.189 total\r\n```\r\n\r\nThere are also a bunch of ResourceWarnings that should get silenced/fixed probably.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/400", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/400/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/400/events", "html_url": "https://github.com/stripe/stripe-python/issues/400", "id": 300621875, "node_id": "MDU6SXNzdWUzMDA2MjE4NzU=", "number": 400, "title": "Wheel dependencies on python3", "user": {"login": "ningirsu", "id": 7975575, "node_id": "MDQ6VXNlcjc5NzU1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7975575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ningirsu", "html_url": "https://github.com/ningirsu", "followers_url": "https://api.github.com/users/ningirsu/followers", "following_url": "https://api.github.com/users/ningirsu/following{/other_user}", "gists_url": "https://api.github.com/users/ningirsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ningirsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ningirsu/subscriptions", "organizations_url": "https://api.github.com/users/ningirsu/orgs", "repos_url": "https://api.github.com/users/ningirsu/repos", "events_url": "https://api.github.com/users/ningirsu/events{/privacy}", "received_events_url": "https://api.github.com/users/ningirsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-27T13:06:27Z", "updated_at": "2018-02-27T22:33:53Z", "closed_at": "2018-02-27T17:59:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!\r\n\r\nSince the build was compiled using python2.7, it seems that it breaks the conditional dependencies here `https://github.com/stripe/stripe-python/blob/master/setup.py#L36`\r\n\r\nSo for instance, when installing stripe on python3, we now have a dependency on `simplejson`\r\n\r\nOne easy fix is to use https://www.python.org/dev/peps/pep-0508/ to manage conditional dependencies.\r\n\r\nthks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/393", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/393/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/393/events", "html_url": "https://github.com/stripe/stripe-python/issues/393", "id": 295431176, "node_id": "MDU6SXNzdWUyOTU0MzExNzY=", "number": 393, "title": "StripeObject.last_response is None on save() calls", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ob-stripe", "id": 23086931, "node_id": "MDQ6VXNlcjIzMDg2OTMx", "avatar_url": "https://avatars0.githubusercontent.com/u/23086931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ob-stripe", "html_url": "https://github.com/ob-stripe", "followers_url": "https://api.github.com/users/ob-stripe/followers", "following_url": "https://api.github.com/users/ob-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/ob-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ob-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ob-stripe/subscriptions", "organizations_url": "https://api.github.com/users/ob-stripe/orgs", "repos_url": "https://api.github.com/users/ob-stripe/repos", "events_url": "https://api.github.com/users/ob-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/ob-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ob-stripe", "id": 23086931, "node_id": "MDQ6VXNlcjIzMDg2OTMx", "avatar_url": "https://avatars0.githubusercontent.com/u/23086931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ob-stripe", "html_url": "https://github.com/ob-stripe", "followers_url": "https://api.github.com/users/ob-stripe/followers", "following_url": "https://api.github.com/users/ob-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/ob-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ob-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ob-stripe/subscriptions", "organizations_url": "https://api.github.com/users/ob-stripe/orgs", "repos_url": "https://api.github.com/users/ob-stripe/repos", "events_url": "https://api.github.com/users/ob-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/ob-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-02-08T08:58:16Z", "updated_at": "2018-02-08T19:48:58Z", "closed_at": "2018-02-08T19:46:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Repro steps from #371:\r\n\r\n```py\r\ncustomer = stripe_customer.api_retrieve()\r\ncustomer.account_balance -= 250\r\ncustomer.save(idempotency_key=ik)\r\ncredit_request_id = customer.last_response.request_id  # Breaks! last_response is None\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/391", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/391/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/391/events", "html_url": "https://github.com/stripe/stripe-python/issues/391", "id": 291735600, "node_id": "MDU6SXNzdWUyOTE3MzU2MDA=", "number": 391, "title": "Cannot Use .save() to Change Plans", "user": {"login": "zerox1212", "id": 13090472, "node_id": "MDQ6VXNlcjEzMDkwNDcy", "avatar_url": "https://avatars2.githubusercontent.com/u/13090472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zerox1212", "html_url": "https://github.com/zerox1212", "followers_url": "https://api.github.com/users/zerox1212/followers", "following_url": "https://api.github.com/users/zerox1212/following{/other_user}", "gists_url": "https://api.github.com/users/zerox1212/gists{/gist_id}", "starred_url": "https://api.github.com/users/zerox1212/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zerox1212/subscriptions", "organizations_url": "https://api.github.com/users/zerox1212/orgs", "repos_url": "https://api.github.com/users/zerox1212/repos", "events_url": "https://api.github.com/users/zerox1212/events{/privacy}", "received_events_url": "https://api.github.com/users/zerox1212/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-25T22:18:17Z", "updated_at": "2018-01-30T07:53:41Z", "closed_at": "2018-01-29T18:41:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please clarify in the API docs that updating an active subscription using `sub.save()` will not upgrade or downgrade the subscription plan.\r\n\r\nExample code:\r\n```python\r\nsubscription = stripe.Subscription.retrieve('sub_49ty4767H20z6a')\r\nsubscription['items']['data'][0].plan.id = new_plan\r\nsubscription.save()\r\n```\r\n\r\nAn API call must be initiated via `stripe.Subscription.modify()`. Using `save()` will only result in a call to `util.logger.debug(\"Trying to save already saved object %r\", self)` and otherwise does nothing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/388", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/388/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/388/events", "html_url": "https://github.com/stripe/stripe-python/issues/388", "id": 287542282, "node_id": "MDU6SXNzdWUyODc1NDIyODI=", "number": 388, "title": "Changing subscription's plan ignores quantity", "user": {"login": "alanhamlett", "id": 522344, "node_id": "MDQ6VXNlcjUyMjM0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/522344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhamlett", "html_url": "https://github.com/alanhamlett", "followers_url": "https://api.github.com/users/alanhamlett/followers", "following_url": "https://api.github.com/users/alanhamlett/following{/other_user}", "gists_url": "https://api.github.com/users/alanhamlett/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhamlett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhamlett/subscriptions", "organizations_url": "https://api.github.com/users/alanhamlett/orgs", "repos_url": "https://api.github.com/users/alanhamlett/repos", "events_url": "https://api.github.com/users/alanhamlett/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhamlett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ob-stripe", "id": 23086931, "node_id": "MDQ6VXNlcjIzMDg2OTMx", "avatar_url": "https://avatars0.githubusercontent.com/u/23086931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ob-stripe", "html_url": "https://github.com/ob-stripe", "followers_url": "https://api.github.com/users/ob-stripe/followers", "following_url": "https://api.github.com/users/ob-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/ob-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ob-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ob-stripe/subscriptions", "organizations_url": "https://api.github.com/users/ob-stripe/orgs", "repos_url": "https://api.github.com/users/ob-stripe/repos", "events_url": "https://api.github.com/users/ob-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/ob-stripe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ob-stripe", "id": 23086931, "node_id": "MDQ6VXNlcjIzMDg2OTMx", "avatar_url": "https://avatars0.githubusercontent.com/u/23086931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ob-stripe", "html_url": "https://github.com/ob-stripe", "followers_url": "https://api.github.com/users/ob-stripe/followers", "following_url": "https://api.github.com/users/ob-stripe/following{/other_user}", "gists_url": "https://api.github.com/users/ob-stripe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ob-stripe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ob-stripe/subscriptions", "organizations_url": "https://api.github.com/users/ob-stripe/orgs", "repos_url": "https://api.github.com/users/ob-stripe/repos", "events_url": "https://api.github.com/users/ob-stripe/events{/privacy}", "received_events_url": "https://api.github.com/users/ob-stripe/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-01-10T19:01:47Z", "updated_at": "2018-01-13T02:47:47Z", "closed_at": "2018-01-12T16:40:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n\r\nWhen a customer has an existing subscription with quantity 2 and plan `plan1`, updating the subscription's plan always uses quantity 1.\r\n\r\n## Example\r\n\r\n```python\r\nsubscription = stripe.Subscription.retrieve({SUBSCRIPTION_ID})\r\nassert subscription.plan == 'plan1'\r\nassert subscription.quantity == 2\r\nsubscription.plan = 'plan2'\r\nsubscription.quantity = 2\r\nsubscription.save()\r\n\r\nsubscription = stripe.Subscription.retrieve({SUBSCRIPTION_ID})\r\nassert subscription.quantity == 2\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAssertionError\r\n```\r\n\r\nStripe logging shows only `plan_id` is sent to the api when calling `subscription.save()`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/377", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/377/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/377/events", "html_url": "https://github.com/stripe/stripe-python/issues/377", "id": 278594775, "node_id": "MDU6SXNzdWUyNzg1OTQ3NzU=", "number": 377, "title": "File Uploading with Python 3.6.2", "user": {"login": "jkeyes", "id": 64932, "node_id": "MDQ6VXNlcjY0OTMy", "avatar_url": "https://avatars3.githubusercontent.com/u/64932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkeyes", "html_url": "https://github.com/jkeyes", "followers_url": "https://api.github.com/users/jkeyes/followers", "following_url": "https://api.github.com/users/jkeyes/following{/other_user}", "gists_url": "https://api.github.com/users/jkeyes/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkeyes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkeyes/subscriptions", "organizations_url": "https://api.github.com/users/jkeyes/orgs", "repos_url": "https://api.github.com/users/jkeyes/repos", "events_url": "https://api.github.com/users/jkeyes/events{/privacy}", "received_events_url": "https://api.github.com/users/jkeyes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-01T20:59:51Z", "updated_at": "2017-12-06T19:03:03Z", "closed_at": "2017-12-06T19:03:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python Version: 3.6.2\r\nStripe: 1.75.1\r\n\r\nThe snippet from the [Python docs](https://stripe.com/docs/file-upload) for uploading a file is not working for me:\r\n\r\n```python\r\nimport stripe\r\nstripe.api_key = 'sk_test_...'\r\nwith open(\"shoe.jpg\", \"r\") as fp:\r\n    stripe.FileUpload.create(\r\n        file=fp,\r\n        purpose=\"dispute_evidence\",\r\n    )\r\n```\r\n\r\nraises a UnicodeDecodeError:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"up.py\", line 6, in <module>\r\n    purpose=\"dispute_evidence\",\r\n  File \"python3.6/site-packages/stripe/api_resources/file_upload.py\", line 30, in create\r\n    'post', url, params=params, headers=supplied_headers)\r\n  File \"python3.6/site-packages/stripe/api_requestor.py\", line 151, in request\r\n    method.lower(), url, params, headers)\r\n  File \"python3.6/site-packages/stripe/api_requestor.py\", line 315, in request_raw\r\n    generator.add_params(params or {})\r\n  File \"python3.6/site-packages/stripe/multipart_data_generator.py\", line 36, in add_params\r\n    self._write_file(value)\r\n  File \"python3.6/site-packages/stripe/multipart_data_generator.py\", line 75, in _write_file\r\n    file_contents = f.read(self.chunk_size)\r\n  File \"python3.6/codecs.py\", line 321, in decode\r\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte\r\n```\r\n\r\nOpening the file in `rb` mode also fails:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"up.py\", line 6, in <module>\r\n    purpose=\"dispute_evidence\",\r\n  File \"python3.6/site-packages/stripe/api_resources/file_upload.py\", line 30, in create\r\n    'post', url, params=params, headers=supplied_headers)\r\n  File \"python3.6/site-packages/stripe/api_requestor.py\", line 151, in request\r\n    method.lower(), url, params, headers)\r\n  File \"python3.6/site-packages/stripe/api_requestor.py\", line 335, in request_raw\r\n    'Post details', post_data=post_data, api_version=self.api_version)\r\n  File \"python3.6/site-packages/stripe/util.py\", line 87, in log_debug\r\n    msg = logfmt(dict(message=message, **params))\r\n  File \"python3.6/site-packages/stripe/util.py\", line 134, in logfmt\r\n    return u' '.join([fmt(key, val) for key, val in sorted(props.items())])\r\n  File \"python3.6/site-packages/stripe/util.py\", line 134, in <listcomp>\r\n    return u' '.join([fmt(key, val) for key, val in sorted(props.items())])\r\n  File \"python3.6/site-packages/stripe/util.py\", line 121, in fmt\r\n    val = val.decode('utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 131: invalid start byte\r\n```\r\n\r\nThe code is working under Python 2.7.13. I really feel like I must be overlooking something here, but I've tried various means with no success. Any ideas?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/376", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/376/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/376/events", "html_url": "https://github.com/stripe/stripe-python/issues/376", "id": 276668499, "node_id": "MDU6SXNzdWUyNzY2Njg0OTk=", "number": 376, "title": "Better exception for Source.detach() on detached sources", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 330246849, "node_id": "MDU6TGFiZWwzMzAyNDY4NDk=", "url": "https://api.github.com/repos/stripe/stripe-python/labels/future", "name": "future", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-24T17:05:50Z", "updated_at": "2018-07-10T07:41:54Z", "closed_at": "2018-07-10T07:41:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/stripe/stripe-python/blob/8629450495adf3ea6d2c1ae343a99c8a8480e90e/stripe/api_resources/source.py#L29\r\n\r\nCould this get its own exception type? I want to give customers the option to remove a source from their payment methods, and right now I have to do something like this:\r\n\r\n```py\r\ntry:\r\n    source.detach()\r\nexcept NotImplementedError:\r\n    resync(source)\r\n```\r\n\r\nCatching notimpl is weird, and this isn't really the appropriate exception type I think anyway.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/374", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/374/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/374/events", "html_url": "https://github.com/stripe/stripe-python/issues/374", "id": 274710047, "node_id": "MDU6SXNzdWUyNzQ3MTAwNDc=", "number": 374, "title": "Possible to enter state where Account.__repr__() results in Type error in attempting to serialize Datetime object", "user": {"login": "dalanmiller", "id": 863286, "node_id": "MDQ6VXNlcjg2MzI4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/863286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dalanmiller", "html_url": "https://github.com/dalanmiller", "followers_url": "https://api.github.com/users/dalanmiller/followers", "following_url": "https://api.github.com/users/dalanmiller/following{/other_user}", "gists_url": "https://api.github.com/users/dalanmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/dalanmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dalanmiller/subscriptions", "organizations_url": "https://api.github.com/users/dalanmiller/orgs", "repos_url": "https://api.github.com/users/dalanmiller/repos", "events_url": "https://api.github.com/users/dalanmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/dalanmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-17T00:18:09Z", "updated_at": "2017-11-29T10:35:59Z", "closed_at": "2017-11-29T10:08:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "In attempting to make mutations to an Account object, I can set the following:\r\n\r\n```\r\naccount = stripe.Account.retrieve(\"acc_123\") \r\naccount['tos_acceptance'] = {\r\n     'date': datetime.datetime(year = 2017, month = 11, day=16),\r\n     'ip': '192.168.1.1' #For example's sake\r\n    }\r\n```\r\n\r\nNow, if I run `account.__repr__()` (or just `account` in some sort of REPL, I get the following: \r\n\r\n```\r\nTypeError: Object of type 'datetime' is not JSON serializable\r\n```\r\n\r\nGiven that in the `Account.save()` method, Python `datetime` objects automatically get translated into Stripe API comprehensible timestamps, it would probably make sense to do this within the `__repr__` as well for inspection in iPython, ipynb, IDEs or elsewhere I'm not thinking of. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/370", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/370/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/370/events", "html_url": "https://github.com/stripe/stripe-python/issues/370", "id": 272281950, "node_id": "MDU6SXNzdWUyNzIyODE5NTA=", "number": 370, "title": "Better Access to Response Headers", "user": {"login": "sedouard", "id": 3053263, "node_id": "MDQ6VXNlcjMwNTMyNjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3053263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sedouard", "html_url": "https://github.com/sedouard", "followers_url": "https://api.github.com/users/sedouard/followers", "following_url": "https://api.github.com/users/sedouard/following{/other_user}", "gists_url": "https://api.github.com/users/sedouard/gists{/gist_id}", "starred_url": "https://api.github.com/users/sedouard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sedouard/subscriptions", "organizations_url": "https://api.github.com/users/sedouard/orgs", "repos_url": "https://api.github.com/users/sedouard/repos", "events_url": "https://api.github.com/users/sedouard/events{/privacy}", "received_events_url": "https://api.github.com/users/sedouard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-11-08T17:24:16Z", "updated_at": "2019-07-10T20:05:50Z", "closed_at": "2018-01-06T17:38:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On a successful API request the Stripe Java SDK doesn't provide a way of accessing response headers. (At least not that I can tell).\r\n\r\nThis can be useful in the case you're interested in response metadata (such as Idempotency-Key and Request-ID).\r\n\r\nFor example in a GET /charges/:id request:\r\n\r\n```python\r\nimport stripe\r\nstripe.api_key = \"sk_test_...\"\r\n\r\n# list charges\r\nstripe.Charge.list()\r\n\r\n# retrieve single charge - no response headers\r\ncharge = stripe.Charge.retrieve(\"ch_1A2PUG2eZvKYlo2C4Rej1B9d\")\r\n```\r\n\r\nIt would be great if there was an optional way to grab the HTTP response metadata through some kind of bound method on the deserialized response:\r\n\r\n```python\r\ncharge.getResponse()\r\n```\r\n\r\nOr simply as a property:\r\n\r\n```python\r\ncharge.response\r\n```\r\n\r\nBecause [api_requestor](https://github.com/stripe/stripe-python/blob/master/stripe/api_requestor.py#L352) returns only the deserialized version of the response body it isn't possible to get HTTP request-specific things at the moment. Does it make sense to add a `response` property here so that we mirror the approach [discussed in the node sdk](https://github.com/stripe/stripe-node/issues/406)?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/358", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/358/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/358/events", "html_url": "https://github.com/stripe/stripe-python/issues/358", "id": 268587379, "node_id": "MDU6SXNzdWUyNjg1ODczNzk=", "number": 358, "title": "Passing a wildcard type to Event.list creates an error", "user": {"login": "michael-erasmus", "id": 58212, "node_id": "MDQ6VXNlcjU4MjEy", "avatar_url": "https://avatars0.githubusercontent.com/u/58212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michael-erasmus", "html_url": "https://github.com/michael-erasmus", "followers_url": "https://api.github.com/users/michael-erasmus/followers", "following_url": "https://api.github.com/users/michael-erasmus/following{/other_user}", "gists_url": "https://api.github.com/users/michael-erasmus/gists{/gist_id}", "starred_url": "https://api.github.com/users/michael-erasmus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michael-erasmus/subscriptions", "organizations_url": "https://api.github.com/users/michael-erasmus/orgs", "repos_url": "https://api.github.com/users/michael-erasmus/repos", "events_url": "https://api.github.com/users/michael-erasmus/events{/privacy}", "received_events_url": "https://api.github.com/users/michael-erasmus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-25T23:56:17Z", "updated_at": "2017-10-26T21:43:00Z", "closed_at": "2017-10-26T09:47:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use the `Event.list` method to get a subset of events based on their type\r\n\r\nAccording to the Stripe [Api docs](https://stripe.com/docs/api/python#list_events-type):\r\n\r\n```\r\ntype\r\noptional\r\nA string containing a specific event name, or group of events using * as a wildcard. The list will be filtered to include only events with a matching event property.\r\n```\r\n\r\nI tried the following:\r\n\r\n```python\r\nstripe.Event.list(type='customer.subscription.*')\r\n```\r\n\r\nThat seems to trigger a http 500 error on the server:\r\n\r\n```\r\nINFO:stripe:GET https://api.stripe.com/v1/events?type=customer.subscription.%2A 500\r\n\r\n\r\n/opt/conda/lib/python3.6/site-packages/stripe/api_requestor.py in handle_api_error(self, rbody, rcode, resp, rheaders)\r\n    166         else:\r\n    167             raise error.APIError(err.get('message'), rbody, rcode, resp,\r\n--> 168                                  rheaders)\r\n    169 \r\n    170     def request_raw(self, method, url, params=None, supplied_headers=None):\r\n\r\nAPIError: Request req_GuNqYP3ul412Nh: An unknown error occurred\r\n```\r\n\r\nIt seems like perhaps the url param is being incorrectly encoded. Any way to get around this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stripe/stripe-python/issues/352", "repository_url": "https://api.github.com/repos/stripe/stripe-python", "labels_url": "https://api.github.com/repos/stripe/stripe-python/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/stripe/stripe-python/issues/352/comments", "events_url": "https://api.github.com/repos/stripe/stripe-python/issues/352/events", "html_url": "https://github.com/stripe/stripe-python/issues/352", "id": 267008883, "node_id": "MDU6SXNzdWUyNjcwMDg4ODM=", "number": 352, "title": "StripeObjects are unpickleable -- when statement_descriptor is None or empty string", "user": {"login": "danny-hb", "id": 18370748, "node_id": "MDQ6VXNlcjE4MzcwNzQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/18370748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danny-hb", "html_url": "https://github.com/danny-hb", "followers_url": "https://api.github.com/users/danny-hb/followers", "following_url": "https://api.github.com/users/danny-hb/following{/other_user}", "gists_url": "https://api.github.com/users/danny-hb/gists{/gist_id}", "starred_url": "https://api.github.com/users/danny-hb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danny-hb/subscriptions", "organizations_url": "https://api.github.com/users/danny-hb/orgs", "repos_url": "https://api.github.com/users/danny-hb/repos", "events_url": "https://api.github.com/users/danny-hb/events{/privacy}", "received_events_url": "https://api.github.com/users/danny-hb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-19T22:26:36Z", "updated_at": "2017-10-20T19:00:39Z", "closed_at": "2017-10-20T18:53:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having issues unpickling stripe objects if some of their properties are either the empty string, or None.\r\n\r\nThe following code reproduces it\r\n\r\n```\r\nACCOUNT_STRING = 'acct_XXXXXXXXXXXXXXXX'\r\nSTRIPE_API_KEY = 'sk_test_XXXXXXXXXXXXXXXXXXXXXXXX'\r\n\r\nimport pickle\r\nimport stripe\r\n\r\nstripe.api_key = STRIPE_API_KEY\r\nacct = stripe.Account.retrieve(ACCOUNT_STRING)\r\nprint('acct.statement_descriptor <{}>'.format(acct.statement_descriptor))\r\n\r\nacct.statement_descriptor = None\r\nprint('acct.statement_descriptor <{}>'.format(acct.statement_descriptor))\r\np = pickle.dumps(acct)\r\nu = pickle.loads(p)\r\n```\r\n\r\nI also have this issue with raw account objects that I get back from stripe, because on most of them the acct.statement_descriptor is already the empty string, which also throws the same error.\r\n", "performed_via_github_app": null, "score": 1.0}]}