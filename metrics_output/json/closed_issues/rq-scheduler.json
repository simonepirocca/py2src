{"total_count": 89, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/rq/rq-scheduler/issues/244", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/244/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/244/events", "html_url": "https://github.com/rq/rq-scheduler/issues/244", "id": 665327205, "node_id": "MDU6SXNzdWU2NjUzMjcyMDU=", "number": 244, "title": "What would cause a job to get removed from the scheduler?", "user": {"login": "taewookim", "id": 5768898, "node_id": "MDQ6VXNlcjU3Njg4OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5768898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taewookim", "html_url": "https://github.com/taewookim", "followers_url": "https://api.github.com/users/taewookim/followers", "following_url": "https://api.github.com/users/taewookim/following{/other_user}", "gists_url": "https://api.github.com/users/taewookim/gists{/gist_id}", "starred_url": "https://api.github.com/users/taewookim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taewookim/subscriptions", "organizations_url": "https://api.github.com/users/taewookim/orgs", "repos_url": "https://api.github.com/users/taewookim/repos", "events_url": "https://api.github.com/users/taewookim/events{/privacy}", "received_events_url": "https://api.github.com/users/taewookim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-24T17:57:57Z", "updated_at": "2020-07-24T20:06:44Z", "closed_at": "2020-07-24T20:06:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since my project has so many moving parts.. probably best to explain the symptom\r\n\r\nI have 1 scheduler running on 1 queue. I add scheduled jobs ( to be executed within seconds, i.e.. they have all similar start times). \r\n\r\nI keep repeating scheduling of jobs with NO rq worker doing anything (in fact, the process is completely off). In another words, the queue should just be piling up.\r\n\r\nBut ALL of a sudden.. the queue gets chopped off (randomly) and first 70-80% of jobs just disappear. \r\n\r\nDoes this have anything to do with:\r\n1) the \"max length\" of queue? (but i dont recall seeing any limits)\r\n2) does the scheduler automatically \"discard\" jobs where the start time is BEFORE the current time?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/237", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/237/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/237/events", "html_url": "https://github.com/rq/rq-scheduler/issues/237", "id": 627937902, "node_id": "MDU6SXNzdWU2Mjc5Mzc5MDI=", "number": 237, "title": "[question] How do I get a job id ?", "user": {"login": "Geoffrey42", "id": 14931652, "node_id": "MDQ6VXNlcjE0OTMxNjUy", "avatar_url": "https://avatars1.githubusercontent.com/u/14931652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geoffrey42", "html_url": "https://github.com/Geoffrey42", "followers_url": "https://api.github.com/users/Geoffrey42/followers", "following_url": "https://api.github.com/users/Geoffrey42/following{/other_user}", "gists_url": "https://api.github.com/users/Geoffrey42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geoffrey42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geoffrey42/subscriptions", "organizations_url": "https://api.github.com/users/Geoffrey42/orgs", "repos_url": "https://api.github.com/users/Geoffrey42/repos", "events_url": "https://api.github.com/users/Geoffrey42/events{/privacy}", "received_events_url": "https://api.github.com/users/Geoffrey42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-31T10:46:37Z", "updated_at": "2020-07-10T01:00:32Z", "closed_at": "2020-07-10T01:00:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nMy newbie problem might be very simple but I can't wrap my mind around it.\r\n\r\nHow can I extract some job id ?\r\n\r\nI am trying doing it using rq ```queue.job_ids``` without much success. Is there a way to do it directly using rq-scheduler API. I know I am probably doing it wrong the whole time.\r\n\r\n```python\r\nimport rq\r\nfrom redis import Redis\r\nfrom rq_scheduler import Scheduler \r\n\r\ndef say_hello():\r\n    print(\"hello !\")\r\n\r\nq = rq.Queue(\"some_queue\", connection=Redis())\r\nscheduler = Scheduler(queue_name=q, connection=Redis())\r\n\r\nscheduler.cron(\r\n    cron_string=\"*/5 * * * *\",\r\n    func=say_hello,\r\n    queue_name=\"some_queue\"\r\n)\r\n\r\njob_instances = scheduler.get_jobs(with_times=True)\r\n\r\nfor instance in job_instances:\r\n   print(instance[0])\r\n\r\nprint(\"len(q): \" + str(len(q)))\r\nprint(\"queued job ids: \" + str(q.job_ids))\r\n```\r\n\r\nOutputs:\r\n\r\n```\r\n<Job fbf86931-c04e-4bf3-8def-9147a3131e1c: say_hello>\r\nlen(q): 0\r\nqueued job ids: []\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/236", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/236/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/236/events", "html_url": "https://github.com/rq/rq-scheduler/issues/236", "id": 624588707, "node_id": "MDU6SXNzdWU2MjQ1ODg3MDc=", "number": 236, "title": "Jobs can not be queued?", "user": {"login": "vking34", "id": 24644326, "node_id": "MDQ6VXNlcjI0NjQ0MzI2", "avatar_url": "https://avatars2.githubusercontent.com/u/24644326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vking34", "html_url": "https://github.com/vking34", "followers_url": "https://api.github.com/users/vking34/followers", "following_url": "https://api.github.com/users/vking34/following{/other_user}", "gists_url": "https://api.github.com/users/vking34/gists{/gist_id}", "starred_url": "https://api.github.com/users/vking34/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vking34/subscriptions", "organizations_url": "https://api.github.com/users/vking34/orgs", "repos_url": "https://api.github.com/users/vking34/repos", "events_url": "https://api.github.com/users/vking34/events{/privacy}", "received_events_url": "https://api.github.com/users/vking34/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-26T04:12:33Z", "updated_at": "2020-07-10T00:58:26Z", "closed_at": "2020-07-10T00:58:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run the rq-scheduler with the following command:\r\n`$ rqscheduler -i 10 -v`\r\n\r\nAnd my `main.py`:\r\n```\r\nfrom redis import Redis\r\nfrom rq import Queue\r\nfrom rq_scheduler import Scheduler\r\nfrom datetime import datetime, timedelta\r\nfrom jobs.tasks import log\r\nimport time\r\n\r\nredis_connection = Redis()\r\n\r\n# queue = Queue(connection=redis_connection)\r\nscheduler = Scheduler(connection=redis_connection)\r\n\r\njob0 = scheduler.schedule(\r\n    scheduled_time=datetime.utcnow(),\r\n    func=log,\r\n    args=['abc'],\r\n    interval=5,\r\n    repeat=5\r\n)\r\njob1 = scheduler.enqueue_in(timedelta(seconds=5), log, 'abc')\r\n\r\nprint(job0.get_status())\r\nprint(job1.get_status())\r\ntime.sleep(1)\r\nprint(job0.get_status())\r\nprint(job1.get_status())\r\n```\r\nbut when i run the app, i got output:\r\n```\r\nNone\r\nNone\r\nNone\r\nNone\r\n```\r\nThat means these jobs have not been queued ?\r\nPlease help me. Thank you for reading.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/234", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/234/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/234/events", "html_url": "https://github.com/rq/rq-scheduler/issues/234", "id": 612159765, "node_id": "MDU6SXNzdWU2MTIxNTk3NjU=", "number": 234, "title": "How to reschedule jobs that failed?", "user": {"login": "taewookim", "id": 5768898, "node_id": "MDQ6VXNlcjU3Njg4OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5768898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taewookim", "html_url": "https://github.com/taewookim", "followers_url": "https://api.github.com/users/taewookim/followers", "following_url": "https://api.github.com/users/taewookim/following{/other_user}", "gists_url": "https://api.github.com/users/taewookim/gists{/gist_id}", "starred_url": "https://api.github.com/users/taewookim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taewookim/subscriptions", "organizations_url": "https://api.github.com/users/taewookim/orgs", "repos_url": "https://api.github.com/users/taewookim/repos", "events_url": "https://api.github.com/users/taewookim/events{/privacy}", "received_events_url": "https://api.github.com/users/taewookim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-04T20:50:41Z", "updated_at": "2020-07-10T01:03:41Z", "closed_at": "2020-07-10T01:03:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im looking for a way to requeue a job that failed w/ max # of retries & exponential back off (i.e. schedule job in future).\r\n\r\nI saw [this post](https://github.com/rq/rq/issues/1067) , so I thought i could use a scheduler to re-queue job (and add num_retry in meta). \r\n\r\nAny other elegant solutions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/219", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/219/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/219/events", "html_url": "https://github.com/rq/rq-scheduler/issues/219", "id": 537583599, "node_id": "MDU6SXNzdWU1Mzc1ODM1OTk=", "number": 219, "title": "Registering death automatically after some time \"pickel data was truncated\"", "user": {"login": "dhamechavivek95", "id": 36896584, "node_id": "MDQ6VXNlcjM2ODk2NTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/36896584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhamechavivek95", "html_url": "https://github.com/dhamechavivek95", "followers_url": "https://api.github.com/users/dhamechavivek95/followers", "following_url": "https://api.github.com/users/dhamechavivek95/following{/other_user}", "gists_url": "https://api.github.com/users/dhamechavivek95/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhamechavivek95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhamechavivek95/subscriptions", "organizations_url": "https://api.github.com/users/dhamechavivek95/orgs", "repos_url": "https://api.github.com/users/dhamechavivek95/repos", "events_url": "https://api.github.com/users/dhamechavivek95/events{/privacy}", "received_events_url": "https://api.github.com/users/dhamechavivek95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-13T14:36:38Z", "updated_at": "2019-12-13T15:30:11Z", "closed_at": "2019-12-13T15:30:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using ubuntu 19.04, python 3.6, rq-scheduler 0.9.1, and Django 2.2.4.\r\n\r\nI need to register the scheduler and for that, I am using django-extension.\r\n\r\nFrom django-extension, I am adding data into my queue and running queue from rq-worker.\r\n\r\nstep 1: starting django server\r\nstep 2: running `rqscheduler`\r\nstep 3: running `python3 manage.py runscript scheduler`\r\nstep 4: running specific worker `rqworker MY_WORKER_NAME`\r\n\r\nMy scheduler script is running every one minute `scheduler.cron(\"* * * * *\", func=my_func,\r\n                   queue_name=QueueName.My_QUEUE_NAME)`\r\n\r\nAfter running four to five minutes `rqscheduler` stopped and throws an error\r\n\r\n```\r\n19:23:59 Registering death\r\nTraceback (most recent call last):\r\n  File \"/opt/edugem/apps/psh_core/venv/lib/python3.7/site-packages/rq/job.py\", line 53, in unpickle\r\n    obj = loads(pickled_string)\r\n_pickle.UnpicklingError: pickle data was truncated\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/opt/edugem/apps/psh_core/venv/bin/rqscheduler\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/opt/edugem/apps/psh_core/venv/lib/python3.7/site-packages/rq_scheduler/scripts/rqscheduler.py\", line 61, in main\r\n    scheduler.run(burst=args.burst)\r\n  File \"/opt/edugem/apps/psh_core/venv/lib/python3.7/site-packages/rq_scheduler/scheduler.py\", line 413, in run\r\n    self.enqueue_jobs()\r\n  File \"/opt/edugem/apps/psh_core/venv/lib/python3.7/site-packages/rq_scheduler/scheduler.py\", line 391, in enqueue_jobs\r\n    for job in jobs:\r\n  File \"/opt/edugem/apps/psh_core/venv/lib/python3.7/site-packages/rq_scheduler/scheduler.py\", line 322, in get_jobs\r\n    job = self.job_class.fetch(job_id, connection=self.connection)\r\n  File \"/opt/edugem/apps/psh_core/venv/lib/python3.7/site-packages/rq/job.py\", line 288, in fetch\r\n    job.refresh()\r\n  File \"/opt/edugem/apps/psh_core/venv/lib/python3.7/site-packages/rq/job.py\", line 462, in refresh\r\n    self.restore(data)\r\n  File \"/opt/edugem/apps/psh_core/venv/lib/python3.7/site-packages/rq/job.py\", line 435, in restore\r\n    self._result = unpickle(obj.get('result')) if obj.get('result') else None  # noqa\r\n  File \"/opt/edugem/apps/psh_core/venv/lib/python3.7/site-packages/rq/job.py\", line 55, in unpickle\r\n    raise UnpickleError('Could not unpickle', pickled_string, e)\r\nrq.exceptions.UnpickleError: ('Could not unpickle', UnpicklingError('pickle data was truncated'))\r\n```\r\n\r\nNow It only can able to re-run `rqscheduler` after clearing all my redis records. But need a genuine solution.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/216", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/216/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/216/events", "html_url": "https://github.com/rq/rq-scheduler/issues/216", "id": 516832448, "node_id": "MDU6SXNzdWU1MTY4MzI0NDg=", "number": 216, "title": "[Questions] depends_on between Scheduler.schedule job and Queue.enqueue job", "user": {"login": "philippwestphal", "id": 24978526, "node_id": "MDQ6VXNlcjI0OTc4NTI2", "avatar_url": "https://avatars3.githubusercontent.com/u/24978526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philippwestphal", "html_url": "https://github.com/philippwestphal", "followers_url": "https://api.github.com/users/philippwestphal/followers", "following_url": "https://api.github.com/users/philippwestphal/following{/other_user}", "gists_url": "https://api.github.com/users/philippwestphal/gists{/gist_id}", "starred_url": "https://api.github.com/users/philippwestphal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philippwestphal/subscriptions", "organizations_url": "https://api.github.com/users/philippwestphal/orgs", "repos_url": "https://api.github.com/users/philippwestphal/repos", "events_url": "https://api.github.com/users/philippwestphal/events{/privacy}", "received_events_url": "https://api.github.com/users/philippwestphal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-03T14:07:03Z", "updated_at": "2019-11-08T15:02:29Z", "closed_at": "2019-11-08T15:02:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a web service (Python 3.7, Flask 1.0.2) with a workflow consisting of 3 steps:\r\n\r\n* Step 1: Submitting a remote compute job to a commercial queuing system (IBM's LSF)\r\n* Step 2: Polling every 61 seconds for the remote compute job status (61 seconds because of cached job status results)\r\n* Step 3: Data post-processing if step 2 returns remote compute job status == \"DONE\"\r\n\r\nThe remote compute job is of arbitrary length (between seconds and days) and each step is dependent on the completion of the previous one:\r\n\r\n```python\r\nfrom rq import Queue, Connection\r\n\r\ndef step1():\r\n    # submit remote job\r\n    return True\r\n\r\ndef step2():\r\n    # poll status of remote job\r\n    while True:\r\n        if remote_compute_job_status == \u201cDONE\u201d:\r\n            break\r\n        else:\r\n            time.sleep(61)\r\n    return True\r\n\r\ndef step3():\r\n    # post-process data from remote job\r\n    return True\r\n    \r\nwith Connection(redis.from_url(current_app.config['REDIS_URL'])):\r\n    q = Queue()\r\n    job1 = q.enqueue(step1)\r\n    job2 = q.enqueue(step2, depends_on=job1)\r\n    job3 = q.enqueue(step3, depends_on=job2)\r\n```\r\n\r\nHowever, eventually all workers will do polling (step 2), while they should continue to do step 1 of other incoming requests and step 3 of those workflows having successfully passed step 2.\r\nWorkers should periodically come back to step 2 for a poll (at most every 61 seconds per job) and if the remote compute job poll does not return \"DONE\" re-queue the poll job. \r\n\r\n---\r\n\r\nAt this point I started to experiment with RQ Scheduler (because the interval and re-queueing features sounded promising):\r\n\r\n```python\r\nfrom rq import Queue, Connection, get_current_job\r\nfrom rq_scheduler import Scheduler\r\n    \r\ndef step1():\r\n    # submit remote job\r\n    return True\r\n        \r\ndef step2():\r\n    # poll status of remote job\r\n    if remote_compute_job_status == \"DONE\":\r\n        return True\r\n    else:\r\n        return None\r\n    \r\ndef step3():\r\n    # post-process data from remote job\r\n    return True\r\n    \r\n    \r\nwith Connection(redis.from_url(current_app.config['REDIS_URL'])):\r\n    q = Queue()\r\n    s = Scheduler(queue=q)\r\n    job1 = q.enqueue(step1)\r\n    job2 = s.schedule(\r\n        scheduled_time=datetime.utcnow(),\r\n        func=step2,\r\n        interval=61\r\n    )\r\n    job2._dependency_id = job1._id  # is this acceptable?\r\n    job3 = q.enqueue(step3, depends_on=job2)\r\n```\r\n\r\n---\r\n\r\nHere is what I struggle with:  \r\n    \r\n1) I am explicitly creating the depends_on relationship between job2 and job1 (and between job3 and job 2). \r\n   At creation time job2 shows its dependency to job1:\r\n   ```python\r\n   ...\r\n   _dependency_id = c79e5df6-4d21-4966-b088-36c67cbc53bf\r\n   meta = {'interval': 61}\r\n   ```\r\n\r\n   That depends_on relationship is somehow not maintained when printing the current_job attributes at execution time of the step2 function:\r\n        \r\n   ```python\r\n   ...\r\n   _dependency_id = None\r\n   meta = {'interval': 61}\r\n   ```\r\n    \r\n   In fact, when running several workers, job2 is executed before job1 finished. \r\n   **Is there a way to ensure that scheduled job2 starts only after enqueued job1 finished?**\r\n\r\n   \r\n2) I tried returning ``None`` from function step2 (remote compute job not \u201cDONE\u201d yet) so that job3 will not get started. \r\n   But job3 starts after the first execution of job2 regardless of the return value.\r\n   **How can I make sure job3 is started only after the remote compute job poll returned \"DONE\"?**\r\n    \r\n   \r\n3) **How can I stop job2 being requeued if the remote compute job poll returned \"DONE\"?**\r\n   Set a short result_ttl, to expire the job before the next interval? Does that have a knock-on effect on the next setp (job3)?\r\n\r\n\r\nIt is my first time working with message queues ... Maybe, I am trying to use RQ and RQ Scheduler for something here it is not designed for ... Maybe I need to change my design (and way of thinking) ...\r\n\r\nI would be grateful for any comment and advise!\r\n\r\n---\r\n\r\n```python\r\n#requirements.txt\r\nFlask==1.0.2\r\nFlask-Bootstrap==3.3.7.1\r\nFlask-Testing==0.7.1\r\nFlask-WTF==0.14.2\r\nredis==3.3.11\r\nrq==0.13\r\nrq_scheduler==0.9.1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/209", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/209/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/209/events", "html_url": "https://github.com/rq/rq-scheduler/issues/209", "id": 484164992, "node_id": "MDU6SXNzdWU0ODQxNjQ5OTI=", "number": 209, "title": "New release?", "user": {"login": "woodruffw", "id": 3059210, "node_id": "MDQ6VXNlcjMwNTkyMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3059210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woodruffw", "html_url": "https://github.com/woodruffw", "followers_url": "https://api.github.com/users/woodruffw/followers", "following_url": "https://api.github.com/users/woodruffw/following{/other_user}", "gists_url": "https://api.github.com/users/woodruffw/gists{/gist_id}", "starred_url": "https://api.github.com/users/woodruffw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woodruffw/subscriptions", "organizations_url": "https://api.github.com/users/woodruffw/orgs", "repos_url": "https://api.github.com/users/woodruffw/repos", "events_url": "https://api.github.com/users/woodruffw/events{/privacy}", "received_events_url": "https://api.github.com/users/woodruffw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-22T19:14:35Z", "updated_at": "2019-10-08T03:25:59Z", "closed_at": "2019-10-08T03:25:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thanks for both `rq` and `rq-scheduler`!\r\n\r\nWould it be possible to get a new release cut and published here? The current latest version on PyPI includes usage of `_zadd` that no longer work with `redis>3.0`, despite `rq` transitively requiring `redis>3.0`. It looks like these commits on `master` make the relevant fixes:\r\n\r\n* a477251f65357cdc9ed4cd48e0449b1ed9465604\r\n* 1822f7a17230a437ed6001dda3d3ce824b622f48\r\n\r\nThanks again!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/206", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/206/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/206/events", "html_url": "https://github.com/rq/rq-scheduler/issues/206", "id": 459024911, "node_id": "MDU6SXNzdWU0NTkwMjQ5MTE=", "number": 206, "title": "rq 1.0 support?", "user": {"login": "lucasnad27", "id": 2490636, "node_id": "MDQ6VXNlcjI0OTA2MzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2490636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucasnad27", "html_url": "https://github.com/lucasnad27", "followers_url": "https://api.github.com/users/lucasnad27/followers", "following_url": "https://api.github.com/users/lucasnad27/following{/other_user}", "gists_url": "https://api.github.com/users/lucasnad27/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucasnad27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucasnad27/subscriptions", "organizations_url": "https://api.github.com/users/lucasnad27/orgs", "repos_url": "https://api.github.com/users/lucasnad27/repos", "events_url": "https://api.github.com/users/lucasnad27/events{/privacy}", "received_events_url": "https://api.github.com/users/lucasnad27/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-21T06:04:42Z", "updated_at": "2019-06-27T23:51:01Z", "closed_at": "2019-06-27T23:51:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has rq-scheduler been tested against [RQ 1.0 release](https://github.com/rq/rq/blob/master/CHANGES.md#10-2019-04-06)? I know there are some breaking changes. I found [this commit](https://github.com/rq/rq-scheduler/commit/a477251f65357cdc9ed4cd48e0449b1ed9465604) that implies >=0.13 is supported, but I assume this was not done with 1.0.\r\n\r\nThank you for any information and let me know if you would like help with this patch and I will try to find time :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/197", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/197/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/197/events", "html_url": "https://github.com/rq/rq-scheduler/issues/197", "id": 384017327, "node_id": "MDU6SXNzdWUzODQwMTczMjc=", "number": 197, "title": "Redis >= 3.0.0 not working", "user": {"login": "Dom4n", "id": 10115274, "node_id": "MDQ6VXNlcjEwMTE1Mjc0", "avatar_url": "https://avatars3.githubusercontent.com/u/10115274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dom4n", "html_url": "https://github.com/Dom4n", "followers_url": "https://api.github.com/users/Dom4n/followers", "following_url": "https://api.github.com/users/Dom4n/following{/other_user}", "gists_url": "https://api.github.com/users/Dom4n/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dom4n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dom4n/subscriptions", "organizations_url": "https://api.github.com/users/Dom4n/orgs", "repos_url": "https://api.github.com/users/Dom4n/repos", "events_url": "https://api.github.com/users/Dom4n/events{/privacy}", "received_events_url": "https://api.github.com/users/Dom4n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-24T19:56:51Z", "updated_at": "2018-12-11T12:11:50Z", "closed_at": "2018-12-11T12:11:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because of this change:\r\nhttps://github.com/andymccurdy/redis-py/blob/3.0.0/CHANGES#L27\r\n\r\n>     * ZADD now requires all element names/scores be specified in a single\r\n>       dictionary argument named mapping. This was required to allow the NX,\r\n>       XX, CH and INCR options to be specified.\r\n\r\nrq-scheduler stopped working.\r\n\r\nI have done a little debugging and it seems that this line:\r\nhttps://github.com/rq/rq-scheduler/blob/v0.8.3/rq_scheduler/scheduler.py#L212\r\nand other lines that are using `self.connection._zadd` are passing only timestamp instead of mapping as second argument.\r\n\r\nStacktrace:\r\n```\r\n  File \".../python3.6/site-packages/rq_scheduler/scheduler.py\", line 214, in schedule\r\n    job.id)\r\n  File \".../python3.6/site-packages/redis/client.py\", line 2263, in zadd\r\n    for pair in iteritems(mapping):\r\n  File \".../python3.6/site-packages/redis/_compat.py\", line 124, in iteritems\r\n    return iter(x.items())\r\nAttributeError: 'int' object has no attribute 'items'\r\n```\r\n\r\nRight now I don`t have time to try fixing it, so just reporting :smile: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/195", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/195/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/195/events", "html_url": "https://github.com/rq/rq-scheduler/issues/195", "id": 375438956, "node_id": "MDU6SXNzdWUzNzU0Mzg5NTY=", "number": 195, "title": "Feature: Multiple Schedulers with semi reliable locking and failover", "user": {"login": "oxalorg", "id": 4194289, "node_id": "MDQ6VXNlcjQxOTQyODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4194289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalorg", "html_url": "https://github.com/oxalorg", "followers_url": "https://api.github.com/users/oxalorg/followers", "following_url": "https://api.github.com/users/oxalorg/following{/other_user}", "gists_url": "https://api.github.com/users/oxalorg/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalorg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalorg/subscriptions", "organizations_url": "https://api.github.com/users/oxalorg/orgs", "repos_url": "https://api.github.com/users/oxalorg/repos", "events_url": "https://api.github.com/users/oxalorg/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalorg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-10-30T11:21:46Z", "updated_at": "2020-04-24T02:53:16Z", "closed_at": "2020-04-24T02:53:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There have been a lot of issues and PRs referencing this, but no one has got it quite right yet. I would like to discuss the things we need to get Multiple Schedulers running for failover.\r\n\r\nThe `rq` set of libraries are amazingly simple and I would love to continue using them. I feel like this might be a deal breaker for a lot of folks in adapting RQ + RQ-Scheduler.\r\n\r\n## Use Case\r\n\r\nThe feature I'm most interested in is: Multiple Schedulers running at the same time, but only one scheduler will be active. If the active scheduler dies for whatever reason, an inactive scheduler will become active.\r\n\r\nThis is a very important feature for us as we're hoping to run the scheduler on multiple servers for a failover. (Also makes our deployment easier as each server stays identical).\r\n\r\n## Previous Attempts\r\n\r\n#143 Seems to be a PR for Multi Schedulers, but it introduces a bug where more than 1 Scheduler won't even start/register itself.\r\n\r\n#170 Tries to fix this issue by completely removing the Birth/Death registration which may not be ideal as we no longer have track of all registered schedulers, and who is active at any given moment.\r\n\r\nIn both the above cases, (on a first glance, but pardon me If I'm wrong) the locking mechanism doesn't seem reliable and may cause multiple schedulers to acquire the lock.\r\n\r\n## Fix\r\n\r\nI would like to propose a fix for these issues, and introduce it as a somewhat reliable feature.\r\n\r\nA rough plan I have in mind:\r\n\r\n* Register each scheduler with a unique key, thus keeping track of all registered schedulers\r\n* Acquire a lock only if no one else has a lock\r\n* Keep the lock until you die / crash / deregister\r\n* Other schedulers (who have also registered themselves) will every so often check the lock for expiry.\r\n* As soon as they find an expired lock, they will attempt to gain a lock. This must be done without race conditions.\r\n* We don't want to release the lock easily as that will cause other schedulers to become active. That is not really desirable as our main goal is redundancy and failover.\r\n\r\nPlease let me know if a PR like this would be appreciated (via an Emoji Thumbsup) / please let me know your thoughts on this @selwin \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/193", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/193/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/193/events", "html_url": "https://github.com/rq/rq-scheduler/issues/193", "id": 354935257, "node_id": "MDU6SXNzdWUzNTQ5MzUyNTc=", "number": 193, "title": "What happens when workers are not running?", "user": {"login": "variable", "id": 558175, "node_id": "MDQ6VXNlcjU1ODE3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/558175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/variable", "html_url": "https://github.com/variable", "followers_url": "https://api.github.com/users/variable/followers", "following_url": "https://api.github.com/users/variable/following{/other_user}", "gists_url": "https://api.github.com/users/variable/gists{/gist_id}", "starred_url": "https://api.github.com/users/variable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/variable/subscriptions", "organizations_url": "https://api.github.com/users/variable/orgs", "repos_url": "https://api.github.com/users/variable/repos", "events_url": "https://api.github.com/users/variable/events{/privacy}", "received_events_url": "https://api.github.com/users/variable/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-28T23:02:24Z", "updated_at": "2018-12-11T23:24:11Z", "closed_at": "2018-12-11T23:24:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say I have scheduler with cron jobs and the queue workers died, would it keep enqueuing jobs so the next time the worker starts will pick up all the jobs? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/192", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/192/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/192/events", "html_url": "https://github.com/rq/rq-scheduler/issues/192", "id": 342768208, "node_id": "MDU6SXNzdWUzNDI3NjgyMDg=", "number": 192, "title": "Remove jobs after completion", "user": {"login": "GasparPizarro", "id": 3129848, "node_id": "MDQ6VXNlcjMxMjk4NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3129848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GasparPizarro", "html_url": "https://github.com/GasparPizarro", "followers_url": "https://api.github.com/users/GasparPizarro/followers", "following_url": "https://api.github.com/users/GasparPizarro/following{/other_user}", "gists_url": "https://api.github.com/users/GasparPizarro/gists{/gist_id}", "starred_url": "https://api.github.com/users/GasparPizarro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GasparPizarro/subscriptions", "organizations_url": "https://api.github.com/users/GasparPizarro/orgs", "repos_url": "https://api.github.com/users/GasparPizarro/repos", "events_url": "https://api.github.com/users/GasparPizarro/events{/privacy}", "received_events_url": "https://api.github.com/users/GasparPizarro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-19T15:02:46Z", "updated_at": "2018-12-11T23:25:48Z", "closed_at": "2018-12-11T23:25:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a job created with `enqueue_at` (using Django and django-rq)\r\n\r\n    scheduler = django_rq.get_scheduler(\"my_queue\")\r\n    scheduler.enqueue_at(the_date, func, job_id=my_custom_id)\r\n\r\nand I have two processes, an `rqworker my_queue` and `rqscheduler`. When I schedule the jobs they execute and \r\n\r\nHowever, every time I run `rqscheduler` all the already done jobs are run, regardless of their date or whether they have been executed, as the `rqworker` shows:\r\n\r\n     Job OK (28be8399-5038-4a37-9d80-90c8fd40781f)\r\n\r\nHowever, every time I run the scheduler it runs all old jobs, regardless of whether they have been run before.\r\n\r\n    (env) my_computer$ rqscheduler -v\r\n    10:51:50 Registering birth\r\n    10:51:50 Entering run loop\r\n    10:51:50 Checking for scheduled jobs\r\n    10:51:50 Pushing 493bbea3-c653-471d-b6ba-73c3f96287a9 to refill\r\n    10:51:50 Pushing 503075f5-658d-4e88-830e-711ed4477400 to refill\r\n    10:51:50 Pushing 28be8399-5038-4a37-9d80-90c8fd40781f to refill\r\n    10:51:50 Sleeping 60.00 seconds\r\n    [CTRL-C]\r\n    10:51:53 Shutting down RQ scheduler...\r\n    10:51:53 Registering death\r\n    10:51:53 Registering death\r\n    (env) my_computer$ rqscheduler -v\r\n    10:51:54 Registering birth\r\n    10:51:54 Entering run loop\r\n    10:51:54 Checking for scheduled jobs\r\n    10:51:54 Pushing 493bbea3-c653-471d-b6ba-73c3f96287a9 to refill\r\n    10:51:54 Pushing 503075f5-658d-4e88-830e-711ed4477400 to refill\r\n    10:51:54 Pushing 28be8399-5038-4a37-9d80-90c8fd40781f to refill\r\n    10:51:54 Sleeping 60.00 seconds\r\n\r\nIs this expected behavior? How do I do to have the scheduled jobs run only once?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/189", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/189/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/189/events", "html_url": "https://github.com/rq/rq-scheduler/issues/189", "id": 323879815, "node_id": "MDU6SXNzdWUzMjM4Nzk4MTU=", "number": 189, "title": "Duplicate jobs getting scheduled with croniter 0.3.22", "user": {"login": "manango", "id": 10636445, "node_id": "MDQ6VXNlcjEwNjM2NDQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/10636445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manango", "html_url": "https://github.com/manango", "followers_url": "https://api.github.com/users/manango/followers", "following_url": "https://api.github.com/users/manango/following{/other_user}", "gists_url": "https://api.github.com/users/manango/gists{/gist_id}", "starred_url": "https://api.github.com/users/manango/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manango/subscriptions", "organizations_url": "https://api.github.com/users/manango/orgs", "repos_url": "https://api.github.com/users/manango/repos", "events_url": "https://api.github.com/users/manango/events{/privacy}", "received_events_url": "https://api.github.com/users/manango/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-17T05:45:06Z", "updated_at": "2018-12-11T23:22:55Z", "closed_at": "2018-12-11T23:22:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like `croniter 0.3.22` was released very recently. With that version, `croniter.get_next()` API behavior changed (looks like a bug) compared to `0.3.20` version. See https://github.com/taichino/croniter/issues/102.\r\n\r\nDue to above croniter issue, if scheduler is running with less than 60 seconds interval, then there is possibility that scheduler incorrectly schedules \"cron\" based same job multiple times.\r\n\r\nAs an example, with croniter 0.3.22, let's say the job has cron configuration of `'0,30 * * * *'` (i.e. job is run at every 0 and 30 minutes). And let's say scheduler interval is 30 seconds. In that case:\r\n\r\n```\r\nScheduler Run Time    | Scheduler Ran The Job?   | Next Job Schedule Time\r\n-----------------------------------------------------------------------------\r\n08:58:40              | No                       | 09:00:00\r\n08:59:10              | No                       | 09:00:00\r\n08:59:40              | No                       | 09:00:00\r\n09:00:10              | Yes                      | 09:00:00    <- Since croniter.get_next() returns 09:00:00, job gets scheduled again at 9:00:00 incorrectly\r\n09:00:40              | Yes                      | 09:00:00    <- Since croniter.get_next() returns 09:00:00, job gets scheduled again at 9:00:00 incorrectly\r\n09:01:10              | Yes                      | 09:30:00\r\n09:01:40              | No                       | 09:30:00\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/188", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/188/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/188/events", "html_url": "https://github.com/rq/rq-scheduler/issues/188", "id": 323739647, "node_id": "MDU6SXNzdWUzMjM3Mzk2NDc=", "number": 188, "title": "New release with lock fix? ", "user": {"login": "jwelch92", "id": 2379334, "node_id": "MDQ6VXNlcjIzNzkzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2379334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwelch92", "html_url": "https://github.com/jwelch92", "followers_url": "https://api.github.com/users/jwelch92/followers", "following_url": "https://api.github.com/users/jwelch92/following{/other_user}", "gists_url": "https://api.github.com/users/jwelch92/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwelch92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwelch92/subscriptions", "organizations_url": "https://api.github.com/users/jwelch92/orgs", "repos_url": "https://api.github.com/users/jwelch92/repos", "events_url": "https://api.github.com/users/jwelch92/events{/privacy}", "received_events_url": "https://api.github.com/users/jwelch92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-16T18:40:13Z", "updated_at": "2018-05-17T01:04:54Z", "closed_at": "2018-05-16T23:23:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, any time line on a release with the lock fix? I had to downgrade to 0.6.1 as the lock bug was causing issues with scheduled jobs not enqueuing at the correct time.\r\n\r\nThanks! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/187", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/187/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/187/events", "html_url": "https://github.com/rq/rq-scheduler/issues/187", "id": 321663078, "node_id": "MDU6SXNzdWUzMjE2NjMwNzg=", "number": 187, "title": "Support for job meta field", "user": {"login": "arcodergh", "id": 1305635, "node_id": "MDQ6VXNlcjEzMDU2MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1305635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcodergh", "html_url": "https://github.com/arcodergh", "followers_url": "https://api.github.com/users/arcodergh/followers", "following_url": "https://api.github.com/users/arcodergh/following{/other_user}", "gists_url": "https://api.github.com/users/arcodergh/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcodergh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcodergh/subscriptions", "organizations_url": "https://api.github.com/users/arcodergh/orgs", "repos_url": "https://api.github.com/users/arcodergh/repos", "events_url": "https://api.github.com/users/arcodergh/events{/privacy}", "received_events_url": "https://api.github.com/users/arcodergh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-09T17:43:30Z", "updated_at": "2018-12-11T23:26:21Z", "closed_at": "2018-12-11T23:26:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rq jobs support a field meta to store metadata [https://github.com/rq/rq/blob/master/rq/job.py#L94](url) however this field is not exposed in rq-scheduler scheduler, cron, etc functions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/186", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/186/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/186/events", "html_url": "https://github.com/rq/rq-scheduler/issues/186", "id": 320458466, "node_id": "MDU6SXNzdWUzMjA0NTg0NjY=", "number": 186, "title": "Documentation needs update. queue vs queue_name", "user": {"login": "jgerry2002", "id": 10225304, "node_id": "MDQ6VXNlcjEwMjI1MzA0", "avatar_url": "https://avatars1.githubusercontent.com/u/10225304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgerry2002", "html_url": "https://github.com/jgerry2002", "followers_url": "https://api.github.com/users/jgerry2002/followers", "following_url": "https://api.github.com/users/jgerry2002/following{/other_user}", "gists_url": "https://api.github.com/users/jgerry2002/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgerry2002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgerry2002/subscriptions", "organizations_url": "https://api.github.com/users/jgerry2002/orgs", "repos_url": "https://api.github.com/users/jgerry2002/repos", "events_url": "https://api.github.com/users/jgerry2002/events{/privacy}", "received_events_url": "https://api.github.com/users/jgerry2002/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-04T23:35:20Z", "updated_at": "2018-12-11T23:34:02Z", "closed_at": "2018-12-11T23:34:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the example:\r\n\r\nscheduler = Scheduler(queue=queue) \r\n\r\nThis will return errors regarding connectivity to redis, when in fact it the option argument is now queue_name vs queue.\r\n\r\nWhen I tested:\r\n\r\nscheduler = Scheduler(queue_name=queue)\r\n\r\nEverything worked as it should.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/185", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/185/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/185/events", "html_url": "https://github.com/rq/rq-scheduler/issues/185", "id": 316549173, "node_id": "MDU6SXNzdWUzMTY1NDkxNzM=", "number": 185, "title": "rqscheduler in CLI throws Redis ResponseError ", "user": {"login": "rachel1792", "id": 19769777, "node_id": "MDQ6VXNlcjE5NzY5Nzc3", "avatar_url": "https://avatars0.githubusercontent.com/u/19769777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rachel1792", "html_url": "https://github.com/rachel1792", "followers_url": "https://api.github.com/users/rachel1792/followers", "following_url": "https://api.github.com/users/rachel1792/following{/other_user}", "gists_url": "https://api.github.com/users/rachel1792/gists{/gist_id}", "starred_url": "https://api.github.com/users/rachel1792/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rachel1792/subscriptions", "organizations_url": "https://api.github.com/users/rachel1792/orgs", "repos_url": "https://api.github.com/users/rachel1792/repos", "events_url": "https://api.github.com/users/rachel1792/events{/privacy}", "received_events_url": "https://api.github.com/users/rachel1792/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-22T04:55:48Z", "updated_at": "2019-04-02T00:39:04Z", "closed_at": "2019-04-02T00:39:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I type `rqscheduler` to kick off the scheduler, I get the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/rachelkogan/xword-app/env/bin/rqscheduler\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/Users/rachelkogan/xword-app/env/lib/python2.7/site-packages/rq_scheduler/scripts/rqscheduler.py\", line 61, in main\r\n    scheduler.run(burst=args.burst)\r\n  File \"/Users/rachelkogan/xword-app/env/lib/python2.7/site-packages/rq_scheduler/scheduler.py\", line 413, in run\r\n    if self.acquire_lock():\r\n  File \"/Users/rachelkogan/xword-app/env/lib/python2.7/site-packages/rq_scheduler/scheduler.py\", line 79, in acquire_lock\r\n    key, now, ex=expires, nx=True)\r\n  File \"/Users/rachelkogan/xword-app/env/lib/python2.7/site-packages/redis/client.py\", line 1173, in set\r\n    return self.execute_command('SET', *pieces)\r\n  File \"/Users/rachelkogan/xword-app/env/lib/python2.7/site-packages/redis/client.py\", line 668, in execute_command\r\n    return self.parse_response(connection, command_name, **options)\r\n  File \"/Users/rachelkogan/xword-app/env/lib/python2.7/site-packages/redis/client.py\", line 680, in parse_response\r\n    response = connection.read_response()\r\n  File \"/Users/rachelkogan/xword-app/env/lib/python2.7/site-packages/redis/connection.py\", line 629, in read_response\r\n    raise response\r\nredis.exceptions.ResponseError: wrong number of arguments for 'set' command\r\n```\r\n\r\nHere are the versions I have:\r\n```\r\nredis==2.10.6\r\nrq==0.10.0\r\nrq-scheduler==0.8.2\r\n```\r\n\r\nAny help would be appreciated! Let me know if you have any follow-up questions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/183", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/183/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/183/events", "html_url": "https://github.com/rq/rq-scheduler/issues/183", "id": 302042776, "node_id": "MDU6SXNzdWUzMDIwNDI3NzY=", "number": 183, "title": "Corn job at a specific time", "user": {"login": "goutomroy", "id": 3200284, "node_id": "MDQ6VXNlcjMyMDAyODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3200284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goutomroy", "html_url": "https://github.com/goutomroy", "followers_url": "https://api.github.com/users/goutomroy/followers", "following_url": "https://api.github.com/users/goutomroy/following{/other_user}", "gists_url": "https://api.github.com/users/goutomroy/gists{/gist_id}", "starred_url": "https://api.github.com/users/goutomroy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goutomroy/subscriptions", "organizations_url": "https://api.github.com/users/goutomroy/orgs", "repos_url": "https://api.github.com/users/goutomroy/repos", "events_url": "https://api.github.com/users/goutomroy/events{/privacy}", "received_events_url": "https://api.github.com/users/goutomroy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-03T23:47:56Z", "updated_at": "2018-12-11T23:27:07Z", "closed_at": "2018-12-11T23:27:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to start a job everyday at 5am or 7 am. How can I do that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/182", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/182/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/182/events", "html_url": "https://github.com/rq/rq-scheduler/issues/182", "id": 301727080, "node_id": "MDU6SXNzdWUzMDE3MjcwODA=", "number": 182, "title": "Latest changes in master missing", "user": {"login": "jezdez", "id": 1610, "node_id": "MDQ6VXNlcjE2MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jezdez", "html_url": "https://github.com/jezdez", "followers_url": "https://api.github.com/users/jezdez/followers", "following_url": "https://api.github.com/users/jezdez/following{/other_user}", "gists_url": "https://api.github.com/users/jezdez/gists{/gist_id}", "starred_url": "https://api.github.com/users/jezdez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jezdez/subscriptions", "organizations_url": "https://api.github.com/users/jezdez/orgs", "repos_url": "https://api.github.com/users/jezdez/repos", "events_url": "https://api.github.com/users/jezdez/events{/privacy}", "received_events_url": "https://api.github.com/users/jezdez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-02T10:51:06Z", "updated_at": "2018-03-03T00:04:20Z", "closed_at": "2018-03-03T00:04:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@selwin When looking at https://github.com/rq/rq-scheduler/compare/v0.7.0...v0.8.1 I see there were changes, but they are not in master. Did you push both the master as well as the tags?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/181", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/181/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/181/events", "html_url": "https://github.com/rq/rq-scheduler/issues/181", "id": 299467468, "node_id": "MDU6SXNzdWUyOTk0Njc0Njg=", "number": 181, "title": "Jobs scheduled to run forever disappear after a couple days. ", "user": {"login": "wroscoe", "id": 147582, "node_id": "MDQ6VXNlcjE0NzU4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/147582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wroscoe", "html_url": "https://github.com/wroscoe", "followers_url": "https://api.github.com/users/wroscoe/followers", "following_url": "https://api.github.com/users/wroscoe/following{/other_user}", "gists_url": "https://api.github.com/users/wroscoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/wroscoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wroscoe/subscriptions", "organizations_url": "https://api.github.com/users/wroscoe/orgs", "repos_url": "https://api.github.com/users/wroscoe/repos", "events_url": "https://api.github.com/users/wroscoe/events{/privacy}", "received_events_url": "https://api.github.com/users/wroscoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-22T18:54:32Z", "updated_at": "2018-02-28T01:02:22Z", "closed_at": "2018-02-28T01:02:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use rq-scheduler to run regular jobs on remote computers. This works great for a couple days then then the scheduled jobs disappear. Is this a common problem with an easy fix? It's super frustrating to debug. Hear is an issue I created in the rq repo that describes the problem. \r\n\r\nhttps://github.com/rq/rq/issues/932", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/179", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/179/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/179/events", "html_url": "https://github.com/rq/rq-scheduler/issues/179", "id": 295466951, "node_id": "MDU6SXNzdWUyOTU0NjY5NTE=", "number": 179, "title": "Conflicting argument for -q in scripts/rqscheduler.py", "user": {"login": "sourcepirate", "id": 5940286, "node_id": "MDQ6VXNlcjU5NDAyODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcepirate", "html_url": "https://github.com/sourcepirate", "followers_url": "https://api.github.com/users/sourcepirate/followers", "following_url": "https://api.github.com/users/sourcepirate/following{/other_user}", "gists_url": "https://api.github.com/users/sourcepirate/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcepirate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcepirate/subscriptions", "organizations_url": "https://api.github.com/users/sourcepirate/orgs", "repos_url": "https://api.github.com/users/sourcepirate/repos", "events_url": "https://api.github.com/users/sourcepirate/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcepirate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-08T10:54:07Z", "updated_at": "2018-03-02T07:47:53Z", "closed_at": "2018-03-02T07:47:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The same -q argument is conflicting between --quite and --queue-class. Which causes problem when running the rqscheduler cli.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/178", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/178/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/178/events", "html_url": "https://github.com/rq/rq-scheduler/issues/178", "id": 295114076, "node_id": "MDU6SXNzdWUyOTUxMTQwNzY=", "number": 178, "title": "Is it possible to get job I'd after creating a job?", "user": {"login": "gohanko", "id": 26451183, "node_id": "MDQ6VXNlcjI2NDUxMTgz", "avatar_url": "https://avatars2.githubusercontent.com/u/26451183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gohanko", "html_url": "https://github.com/gohanko", "followers_url": "https://api.github.com/users/gohanko/followers", "following_url": "https://api.github.com/users/gohanko/following{/other_user}", "gists_url": "https://api.github.com/users/gohanko/gists{/gist_id}", "starred_url": "https://api.github.com/users/gohanko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gohanko/subscriptions", "organizations_url": "https://api.github.com/users/gohanko/orgs", "repos_url": "https://api.github.com/users/gohanko/repos", "events_url": "https://api.github.com/users/gohanko/events{/privacy}", "received_events_url": "https://api.github.com/users/gohanko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-07T12:09:09Z", "updated_at": "2018-12-11T23:34:54Z", "closed_at": "2018-12-11T23:34:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to have multiple users schedule jobs but I can't have them interfere with each other's jobs so could you get job IDs after creating a job? This is so users can cancel jobs and re add them again", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/177", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/177/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/177/events", "html_url": "https://github.com/rq/rq-scheduler/issues/177", "id": 294367491, "node_id": "MDU6SXNzdWUyOTQzNjc0OTE=", "number": 177, "title": "ArgumentError: argument -q/--queue-class: conflicting option string: -q", "user": {"login": "pida42", "id": 10919081, "node_id": "MDQ6VXNlcjEwOTE5MDgx", "avatar_url": "https://avatars0.githubusercontent.com/u/10919081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pida42", "html_url": "https://github.com/pida42", "followers_url": "https://api.github.com/users/pida42/followers", "following_url": "https://api.github.com/users/pida42/following{/other_user}", "gists_url": "https://api.github.com/users/pida42/gists{/gist_id}", "starred_url": "https://api.github.com/users/pida42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pida42/subscriptions", "organizations_url": "https://api.github.com/users/pida42/orgs", "repos_url": "https://api.github.com/users/pida42/repos", "events_url": "https://api.github.com/users/pida42/events{/privacy}", "received_events_url": "https://api.github.com/users/pida42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-05T11:56:07Z", "updated_at": "2018-12-11T23:26:47Z", "closed_at": "2018-12-11T23:26:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting this error after commit *eaa31df*\r\n\r\nCommand: `rqscheduler --host redis --port 6379 --db 0 --interval 3`\r\n\r\n```\r\nTraceback (most recent call last):\r\nFile \"/usr/local/bin/rqscheduler\", line 11, in <module>\r\n  sys.exit(main())\r\nFile \"/usr/local/lib/python3.5/dist-packages/rq_scheduler/scripts/rqscheduler.py\", line 31, in main\r\n  parser.add_argument('-q', '--queue-class', help='Custom RQ Queue class')\r\nFile \"/usr/lib/python3.5/argparse.py\", line 1353, in add_argument\r\n  return self._add_action(action)\r\nFile \"/usr/lib/python3.5/argparse.py\", line 1716, in _add_action\r\n  self._optionals._add_action(action)\r\nFile \"/usr/lib/python3.5/argparse.py\", line 1557, in _add_action\r\n  action = super(_ArgumentGroup, self)._add_action(action)\r\nFile \"/usr/lib/python3.5/argparse.py\", line 1367, in _add_action\r\n  self._check_conflict(action)\r\nFile \"/usr/lib/python3.5/argparse.py\", line 1506, in _check_conflict\r\n  conflict_handler(action, confl_optionals)\r\nFile \"/usr/lib/python3.5/argparse.py\", line 1515, in _handle_conflict_error\r\n  raise ArgumentError(action, message % conflict_string)\r\nargparse.ArgumentError: argument -q/--queue-class: conflicting option string: -q\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/175", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/175/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/175/events", "html_url": "https://github.com/rq/rq-scheduler/issues/175", "id": 290817478, "node_id": "MDU6SXNzdWUyOTA4MTc0Nzg=", "number": 175, "title": "Mabye move rq-scheduler to the rq organisation", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-23T12:24:13Z", "updated_at": "2018-01-31T00:10:34Z", "closed_at": "2018-01-31T00:10:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Please excuse the pushiness, I'm doing a little gentle evangelism for the rq organisation.\r\n\r\nrq has now moved to an organisation https://github.com/rq.\r\n\r\nWould you consider moving  rq-scheduler to that organisation. Obviously all collaborators can become collaborators on the organisation.\r\n\r\nThoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/165", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/165/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/165/events", "html_url": "https://github.com/rq/rq-scheduler/issues/165", "id": 250279157, "node_id": "MDU6SXNzdWUyNTAyNzkxNTc=", "number": 165, "title": "Is the schedule job survive after blackout?", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-15T10:33:54Z", "updated_at": "2018-06-14T03:06:33Z", "closed_at": "2018-06-14T03:06:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a very noob question.\r\nIs the schedule job survive after my server blackout?\r\nFrom my understanding. It will persist and will continue run if that job is not triggered.\r\n\r\nI use `Redis` on the Docker ecosystem and let it store the data on physical volume\r\n```\r\nredis:\r\n  image: redis:latest\r\n  command: redis-server --appendonly yes\r\n  volumes:\r\n  - ./data:/data\r\n```\r\n**Reference:**\r\nhttps://stackoverflow.com/questions/35022883/why-cant-redis-access-the-disk-in-docker-compose", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/163", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/163/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/163/events", "html_url": "https://github.com/rq/rq-scheduler/issues/163", "id": 246953045, "node_id": "MDU6SXNzdWUyNDY5NTMwNDU=", "number": 163, "title": "Periodic Schedule: Interval Parameter Issue", "user": {"login": "ryanermita", "id": 4478433, "node_id": "MDQ6VXNlcjQ0Nzg0MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4478433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanermita", "html_url": "https://github.com/ryanermita", "followers_url": "https://api.github.com/users/ryanermita/followers", "following_url": "https://api.github.com/users/ryanermita/following{/other_user}", "gists_url": "https://api.github.com/users/ryanermita/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanermita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanermita/subscriptions", "organizations_url": "https://api.github.com/users/ryanermita/orgs", "repos_url": "https://api.github.com/users/ryanermita/repos", "events_url": "https://api.github.com/users/ryanermita/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanermita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-01T04:37:51Z", "updated_at": "2017-09-03T02:24:06Z", "closed_at": "2017-09-03T02:24:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having an issue about the `interval` parameter of rq scheduler.\r\nProject spec\r\n- Django 1.10.6\r\n- django-rq 0.9.6\r\n- rq-scheduler 0.7.0\r\n- Python 2.7.13\r\n\r\n```\r\nimport django_rq\r\nfrom datetime import datetime\r\n\r\nscheduler = django_rq.get_scheduler(\"default\")\r\nscheduler.schedule(\r\n    scheduled_time=datetime.utcnow(),\r\n    func=some_function,\r\n    args=[],\r\n    kwargs={},\r\n    interval=30,\r\n    repeat=None\r\n)\r\nscheduler.run()\r\n```\r\n\r\nThis scheduler run but it does not work as intended. The function run every minute and not as specified on the interval parameter.\r\n\r\nI checked the `scheduler.__dict__` using python console and found out that there is a `_interval` attribute with the value of 60. It seems the scheduler uses this interval and not the interval on the schedule parameter.\r\n\r\n`{'_interval': 60, 'connection': Redis<ConnectionPool<Connection<host=localhost,port=6379,db=0>>>, 'queue_name': 'default', 'log': <logging.Logger object at 0x10213e250>}`\r\n\r\nas of now my work around is to set this `_interval` before running my scheduler.\r\n\r\n`scheduler._interval = 30`\r\n\r\nIs there any cleaner way to make this work. Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/147", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/147/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/147/events", "html_url": "https://github.com/rq/rq-scheduler/issues/147", "id": 212415201, "node_id": "MDU6SXNzdWUyMTI0MTUyMDE=", "number": 147, "title": "Specify Job class for Scheduler", "user": {"login": "antoine-lizee", "id": 2957716, "node_id": "MDQ6VXNlcjI5NTc3MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2957716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoine-lizee", "html_url": "https://github.com/antoine-lizee", "followers_url": "https://api.github.com/users/antoine-lizee/followers", "following_url": "https://api.github.com/users/antoine-lizee/following{/other_user}", "gists_url": "https://api.github.com/users/antoine-lizee/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoine-lizee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoine-lizee/subscriptions", "organizations_url": "https://api.github.com/users/antoine-lizee/orgs", "repos_url": "https://api.github.com/users/antoine-lizee/repos", "events_url": "https://api.github.com/users/antoine-lizee/events{/privacy}", "received_events_url": "https://api.github.com/users/antoine-lizee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-07T12:14:41Z", "updated_at": "2018-10-16T15:02:53Z", "closed_at": "2018-10-16T15:02:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since the `Scheduler()` object is also responsible for creating the job (unless I missed something), it would be desirable to have it accept a `job_class` and behave like the `Queue` objects.\r\n\r\nAnother solution would be to specify a queue object when scheduling a job (and at object instantiation as default) so it can 'inherit' attributes and behavior from the queue directly: not only the `queue_name` but also the `job_class` and even the job creation method maybe ? \r\nWhat is the thinking behind this versus duplicating all the job creation logic from the `Queue` objects into the `Scheduler` ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/133", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/133/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/133/events", "html_url": "https://github.com/rq/rq-scheduler/issues/133", "id": 174930868, "node_id": "MDU6SXNzdWUxNzQ5MzA4Njg=", "number": 133, "title": "Retrieve a scheduled job by its id?", "user": {"login": "atbaker", "id": 826669, "node_id": "MDQ6VXNlcjgyNjY2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/826669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atbaker", "html_url": "https://github.com/atbaker", "followers_url": "https://api.github.com/users/atbaker/followers", "following_url": "https://api.github.com/users/atbaker/following{/other_user}", "gists_url": "https://api.github.com/users/atbaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atbaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atbaker/subscriptions", "organizations_url": "https://api.github.com/users/atbaker/orgs", "repos_url": "https://api.github.com/users/atbaker/repos", "events_url": "https://api.github.com/users/atbaker/events{/privacy}", "received_events_url": "https://api.github.com/users/atbaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-04T04:33:20Z", "updated_at": "2016-09-08T15:37:34Z", "closed_at": "2016-09-08T15:37:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\n\nFirst - thank you for maintaining this project. I needed a task scheduler for my current project and using something like Celery would have been way too big a dependency for what I needed.\n\nIs there any way to retrieve a job from the scheduler by its ID? Something like:\n\n```\nscheduler.get_job('067301e0-decb-4155-ba0e-7e8cb3ee67e6')\n```\n\nIf not, I'd be willing to put together a PR that adds that feature.\n\nThanks again!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/129", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/129/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/129/events", "html_url": "https://github.com/rq/rq-scheduler/issues/129", "id": 168921460, "node_id": "MDU6SXNzdWUxNjg5MjE0NjA=", "number": 129, "title": "Chnaging intervall scheduler checks for tasks", "user": {"login": "wpxgit", "id": 10629779, "node_id": "MDQ6VXNlcjEwNjI5Nzc5", "avatar_url": "https://avatars2.githubusercontent.com/u/10629779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wpxgit", "html_url": "https://github.com/wpxgit", "followers_url": "https://api.github.com/users/wpxgit/followers", "following_url": "https://api.github.com/users/wpxgit/following{/other_user}", "gists_url": "https://api.github.com/users/wpxgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/wpxgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wpxgit/subscriptions", "organizations_url": "https://api.github.com/users/wpxgit/orgs", "repos_url": "https://api.github.com/users/wpxgit/repos", "events_url": "https://api.github.com/users/wpxgit/events{/privacy}", "received_events_url": "https://api.github.com/users/wpxgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-02T15:52:17Z", "updated_at": "2016-08-17T07:00:31Z", "closed_at": "2016-08-17T07:00:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "So far i can see the scheduler checks every minute for new tasks.\n\nI like to queue tasks faster after they had been added to schedule and also to queue a task every 5 seconds.\n\nIt seems that the scheduler-intervall is hard coded at this line:\nhttps://github.com/ui/rq-scheduler/blob/master/rq_scheduler/scheduler.py#L23\n\nMust i consider something if i like to change the value in the code e.g. to 5 seconds?\n\nWhats the best way to make it configurable?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/128", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/128/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/128/events", "html_url": "https://github.com/rq/rq-scheduler/issues/128", "id": 168660866, "node_id": "MDU6SXNzdWUxNjg2NjA4NjY=", "number": 128, "title": "Job sending mails repeatedly", "user": {"login": "kishan3", "id": 4090947, "node_id": "MDQ6VXNlcjQwOTA5NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4090947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kishan3", "html_url": "https://github.com/kishan3", "followers_url": "https://api.github.com/users/kishan3/followers", "following_url": "https://api.github.com/users/kishan3/following{/other_user}", "gists_url": "https://api.github.com/users/kishan3/gists{/gist_id}", "starred_url": "https://api.github.com/users/kishan3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kishan3/subscriptions", "organizations_url": "https://api.github.com/users/kishan3/orgs", "repos_url": "https://api.github.com/users/kishan3/repos", "events_url": "https://api.github.com/users/kishan3/events{/privacy}", "received_events_url": "https://api.github.com/users/kishan3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-01T14:34:41Z", "updated_at": "2020-01-07T09:36:16Z", "closed_at": "2020-01-07T09:36:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my scheduler in my apps.py I am using django 1.9.\n\nfrom django.apps import AppConfig\n\n```\nclass ProjectConfig(AppConfig):\n    name = 'project'\n\n    def ready(self):\n        from actstream import registry\n        from .signals import incentive_for_job_approved\n        registry.register(self.get_model('Job'))\n\n        import django_rq\n        from datetime import datetime\n        from messaging.scheduled_tasks import broadcast_approved_jobs\n\n        scheduler = django_rq.get_scheduler(\"default\")\n\n        now = datetime.now()\n        start = now.replace(hour=8, minute=00, second=0, microsecond=0)\n        scheduler.schedule(\n            scheduled_time=start,  # Time for first execution, in UTC timezone\n            func=broadcast_approved_jobs,  # Function to be queued\n            interval=86400,  # Time before the function is called again, in seconds\n            repeat=None  # Repeat this number of times (None means repeat forever)\n        )\n```\n\nAs you can see even though interval is 24 hrs . I am getting repeated mails by using this queue.\nCan any one please help?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/122", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/122/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/122/events", "html_url": "https://github.com/rq/rq-scheduler/issues/122", "id": 153212230, "node_id": "MDU6SXNzdWUxNTMyMTIyMzA=", "number": 122, "title": "Scheduler.get_jobs should allow pagination", "user": {"login": "selwin", "id": 188658, "node_id": "MDQ6VXNlcjE4ODY1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/188658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selwin", "html_url": "https://github.com/selwin", "followers_url": "https://api.github.com/users/selwin/followers", "following_url": "https://api.github.com/users/selwin/following{/other_user}", "gists_url": "https://api.github.com/users/selwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/selwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selwin/subscriptions", "organizations_url": "https://api.github.com/users/selwin/orgs", "repos_url": "https://api.github.com/users/selwin/repos", "events_url": "https://api.github.com/users/selwin/events{/privacy}", "received_events_url": "https://api.github.com/users/selwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-05T11:15:27Z", "updated_at": "2016-05-06T03:56:44Z", "closed_at": "2016-05-06T03:56:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "RQ's `Queue.get_jobs` accepts  `offset` and `length` arguments. We should mimic it here.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/118", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/118/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/118/events", "html_url": "https://github.com/rq/rq-scheduler/issues/118", "id": 151402151, "node_id": "MDU6SXNzdWUxNTE0MDIxNTE=", "number": 118, "title": "Implement scheduler.count() method", "user": {"login": "smaccona", "id": 394952, "node_id": "MDQ6VXNlcjM5NDk1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/394952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaccona", "html_url": "https://github.com/smaccona", "followers_url": "https://api.github.com/users/smaccona/followers", "following_url": "https://api.github.com/users/smaccona/following{/other_user}", "gists_url": "https://api.github.com/users/smaccona/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaccona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaccona/subscriptions", "organizations_url": "https://api.github.com/users/smaccona/orgs", "repos_url": "https://api.github.com/users/smaccona/repos", "events_url": "https://api.github.com/users/smaccona/events{/privacy}", "received_events_url": "https://api.github.com/users/smaccona/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-27T14:36:37Z", "updated_at": "2016-05-06T03:53:03Z", "closed_at": "2016-05-06T03:53:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A `scheduler.count()` method would be useful to ascertain how many jobs are scheduled without having to retrieve them. This is fairly easy to do with Redis `ZCOUNT` and would potentially be helpful for https://github.com/ui/django-rq/pull/121. I intend to make a PR for this.\n\nI can't think of a way to efficiently get a count of all jobs destined for a specific queue: the destination queue is stored in `Job.origin`, but there's no way I can see to filter for that at the Redis level. If anyone can think of a way to avoid calling `scheduler.get_jobs()` to retrieve all jobs and then filtering for the `origin` of each job, please let me know.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/116", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/116/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/116/events", "html_url": "https://github.com/rq/rq-scheduler/issues/116", "id": 149503086, "node_id": "MDU6SXNzdWUxNDk1MDMwODY=", "number": 116, "title": "Jobs scheduled via cron expire automatically after 500 sec if the time between two job executions exceeds 500 sec", "user": {"login": "csaba-stylight", "id": 13150384, "node_id": "MDQ6VXNlcjEzMTUwMzg0", "avatar_url": "https://avatars3.githubusercontent.com/u/13150384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csaba-stylight", "html_url": "https://github.com/csaba-stylight", "followers_url": "https://api.github.com/users/csaba-stylight/followers", "following_url": "https://api.github.com/users/csaba-stylight/following{/other_user}", "gists_url": "https://api.github.com/users/csaba-stylight/gists{/gist_id}", "starred_url": "https://api.github.com/users/csaba-stylight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csaba-stylight/subscriptions", "organizations_url": "https://api.github.com/users/csaba-stylight/orgs", "repos_url": "https://api.github.com/users/csaba-stylight/repos", "events_url": "https://api.github.com/users/csaba-stylight/events{/privacy}", "received_events_url": "https://api.github.com/users/csaba-stylight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-19T15:52:44Z", "updated_at": "2016-05-05T23:56:12Z", "closed_at": "2016-05-05T23:56:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Jobs scheduled via `Scheduler.cron` expire automatically after 500 sec if the time between two job executions exceeds 500 sec. (see #115)\n\nThis makes scheduling jobs via `Scheduler.cron` kinda meaningless (unless they are executed at least every 500 sec).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/109", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/109/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/109/events", "html_url": "https://github.com/rq/rq-scheduler/issues/109", "id": 141352524, "node_id": "MDU6SXNzdWUxNDEzNTI1MjQ=", "number": 109, "title": "Monitor scheduled jobs?", "user": {"login": "sburns", "id": 440820, "node_id": "MDQ6VXNlcjQ0MDgyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/440820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sburns", "html_url": "https://github.com/sburns", "followers_url": "https://api.github.com/users/sburns/followers", "following_url": "https://api.github.com/users/sburns/following{/other_user}", "gists_url": "https://api.github.com/users/sburns/gists{/gist_id}", "starred_url": "https://api.github.com/users/sburns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sburns/subscriptions", "organizations_url": "https://api.github.com/users/sburns/orgs", "repos_url": "https://api.github.com/users/sburns/repos", "events_url": "https://api.github.com/users/sburns/events{/privacy}", "received_events_url": "https://api.github.com/users/sburns/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-03-16T17:54:40Z", "updated_at": "2016-04-26T20:57:39Z", "closed_at": "2016-03-17T00:46:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does anyone have any advice about how to monitor scheduled jobs?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/108", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/108/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/108/events", "html_url": "https://github.com/rq/rq-scheduler/issues/108", "id": 133059462, "node_id": "MDU6SXNzdWUxMzMwNTk0NjI=", "number": 108, "title": "How can I confirm scheduled jobs are being queued?", "user": {"login": "cmanallen", "id": 6018782, "node_id": "MDQ6VXNlcjYwMTg3ODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6018782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmanallen", "html_url": "https://github.com/cmanallen", "followers_url": "https://api.github.com/users/cmanallen/followers", "following_url": "https://api.github.com/users/cmanallen/following{/other_user}", "gists_url": "https://api.github.com/users/cmanallen/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmanallen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmanallen/subscriptions", "organizations_url": "https://api.github.com/users/cmanallen/orgs", "repos_url": "https://api.github.com/users/cmanallen/repos", "events_url": "https://api.github.com/users/cmanallen/events{/privacy}", "received_events_url": "https://api.github.com/users/cmanallen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-11T19:04:51Z", "updated_at": "2016-02-24T01:55:23Z", "closed_at": "2016-02-24T01:55:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "@selwin Is there some debug output I can look at that shows the scheduled job has been run?\n\nHow I'm scheduling the jobs:\n\n``` python\nscheduler.schedule(\n    func=disable_products, interval=1, scheduled_time=datetime.utcnow(),\n    repeat=None)\nprint scheduler.get_jobs() # [Job(u'ee309ceb-46d0-4817-8be2-cf1d41f0428e', enqueued_at=datetime.datetime(2016, 2, 10, 21, 50, 48))]\n```\n\nHow I'm running the rqscheduler script:\n\n```\ndocker-compose run web rqscheduler --host redis --port 6379 --db 1 --interval 1\n```\n\nThe cursor just blinks endlessly after executing the above command.  Is that normal behavior?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/106", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/106/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/106/events", "html_url": "https://github.com/rq/rq-scheduler/issues/106", "id": 127285879, "node_id": "MDU6SXNzdWUxMjcyODU4Nzk=", "number": 106, "title": "Current (0.5.1) release is more than a year old", "user": {"login": "robert-osborne", "id": 382392, "node_id": "MDQ6VXNlcjM4MjM5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/382392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robert-osborne", "html_url": "https://github.com/robert-osborne", "followers_url": "https://api.github.com/users/robert-osborne/followers", "following_url": "https://api.github.com/users/robert-osborne/following{/other_user}", "gists_url": "https://api.github.com/users/robert-osborne/gists{/gist_id}", "starred_url": "https://api.github.com/users/robert-osborne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robert-osborne/subscriptions", "organizations_url": "https://api.github.com/users/robert-osborne/orgs", "repos_url": "https://api.github.com/users/robert-osborne/repos", "events_url": "https://api.github.com/users/robert-osborne/events{/privacy}", "received_events_url": "https://api.github.com/users/robert-osborne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-01-18T18:30:21Z", "updated_at": "2016-03-14T11:57:04Z", "closed_at": "2016-03-14T11:57:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "A number of features and bug fixes in the master code base are not available by pip install.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/105", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/105/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/105/events", "html_url": "https://github.com/rq/rq-scheduler/issues/105", "id": 126274002, "node_id": "MDU6SXNzdWUxMjYyNzQwMDI=", "number": 105, "title": "Run rq-scheduler in same process as rq", "user": {"login": "sandlerben", "id": 4823572, "node_id": "MDQ6VXNlcjQ4MjM1NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4823572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandlerben", "html_url": "https://github.com/sandlerben", "followers_url": "https://api.github.com/users/sandlerben/followers", "following_url": "https://api.github.com/users/sandlerben/following{/other_user}", "gists_url": "https://api.github.com/users/sandlerben/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandlerben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandlerben/subscriptions", "organizations_url": "https://api.github.com/users/sandlerben/orgs", "repos_url": "https://api.github.com/users/sandlerben/repos", "events_url": "https://api.github.com/users/sandlerben/events{/privacy}", "received_events_url": "https://api.github.com/users/sandlerben/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-01-12T20:58:05Z", "updated_at": "2019-12-28T13:48:13Z", "closed_at": "2016-01-13T01:37:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Heroku for deployments so I'm limited to one worker process. Right now, I am running this code as my worker:\n\n``` python\n\"\"\"Initializes a slim rq task queue. File taken from\nhttp://python-rq.org/patterns/\"\"\"\n\nimport os\nimport urlparse\nfrom redis import Redis\nfrom rq import Worker, Queue, Connection\n\nlisten = ['high', 'default', 'low']\n\nredis_url = os.getenv('REDISTOGO_URL') or 'http://localhost:6379'\nif not redis_url:\n    raise RuntimeError('Set up Redis To Go first.')\n\nurlparse.uses_netloc.append('redis')\nurl = urlparse.urlparse(redis_url)\nconn = Redis(host=url.hostname, port=url.port, db=0, password=url.password)\n\nif __name__ == '__main__':\n    with Connection(conn):\n        worker = Worker(map(Queue, listen))\n        worker.work()\n```\n\nCan I run the scheduler in this same worker process? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/103", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/103/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/103/events", "html_url": "https://github.com/rq/rq-scheduler/issues/103", "id": 120857307, "node_id": "MDU6SXNzdWUxMjA4NTczMDc=", "number": 103, "title": "`pip install rq-scheduler` does not install latest version (0.5.1)", "user": {"login": "ciex", "id": 278463, "node_id": "MDQ6VXNlcjI3ODQ2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/278463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ciex", "html_url": "https://github.com/ciex", "followers_url": "https://api.github.com/users/ciex/followers", "following_url": "https://api.github.com/users/ciex/following{/other_user}", "gists_url": "https://api.github.com/users/ciex/gists{/gist_id}", "starred_url": "https://api.github.com/users/ciex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ciex/subscriptions", "organizations_url": "https://api.github.com/users/ciex/orgs", "repos_url": "https://api.github.com/users/ciex/repos", "events_url": "https://api.github.com/users/ciex/events{/privacy}", "received_events_url": "https://api.github.com/users/ciex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-07T20:12:21Z", "updated_at": "2016-02-24T01:54:33Z", "closed_at": "2016-02-24T01:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When installing rq-scheduler using `pip install rq-scheduler` the files installed seem not to be from the latest version. Specifically, the `scheduler.schedule` method lacks the `id` and `description` keyword arguments. \n\nReproduction:\n\n```\n$ pip install rq-scheduler\n[...]\nSuccessfully installed rq-scheduler-0.5.1\n$ pip show rq-scheduler\n[...]\nLocation: /usr/local/lib/python2.7/site-packages\n$ cat /usr/local/lib/python2.7/site-packages/rq-scheduler/__init__.py\nVERSION = (0, 5, 1)\n\nfrom .scheduler import Scheduler\n$ cat /usr/local/lib/python2.7/site-packages/rq-scheduler/scheduler.py\nimport logging\nimport signal\nimport time\nimport warnings\n\nfrom datetime import datetime, timedelta\nfrom itertools import repeat\n\nfrom rq.exceptions import NoSuchJobError\nfrom rq.job import Job\nfrom rq.queue import Queue\n\nfrom redis import WatchError\n\nfrom .utils import from_unix, to_unix\n\nlogger = logging.getLogger(__name__)\n\n\nclass Scheduler(object):\n    scheduler_key = 'rq:scheduler'\n    scheduled_jobs_key = 'rq:scheduler:scheduled_jobs'\n\n    def __init__(self, queue_name='default', interval=60, connection=None):\n        from rq.connections import resolve_connection\n        self.connection = resolve_connection(connection)\n        self.queue_name = queue_name\n        self._interval = interval\n        self.log = logger\n\n    def register_birth(self):\n        if self.connection.exists(self.scheduler_key) and \\\n                not self.connection.hexists(self.scheduler_key, 'death'):\n            raise ValueError(\"There's already an active RQ scheduler\")\n        key = self.scheduler_key\n        now = time.time()\n        with self.connection._pipeline() as p:\n            p.delete(key)\n            p.hset(key, 'birth', now)\n            # Set scheduler key to expire a few seconds after polling interval\n            # This way, the key will automatically expire if scheduler\n            # quits unexpectedly\n            p.expire(key, int(self._interval) + 10)\n            p.execute()\n\n    def register_death(self):\n        \"\"\"Registers its own death.\"\"\"\n        with self.connection._pipeline() as p:\n            p.hset(self.scheduler_key, 'death', time.time())\n            p.expire(self.scheduler_key, 60)\n            p.execute()\n\n    def _install_signal_handlers(self):\n        \"\"\"\n        Installs signal handlers for handling SIGINT and SIGTERM\n        gracefully.\n        \"\"\"\n\n        def stop(signum, frame):\n            \"\"\"\n            Register scheduler's death and exit.\n            \"\"\"\n            self.log.info('Shutting down RQ scheduler...')\n            self.register_death()\n            raise SystemExit()\n\n        signal.signal(signal.SIGINT, stop)\n        signal.signal(signal.SIGTERM, stop)\n\n    def _create_job(self, func, args=None, kwargs=None, commit=True,\n                    result_ttl=None, queue_name=None):\n        \"\"\"\n        Creates an RQ job and saves it to Redis.\n        \"\"\"\n        if args is None:\n            args = ()\n        if kwargs is None:\n            kwargs = {}\n        job = Job.create(func, args=args, connection=self.connection,\n                         kwargs=kwargs, result_ttl=result_ttl)\n        job.origin = queue_name or self.queue_name\n        if commit:\n            job.save()\n        return job\n\n    def enqueue_at(self, scheduled_time, func, *args, **kwargs):\n        \"\"\"\n        Pushes a job to the scheduler queue. The scheduled queue is a Redis sorted\n        set ordered by timestamp - which in this case is job's scheduled execution time.\n\n        Usage:\n\n        from datetime import datetime\n        from redis import Redis\n        from rq.scheduler import Scheduler\n\n        from foo import func\n\n        redis = Redis()\n        scheduler = Scheduler(queue_name='default', connection=redis)\n        scheduler.enqueue_at(datetime(2020, 1, 1), func, 'argument', keyword='argument')\n        \"\"\"\n        job = self._create_job(func, args=args, kwargs=kwargs)\n        self.connection._zadd(self.scheduled_jobs_key,\n                              to_unix(scheduled_time),\n                              job.id)\n        return job\n\n    def enqueue_in(self, time_delta, func, *args, **kwargs):\n        \"\"\"\n        Similar to ``enqueue_at``, but accepts a timedelta instead of datetime object.\n        The job's scheduled execution time will be calculated by adding the timedelta\n        to datetime.utcnow().\n        \"\"\"\n        job = self._create_job(func, args=args, kwargs=kwargs)\n        self.connection._zadd(self.scheduled_jobs_key,\n                              to_unix(datetime.utcnow() + time_delta),\n                              job.id)\n        return job\n\n    def enqueue_periodic(self, scheduled_time, interval, repeat, func,\n                         *args, **kwargs):\n        \"\"\"\n        Schedule a job to be periodically executed, at a certain interval.\n        \"\"\"\n        warnings.warn(\"'enqueue_periodic()' has been deprecated in favor of '.schedule()'\"\n                      \"and will be removed in a future release.\", DeprecationWarning)\n        return self.schedule(scheduled_time, func, args=args, kwargs=kwargs,\n                            interval=interval, repeat=repeat)\n\n    def schedule(self, scheduled_time, func, args=None, kwargs=None,\n                interval=None, repeat=None, result_ttl=None, timeout=None, queue_name=None):\n        \"\"\"\n        Schedule a job to be periodically executed, at a certain interval.\n        \"\"\"\n        # Set result_ttl to -1 for periodic jobs, if result_ttl not specified\n        if interval is not None and result_ttl is None:\n            result_ttl = -1\n        job = self._create_job(func, args=args, kwargs=kwargs, commit=False,\n                               result_ttl=result_ttl, queue_name=queue_name)\n        if interval is not None:\n            job.meta['interval'] = int(interval)\n        if repeat is not None:\n            job.meta['repeat'] = int(repeat)\n        if repeat and interval is None:\n            raise ValueError(\"Can't repeat a job without interval argument\")\n        if timeout is not None:\n            job.timeout = timeout\n        job.save()\n        self.connection._zadd(self.scheduled_jobs_key,\n                              to_unix(scheduled_time),\n                              job.id)\n        return job\n\n    def enqueue(self, scheduled_time, func, args=None, kwargs=None,\n                interval=None, repeat=None, result_ttl=None, queue_name=None):\n        \"\"\"\n        This method is deprecated and only left in as a backwards compatibility\n        alias for schedule().\n        \"\"\"\n        warnings.warn(\"'enqueue()' has been deprecated in favor of '.schedule()'\"\n                      \"and will be removed in a future release.\", DeprecationWarning)\n        return self.schedule(scheduled_time, func, args, kwargs, interval,\n                             repeat, result_ttl, queue_name=queue_name)\n\n    def cancel(self, job):\n        \"\"\"\n        Pulls a job from the scheduler queue. This function accepts either a\n        job_id or a job instance.\n        \"\"\"\n        if isinstance(job, Job):\n            self.connection.zrem(self.scheduled_jobs_key, job.id)\n        else:\n            self.connection.zrem(self.scheduled_jobs_key, job)\n\n    def __contains__(self, item):\n        \"\"\"\n        Returns a boolean indicating whether the given job instance or job id is\n        scheduled for execution.\n        \"\"\"\n        job_id = item\n        if isinstance(item, Job):\n            job_id = item.id\n        return self.connection.zscore(self.scheduled_jobs_key, job_id) is not None\n\n    def change_execution_time(self, job, date_time):\n        \"\"\"\n        Change a job's execution time. Wrap this in a transaction to prevent race condition.\n        \"\"\"\n        with self.connection._pipeline() as pipe:\n            while 1:\n                try:\n                    pipe.watch(self.scheduled_jobs_key)\n                    if pipe.zscore(self.scheduled_jobs_key, job.id) is None:\n                        raise ValueError('Job not in scheduled jobs queue')\n                    pipe.zadd(self.scheduled_jobs_key, to_unix(date_time), job.id)\n                    break\n                except WatchError:\n                    # If job is still in the queue, retry otherwise job is already executed\n                    # so we raise an error\n                    if pipe.zscore(self.scheduled_jobs_key, job.id) is None:\n                        raise ValueError('Job not in scheduled jobs queue')\n                    continue\n\n    def get_jobs(self, until=None, with_times=False):\n        \"\"\"\n        Returns a list of job instances that will be queued until the given time.\n        If no 'until' argument is given all jobs are returned. This function\n        accepts datetime and timedelta instances as well as integers representing\n        epoch values.\n        If with_times is True a list of tuples consisting of the job instance and\n        it's scheduled execution time is returned.\n        \"\"\"\n        def epoch_to_datetime(epoch):\n            return from_unix(float(epoch))\n\n        if until is None:\n            until = \"+inf\"\n        elif isinstance(until, datetime):\n            until = to_unix(until)\n        elif isinstance(until, timedelta):\n            until = to_unix((datetime.utcnow() + until))\n        job_ids = self.connection.zrangebyscore(self.scheduled_jobs_key, 0,\n                                                until, withscores=with_times,\n                                                score_cast_func=epoch_to_datetime)\n        if not with_times:\n            job_ids = zip(job_ids, repeat(None))\n        jobs = []\n        for job_id, sched_time in job_ids:\n            job_id = job_id.decode('utf-8')\n            try:\n                job = Job.fetch(job_id, connection=self.connection)\n                if with_times:\n                    jobs.append((job, sched_time))\n                else:\n                    jobs.append(job)\n            except NoSuchJobError:\n                # Delete jobs that aren't there from scheduler\n                self.cancel(job_id)\n        return jobs\n\n    def get_jobs_to_queue(self, with_times=False):\n        \"\"\"\n        Returns a list of job instances that should be queued\n        (score lower than current timestamp).\n        If with_times is True a list of tuples consisting of the job instance and\n        it's scheduled execution time is returned.\n        \"\"\"\n        return self.get_jobs(to_unix(datetime.utcnow()), with_times=with_times)\n\n    def get_queue_for_job(self, job):\n        \"\"\"\n        Returns a queue to put job into.\n        \"\"\"\n        key = '{0}{1}'.format(Queue.redis_queue_namespace_prefix, job.origin)\n        return Queue.from_queue_key(key, connection=self.connection)\n\n    def enqueue_job(self, job):\n        \"\"\"\n        Move a scheduled job to a queue. In addition, it also does puts the job\n        back into the scheduler if needed.\n        \"\"\"\n        self.log.debug('Pushing {0} to {1}'.format(job.id, job.origin))\n\n        interval = job.meta.get('interval', None)\n        repeat = job.meta.get('repeat', None)\n\n        # If job is a repeated job, decrement counter\n        if repeat:\n            job.meta['repeat'] = int(repeat) - 1\n        job.enqueued_at = datetime.utcnow()\n        job.save()\n\n        queue = self.get_queue_for_job(job)\n        self.connection.sadd(queue.redis_queues_keys, queue.key)\n        queue.push_job_id(job.id)\n        self.connection.zrem(self.scheduled_jobs_key, job.id)\n\n        if interval:\n            # If this is a repeat job and counter has reached 0, don't repeat\n            if repeat is not None:\n                if job.meta['repeat'] == 0:\n                    return\n            self.connection._zadd(self.scheduled_jobs_key,\n                                  to_unix(datetime.utcnow()) + int(interval),\n                                  job.id)\n\n    def enqueue_jobs(self):\n        \"\"\"\n        Move scheduled jobs into queues.\n        \"\"\"\n        self.log.info('Checking for scheduled jobs...')\n\n        jobs = self.get_jobs_to_queue()\n        for job in jobs:\n            self.enqueue_job(job)\n\n        # Refresh scheduler key's expiry\n        self.connection.expire(self.scheduler_key, int(self._interval) + 10)\n        return jobs\n\n    def run(self):\n        \"\"\"\n        Periodically check whether there's any job that should be put in the queue (score\n        lower than current time).\n        \"\"\"\n        self.log.info('Running RQ scheduler...')\n        self.register_birth()\n        self._install_signal_handlers()\n        try:\n            while True:\n                self.enqueue_jobs()\n                time.sleep(self._interval)\n        finally:\n            self.register_death()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/99", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/99/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/99/events", "html_url": "https://github.com/rq/rq-scheduler/issues/99", "id": 115286603, "node_id": "MDU6SXNzdWUxMTUyODY2MDM=", "number": 99, "title": "scheduler never run", "user": {"login": "mbande", "id": 13609257, "node_id": "MDQ6VXNlcjEzNjA5MjU3", "avatar_url": "https://avatars0.githubusercontent.com/u/13609257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbande", "html_url": "https://github.com/mbande", "followers_url": "https://api.github.com/users/mbande/followers", "following_url": "https://api.github.com/users/mbande/following{/other_user}", "gists_url": "https://api.github.com/users/mbande/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbande/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbande/subscriptions", "organizations_url": "https://api.github.com/users/mbande/orgs", "repos_url": "https://api.github.com/users/mbande/repos", "events_url": "https://api.github.com/users/mbande/events{/privacy}", "received_events_url": "https://api.github.com/users/mbande/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-05T13:47:10Z", "updated_at": "2015-11-21T04:36:35Z", "closed_at": "2015-11-21T04:36:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'm using rq-scheduler and django-rq, i've reqistered a scheduled task like this:\n\n``` python\nfrom django_rq import get_scheduler\nscheduler = get_scheduler('default')\nscheduler.schedule(\n        scheduled_time=datetime.datetime(dt.year, dt.month, dt.day, dt.hour, 15*(dt.minute // 15)), # Time for first execution, in UTC timezone\n        func=my_func,                     # Function to be queued\n        args=[],             # Arguments passed into function when executed\n        kwargs={},         # Keyword arguments passed into function when executed\n        interval=60 * 15,                   # Time before the function is called again, in seconds\n        repeat=None                      # Repeat this number of times (None means repeat forever)\n)\n```\n\ni started a worker by `python manage.py rqworker high default low` at the same machine\nbut the scheduled job will never run, however simply `django_rq.enqueue(my_func)` run's without any problem\nwhat's happening here, am i doing something wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/96", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/96/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/96/events", "html_url": "https://github.com/rq/rq-scheduler/issues/96", "id": 111054247, "node_id": "MDU6SXNzdWUxMTEwNTQyNDc=", "number": 96, "title": "Creating a custom job_id doesn't work", "user": {"login": "glemmaPaul", "id": 4697524, "node_id": "MDQ6VXNlcjQ2OTc1MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4697524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glemmaPaul", "html_url": "https://github.com/glemmaPaul", "followers_url": "https://api.github.com/users/glemmaPaul/followers", "following_url": "https://api.github.com/users/glemmaPaul/following{/other_user}", "gists_url": "https://api.github.com/users/glemmaPaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/glemmaPaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glemmaPaul/subscriptions", "organizations_url": "https://api.github.com/users/glemmaPaul/orgs", "repos_url": "https://api.github.com/users/glemmaPaul/repos", "events_url": "https://api.github.com/users/glemmaPaul/events{/privacy}", "received_events_url": "https://api.github.com/users/glemmaPaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-12T20:55:16Z", "updated_at": "2015-10-12T23:15:08Z", "closed_at": "2015-10-12T23:15:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all,\n\nFor some kind of reason the following doesn't work: \n\n``` python\nscheduler.schedule(datetime.datetime.now(), func,\n                              args=[order.id],\n                              kwargs=kwargs,\n                              interval=30, id=\"myspecialID\")\n```\n\nThis is the exception I get:\n\n``` python\nTypeError: schedule() got an unexpected keyword argument 'id'\n```\n\nEven though I look into the source and I see that `id` is a kwarg I can put in https://github.com/ui/rq-scheduler/blob/master/rq_scheduler/scheduler.py#L131-L132\n\nDoes anyone else have this same problem? Also, `id` is a reserved name, is it maybe better to call it `job_id`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/95", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/95/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/95/events", "html_url": "https://github.com/rq/rq-scheduler/issues/95", "id": 106298405, "node_id": "MDU6SXNzdWUxMDYyOTg0MDU=", "number": 95, "title": "Questions about process of requeuing of jobs to queue and TTL of job", "user": {"login": "Edke", "id": 115118, "node_id": "MDQ6VXNlcjExNTExOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/115118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edke", "html_url": "https://github.com/Edke", "followers_url": "https://api.github.com/users/Edke/followers", "following_url": "https://api.github.com/users/Edke/following{/other_user}", "gists_url": "https://api.github.com/users/Edke/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edke/subscriptions", "organizations_url": "https://api.github.com/users/Edke/orgs", "repos_url": "https://api.github.com/users/Edke/repos", "events_url": "https://api.github.com/users/Edke/events{/privacy}", "received_events_url": "https://api.github.com/users/Edke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-14T08:54:01Z", "updated_at": "2015-11-21T04:46:50Z", "closed_at": "2015-11-21T04:46:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\n\nI'd like to ask about process rqscheduler re-queues repeating jobs. As I understand correctly from reading code and testing it's behavior, rq-scheduler does following:\n1. it puts job in queue (unique UUID job id is created)\n2. sleeps for defined interval\n3. calculates which (repeating) jobs should be put again to queue\n4. if so, re-queues existing job again to queue\n\nIs this process correct ? \n\nAccording to our tests, TTL of job is set to -1 for job, that was already executed. In that case when you re-queue existing/executed job back to queue, it's TTL is not valid anymore.\n\nShouldn't rqworker just keep definition of job (function, arguments, definition of scheduling) in it's list and then calculate which job should go to queue (initially or repeatedly) and new job should be in both cases created (with proper TTL?)\n### Our required design pattern (which is not working with current design):\n\nWe are scheduling also jobs, that:\n- do every time same tasks again\n- these tasks are to be created in certain time, when not possible to be executed (queue too big), their execution is not desired or even it is faulty to execute this task for example 30 seconds later\n- when not executed on time, there will be new job executed few seconds later and will to same job\n\nMaybe cron can do this better for us, but we need to schedule jobs more frequently than once per minute and also loading time of python2/django script has role when job starts as in cron based scheduling job actually starts few seconds later then scheduled as it takes some time for python script to start, on the other side when rq-scheduler puts loaded task to queue, it's executed immediately (when queue ready).\n\nExample:\n\nWe create job, that should be executed every 15 seconds. When this job failes to start in that period of time, should be discarded (using TTL mechanism) in 12 seconds as missed start is not required (queue starts to fill), on 15th second new job will be started that will do everything needed to be executed in job before.\n\nThank you for any info regarding issue :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/94", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/94/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/94/events", "html_url": "https://github.com/rq/rq-scheduler/issues/94", "id": 103693802, "node_id": "MDU6SXNzdWUxMDM2OTM4MDI=", "number": 94, "title": "Documentation: enqueue_at and schedule need datetime.utcnow() to work correctly...", "user": {"login": "fleshgolem", "id": 657606, "node_id": "MDQ6VXNlcjY1NzYwNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/657606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fleshgolem", "html_url": "https://github.com/fleshgolem", "followers_url": "https://api.github.com/users/fleshgolem/followers", "following_url": "https://api.github.com/users/fleshgolem/following{/other_user}", "gists_url": "https://api.github.com/users/fleshgolem/gists{/gist_id}", "starred_url": "https://api.github.com/users/fleshgolem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fleshgolem/subscriptions", "organizations_url": "https://api.github.com/users/fleshgolem/orgs", "repos_url": "https://api.github.com/users/fleshgolem/repos", "events_url": "https://api.github.com/users/fleshgolem/events{/privacy}", "received_events_url": "https://api.github.com/users/fleshgolem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-28T10:33:05Z", "updated_at": "2015-11-21T04:48:40Z", "closed_at": "2015-11-21T04:48:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "...not datetime.now(). I fought with this for well over 2 hours before I found the respective code. Maybe update the README so someone else does not have to\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/93", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/93/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/93/events", "html_url": "https://github.com/rq/rq-scheduler/issues/93", "id": 101571739, "node_id": "MDU6SXNzdWUxMDE1NzE3Mzk=", "number": 93, "title": "Heroku / dokku and \"ValueError: There's already an active RQ scheduler\"", "user": {"login": "darkpixel", "id": 158380, "node_id": "MDQ6VXNlcjE1ODM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/158380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkpixel", "html_url": "https://github.com/darkpixel", "followers_url": "https://api.github.com/users/darkpixel/followers", "following_url": "https://api.github.com/users/darkpixel/following{/other_user}", "gists_url": "https://api.github.com/users/darkpixel/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkpixel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkpixel/subscriptions", "organizations_url": "https://api.github.com/users/darkpixel/orgs", "repos_url": "https://api.github.com/users/darkpixel/repos", "events_url": "https://api.github.com/users/darkpixel/events{/privacy}", "received_events_url": "https://api.github.com/users/darkpixel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-18T04:56:27Z", "updated_at": "2017-06-13T10:00:44Z", "closed_at": "2015-08-19T01:28:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running dokku, which is a \"Docker powered mini-Heroku in around 100 lines of Bash\".\n\nI switched to RQ a few weeks ago after celery kept locking up workers due to a deep multi-threading issue in python.  RQ is working perfectly except for one small issue...\n\nWhen I 'git push' my code up to my server, dokku creates a new container with the updated code, then it starts all the services in the NEW container, makes sure they are running, switches traffic to the new container, then shuts down the old container.\n\nThe only problem is that rq-scheduler checks to see if there is an active instance of the scheduler running.  Unfortunately there is--in the old container that is about to get killed.\n\nIn my case, I don't care if the about-to-die-scheduler queues up a bunch of jobs in an instant before the new scheduler comes up and queues the same jobs up.\n\nWould a command-line flag to ignore an already running scheduler, be useful?\n\nAnother option might be to allow multiple schedulers to run, but only the one that holds the lock can submit new tasks.  If it dies, and the lock expires, another scheduler could grab it and start submitting...\n\nI'd be willing to try my hand at writing a patch if you approve of either idea.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/88", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/88/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/88/events", "html_url": "https://github.com/rq/rq-scheduler/issues/88", "id": 97778623, "node_id": "MDU6SXNzdWU5Nzc3ODYyMw==", "number": 88, "title": "Question: why expire the scheduler key?", "user": {"login": "Microserf", "id": 4295636, "node_id": "MDQ6VXNlcjQyOTU2MzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4295636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Microserf", "html_url": "https://github.com/Microserf", "followers_url": "https://api.github.com/users/Microserf/followers", "following_url": "https://api.github.com/users/Microserf/following{/other_user}", "gists_url": "https://api.github.com/users/Microserf/gists{/gist_id}", "starred_url": "https://api.github.com/users/Microserf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Microserf/subscriptions", "organizations_url": "https://api.github.com/users/Microserf/orgs", "repos_url": "https://api.github.com/users/Microserf/repos", "events_url": "https://api.github.com/users/Microserf/events{/privacy}", "received_events_url": "https://api.github.com/users/Microserf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-28T19:01:17Z", "updated_at": "2015-08-11T05:54:37Z", "closed_at": "2015-08-11T03:07:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can someone enlighten me as to what is the purpose of expiring the scheduler key?\n\nWe've created a script that does everything `Scheduler.run()` does, but in addition, it processes another type of job during each iteration of the master `while True` loop:\n\n```\n        scheduler = get_scheduler(name=queue, interval=options.get('interval'))\n\n        scheduler.log.info('Running RQ scheduler...')\n        scheduler.register_birth()\n        scheduler._install_signal_handlers()\n        try:\n            while True:\n                # Enqueue `rq-scheduler`'s scheduled jobs\n                scheduler.enqueue_jobs()\n                time.sleep(scheduler._interval)\n\n                # Perform another scheduling task here\n                do_task_b()\n        finally:\n            scheduler.register_death()\n\n```\n\nIf my understanding is correct, the top portion of the `while True` loop checks for rq scheduling jobs which are due, enqueues any as necessary, then sleeps `scheduler._interval` seconds (e.g. 60 seconds in the default case).\n\nAfter the `time.sleep` call, `scheduler._interval` seconds have elapsed, which means that the `scheduler_key` Redis key is set to expire in 10 more seconds (because of the call to `StrictRedis.expire` [here](https://github.com/ui/rq-scheduler/blob/master/rq_scheduler/scheduler.py#L299))\n\nSo, am I correct in my understanding that if `do_task_b()` takes more than 10 seconds, the `scheduler_key` will be expired by the time we iterate once more on the master `while True` loop?\n\nWhy do we want to expire the `scheduler_key` at all? Isn't this the index for all scheduled jobs?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/84", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/84/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/84/events", "html_url": "https://github.com/rq/rq-scheduler/issues/84", "id": 93612814, "node_id": "MDU6SXNzdWU5MzYxMjgxNA==", "number": 84, "title": "Add queue_name options to enqueue_in, and enqueue_at", "user": {"login": "jmmills", "id": 49523, "node_id": "MDQ6VXNlcjQ5NTIz", "avatar_url": "https://avatars1.githubusercontent.com/u/49523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmmills", "html_url": "https://github.com/jmmills", "followers_url": "https://api.github.com/users/jmmills/followers", "following_url": "https://api.github.com/users/jmmills/following{/other_user}", "gists_url": "https://api.github.com/users/jmmills/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmmills/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmmills/subscriptions", "organizations_url": "https://api.github.com/users/jmmills/orgs", "repos_url": "https://api.github.com/users/jmmills/repos", "events_url": "https://api.github.com/users/jmmills/events{/privacy}", "received_events_url": "https://api.github.com/users/jmmills/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-07-07T19:46:11Z", "updated_at": "2015-08-14T01:09:13Z", "closed_at": "2015-08-13T22:12:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if there was parity between these functions and enqueue/schedule.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/83", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/83/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/83/events", "html_url": "https://github.com/rq/rq-scheduler/issues/83", "id": 93561236, "node_id": "MDU6SXNzdWU5MzU2MTIzNg==", "number": 83, "title": "Error after update to raven 5.4.0", "user": {"login": "ldath", "id": 64095, "node_id": "MDQ6VXNlcjY0MDk1", "avatar_url": "https://avatars2.githubusercontent.com/u/64095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldath", "html_url": "https://github.com/ldath", "followers_url": "https://api.github.com/users/ldath/followers", "following_url": "https://api.github.com/users/ldath/following{/other_user}", "gists_url": "https://api.github.com/users/ldath/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldath/subscriptions", "organizations_url": "https://api.github.com/users/ldath/orgs", "repos_url": "https://api.github.com/users/ldath/repos", "events_url": "https://api.github.com/users/ldath/events{/privacy}", "received_events_url": "https://api.github.com/users/ldath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-07T15:43:16Z", "updated_at": "2015-07-07T15:43:45Z", "closed_at": "2015-07-07T15:43:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have error:\nAttributeError: 'Client' object has no attribute 'servers' in file \".../site-packages/rq/contrib/sentry.py\", line 15, in register_sentry\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/82", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/82/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/82/events", "html_url": "https://github.com/rq/rq-scheduler/issues/82", "id": 87486709, "node_id": "MDU6SXNzdWU4NzQ4NjcwOQ==", "number": 82, "title": "Nothing output when running rqscheduler", "user": {"login": "Sshuichi", "id": 5939429, "node_id": "MDQ6VXNlcjU5Mzk0Mjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5939429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sshuichi", "html_url": "https://github.com/Sshuichi", "followers_url": "https://api.github.com/users/Sshuichi/followers", "following_url": "https://api.github.com/users/Sshuichi/following{/other_user}", "gists_url": "https://api.github.com/users/Sshuichi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sshuichi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sshuichi/subscriptions", "organizations_url": "https://api.github.com/users/Sshuichi/orgs", "repos_url": "https://api.github.com/users/Sshuichi/repos", "events_url": "https://api.github.com/users/Sshuichi/events{/privacy}", "received_events_url": "https://api.github.com/users/Sshuichi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-11T20:30:32Z", "updated_at": "2015-06-23T01:02:02Z", "closed_at": "2015-06-23T01:02:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running rqscheduler -v , and ./manage.py rqscheduler -v but nothing is output , no logging no nothing\n\nI'm using the last version when I run it for the second time it says that it's already running.\n\nwhen I check the current jobs , all of them are enqueued at NONE \n\nThis is my code : `def func(arg1):\n    print 1\n    scheduler().enqueue_in(timedelta(seconds=5), func, arg1)\n    return` \n\nThis should print 1 every 5 seconds, but it doesn't work \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/81", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/81/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/81/events", "html_url": "https://github.com/rq/rq-scheduler/issues/81", "id": 86989658, "node_id": "MDU6SXNzdWU4Njk4OTY1OA==", "number": 81, "title": "Timeout exception with scheduler.enqueue_in", "user": {"login": "khamaileon", "id": 1322166, "node_id": "MDQ6VXNlcjEzMjIxNjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1322166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khamaileon", "html_url": "https://github.com/khamaileon", "followers_url": "https://api.github.com/users/khamaileon/followers", "following_url": "https://api.github.com/users/khamaileon/following{/other_user}", "gists_url": "https://api.github.com/users/khamaileon/gists{/gist_id}", "starred_url": "https://api.github.com/users/khamaileon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khamaileon/subscriptions", "organizations_url": "https://api.github.com/users/khamaileon/orgs", "repos_url": "https://api.github.com/users/khamaileon/repos", "events_url": "https://api.github.com/users/khamaileon/events{/privacy}", "received_events_url": "https://api.github.com/users/khamaileon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-10T14:30:02Z", "updated_at": "2015-09-05T11:47:14Z", "closed_at": "2015-07-09T01:18:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\n\nI encounter a timeout exception with scheduler.enqueue_in.\n\n``` python\nscheduler.enqueue_in(\n    timedelta(seconds=interval),\n    fetch,\n    filepath\n)\n```\n\n``` shell\nrq.timeouts.JobTimeoutException: Job exceeded maximum timeout value (180 seconds)\n```\n\nHow can I pass a custom timeout value ?\n\nAt least should it be use DEFAULT_TIMEOUT ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/79", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/79/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/79/events", "html_url": "https://github.com/rq/rq-scheduler/issues/79", "id": 77344003, "node_id": "MDU6SXNzdWU3NzM0NDAwMw==", "number": 79, "title": "result_ttl type problem with repeated jobs on PY3", "user": {"login": "ggold6", "id": 10275763, "node_id": "MDQ6VXNlcjEwMjc1NzYz", "avatar_url": "https://avatars0.githubusercontent.com/u/10275763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ggold6", "html_url": "https://github.com/ggold6", "followers_url": "https://api.github.com/users/ggold6/followers", "following_url": "https://api.github.com/users/ggold6/following{/other_user}", "gists_url": "https://api.github.com/users/ggold6/gists{/gist_id}", "starred_url": "https://api.github.com/users/ggold6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ggold6/subscriptions", "organizations_url": "https://api.github.com/users/ggold6/orgs", "repos_url": "https://api.github.com/users/ggold6/repos", "events_url": "https://api.github.com/users/ggold6/events{/privacy}", "received_events_url": "https://api.github.com/users/ggold6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-17T16:31:08Z", "updated_at": "2015-05-20T02:17:20Z", "closed_at": "2015-05-17T23:52:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "all, on PY3 i'm getting the following error when adding result_ttl=interval*1.1 argument on scheduler:\n\n<pre><code>\nTraceback (most recent call last):\n  File \"/api/apivenv3/bin/rqscheduler\", line 11, in <module>\n    sys.exit(main())\n  File \"/api/apivenv3/lib/python3.4/site-packages/rq_scheduler/scripts/rqscheduler.py\", line 52, in main\n    scheduler.run()\n  File \"/api/apivenv3/lib/python3.4/site-packages/rq_scheduler/scheduler.py\", line 312, in run\n    self.enqueue_jobs()\n  File \"api/apivenv3/lib/python3.4/site-packages/rq_scheduler/scheduler.py\", line 294, in enqueue_jobs\n    jobs = self.get_jobs_to_queue()\n  File \"/api/apivenv3/lib/python3.4/site-packages/rq_scheduler/scheduler.py\", line 249, in get_jobs_to_queue\n    return self.get_jobs(to_unix(datetime.utcnow()), with_times=with_times)\n  File \"/api/apivenv3/lib/python3.4/site-packages/rq_scheduler/scheduler.py\", line 232, in get_jobs\n    job = Job.fetch(job_id, connection=self.connection)\n  File \"/api/apivenv3/lib/python3.4/site-packages/rq/job.py\", line 294, in fetch\n    job.refresh()\n  File \"/api/apivenv3/lib/python3.4/site-packages/rq/job.py\", line 418, in refresh\n    self.result_ttl = int(obj.get('result_ttl')) if obj.get('result_ttl') else None  # noqa\nValueError: invalid literal for int() with base 10: b'33.0'\n</code></pre>\n\n\nadding result_ttl parameter is done so result_ttl is not infinite and jobs that are done do not linger on redis (avoiding <code>Result will never expire, clean up result key manually.</code> message from the worker, as per the documentation note.)\n\nSeems that the problem is not really in rq-sechduler, but RQ? \nNote that adding result_ttl = int(interval*1.1), solves the issue. I was wondering if this is really an issue here, whether to report this on RQ's github issues, or just let it go?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/78", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/78/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/78/events", "html_url": "https://github.com/rq/rq-scheduler/issues/78", "id": 72108134, "node_id": "MDU6SXNzdWU3MjEwODEzNA==", "number": 78, "title": "How to re-schedule a job that is in the scheduler", "user": {"login": "niks3089", "id": 5587829, "node_id": "MDQ6VXNlcjU1ODc4Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5587829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niks3089", "html_url": "https://github.com/niks3089", "followers_url": "https://api.github.com/users/niks3089/followers", "following_url": "https://api.github.com/users/niks3089/following{/other_user}", "gists_url": "https://api.github.com/users/niks3089/gists{/gist_id}", "starred_url": "https://api.github.com/users/niks3089/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niks3089/subscriptions", "organizations_url": "https://api.github.com/users/niks3089/orgs", "repos_url": "https://api.github.com/users/niks3089/repos", "events_url": "https://api.github.com/users/niks3089/events{/privacy}", "received_events_url": "https://api.github.com/users/niks3089/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-30T09:19:29Z", "updated_at": "2015-08-12T01:35:38Z", "closed_at": "2015-08-12T01:35:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a job to schedule in 2 minutes. After a minute I want to  re-schedule the same job after 2 minutes,\nFollowing is what I have tried (Its a snippet of actual piece)\n\n```\n        scheduler = django_rq.get_scheduler('default')\n        job = channel_to_job_dict.get(item['channel'])\n        if job is None:\n            print \"schedule a job \"\n            job = scheduler.enqueue_in(timedelta(seconds = 10),\n                    handle_unresponsive_antik, item['channel'])\n            # Enqueue the job in a dict\n            channel_to_job_dict[item['channel']] = job \n        elif job in scheduler:\n            # Re-schedule after 10 seconds\n            print \"rescheduling job\"\n            scheduler.cancel(job);\n            scheduler.enqueue_job(job);\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/77", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/77/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/77/events", "html_url": "https://github.com/rq/rq-scheduler/issues/77", "id": 72069541, "node_id": "MDU6SXNzdWU3MjA2OTU0MQ==", "number": 77, "title": "How to reduce the default interval of rq scheduler to less than 60 seconds?", "user": {"login": "niks3089", "id": 5587829, "node_id": "MDQ6VXNlcjU1ODc4Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5587829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niks3089", "html_url": "https://github.com/niks3089", "followers_url": "https://api.github.com/users/niks3089/followers", "following_url": "https://api.github.com/users/niks3089/following{/other_user}", "gists_url": "https://api.github.com/users/niks3089/gists{/gist_id}", "starred_url": "https://api.github.com/users/niks3089/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niks3089/subscriptions", "organizations_url": "https://api.github.com/users/niks3089/orgs", "repos_url": "https://api.github.com/users/niks3089/repos", "events_url": "https://api.github.com/users/niks3089/events{/privacy}", "received_events_url": "https://api.github.com/users/niks3089/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-30T05:43:47Z", "updated_at": "2015-04-30T06:58:22Z", "closed_at": "2015-04-30T06:58:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/76", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/76/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/76/events", "html_url": "https://github.com/rq/rq-scheduler/issues/76", "id": 69428453, "node_id": "MDU6SXNzdWU2OTQyODQ1Mw==", "number": 76, "title": "No error shows, but no job work in scheduler", "user": {"login": "29k", "id": 11132729, "node_id": "MDQ6VXNlcjExMTMyNzI5", "avatar_url": "https://avatars1.githubusercontent.com/u/11132729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/29k", "html_url": "https://github.com/29k", "followers_url": "https://api.github.com/users/29k/followers", "following_url": "https://api.github.com/users/29k/following{/other_user}", "gists_url": "https://api.github.com/users/29k/gists{/gist_id}", "starred_url": "https://api.github.com/users/29k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/29k/subscriptions", "organizations_url": "https://api.github.com/users/29k/orgs", "repos_url": "https://api.github.com/users/29k/repos", "events_url": "https://api.github.com/users/29k/events{/privacy}", "received_events_url": "https://api.github.com/users/29k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-19T14:18:05Z", "updated_at": "2015-07-09T01:18:57Z", "closed_at": "2015-07-09T01:18:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\nI tried to this:\n\"\"\"\nunaware = datetime.datetime.utcnow()+ timedelta(minutes=481) # my timezone is 480min before utc\nscheduler = Scheduler(connection=conn)\nscheduler.schedule(\n    scheduled_time=unaware, # Time for first execution, in UTC timezone\n    func=reportemail,                     # Function to be queued\n    args=[],             # Arguments passed into function when executed\n    kwargs={},         # Keyword arguments passed into function when executed\n    interval=30,                   # Time before the function is called again, in seconds\n    repeat=3                      # Repeat this number of times (None means repeat forever)\n)\n\"\"\"\n\nand I also tried:\n\n\"\"\"\nscheduler = Scheduler(connection=conn)\nscheduler.schedule(\n    scheduled_time= datetime.datetime.now(), # Time for first execution, in UTC timezone\n    func=reportemail,                     # Function to be queued\n    args=[],             # Arguments passed into function when executed\n    kwargs={},         # Keyword arguments passed into function when executed\n    interval=30,                   # Time before the function is called again, in seconds\n    repeat=3                      # Repeat this number of times (None means repeat forever)\n)\n\"\"\"\nBoth of them work nothing.\nPlease tell me how to fix it.\nThank you in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/74", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/74/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/74/events", "html_url": "https://github.com/rq/rq-scheduler/issues/74", "id": 66975917, "node_id": "MDU6SXNzdWU2Njk3NTkxNw==", "number": 74, "title": "Can I enqueue job at sub second level?", "user": {"login": "paveltyavin", "id": 766684, "node_id": "MDQ6VXNlcjc2NjY4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/766684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paveltyavin", "html_url": "https://github.com/paveltyavin", "followers_url": "https://api.github.com/users/paveltyavin/followers", "following_url": "https://api.github.com/users/paveltyavin/following{/other_user}", "gists_url": "https://api.github.com/users/paveltyavin/gists{/gist_id}", "starred_url": "https://api.github.com/users/paveltyavin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paveltyavin/subscriptions", "organizations_url": "https://api.github.com/users/paveltyavin/orgs", "repos_url": "https://api.github.com/users/paveltyavin/repos", "events_url": "https://api.github.com/users/paveltyavin/events{/privacy}", "received_events_url": "https://api.github.com/users/paveltyavin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-07T19:42:48Z", "updated_at": "2015-07-19T21:47:38Z", "closed_at": "2015-07-19T21:47:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "To enqueue job you should run the code\n`scheduler.enqueue_at(datetime(2020, 1, 1), func)`\nWhat if I want to run the job after 0.012345 seconds? Can I do something like\n`scheduler.enqueue_at(datetime(2020, 1, 1) + timedelta(microseconds=12345), func)` ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/72", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/72/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/72/events", "html_url": "https://github.com/rq/rq-scheduler/issues/72", "id": 60080617, "node_id": "MDU6SXNzdWU2MDA4MDYxNw==", "number": 72, "title": "rq-scheduler 0.5.1 is not installable with Python inside Ubuntu 12.04", "user": {"login": "therealmarv", "id": 1050582, "node_id": "MDQ6VXNlcjEwNTA1ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1050582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therealmarv", "html_url": "https://github.com/therealmarv", "followers_url": "https://api.github.com/users/therealmarv/followers", "following_url": "https://api.github.com/users/therealmarv/following{/other_user}", "gists_url": "https://api.github.com/users/therealmarv/gists{/gist_id}", "starred_url": "https://api.github.com/users/therealmarv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therealmarv/subscriptions", "organizations_url": "https://api.github.com/users/therealmarv/orgs", "repos_url": "https://api.github.com/users/therealmarv/repos", "events_url": "https://api.github.com/users/therealmarv/events{/privacy}", "received_events_url": "https://api.github.com/users/therealmarv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-06T09:52:23Z", "updated_at": "2015-03-06T11:40:03Z", "closed_at": "2015-03-06T11:29:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The package format for rq-scheduler seems to new for the ancient Python 2.7.3 inside Ubuntu 12.04. So when trying to install it wit `pip install rq-scheduler` it installs version 0.5.0 and not the newest one.\n\nI've found a workaround for that: Update pip itself `pip install -U pip` and then install rq-scheduler `pip install rq-scheduler`.\n\nYou maybe want to mention it in your docs. No problem with new python versions like in Ubuntu 14.04.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/71", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/71/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/71/events", "html_url": "https://github.com/rq/rq-scheduler/issues/71", "id": 58739284, "node_id": "MDU6SXNzdWU1ODczOTI4NA==", "number": 71, "title": "Pass description (and possibly other args) to Job.create()", "user": {"login": "ydaniv", "id": 116658, "node_id": "MDQ6VXNlcjExNjY1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/116658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ydaniv", "html_url": "https://github.com/ydaniv", "followers_url": "https://api.github.com/users/ydaniv/followers", "following_url": "https://api.github.com/users/ydaniv/following{/other_user}", "gists_url": "https://api.github.com/users/ydaniv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ydaniv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ydaniv/subscriptions", "organizations_url": "https://api.github.com/users/ydaniv/orgs", "repos_url": "https://api.github.com/users/ydaniv/repos", "events_url": "https://api.github.com/users/ydaniv/events{/privacy}", "received_events_url": "https://api.github.com/users/ydaniv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-24T13:40:31Z", "updated_at": "2015-09-04T17:53:46Z", "closed_at": "2015-09-04T09:52:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently there's no way to pass `description` argument to rq's `Job.create()`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/69", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/69/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/69/events", "html_url": "https://github.com/rq/rq-scheduler/issues/69", "id": 57735645, "node_id": "MDU6SXNzdWU1NzczNTY0NQ==", "number": 69, "title": "No logs, not moving jobs to queue", "user": {"login": "linkyndy", "id": 319844, "node_id": "MDQ6VXNlcjMxOTg0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/319844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linkyndy", "html_url": "https://github.com/linkyndy", "followers_url": "https://api.github.com/users/linkyndy/followers", "following_url": "https://api.github.com/users/linkyndy/following{/other_user}", "gists_url": "https://api.github.com/users/linkyndy/gists{/gist_id}", "starred_url": "https://api.github.com/users/linkyndy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linkyndy/subscriptions", "organizations_url": "https://api.github.com/users/linkyndy/orgs", "repos_url": "https://api.github.com/users/linkyndy/repos", "events_url": "https://api.github.com/users/linkyndy/events{/privacy}", "received_events_url": "https://api.github.com/users/linkyndy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-02-15T16:25:06Z", "updated_at": "2015-07-29T12:52:14Z", "closed_at": "2015-07-29T12:52:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I started a scheduler instance on the default queue, but I received no output on the terminal. The process was still alive, but why wasn't there any output?\n\nThen I've enqueued a task using `enqueue_in` and a timedelta of 5 seconds. I haven't received again no output on the terminal, but I could see the job with `get_jobs()`. After the timedelta expired, the job disappeared from `get_jobs()`, but it didn't show up in the default RQ queue.\n\nAm I missing something or doing something wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/66", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/66/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/66/events", "html_url": "https://github.com/rq/rq-scheduler/issues/66", "id": 55401682, "node_id": "MDU6SXNzdWU1NTQwMTY4Mg==", "number": 66, "title": "All jobs may have to be canceled in _install_signal_handlers", "user": {"login": "lukhnos", "id": 25210, "node_id": "MDQ6VXNlcjI1MjEw", "avatar_url": "https://avatars0.githubusercontent.com/u/25210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukhnos", "html_url": "https://github.com/lukhnos", "followers_url": "https://api.github.com/users/lukhnos/followers", "following_url": "https://api.github.com/users/lukhnos/following{/other_user}", "gists_url": "https://api.github.com/users/lukhnos/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukhnos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukhnos/subscriptions", "organizations_url": "https://api.github.com/users/lukhnos/orgs", "repos_url": "https://api.github.com/users/lukhnos/repos", "events_url": "https://api.github.com/users/lukhnos/events{/privacy}", "received_events_url": "https://api.github.com/users/lukhnos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-25T06:46:48Z", "updated_at": "2015-01-27T02:09:23Z", "closed_at": "2015-01-27T02:09:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use rq-scheduler to schedule a periodic job that runs forever. However, if I stop the scheduler process and start the scheduler again without flushing Redis, I find the previous periodic job will still be enqueued by the new process. So now after each interval, I have two jobs enqueued each time.\n\nThe job is scheduled with:\n\n``` python\nscheduler.schedule(\n    scheduled_time=datetime.datetime.now(),\n    func=some_func,\n    interval=some_interval\n)\n```\n\nMy current solution is to cancel all jobs in the signal handler. I made a `Scheduler` subclass, replicated the `_install_signal_handlers` method, and added two lines inside the method:\n\n``` python\ndef _install_signal_handlers(self):\n    def stop(signum, frame):\n        # Clean up the scheduler job.\n        for job in scheduler.get_jobs():\n            scheduler.cancel(job)\n    # ...\n```\n\nDoes this look like a correct solution, or could there be any problems if we cancel jobs in the signal handler?\n\nThank you!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/65", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/65/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/65/events", "html_url": "https://github.com/rq/rq-scheduler/issues/65", "id": 54608863, "node_id": "MDU6SXNzdWU1NDYwODg2Mw==", "number": 65, "title": "Schedule via crontab definition.", "user": {"login": "meunierd", "id": 37849, "node_id": "MDQ6VXNlcjM3ODQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/37849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meunierd", "html_url": "https://github.com/meunierd", "followers_url": "https://api.github.com/users/meunierd/followers", "following_url": "https://api.github.com/users/meunierd/following{/other_user}", "gists_url": "https://api.github.com/users/meunierd/gists{/gist_id}", "starred_url": "https://api.github.com/users/meunierd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meunierd/subscriptions", "organizations_url": "https://api.github.com/users/meunierd/orgs", "repos_url": "https://api.github.com/users/meunierd/repos", "events_url": "https://api.github.com/users/meunierd/events{/privacy}", "received_events_url": "https://api.github.com/users/meunierd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-01-16T18:34:56Z", "updated_at": "2016-05-05T10:22:46Z", "closed_at": "2016-05-05T10:22:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was hoping to be able to schedule recurring jobs via a cron-definition rather than just an interval. Is this a desirable feature?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/63", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/63/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/63/events", "html_url": "https://github.com/rq/rq-scheduler/issues/63", "id": 49175009, "node_id": "MDU6SXNzdWU0OTE3NTAwOQ==", "number": 63, "title": "options to RQ like result_ttl, etc.", "user": {"login": "YAmikep", "id": 1226080, "node_id": "MDQ6VXNlcjEyMjYwODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1226080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YAmikep", "html_url": "https://github.com/YAmikep", "followers_url": "https://api.github.com/users/YAmikep/followers", "following_url": "https://api.github.com/users/YAmikep/following{/other_user}", "gists_url": "https://api.github.com/users/YAmikep/gists{/gist_id}", "starred_url": "https://api.github.com/users/YAmikep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YAmikep/subscriptions", "organizations_url": "https://api.github.com/users/YAmikep/orgs", "repos_url": "https://api.github.com/users/YAmikep/repos", "events_url": "https://api.github.com/users/YAmikep/events{/privacy}", "received_events_url": "https://api.github.com/users/YAmikep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-18T03:04:09Z", "updated_at": "2015-01-29T01:37:49Z", "closed_at": "2015-01-29T01:37:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am using `enqueue_in` and there is no way to use RQ options like `result_ttl=0` to discard the results immediately, correct?\n\nThanks\nMichael\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/61", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/61/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/61/events", "html_url": "https://github.com/rq/rq-scheduler/issues/61", "id": 47258793, "node_id": "MDU6SXNzdWU0NzI1ODc5Mw==", "number": 61, "title": "Disable repeated output of the 'Checking for scheduled jobs...' message.", "user": {"login": "berimor", "id": 6745832, "node_id": "MDQ6VXNlcjY3NDU4MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6745832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berimor", "html_url": "https://github.com/berimor", "followers_url": "https://api.github.com/users/berimor/followers", "following_url": "https://api.github.com/users/berimor/following{/other_user}", "gists_url": "https://api.github.com/users/berimor/gists{/gist_id}", "starred_url": "https://api.github.com/users/berimor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berimor/subscriptions", "organizations_url": "https://api.github.com/users/berimor/orgs", "repos_url": "https://api.github.com/users/berimor/repos", "events_url": "https://api.github.com/users/berimor/events{/privacy}", "received_events_url": "https://api.github.com/users/berimor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-30T11:27:01Z", "updated_at": "2015-01-29T01:40:37Z", "closed_at": "2015-01-29T01:40:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nthe current version writes 'Checking for scheduled jobs...' to the INFO log repeatedly on every call to enqueue_jobs(). This is extremely annoying and costs processor time, especially if the check interval is very small (e.g. 0.1 second).  \n\nI know that this behaviour has been explicitly introduced in the commit 40c8228a4aac25a6a60a2d581e7e223f1a08aa0e: self.log.info('Checking for scheduled jobs...'). But I don't know the reason for that. I think, this message should be logged only in DEBUG.\n\nCan you change it to DEBUG or should I make a PR?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/59", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/59/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/59/events", "html_url": "https://github.com/rq/rq-scheduler/issues/59", "id": 46784541, "node_id": "MDU6SXNzdWU0Njc4NDU0MQ==", "number": 59, "title": "Interval smaller than 1 second", "user": {"login": "berimor", "id": 6745832, "node_id": "MDQ6VXNlcjY3NDU4MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6745832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berimor", "html_url": "https://github.com/berimor", "followers_url": "https://api.github.com/users/berimor/followers", "following_url": "https://api.github.com/users/berimor/following{/other_user}", "gists_url": "https://api.github.com/users/berimor/gists{/gist_id}", "starred_url": "https://api.github.com/users/berimor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berimor/subscriptions", "organizations_url": "https://api.github.com/users/berimor/orgs", "repos_url": "https://api.github.com/users/berimor/repos", "events_url": "https://api.github.com/users/berimor/events{/privacy}", "received_events_url": "https://api.github.com/users/berimor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-24T21:15:31Z", "updated_at": "2014-10-30T02:18:25Z", "closed_at": "2014-10-30T02:18:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently it is not possible to specify an interval lower than 1 second. We need smaller intervals, like 0.1 second. \n\nIt would be very easy to support them:\n- change xxx.expire(xxx, self._interval + 10) to xxx.expire(xxx, int(self._interval) + 10) in the lines 43 and 303 of scheduler.py\n- change 'type=int' to 'type=float' in the line 23 'parser.add_argument('-i' ...' in rqscheduler.py\n\nI would appreciate if you could integrate these changes.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/57", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/57/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/57/events", "html_url": "https://github.com/rq/rq-scheduler/issues/57", "id": 46125010, "node_id": "MDU6SXNzdWU0NjEyNTAxMA==", "number": 57, "title": "setup periodic tasks with min, hour, day, month?", "user": {"login": "YAmikep", "id": 1226080, "node_id": "MDQ6VXNlcjEyMjYwODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1226080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YAmikep", "html_url": "https://github.com/YAmikep", "followers_url": "https://api.github.com/users/YAmikep/followers", "following_url": "https://api.github.com/users/YAmikep/following{/other_user}", "gists_url": "https://api.github.com/users/YAmikep/gists{/gist_id}", "starred_url": "https://api.github.com/users/YAmikep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YAmikep/subscriptions", "organizations_url": "https://api.github.com/users/YAmikep/orgs", "repos_url": "https://api.github.com/users/YAmikep/repos", "events_url": "https://api.github.com/users/YAmikep/events{/privacy}", "received_events_url": "https://api.github.com/users/YAmikep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-17T17:43:30Z", "updated_at": "2016-05-05T12:48:27Z", "closed_at": "2016-05-05T12:48:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIs there a way to setup periodic tasks like crontabs:\n- min (0 - 59)\n- hour (0 - 23)\n- day of month (1 - 31)\n- month (1 - 12)\n- day of week (0 - 6) (Sunday=0)\n\ninstead of defining the time of the first execution Time and the interval?\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/54", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/54/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/54/events", "html_url": "https://github.com/rq/rq-scheduler/issues/54", "id": 44622391, "node_id": "MDU6SXNzdWU0NDYyMjM5MQ==", "number": 54, "title": "Cannot specify func as string reference.", "user": {"login": "ScottSturdivant", "id": 709273, "node_id": "MDQ6VXNlcjcwOTI3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/709273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ScottSturdivant", "html_url": "https://github.com/ScottSturdivant", "followers_url": "https://api.github.com/users/ScottSturdivant/followers", "following_url": "https://api.github.com/users/ScottSturdivant/following{/other_user}", "gists_url": "https://api.github.com/users/ScottSturdivant/gists{/gist_id}", "starred_url": "https://api.github.com/users/ScottSturdivant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ScottSturdivant/subscriptions", "organizations_url": "https://api.github.com/users/ScottSturdivant/orgs", "repos_url": "https://api.github.com/users/ScottSturdivant/repos", "events_url": "https://api.github.com/users/ScottSturdivant/events{/privacy}", "received_events_url": "https://api.github.com/users/ScottSturdivant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-01T21:40:47Z", "updated_at": "2014-10-30T02:18:51Z", "closed_at": "2014-10-30T02:18:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey there,\n\nBeing bitten by this line:  https://github.com/ui/rq-scheduler/blob/master/rq_scheduler/scheduler.py#L75\n\nSince func is passed to rq's Job constructor and it accepts string references, would you be willing to accept a PR that removes this check?  Since the rq docs do mention that functions from `__main__` are not supported, it seems as though this check would be better suited to the rq library.\n\nIf you agree that removing the check is OK, I'd be happy to generate a PR.  Thanks for your consideration!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/53", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/53/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/53/events", "html_url": "https://github.com/rq/rq-scheduler/issues/53", "id": 43926204, "node_id": "MDU6SXNzdWU0MzkyNjIwNA==", "number": 53, "title": "How to set Job dependency?", "user": {"login": "pacifictoy", "id": 3165965, "node_id": "MDQ6VXNlcjMxNjU5NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3165965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pacifictoy", "html_url": "https://github.com/pacifictoy", "followers_url": "https://api.github.com/users/pacifictoy/followers", "following_url": "https://api.github.com/users/pacifictoy/following{/other_user}", "gists_url": "https://api.github.com/users/pacifictoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/pacifictoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pacifictoy/subscriptions", "organizations_url": "https://api.github.com/users/pacifictoy/orgs", "repos_url": "https://api.github.com/users/pacifictoy/repos", "events_url": "https://api.github.com/users/pacifictoy/events{/privacy}", "received_events_url": "https://api.github.com/users/pacifictoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-25T14:37:07Z", "updated_at": "2015-05-20T02:23:42Z", "closed_at": "2015-05-20T02:23:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nRQ allows setting up queues that has job A, and job B will depend on job A (it will not run until job A is finished).\n\nLooking at rq-scheduler source code, seems like this feature is not usable....\nIs it?\n\nif not,\nIs there a general thought / suggestion on the approach to include this feature in rq-scheduler?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/46", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/46/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/46/events", "html_url": "https://github.com/rq/rq-scheduler/issues/46", "id": 36451873, "node_id": "MDU6SXNzdWUzNjQ1MTg3Mw==", "number": 46, "title": "Fetch Failed Job", "user": {"login": "bhavesh1", "id": 7771976, "node_id": "MDQ6VXNlcjc3NzE5NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7771976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhavesh1", "html_url": "https://github.com/bhavesh1", "followers_url": "https://api.github.com/users/bhavesh1/followers", "following_url": "https://api.github.com/users/bhavesh1/following{/other_user}", "gists_url": "https://api.github.com/users/bhavesh1/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhavesh1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhavesh1/subscriptions", "organizations_url": "https://api.github.com/users/bhavesh1/orgs", "repos_url": "https://api.github.com/users/bhavesh1/repos", "events_url": "https://api.github.com/users/bhavesh1/events{/privacy}", "received_events_url": "https://api.github.com/users/bhavesh1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-25T06:30:24Z", "updated_at": "2014-06-26T17:33:18Z", "closed_at": "2014-06-26T17:33:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to fetch failed job_ids\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/45", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/45/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/45/events", "html_url": "https://github.com/rq/rq-scheduler/issues/45", "id": 35372142, "node_id": "MDU6SXNzdWUzNTM3MjE0Mg==", "number": 45, "title": "Whats wrong with this code.This is giving ->'str' object has no attribute '__module_ _'", "user": {"login": "bhavesh1", "id": 7771976, "node_id": "MDQ6VXNlcjc3NzE5NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7771976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhavesh1", "html_url": "https://github.com/bhavesh1", "followers_url": "https://api.github.com/users/bhavesh1/followers", "following_url": "https://api.github.com/users/bhavesh1/following{/other_user}", "gists_url": "https://api.github.com/users/bhavesh1/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhavesh1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhavesh1/subscriptions", "organizations_url": "https://api.github.com/users/bhavesh1/orgs", "repos_url": "https://api.github.com/users/bhavesh1/repos", "events_url": "https://api.github.com/users/bhavesh1/events{/privacy}", "received_events_url": "https://api.github.com/users/bhavesh1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2014-06-10T11:18:17Z", "updated_at": "2014-06-12T07:42:12Z", "closed_at": "2014-06-12T07:42:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "import mod\nimport MySQLdb\nimport PySQLPool\nimport redis\nfrom rq import use_connection\nfrom rq_scheduler import Scheduler\nfrom datetime import datetime\nfrom datetime import timedelta\ndb_connection = MySQLdb.connect(\n            host='localhost',\n            user='root',\n            passwd='*******',\n            db='task'\n            )\ncur=db_connection.cursor(MySQLdb.cursors.DictCursor)\ncur.execute(\"Select \\* from raw10\")\nrows=cur.fetchall()\nfun={}\nt={}\narg1={}\narg2={}\nfor row in rows:\n    count=row['id']\n    fun[count]=row['function']\n    t[count]=row['timedelta']\n    arg1[count]=row['Arg1']\n    arg2[count]=row['Arg2']\nuse_connection()\nscheduler=Scheduler()\na=fun[1]\nd=t[1]\ni=arg1[1]\nj=arg2[1]\nscheduler.enqueue_in(timedelta(seconds=d),a,i,j)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/42", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/42/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/42/events", "html_url": "https://github.com/rq/rq-scheduler/issues/42", "id": 34225811, "node_id": "MDU6SXNzdWUzNDIyNTgxMQ==", "number": 42, "title": "Periodic jobs don't work when result_ttl is not None", "user": {"login": "extesy", "id": 65872, "node_id": "MDQ6VXNlcjY1ODcy", "avatar_url": "https://avatars3.githubusercontent.com/u/65872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/extesy", "html_url": "https://github.com/extesy", "followers_url": "https://api.github.com/users/extesy/followers", "following_url": "https://api.github.com/users/extesy/following{/other_user}", "gists_url": "https://api.github.com/users/extesy/gists{/gist_id}", "starred_url": "https://api.github.com/users/extesy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/extesy/subscriptions", "organizations_url": "https://api.github.com/users/extesy/orgs", "repos_url": "https://api.github.com/users/extesy/repos", "events_url": "https://api.github.com/users/extesy/events{/privacy}", "received_events_url": "https://api.github.com/users/extesy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-05-24T05:07:41Z", "updated_at": "2014-10-30T02:20:12Z", "closed_at": "2014-10-30T02:20:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When result_ttl is set to any number which is not None, like 0 or 1, the job will never be rescheduled. It happens because rq cancels the job after ttl passes (see Job.cleanup implementation), therefore scheduler can't find it anymore.\n\nThe problem is that leaving result_ttl to None will keep filling database with garbage results indefinitely.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/41", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/41/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/41/events", "html_url": "https://github.com/rq/rq-scheduler/issues/41", "id": 32320397, "node_id": "MDU6SXNzdWUzMjMyMDM5Nw==", "number": 41, "title": "Scheduled jobs never enter queue", "user": {"login": "ChristophMueller", "id": 1596312, "node_id": "MDQ6VXNlcjE1OTYzMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1596312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChristophMueller", "html_url": "https://github.com/ChristophMueller", "followers_url": "https://api.github.com/users/ChristophMueller/followers", "following_url": "https://api.github.com/users/ChristophMueller/following{/other_user}", "gists_url": "https://api.github.com/users/ChristophMueller/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChristophMueller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChristophMueller/subscriptions", "organizations_url": "https://api.github.com/users/ChristophMueller/orgs", "repos_url": "https://api.github.com/users/ChristophMueller/repos", "events_url": "https://api.github.com/users/ChristophMueller/events{/privacy}", "received_events_url": "https://api.github.com/users/ChristophMueller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-27T20:52:49Z", "updated_at": "2014-04-28T13:23:25Z", "closed_at": "2014-04-28T13:23:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am unsure what is going wrong, but my jobs never enter the queue despite having a scheduler and worker running. rqinfo does not know about the jobs (since the scheduler hasn't put them into the queue yet) until an hour later when they turn up in the queue as failed (I guess they hit a deadline).\nI am running django_rq with rq-scheduler.\n\nThe scheduler is left running: `./manage.py rqscheduler`\nI enqueue the jobs like this:\n\n``` python\ns = django_rq.get_scheduler('system', interval=5)\ndelta = parseTimeDelta(instance.max_time)\ndeadline = datetime.now() + delta\ninstance.deadline = deadline\ninstance.save()\nlogging.debug(\"Setting deadline for %i to %s\" % (instance.id, str(deadline)))\ns.enqueue_at(deadline, instance.make_transition, 'interrupt')\n```\n\nThe output I see is: `Setting deadline for 1 to 2014-04-27 22:37:18.102422`\nWhen I enter ./manage.py shell and check `scheduler.get_jobs(with_times=True)` I see all jobs with the correct time. When I try to run another scheduler it says there is one already running (as expected). Still, no jobs in the worker queue.\n\nWhat is going on?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/40", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/40/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/40/events", "html_url": "https://github.com/rq/rq-scheduler/issues/40", "id": 31192918, "node_id": "MDU6SXNzdWUzMTE5MjkxOA==", "number": 40, "title": "Possible to run more than one rq-scheduler?", "user": {"login": "daf", "id": 228715, "node_id": "MDQ6VXNlcjIyODcxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/228715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daf", "html_url": "https://github.com/daf", "followers_url": "https://api.github.com/users/daf/followers", "following_url": "https://api.github.com/users/daf/following{/other_user}", "gists_url": "https://api.github.com/users/daf/gists{/gist_id}", "starred_url": "https://api.github.com/users/daf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daf/subscriptions", "organizations_url": "https://api.github.com/users/daf/orgs", "repos_url": "https://api.github.com/users/daf/repos", "events_url": "https://api.github.com/users/daf/events{/privacy}", "received_events_url": "https://api.github.com/users/daf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-04-09T20:47:26Z", "updated_at": "2016-10-25T22:38:52Z", "closed_at": "2014-04-10T01:27:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to adjust my application to use two queues (priority based) - they currently all just sit in `default`.  I have a custom runner for rq-scheduler, similar to:\n\n``` python\n#!/usr/bin/env python\n\nfrom rq_scheduler import Scheduler\nscheduler = Scheduler('default', connection=redis_connection)\nscheduler.run()\n```\n\nI tried to add a second similar python script, specifying a different queue, but I get this:\n\n```\nValueError: There's already an active RQ scheduler\n```\n\nLooking at code this confirms it registers itself at a single key in the Redis db.  The `rqscheduler` executable script provided on rq-scheduler installation doesn't even take a queue name - it's just `default`, so I can't run two of those either.\n\nIs it even possible to do what I want to do here?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/38", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/38/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/38/events", "html_url": "https://github.com/rq/rq-scheduler/issues/38", "id": 29142860, "node_id": "MDU6SXNzdWUyOTE0Mjg2MA==", "number": 38, "title": "Set connection STRONG password", "user": {"login": "manelpb", "id": 1784206, "node_id": "MDQ6VXNlcjE3ODQyMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1784206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manelpb", "html_url": "https://github.com/manelpb", "followers_url": "https://api.github.com/users/manelpb/followers", "following_url": "https://api.github.com/users/manelpb/following{/other_user}", "gists_url": "https://api.github.com/users/manelpb/gists{/gist_id}", "starred_url": "https://api.github.com/users/manelpb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manelpb/subscriptions", "organizations_url": "https://api.github.com/users/manelpb/orgs", "repos_url": "https://api.github.com/users/manelpb/repos", "events_url": "https://api.github.com/users/manelpb/events{/privacy}", "received_events_url": "https://api.github.com/users/manelpb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-10T23:42:19Z", "updated_at": "2014-04-04T09:45:30Z", "closed_at": "2014-04-04T09:45:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI have a redis server set with this kind of password: $$%%**&&ROB\n\nBut, when i try to start my rqscheduler setting this password, i get invalid password. \n\nrqscheduler -H 127.0.0.1 -d 0 --password $$%%**&&ROB\n\nHow can i solve this issue? \n\nThanks. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/37", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/37/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/37/events", "html_url": "https://github.com/rq/rq-scheduler/issues/37", "id": 29085414, "node_id": "MDU6SXNzdWUyOTA4NTQxNA==", "number": 37, "title": "Job Execution output", "user": {"login": "uolter", "id": 728837, "node_id": "MDQ6VXNlcjcyODgzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/728837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uolter", "html_url": "https://github.com/uolter", "followers_url": "https://api.github.com/users/uolter/followers", "following_url": "https://api.github.com/users/uolter/following{/other_user}", "gists_url": "https://api.github.com/users/uolter/gists{/gist_id}", "starred_url": "https://api.github.com/users/uolter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uolter/subscriptions", "organizations_url": "https://api.github.com/users/uolter/orgs", "repos_url": "https://api.github.com/users/uolter/repos", "events_url": "https://api.github.com/users/uolter/events{/privacy}", "received_events_url": "https://api.github.com/users/uolter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-10T10:40:08Z", "updated_at": "2014-03-10T15:17:10Z", "closed_at": "2014-03-10T15:17:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Where I can see the outcome of my job?\n\nI used the example I got from the test case. So this is my job.\n\n```\ndef say_hello(name=None):   \n\"\"\"A job with a single argument and a return value.\"\"\"\nif name is None:\n    name = 'Stranger'\n\nreturn 'Hi there, %s!' % (name,)\n```\n\nAnd this is my scheduler:\n\n```\nfrom rq import use_connection\nfrom rq_scheduler import Scheduler\nfrom jobs import say_hello\nfrom datetime import timedelta\n\nuse_connection()\nscheduler = Scheduler()\njob = scheduler.enqueue_in(timedelta(minutes=1), func=say_hello)\n```\n\n   print \"Job %s scheduled. \" % job.id\n\nThe rqscheduler was already running in a different terminal but after a minute nothing happened.\n\nI also tried to save a file inside the say_hello job, but nothing happened. \n\nWhere am I wrong?\n\nThanks\nW.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/33", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/33/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/33/events", "html_url": "https://github.com/rq/rq-scheduler/issues/33", "id": 24888024, "node_id": "MDU6SXNzdWUyNDg4ODAyNA==", "number": 33, "title": "Avoid unpickle / pickle", "user": {"login": "malthe", "id": 26405, "node_id": "MDQ6VXNlcjI2NDA1", "avatar_url": "https://avatars0.githubusercontent.com/u/26405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malthe", "html_url": "https://github.com/malthe", "followers_url": "https://api.github.com/users/malthe/followers", "following_url": "https://api.github.com/users/malthe/following{/other_user}", "gists_url": "https://api.github.com/users/malthe/gists{/gist_id}", "starred_url": "https://api.github.com/users/malthe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malthe/subscriptions", "organizations_url": "https://api.github.com/users/malthe/orgs", "repos_url": "https://api.github.com/users/malthe/repos", "events_url": "https://api.github.com/users/malthe/events{/privacy}", "received_events_url": "https://api.github.com/users/malthe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-12-30T15:39:52Z", "updated_at": "2014-02-17T02:27:49Z", "closed_at": "2014-02-17T02:27:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems unnecessary that the scheduler unpickles the job data, since it will just be pickled immediately again. Besides, it has the side-effect that the scheduler needs the program code available and sometimes environment.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/31", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/31/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/31/events", "html_url": "https://github.com/rq/rq-scheduler/issues/31", "id": 22730561, "node_id": "MDU6SXNzdWUyMjczMDU2MQ==", "number": 31, "title": "Newer stable version to pip", "user": {"login": "Deroky", "id": 5519222, "node_id": "MDQ6VXNlcjU1MTkyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5519222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Deroky", "html_url": "https://github.com/Deroky", "followers_url": "https://api.github.com/users/Deroky/followers", "following_url": "https://api.github.com/users/Deroky/following{/other_user}", "gists_url": "https://api.github.com/users/Deroky/gists{/gist_id}", "starred_url": "https://api.github.com/users/Deroky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Deroky/subscriptions", "organizations_url": "https://api.github.com/users/Deroky/orgs", "repos_url": "https://api.github.com/users/Deroky/repos", "events_url": "https://api.github.com/users/Deroky/events{/privacy}", "received_events_url": "https://api.github.com/users/Deroky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-15T12:55:15Z", "updated_at": "2013-11-17T04:33:52Z", "closed_at": "2013-11-17T04:33:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do you plan on releasing a new version for pip? pip's 0.3.6 has 9 months and doesn't include new important functionality such timeout on scheduling.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/28", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/28/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/28/events", "html_url": "https://github.com/rq/rq-scheduler/issues/28", "id": 18875867, "node_id": "MDU6SXNzdWUxODg3NTg2Nw==", "number": 28, "title": "Notifying the user of an interval lower than that specified by the rqscheduler daemon", "user": {"login": "jmagnusson", "id": 190835, "node_id": "MDQ6VXNlcjE5MDgzNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/190835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmagnusson", "html_url": "https://github.com/jmagnusson", "followers_url": "https://api.github.com/users/jmagnusson/followers", "following_url": "https://api.github.com/users/jmagnusson/following{/other_user}", "gists_url": "https://api.github.com/users/jmagnusson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmagnusson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmagnusson/subscriptions", "organizations_url": "https://api.github.com/users/jmagnusson/orgs", "repos_url": "https://api.github.com/users/jmagnusson/repos", "events_url": "https://api.github.com/users/jmagnusson/events{/privacy}", "received_events_url": "https://api.github.com/users/jmagnusson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-09-02T18:25:56Z", "updated_at": "2019-04-10T02:53:34Z", "closed_at": "2015-09-19T14:54:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Today the default interval for rqscheduler is 60 seconds. If one passes an interval lower than that value it will still be accepted, but executed at the configured interval. Obvious if you read the code, but maybe not as clear to the user. Could the user somehow be notified of this?\n\nIf I'm not completely mistaken it's not possible to know the rqscheduler interval when creating the job; but perhaps the job could be replaced with another one by the rqscheduler daemon that just raises an exception explaining that the interval is lower than what's been configured?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/26", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/26/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/26/events", "html_url": "https://github.com/rq/rq-scheduler/issues/26", "id": 16699554, "node_id": "MDU6SXNzdWUxNjY5OTU1NA==", "number": 26, "title": "Question: function import error", "user": {"login": "ssbozy", "id": 604012, "node_id": "MDQ6VXNlcjYwNDAxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/604012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbozy", "html_url": "https://github.com/ssbozy", "followers_url": "https://api.github.com/users/ssbozy/followers", "following_url": "https://api.github.com/users/ssbozy/following{/other_user}", "gists_url": "https://api.github.com/users/ssbozy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbozy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbozy/subscriptions", "organizations_url": "https://api.github.com/users/ssbozy/orgs", "repos_url": "https://api.github.com/users/ssbozy/repos", "events_url": "https://api.github.com/users/ssbozy/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbozy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-12T19:58:44Z", "updated_at": "2013-07-16T18:06:00Z", "closed_at": "2013-07-16T18:06:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "This may be a silly issue but this is what I am getting often. \nEvery time I try to schedule a job using enqueue_at, the job gets scheduled but when it  tries to execute the function, it throws a module ImportError. Any suggestions? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/24", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/24/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/24/events", "html_url": "https://github.com/rq/rq-scheduler/issues/24", "id": 16177194, "node_id": "MDU6SXNzdWUxNjE3NzE5NA==", "number": 24, "title": "Support pagination in get_jobs", "user": {"login": "sylvinus", "id": 410452, "node_id": "MDQ6VXNlcjQxMDQ1Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/410452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylvinus", "html_url": "https://github.com/sylvinus", "followers_url": "https://api.github.com/users/sylvinus/followers", "following_url": "https://api.github.com/users/sylvinus/following{/other_user}", "gists_url": "https://api.github.com/users/sylvinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylvinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylvinus/subscriptions", "organizations_url": "https://api.github.com/users/sylvinus/orgs", "repos_url": "https://api.github.com/users/sylvinus/repos", "events_url": "https://api.github.com/users/sylvinus/events{/privacy}", "received_events_url": "https://api.github.com/users/sylvinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-29T16:58:15Z", "updated_at": "2013-06-30T00:57:42Z", "closed_at": "2013-06-30T00:57:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "rq recently added pagination support to its own get_jobs method with offset=0, length=-1 parameters. Would be great to have it also in the scheduler, so that we can properly display scheduled jobs in the dashboard.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/23", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/23/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/23/events", "html_url": "https://github.com/rq/rq-scheduler/issues/23", "id": 15213162, "node_id": "MDU6SXNzdWUxNTIxMzE2Mg==", "number": 23, "title": "How to record every execution result in repeated job?", "user": {"login": "PinkyJie", "id": 551329, "node_id": "MDQ6VXNlcjU1MTMyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/551329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PinkyJie", "html_url": "https://github.com/PinkyJie", "followers_url": "https://api.github.com/users/PinkyJie/followers", "following_url": "https://api.github.com/users/PinkyJie/following{/other_user}", "gists_url": "https://api.github.com/users/PinkyJie/gists{/gist_id}", "starred_url": "https://api.github.com/users/PinkyJie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PinkyJie/subscriptions", "organizations_url": "https://api.github.com/users/PinkyJie/orgs", "repos_url": "https://api.github.com/users/PinkyJie/repos", "events_url": "https://api.github.com/users/PinkyJie/events{/privacy}", "received_events_url": "https://api.github.com/users/PinkyJie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-06T09:25:50Z", "updated_at": "2013-06-30T00:58:25Z", "closed_at": "2013-06-30T00:58:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanna record every execution result in redis, using a `hash`, key is job id, filed is timestamp, value is result. The question is how do I get the job result, is there a callback or event listener. I think it's stupid to check the `job.result` or `job.status` in a while loop.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/21", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/21/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/21/events", "html_url": "https://github.com/rq/rq-scheduler/issues/21", "id": 13018464, "node_id": "MDU6SXNzdWUxMzAxODQ2NA==", "number": 21, "title": "Debug logging", "user": {"login": "chrisfleisch", "id": 847769, "node_id": "MDQ6VXNlcjg0Nzc2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/847769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisfleisch", "html_url": "https://github.com/chrisfleisch", "followers_url": "https://api.github.com/users/chrisfleisch/followers", "following_url": "https://api.github.com/users/chrisfleisch/following{/other_user}", "gists_url": "https://api.github.com/users/chrisfleisch/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisfleisch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisfleisch/subscriptions", "organizations_url": "https://api.github.com/users/chrisfleisch/orgs", "repos_url": "https://api.github.com/users/chrisfleisch/repos", "events_url": "https://api.github.com/users/chrisfleisch/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisfleisch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-04-10T13:26:24Z", "updated_at": "2013-05-08T01:16:29Z", "closed_at": "2013-05-08T01:16:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I get the debug message in the console using the new logger? It looks like the logging changed from version 0.3.4 to 0.3.5 and I don't see the debug message when I start rqscheduler anymore. I'm using rqscheduler with django-rq.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/20", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/20/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/20/events", "html_url": "https://github.com/rq/rq-scheduler/issues/20", "id": 11643222, "node_id": "MDU6SXNzdWUxMTY0MzIyMg==", "number": 20, "title": "When the rq sheduler was stopped by some unexpected ways( like hard server reboot) it will not start after it", "user": {"login": "aldarund", "id": 571159, "node_id": "MDQ6VXNlcjU3MTE1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/571159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldarund", "html_url": "https://github.com/aldarund", "followers_url": "https://api.github.com/users/aldarund/followers", "following_url": "https://api.github.com/users/aldarund/following{/other_user}", "gists_url": "https://api.github.com/users/aldarund/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldarund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldarund/subscriptions", "organizations_url": "https://api.github.com/users/aldarund/orgs", "repos_url": "https://api.github.com/users/aldarund/repos", "events_url": "https://api.github.com/users/aldarund/events{/privacy}", "received_events_url": "https://api.github.com/users/aldarund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-03-04T22:47:01Z", "updated_at": "2013-03-06T11:42:49Z", "closed_at": "2013-03-06T11:42:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because  it check for death key and for sheduler key.  The last one will exist and the first one will be absent. So it wont run again.\nI suggest to use an expiring live key for this. Rq sheduler should update it every bit. And check for it when start. So with this algorith this problem will not appear.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/19", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/19/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/19/events", "html_url": "https://github.com/rq/rq-scheduler/issues/19", "id": 11346419, "node_id": "MDU6SXNzdWUxMTM0NjQxOQ==", "number": 19, "title": "ValueError: There's already an active RQ scheduler", "user": {"login": "paulocheque", "id": 94350, "node_id": "MDQ6VXNlcjk0MzUw", "avatar_url": "https://avatars1.githubusercontent.com/u/94350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulocheque", "html_url": "https://github.com/paulocheque", "followers_url": "https://api.github.com/users/paulocheque/followers", "following_url": "https://api.github.com/users/paulocheque/following{/other_user}", "gists_url": "https://api.github.com/users/paulocheque/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulocheque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulocheque/subscriptions", "organizations_url": "https://api.github.com/users/paulocheque/orgs", "repos_url": "https://api.github.com/users/paulocheque/repos", "events_url": "https://api.github.com/users/paulocheque/events{/privacy}", "received_events_url": "https://api.github.com/users/paulocheque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-02-25T04:09:37Z", "updated_at": "2020-08-21T02:41:13Z", "closed_at": "2013-03-06T11:43:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am receiving this error, but I can not find the process running. Any ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/16", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/16/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/16/events", "html_url": "https://github.com/rq/rq-scheduler/issues/16", "id": 10695173, "node_id": "MDU6SXNzdWUxMDY5NTE3Mw==", "number": 16, "title": "Support StrictRedis as the connection class", "user": {"login": "nvie", "id": 83844, "node_id": "MDQ6VXNlcjgzODQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/83844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvie", "html_url": "https://github.com/nvie", "followers_url": "https://api.github.com/users/nvie/followers", "following_url": "https://api.github.com/users/nvie/following{/other_user}", "gists_url": "https://api.github.com/users/nvie/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvie/subscriptions", "organizations_url": "https://api.github.com/users/nvie/orgs", "repos_url": "https://api.github.com/users/nvie/repos", "events_url": "https://api.github.com/users/nvie/events{/privacy}", "received_events_url": "https://api.github.com/users/nvie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-02-06T15:08:36Z", "updated_at": "2013-02-07T09:26:36Z", "closed_at": "2013-02-07T09:26:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using the `Redis` class from [redis](https://github.com/andymccurdy/redis-py)'s library, it all works. However, the `zadd` function call fails when you pass rq-scheduler a `StrictRedis` connection. Relevant stack trace:\n\n```\n15:51:14 web.1        | Traceback (most recent call last):\n15:51:14 web.1        |   File \"/Users/nvie/.virtualenvs/yes/lib/python2.7/site-packages/rq_scheduler/scheduler.py\", line 150, in schedule\n15:51:14 web.1        |     int(scheduled_time.strftime('%s')))\n15:51:14 web.1        |   File \"/Users/nvie/.virtualenvs/yes/lib/python2.7/site-packages/redis/client.py\", line 1033, in zadd\n15:51:14 web.1        |     return self.execute_command('ZADD', name, *pieces)\n15:51:14 web.1        |   File \"/Users/nvie/.virtualenvs/yes/lib/python2.7/site-packages/redis/client.py\", line 360, in execute_command\n15:51:14 web.1        |     return self.parse_response(connection, command_name, **options)\n15:51:14 web.1        |   File \"/Users/nvie/.virtualenvs/yes/lib/python2.7/site-packages/redis/client.py\", line 370, in parse_response\n15:51:14 web.1        |     response = connection.read_response()\n15:51:14 web.1        |   File \"/Users/nvie/.virtualenvs/yes/lib/python2.7/site-packages/redis/connection.py\", line 309, in read_response\n15:51:14 web.1        |     raise response\n15:51:14 web.1        | redis.exceptions.ResponseError: value is not a valid float\n15:51:14 web.1        | process terminated\n```\n\nUsing StrictRedis is a better practice anyway than plain Redis, as it mimics the exact order and type of the command signatures described on [redis.io](http://redis.io/commands), and should definitely be supported. I think it's best to support both implementations and work around this unfortunate design choice of the redis lib.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/15", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/15/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/15/events", "html_url": "https://github.com/rq/rq-scheduler/issues/15", "id": 10693862, "node_id": "MDU6SXNzdWUxMDY5Mzg2Mg==", "number": 15, "title": "Replace all instances of datetime.now() by datetime.utcnow()", "user": {"login": "nvie", "id": 83844, "node_id": "MDQ6VXNlcjgzODQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/83844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvie", "html_url": "https://github.com/nvie", "followers_url": "https://api.github.com/users/nvie/followers", "following_url": "https://api.github.com/users/nvie/following{/other_user}", "gists_url": "https://api.github.com/users/nvie/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvie/subscriptions", "organizations_url": "https://api.github.com/users/nvie/orgs", "repos_url": "https://api.github.com/users/nvie/repos", "events_url": "https://api.github.com/users/nvie/events{/privacy}", "received_events_url": "https://api.github.com/users/nvie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-02-06T14:35:23Z", "updated_at": "2014-04-04T09:36:05Z", "closed_at": "2014-04-04T09:36:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`datetime.now()` depends on the current locale and timezone, but does not include that relevant piece of information, and should generally be avoided in any Python program. Instead, only UTC based datetimes or Unix timestamps (that are in UTC) should be used internally.\n\nFor convenience, you can use the [times](https://github.com/nvie/times) library, which is already a dependency of RQ itself:\n\n``` python\nimport times\n\ntimes.now()  # current UTC-based datetime\ntimes.to_unix(times.now())  # current UTC-based Unix timestamp (safe for insertion into zsets)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/13", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/13/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/13/events", "html_url": "https://github.com/rq/rq-scheduler/issues/13", "id": 10667098, "node_id": "MDU6SXNzdWUxMDY2NzA5OA==", "number": 13, "title": "Question: Scheduled jobs", "user": {"login": "KristianOellegaard", "id": 235775, "node_id": "MDQ6VXNlcjIzNTc3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/235775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KristianOellegaard", "html_url": "https://github.com/KristianOellegaard", "followers_url": "https://api.github.com/users/KristianOellegaard/followers", "following_url": "https://api.github.com/users/KristianOellegaard/following{/other_user}", "gists_url": "https://api.github.com/users/KristianOellegaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/KristianOellegaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KristianOellegaard/subscriptions", "organizations_url": "https://api.github.com/users/KristianOellegaard/orgs", "repos_url": "https://api.github.com/users/KristianOellegaard/repos", "events_url": "https://api.github.com/users/KristianOellegaard/events{/privacy}", "received_events_url": "https://api.github.com/users/KristianOellegaard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-02-05T20:54:23Z", "updated_at": "2014-07-30T21:58:09Z", "closed_at": "2013-02-06T01:08:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nI want to implement scheduled jobs in my web app, but I'm a bit unsure how it works.\n\nIf I use this code:\n\n``` python\nscheduler.schedule(\n    scheduled_time=datetime.now(), # Time for first execution\n    func=func,                     # Function to be queued\n    args=[arg1, arg2],             # Arguments passed into function when executed\n    kwargs={'foo': 'bar'},       # Keyword arguments passed into function when executed\n    interval=60,                   # Time before the function is called again, in seconds\n    repeat=10                      # Repeat this number of times (None means repeat forever)\n)\n```\n\nand I have it somewhere importable by my webserver, what will happen if it gets imported several times, or on webserver restart? Will it automatically check if the job exists in redis already and add if appropriate or add it multiple times?\n\nKind regards,\n\nKristian\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/12", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/12/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/12/events", "html_url": "https://github.com/rq/rq-scheduler/issues/12", "id": 10355378, "node_id": "MDU6SXNzdWUxMDM1NTM3OA==", "number": 12, "title": "SyntaxWarning", "user": {"login": "chrisfleisch", "id": 847769, "node_id": "MDQ6VXNlcjg0Nzc2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/847769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisfleisch", "html_url": "https://github.com/chrisfleisch", "followers_url": "https://api.github.com/users/chrisfleisch/followers", "following_url": "https://api.github.com/users/chrisfleisch/following{/other_user}", "gists_url": "https://api.github.com/users/chrisfleisch/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisfleisch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisfleisch/subscriptions", "organizations_url": "https://api.github.com/users/chrisfleisch/orgs", "repos_url": "https://api.github.com/users/chrisfleisch/repos", "events_url": "https://api.github.com/users/chrisfleisch/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisfleisch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-01-27T16:14:29Z", "updated_at": "2013-01-30T12:31:50Z", "closed_at": "2013-01-30T12:31:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using rq version 0.3.4 with rq-scheduler shows this syntax warning in the console output:\n\n> /lib/python2.7/site-packages/rq/job.py:382: SyntaxWarning: Getting custom properties from the job instance directly >will be unsupported as of RQ 0.4. Please use the meta dict to store all custom >variables.  So instead of this:\n> \n>   job.foo\n> \n> Use this:\n> \n>   job.meta['foo']\n> \n> SyntaxWarning)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/11", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/11/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/11/events", "html_url": "https://github.com/rq/rq-scheduler/issues/11", "id": 8813000, "node_id": "MDU6SXNzdWU4ODEzMDAw", "number": 11, "title": "Subtask", "user": {"login": "chrisfleisch", "id": 847769, "node_id": "MDQ6VXNlcjg0Nzc2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/847769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisfleisch", "html_url": "https://github.com/chrisfleisch", "followers_url": "https://api.github.com/users/chrisfleisch/followers", "following_url": "https://api.github.com/users/chrisfleisch/following{/other_user}", "gists_url": "https://api.github.com/users/chrisfleisch/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisfleisch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisfleisch/subscriptions", "organizations_url": "https://api.github.com/users/chrisfleisch/orgs", "repos_url": "https://api.github.com/users/chrisfleisch/repos", "events_url": "https://api.github.com/users/chrisfleisch/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisfleisch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-11-29T14:52:03Z", "updated_at": "2012-11-29T19:37:32Z", "closed_at": "2012-11-29T16:27:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to schedule another task to run from inside another scheduled task?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/6", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/6/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/6/events", "html_url": "https://github.com/rq/rq-scheduler/issues/6", "id": 7765362, "node_id": "MDU6SXNzdWU3NzY1MzYy", "number": 6, "title": "Missing tags", "user": {"login": "EvaSDK", "id": 745513, "node_id": "MDQ6VXNlcjc0NTUxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/745513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EvaSDK", "html_url": "https://github.com/EvaSDK", "followers_url": "https://api.github.com/users/EvaSDK/followers", "following_url": "https://api.github.com/users/EvaSDK/following{/other_user}", "gists_url": "https://api.github.com/users/EvaSDK/gists{/gist_id}", "starred_url": "https://api.github.com/users/EvaSDK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EvaSDK/subscriptions", "organizations_url": "https://api.github.com/users/EvaSDK/orgs", "repos_url": "https://api.github.com/users/EvaSDK/repos", "events_url": "https://api.github.com/users/EvaSDK/events{/privacy}", "received_events_url": "https://api.github.com/users/EvaSDK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-10-22T13:03:40Z", "updated_at": "2012-11-12T12:47:35Z", "closed_at": "2012-11-11T10:24:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please push tags for your releases.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/5", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/5/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/5/events", "html_url": "https://github.com/rq/rq-scheduler/issues/5", "id": 6620394, "node_id": "MDU6SXNzdWU2NjIwMzk0", "number": 5, "title": "About timeout", "user": {"login": "dzen", "id": 50241, "node_id": "MDQ6VXNlcjUwMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/50241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzen", "html_url": "https://github.com/dzen", "followers_url": "https://api.github.com/users/dzen/followers", "following_url": "https://api.github.com/users/dzen/following{/other_user}", "gists_url": "https://api.github.com/users/dzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzen/subscriptions", "organizations_url": "https://api.github.com/users/dzen/orgs", "repos_url": "https://api.github.com/users/dzen/repos", "events_url": "https://api.github.com/users/dzen/events{/privacy}", "received_events_url": "https://api.github.com/users/dzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-09-03T17:58:30Z", "updated_at": "2014-07-01T18:55:50Z", "closed_at": "2012-09-03T23:11:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nIs there a way to configure the maximum execution time of a job ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/4", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/4/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/4/events", "html_url": "https://github.com/rq/rq-scheduler/issues/4", "id": 6031088, "node_id": "MDU6SXNzdWU2MDMxMDg4", "number": 4, "title": "Having NoSuchJobError", "user": {"login": "dzen", "id": 50241, "node_id": "MDQ6VXNlcjUwMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/50241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzen", "html_url": "https://github.com/dzen", "followers_url": "https://api.github.com/users/dzen/followers", "following_url": "https://api.github.com/users/dzen/following{/other_user}", "gists_url": "https://api.github.com/users/dzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzen/subscriptions", "organizations_url": "https://api.github.com/users/dzen/orgs", "repos_url": "https://api.github.com/users/dzen/repos", "events_url": "https://api.github.com/users/dzen/events{/privacy}", "received_events_url": "https://api.github.com/users/dzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-08-04T16:59:43Z", "updated_at": "2012-12-09T02:46:34Z", "closed_at": "2012-12-09T02:46:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI'm using rq-schedule since two weeks, but I'm having this exception when I re launch the job if it has failed :/\n\nHere is the traceback:\n\n```\n\n2012-08-04 15:14] DEBUG: scheduler: Running RQ scheduler...\n[2012-08-04 15:15] DEBUG: scheduler: Pushing 6553125f-a023-40bc-91d3-287488db5766 to rss_collector\n\n[2012-08-04 15:25] DEBUG: scheduler: Pushing 6553125f-a023-40bc-91d3-287488db5766 to rss_collector\nTraceback (most recent call last):\n  File \"/home/benoit/projs/collectr/env/bin/rqscheduler\", line 9, in <module>\n    load_entry_point('rq-scheduler==0.3.0', 'console_scripts', 'rqscheduler')()\n  File \"/home/benoit/projs/collectr/env/local/lib/python2.7/site-packages/rq_scheduler/scripts/rqscheduler.py\", line 21, in main\n    scheduler.run()\n  File \"/home/benoit/projs/collectr/env/local/lib/python2.7/site-packages/rq_scheduler/scheduler.py\", line 231, in run\n    self.enqueue_jobs()\n  File \"/home/benoit/projs/collectr/env/local/lib/python2.7/site-packages/rq_scheduler/scheduler.py\", line 216, in enqueue_jobs\n    jobs = self.get_jobs_to_queue()\n  File \"/home/benoit/projs/collectr/env/local/lib/python2.7/site-packages/rq_scheduler/scheduler.py\", line 175, in get_jobs_to_queue\n    return [Job.fetch(job_id, connection=self.connection) for job_id in job_ids]\n  File \"/home/benoit/projs/collectr/env/local/lib/python2.7/site-packages/rq/job.py\", line 112, in fetch\n    job.refresh()\n  File \"/home/benoit/projs/collectr/env/local/lib/python2.7/site-packages/rq/job.py\", line 200, in refresh\n    raise NoSuchJobError('No such job: %s' % (key,))\nrq.exceptions.NoSuchJobError: No such job: rq:job:6553125f-a023-40bc-91d3-287488db5766\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/rq-scheduler/issues/1", "repository_url": "https://api.github.com/repos/rq/rq-scheduler", "labels_url": "https://api.github.com/repos/rq/rq-scheduler/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/rq/rq-scheduler/issues/1/comments", "events_url": "https://api.github.com/repos/rq/rq-scheduler/issues/1/events", "html_url": "https://github.com/rq/rq-scheduler/issues/1", "id": 5110887, "node_id": "MDU6SXNzdWU1MTEwODg3", "number": 1, "title": "README.rst is a setup.py requirement but missing from 0.1 package", "user": {"login": "davecoutts", "id": 484306, "node_id": "MDQ6VXNlcjQ4NDMwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/484306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davecoutts", "html_url": "https://github.com/davecoutts", "followers_url": "https://api.github.com/users/davecoutts/followers", "following_url": "https://api.github.com/users/davecoutts/following{/other_user}", "gists_url": "https://api.github.com/users/davecoutts/gists{/gist_id}", "starred_url": "https://api.github.com/users/davecoutts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davecoutts/subscriptions", "organizations_url": "https://api.github.com/users/davecoutts/orgs", "repos_url": "https://api.github.com/users/davecoutts/repos", "events_url": "https://api.github.com/users/davecoutts/events{/privacy}", "received_events_url": "https://api.github.com/users/davecoutts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-06-17T08:24:07Z", "updated_at": "2012-06-17T10:19:57Z", "closed_at": "2012-06-17T08:38:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "pip install is failing with\n\n``` python\n  Running setup.py egg_info for package rq-scheduler\n    Traceback (most recent call last):\n      File \"<string>\", line 14, in <module>\n      File \"/home/dave/.virtualenvs/rque/build/rq-scheduler/setup.py\", line 13, in <module>\n        long_description=open('README.rst').read(),\n    IOError: [Errno 2] No such file or directory: 'README.rst'\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 14, in <module>\n\n  File \"/home/dave/.virtualenvs/rque/build/rq-scheduler/setup.py\", line 13, in <module>\n\n    long_description=open('README.rst').read(),\n\nIOError: [Errno 2] No such file or directory: 'README.rst'\n\n```\n\nREADME.rst appears to be missing from the package.\n\n``` bash\ndave@xxps:~/Downloads/rq-scheduler-0.1$ tree\n.\n\u251c\u2500\u2500 LICENSE.txt\n\u251c\u2500\u2500 MANIFEST.in\n\u251c\u2500\u2500 PKG-INFO\n\u251c\u2500\u2500 rq_scheduler\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 scheduler.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 scripts\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 rqscheduler.py\n\u251c\u2500\u2500 rq_scheduler.egg-info\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 dependency_links.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 entry_points.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 not-zip-safe\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 PKG-INFO\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 requires.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 SOURCES.txt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 top_level.txt\n\u251c\u2500\u2500 setup.cfg\n\u2514\u2500\u2500 setup.py\n\n3 directories, 16 files\n```\n\n``` bash\ndave@xxps:~/Downloads/rq-scheduler-0.1$ cat setup.py \n# -*- coding: utf-8 -*-\nfrom setuptools import setup\n\nsetup(\n    name='rq-scheduler',\n    version='0.1',\n    author='Selwin Ong',\n    author_email='selwin.ong@gmail.com',\n    packages=['rq_scheduler'],\n    url='https://github.com/ui/rq-scheduler',\n    license='MIT',\n    description='Provides job scheduling capabilities to RQ (Redis Queue)',\n    long_description=open('README.rst').read(),\n    zip_safe=False,\n    include_package_data=True,\n    entry_points='''\\\n    [console_scripts]\n    rqscheduler = rq_scheduler.scripts.rqscheduler:main\n    ''',\n    package_data = { '': ['README.rst'] },\n    install_requires=['rq'],\n    classifiers=[\n        'Development Status :: 3 - Alpha',\n        'Environment :: Console',\n        'Intended Audience :: Developers',\n        'License :: OSI Approved :: MIT License',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python',\n        'Topic :: Software Development :: Libraries :: Python Modules',\n    ]\n\n```\n", "performed_via_github_app": null, "score": 1.0}]}