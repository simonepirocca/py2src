{"total_count": 10, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mriehl/fysom/issues/37", "repository_url": "https://api.github.com/repos/mriehl/fysom", "labels_url": "https://api.github.com/repos/mriehl/fysom/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/mriehl/fysom/issues/37/comments", "events_url": "https://api.github.com/repos/mriehl/fysom/issues/37/events", "html_url": "https://github.com/mriehl/fysom/issues/37", "id": 293206233, "node_id": "MDU6SXNzdWUyOTMyMDYyMzM=", "number": 37, "title": "onchangestate callback prints in reverse order", "user": {"login": "vincent-olivert-riera", "id": 6151586, "node_id": "MDQ6VXNlcjYxNTE1ODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6151586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincent-olivert-riera", "html_url": "https://github.com/vincent-olivert-riera", "followers_url": "https://api.github.com/users/vincent-olivert-riera/followers", "following_url": "https://api.github.com/users/vincent-olivert-riera/following{/other_user}", "gists_url": "https://api.github.com/users/vincent-olivert-riera/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincent-olivert-riera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincent-olivert-riera/subscriptions", "organizations_url": "https://api.github.com/users/vincent-olivert-riera/orgs", "repos_url": "https://api.github.com/users/vincent-olivert-riera/repos", "events_url": "https://api.github.com/users/vincent-olivert-riera/events{/privacy}", "received_events_url": "https://api.github.com/users/vincent-olivert-riera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-31T15:44:09Z", "updated_at": "2018-01-31T18:56:24Z", "closed_at": "2018-01-31T18:56:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I want to print the information of every state change I see two simple ways to do it:\r\n\r\n1. use a print statement on an `onchangestate` callback function\r\n2. use a print statement on each state callback function\r\n\r\nIf I **do** use `onchangestate` things are printed in reverse order:\r\n\r\n```\r\n$ ./fysom-log-test.py \r\nnext: one -> two\r\ninitialize: none -> one\r\n```\r\n\r\nIf I do **not** use `onchangestate` things are printed in the right order:\r\n\r\n```\r\n$ ./fysom-log-test-without-onchangestate.py \r\ninitialize: none -> one\r\nnext: one -> two\r\n```\r\n\r\nHere is the code example for the version which **does** use `onchangestate`:\r\n\r\n```\r\n#!/usr/bin/env python\r\nfrom fysom import Fysom\r\n\r\nclass FSM(object):\r\n    def __init__(self, init=True):\r\n        self.fsm = Fysom({\r\n            'initial': 'none',\r\n            'events': [\r\n                {\r\n                    'src': 'none',\r\n                    'name': 'initialize',\r\n                    'dst': 'one'\r\n                },\r\n                {\r\n                    'src': 'one',\r\n                    'name': 'next',\r\n                    'dst': 'two'\r\n                }\r\n            ],\r\n            'callbacks': {\r\n                'onchangestate': self.printstatechange,\r\n                'onone': self.on_one,\r\n                'ontwo': self.on_two\r\n            }\r\n        })\r\n        # Transition to the 'one' state\r\n        self.fsm.initialize()\r\n\r\n    @staticmethod\r\n    def printstatechange(event):\r\n        print '{}: {} -> {}'.format(event.event, event.src, event.dst)\r\n\r\n    # Callbacks that will be executed for each state\r\n    def on_one(self, _):\r\n            self.fsm.next()\r\n\r\n    def on_two(self, _):\r\n            pass\r\n\r\n\r\ndef main():\r\n    FSM()\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nAnd here is the one that does **not** use `onchangestate`:\r\n\r\n```\r\n#!/usr/bin/env python\r\nfrom fysom import Fysom\r\n\r\nclass FSM(object):\r\n    def __init__(self, init=True):\r\n        self.fsm = Fysom({\r\n            'initial': 'none',\r\n            'events': [\r\n                {\r\n                    'src': 'none',\r\n                    'name': 'initialize',\r\n                    'dst': 'one'\r\n                },\r\n                {\r\n                    'src': 'one',\r\n                    'name': 'next',\r\n                    'dst': 'two'\r\n                }\r\n            ],\r\n            'callbacks': {\r\n                'onone': self.on_one,\r\n                'ontwo': self.on_two\r\n            }\r\n        })\r\n        # Transition to the 'one' state\r\n        self.fsm.initialize()\r\n\r\n    # Callbacks that will be executed for each state\r\n    def on_one(self, event):\r\n        print '{}: {} -> {}'.format(event.event, event.src, event.dst)\r\n        self.fsm.next()\r\n\r\n    def on_two(self, event):\r\n        print '{}: {} -> {}'.format(event.event, event.src, event.dst)\r\n\r\n\r\ndef main():\r\n    FSM()\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nWhy things printed using an `onchangestate` callback are in reverse order?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mriehl/fysom/issues/21", "repository_url": "https://api.github.com/repos/mriehl/fysom", "labels_url": "https://api.github.com/repos/mriehl/fysom/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/mriehl/fysom/issues/21/comments", "events_url": "https://api.github.com/repos/mriehl/fysom/issues/21/events", "html_url": "https://github.com/mriehl/fysom/issues/21", "id": 68498635, "node_id": "MDU6SXNzdWU2ODQ5ODYzNQ==", "number": 21, "title": "Garbage collection in Fysom", "user": {"login": "sjlongland", "id": 1710526, "node_id": "MDQ6VXNlcjE3MTA1MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1710526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjlongland", "html_url": "https://github.com/sjlongland", "followers_url": "https://api.github.com/users/sjlongland/followers", "following_url": "https://api.github.com/users/sjlongland/following{/other_user}", "gists_url": "https://api.github.com/users/sjlongland/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjlongland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjlongland/subscriptions", "organizations_url": "https://api.github.com/users/sjlongland/orgs", "repos_url": "https://api.github.com/users/sjlongland/repos", "events_url": "https://api.github.com/users/sjlongland/events{/privacy}", "received_events_url": "https://api.github.com/users/sjlongland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-14T21:14:20Z", "updated_at": "2015-04-19T22:46:07Z", "closed_at": "2015-04-15T08:51:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI recently stumbled across this project and it looks to be a very well contained library.  One concern I have is the use of callbacks with garbage collection.\n\nSo I have an object with a state machine, and a few callbacks:\n\n```\nimport fysom\nimport gc\nclass MyObject(object):\n    def __init__(self, *args, **kwargs):\n        self.state_machine = fysom.Fysom(\n            initial='a',\n            events=[\n                ('go_to_b', 'a', 'b'),\n                ('go_to_a', 'b', 'a'),\n            ],\n            callbacks={\n                'ona': self._on_a,\n                'onb': self._on_b,\n            }\n        )\n    def __del__(self):\n        print ('Goodbye from %s' % self)\n    def _on_a(self, *args, **kwargs):\n        print ('In state A: args=%s, kwargs=%s' % (args, kwargs))\n    def _on_b(self, *args, **kwargs):\n        print ('In state B: args=%s, kwargs=%s' % (args, kwargs))\n\nobj = MyObject()\nobj.state_machine.go_to_b(123)\nobj.state_machine.go_to_a(234)\ndel obj\n\n# This should be empty, but isn't due to circular reference\nprint (filter(lambda o : isinstance(o, MyObject), gc.get_objects()))\n```\n\nIf I run that, I get this:\n\n```\nRC=0 stuartl@rikishi /tmp $ python test.py \nIn state A: args=(<fysom._e_obj object at 0x7f3fe6898b50>,), kwargs={}\nIn state B: args=(<fysom._e_obj object at 0x7f3fe6898b50>,), kwargs={}\nIn state A: args=(<fysom._e_obj object at 0x7f3fe6898b50>,), kwargs={}\n[<__main__.MyObject object at 0x7f3fe6886d10>]\n```\n\nIs there some way that I can structure my code to prevent this from happening?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mriehl/fysom/issues/20", "repository_url": "https://api.github.com/repos/mriehl/fysom", "labels_url": "https://api.github.com/repos/mriehl/fysom/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/mriehl/fysom/issues/20/comments", "events_url": "https://api.github.com/repos/mriehl/fysom/issues/20/events", "html_url": "https://github.com/mriehl/fysom/issues/20", "id": 66115530, "node_id": "MDU6SXNzdWU2NjExNTUzMA==", "number": 20, "title": "Event transition thread safety", "user": {"login": "raj2569", "id": 30658, "node_id": "MDQ6VXNlcjMwNjU4", "avatar_url": "https://avatars3.githubusercontent.com/u/30658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raj2569", "html_url": "https://github.com/raj2569", "followers_url": "https://api.github.com/users/raj2569/followers", "following_url": "https://api.github.com/users/raj2569/following{/other_user}", "gists_url": "https://api.github.com/users/raj2569/gists{/gist_id}", "starred_url": "https://api.github.com/users/raj2569/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raj2569/subscriptions", "organizations_url": "https://api.github.com/users/raj2569/orgs", "repos_url": "https://api.github.com/users/raj2569/repos", "events_url": "https://api.github.com/users/raj2569/events{/privacy}", "received_events_url": "https://api.github.com/users/raj2569/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 32159801, "node_id": "MDU6TGFiZWwzMjE1OTgwMQ==", "url": "https://api.github.com/repos/mriehl/fysom/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 32159803, "node_id": "MDU6TGFiZWwzMjE1OTgwMw==", "url": "https://api.github.com/repos/mriehl/fysom/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-04-03T09:30:46Z", "updated_at": "2015-04-07T16:05:55Z", "closed_at": "2015-04-07T16:05:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\n```\nTraceback (most recent call last):\n  File \"log.py\", line 220, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/fysom/__init__.py\", line 216, in fn\n    \"event %s inappropriate because previous transition did not complete\" % event)\nfysom.FysomError: event myevent inappropriate because previous transition did not complete\n```\n\nI get this error occasionally in my program. I understand that this happens because one event was received when another event was being processed. But what strategy can be used to make sure that the event is not missed even when previous transition is going on? Some sort of queuing mechanism is possible?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mriehl/fysom/issues/17", "repository_url": "https://api.github.com/repos/mriehl/fysom", "labels_url": "https://api.github.com/repos/mriehl/fysom/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/mriehl/fysom/issues/17/comments", "events_url": "https://api.github.com/repos/mriehl/fysom/issues/17/events", "html_url": "https://github.com/mriehl/fysom/issues/17", "id": 46037117, "node_id": "MDU6SXNzdWU0NjAzNzExNw==", "number": 17, "title": "No way to cancel an asynchronous transition", "user": {"login": "danielkza", "id": 747342, "node_id": "MDQ6VXNlcjc0NzM0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/747342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielkza", "html_url": "https://github.com/danielkza", "followers_url": "https://api.github.com/users/danielkza/followers", "following_url": "https://api.github.com/users/danielkza/following{/other_user}", "gists_url": "https://api.github.com/users/danielkza/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielkza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielkza/subscriptions", "organizations_url": "https://api.github.com/users/danielkza/orgs", "repos_url": "https://api.github.com/users/danielkza/repos", "events_url": "https://api.github.com/users/danielkza/events{/privacy}", "received_events_url": "https://api.github.com/users/danielkza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-16T21:20:03Z", "updated_at": "2015-02-04T17:05:31Z", "closed_at": "2015-02-04T17:05:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not finding any way to cancel an asynchronous transition, indicating that it failed in some way.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mriehl/fysom/issues/15", "repository_url": "https://api.github.com/repos/mriehl/fysom", "labels_url": "https://api.github.com/repos/mriehl/fysom/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/mriehl/fysom/issues/15/comments", "events_url": "https://api.github.com/repos/mriehl/fysom/issues/15/events", "html_url": "https://github.com/mriehl/fysom/issues/15", "id": 45804334, "node_id": "MDU6SXNzdWU0NTgwNDMzNA==", "number": 15, "title": "Exception is not raised when 'onbeforeevent' returns False", "user": {"login": "danielkza", "id": 747342, "node_id": "MDQ6VXNlcjc0NzM0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/747342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielkza", "html_url": "https://github.com/danielkza", "followers_url": "https://api.github.com/users/danielkza/followers", "following_url": "https://api.github.com/users/danielkza/following{/other_user}", "gists_url": "https://api.github.com/users/danielkza/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielkza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielkza/subscriptions", "organizations_url": "https://api.github.com/users/danielkza/orgs", "repos_url": "https://api.github.com/users/danielkza/repos", "events_url": "https://api.github.com/users/danielkza/events{/privacy}", "received_events_url": "https://api.github.com/users/danielkza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-10-14T21:44:44Z", "updated_at": "2014-10-15T12:03:26Z", "closed_at": "2014-10-15T11:50:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is intended behavior or not, but preventing an event from triggering by returning false from an 'onbefore' callback fails silently instead of raising a FysomError as I expected. There is also no way to verify whether triggering an event actually succeeded.\n\nEither the exception should be thrown or _build_event should return a boolean indicating whether it proceeded or not.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mriehl/fysom/issues/13", "repository_url": "https://api.github.com/repos/mriehl/fysom", "labels_url": "https://api.github.com/repos/mriehl/fysom/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/mriehl/fysom/issues/13/comments", "events_url": "https://api.github.com/repos/mriehl/fysom/issues/13/events", "html_url": "https://github.com/mriehl/fysom/issues/13", "id": 44418784, "node_id": "MDU6SXNzdWU0NDQxODc4NA==", "number": 13, "title": "Event usage", "user": {"login": "gmario", "id": 596890, "node_id": "MDQ6VXNlcjU5Njg5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/596890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmario", "html_url": "https://github.com/gmario", "followers_url": "https://api.github.com/users/gmario/followers", "following_url": "https://api.github.com/users/gmario/following{/other_user}", "gists_url": "https://api.github.com/users/gmario/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmario/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmario/subscriptions", "organizations_url": "https://api.github.com/users/gmario/orgs", "repos_url": "https://api.github.com/users/gmario/repos", "events_url": "https://api.github.com/users/gmario/events{/privacy}", "received_events_url": "https://api.github.com/users/gmario/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-30T09:56:38Z", "updated_at": "2014-10-01T09:15:23Z", "closed_at": "2014-10-01T09:15:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi mriehl,\n\nI'm back here looking for your help :)\n\nI have defined a FSM:\n\nfysom_cfg = {\n    'initial': 'trusted_mgm',\n    'events': [\n      {'name': 'trigger_find_2nd_level',      'src': 'trusted_mgm',       'dst': '2nd_level_trusted'}, \n      {'name': 'find_2nd_level',              'src': '2nd_level_trusted', 'dst': 'trusted_mgm'},\n      {'name': 'trigger_collect_data',        'src': 'trusted_mgm',       'dst': 'data_collection'},\n      {'name': 'collect_data',                'src': 'data_collection',   'dst': 'trusted_mgm'},\n      {'name': 'trigger_move_to_bow_mgm',     'src': 'trusted_mgm',       'dst': 'bow_mgm'}, \n      {'name': 'trigger_move_to_trusted_mgm', 'src': 'bow_mgm',           'dst': 'trusted_mgm'}, \n      {'name': 'trigger_analyze_influencers', 'src': 'bow_mgm',           'dst': 'analyze_data'},\n      {'name': 'analyze_influencers',         'src': 'analyze_data',       'dst': 'bow_mgm'}, \n   ],\n   'callbacks': {\n      'onleavetrusted_mgm': on_leave_trusted_mgm,\n      'onleavebow_mgm': on_leave_bow_mgm\n    }\n}\n\nI wish to execute some code when the fsm exits from a state and when it enter on another one. For example I have defined this two function\n\ndef on_leave_trusted_mgm(e):\n    print \"on_leave_trusted_mgm\"\n\n```\nif (e.dst == '2nd_level_trusted'):\n    print \"Passaggio di stato verso 2nd_level_trusted\"\nelif (e.dst == 'bow_mgm'):\n    print \"Passaggio di stato verso bow_mgm\"\nelif (e.dst == 'data_collection'):\n    print \"Passaggio di stato verso data_collection\"\n\nreturn True\n```\n\ndef on_enter_2nd_level_trusted(e):\n    print \"Sono entrato in 2nd_level_trusted - ora torno al trusted_mgm eseguendo il calcolo\"\n\nWhen I trigger the event \"trigger_find_2nd_level\", the first function is regularly executed the same is not true for the second one. \nCould you please show me on what I have made wrong?\n\nthank you so much\ngmario\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mriehl/fysom/issues/12", "repository_url": "https://api.github.com/repos/mriehl/fysom", "labels_url": "https://api.github.com/repos/mriehl/fysom/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/mriehl/fysom/issues/12/comments", "events_url": "https://api.github.com/repos/mriehl/fysom/issues/12/events", "html_url": "https://github.com/mriehl/fysom/issues/12", "id": 42987886, "node_id": "MDU6SXNzdWU0Mjk4Nzg4Ng==", "number": 12, "title": "transition method", "user": {"login": "gmario", "id": 596890, "node_id": "MDQ6VXNlcjU5Njg5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/596890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmario", "html_url": "https://github.com/gmario", "followers_url": "https://api.github.com/users/gmario/followers", "following_url": "https://api.github.com/users/gmario/following{/other_user}", "gists_url": "https://api.github.com/users/gmario/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmario/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmario/subscriptions", "organizations_url": "https://api.github.com/users/gmario/orgs", "repos_url": "https://api.github.com/users/gmario/repos", "events_url": "https://api.github.com/users/gmario/events{/privacy}", "received_events_url": "https://api.github.com/users/gmario/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-09-17T09:38:54Z", "updated_at": "2014-09-18T15:00:38Z", "closed_at": "2014-09-18T15:00:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi mriehl,\n\ni'm trying to use your library. I have defined a state machine that it needs to launch asynchronous task. I have try to use transition method to get the state machine in the next state.\n\nfsm = Fysom({ /\\* definition of the state machine */ })\n\nwhen the task ends:\n\nfsm.transition()\n\nthis give me back this error:\n\nException in thread Thread-1:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"/usr/lib/python2.7/threading.py\", line 763, in run\n    self.__target(_self.__args, *_self.__kwargs)\n  File \"/var/www/LINKALAB/inmoto-oim/app.py\", line 156, in background_thread\n    fsm.transition()\nAttributeError: 'Fysom' object has no attribute 'transition'\n\nWhat am I doing wrong?\n\ntnks in advance\ngmario\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mriehl/fysom/issues/10", "repository_url": "https://api.github.com/repos/mriehl/fysom", "labels_url": "https://api.github.com/repos/mriehl/fysom/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/mriehl/fysom/issues/10/comments", "events_url": "https://api.github.com/repos/mriehl/fysom/issues/10/events", "html_url": "https://github.com/mriehl/fysom/issues/10", "id": 36266518, "node_id": "MDU6SXNzdWUzNjI2NjUxOA==", "number": 10, "title": "Calling the same event repeatedly.", "user": {"login": "tian2992", "id": 203330, "node_id": "MDQ6VXNlcjIwMzMzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/203330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tian2992", "html_url": "https://github.com/tian2992", "followers_url": "https://api.github.com/users/tian2992/followers", "following_url": "https://api.github.com/users/tian2992/following{/other_user}", "gists_url": "https://api.github.com/users/tian2992/gists{/gist_id}", "starred_url": "https://api.github.com/users/tian2992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tian2992/subscriptions", "organizations_url": "https://api.github.com/users/tian2992/orgs", "repos_url": "https://api.github.com/users/tian2992/repos", "events_url": "https://api.github.com/users/tian2992/events{/privacy}", "received_events_url": "https://api.github.com/users/tian2992/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-06-23T07:06:58Z", "updated_at": "2014-06-23T16:18:12Z", "closed_at": "2014-06-23T08:20:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I currently have a state machine defined as:\n\n```\n{'initial': 'activated',\n 'events': [\n         {'name': 'configure', 'src': 'activated', 'dst': 'configured'},\n         {'name': 'configure', 'src': 'configured', 'dst': 'configured'},\n         {'name': 'knit', 'src': 'configured', 'dst': 'knitting'},\n         {'name': 'finish', 'src': 'knitting', 'dst': 'finished'},\n ]}\n```\n\nWhen I call configure() again, e.g.\n`configure(a = 1)`\nand then call it again \n`configure(a = 2)`\nthat one, and all of the following calls to configure do not trigger the callback.\n\n\u00bfIs this expected behavior?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mriehl/fysom/issues/8", "repository_url": "https://api.github.com/repos/mriehl/fysom", "labels_url": "https://api.github.com/repos/mriehl/fysom/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/mriehl/fysom/issues/8/comments", "events_url": "https://api.github.com/repos/mriehl/fysom/issues/8/events", "html_url": "https://github.com/mriehl/fysom/issues/8", "id": 34591057, "node_id": "MDU6SXNzdWUzNDU5MTA1Nw==", "number": 8, "title": "fysom is getting added to debian packages", "user": {"login": "andsens", "id": 342823, "node_id": "MDQ6VXNlcjM0MjgyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/342823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andsens", "html_url": "https://github.com/andsens", "followers_url": "https://api.github.com/users/andsens/followers", "following_url": "https://api.github.com/users/andsens/following{/other_user}", "gists_url": "https://api.github.com/users/andsens/gists{/gist_id}", "starred_url": "https://api.github.com/users/andsens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andsens/subscriptions", "organizations_url": "https://api.github.com/users/andsens/orgs", "repos_url": "https://api.github.com/users/andsens/repos", "events_url": "https://api.github.com/users/andsens/events{/privacy}", "received_events_url": "https://api.github.com/users/andsens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2014-05-29T20:42:43Z", "updated_at": "2018-08-22T17:10:54Z", "closed_at": "2018-08-22T17:10:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just wanted to bring to your attention that your project is being added as a package to the Debian main repository if all goes well. Thanks for maintaining a nice and simple FSM package!\n\nhttps://lists.debian.org/debian-cloud/2014/05/msg00038.html\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mriehl/fysom/issues/5", "repository_url": "https://api.github.com/repos/mriehl/fysom", "labels_url": "https://api.github.com/repos/mriehl/fysom/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/mriehl/fysom/issues/5/comments", "events_url": "https://api.github.com/repos/mriehl/fysom/issues/5/events", "html_url": "https://github.com/mriehl/fysom/issues/5", "id": 23927201, "node_id": "MDU6SXNzdWUyMzkyNzIwMQ==", "number": 5, "title": "error type: FysomError is not defined", "user": {"login": "geyang", "id": 630490, "node_id": "MDQ6VXNlcjYzMDQ5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/630490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geyang", "html_url": "https://github.com/geyang", "followers_url": "https://api.github.com/users/geyang/followers", "following_url": "https://api.github.com/users/geyang/following{/other_user}", "gists_url": "https://api.github.com/users/geyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/geyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geyang/subscriptions", "organizations_url": "https://api.github.com/users/geyang/orgs", "repos_url": "https://api.github.com/users/geyang/repos", "events_url": "https://api.github.com/users/geyang/events{/privacy}", "received_events_url": "https://api.github.com/users/geyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-12-08T17:46:55Z", "updated_at": "2013-12-08T18:09:50Z", "closed_at": "2013-12-08T18:09:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nThanks for this nice library! \n\nThe issue is that when I try to write:\n\n```\ntry: streamState.rise()\nexcept FysomError: pass\n```\n\npython gives me an error message saying that \n\n```\nNameError: name 'FysomError' is not defined\n```\n", "performed_via_github_app": null, "score": 1.0}]}