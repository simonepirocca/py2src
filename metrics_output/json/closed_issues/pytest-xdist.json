{"total_count": 201, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/584", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/584/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/584/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/584", "id": 679806952, "node_id": "MDU6SXNzdWU2Nzk4MDY5NTI=", "number": 584, "title": "Pytest-django test DB's and pytest-xdist 2.0", "user": {"login": "tolomea", "id": 805072, "node_id": "MDQ6VXNlcjgwNTA3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/805072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tolomea", "html_url": "https://github.com/tolomea", "followers_url": "https://api.github.com/users/tolomea/followers", "following_url": "https://api.github.com/users/tolomea/following{/other_user}", "gists_url": "https://api.github.com/users/tolomea/gists{/gist_id}", "starred_url": "https://api.github.com/users/tolomea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tolomea/subscriptions", "organizations_url": "https://api.github.com/users/tolomea/orgs", "repos_url": "https://api.github.com/users/tolomea/repos", "events_url": "https://api.github.com/users/tolomea/events{/privacy}", "received_events_url": "https://api.github.com/users/tolomea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-16T18:59:01Z", "updated_at": "2020-08-17T11:37:24Z", "closed_at": "2020-08-17T11:37:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "FYI It looks like the 2.0 release broke something with pytest-django. No idea what's going on just thought I should mention it in case you haven't seen this https://github.com/pytest-dev/pytest-django/issues/860", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/583", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/583/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/583/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/583", "id": 679549955, "node_id": "MDU6SXNzdWU2Nzk1NDk5NTU=", "number": 583, "title": "Error in framework with latest pytest-xdist:2.0", "user": {"login": "pranav165", "id": 26303706, "node_id": "MDQ6VXNlcjI2MzAzNzA2", "avatar_url": "https://avatars2.githubusercontent.com/u/26303706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pranav165", "html_url": "https://github.com/pranav165", "followers_url": "https://api.github.com/users/pranav165/followers", "following_url": "https://api.github.com/users/pranav165/following{/other_user}", "gists_url": "https://api.github.com/users/pranav165/gists{/gist_id}", "starred_url": "https://api.github.com/users/pranav165/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pranav165/subscriptions", "organizations_url": "https://api.github.com/users/pranav165/orgs", "repos_url": "https://api.github.com/users/pranav165/repos", "events_url": "https://api.github.com/users/pranav165/events{/privacy}", "received_events_url": "https://api.github.com/users/pranav165/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-15T11:36:07Z", "updated_at": "2020-08-17T08:28:34Z", "closed_at": "2020-08-15T12:16:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to build the docker image with latest pytest-xdist , following error is produced. The issue is resolved when reverting to pytest-xdist:1.34.0\r\n\r\n```\r\nError \r\n Running setup.py install for psutil: started\r\n[17:05:25]    Running setup.py install for psutil: finished with status 'error'\r\n[17:05:25]    Complete output from command /home/e2e/venv/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-opgz1ts0/psutil/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-6io9j8f9/install-record.txt --single-version-externally-managed --compile --install-headers /home/e2e/venv/include/site/python3.7/psutil:\r\n[17:05:25]    running install\r\n[17:05:25]    running build\r\n[17:05:25]    running build_py\r\n[17:05:25]    creating build\r\n[17:05:25]    creating build/lib.linux-x86_64-3.7\r\n[17:05:25]    creating build/lib.linux-x86_64-3.7/psutil\r\n[17:05:25]    copying psutil/_pswindows.py -> build/lib.linux-x86_64-3.7/psutil\r\n[17:05:25]    copying psutil/_psbsd.py -> build/lib.linux-x86_64-3.7/psutil\r\n[17:05:25]    copying psutil/_compat.py -> build/lib.linux-x86_64-3.7/psutil\r\n[17:05:25]    copying psutil/_common.py -> build/lib.linux-x86_64-3.7/psutil\r\n[17:05:25]    copying psutil/_psposix.py -> build/lib.linux-x86_64-3.7/psutil\r\n[17:05:25]    copying psutil/__init__.py -> build/lib.linux-x86_64-3.7/psutil\r\n[17:05:25]    copying psutil/_psaix.py -> build/lib.linux-x86_64-3.7/psutil\r\n[17:05:25]    copying psutil/_pslinux.py -> build/lib.linux-x86_64-3.7/psutil\r\n[17:05:25]    copying psutil/_pssunos.py -> build/lib.linux-x86_64-3.7/psutil\r\n[17:05:25]    copying psutil/_psosx.py -> build/lib.linux-x86_64-3.7/psutil\r\n[17:05:25]    creating build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_aix.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_system.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_testutils.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_bsd.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_connections.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_memleaks.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_unicode.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_posix.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_windows.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_misc.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_sunos.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/__init__.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_osx.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_process.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_linux.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/__main__.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/test_contracts.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    copying psutil/tests/runner.py -> build/lib.linux-x86_64-3.7/psutil/tests\r\n[17:05:25]    running build_ext\r\n[17:05:25]    building 'psutil._psutil_linux' extension\r\n[17:05:25]    creating build/temp.linux-x86_64-3.7\r\n[17:05:25]    creating build/temp.linux-x86_64-3.7/psutil\r\n[17:05:25]    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPSUTIL_POSIX=1 -DPSUTIL_SIZEOF_PID_T=4 -DPSUTIL_VERSION=572 -DPSUTIL_LINUX=1 -DPSUTIL_ETHTOOL_MISSING_TYPES=1 -I/home/e2e/venv/include -I/usr/include/python3.7m -c psutil/_psutil_common.c -o build/temp.linux-x86_64-3.7/psutil/_psutil_common.o\r\n[17:05:25]    unable to execute 'x86_64-linux-gnu-gcc': No such file or directory\r\n[17:05:25]    C compiler or Python headers are not installed on this system. Try to run:\r\n[17:05:25]    sudo apt-get install gcc python3-dev\r\n[17:05:25]    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n```\r\n\r\n\r\nDockerFile\r\n\r\n```dockerfile\r\nFROM debian:latest\r\nRUN   set -e \\\r\n      && export  DEBIAN_FRONTEND=noninteractive \\\r\n      && apt-get update \\\r\n      && apt-get -qq install --no-install-recommends \\\r\n         python3-dev \\\r\n         python3-venv \\\r\n      && useradd -m -u 1000 e2e \\\r\n      && mkdir /reports \\\r\n      && chmod a+rwx /reports \\\r\n      && chown e2e:e2e /reports\r\nVOLUME [\"/reports\"]\r\nCOPY entrypoint.sh /usr/local/bin/entrypoint\r\nRUN chmod 755 /usr/local/bin/entrypoint\r\nENTRYPOINT [ \"/usr/local/bin/entrypoint\" ]\r\nCOPY . /home/e2e/\r\nRUN chown -R e2e:e2e /home/e2e/\r\nRUN chmod -R 0777 /home/e2e/\r\nUSER e2e\r\nWORKDIR /home/e2e\r\nRUN set -e \\\r\n    && python3 -m venv venv \\\r\n    && . venv/bin/activate \\\r\n    && pip install --no-cache-dir wheel \\\r\n    && pip install --no-cache-dir .\\\r\n    && flake8 .\r\n\r\n```\r\n\r\nSetup.py\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nVERSION = '###'\r\nDESCRIPTION = '###'\r\n\r\ntry:\r\n    from setuptools import setup, find_packages\r\nexcept ImportError:\r\n    from distutils.core import setup, find_packages\r\n\r\nsetup(\r\n    name='e2e',\r\n    version=VERSION,\r\n    description=DESCRIPTION,\r\n    license=\"###\",\r\n    long_description=\"###\",\r\n    url='###',\r\n    author=\"###\",\r\n    author_email='###',\r\n    install_requires=[\r\n        'selenium',\r\n        'requests',\r\n        'pytest',\r\n        'nested-lookup==0.2.21',\r\n        'pyhamcrest',\r\n        'retry',\r\n        'pytest-html',\r\n        'pytest-xdist',\r\n        'pytest-rerunfailures',\r\n        'pytest-repeat',\r\n        'wheel',\r\n        'flake8'\r\n    ],\r\n    provides=[],\r\n    packages=find_packages(),\r\n    scripts=[]\r\n)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/581", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/581/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/581/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/581", "id": 679531938, "node_id": "MDU6SXNzdWU2Nzk1MzE5Mzg=", "number": 581, "title": "pytest-xdist-2.0.0 incompatible with pytest-cov-2.10.0", "user": {"login": "tovrstra", "id": 99431, "node_id": "MDQ6VXNlcjk5NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/99431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tovrstra", "html_url": "https://github.com/tovrstra", "followers_url": "https://api.github.com/users/tovrstra/followers", "following_url": "https://api.github.com/users/tovrstra/following{/other_user}", "gists_url": "https://api.github.com/users/tovrstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/tovrstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tovrstra/subscriptions", "organizations_url": "https://api.github.com/users/tovrstra/orgs", "repos_url": "https://api.github.com/users/tovrstra/repos", "events_url": "https://api.github.com/users/tovrstra/events{/privacy}", "received_events_url": "https://api.github.com/users/tovrstra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-15T09:16:16Z", "updated_at": "2020-08-15T10:33:00Z", "closed_at": "2020-08-15T10:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into this issues with the upgrade to pytest-xdist-2.0.0.\r\n\r\nSteps to reproduce:\r\n\r\n```bash\r\n# Create new conda environment and activate\r\nconda create -n xdist python=3.7 pytest-cov pytest-xdist\r\nconda activate xdist\r\n# Clone example python library with unit tests\r\ngit clone https://github.com/pytest-dev/pytest-xdist\r\ncd pytest-xdist\r\n# Run tests in parallel with coverage\r\npytest -n 2 --cov=xdist\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n======================================================= test session starts =======================================================\r\nplatform linux -- Python 3.7.7, pytest-6.0.1, py-1.9.0, pluggy-0.13.1\r\nrootdir: /home/toon/univ/code/pytest-xdist, configfile: tox.ini, testpaths: testing\r\nplugins: cov-2.10.0, forked-1.2.0, xdist-2.0.0, regressions-2.0.1, datadir-1.3.1, profiling-1.7.0\r\ngw0 C / gw1 IINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/_pytest/main.py\", line 238, in wrap_session\r\nINTERNALERROR>     config.hook.pytest_sessionstart(session=session)\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/xdist/dsession.py\", line 78, in pytest_sessionstart\r\nINTERNALERROR>     nodes = self.nodemanager.setup_nodes(putevent=self.queue.put)\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/xdist/workermanage.py\", line 65, in setup_nodes\r\nINTERNALERROR>     return [self.setup_node(spec, putevent) for spec in self.specs]\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/xdist/workermanage.py\", line 65, in <listcomp>\r\nINTERNALERROR>     return [self.setup_node(spec, putevent) for spec in self.specs]\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/xdist/workermanage.py\", line 73, in setup_node\r\nINTERNALERROR>     node.setup()\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/xdist/workermanage.py\", line 260, in setup\r\nINTERNALERROR>     self.config.hook.pytest_configure_node(node=self)\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pytest_cov/plugin.py\", line 239, in pytest_configure_node\r\nINTERNALERROR>     self.cov_controller.configure_node(node)\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pytest_cov/engine.py\", line 274, in configure_node\r\nINTERNALERROR>     workerinput(node).update({\r\nINTERNALERROR>   File \"/home/toon/miniconda3/lib/python3.7/site-packages/pytest_cov/compat.py\", line 42, in fn\r\nINTERNALERROR>     return getattr(obj, attr, *args)\r\nINTERNALERROR> AttributeError: 'WorkerController' object has no attribute 'slaveinput'\r\n```\r\n\r\nExpected results: tests should run and `.coverage file` should be created.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/579", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/579/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/579/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/579", "id": 679466536, "node_id": "MDU6SXNzdWU2Nzk0NjY1MzY=", "number": 579, "title": "Broken tests when switching from pytest-xdist 1.34.0 to 2.0.0", "user": {"login": "pallavg", "id": 12074568, "node_id": "MDQ6VXNlcjEyMDc0NTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/12074568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pallavg", "html_url": "https://github.com/pallavg", "followers_url": "https://api.github.com/users/pallavg/followers", "following_url": "https://api.github.com/users/pallavg/following{/other_user}", "gists_url": "https://api.github.com/users/pallavg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pallavg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pallavg/subscriptions", "organizations_url": "https://api.github.com/users/pallavg/orgs", "repos_url": "https://api.github.com/users/pallavg/repos", "events_url": "https://api.github.com/users/pallavg/events{/privacy}", "received_events_url": "https://api.github.com/users/pallavg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-15T00:41:47Z", "updated_at": "2020-08-15T21:51:50Z", "closed_at": "2020-08-15T10:35:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using pytext-xdist 1.34.0 with Django for our unit tests. Everything was working fine. In our project, we have a conftest.py that overrides the name of the django DB that we want to create. We do this because we use 4 worker threads and each worker operators on a  unique DB name.\r\n\r\n```\r\n Override your fixtures here.\r\n\r\nSee: https://pytest-django.readthedocs.io/en/latest/database.html#fixtures\r\nSee: https://pytest-django.readthedocs.io/en/latest/database.html#django-db-modify-db-settings-xdist-suffix\r\n\r\n\r\n@pytest.fixture(scope='session')\r\ndef django_db_modify_db_settings_xdist_suffix(request):\r\n    \"\"\"This fixture will generate and add a unique suffix to the database name when tests are run via pytest-xdist.\"\"\"\r\n\r\n    # Put a suffix like _gw0, _gw1 on xdist processes + timestamp.\r\n    xdist_suffix = getattr(request.config, 'slaveinput', {}).get('slaveid')\r\n    if xdist_suffix:\r\n        _add_suffix_to_test_databases(suffix=f'{xdist_suffix}_{datetime.now().strftime(\"%M%S%f\")}')\r\n\r\n\r\ndef _add_suffix_to_test_databases(suffix):\r\n    \"\"\"This function adds a unique suffix to the database name.\"\"\"\r\n\r\n    from django.conf import settings\r\n\r\n    for db_settings in settings.DATABASES.values():\r\n        test_name = db_settings.get('TEST', {}).get('NAME')\r\n\r\n        # Nothing to do for in-memory database.\r\n        if test_name == ':memory:':\r\n            continue\r\n\r\n        # If None, append 'test_' to the database name.\r\n        if test_name is None:\r\n            test_name = f'test_{db_settings[\"NAME\"]}'\r\n\r\n        # Append timestamp to the database name to prevent conflicts (multiple users running the tests).\r\n        db_settings.setdefault('TEST', {})\r\n        db_settings['TEST']['NAME'] = f'{test_name}_{suffix}'\r\n```\r\n\r\nIt looks like pytest-xdist 2.0.0 doesn't take this into account anymore. Our regression tests are failing now with such error messages. \r\n\r\n```\r\n .tox/py37-nocov/lib/python3.7/site-packages/django/db/backends/utils.py:84: in _execute\r\n     return self.cursor.execute(sql)\r\n E   django.db.utils.ProgrammingError: database \"test_postgres\" already exists\r\n During handling of the above exception, another exception occurred:\r\n .tox/py37-nocov/lib/python3.7/site-packages/django/db/backends/utils.py:84: in _execute\r\n     return self.cursor.execute(sql)\r\n E   psycopg2.errors.ObjectInUse: database \"test_postgres\" is being accessed by other users\r\n E   DETAIL:  There are 2 other sessions using the database.\r\n```\r\n\r\nNot sure if we need to fix something on our side as a result of using 2.0.0 or some issue in xdist needs to be fixed. Please advise.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/578", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/578/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/578/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/578", "id": 679333939, "node_id": "MDU6SXNzdWU2NzkzMzM5Mzk=", "number": 578, "title": "Incorrect docs: Making session-scoped fixtures execute only once", "user": {"login": "brandon-leapyear", "id": 27799541, "node_id": "MDQ6VXNlcjI3Nzk5NTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/27799541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandon-leapyear", "html_url": "https://github.com/brandon-leapyear", "followers_url": "https://api.github.com/users/brandon-leapyear/followers", "following_url": "https://api.github.com/users/brandon-leapyear/following{/other_user}", "gists_url": "https://api.github.com/users/brandon-leapyear/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandon-leapyear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandon-leapyear/subscriptions", "organizations_url": "https://api.github.com/users/brandon-leapyear/orgs", "repos_url": "https://api.github.com/users/brandon-leapyear/repos", "events_url": "https://api.github.com/users/brandon-leapyear/events{/privacy}", "received_events_url": "https://api.github.com/users/brandon-leapyear/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-14T18:33:09Z", "updated_at": "2020-08-15T10:56:29Z", "closed_at": "2020-08-15T10:56:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/pytest-dev/pytest-xdist/blob/master/README.rst#making-session-scoped-fixtures-execute-only-once\r\n\r\n`worker_id` will never be a falsey value to satisfy the `if not worker_id` check. If tests are not running in distributed workers, `worker_id` will be set to `master`.\r\n\r\nhttps://github.com/pytest-dev/pytest-xdist/blob/master/src/xdist/plugin.py#L221-L233\r\n\r\nI'm not sure what the correct solution is here.\r\n* If `worker_id == 'master'` guarantees that tests are not running in distributed workers, then one should just change `not worker_id` to `worker_id == 'master'`.\r\n* Otherwise, the `worker_id` fixture should be changed (or another fixture should be added) to distinguish between a non-distributed master node and a distributed master node.\r\n* Alternatively, we can not special case the master node and just do something like\r\n```diff\r\n @pytest.fixture(scope=\"session\")\r\n def session_data(tmp_path_factory, worker_id):\r\n-    if not worker_id:\r\n-        # not executing in with multiple workers, just produce the data and let\r\n-        # pytest's fixture caching do its job\r\n-        return produce_expensive_data()\r\n-\r\n-    # get the temp directory shared for by all workers\r\n-    root_tmp_dir = tmp_path_factory.getbasetemp().parent\r\n+    tmp_dir = tmp_path_factory.getbasetemp()\r\n+    root_tmp_dir = tmp_dir if worker_id == 'master' else tmp_dir.parent\r\n\r\n     fn = root_tmp_dir / \"data.json\"\r\n     with FileLock(str(fn) + \".lock\"):\r\n         if fn.is_file():\r\n             data = json.loads(fn.read_text())\r\n         else:\r\n             data = produce_expensive_data()\r\n             fn.write_text(json.dumps(data))\r\n     return data\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/577", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/577/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/577/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/577", "id": 679231495, "node_id": "MDU6SXNzdWU2NzkyMzE0OTU=", "number": 577, "title": "AttributeError: 'WorkerController' object has no attribute 'slaveinput'", "user": {"login": "bruceduhamel", "id": 19784036, "node_id": "MDQ6VXNlcjE5Nzg0MDM2", "avatar_url": "https://avatars3.githubusercontent.com/u/19784036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruceduhamel", "html_url": "https://github.com/bruceduhamel", "followers_url": "https://api.github.com/users/bruceduhamel/followers", "following_url": "https://api.github.com/users/bruceduhamel/following{/other_user}", "gists_url": "https://api.github.com/users/bruceduhamel/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruceduhamel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruceduhamel/subscriptions", "organizations_url": "https://api.github.com/users/bruceduhamel/orgs", "repos_url": "https://api.github.com/users/bruceduhamel/repos", "events_url": "https://api.github.com/users/bruceduhamel/events{/privacy}", "received_events_url": "https://api.github.com/users/bruceduhamel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-14T15:23:46Z", "updated_at": "2020-08-14T15:56:26Z", "closed_at": "2020-08-14T15:41:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently upgraded from pytest-xdist 1.34.0 to 2.0.0 and found that tests always fail with the new version. I pinned the previous version as a workaround.\r\n\r\nI've tested on Ubuntu 18.04 and the circle [CI docker image for python 3.7.6](https://github.com/CircleCI-Public/circleci-dockerfiles/blob/master/python/images/3.7.6/Dockerfile)\r\n\r\nIf I remove --cov=project_folder (project_folder was redacted), the tests run successfully.\r\n\r\n```\r\npytest --numprocesses=auto --cov=project_folder test itest\r\n\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.7.6, pytest-6.0.1, py-1.9.0, pluggy-0.13.1\r\nrootdir: /root/repo\r\nplugins: xdist-2.0.0, forked-1.3.0, cov-2.10.0\r\ngw0 C / gw1 I / gw2 I / gw3 I / gw4 I / gw5 I / gw6 I / gw7 I / gw8 I / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 IINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/_pytest/main.py\", line 238, in wrap_session\r\nINTERNALERROR>     config.hook.pytest_sessionstart(session=session)\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/xdist/dsession.py\", line 78, in pytest_sessionstart\r\nINTERNALERROR>     nodes = self.nodemanager.setup_nodes(putevent=self.queue.put)\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/xdist/workermanage.py\", line 65, in setup_nodes\r\nINTERNALERROR>     return [self.setup_node(spec, putevent) for spec in self.specs]\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/xdist/workermanage.py\", line 65, in <listcomp>\r\nINTERNALERROR>     return [self.setup_node(spec, putevent) for spec in self.specs]\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/xdist/workermanage.py\", line 73, in setup_node\r\nINTERNALERROR>     node.setup()\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/xdist/workermanage.py\", line 260, in setup\r\nINTERNALERROR>     self.config.hook.pytest_configure_node(node=self)\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pytest_cov/plugin.py\", line 239, in pytest_configure_node\r\nINTERNALERROR>     self.cov_controller.configure_node(node)\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pytest_cov/engine.py\", line 274, in configure_node\r\nINTERNALERROR>     workerinput(node).update({\r\nINTERNALERROR>   File \"/root/repo/venv/lib/python3.7/site-packages/pytest_cov/compat.py\", line 42, in fn\r\nINTERNALERROR>     return getattr(obj, attr, *args)\r\nINTERNALERROR> AttributeError: 'WorkerController' object has no attribute 'slaveinput'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/576", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/576/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/576/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/576", "id": 678985819, "node_id": "MDU6SXNzdWU2Nzg5ODU4MTk=", "number": 576, "title": "How to copy all tests to different CPUs", "user": {"login": "marincandenza", "id": 45242624, "node_id": "MDQ6VXNlcjQ1MjQyNjI0", "avatar_url": "https://avatars0.githubusercontent.com/u/45242624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marincandenza", "html_url": "https://github.com/marincandenza", "followers_url": "https://api.github.com/users/marincandenza/followers", "following_url": "https://api.github.com/users/marincandenza/following{/other_user}", "gists_url": "https://api.github.com/users/marincandenza/gists{/gist_id}", "starred_url": "https://api.github.com/users/marincandenza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marincandenza/subscriptions", "organizations_url": "https://api.github.com/users/marincandenza/orgs", "repos_url": "https://api.github.com/users/marincandenza/repos", "events_url": "https://api.github.com/users/marincandenza/events{/privacy}", "received_events_url": "https://api.github.com/users/marincandenza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-14T08:14:10Z", "updated_at": "2020-08-14T17:53:13Z", "closed_at": "2020-08-14T10:27:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear pytest developers,\r\n\r\nis it possible to run all tests on different CPUs? \r\nExample: 100 tests included in the repository, three CPUs used -> 300 tests will be executed. \r\n\r\nI'm asking because we have different devices connected to a host and therefore want to execute all tests against the connected devices.\r\nOf course, it is possible to execute pytest three times from command line but having a single report and in Gitlab CI one stage only would simplify the CI workflow. \r\n\r\nKind regards\r\nMario\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/569", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/569/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/569/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/569", "id": 673874336, "node_id": "MDU6SXNzdWU2NzM4NzQzMzY=", "number": 569, "title": "Drop Python 2.7 support", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-05T22:00:35Z", "updated_at": "2020-08-05T22:18:04Z", "closed_at": "2020-08-05T22:18:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/562", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/562/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/562/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/562/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/562", "id": 665312118, "node_id": "MDU6SXNzdWU2NjUzMTIxMTg=", "number": 562, "title": "Deprecated pytest_warning_captured still triggered in pytest 6.0", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239944, "node_id": "MDU6TGFiZWwyNTUyMzk5NDQ=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-24T17:29:41Z", "updated_at": "2020-07-24T18:40:20Z", "closed_at": "2020-07-24T18:40:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "_Originally posted by @hroncok in https://github.com/pytest-dev/pytest-xdist/pull/554#issuecomment-660981785_\r\n\r\nWhen I test hypothesis 5.15.1 with this version of pytest-xdist and pytest 6.0.0rc1 I get:\r\n\r\n```\r\n+ pytest-3 -v -n auto -k 'not test_healthcheck_traceback_is_hidden'\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.9.0b4, pytest-6.0.0rc1, py-1.9.0, pluggy-0.13.1 -- /usr/bin/python3\r\ncachedir: .pytest_cache\r\nhypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/tmp/tmpghr1kmm6/examples')\r\nrootdir: /builddir/build/BUILD/hypothesis-hypothesis-python-5.15.1, configfile: pytest.ini\r\nplugins: hypothesis-5.15.1, xdist-1.33.0, forked-1.2.0\r\ngw0 I / gw1 I\r\n[gw0] linux Python 3.9.0 cwd: /builddir/build/BUILD/hypothesis-hypothesis-python-5.15.1/hypothesis-python\r\n[gw1] linux Python 3.9.0 cwd: /builddir/build/BUILD/hypothesis-hypothesis-python-5.15.1/hypothesis-python\r\n[gw0] node down: Traceback (most recent call last):\r\n  File \"/usr/lib/python3.9/site-packages/execnet/gateway_base.py\", line 1084, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 272, in <module>\r\n    interactor = WorkerInteractor(config, channel)\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 30, in __init__\r\n    config.pluginmanager.register(self)\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 424, in register\r\n    ret = super().register(plugin, name)  # type: Optional[str]\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 126, in register\r\n    self._verify_hook(hook, hookimpl)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 248, in _verify_hook\r\n    _warn_for_function(hook.spec.warn_on_impl, hookimpl.function)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 15, in _warn_for_function\r\n    warnings.warn_explicit(\r\npytest.PytestDeprecationWarning: The pytest_warning_captured is deprecated and will be removed in a future release.\r\nPlease use pytest_warning_recorded instead.\r\n\r\n\r\nreplacing crashed worker gw0\r\n[gw2] linux Python 3.9.0 cwd: /builddir/build/BUILD/hypothesis-hypothesis-python-5.15.1/hypothesis-python\r\n[gw1] node down: Traceback (most recent call last):\r\n  File \"/usr/lib/python3.9/site-packages/execnet/gateway_base.py\", line 1084, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 272, in <module>\r\n    interactor = WorkerInteractor(config, channel)\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 30, in __init__\r\n    config.pluginmanager.register(self)\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 424, in register\r\n    ret = super().register(plugin, name)  # type: Optional[str]\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 126, in register\r\n    self._verify_hook(hook, hookimpl)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 248, in _verify_hook\r\n    _warn_for_function(hook.spec.warn_on_impl, hookimpl.function)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 15, in _warn_for_function\r\n    warnings.warn_explicit(\r\npytest.PytestDeprecationWarning: The pytest_warning_captured is deprecated and will be removed in a future release.\r\nPlease use pytest_warning_recorded instead.\r\n\r\n\r\nreplacing crashed worker gw1\r\n[gw3] linux Python 3.9.0 cwd: /builddir/build/BUILD/hypothesis-hypothesis-python-5.15.1/hypothesis-python\r\n[gw2] node down: Traceback (most recent call last):\r\n  File \"/usr/lib/python3.9/site-packages/execnet/gateway_base.py\", line 1084, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 272, in <module>\r\n    interactor = WorkerInteractor(config, channel)\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 30, in __init__\r\n    config.pluginmanager.register(self)\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 424, in register\r\n    ret = super().register(plugin, name)  # type: Optional[str]\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 126, in register\r\n    self._verify_hook(hook, hookimpl)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 248, in _verify_hook\r\n    _warn_for_function(hook.spec.warn_on_impl, hookimpl.function)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 15, in _warn_for_function\r\n    warnings.warn_explicit(\r\npytest.PytestDeprecationWarning: The pytest_warning_captured is deprecated and will be removed in a future release.\r\nPlease use pytest_warning_recorded instead.\r\n\r\n\r\nreplacing crashed worker gw2\r\n[gw4] linux Python 3.9.0 cwd: /builddir/build/BUILD/hypothesis-hypothesis-python-5.15.1/hypothesis-python\r\n[gw3] node down: Traceback (most recent call last):\r\n  File \"/usr/lib/python3.9/site-packages/execnet/gateway_base.py\", line 1084, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 272, in <module>\r\n    interactor = WorkerInteractor(config, channel)\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 30, in __init__\r\n    config.pluginmanager.register(self)\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 424, in register\r\n    ret = super().register(plugin, name)  # type: Optional[str]\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 126, in register\r\n    self._verify_hook(hook, hookimpl)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 248, in _verify_hook\r\n    _warn_for_function(hook.spec.warn_on_impl, hookimpl.function)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 15, in _warn_for_function\r\n    warnings.warn_explicit(\r\npytest.PytestDeprecationWarning: The pytest_warning_captured is deprecated and will be removed in a future release.\r\nPlease use pytest_warning_recorded instead.\r\n\r\n\r\nreplacing crashed worker gw3\r\n[gw5] linux Python 3.9.0 cwd: /builddir/build/BUILD/hypothesis-hypothesis-python-5.15.1/hypothesis-python\r\n[gw4] node down: Traceback (most recent call last):\r\n  File \"/usr/lib/python3.9/site-packages/execnet/gateway_base.py\", line 1084, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 272, in <module>\r\n    interactor = WorkerInteractor(config, channel)\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 30, in __init__\r\n    config.pluginmanager.register(self)\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 424, in register\r\n    ret = super().register(plugin, name)  # type: Optional[str]\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 126, in register\r\n    self._verify_hook(hook, hookimpl)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 248, in _verify_hook\r\n    _warn_for_function(hook.spec.warn_on_impl, hookimpl.function)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 15, in _warn_for_function\r\n    warnings.warn_explicit(\r\npytest.PytestDeprecationWarning: The pytest_warning_captured is deprecated and will be removed in a future release.\r\nPlease use pytest_warning_recorded instead.\r\n\r\n\r\nreplacing crashed worker gw4\r\n[gw6] linux Python 3.9.0 cwd: /builddir/build/BUILD/hypothesis-hypothesis-python-5.15.1/hypothesis-python\r\n[gw5] node down: Traceback (most recent call last):\r\n  File \"/usr/lib/python3.9/site-packages/execnet/gateway_base.py\", line 1084, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 272, in <module>\r\n    interactor = WorkerInteractor(config, channel)\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 30, in __init__\r\n    config.pluginmanager.register(self)\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 424, in register\r\n    ret = super().register(plugin, name)  # type: Optional[str]\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 126, in register\r\n    self._verify_hook(hook, hookimpl)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 248, in _verify_hook\r\n    _warn_for_function(hook.spec.warn_on_impl, hookimpl.function)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 15, in _warn_for_function\r\n    warnings.warn_explicit(\r\npytest.PytestDeprecationWarning: The pytest_warning_captured is deprecated and will be removed in a future release.\r\nPlease use pytest_warning_recorded instead.\r\n\r\n\r\nreplacing crashed worker gw5\r\n[gw7] linux Python 3.9.0 cwd: /builddir/build/BUILD/hypothesis-hypothesis-python-5.15.1/hypothesis-python\r\n[gw6] node down: Traceback (most recent call last):\r\n  File \"/usr/lib/python3.9/site-packages/execnet/gateway_base.py\", line 1084, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 272, in <module>\r\n    interactor = WorkerInteractor(config, channel)\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 30, in __init__\r\n    config.pluginmanager.register(self)\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 424, in register\r\n    ret = super().register(plugin, name)  # type: Optional[str]\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 126, in register\r\n    self._verify_hook(hook, hookimpl)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 248, in _verify_hook\r\n    _warn_for_function(hook.spec.warn_on_impl, hookimpl.function)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 15, in _warn_for_function\r\n    warnings.warn_explicit(\r\npytest.PytestDeprecationWarning: The pytest_warning_captured is deprecated and will be removed in a future release.\r\nPlease use pytest_warning_recorded instead.\r\n\r\n\r\nreplacing crashed worker gw6\r\n[gw8] linux Python 3.9.0 cwd: /builddir/build/BUILD/hypothesis-hypothesis-python-5.15.1/hypothesis-python\r\n[gw7] node down: Traceback (most recent call last):\r\n  File \"/usr/lib/python3.9/site-packages/execnet/gateway_base.py\", line 1084, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 272, in <module>\r\n    interactor = WorkerInteractor(config, channel)\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 30, in __init__\r\n    config.pluginmanager.register(self)\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 424, in register\r\n    ret = super().register(plugin, name)  # type: Optional[str]\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 126, in register\r\n    self._verify_hook(hook, hookimpl)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 248, in _verify_hook\r\n    _warn_for_function(hook.spec.warn_on_impl, hookimpl.function)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 15, in _warn_for_function\r\n    warnings.warn_explicit(\r\npytest.PytestDeprecationWarning: The pytest_warning_captured is deprecated and will be removed in a future release.\r\nPlease use pytest_warning_recorded instead.\r\n\r\n\r\nreplacing crashed worker gw7\r\n[gw9] linux Python 3.9.0 cwd: /builddir/build/BUILD/hypothesis-hypothesis-python-5.15.1/hypothesis-python\r\n[gw8] node down: Traceback (most recent call last):\r\n  File \"/usr/lib/python3.9/site-packages/execnet/gateway_base.py\", line 1084, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 272, in <module>\r\n    interactor = WorkerInteractor(config, channel)\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 30, in __init__\r\n    config.pluginmanager.register(self)\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 424, in register\r\n    ret = super().register(plugin, name)  # type: Optional[str]\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 126, in register\r\n    self._verify_hook(hook, hookimpl)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 248, in _verify_hook\r\n    _warn_for_function(hook.spec.warn_on_impl, hookimpl.function)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 15, in _warn_for_function\r\n    warnings.warn_explicit(\r\npytest.PytestDeprecationWarning: The pytest_warning_captured is deprecated and will be removed in a future release.\r\nPlease use pytest_warning_recorded instead.\r\n\r\n\r\nmaximum crashed workers reached: 8\r\n[gw9] node down: Traceback (most recent call last):\r\n  File \"/usr/lib/python3.9/site-packages/execnet/gateway_base.py\", line 1084, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 272, in <module>\r\n    interactor = WorkerInteractor(config, channel)\r\n  File \"/usr/lib/python3.9/site-packages/xdist/remote.py\", line 30, in __init__\r\n    config.pluginmanager.register(self)\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 424, in register\r\n    ret = super().register(plugin, name)  # type: Optional[str]\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 126, in register\r\n    self._verify_hook(hook, hookimpl)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 248, in _verify_hook\r\n    _warn_for_function(hook.spec.warn_on_impl, hookimpl.function)\r\n  File \"/usr/lib/python3.9/site-packages/pluggy/manager.py\", line 15, in _warn_for_function\r\n    warnings.warn_explicit(\r\npytest.PytestDeprecationWarning: The pytest_warning_captured is deprecated and will be removed in a future release.\r\nPlease use pytest_warning_recorded instead.\r\n\r\n\r\nmaximum crashed workers reached: 8\r\n\r\n================== xdist: maximum crashed workers reached: 8 ===================\r\n```\r\n\r\nBut the only place where pytest_warning_captured is even mentioned is in pytest and pytest-xdist code :/\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/553", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/553/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/553/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/553", "id": 653004818, "node_id": "MDU6SXNzdWU2NTMwMDQ4MTg=", "number": 553, "title": "When using \"-n auto\", count the number of physical CPU cores instead of logical ones", "user": {"login": "utapyngo", "id": 1124655, "node_id": "MDQ6VXNlcjExMjQ2NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1124655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/utapyngo", "html_url": "https://github.com/utapyngo", "followers_url": "https://api.github.com/users/utapyngo/followers", "following_url": "https://api.github.com/users/utapyngo/following{/other_user}", "gists_url": "https://api.github.com/users/utapyngo/gists{/gist_id}", "starred_url": "https://api.github.com/users/utapyngo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/utapyngo/subscriptions", "organizations_url": "https://api.github.com/users/utapyngo/orgs", "repos_url": "https://api.github.com/users/utapyngo/repos", "events_url": "https://api.github.com/users/utapyngo/events{/privacy}", "received_events_url": "https://api.github.com/users/utapyngo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-08T06:09:55Z", "updated_at": "2020-08-19T11:18:53Z", "closed_at": "2020-08-03T12:49:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a laptop with 6 physical CPU cores and hyper-threading. The code from [auto_detect_cpus](https://github.com/pytest-dev/pytest-xdist/blob/master/src/xdist/plugin.py#L8) gives 12:\r\n\r\n```\r\nfrom os import sched_getaffinity\r\nlen(sched_getaffinity(0))\r\nOut[24]: 12\r\n```\r\n\r\nThe optimal number of parallel processes though is 6. Tests run slower when using 12 processes.\r\nDid you consider using `psutil.cpu_count(logical=False)`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/549", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/549/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/549/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/549", "id": 650671838, "node_id": "MDU6SXNzdWU2NTA2NzE4Mzg=", "number": 549, "title": "Make \"--pdb\" imply \"--dist no\"", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-03T15:50:00Z", "updated_at": "2020-07-24T23:07:43Z", "closed_at": "2020-07-24T23:07:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If I have this in my `pytest.ini`:\r\n\r\n```\r\n[pytest]\r\naddopts = --numprocesses auto\r\n          --dist loadscope\r\n```\r\n\r\n... I get told off that I have a problem with my `-n` option when trying to use `--pdb`:\r\n\r\n```\r\n$ pytest --pdb\r\nERROR: --pdb is incompatible with distributing tests; try using -n0 or -nauto.\r\n```\r\n\r\nCurrently using `--pdb` with `-nauto` implies `-n0`, I think it should also imply `--dist no` for consistency?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/542", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/542/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/542/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/542", "id": 641130591, "node_id": "MDU6SXNzdWU2NDExMzA1OTE=", "number": 542, "title": "QA", "user": {"login": "EitanBe", "id": 20422205, "node_id": "MDQ6VXNlcjIwNDIyMjA1", "avatar_url": "https://avatars3.githubusercontent.com/u/20422205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EitanBe", "html_url": "https://github.com/EitanBe", "followers_url": "https://api.github.com/users/EitanBe/followers", "following_url": "https://api.github.com/users/EitanBe/following{/other_user}", "gists_url": "https://api.github.com/users/EitanBe/gists{/gist_id}", "starred_url": "https://api.github.com/users/EitanBe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EitanBe/subscriptions", "organizations_url": "https://api.github.com/users/EitanBe/orgs", "repos_url": "https://api.github.com/users/EitanBe/repos", "events_url": "https://api.github.com/users/EitanBe/events{/privacy}", "received_events_url": "https://api.github.com/users/EitanBe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-18T11:27:23Z", "updated_at": "2020-06-20T17:30:48Z", "closed_at": "2020-06-20T17:30:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**### Question**\r\nIS it possible to use xdist for running each worker on different docker dynamically ? \r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/540", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/540/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/540/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/540", "id": 633598694, "node_id": "MDU6SXNzdWU2MzM1OTg2OTQ=", "number": 540, "title": "Feature Request: `--looponfail-checkinterval` option to set `StatRecorder.waitonchange` sleep time", "user": {"login": "Jasha10", "id": 8935917, "node_id": "MDQ6VXNlcjg5MzU5MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8935917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jasha10", "html_url": "https://github.com/Jasha10", "followers_url": "https://api.github.com/users/Jasha10/followers", "following_url": "https://api.github.com/users/Jasha10/following{/other_user}", "gists_url": "https://api.github.com/users/Jasha10/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jasha10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jasha10/subscriptions", "organizations_url": "https://api.github.com/users/Jasha10/orgs", "repos_url": "https://api.github.com/users/Jasha10/repos", "events_url": "https://api.github.com/users/Jasha10/events{/privacy}", "received_events_url": "https://api.github.com/users/Jasha10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-07T17:27:28Z", "updated_at": "2020-06-09T03:22:19Z", "closed_at": "2020-06-09T03:22:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am interested in making the `--looponfail` option faster, so that the call to `looponfail.StatRecorder.check` will happen more frequently. I think that the call to `statrecorder.waitonchange(checkinterval=2.0)` in the `looponfail.looponfail_main` function is the culprit; a sleep time of `2.0` seconds is hardcoded in.\r\n\r\nPerhaps we could add a `--looponfail-checkinterval` command-line flag so that users have the option to set a different `checkinterval`. Any thoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/539", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/539/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/539/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/539", "id": 629655095, "node_id": "MDU6SXNzdWU2Mjk2NTUwOTU=", "number": 539, "title": "Bad `-k` selection causes internal error on worker nodes", "user": {"login": "Zac-HD", "id": 12229877, "node_id": "MDQ6VXNlcjEyMjI5ODc3", "avatar_url": "https://avatars1.githubusercontent.com/u/12229877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zac-HD", "html_url": "https://github.com/Zac-HD", "followers_url": "https://api.github.com/users/Zac-HD/followers", "following_url": "https://api.github.com/users/Zac-HD/following{/other_user}", "gists_url": "https://api.github.com/users/Zac-HD/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zac-HD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zac-HD/subscriptions", "organizations_url": "https://api.github.com/users/Zac-HD/orgs", "repos_url": "https://api.github.com/users/Zac-HD/repos", "events_url": "https://api.github.com/users/Zac-HD/events{/privacy}", "received_events_url": "https://api.github.com/users/Zac-HD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239944, "node_id": "MDU6TGFiZWwyNTUyMzk5NDQ=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T03:03:16Z", "updated_at": "2020-06-15T13:48:01Z", "closed_at": "2020-06-15T13:48:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```bash\r\n$ echo 'def test_foo(): pass' > t.py\r\n$ pytest t.py -k 'no bar'\r\nplatform win32 -- Python 3.7.2, pytest-5.4.3, py-1.8.0, pluggy-0.12.0\r\n...\r\ncollected 1 item\r\n============================ no tests ran in 0.02s ============================\r\nERROR: Wrong expression passed to '-k': no bar\r\n```\r\n\r\nObviously this should be `-k 'not bar'`, but running under xdist I get an internal error instead of the helpful message here:\r\n\r\n```\r\n$ pytest t.py -k 'no bar' -n 1\r\n...\r\ngw0 I\r\ngw0 [1]\r\n\r\nWARNING: Failed to generate report: No data to report.\r\n\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"_pytest\\main.py\", line 196, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"_pytest\\main.py\", line 246, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"pluggy\\hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"pluggy\\manager.py\", line 87, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"pluggy\\manager.py\", line 81, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"pluggy\\callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"pluggy\\callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"pluggy\\callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"xdist\\dsession.py\", line 115, in pytest_runtestloop\r\nINTERNALERROR>     self.loop_once()\r\nINTERNALERROR>   File \"xdist\\dsession.py\", line 138, in loop_once\r\nINTERNALERROR>     call(**kwargs)\r\nINTERNALERROR>   File \"xdist\\dsession.py\", line 180, in worker_workerfinished\r\nINTERNALERROR>     assert not crashitem, (crashitem, node)\r\nINTERNALERROR> AssertionError: ('t.py::test_foo', <WorkerController gw0>)\r\nINTERNALERROR> assert not 't.py::test_foo'\r\n\r\n============================ no tests ran in 0.60s ============================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/534", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/534/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/534/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/534", "id": 619099471, "node_id": "MDU6SXNzdWU2MTkwOTk0NzE=", "number": 534, "title": "How to distribute tests using -n flag based on class?", "user": {"login": "vaibhav-jain", "id": 4224414, "node_id": "MDQ6VXNlcjQyMjQ0MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4224414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaibhav-jain", "html_url": "https://github.com/vaibhav-jain", "followers_url": "https://api.github.com/users/vaibhav-jain/followers", "following_url": "https://api.github.com/users/vaibhav-jain/following{/other_user}", "gists_url": "https://api.github.com/users/vaibhav-jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaibhav-jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaibhav-jain/subscriptions", "organizations_url": "https://api.github.com/users/vaibhav-jain/orgs", "repos_url": "https://api.github.com/users/vaibhav-jain/repos", "events_url": "https://api.github.com/users/vaibhav-jain/events{/privacy}", "received_events_url": "https://api.github.com/users/vaibhav-jain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T16:33:00Z", "updated_at": "2020-06-09T11:07:30Z", "closed_at": "2020-06-09T11:07:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to distribute my tests classes using the `-n` flag such that \r\n\r\nCPU 1 -> class A, class X, class Z\r\nCPU 2 -> class B, class Y\r\n\r\nis it possible to achieve this currently with pytest?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/533", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/533/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/533/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/533", "id": 618364748, "node_id": "MDU6SXNzdWU2MTgzNjQ3NDg=", "number": 533, "title": "CLI arguments are differently passed to workers (pytest 4.6.10)", "user": {"login": "dasm", "id": 1412617, "node_id": "MDQ6VXNlcjE0MTI2MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1412617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dasm", "html_url": "https://github.com/dasm", "followers_url": "https://api.github.com/users/dasm/followers", "following_url": "https://api.github.com/users/dasm/following{/other_user}", "gists_url": "https://api.github.com/users/dasm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dasm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dasm/subscriptions", "organizations_url": "https://api.github.com/users/dasm/orgs", "repos_url": "https://api.github.com/users/dasm/repos", "events_url": "https://api.github.com/users/dasm/events{/privacy}", "received_events_url": "https://api.github.com/users/dasm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-14T16:23:18Z", "updated_at": "2020-05-14T17:45:08Z", "closed_at": "2020-05-14T17:45:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "After update to `pytest 4.6.10` (python2 version), `pytest-xdist` started misbehaving. I'm not sure yet what is the problem: `pytest` or `pytest-xdist`.\r\n\r\nI can reproduce the same behavior for `pytest 5.4.2`, but downgrading to `pytest 5.4.1` is not feasible - there is another error due to: `INTERNALERROR> TypeError: unhashable type: 'ExceptionChainRepr'`\r\n\r\nFor `4.6.9`\r\n```\r\n(venv2) \u279c  dcp-test-utils git:(master) \u2717 pytest --iofs-framework=/storage/shared/home_directories/dsmigiel/apps/dcp-test-utils --sync-dir=/storage/shared/home_directories/dsmigiel/s10_darby_creek --workspace=/storage/shared/home_directories/dsmigiel/workspace -m 'iofs and\r\n centos7_el7 and single and not long_running' --tx ssh=sj-avl-d07-mc --tx ssh=sj-avl-d08-mc --tx ssh=sj-avl-d09-mc --tx ssh=sj-avl-d13-mc --tx ssh=sj-avl-r1-11 --tx ssh=sj-avl-r1-21 --tx ssh=sj-avl-r1-9 --skip-provisioning\r\n============================================================================================================================= test session starts ==============================================================================================================================\r\nplatform darwin -- Python 2.7.17, pytest-4.6.9, py-1.8.1, pluggy-0.13.1\r\nrootdir: /Users/dsmigiel/apps/dcp-test-utils, inifile: pytest.ini, testpaths: adapt_regtest\r\nplugins: timeout-1.3.4, ansible-playbook-0.4.1, html-1.22.1, forked-1.1.3, xdist-1.32.0, cloud-4.0.0, metadata-1.8.0, json-report-1.2.1\r\ntimeout: 600.0s\r\ntimeout method: signal\r\ntimeout func_only: False\r\ngw0 I / gw1 I / gw2 I / gw3 I / gw4 I / gw5 I / gw6 I\r\n\r\nSkipping preconfiguration\r\n\r\ngw0 [21] / gw1 [21] / gw2 [21] / gw3 [21] / gw4 [21] / gw5 [21] / gw6 [21]\r\n```\r\n\r\nFor `4.6.10`\r\n```\r\n(venv2) \u279c  dcp-test-utils git:(master) \u2717 pytest --iofs-framework=/storage/shared/home_directories/dsmigiel/apps/dcp-test-utils --sync-dir=/storage/shared/home_directories/dsmigiel/s10_darby_creek --workspace=/storage/shared/home_directories/dsmigiel/workspace -m 'iofs and centos7_el7 and single and not long_running' --tx ssh=sj-avl-d07-mc --tx ssh=sj-avl-d08-mc --tx ssh=sj-avl-d09-mc --tx ssh=sj-avl-d13-mc --tx ssh=sj-avl-r1-11 --tx ssh=sj-avl-r1-21 --tx ssh=sj-avl-r1-9 --skip-provisioning\r\n============================================================================================================================= test session starts ==============================================================================================================================\r\nplatform darwin -- Python 2.7.17, pytest-4.6.10, py-1.8.1, pluggy-0.13.1\r\nrootdir: /Users/dsmigiel/apps/dcp-test-utils, inifile: pytest.ini, testpaths: adapt_regtest\r\nplugins: timeout-1.3.4, ansible-playbook-0.4.1, html-1.22.1, forked-1.1.3, xdist-1.32.0, cloud-4.0.0, metadata-1.8.0, json-report-1.2.1\r\ntimeout: 600.0s\r\ntimeout method: signal\r\ntimeout func_only: False\r\ngw0 I / gw1 I / gw2 I / gw3 I / gw4 I / gw5 I / gw6 I\r\n\r\nSkipping preconfiguration\r\n\r\ngw0 [0] / gw1 [0] / gw2 [0] / gw3 [0] / gw4 [0] / gw5 [0] / gw6 [0]\r\n\r\n--------------------------------------------------------------------------------------------------------------------------------- JSON report ----------------------------------------------------------------------------------------------------------------------------------\r\nJSON report written to: report.json (1447 bytes)\r\n=========================================================================================================================== short test summary info ============================================================================================================================\r\nFAILED  - ValueError: option names set(['--workspace']) already added\r\nFAILED  - ValueError: option names set(['--workspace']) already added\r\nFAILED  - ValueError: option names set(['--workspace']) already added\r\nFAILED  - ValueError: option names set(['--workspace']) already added\r\nFAILED  - ValueError: option names set(['--workspace']) already added\r\nFAILED  - ValueError: option names set(['--workspace']) already added\r\nFAILED  - ValueError: option names set(['--workspace']) already added\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/524", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/524/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/524/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/524", "id": 608712514, "node_id": "MDU6SXNzdWU2MDg3MTI1MTQ=", "number": 524, "title": "Add a global uuid for each test run into each worker", "user": {"login": "svenstaro", "id": 1664, "node_id": "MDQ6VXNlcjE2NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svenstaro", "html_url": "https://github.com/svenstaro", "followers_url": "https://api.github.com/users/svenstaro/followers", "following_url": "https://api.github.com/users/svenstaro/following{/other_user}", "gists_url": "https://api.github.com/users/svenstaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/svenstaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svenstaro/subscriptions", "organizations_url": "https://api.github.com/users/svenstaro/orgs", "repos_url": "https://api.github.com/users/svenstaro/repos", "events_url": "https://api.github.com/users/svenstaro/events{/privacy}", "received_events_url": "https://api.github.com/users/svenstaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-29T01:16:16Z", "updated_at": "2020-05-01T17:36:55Z", "closed_at": "2020-05-01T17:36:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've often had the problem that I need to all workers of the same test run to somehow share a common identity. Sadly this is currently hard and there is no way to discern one test run from the next. I propose generating a uuid at the very start of each test session and then just adding that into each worker.\r\n\r\nThis way, workers have some pre-shared state that allows some logic to decide whether something has already globally been done in a test session or not.\r\n\r\nThis should be exposed to pytest via global fixture akin to `worker_id`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/518", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/518/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/518/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/518", "id": 593228383, "node_id": "MDU6SXNzdWU1OTMyMjgzODM=", "number": 518, "title": "pytest-cov doesn't respect `--basetemp` with pytest 5.4.0+", "user": {"login": "BenjaminSchubert", "id": 1672192, "node_id": "MDQ6VXNlcjE2NzIxOTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1672192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenjaminSchubert", "html_url": "https://github.com/BenjaminSchubert", "followers_url": "https://api.github.com/users/BenjaminSchubert/followers", "following_url": "https://api.github.com/users/BenjaminSchubert/following{/other_user}", "gists_url": "https://api.github.com/users/BenjaminSchubert/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenjaminSchubert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenjaminSchubert/subscriptions", "organizations_url": "https://api.github.com/users/BenjaminSchubert/orgs", "repos_url": "https://api.github.com/users/BenjaminSchubert/repos", "events_url": "https://api.github.com/users/BenjaminSchubert/events{/privacy}", "received_events_url": "https://api.github.com/users/BenjaminSchubert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-03T08:56:34Z", "updated_at": "2020-04-03T09:11:48Z", "closed_at": "2020-04-03T09:11:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/pytest-dev/pytest/pull/6767 has removed the `_tmpdirhandler` that was used to get the base temporary directory.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/515", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/515/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/515/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/515", "id": 588448391, "node_id": "MDU6SXNzdWU1ODg0NDgzOTE=", "number": 515, "title": "INTERNALERROR> TypeError: unhashable type: 'ExceptionChainRepr'", "user": {"login": "lusewell", "id": 3801015, "node_id": "MDQ6VXNlcjM4MDEwMTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3801015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lusewell", "html_url": "https://github.com/lusewell", "followers_url": "https://api.github.com/users/lusewell/followers", "following_url": "https://api.github.com/users/lusewell/following{/other_user}", "gists_url": "https://api.github.com/users/lusewell/gists{/gist_id}", "starred_url": "https://api.github.com/users/lusewell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lusewell/subscriptions", "organizations_url": "https://api.github.com/users/lusewell/orgs", "repos_url": "https://api.github.com/users/lusewell/repos", "events_url": "https://api.github.com/users/lusewell/events{/privacy}", "received_events_url": "https://api.github.com/users/lusewell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-26T14:07:31Z", "updated_at": "2020-05-13T13:32:39Z", "closed_at": "2020-04-02T22:56:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running pytest with `-n4` and `--doctest-modules` together with import errors leads to this misleading error which hides what the actual error is.\r\n\r\n```\r\n(pytest-debug) :~/PycharmProjects/scratch$ py.test --pyargs test123 --doctest-modules -n4 \r\n=================================================== test session starts ====================================================\r\nplatform linux -- Python 3.7.6, pytest-5.4.1.dev27+g3b48fce, py-1.8.1, pluggy-0.13.0\r\nrootdir: ~/PycharmProjects/scratch\r\nplugins: forked-1.1.3, xdist-1.31.1.dev1+g6fd5b56\r\ngw0 ok / gw1 ok / gw2 C / gw3 CINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"site-packages/pytest-5.4.1.dev27+g3b48fce-py3.7.egg/_pytest/main.py\", line 191, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"site-packages/pytest-5.4.1.dev27+g3b48fce-py3.7.egg/_pytest/main.py\", line 247, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"site-packages/pluggy/manager.py\", line 92, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"site-packages/pluggy/manager.py\", line 86, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"site-packages/pytest_xdist-1.31.1.dev1+g6fd5b56-py3.7.egg/xdist/dsession.py\", line 112, in pytest_runtestloop\r\nINTERNALERROR>     self.loop_once()\r\nINTERNALERROR>   File \"site-packages/pytest_xdist-1.31.1.dev1+g6fd5b56-py3.7.egg/xdist/dsession.py\", line 135, in loop_once\r\nINTERNALERROR>     call(**kwargs)\r\nINTERNALERROR>   File \"site-packages/pytest_xdist-1.31.1.dev1+g6fd5b56-py3.7.egg/xdist/dsession.py\", line 272, in worker_collectreport\r\nINTERNALERROR>     self._failed_worker_collectreport(node, rep)\r\nINTERNALERROR>   File \"site-packages/pytest_xdist-1.31.1.dev1+g6fd5b56-py3.7.egg/xdist/dsession.py\", line 302, in _failed_worker_collectreport\r\nINTERNALERROR>     if rep.longrepr not in self._failed_collection_errors:\r\nINTERNALERROR> TypeError: unhashable type: 'ExceptionChainRepr'\r\n```\r\n\r\nWhen run with just one of `-n4` and `--doctest-modules` its fine.\r\n\r\n```\r\n(pytest-debug) :~/PycharmProjects/scratch$ py.test --pyargs test123 -n4\r\n=================================================== test session starts ====================================================\r\nplatform linux -- Python 3.7.6, pytest-5.4.1.dev27+g3b48fce, py-1.8.1, pluggy-0.13.0\r\nrootdir: ~/PycharmProjects/scratch\r\nplugins: forked-1.1.3, xdist-1.31.1.dev1+g6fd5b56\r\ngw0 [0] / gw1 [0] / gw2 [0] / gw3 [0]                                                                                      \r\n\r\n========================================================== ERRORS ==========================================================\r\n_____________________________________ ERROR collecting test123/test/test_something.py ______________________________________\r\nImportError while importing test module '~/PycharmProjects/scratch/test123/test/test_something.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\ntest123/test/test_something.py:1: in <module>\r\n    import foo\r\nE   ModuleNotFoundError: No module named 'foo'\r\n================================================= short test summary info ==================================================\r\nERROR test123/test/test_something.py\r\n=\r\n```\r\n\r\nor \r\n```\r\n(pytest-debug) :~/PycharmProjects/scratch$ py.test --pyargs test123 --doctest-modules \r\n=================================================== test session starts ====================================================\r\nplatform linux -- Python 3.7.6, pytest-5.4.1.dev27+g3b48fce, py-1.8.1, pluggy-0.13.0\r\nrootdir: ~/PycharmProjects/scratch\r\nplugins: forked-1.1.3, xdist-1.31.1.dev1+g6fd5b56\r\ncollected 0 items / 2 errors                                                                                               \r\n\r\n========================================================== ERRORS ==========================================================\r\n_____________________________________ ERROR collecting test123/test/test_something.py ______________________________________\r\ntest123/test/test_something.py:1: in <module>\r\n    import foo\r\nE   ModuleNotFoundError: No module named 'foo'\r\n_____________________________________ ERROR collecting test123/test/test_something.py ______________________________________\r\nImportError while importing test module '~/PycharmProjects/scratch/test123/test/test_something.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\ntest123/test/test_something.py:1: in <module>\r\n    import foo\r\nE   ModuleNotFoundError: No module named 'foo'\r\n================================================= short test summary info ==================================================\r\nERROR test123/test/test_something.py - ModuleNotFoundError: No module named 'foo'\r\nERROR test123/test/test_something.py\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 2 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n==================================================== 2 errors in 0.06s =====================================================\r\n```\r\n\r\nProject is a minimal set of test files\r\n\r\n```\r\n~/PycharmProjects/scratch$ find test123 | grep -v __pycache__\r\ntest123\r\ntest123/test\r\ntest123/test/test_something.py\r\ntest123/__init__.py\r\n```\r\n\r\nand versions are\r\n\r\n```\r\n# packages in environment at /..../pytest-debug:\r\n#\r\n# Name                    Version                   Build  Channel\r\n_libgcc_mutex             0.1                 conda_forge    conda-forge\r\n_openmp_mutex             4.5                       0_gnu    conda-forge\r\napipkg                    1.5                      pypi_0    pypi\r\nattrs                     19.3.0                     py_0    conda-forge\r\nca-certificates           2019.11.28           hecc5488_0    conda-forge\r\ncertifi                   2019.11.28       py37hc8dfbb8_1    conda-forge\r\nexecnet                   1.7.1                    pypi_0    pypi\r\nimportlib-metadata        1.5.2            py37hc8dfbb8_0    conda-forge\r\nimportlib_metadata        1.5.2                         0    conda-forge\r\nld_impl_linux-64          2.34                 h53a641e_0    conda-forge\r\nlibffi                    3.2.1             he1b5a44_1007    conda-forge\r\nlibgcc-ng                 9.2.0                h24d8f2e_2    conda-forge\r\nlibgomp                   9.2.0                h24d8f2e_2    conda-forge\r\nlibstdcxx-ng              9.2.0                hdf63c60_2    conda-forge\r\nmore-itertools            8.2.0                      py_0    conda-forge\r\nncurses                   6.1               hf484d3e_1002    conda-forge\r\nopenssl                   1.1.1e               h516909a_0    conda-forge\r\npackaging                 20.1                       py_0    conda-forge\r\npip                       20.0.2                     py_2    conda-forge\r\npluggy                    0.13.0                   py37_0    conda-forge\r\npy                        1.8.1                      py_0    conda-forge\r\npy-cpuinfo                5.0.0                      py_0    conda-forge\r\npyparsing                 2.4.6                      py_0    conda-forge\r\npytest                    5.4.1.dev27+g3b48fce          pypi_0    pypi\r\npytest-forked             1.1.3                    pypi_0    pypi\r\npytest-xdist              1.31.1.dev1+g6fd5b56.d20200326          pypi_0    pypi\r\npython                    3.7.6           h8356626_5_cpython    conda-forge\r\npython_abi                3.7                     1_cp37m    conda-forge\r\nreadline                  8.0                  hf8c457e_0    conda-forge\r\nripgrep                   11.0.2               h516909a_3    conda-forge\r\nsetuptools                46.1.3           py37hc8dfbb8_0    conda-forge\r\nsix                       1.14.0                     py_1    conda-forge\r\nsqlite                    3.30.1               hcee41ef_0    conda-forge\r\ntk                        8.6.10               hed695b0_0    conda-forge\r\nwcwidth                   0.1.8              pyh9f0ad1d_1    conda-forge\r\nwheel                     0.34.2                     py_1    conda-forge\r\nxz                        5.2.4             h516909a_1002    conda-forge\r\nzipp                      3.1.0                      py_0    conda-forge\r\nzlib                      1.2.11            h516909a_1006    conda-forge\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/510", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/510/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/510/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/510/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/510", "id": 569255026, "node_id": "MDU6SXNzdWU1NjkyNTUwMjY=", "number": 510, "title": "Test failure with pytest master", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-22T01:01:33Z", "updated_at": "2020-04-10T05:49:53Z", "closed_at": "2020-04-10T05:49:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The removal of `_tmpdirhandler` from the config object (https://github.com/pytest-dev/pytest/commit/8a1633c3b4a75caff946c1fb5fefaa73f61e5556, https://github.com/pytest-dev/pytest/pull/6767) breaks https://github.com/pytest-dev/pytest-xdist/blob/136663a5c7b8ea43c154a8505ff70d0d79adbccb/src/xdist/workermanage.py#L255-L257.\r\n\r\nTested in https://github.com/pytest-dev/pytest-xdist/blob/136663a5c7b8ea43c154a8505ff70d0d79adbccb/testing/acceptance_test.py#L118-L129.\r\n\r\nRef: https://github.com/pytest-dev/pytest-xdist/commit/5ddef63085725d2d5f3e6d87cad3d23cb99b557a / #22", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/506", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/506/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/506/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/506", "id": 568821344, "node_id": "MDU6SXNzdWU1Njg4MjEzNDQ=", "number": 506, "title": "INTERNALERROR> OSError: could not get source code", "user": {"login": "gggstamm", "id": 38915929, "node_id": "MDQ6VXNlcjM4OTE1OTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/38915929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gggstamm", "html_url": "https://github.com/gggstamm", "followers_url": "https://api.github.com/users/gggstamm/followers", "following_url": "https://api.github.com/users/gggstamm/following{/other_user}", "gists_url": "https://api.github.com/users/gggstamm/gists{/gist_id}", "starred_url": "https://api.github.com/users/gggstamm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gggstamm/subscriptions", "organizations_url": "https://api.github.com/users/gggstamm/orgs", "repos_url": "https://api.github.com/users/gggstamm/repos", "events_url": "https://api.github.com/users/gggstamm/events{/privacy}", "received_events_url": "https://api.github.com/users/gggstamm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-21T08:57:42Z", "updated_at": "2020-02-21T10:54:34Z", "closed_at": "2020-02-21T10:54:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Development team,\r\n\r\nI installed a new computer and I have an issue on using pytest with parallel execution.\r\npython -m pytest path_to_the_tests  -n 4 \r\n=> KO log bellow\r\npython -m pytest path_to_the_tests \r\n=> works perfectly\r\n\r\nworking on windows 10, with python 3.5.5, pytest 3.8.1, pytest-xdist 1.23.0\r\n- full log in attachement\r\n- full environment in attachement\r\n\r\nthanks for your help\r\nGuillaume\r\n\r\nINTERNALERROR>   File \"C:\\CostEngine\\CostEngine_PreReq\\anaconda_venv_digital_costing\\lib\\inspect.py\", line 936, in getsourcelines\r\nINTERNALERROR>     lines, lnum = findsource(object)\r\nINTERNALERROR>   File \"C:\\CostEngine\\CostEngine_PreReq\\anaconda_venv_digital_costing\\lib\\inspect.py\", line 767, in findsource\r\nINTERNALERROR>     raise OSError('could not get source code')\r\nINTERNALERROR> OSError: could not get source code\r\n\r\n[env.txt](https://github.com/pytest-dev/pytest-xdist/files/4235138/env.txt)\r\n[log.txt](https://github.com/pytest-dev/pytest-xdist/files/4235139/log.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/504", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/504/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/504/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/504", "id": 565266241, "node_id": "MDU6SXNzdWU1NjUyNjYyNDE=", "number": 504, "title": "Handy API to know information about master/slaves from session", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-14T11:24:53Z", "updated_at": "2020-08-05T23:41:55Z", "closed_at": "2020-08-05T23:41:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As mentioned in https://github.com/smarie/python-pytest-harvest/issues/36 (and discussed already with @nicoddemus in https://github.com/smarie/python-pytest-harvest/issues/32) it would be great to have an elegant API to answer these simple questions:\r\n\r\n - `get_xdist_worker_id(session)`: would return `session.config.slaveinput['slaveid']` or raise an exception if this not an xdist worker\r\n - `is_xdist_worker(session)`: would return `True` if this is an xdist worker, `False` otherwise\r\n - `is_xdist_master(session)`: would return `True` if this is the xdist master, `False` otherwise (**important**: this would return `False` when distribution has not been activated and \"normal\" pytest has been run on a single process)\r\n\r\nWould you like a PR for this ?\r\n\r\nWhen/if this API is done, we should not forget to post the answer on [this SO question](https://stackoverflow.com/questions/60212389/how-can-i-know-from-inside-a-pytest-hook-if-pytest-xdist-is-enabled)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/501", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/501/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/501/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/501", "id": 562172020, "node_id": "MDU6SXNzdWU1NjIxNzIwMjA=", "number": 501, "title": "fixtures with class scope not working as expected with --dist=loadscope option", "user": {"login": "fpiccione", "id": 18098310, "node_id": "MDQ6VXNlcjE4MDk4MzEw", "avatar_url": "https://avatars0.githubusercontent.com/u/18098310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fpiccione", "html_url": "https://github.com/fpiccione", "followers_url": "https://api.github.com/users/fpiccione/followers", "following_url": "https://api.github.com/users/fpiccione/following{/other_user}", "gists_url": "https://api.github.com/users/fpiccione/gists{/gist_id}", "starred_url": "https://api.github.com/users/fpiccione/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fpiccione/subscriptions", "organizations_url": "https://api.github.com/users/fpiccione/orgs", "repos_url": "https://api.github.com/users/fpiccione/repos", "events_url": "https://api.github.com/users/fpiccione/events{/privacy}", "received_events_url": "https://api.github.com/users/fpiccione/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-09T12:51:46Z", "updated_at": "2020-02-09T23:58:54Z", "closed_at": "2020-02-09T23:58:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to run about 10 tests that depend on a set up done with a fixture, it all works fine without parallelism using a class fixture and tests within class.\r\nOnce I add the xdist parallelism I experience the following:\r\nWhen I do not use loadscope, all the tests are sent to their own worker. I do not want this because I would like to only build the fixture once and use it for all related class tests.\r\n\r\nWhen I use loadscope, all the tests are executed against gw0 and I am not getting any parallelism.\r\n\r\nExactly same as experienced on this thread by someone else:\r\nhttps://stackoverflow.com/questions/51756594/pytest-xdist-indirect-fixtures-with-class-scope\r\n\r\nIs there another syntax or way of achieving a class level group of tests (that depends on one session level fixture) to make sure only one worker will go through \r\nThe specific use case is having to process each file in a session fixture list and based on the output of this process, run 10x tests. I can't afford xdist to give some of these 10x tests to one worker and some to other as they both end up processing same file again. Cannot afford to move this to conftest and do it session-scoped as each worker will pay the penalty of processing each file.\r\n\r\nThe wiki says that tests are grouped by class scope when using this loadscope option, so failing to understand why this is not working. Is there an issue/collision that the class refers to another session level fixture (not stand alone)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/497", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/497/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/497/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/497", "id": 549348568, "node_id": "MDU6SXNzdWU1NDkzNDg1Njg=", "number": 497, "title": "pytest -n 5 throw exception", "user": {"login": "358235737", "id": 30221805, "node_id": "MDQ6VXNlcjMwMjIxODA1", "avatar_url": "https://avatars2.githubusercontent.com/u/30221805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/358235737", "html_url": "https://github.com/358235737", "followers_url": "https://api.github.com/users/358235737/followers", "following_url": "https://api.github.com/users/358235737/following{/other_user}", "gists_url": "https://api.github.com/users/358235737/gists{/gist_id}", "starred_url": "https://api.github.com/users/358235737/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/358235737/subscriptions", "organizations_url": "https://api.github.com/users/358235737/orgs", "repos_url": "https://api.github.com/users/358235737/repos", "events_url": "https://api.github.com/users/358235737/events{/privacy}", "received_events_url": "https://api.github.com/users/358235737/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T05:50:58Z", "updated_at": "2020-01-14T08:43:00Z", "closed_at": "2020-01-14T08:43:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "while I run pytest -n 5 ,throw exception as below:\r\npython3 -m pytest -s -v -q -n 5 TestCase --alluredir allure-results\r\n\r\nplatform linux -- Python 3.7.5, pytest-5.1.0, py-1.8.0, pluggy-0.12.0\r\nrootdir: /app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest\r\nplugins: allure-pytest-2.6.3, forked-1.0.2, rerunfailures-7.0, xdist-1.28.0\r\ngw0 I / gw1 I / gw2 I / gw3 I / gw4 I\r\ngw0 [13] / gw1 [13] / gw2 [13] / gw3 [13] / gw4 [13]\r\n...................\r\nF[gw4] node down: Traceback (most recent call last):\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1374, in _save\r\n    dispatch = self._dispatch[tp]\r\nKeyError: <enum 'ExitCode'>\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1063, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"<string>\", line 1, in do_exec\r\n  File \"<remote exec>\", line 249, in <module>\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/pluggy/hooks.py\", line 289, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/pluggy/manager.py\", line 81, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\n    return outcome.get_result()\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/_pytest/main.py\", line 228, in pytest_cmdline_main\r\n    return wrap_session(config, _main)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/_pytest/main.py\", line 221, in wrap_session\r\n    session=session, exitstatus=session.exitstatus\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/pluggy/hooks.py\", line 289, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/pluggy/manager.py\", line 81, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"<remote exec>\", line 46, in pytest_sessionfinish\r\n  File \"<remote exec>\", line 31, in sendevent\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 708, in send\r\n    self.gateway._send(Message.CHANNEL_DATA, self.id, dumps_internal(item))\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1345, in dumps_internal\r\n    return _Serializer().save(obj)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1363, in save\r\n    self._save(obj)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1381, in _save\r\n    dispatch(self, obj)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1466, in save_tuple\r\n    self._save(item)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1381, in _save\r\n    dispatch(self, obj)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1462, in save_dict\r\n    self._write_setitem(key, value)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1456, in _write_setitem\r\n    self._save(value)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1381, in _save\r\n    dispatch(self, obj)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1462, in save_dict\r\n    self._write_setitem(key, value)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1456, in _write_setitem\r\n    self._save(value)\r\n  File \"/app/workspace/O2O-DDS_ISSZNFJ/o2o-dds-iss-autotest/my_virtualenvs/lib/python3.7/site-packages/execnet/gateway_base.py\", line 1379, in _save\r\n    raise DumpError(\"can't serialize {}\".format(tp))\r\nexecnet.gateway_base.DumpError: can't serialize <enum 'ExitCode'>\r\n\r\nReplacing crashed worker gw4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/493", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/493/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/493/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/493", "id": 535432906, "node_id": "MDU6SXNzdWU1MzU0MzI5MDY=", "number": 493, "title": "xdist cause the INTERNAL errors", "user": {"login": "aaronxiang0926", "id": 20278020, "node_id": "MDQ6VXNlcjIwMjc4MDIw", "avatar_url": "https://avatars1.githubusercontent.com/u/20278020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronxiang0926", "html_url": "https://github.com/aaronxiang0926", "followers_url": "https://api.github.com/users/aaronxiang0926/followers", "following_url": "https://api.github.com/users/aaronxiang0926/following{/other_user}", "gists_url": "https://api.github.com/users/aaronxiang0926/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronxiang0926/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronxiang0926/subscriptions", "organizations_url": "https://api.github.com/users/aaronxiang0926/orgs", "repos_url": "https://api.github.com/users/aaronxiang0926/repos", "events_url": "https://api.github.com/users/aaronxiang0926/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronxiang0926/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-10T01:20:01Z", "updated_at": "2019-12-10T11:35:34Z", "closed_at": "2019-12-10T11:35:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "plugins:\r\nforked-1.1.3,\r\nxdist-1.30.0,\r\nparallel-0.0.9, \r\nrerunfailures-7.0, \r\ncov-2.8.1, logger-0.5.1,\r\n metadata-1.8.0, html-2.0.1, \r\ntimeout-1.3.3, repeat-0.8.0, \r\ninstafail-0.4.1\r\n\r\n\r\n~~~~~~~~~~~~~~~~~~~~~ Stack of Thread-4 (140296258430720) ~~~~~~~~~~~~~~~~~~~~~~\r\n  File \"/usr/lib/python3.6/threading.py\", line 884, in _bootstrap\r\n    self._bootstrap_inner()\r\n  File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/builds/admin-ftw15/admin/sct/src/testcases/common/memory_checker.py\", line 43, in run\r\n    self._stop_event.wait(self._sleep_period)\r\n  File \"/usr/lib/python3.6/threading.py\", line 551, in wait\r\n    signaled = self._cond.wait(timeout)\r\n  File \"/usr/lib/python3.6/threading.py\", line 299, in wait\r\n    gotit = waiter.acquire(True, timeout)\r\n\r\n~~~~~~~~~~~~~~~~~~~~~ Stack of Thread-3 (140296266823424) ~~~~~~~~~~~~~~~~~~~~~~\r\n  File \"/usr/lib/python3.6/threading.py\", line 884, in _bootstrap\r\n    self._bootstrap_inner()\r\n  File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/viper/transports/admin_websocket/websocket_server_transport.py\", line 78, in run\r\n    srv._server = srv._event_loop.run_forever()\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 422, in run_forever\r\n    self._run_once()\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 1398, in _run_once\r\n    event_list = self._selector.select(timeout)\r\n  File \"/usr/lib/python3.6/selectors.py\", line 445, in select\r\n    fd_event_list = self._epoll.poll(timeout, max_ev)\r\n\r\n~~~~~~~~~~~~~~~~~~~~~ Stack of <unknown> (140296440977152) ~~~~~~~~~~~~~~~~~~~~~\r\n  File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/execnet/gateway_base.py\", line 285, in _perform_spawn\r\n    reply.run()\r\n  File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/execnet/gateway_base.py\", line 220, in run\r\n    self._result = func(*args, **kwargs)\r\n  File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/execnet/gateway_base.py\", line 967, in _thread_receiver\r\n    msg = Message.from_io(io)\r\n  File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/execnet/gateway_base.py\", line 432, in from_io\r\n    header = io.read(9)  # type 1, channel 4, payload 4\r\n  File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/execnet/gateway_base.py\", line 400, in read\r\n    data = self._read(numbytes - len(buf))\r\n\r\n+++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/_pytest/main.py\", line 213, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/_pytest/main.py\", line 257, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/xdist/remote.py\", line 70, in pytest_runtestloop\r\nINTERNALERROR>     self.run_one_test(torun)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/xdist/remote.py\", line 87, in run_one_test\r\nINTERNALERROR>     self.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pytest_rerunfailures.py\", line 176, in pytest_runtest_protocol\r\nINTERNALERROR>     reports = runtestprotocol(item, nextitem=nextitem, log=False)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/_pytest/runner.py\", line 87, in runtestprotocol\r\nINTERNALERROR>     reports.append(call_and_report(item, \"call\", log))\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/_pytest/runner.py\", line 169, in call_and_report\r\nINTERNALERROR>     report = hook.pytest_runtest_makereport(item=item, call=call)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/src/testcases/conftest.py\", line 169, in pytest_runtest_makereport\r\nINTERNALERROR>     browser().save_screenshot(destination_file)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 1055, in save_screenshot\r\nINTERNALERROR>     return self.get_screenshot_as_file(filename)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 1032, in get_screenshot_as_file\r\nINTERNALERROR>     png = self.get_screenshot_as_png()\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 1064, in get_screenshot_as_png\r\nINTERNALERROR>     return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 1074, in get_screenshot_as_base64\r\nINTERNALERROR>     return self.execute(Command.SCREENSHOT)['value']\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 319, in execute\r\nINTERNALERROR>     response = self.command_executor.execute(driver_command, params)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py\", line 374, in execute\r\nINTERNALERROR>     return self._request(command_info[0], url, body=data)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py\", line 397, in _request\r\nINTERNALERROR>     resp = self._conn.request(method, url, body=body, headers=headers)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/urllib3/request.py\", line 76, in request\r\nINTERNALERROR>     method, url, fields=fields, headers=headers, **urlopen_kw\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\nINTERNALERROR>     return self.urlopen(method, url, **extra_kw)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/urllib3/poolmanager.py\", line 330, in urlopen\r\nINTERNALERROR>     response = conn.urlopen(method, u.request_uri, **kw)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 672, in urlopen\r\nINTERNALERROR>     chunked=chunked,\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 421, in _make_request\r\nINTERNALERROR>     six.raise_from(e, None)\r\nINTERNALERROR>   File \"<string>\", line 3, in raise_from\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 416, in _make_request\r\nINTERNALERROR>     httplib_response = conn.getresponse()\r\nINTERNALERROR>   File \"/usr/lib/python3.6/http/client.py\", line 1331, in getresponse\r\nINTERNALERROR>     response.begin()\r\nINTERNALERROR>   File \"/usr/lib/python3.6/http/client.py\", line 297, in begin\r\nINTERNALERROR>     version, status, reason = self._read_status()\r\nINTERNALERROR>   File \"/usr/lib/python3.6/http/client.py\", line 258, in _read_status\r\nINTERNALERROR>     line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\nINTERNALERROR>   File \"/usr/lib/python3.6/socket.py\", line 586, in readinto\r\nINTERNALERROR>     return self._sock.recv_into(b)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pytest_timeout.py\", line 140, in handler\r\nINTERNALERROR>     timeout_sigalrm(item, params.timeout)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pytest_timeout.py\", line 313, in timeout_sigalrm\r\nINTERNALERROR>     pytest.fail('Timeout >%ss' % timeout)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/_pytest/outcomes.py\", line 111, in fail\r\nINTERNALERROR>     raise Failed(msg=msg, pytrace=pytrace)\r\nINTERNALERROR> Failed: Timeout >90.0s\r\nR [ 20%]\r\n                                                                         [ 20%]\r\nsrc/testcases/tests_gui/configuration/commissioning_wizard/site/legacy_coverage/test_pnp_radios.py R [ 20%]\r\n\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/_pytest/main.py\", line 213, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/_pytest/main.py\", line 257, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/xdist/dsession.py\", line 112, in pytest_runtestloop\r\nINTERNALERROR>     self.loop_once()\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/xdist/dsession.py\", line 135, in loop_once\r\nINTERNALERROR>     call(**kwargs)\r\nINTERNALERROR>   File \"/builds/admin-ftw15/admin/sct/.tox/test/lib/python3.6/site-packages/xdist/dsession.py\", line 177, in worker_workerfinished\r\nINTERNALERROR>     assert not crashitem, (crashitem, node)\r\nINTERNALERROR> AssertionError: ('src/testcases/tests_gui/configuration/commissioning_wizard/site/lte4500_AirScale_Indoor_SFN/test_lte_opr_ac_8483_site.py::test_lte_opr_ac_8483_site', <WorkerController gw3>)\r\nINTERNALERROR> assert not 'src/testcases/tests_gui/configuration/commissioning_wizard/site/lte4500_AirScale_Indoor_SFN/test_lte_opr_ac_8483_site.py::test_lte_opr_ac_8483_site\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/489", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/489/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/489/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/489", "id": 532118102, "node_id": "MDU6SXNzdWU1MzIxMTgxMDI=", "number": 489, "title": "[Question]: Delivering fixture results on one off expensive tasks with xdist", "user": {"login": "symonk", "id": 17887843, "node_id": "MDQ6VXNlcjE3ODg3ODQz", "avatar_url": "https://avatars0.githubusercontent.com/u/17887843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/symonk", "html_url": "https://github.com/symonk", "followers_url": "https://api.github.com/users/symonk/followers", "following_url": "https://api.github.com/users/symonk/following{/other_user}", "gists_url": "https://api.github.com/users/symonk/gists{/gist_id}", "starred_url": "https://api.github.com/users/symonk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/symonk/subscriptions", "organizations_url": "https://api.github.com/users/symonk/orgs", "repos_url": "https://api.github.com/users/symonk/repos", "events_url": "https://api.github.com/users/symonk/events{/privacy}", "received_events_url": "https://api.github.com/users/symonk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-03T16:44:53Z", "updated_at": "2019-12-04T00:51:11Z", "closed_at": "2019-12-04T00:51:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have been using xdist for quite some time now and one major flaw I have (and hope a workaround exists for) is:\r\n\r\nWhen using a fixture to yield some value of something that can ONLY run once for ALL tests, something expensive like starting a mountbank server, how can you have all tests use the same server and yield such server object from a fixture?\r\n\r\nTraditional session scopes fixtures will run on every xdist worker, and they will also try shut the server down post yield as soon as their batch of tests has completed, killing the server for tests on another process that still may need it.\r\n\r\nIs there a simple solution to this? My alternative is starting and stopping the mountbank instance in a plug-in on master only, it sucks! I can\u2019t inject the value into tests from that, any advice?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/481", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/481/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/481/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/481", "id": 510744592, "node_id": "MDU6SXNzdWU1MTA3NDQ1OTI=", "number": 481, "title": "xdist can break whe using `usercustomize`", "user": {"login": "prusse-martin", "id": 4542185, "node_id": "MDQ6VXNlcjQ1NDIxODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4542185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prusse-martin", "html_url": "https://github.com/prusse-martin", "followers_url": "https://api.github.com/users/prusse-martin/followers", "following_url": "https://api.github.com/users/prusse-martin/following{/other_user}", "gists_url": "https://api.github.com/users/prusse-martin/gists{/gist_id}", "starred_url": "https://api.github.com/users/prusse-martin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prusse-martin/subscriptions", "organizations_url": "https://api.github.com/users/prusse-martin/orgs", "repos_url": "https://api.github.com/users/prusse-martin/repos", "events_url": "https://api.github.com/users/prusse-martin/events{/privacy}", "received_events_url": "https://api.github.com/users/prusse-martin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-22T15:42:36Z", "updated_at": "2019-10-23T19:38:22Z", "closed_at": "2019-10-23T19:38:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a `usercustomize` as described in [Site-specific configuration hook\u00b6](https://docs.python.org/3/library/site.html) I left a leftover print in the file and when running the tests with pytest and xdist I got the error:\r\n\r\n```\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\execnet\\gateway_bootstrap.py\", line 32, in bootstrap_import\r\nINTERNALERROR>     assert s == \"1\".encode('ascii'), repr(s)\r\nINTERNALERROR> AssertionError: b'u'\r\n```\r\n\r\nThe setup:\r\n```\r\n(_alfasim_gui-win64-py36) W:\\alfasim\\Projects\\alfasim>cat test_a.py\r\ndef test_b():\r\n    assert True\r\n\r\n(_alfasim_gui-win64-py36) W:\\alfasim\\Projects\\alfasim>cat usercustomize.py\r\nprint('usercustomize.py')\r\n\r\n(_alfasim_gui-win64-py36) W:\\alfasim\\Projects\\alfasim>set PYTHONPATH=.\r\n```\r\n\r\nFail with xdist due to print in `usercustomize.py`:\r\n```\r\n(_alfasim_gui-win64-py36) W:\\alfasim\\Projects\\alfasim>py.test -n 1 test_a.py\r\nu\r\n================================================= test session starts =================================================\r\nplatform win32 -- Python 3.6.7, pytest-4.5.0, py-1.7.0, pluggy-0.11.0\r\ndriver: PhantomJS\r\nsensitiveurl: .*\r\nPyQt5 5.6 -- Qt runtime 5.6.2 -- Qt compiled 5.6.2\r\nrootdir: W:\\alfasim\\Projects\\alfasim\r\nplugins: xdist-1.29.0, variables-1.7.1, timeout-1.3.3, selenium-1.17.0, replay-0.2.2, regressions-1.0.5, qt-3.2.2, mock-1.10.0, metadata-1.8.0, localserver-0.5.0, lazy-fixture-0.5.1, html-1.22.0, forked-1.0.2, datadir-1.3.0, cpp-1.1.0, cov-2.6.1, base-url-1.4.1, hypothesis-3.57.0\r\ngw0 IINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\_pytest\\main.py\", line 203, in wrap_session\r\nINTERNALERROR>     config.hook.pytest_sessionstart(session=session)\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\pluggy\\hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\pluggy\\manager.py\", line 68, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\pluggy\\manager.py\", line 62, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\pluggy\\callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\pluggy\\callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\xdist\\dsession.py\", line 81, in pytest_sessionstart\r\nINTERNALERROR>     nodes = self.nodemanager.setup_nodes(putevent=self.queue.put)\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\xdist\\workermanage.py\", line 64, in setup_nodes\r\nINTERNALERROR>     nodes.append(self.setup_node(spec, putevent))\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\xdist\\workermanage.py\", line 68, in setup_node\r\nINTERNALERROR>     gw = self.group.makegateway(spec)\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\execnet\\multi.py\", line 128, in makegateway\r\nINTERNALERROR>     gw = gateway_bootstrap.bootstrap(io, spec)\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\execnet\\gateway_bootstrap.py\", line 96, in bootstrap\r\nINTERNALERROR>     bootstrap_import(io, spec)\r\nINTERNALERROR>   File \"W:\\alfasim\\envs\\_alfasim_gui-win64-py36\\lib\\site-packages\\execnet\\gateway_bootstrap.py\", line 32, in bootstrap_import\r\nINTERNALERROR>     assert s == \"1\".encode('ascii'), repr(s)\r\nINTERNALERROR> AssertionError: b'u'\r\n```\r\n\r\nNo failure due to print in `usercustomize.py` (no xdist):\r\n```\r\n(_alfasim_gui-win64-py36) W:\\alfasim\\Projects\\alfasim>py.test test_a.py\r\nusercustomize.py\r\n================================================= test session starts =================================================\r\nplatform win32 -- Python 3.6.7, pytest-4.5.0, py-1.7.0, pluggy-0.11.0\r\ndriver: PhantomJS\r\nsensitiveurl: .*\r\nPyQt5 5.6 -- Qt runtime 5.6.2 -- Qt compiled 5.6.2\r\nrootdir: W:\\alfasim\\Projects\\alfasim\r\nplugins: xdist-1.29.0, variables-1.7.1, timeout-1.3.3, selenium-1.17.0, replay-0.2.2, regressions-1.0.5, qt-3.2.2, mock-1.10.0, metadata-1.8.0, localserver-0.5.0, lazy-fixture-0.5.1, html-1.22.0, forked-1.0.2, datadir-1.3.0, cpp-1.1.0, cov-2.6.1, base-url-1.4.1, hypothesis-3.57.0\r\ncollected 1 item\r\n\r\ntest_a.py .                                                                                                      [100%]\r\n\r\n============================================== 1 passed in 0.01 seconds ===============================================\r\n```\r\n\r\nRemoving `usercustomize.py` there is no failure with xdist:\r\n```\r\n(_alfasim_gui-win64-py36) W:\\alfasim\\Projects\\alfasim>mv usercustomize.py usercustomize.py_\r\n\r\n(_alfasim_gui-win64-py36) W:\\alfasim\\Projects\\alfasim>py.test -n 1 test_a.py\r\n================================================= test session starts =================================================\r\nplatform win32 -- Python 3.6.7, pytest-4.5.0, py-1.7.0, pluggy-0.11.0\r\ndriver: PhantomJS\r\nsensitiveurl: .*\r\nPyQt5 5.6 -- Qt runtime 5.6.2 -- Qt compiled 5.6.2\r\nrootdir: W:\\alfasim\\Projects\\alfasim\r\nplugins: xdist-1.29.0, variables-1.7.1, timeout-1.3.3, selenium-1.17.0, replay-0.2.2, regressions-1.0.5, qt-3.2.2, mock-1.10.0, metadata-1.8.0, localserver-0.5.0, lazy-fixture-0.5.1, html-1.22.0, forked-1.0.2, datadir-1.3.0, cpp-1.1.0, cov-2.6.1, base-url-1.4.1, hypothesis-3.57.0\r\ngw0 [1]\r\n.                                                                                                                [100%]\r\n============================================== 1 passed in 1.30 seconds ===============================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/477", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/477/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/477/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/477", "id": 509254332, "node_id": "MDU6SXNzdWU1MDkyNTQzMzI=", "number": 477, "title": "Allow richer expressions in -n auto", "user": {"login": "gappleto97", "id": 1554778, "node_id": "MDQ6VXNlcjE1NTQ3Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1554778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gappleto97", "html_url": "https://github.com/gappleto97", "followers_url": "https://api.github.com/users/gappleto97/followers", "following_url": "https://api.github.com/users/gappleto97/following{/other_user}", "gists_url": "https://api.github.com/users/gappleto97/gists{/gist_id}", "starred_url": "https://api.github.com/users/gappleto97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gappleto97/subscriptions", "organizations_url": "https://api.github.com/users/gappleto97/orgs", "repos_url": "https://api.github.com/users/gappleto97/repos", "events_url": "https://api.github.com/users/gappleto97/events{/privacy}", "received_events_url": "https://api.github.com/users/gappleto97/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-18T18:51:28Z", "updated_at": "2020-07-14T03:53:29Z", "closed_at": "2020-01-04T19:05:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if we could put things like `pytest -n auto-1` and have it correctly interpret that as \"all CPUs except 1\". This ensures that the processor is not hogged by tests, but also that it runs at a very fast clip.\r\n\r\nCould be done something like:\r\n\r\n```python\r\ncores = 1\r\nif 'auto' in args.n:\r\n    cores = cpu_count()\r\n    if '-' in args.n:\r\n        cores -= int(args.n.split('-')[1])\r\n    elif args.n != 'auto':\r\n        raise ValueError(\"Invalid option given!\")\r\nelse:\r\n    cores = int(args.n)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/476", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/476/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/476/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/476", "id": 504800836, "node_id": "MDU6SXNzdWU1MDQ4MDA4MzY=", "number": 476, "title": "Xdist causes AssertionError", "user": {"login": "jpraccio0722", "id": 45366737, "node_id": "MDQ6VXNlcjQ1MzY2NzM3", "avatar_url": "https://avatars3.githubusercontent.com/u/45366737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpraccio0722", "html_url": "https://github.com/jpraccio0722", "followers_url": "https://api.github.com/users/jpraccio0722/followers", "following_url": "https://api.github.com/users/jpraccio0722/following{/other_user}", "gists_url": "https://api.github.com/users/jpraccio0722/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpraccio0722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpraccio0722/subscriptions", "organizations_url": "https://api.github.com/users/jpraccio0722/orgs", "repos_url": "https://api.github.com/users/jpraccio0722/repos", "events_url": "https://api.github.com/users/jpraccio0722/events{/privacy}", "received_events_url": "https://api.github.com/users/jpraccio0722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-09T17:52:21Z", "updated_at": "2019-10-09T18:15:37Z", "closed_at": "2019-10-09T18:15:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having an issue attempting to get xdist running.\r\nTests work fine without xdist.  With they consistently produce the following error.  Even if the code is commented out of the test.  Running in Docker, django app with pytest and pytest-django.  I haven't been able to find anything.  Seems this error occurs a lot below:\r\n\r\nAttributeError: '_HookRelay' object has no attribute 'pytest_report_to_serializable'\r\n\r\n`\r\nplatform linux -- Python 3.7.4, pytest-4.3.1, py-1.8.0, pluggy-0.13.0\r\nDjango settings: shopify_fulfillment.settings (from ini file)\r\nrootdir: /code, inifile: pytest.ini\r\nplugins: forked-1.0.2, cov-2.8.1, xdist-1.30.0, django-3.4.8, mock-1.10.3\r\ngw0 [215] / gw1 [215]\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/main.py\", line 209, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/main.py\", line 249, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 92, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 86, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/xdist/remote.py\", line 70, in pytest_runtestloop\r\nINTERNALERROR>     self.run_one_test(torun)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/xdist/remote.py\", line 87, in run_one_test\r\nINTERNALERROR>     self.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 92, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 86, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/runner.py\", line 78, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/runner.py\", line 87, in runtestprotocol\r\nINTERNALERROR>     rep = call_and_report(item, \"setup\", log)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/runner.py\", line 177, in call_and_report\r\nINTERNALERROR>     hook.pytest_runtest_logreport(report=report)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 92, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 86, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/xdist/remote.py\", line 110, in pytest_runtest_logreport\r\nINTERNALERROR>     data = self.config.hook.pytest_report_to_serializable(\r\nINTERNALERROR> AttributeError: '_HookRelay' object has no attribute 'pytest_report_to_serializable'\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/main.py\", line 209, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/main.py\", line 249, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 92, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 86, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/xdist/remote.py\", line 70, in pytest_runtestloop\r\nINTERNALERROR>     self.run_one_test(torun)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/xdist/remote.py\", line 87, in run_one_test\r\nINTERNALERROR>     self.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 92, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 86, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/runner.py\", line 78, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/runner.py\", line 87, in runtestprotocol\r\nINTERNALERROR>     rep = call_and_report(item, \"setup\", log)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/runner.py\", line 177, in call_and_report\r\nINTERNALERROR>     hook.pytest_runtest_logreport(report=report)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 92, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 86, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/xdist/remote.py\", line 110, in pytest_runtest_logreport\r\nINTERNALERROR>     data = self.config.hook.pytest_report_to_serializable(\r\nINTERNALERROR> AttributeError: '_HookRelay' object has no attribute 'pytest_report_to_serializable'\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/main.py\", line 209, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/main.py\", line 249, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 92, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 86, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/xdist/dsession.py\", line 112, in pytest_runtestloop\r\nINTERNALERROR>     self.loop_once()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/xdist/dsession.py\", line 135, in loop_once\r\nINTERNALERROR>     call(**kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/xdist/dsession.py\", line 177, in worker_workerfinished\r\nINTERNALERROR>     assert not crashitem, (crashitem, node)\r\nINTERNALERROR> AssertionError: ('tests/test_api/test_api_auth.py::AuthTests::test_get_token', <WorkerController gw0>)\r\nINTERNALERROR> assert not 'tests/test_api/test_api_auth.py::AuthTests::test_get_token'\r\n\r\n\r\nHere's the requirements.txt\r\n\r\n`\r\nbandit\r\nboto3==1.9.126\r\nchardet==3.0.4\r\ndatadog==0.29.3\r\nddtrace==0.27.1\r\ndj-database-url==0.5.0\r\nDjango==2.1.7\r\ndjango-cors-headers==2.4.1\r\ndjango-extensions==2.1.6\r\ndjango-filter==2.1.0\r\ndjango-localflavor==2.1\r\ndjango-heroku==0.3.1\r\ndjango-request-logging\r\ndjango-materialize==1.0.1a2\r\ndjango-model-utils==1.1.0\r\ndjangorestframework==3.9.1\r\ndjango-timezone-field==3.1\r\nfactory_boy==2.11.1\r\nfreezegun\r\ngeopy==1.20.0\r\ngunicorn==19.9.0\r\nhoneybadger\r\nidna==2.8\r\nisort==4.3.15\r\nlazy-object-proxy==1.3.1\r\nMarkdown==3.0.1\r\nmccabe==0.6.1\r\npbd==0.9\r\npsycopg2-binary==2.7.7\r\npyactiveresource==2.1.2\r\npytest==4.3.1\r\npytest-cov\r\npytest-django==3.4.8\r\npytest-mock==1.10.3\r\npytest-xdist==1.30.0\r\nprospector==1.1.6.2\r\npytz==2018.9\r\nPyYAML==5.1\r\nrequests==2.21.0\r\nShopifyAPI==4.0.0\r\nsix==1.12.0\r\ntimezonefinder==4.1.0\r\ntwilio==6.29.2\r\ntyped-ast==1.3.1\r\nurllib3==1.21.1\r\nvirtualenv==16.4.1\r\nwhitenoise==4.1.2\r\nwrapt==1.11.1\r\nweasyprint\r\ndjangorestframework-simplejwt==4.3.0\r\ndrf-yasg==1.16.1\r\npackaging==19.1\r\ndrf-nested-routers==0.91\r\ndjango-crum==0.7.3\r\ntqdm==4.36.1\r\nsentry-sdk==0.12.2\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/472", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/472/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/472/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/472", "id": 501235692, "node_id": "MDU6SXNzdWU1MDEyMzU2OTI=", "number": 472, "title": "Different tests were collected (since 1.30.0 release), with pytest-randomly", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-10-02T02:07:56Z", "updated_at": "2020-04-15T10:26:26Z", "closed_at": "2020-04-15T10:26:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been seeing this a lot today.  I'm fairly sure it's related to the 1.30.0 release not playing nice with pytest-randomly.\r\n\r\nRunning \r\n\r\n```\r\npytest --reuse-db -n 8\r\n```\r\n\r\nHits this error almost every time:\r\n\r\n\r\n```\r\npytest --reuse-db -n 8\r\nTest session starts (platform: linux, Python 3.7.3, pytest 5.2.0, pytest-sugar 0.9.2)\r\nDjango settings: wolcenweb.settings.dev (from ini file)\r\nUsing --randomly-seed=1569981723\r\nrootdir: /home/johnc/Projects/wolcenweb, inifile: pytest.ini, testpaths: wolcenweb\r\nplugins: xdist-1.30.0, forked-1.0.2, django-webtest-1.9.7, cov-2.7.1, sugar-0.9.2, django-3.5.1, env-0.6.2, randomly-3.1.0\r\ngw0 [246] / gw1 [246] / gw2 [246] / gw3 [246] / gw4 [246] / gw5 [246] / gw6 [246] / gw7 [246]\r\n\r\n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 gw0 \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\r\nDifferent tests were collected between gw5 and gw0. The difference is:\r\n--- gw5\r\n\r\n+++ gw0\r\n\r\n@@ -1,246 +1,246 @@\r\n```\r\n\r\nAny of the following seems to fix it:\r\n\r\n* downgrading to pytest-xdist==1.29.0\r\n* removing pytest-randomly\r\n* setting the randomly see with `--randomly-seed=123456789`\r\n\r\nFor what it's worth this is with pytest-django, other pytest stuff in play is:\r\n\r\n```\r\npip freeze | grep pytest\r\npytest==5.2.0\r\npytest-cov==2.7.1\r\npytest-django==3.5.1\r\npytest-env==0.6.2\r\npytest-forked==1.0.2\r\npytest-randomly==3.1.0\r\npytest-runner==5.1\r\npytest-sugar==0.9.2\r\npytest-xdist==1.30.0\r\n```\r\n\r\nFWIW I'm not using `pytest.mark.parametrize` in my tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/465", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/465/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/465/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/465", "id": 485393687, "node_id": "MDU6SXNzdWU0ODUzOTM2ODc=", "number": 465, "title": "AttributeError: 'Config' object has no attribute 'test_system' ", "user": {"login": "kiranreddi", "id": 15799450, "node_id": "MDQ6VXNlcjE1Nzk5NDUw", "avatar_url": "https://avatars0.githubusercontent.com/u/15799450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiranreddi", "html_url": "https://github.com/kiranreddi", "followers_url": "https://api.github.com/users/kiranreddi/followers", "following_url": "https://api.github.com/users/kiranreddi/following{/other_user}", "gists_url": "https://api.github.com/users/kiranreddi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiranreddi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiranreddi/subscriptions", "organizations_url": "https://api.github.com/users/kiranreddi/orgs", "repos_url": "https://api.github.com/users/kiranreddi/repos", "events_url": "https://api.github.com/users/kiranreddi/events{/privacy}", "received_events_url": "https://api.github.com/users/kiranreddi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-26T19:04:28Z", "updated_at": "2019-08-27T12:40:41Z", "closed_at": "2019-08-27T12:40:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nrootdir: python, inifile: pytest.ini, testpaths: test_cases\r\nplugins: metadata-1.8.0, html-1.22.0, sugar-0.9.2, timeout-1.3.3, forked-1.0.2, xdist-1.29.0, repeat-0.8.0\r\ntimeout: 3600.0s\r\ntimeout method: signal\r\ntimeout func_only: False\r\ngw0 ok / gw1 ok / gw2 ok\r\n../python-venv/lib/python2.7/site-packages/pluggy/hooks.py:289: in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n../python-venv/lib/python2.7/site-packages/pluggy/manager.py:87: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n../python-venv/lib/python2.7/site-packages/pluggy/manager.py:81: in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n../python-venv/lib/python2.7/site-packages/_pytest/python.py:234: in pytest_pycollect_makeitem\r\n    res = list(collector._genfunctions(name, obj))\r\n../python-venv/lib/python2.7/site-packages/_pytest/python.py:410: in _genfunctions\r\n    self.ihook.pytest_generate_tests(metafunc=metafunc)\r\n../python-venv/lib/python2.7/site-packages/pluggy/hooks.py:289: in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n../python-venv/lib/python2.7/site-packages/pluggy/manager.py:87: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n../python-venv/lib/python2.7/site-packages/pluggy/manager.py:81: in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n../../modules/ictest/python/test_cases/uts_plugin.py:20: in pytest_generate_tests\r\n    for build_config in metafunc.config.test_system.build_configuration.get(\r\nE   AttributeError: 'Config' object has no attribute 'test_system'\r\ngw0 [1] / gw1 ok / gw2 ok\r\n```\r\n\r\nall the tests are running fine without using \"-n\" option . I printed the attributes of config , and it does have test_system in it and i have no idea why it is failing . \r\n\r\nthanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/463", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/463/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/463/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/463", "id": 484050590, "node_id": "MDU6SXNzdWU0ODQwNTA1OTA=", "number": 463, "title": "gure", "user": {"login": "vasilty", "id": 19282383, "node_id": "MDQ6VXNlcjE5MjgyMzgz", "avatar_url": "https://avatars2.githubusercontent.com/u/19282383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vasilty", "html_url": "https://github.com/vasilty", "followers_url": "https://api.github.com/users/vasilty/followers", "following_url": "https://api.github.com/users/vasilty/following{/other_user}", "gists_url": "https://api.github.com/users/vasilty/gists{/gist_id}", "starred_url": "https://api.github.com/users/vasilty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vasilty/subscriptions", "organizations_url": "https://api.github.com/users/vasilty/orgs", "repos_url": "https://api.github.com/users/vasilty/repos", "events_url": "https://api.github.com/users/vasilty/events{/privacy}", "received_events_url": "https://api.github.com/users/vasilty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-22T15:06:08Z", "updated_at": "2019-08-22T15:06:11Z", "closed_at": "2019-08-22T15:06:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/461", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/461/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/461/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/461", "id": 481685129, "node_id": "MDU6SXNzdWU0ODE2ODUxMjk=", "number": 461, "title": "execnet==1.7.0 breaks with traceback under Windows", "user": {"login": "webknjaz", "id": 578543, "node_id": "MDQ6VXNlcjU3ODU0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/578543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webknjaz", "html_url": "https://github.com/webknjaz", "followers_url": "https://api.github.com/users/webknjaz/followers", "following_url": "https://api.github.com/users/webknjaz/following{/other_user}", "gists_url": "https://api.github.com/users/webknjaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/webknjaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webknjaz/subscriptions", "organizations_url": "https://api.github.com/users/webknjaz/orgs", "repos_url": "https://api.github.com/users/webknjaz/repos", "events_url": "https://api.github.com/users/webknjaz/events{/privacy}", "received_events_url": "https://api.github.com/users/webknjaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-16T16:21:08Z", "updated_at": "2019-08-16T23:16:47Z", "closed_at": "2019-08-16T23:16:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "ref: https://ci.appveyor.com/project/CherryPy/cheroot/builds/26599305/job/od41wbglrprs4a9n#L419\r\n```python-traceback\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1379, in _save\r\n    dispatch = self._dispatch[tp]\r\nKeyError: <enum 'ExitCode'>\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1068, in executetask\r\n    do_exec(co, loc)  # noqa\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\xdist\\remote.py\", line 249, in <module>\r\n    config.hook.pytest_cmdline_main(config=config)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\pluggy\\hooks.py\", line 289, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\pluggy\\manager.py\", line 87, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\pluggy\\manager.py\", line 81, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\pluggy\\callers.py\", line 208, in _multicall\r\n    return outcome.get_result()\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\pluggy\\callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\_pytest\\main.py\", line 250, in pytest_cmdline_main\r\n    return wrap_session(config, _main)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\_pytest\\main.py\", line 243, in wrap_session\r\n    session=session, exitstatus=session.exitstatus\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\pluggy\\hooks.py\", line 289, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\pluggy\\manager.py\", line 87, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\pluggy\\manager.py\", line 81, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\pluggy\\callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\xdist\\remote.py\", line 46, in pytest_sessionfinish\r\n    self.sendevent(\"workerfinished\", workeroutput=self.config.workeroutput)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\xdist\\remote.py\", line 31, in sendevent\r\n    self.channel.send((name, kwargs))\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 710, in send\r\n    self.gateway._send(Message.CHANNEL_DATA, self.id, dumps_internal(item))\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1350, in dumps_internal\r\n    return _Serializer().save(obj)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1368, in save\r\n    self._save(obj)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1386, in _save\r\n    dispatch(self, obj)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1471, in save_tuple\r\n    self._save(item)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1386, in _save\r\n    dispatch(self, obj)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1467, in save_dict\r\n    self._write_setitem(key, value)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1461, in _write_setitem\r\n    self._save(value)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1386, in _save\r\n    dispatch(self, obj)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1467, in save_dict\r\n    self._write_setitem(key, value)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1461, in _write_setitem\r\n    self._save(value)\r\n  File \"c:\\projects\\cheroot\\.tox\\python\\lib\\site-packages\\execnet\\gateway_base.py\", line 1384, in _save\r\n    raise DumpError(\"can't serialize {}\".format(tp))\r\nexecnet.gateway_base.DumpError: can't serialize <enum 'ExitCode'>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/455", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/455/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/455/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/455", "id": 473241096, "node_id": "MDU6SXNzdWU0NzMyNDEwOTY=", "number": 455, "title": "different tests were collected between gw3 and gw1. the difference is", "user": {"login": "jade-li1115", "id": 53292092, "node_id": "MDQ6VXNlcjUzMjkyMDky", "avatar_url": "https://avatars2.githubusercontent.com/u/53292092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jade-li1115", "html_url": "https://github.com/jade-li1115", "followers_url": "https://api.github.com/users/jade-li1115/followers", "following_url": "https://api.github.com/users/jade-li1115/following{/other_user}", "gists_url": "https://api.github.com/users/jade-li1115/gists{/gist_id}", "starred_url": "https://api.github.com/users/jade-li1115/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jade-li1115/subscriptions", "organizations_url": "https://api.github.com/users/jade-li1115/orgs", "repos_url": "https://api.github.com/users/jade-li1115/repos", "events_url": "https://api.github.com/users/jade-li1115/events{/privacy}", "received_events_url": "https://api.github.com/users/jade-li1115/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239948, "node_id": "MDU6TGFiZWwyNTUyMzk5NDg=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-07-26T08:30:50Z", "updated_at": "2019-08-06T05:18:20Z", "closed_at": "2019-08-06T05:18:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "i have searched alot i still couldnt fix this issue\r\n![image](https://user-images.githubusercontent.com/53292092/61938000-b5cae500-afc2-11e9-943c-8d9eeeb73cf1.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/452", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/452/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/452/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/452", "id": 470187172, "node_id": "MDU6SXNzdWU0NzAxODcxNzI=", "number": 452, "title": "[Question] - Collecting all tests results after the execution with pytest-xdist", "user": {"login": "PeterNgTr", "id": 7845001, "node_id": "MDQ6VXNlcjc4NDUwMDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7845001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterNgTr", "html_url": "https://github.com/PeterNgTr", "followers_url": "https://api.github.com/users/PeterNgTr/followers", "following_url": "https://api.github.com/users/PeterNgTr/following{/other_user}", "gists_url": "https://api.github.com/users/PeterNgTr/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterNgTr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterNgTr/subscriptions", "organizations_url": "https://api.github.com/users/PeterNgTr/orgs", "repos_url": "https://api.github.com/users/PeterNgTr/repos", "events_url": "https://api.github.com/users/PeterNgTr/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterNgTr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-07-19T07:46:22Z", "updated_at": "2020-03-02T10:34:26Z", "closed_at": "2019-07-19T11:21:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm a new to python world and pytest in particular. xdist would be an amazing plugin that reduces the execution time dramatically. There is a question that I haven't found any answers yet. My current setup is with pytest, pytest-xdist and pytest-testrail to publish the test results after the run. The issue is when using xdist, pytest-testrail plugin creates Test-Run for each xdist workers and then publishes test cases like Untested. I would like to ask if there is any hook for instance to collect the final tests results when all the workers are completed. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/449", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/449/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/449/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/449", "id": 463488879, "node_id": "MDU6SXNzdWU0NjM0ODg4Nzk=", "number": 449, "title": "Installing pytest-xdist 1.29.0 hangs all pytests", "user": {"login": "lkelly93", "id": 48305827, "node_id": "MDQ6VXNlcjQ4MzA1ODI3", "avatar_url": "https://avatars1.githubusercontent.com/u/48305827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkelly93", "html_url": "https://github.com/lkelly93", "followers_url": "https://api.github.com/users/lkelly93/followers", "following_url": "https://api.github.com/users/lkelly93/following{/other_user}", "gists_url": "https://api.github.com/users/lkelly93/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkelly93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkelly93/subscriptions", "organizations_url": "https://api.github.com/users/lkelly93/orgs", "repos_url": "https://api.github.com/users/lkelly93/repos", "events_url": "https://api.github.com/users/lkelly93/events{/privacy}", "received_events_url": "https://api.github.com/users/lkelly93/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-07-03T00:20:57Z", "updated_at": "2020-03-04T15:45:16Z", "closed_at": "2019-07-04T04:33:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tested on two computers. \r\n**PC:**\r\nOS WIn10 Pro 1903 64bit\r\ni7-8700K\r\n\r\npytest 5.0.0\r\npytest-xdist 1.29.0\r\npytest-forked 1.0.2\r\n\r\n**Laptop:**\r\nOS Win10 Pro 1903 64bit\r\ni7-8650U\r\n\r\npytest 5.0.0\r\npytest-xdist 1.29.0\r\npytest-forked 1.0.2\r\n\r\nI normally run \"pytest -v --numprocesses=auto\" but this hangs, if also if I just run pytest by itself it just hangs.  I noticed this after reinstalling pytest-xdist recently.  I went to check on my laptop if it was hanging and it wasn't so I checked what version my laptop was on and it was on pytest.xdist 1.28.0.  I installed pytest-xdist 1.29.0 on my laptop and now everything is hanging on it aswell. \r\n\r\nIf i uninstall pytest-xdist and pytest-forked on both my machines I can run my tests again but obviously not in parallel.  \r\n\r\nI'm new to this what more information do you need from me to fully troubleshoot this? Can in install a legacy version of pytest-dist easily? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/446", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/446/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/446/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/446", "id": 463205161, "node_id": "MDU6SXNzdWU0NjMyMDUxNjE=", "number": 446, "title": "Seeing logger stream closed prematurely creating pytest errors", "user": {"login": "spearsem", "id": 744988, "node_id": "MDQ6VXNlcjc0NDk4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/744988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spearsem", "html_url": "https://github.com/spearsem", "followers_url": "https://api.github.com/users/spearsem/followers", "following_url": "https://api.github.com/users/spearsem/following{/other_user}", "gists_url": "https://api.github.com/users/spearsem/gists{/gist_id}", "starred_url": "https://api.github.com/users/spearsem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spearsem/subscriptions", "organizations_url": "https://api.github.com/users/spearsem/orgs", "repos_url": "https://api.github.com/users/spearsem/repos", "events_url": "https://api.github.com/users/spearsem/events{/privacy}", "received_events_url": "https://api.github.com/users/spearsem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-02T12:38:09Z", "updated_at": "2019-07-21T10:11:50Z", "closed_at": "2019-07-21T10:11:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "See the description in https://github.com/pytest-dev/pytest/issues/5502 ... I see this when I am using pytest-xdist most frequently and can isolate it to when I am using parallel workers. I can't provide a minimal example that reproduces it unfortunately.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/445", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/445/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/445/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/445", "id": 459233085, "node_id": "MDU6SXNzdWU0NTkyMzMwODU=", "number": 445, "title": "pytest-xdist is not reporting the same nodeid as pytest does", "user": {"login": "elyezer", "id": 48132, "node_id": "MDQ6VXNlcjQ4MTMy", "avatar_url": "https://avatars1.githubusercontent.com/u/48132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elyezer", "html_url": "https://github.com/elyezer", "followers_url": "https://api.github.com/users/elyezer/followers", "following_url": "https://api.github.com/users/elyezer/following{/other_user}", "gists_url": "https://api.github.com/users/elyezer/gists{/gist_id}", "starred_url": "https://api.github.com/users/elyezer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elyezer/subscriptions", "organizations_url": "https://api.github.com/users/elyezer/orgs", "repos_url": "https://api.github.com/users/elyezer/repos", "events_url": "https://api.github.com/users/elyezer/events{/privacy}", "received_events_url": "https://api.github.com/users/elyezer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239944, "node_id": "MDU6TGFiZWwyNTUyMzk5NDQ=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-21T14:43:58Z", "updated_at": "2019-07-11T10:47:12Z", "closed_at": "2019-07-11T10:47:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running `pytest`  and `pytest -n <executors>` does not produce the same nodeid for the tests and therefore this is preventing lastfailed from running properly. Since the nodeids in the cache don't match any test collected, it ends up running tests that are not meant to run.\r\n\r\nI have the following workflow:\r\n\r\n1. Run the tests that can run in parallel using xdist\r\n2. Run the tests that need to run serially without using xdist's `-n` option\r\n3. Run pytest with the `--last-failed` option to try rerunning the failures to check if they are flaky. This is again without using xdist's `-n` option\r\n\r\nHere is the reproducer project structure:\r\n\r\n```console\r\n$ ls -1R\r\n.:\r\npytest.cfg\r\ntests\r\n\r\n./tests:\r\napi\r\n\r\n./tests/api:\r\n__pycache__\r\ntest_bar.py\r\ntest_foo.py\r\n```\r\n\r\nHere are the file contents:\r\n\r\n```console\r\n$ cat tests/api/test_bar.py \r\ndef test_bar_1():\r\n    assert True\r\n\r\n\r\ndef test_bar_2():\r\n    assert True\r\n\r\n\r\ndef test_bar_3():\r\n    assert False\r\n\r\n$ cat tests/api/test_foo.py \r\nimport os\r\n\r\n\r\ndef test_foo_fail():\r\n    assert os.environ.get('FOO_PASS', 'false') == 'true'\r\n\r\n\r\ndef test_foo_ok():\r\n    assert True\r\n\r\n$ cat pytest.cfg \r\n[tool:pytest]\r\npython_files = *.py\r\ntestpaths = tests/api\r\n```\r\n\r\nConsidering the project described above, if you run `pytest -n <executors>` it shows the following (mind the tests' nodeids):\r\n\r\n```console\r\n$ pytest -v --tb=no -c pytest.cfg -n 2\r\n================================ test session starts ================================\r\nplatform linux -- Python 3.7.3, pytest-4.6.3, py-1.8.0, pluggy-0.12.0 -- /home/elyezer/.local/venvs/pytest/bin/python3\r\ncachedir: .pytest_cache\r\nrootdir: /home/elyezer/code/xdist-reproducer, inifile: pytest.cfg, testpaths: tests/api\r\nplugins: xdist-1.29.0, forked-1.0.2\r\n[gw0] linux Python 3.7.3 cwd: /home/elyezer/code/xdist-reproducer\r\n[gw1] linux Python 3.7.3 cwd: /home/elyezer/code/xdist-reproducer\r\n[gw0] Python 3.7.3 (default, May 11 2019, 00:38:04)  -- [GCC 9.1.1 20190503 (Red Hat 9.1.1-1)]\r\n[gw1] Python 3.7.3 (default, May 11 2019, 00:38:04)  -- [GCC 9.1.1 20190503 (Red Hat 9.1.1-1)]\r\ngw0 [5] / gw1 [5]\r\nscheduling tests via LoadScheduling\r\n\r\ntest_bar.py::test_bar_1 \r\ntest_bar.py::test_bar_2 \r\n[gw1] [ 20%] PASSED test_bar.py::test_bar_2 \r\n[gw0] [ 40%] PASSED test_bar.py::test_bar_1 \r\ntest_bar.py::test_bar_3 \r\ntest_foo.py::test_foo_fail \r\n[gw0] [ 60%] FAILED test_bar.py::test_bar_3 \r\ntest_foo.py::test_foo_ok \r\n[gw0] [ 80%] PASSED test_foo.py::test_foo_ok \r\n[gw1] [100%] FAILED test_foo.py::test_foo_fail \r\n\r\n======================== 2 failed, 3 passed in 0.32 seconds =========================\r\n```\r\n\r\nBut if we run without the `-n` option here is the output:\r\n\r\n```console\r\n$ pytest -v --tb=no -c pytest.cfg     \r\n================================ test session starts ================================\r\nplatform linux -- Python 3.7.3, pytest-4.6.3, py-1.8.0, pluggy-0.12.0 -- /home/elyezer/.local/venvs/pytest/bin/python3\r\ncachedir: .pytest_cache\r\nrootdir: /home/elyezer/code/xdist-reproducer, inifile: pytest.cfg, testpaths: tests/api\r\nplugins: xdist-1.29.0, forked-1.0.2\r\ncollected 5 items                                                                   \r\n\r\ntests/api/test_bar.py::test_bar_1 PASSED                                      [ 20%]\r\ntests/api/test_bar.py::test_bar_2 PASSED                                      [ 40%]\r\ntests/api/test_bar.py::test_bar_3 FAILED                                      [ 60%]\r\ntests/api/test_foo.py::test_foo_fail FAILED                                   [ 80%]\r\ntests/api/test_foo.py::test_foo_ok PASSED                                     [100%]\r\n\r\n======================== 2 failed, 3 passed in 0.04 seconds =========================\r\n```\r\n\r\nAs you can see both calls has the same rootdir but produce different nodeids for the tests. And if we check the cache for lastfailed:\r\n\r\n```console\r\n$ pytest -c pytest.cfg --cache-show=cache/lastfailed\r\n================================ test session starts ================================\r\nplatform linux -- Python 3.7.3, pytest-4.6.3, py-1.8.0, pluggy-0.12.0\r\nrootdir: /home/elyezer/code/xdist-reproducer, inifile: pytest.cfg, testpaths: tests/api\r\nplugins: xdist-1.29.0, forked-1.0.2\r\ncachedir: /home/elyezer/code/xdist-reproducer/.pytest_cache\r\n------------------------ cache values for 'cache/lastfailed' ------------------------\r\ncache/lastfailed contains:\r\n  {'test_bar.py::test_bar_3': True,\r\n   'test_foo.py::test_foo_fail': True,\r\n   'tests/api/test_bar.py::test_bar_3': True,\r\n   'tests/api/test_foo.py::test_foo_fail': True}\r\n\r\n=========================== no tests ran in 0.00 seconds ============================\r\n```\r\n\r\n`pytest-xdist` test nodeid generation is not consistent with plain pytest nodeid generation and this inconsistency is breaking plugins such as the `lastfailed` that relies on the nodeids to do its job.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/441", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/441/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/441/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/441", "id": 455771944, "node_id": "MDU6SXNzdWU0NTU3NzE5NDQ=", "number": 441, "title": "the number of interpreters created with auto should be at most number of tests", "user": {"login": "gaborbernat", "id": 690238, "node_id": "MDQ6VXNlcjY5MDIzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/690238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborbernat", "html_url": "https://github.com/gaborbernat", "followers_url": "https://api.github.com/users/gaborbernat/followers", "following_url": "https://api.github.com/users/gaborbernat/following{/other_user}", "gists_url": "https://api.github.com/users/gaborbernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborbernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborbernat/subscriptions", "organizations_url": "https://api.github.com/users/gaborbernat/orgs", "repos_url": "https://api.github.com/users/gaborbernat/repos", "events_url": "https://api.github.com/users/gaborbernat/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborbernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-13T14:23:06Z", "updated_at": "2019-06-14T15:32:41Z", "closed_at": "2019-06-14T10:58:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment even with 1 test, on a 12 core CPU 12 interpreters are spun up.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/440", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/440/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/440/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/440", "id": 453804579, "node_id": "MDU6SXNzdWU0NTM4MDQ1Nzk=", "number": 440, "title": "how to fix endless \"Crashed worker\" loop", "user": {"login": "zzzeek", "id": 128223, "node_id": "MDQ6VXNlcjEyODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzzeek", "html_url": "https://github.com/zzzeek", "followers_url": "https://api.github.com/users/zzzeek/followers", "following_url": "https://api.github.com/users/zzzeek/following{/other_user}", "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions", "organizations_url": "https://api.github.com/users/zzzeek/orgs", "repos_url": "https://api.github.com/users/zzzeek/repos", "events_url": "https://api.github.com/users/zzzeek/events{/privacy}", "received_events_url": "https://api.github.com/users/zzzeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-08T15:20:23Z", "updated_at": "2019-06-08T16:51:19Z", "closed_at": "2019-06-08T15:22:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there -\r\n\r\nmy apologies for not googling this too heavily, I've never seen this problem before after many years of using pytest-xdist.  Testing out Python 3.8 with cx_Oracle, which is not surprisingly not working very well, my test suite goes into an endless loop like below, replacing \"crashed worker\" over and over again.  Simple question, is there a way to make it only tolerate N crashed workers?    Because if they crash over and over again like that, clearly the test suite is broken and I just need the whole thing to fail.\r\n\r\n\r\n```\r\nlatform linux -- Python 3.8.0b1, pytest-4.6.2, py-1.8.0, pluggy-0.12.0 -- /home/classic/dev/sqlalchemy/.tox/py38-cext-oracle-backendonly/bin/python\r\ncachedir: .tox/py38-cext-oracle-backendonly/.pytest_cache\r\nrootdir: /home/classic/dev/sqlalchemy, inifile: setup.cfg\r\nplugins: forked-1.0.2, xdist-1.28.0\r\n[gw0] linux Python 3.8.0 cwd: /home/classic/dev/sqlalchemy\r\ngw0 C / gw1 IINFO:sqlalchemy.testing.provision:CREATE database test_f496eb95e23c, URI oracle+cx_oracle://scott:***@oracle1120/xe\r\n[gw1] linux Python 3.8.0 cwd: /home/classic/dev/sqlalchemy\r\ngw0 C / gw1 CINFO:sqlalchemy.testing.provision:CREATE database test_be18618e9468, URI oracle+cx_oracle://scott:***@oracle1120/xe\r\n[gw0] Python 3.8.0b1 (default, Jun  7 2019, 15:55:32)  -- [GCC 9.1.1 20190503 (Red Hat 9.1.1-1)]\r\n[gw1] Python 3.8.0b1 (default, Jun  7 2019, 15:55:32)  -- [GCC 9.1.1 20190503 (Red Hat 9.1.1-1)]\r\ngw0 ok / gw1 ok[gw0] node down: Not properly terminated\r\nINFO:sqlalchemy.testing.provision:DROP database test_f496eb95e23c, URI oracle+cx_oracle://scott:***@oracle1120/xe\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_f496eb95e23c\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_f496eb95e23c_ts1\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_f496eb95e23c_ts2\r\nReplacing crashed worker gw0\r\n[gw2] linux Python 3.8.0 cwd: /home/classic/dev/sqlalchemy\r\ngw2 C / gw1 okINFO:sqlalchemy.testing.provision:CREATE database test_c3f708c5c59e, URI oracle+cx_oracle://scott:***@oracle1120/xe\r\n[gw1] node down: Not properly terminated\r\nINFO:sqlalchemy.testing.provision:DROP database test_be18618e9468, URI oracle+cx_oracle://scott:***@oracle1120/xe\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_be18618e9468\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_be18618e9468_ts1\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_be18618e9468_ts2\r\nReplacing crashed worker gw1\r\n[gw3] linux Python 3.8.0 cwd: /home/classic/dev/sqlalchemy\r\ngw2 C / gw3 CINFO:sqlalchemy.testing.provision:CREATE database test_9e335fc76d44, URI oracle+cx_oracle://scott:***@oracle1120/xe\r\n[gw2] Python 3.8.0b1 (default, Jun  7 2019, 15:55:32)  -- [GCC 9.1.1 20190503 (Red Hat 9.1.1-1)]\r\n[gw3] Python 3.8.0b1 (default, Jun  7 2019, 15:55:32)  -- [GCC 9.1.1 20190503 (Red Hat 9.1.1-1)]\r\ngw2 ok / gw3 ok[gw2] node down: Not properly terminated\r\nINFO:sqlalchemy.testing.provision:DROP database test_c3f708c5c59e, URI oracle+cx_oracle://scott:***@oracle1120/xe\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_c3f708c5c59e\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_c3f708c5c59e_ts1\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_c3f708c5c59e_ts2\r\nReplacing crashed worker gw2\r\n[gw4] linux Python 3.8.0 cwd: /home/classic/dev/sqlalchemy\r\ngw4 C / gw3 okINFO:sqlalchemy.testing.provision:CREATE database test_08949a11871d, URI oracle+cx_oracle://scott:***@oracle1120/xe\r\n[gw3] node down: Not properly terminated\r\nINFO:sqlalchemy.testing.provision:DROP database test_9e335fc76d44, URI oracle+cx_oracle://scott:***@oracle1120/xe\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_9e335fc76d44\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_9e335fc76d44_ts1\r\nINFO:sqlalchemy.testing.provision:Reaped db: test_9e335fc76d44_ts2\r\nReplacing crashed worker gw3\r\n[gw5] linux Python 3.8.0 cwd: /home/classic/dev/sqlalchemy\r\ngw4 C / gw5 CINFO:sqlalchemy.testing.provision:CREATE database test_1c4eb3e04e3a, URI oracle+cx_oracle://scott:***@oracle1120/xe\r\n[gw4] Python 3.8.0b1 (default, Jun  7 2019, 15:55:32)  -- [GCC 9.1.1 20190503 (Red Hat 9.1.1-1)]\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/435", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/435/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/435/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/435", "id": 453185398, "node_id": "MDU6SXNzdWU0NTMxODUzOTg=", "number": 435, "title": "RuntimeError when maximum workers are reached", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239944, "node_id": "MDU6TGFiZWwyNTUyMzk5NDQ=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-06T18:50:09Z", "updated_at": "2019-06-07T13:15:29Z", "closed_at": "2019-06-07T13:15:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```python\r\nimport os\r\nimport pytest\r\n\r\n@pytest.mark.parametrize('i', range(10))\r\ndef test_crash(i):\r\n    os._exit(1)\r\n```\r\n\r\n```\r\n\u03bb pytest .tmp\\test_crash.py  -n2 --max-worker-restart=4\r\n===================================================================================== test session starts ====================================================================================== platform win32 -- Python 3.7.3, pytest-4.6.2, py-1.8.0, pluggy-0.12.0\r\nrootdir: C:\\Users\\bruno.ESSS.CO\\pytest-xdist, inifile: tox.ini\r\nplugins: forked-1.0.2, xdist-1.28.1.dev1+g9fcf8fa\r\ngw0 [10] / gw1 [10]\r\n[gw1] node down: Not properly terminated\r\nfReplacing crashed worker gw1\r\ngw0 [10] / gw2 C   [gw0] node down: Not properly terminated\r\nfReplacing crashed worker gw0\r\ngw3 C / gw2 [10][gw2] node down: Not properly terminated\r\nfReplacing crashed worker gw2\r\ngw3 [10] / gw4 C[gw3] node down: Not properly terminated\r\nfReplacing crashed worker gw3\r\ngw5 C / gw4 [10][gw4] node down: Not properly terminated\r\nfMaximum crashed workers reached: 4\r\ngw5 [10] / gw4 [10][gw5] node down: Not properly terminated\r\nfMaximum crashed workers reached: 4\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"c:\\users\\bruno.esss.co\\pytest-xdist\\.env37\\lib\\site-packages\\_pytest\\main.py\", line 206, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"c:\\users\\bruno.esss.co\\pytest-xdist\\.env37\\lib\\site-packages\\_pytest\\main.py\", line 250, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"c:\\users\\bruno.esss.co\\pytest-xdist\\.env37\\lib\\site-packages\\pluggy\\hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"c:\\users\\bruno.esss.co\\pytest-xdist\\.env37\\lib\\site-packages\\pluggy\\manager.py\", line 87, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"c:\\users\\bruno.esss.co\\pytest-xdist\\.env37\\lib\\site-packages\\pluggy\\manager.py\", line 81, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"c:\\users\\bruno.esss.co\\pytest-xdist\\.env37\\lib\\site-packages\\pluggy\\callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"c:\\users\\bruno.esss.co\\pytest-xdist\\.env37\\lib\\site-packages\\pluggy\\callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"c:\\users\\bruno.esss.co\\pytest-xdist\\.env37\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"c:\\users\\bruno.esss.co\\pytest-xdist\\xdist\\dsession.py\", line 118, in pytest_runtestloop\r\nINTERNALERROR>     self.loop_once()\r\nINTERNALERROR>   File \"c:\\users\\bruno.esss.co\\pytest-xdist\\xdist\\dsession.py\", line 130, in loop_once\r\nINTERNALERROR>     raise RuntimeError(\"Unexpectedly no active workers available\")\r\nINTERNALERROR> RuntimeError: Unexpectedly no active workers available\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/434", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/434/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/434/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/434", "id": 452282834, "node_id": "MDU6SXNzdWU0NTIyODI4MzQ=", "number": 434, "title": "How to combine the allure report\uff1f", "user": {"login": "LuanShiZhiJian", "id": 41558924, "node_id": "MDQ6VXNlcjQxNTU4OTI0", "avatar_url": "https://avatars1.githubusercontent.com/u/41558924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LuanShiZhiJian", "html_url": "https://github.com/LuanShiZhiJian", "followers_url": "https://api.github.com/users/LuanShiZhiJian/followers", "following_url": "https://api.github.com/users/LuanShiZhiJian/following{/other_user}", "gists_url": "https://api.github.com/users/LuanShiZhiJian/gists{/gist_id}", "starred_url": "https://api.github.com/users/LuanShiZhiJian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LuanShiZhiJian/subscriptions", "organizations_url": "https://api.github.com/users/LuanShiZhiJian/orgs", "repos_url": "https://api.github.com/users/LuanShiZhiJian/repos", "events_url": "https://api.github.com/users/LuanShiZhiJian/events{/privacy}", "received_events_url": "https://api.github.com/users/LuanShiZhiJian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-05T02:05:32Z", "updated_at": "2019-06-06T11:41:54Z", "closed_at": "2019-06-06T11:41:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to use distributed Allure to implement distributed testing. \r\n\r\nWhat is the correct way to do this?Or is there a plan available?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/433", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/433/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/433/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/433", "id": 443856678, "node_id": "MDU6SXNzdWU0NDM4NTY2Nzg=", "number": 433, "title": "--numprocesses  in pytest.ini", "user": {"login": "Yobmod", "id": 22235459, "node_id": "MDQ6VXNlcjIyMjM1NDU5", "avatar_url": "https://avatars3.githubusercontent.com/u/22235459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yobmod", "html_url": "https://github.com/Yobmod", "followers_url": "https://api.github.com/users/Yobmod/followers", "following_url": "https://api.github.com/users/Yobmod/following{/other_user}", "gists_url": "https://api.github.com/users/Yobmod/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yobmod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yobmod/subscriptions", "organizations_url": "https://api.github.com/users/Yobmod/orgs", "repos_url": "https://api.github.com/users/Yobmod/repos", "events_url": "https://api.github.com/users/Yobmod/events{/privacy}", "received_events_url": "https://api.github.com/users/Yobmod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-14T11:17:44Z", "updated_at": "2019-05-16T19:26:21Z", "closed_at": "2019-05-14T11:25:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running pytest with pytest-xdist and pytest-cov. It all works fine from the command line with `pytest --cov=\".\" --numprocesses=4` flags.\r\n\r\nBut if I put the numprocceses flag in my pytest.ini (`addopts = --numprocesses=4`), then coverage is not repoerted, with error: `The following slaves failed to return coverage data, ensure that pytest-cov is installed on these slaves. `\r\n\r\n-n4 flag works both on command line and in the pytest.ini.\r\n\r\nIs --numprocesses=x supposed to work in the .ini file?  I'm sure it used to. I didn't know if this was an xdist or cov issue, so reported here first.\r\n\r\nEdit: ah, it works if I don't have any comments in my .ini, so I guesss not a xdist issue!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/425", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/425/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/425/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/425", "id": 425533130, "node_id": "MDU6SXNzdWU0MjU1MzMxMzA=", "number": 425, "title": "Pytest hook pytest_runtest_makereport is not getting called ", "user": {"login": "mangeshrane", "id": 16554881, "node_id": "MDQ6VXNlcjE2NTU0ODgx", "avatar_url": "https://avatars3.githubusercontent.com/u/16554881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mangeshrane", "html_url": "https://github.com/mangeshrane", "followers_url": "https://api.github.com/users/mangeshrane/followers", "following_url": "https://api.github.com/users/mangeshrane/following{/other_user}", "gists_url": "https://api.github.com/users/mangeshrane/gists{/gist_id}", "starred_url": "https://api.github.com/users/mangeshrane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mangeshrane/subscriptions", "organizations_url": "https://api.github.com/users/mangeshrane/orgs", "repos_url": "https://api.github.com/users/mangeshrane/repos", "events_url": "https://api.github.com/users/mangeshrane/events{/privacy}", "received_events_url": "https://api.github.com/users/mangeshrane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-26T16:49:02Z", "updated_at": "2019-03-27T09:35:45Z", "closed_at": "2019-03-27T09:35:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I following code\r\n\r\n`\r\n\r\n@pytest.hookimpl(hookwrapper=True)\r\ndef pytest_runtest_makereport(item, call):\r\n    pytest_html = item.config.pluginmanager.getplugin('html')\r\n    outcome = yield\r\n    report = outcome.get_result()\r\n    print(\"inside\")\r\n    extra = getattr(report, 'extra', [])\r\n    if report.when == 'call' or report.when == \"setup\":\r\n        try:\r\n            _driver = item.cls.driver\r\n        except Exception:\r\n            print(\"Not able to capture screeshot not UI test\")\r\n        # if not exception\r\n        else:\r\n            if report.when == \"call\":\r\n                extra.append(pytest_html.extras.url(_driver.current_url))\r\n            if report.when == 'call' or report.when == \"setup\":\r\n                xfail = hasattr(report, 'wasxfail')\r\n                # Go to screenshot only when UI tests\r\n                if (report.skipped and xfail) or (report.failed and not xfail):\r\n                    url = _driver.current_url\r\n                    extra.append(pytest_html.extras.url(url))\r\n                    screenshot = _driver.get_screenshot_as_base64()\r\n                    print(\"attaching screenshot\")\r\n                    extra.append(pytest_html.extras.image(screenshot, ''))\r\n                    if CONFIG.get(\"reporting\", \"html\") == \"allure\":\r\n                        allure.attach('screenshot', _driver.get_screenshot_as_png(), type=AttachmentType.PNG)\r\n    report.extra = extra\r\n\r\n`\r\n\r\nand I'm running the test via code like\r\n\r\npytest.main([\"-n 3\", ... other options], plugins=[\"core.reporter.pytest_plugin\"])\r\n\r\nwhen I'm running test without xdist then pytest_runtest_makereport is getting called \r\n\r\nIs there any workaround for this ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/423", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/423/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/423/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/423", "id": 424440772, "node_id": "MDU6SXNzdWU0MjQ0NDA3NzI=", "number": 423, "title": "less verbose worker startup?", "user": {"login": "ThomasWaldmann", "id": 356103, "node_id": "MDQ6VXNlcjM1NjEwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/356103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThomasWaldmann", "html_url": "https://github.com/ThomasWaldmann", "followers_url": "https://api.github.com/users/ThomasWaldmann/followers", "following_url": "https://api.github.com/users/ThomasWaldmann/following{/other_user}", "gists_url": "https://api.github.com/users/ThomasWaldmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThomasWaldmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThomasWaldmann/subscriptions", "organizations_url": "https://api.github.com/users/ThomasWaldmann/orgs", "repos_url": "https://api.github.com/users/ThomasWaldmann/repos", "events_url": "https://api.github.com/users/ThomasWaldmann/events{/privacy}", "received_events_url": "https://api.github.com/users/ThomasWaldmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-23T00:10:51Z", "updated_at": "2020-07-09T23:00:19Z", "closed_at": "2019-03-26T15:56:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to have the worker startup a bit less verbose and better fit into screen width?\r\n```\r\n$ pytest -n 32 ....\r\ngw0 I / gw1 I / gw2 I / gw3 I / gw4 I / gw5 I / gw6 I / gw7 I / gw8 I / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 I / gw2 I / gw3 I / gw4 I / gw5 I / gw6 I / gw7 I / gw8 I / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 I / gw3 I / gw4 I / gw5 I / gw6 I / gw7 I / gw8 I / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 I / gw4 I / gw5 I / gw6 I / gw7 I / gw8 I / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 I / gw5 I / gw6 I / gw7 I / gw8 I / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 I / gw6 I / gw7 I / gw8 I / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 I / gw7 I / gw8 I / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 I / gw8 I / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 I / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 I / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 I / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 I / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 I / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 C / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 C / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 C / gw2gw0 C / gw1 C / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 C / gw2gw0 C / gw1 ok / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 C / gwgw0 ok / gw1 ok / gw2 C / gw3 C / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 C / ggw0 ok / gw1 ok / gw2 C / gw3 ok / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 C / gw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 C / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 C /gw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 C / gw6 C / gw7 C / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 C gw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 C / gw6 C / gw7 ok / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 Cgw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 C / gw7 ok / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28 gw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 C / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw28gw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 C / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw2gw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 C / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gwgw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 C / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / ggw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 C / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C / gw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 C / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C /gw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 C / gw15 C / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 C gw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 C / gw15 ok / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 Cgw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 C / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27 gw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 C / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw27gw0 ok / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C / gw2gw0 [1375] / gw1 ok / gw2 ok / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26 C /gw0 [1375] / gw1 ok / gw2 [1375] / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw26gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 C / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C / gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 ok / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25 C /gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 ok / gw5 ok / gw6 ok / gw7 ok / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw25gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 ok / gw5 ok / gw6 ok / gw7 [1375] / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 C / gw20 C / gw21 C / gw22 C / gw23 C / gw24 C / gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 ok / gw5 ok / gw6 ok / gw7 [1375] / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 C / gw20 ok / gw21 C / gw22 C / gw23 C / gw24 C /gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 ok / gw6 ok / gw7 [1375] / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 C / gw20 ok / gw21 C / gw22 C / gw23 C / gw24gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 ok / gw6 ok / gw7 [1375] / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 C / gw22 C / gw23 C / gw2gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 ok / gw7 [1375] / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 C / gw22 C / gw23 C /gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 ok / gw7 [1375] / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 C / gw22 ok / gw23 C gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 ok / gw7 [1375] / gw8 ok / gw9 ok / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 ok / gw22 ok / gw23 Cgw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 ok / gw7 [1375] / gw8 ok / gw9 [1375] / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 ok / gw22 ok / gwgw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 ok / gw7 [1375] / gw8 ok / gw9 [1375] / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 ok / gw22 ok / gwgw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 ok / gw9 [1375] / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 ok / gw22 ok gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 ok / gw11 ok / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 ok / gw22gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 ok / gw11 [1375] / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 ok / gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 ok / gw11 [1375] / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 ok / gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 ok / gw11 [1375] / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 ok / gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 ok / gw11 [1375] / gw12 ok / gw13 ok / gw14 ok / gw15 ok / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 ok / gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 ok / gw11 [1375] / gw12 ok / gw13 ok / gw14 ok / gw15 [1375] / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gw21 ogw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 ok / gw11 [1375] / gw12 [1375] / gw13 ok / gw14 ok / gw15 [1375] / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok / gwgw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 ok / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 ok / gw15 [1375] / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 ok / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 ok / gw15 [1375] / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20 ok gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 ok / gw15 [1375] / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 ok / gw15 [1375] / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw20gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 ok / gw17 ok / gw18 ok / gw19 ok / gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 ok / gw18 ok / gw19 ogw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 ok / gw18 ok / gw19 ogw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 ok / gw18 ok / gw19 ogw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 ok / gwgw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 ok / gw19 [1375] / gw20 ok / gw21 ok / gw22 ok / gw23 ok / gw24 ok / gw25 ok / gw26 ok / gw27 ok / gw28 ok / gw29 ok / gw30 ok / gw31 gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 ok / gw21 ok / gw22 ok / gw23 ok / gw24 ok / gw25 ok / gw26 ok / gw27 ok / gw28 ok / gw29 ok / gw30 ok / ggw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 ok / gw21 ok / gw22 ok / gw23 ok / gw24 [1375] / gw25 ok / gw26 ok / gw27 ok / gw28 ok / gw29 ok / gw30 okgw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 [1375] / gw21 ok / gw22 ok / gw23 ok / gw24 [1375] / gw25 ok / gw26 ok / gw27 ok / gw28 ok / gw29 ok / gw3gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 [1375] / gw21 ok / gw22 ok / gw23 [1375] / gw24 [1375] / gw25 ok / gw26 ok / gw27 ok / gw28 ok / gw29 ok /gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 [1375] / gw21 ok / gw22 [1375] / gw23 [1375] / gw24 [1375] / gw25 ok / gw26 ok / gw27 ok / gw28 ok / gw29 gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 [1375] / gw21 [1375] / gw22 [1375] / gw23 [1375] / gw24 [1375] / gw25 ok / gw26 ok / gw27 ok / gw28 ok / ggw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 [1375] / gw21 [1375] / gw22 [1375] / gw23 [1375] / gw24 [1375] / gw25 [1375] / gw26 ok / gw27 ok / gw28 okgw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 [1375] / gw21 [1375] / gw22 [1375] / gw23 [1375] / gw24 [1375] / gw25 [1375] / gw26 ok / gw27 ok / gw28 okgw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 [1375] / gw21 [1375] / gw22 [1375] / gw23 [1375] / gw24 [1375] / gw25 [1375] / gw26 [1375] / gw27 ok / gw2gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 [1375] / gw21 [1375] / gw22 [1375] / gw23 [1375] / gw24 [1375] / gw25 [1375] / gw26 [1375] / gw27 ok / gw2gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 [1375] / gw21 [1375] / gw22 [1375] / gw23 [1375] / gw24 [1375] / gw25 [1375] / gw26 [1375] / gw27 [1375] /gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 [1375] / gw21 [1375] / gw22 [1375] / gw23 [1375] / gw24 [1375] / gw25 [1375] / gw26 [1375] / gw27 [1375] /gw0 [1375] / gw1 [1375] / gw2 [1375] / gw3 [1375] / gw4 [1375] / gw5 [1375] / gw6 [1375] / gw7 [1375] / gw8 [1375] / gw9 [1375] / gw10 [1375] / gw11 [1375] / gw12 [1375] / gw13 [1375] / gw14 [1375] / gw15 [1375] / gw16 [1375] / gw17 [1375] / gw18 [1375] / gw19 [1375] / gw20 [1375] / gw21 [1375] / gw22 [1375] / gw23 [1375] / gw24 [1375] / gw25 [1375] / gw26 [1375] / gw27 [1375] / gw28 [1375] / gw29 [1375] / gw30 [1375] / gw31 [1375]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/414", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/414/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/414/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/414", "id": 409037051, "node_id": "MDU6SXNzdWU0MDkwMzcwNTE=", "number": 414, "title": "xdist v1.26 breaks PyInstaller's test suite for Python 2.7", "user": {"login": "htgoebel", "id": 784161, "node_id": "MDQ6VXNlcjc4NDE2MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/784161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/htgoebel", "html_url": "https://github.com/htgoebel", "followers_url": "https://api.github.com/users/htgoebel/followers", "following_url": "https://api.github.com/users/htgoebel/following{/other_user}", "gists_url": "https://api.github.com/users/htgoebel/gists{/gist_id}", "starred_url": "https://api.github.com/users/htgoebel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/htgoebel/subscriptions", "organizations_url": "https://api.github.com/users/htgoebel/orgs", "repos_url": "https://api.github.com/users/htgoebel/repos", "events_url": "https://api.github.com/users/htgoebel/events{/privacy}", "received_events_url": "https://api.github.com/users/htgoebel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-02-12T00:02:25Z", "updated_at": "2019-10-22T11:34:29Z", "closed_at": "2019-10-22T10:31:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "PyInstaller's test-suite fails with an import error when xdist 1.26 is used, but only on Python 2.7.\r\n\r\nxdist | Python 2.7 | Python 3.x\r\n------|---------------|-----------------\r\n**1.25.0** | [pass](https://travis-ci.org/htgoebel/pyinstaller/jobs/491899379) | [pass](https://travis-ci.org/htgoebel/pyinstaller/jobs/491899380)\r\n**1.26.0** | [fail](https://travis-ci.org/htgoebel/pyinstaller/jobs/491906475) | [pass](https://travis-ci.org/htgoebel/pyinstaller/jobs/491906476)\r\n\r\n```\r\n>   ???\r\nE   ImportError: No module named makespec\r\nPyInstaller/__main__.py:78: ImportError\r\n```\r\n* As you can see, the trace back does not show the source\r\n* [`PyInstaller/__main__.py:78`](https://github.com/htgoebel/pyinstaller/blob/4f8f6240cdcf43dc68ce84f18e700ac5a6cd9049/PyInstaller/__main__.py#L78) reads: `import PyInstaller.building.makespec`.\r\n   - Of course this module exists, otherwise test with other versions would fail, too.\r\n   - Diagnostic output I added shows modules like `PyInstaller.building.PyInstaller`, `PyInstaller.lib.modulegraph.sys`, `PyInstaller.utils.hooks.PyInstaller` and even `PyInstaller.utils.pytest` - none of which exists.\r\n* In PyInstaller's main repo [failure are different](https://travis-ci.org/pyinstaller/pyinstaller/jobs/488184214): Most tests pass, but some fail when trying to import `PyInstaller.hooks`.\r\n\r\n\r\nI thought, this might be related to #397, but setting PYTHONPATH does not solve the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/412", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/412/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/412/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/412", "id": 407126648, "node_id": "MDU6SXNzdWU0MDcxMjY2NDg=", "number": 412, "title": "DumpError during nodemanager.setup_nodes()", "user": {"login": "mitzkia", "id": 2952076, "node_id": "MDQ6VXNlcjI5NTIwNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2952076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzkia", "html_url": "https://github.com/mitzkia", "followers_url": "https://api.github.com/users/mitzkia/followers", "following_url": "https://api.github.com/users/mitzkia/following{/other_user}", "gists_url": "https://api.github.com/users/mitzkia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzkia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzkia/subscriptions", "organizations_url": "https://api.github.com/users/mitzkia/orgs", "repos_url": "https://api.github.com/users/mitzkia/repos", "events_url": "https://api.github.com/users/mitzkia/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzkia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-06T08:31:58Z", "updated_at": "2019-02-06T15:10:52Z", "closed_at": "2019-02-06T15:10:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "While I am staring pytest with remote run (--tx) I have got the following trace:\r\n```\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 1383, in _save\r\nINTERNALERROR>     dispatch = self._dispatch[tp]\r\nINTERNALERROR> KeyError: <class 'pathlib2.PosixPath'>\r\nINTERNALERROR> \r\nINTERNALERROR> During handling of the above exception, another exception occurred:\r\nINTERNALERROR> \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/_pytest/main.py\", line 201, in wrap_session\r\nINTERNALERROR>     config.hook.pytest_sessionstart(session=session)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py\", line 258, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/xdist/dsession.py\", line 81, in pytest_sessionstart\r\nINTERNALERROR>     nodes = self.nodemanager.setup_nodes(putevent=self.queue.put)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/xdist/workermanage.py\", line 68, in setup_nodes\r\nINTERNALERROR>     nodes.append(self.setup_node(spec, putevent))\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/xdist/workermanage.py\", line 77, in setup_node\r\nINTERNALERROR>     node.setup()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/xdist/workermanage.py\", line 250, in setup\r\nINTERNALERROR>     self.channel.send((self.workerinput, args, option_dict, change_sys_path))\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 717, in send\r\nINTERNALERROR>     self.gateway._send(Message.CHANNEL_DATA, self.id, dumps_internal(item))\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 1354, in dumps_internal\r\nINTERNALERROR>     return _Serializer().save(obj)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 1372, in save\r\nINTERNALERROR>     self._save(obj)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 1390, in _save\r\nINTERNALERROR>     dispatch(self, obj)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 1475, in save_tuple\r\nINTERNALERROR>     self._save(item)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 1390, in _save\r\nINTERNALERROR>     dispatch(self, obj)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 1471, in save_dict\r\nINTERNALERROR>     self._write_setitem(key, value)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 1465, in _write_setitem\r\nINTERNALERROR>     self._save(value)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.6/dist-packages/execnet/gateway_base.py\", line 1388, in _save\r\nINTERNALERROR>     raise DumpError(\"can't serialize %s\" % (tp,))\r\nINTERNALERROR> execnet.gateway_base.DumpError: can't serialize <class 'pathlib2.PosixPath'>\r\n```\r\n\r\nIt happens because one of my fixtures returns with a pathlib2.PosixPath object in my conftest.py.\r\nI can workaround it if I cast my object to string. \r\nMy question: could xdist handle this case?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/409", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/409/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/409/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/409", "id": 404827231, "node_id": "MDU6SXNzdWU0MDQ4MjcyMzE=", "number": 409, "title": "running a certain test suite in a certain thread", "user": {"login": "SergeyChu", "id": 47184820, "node_id": "MDQ6VXNlcjQ3MTg0ODIw", "avatar_url": "https://avatars0.githubusercontent.com/u/47184820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SergeyChu", "html_url": "https://github.com/SergeyChu", "followers_url": "https://api.github.com/users/SergeyChu/followers", "following_url": "https://api.github.com/users/SergeyChu/following{/other_user}", "gists_url": "https://api.github.com/users/SergeyChu/gists{/gist_id}", "starred_url": "https://api.github.com/users/SergeyChu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SergeyChu/subscriptions", "organizations_url": "https://api.github.com/users/SergeyChu/orgs", "repos_url": "https://api.github.com/users/SergeyChu/repos", "events_url": "https://api.github.com/users/SergeyChu/events{/privacy}", "received_events_url": "https://api.github.com/users/SergeyChu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-30T15:33:47Z", "updated_at": "2019-01-31T19:14:36Z", "closed_at": "2019-01-31T19:14:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not an issue, rather as an improvement or question if it's already exist.\r\n\r\nThe requirement is to run all the tests belonging to a suite in a certain thread. For example having suite1, suite2, suite3 and so on. And I'd like to make all the tests belonging to the suite1 executed in one thread(thread1), whereas tests belonging to the suite2 in another thread(thread2) and tests from suite3 in one more separate thread(thread3).\r\n\r\nCurrently there are only 2 options: - --dist=loadscope(by module) - --dist=loadfile(by filename)\r\n\r\nAnd it would be really nice to have kind of a --dist=loaddirectory, to grab all the tests in a certain directory\r\ne.g for each dir in a dir given as a path to all the test suits, or, in all the recursively met directories.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/408", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/408/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/408/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/408", "id": 404613623, "node_id": "MDU6SXNzdWU0MDQ2MTM2MjM=", "number": 408, "title": "Can not retrieve \"assertion\" reports from remote run (using --tx ...)", "user": {"login": "mitzkia", "id": 2952076, "node_id": "MDQ6VXNlcjI5NTIwNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2952076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzkia", "html_url": "https://github.com/mitzkia", "followers_url": "https://api.github.com/users/mitzkia/followers", "following_url": "https://api.github.com/users/mitzkia/following{/other_user}", "gists_url": "https://api.github.com/users/mitzkia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzkia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzkia/subscriptions", "organizations_url": "https://api.github.com/users/mitzkia/orgs", "repos_url": "https://api.github.com/users/mitzkia/repos", "events_url": "https://api.github.com/users/mitzkia/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzkia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-01-30T05:53:41Z", "updated_at": "2019-02-01T16:12:59Z", "closed_at": "2019-02-01T16:12:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a code which can retrieve assertion reports:\r\n- this works correctly when I run my tests locally (without --tx ...)\r\n- self.__testcase_context is the request object\r\n- the self.__logger_factory is my own logger factory (not native pytest)\r\n```\r\nterminalreporter = self.__testcase_context.config.pluginmanager.getplugin(\"terminalreporter\")\r\nif terminalreporter and terminalreporter.stats.get(\"failed\"):\r\n    for failed_report in terminalreporter.stats.get(\"failed\"):\r\n        if failed_report.location[2] == self.__testcase_context.node.name:\r\n            self.__logger = self.__logger_factory.create_logger(\r\n                \"Teardown\", use_console_handler=False, use_file_handler=True\r\n            )\r\n            self.__logger.error(str(failed_report.longrepr))\r\n```\r\n\r\nThe above code is not work in case of remote run (with --tx ...), maybe there is no terminalreporter object? But I can see the needed AssertionError in my console, which I wanted to query remotely.\r\nIs there a way to get assertion reports on remote run?\r\n\r\nThanks for your answer", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/406", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/406/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/406/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/406", "id": 403954809, "node_id": "MDU6SXNzdWU0MDM5NTQ4MDk=", "number": 406, "title": "Mysterious logwarning warnings only happen with xdist under Pytest 4.1", "user": {"login": "Zac-HD", "id": 12229877, "node_id": "MDQ6VXNlcjEyMjI5ODc3", "avatar_url": "https://avatars1.githubusercontent.com/u/12229877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zac-HD", "html_url": "https://github.com/Zac-HD", "followers_url": "https://api.github.com/users/Zac-HD/followers", "following_url": "https://api.github.com/users/Zac-HD/following{/other_user}", "gists_url": "https://api.github.com/users/Zac-HD/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zac-HD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zac-HD/subscriptions", "organizations_url": "https://api.github.com/users/Zac-HD/orgs", "repos_url": "https://api.github.com/users/Zac-HD/repos", "events_url": "https://api.github.com/users/Zac-HD/events{/privacy}", "received_events_url": "https://api.github.com/users/Zac-HD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-01-28T18:46:56Z", "updated_at": "2019-01-28T20:58:20Z", "closed_at": "2019-01-28T20:52:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[Here's a CI log](https://circleci.com/gh/HypothesisWorks/hypothesis/6219) from HypothesisWorks/hypothesis#1782.  To reproduce this problem, clone Hypothesis (and for posterity, check out the current master d1b0df5).\r\n\r\n    pip install -r requirements/test.txt\r\n    pip install -e hypothesis-python/\r\n    pip install pytest==4.1\r\n    pytest hypothesis-python/tests/cover/test_testdecorators.py       # quick subset, passes\r\n    pytest hypothesis-python/tests/cover/test_testdecorators.py -n 2  # fails thanks to -Werror\r\n\r\nSo *somewhere*, our dependencies must be using a `pytest_logwarning`, right?  Except that I can't find such a location in any of them, and we're not using any pytest plugins aside from xdist itself!\r\n\r\nDo you have any idea what's happening here, or how I might find out?  It's been blocking our move to Pytest 4.1 for weeks now :disappointed: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/405", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/405/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/405/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/405", "id": 403056609, "node_id": "MDU6SXNzdWU0MDMwNTY2MDk=", "number": 405, "title": "Identify each --tx worker with an alias name", "user": {"login": "mitzkia", "id": 2952076, "node_id": "MDQ6VXNlcjI5NTIwNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2952076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzkia", "html_url": "https://github.com/mitzkia", "followers_url": "https://api.github.com/users/mitzkia/followers", "following_url": "https://api.github.com/users/mitzkia/following{/other_user}", "gists_url": "https://api.github.com/users/mitzkia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzkia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzkia/subscriptions", "organizations_url": "https://api.github.com/users/mitzkia/orgs", "repos_url": "https://api.github.com/users/mitzkia/repos", "events_url": "https://api.github.com/users/mitzkia/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzkia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-25T08:41:44Z", "updated_at": "2019-01-25T08:49:47Z", "closed_at": "2019-01-25T08:49:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "My goal is to identify \"--tx workers\" with an alias name. \r\nI know there is already a worker_id variable for this, but is is not suitable for me. As I saw it is a sequentially growing id: gw0, gw1, which is not identifies precisely my \"--tx\" workers.\r\n\r\nMy use-case is:\r\n1, With using such a pytest.ini file\r\n```\r\n[pytest]\r\naddopts =   --tx ssh=\"172.17.0.2 -l root\"\r\n            ; debian-latest\r\n            --tx ssh=\"172.17.0.3 -l root\" \r\n            ; ubuntu-latest\r\n```\r\n2, Had a pytest result:\r\n```\r\n...\r\ntest_a.py::test_a \r\n[gw1] [ 50%] FAILED test_a.py::test_a \r\ntest_b.py::test_b \r\n[gw1] [100%] PASSED test_b.py::test_b \r\n[gw0] [100%] FAILED test_a.py::test_a \r\ntest_b.py::test_b \r\n[gw0] [100%] PASSED test_b.py::test_b \r\n...\r\n```\r\n\r\n\r\nI would expect to get such a result:\r\n```\r\ntest_a.py::test_a \r\n[debian-latest] [ 50%] FAILED test_a.py::test_a \r\ntest_b.py::test_b \r\n[debian-latest] [100%] PASSED test_b.py::test_b \r\n[ubuntu-latest] [100%] FAILED test_a.py::test_a \r\ntest_b.py::test_b \r\n[ubuntu-latest] [100%] PASSED test_b.py::test_b \r\n```\r\nIt would absolutely ok if I could specify my custom worker name in execution time, like:\r\n```\r\n[pytest]\r\naddopts =   --tx ssh=\"172.17.0.2 -l root\" --tx-name=\"debian-latest\"\r\n            ; debian-latest\r\n            --tx ssh=\"172.17.0.3 -l root\" --tx-name=\"ubuntu-latest\"\r\n            ; ubuntu-latest\r\n```\r\n\r\nIs there a native way to achieve my goal? If there is not, is such a feature is relevant for pytest-xdist?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/399", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/399/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/399/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/399", "id": 397536130, "node_id": "MDU6SXNzdWUzOTc1MzYxMzA=", "number": 399, "title": "Is --ignore flag not compatible with xdist?", "user": {"login": "xNinjaKittyx", "id": 1697670, "node_id": "MDQ6VXNlcjE2OTc2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1697670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xNinjaKittyx", "html_url": "https://github.com/xNinjaKittyx", "followers_url": "https://api.github.com/users/xNinjaKittyx/followers", "following_url": "https://api.github.com/users/xNinjaKittyx/following{/other_user}", "gists_url": "https://api.github.com/users/xNinjaKittyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/xNinjaKittyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xNinjaKittyx/subscriptions", "organizations_url": "https://api.github.com/users/xNinjaKittyx/orgs", "repos_url": "https://api.github.com/users/xNinjaKittyx/repos", "events_url": "https://api.github.com/users/xNinjaKittyx/events{/privacy}", "received_events_url": "https://api.github.com/users/xNinjaKittyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-09T19:58:33Z", "updated_at": "2019-01-17T19:05:50Z", "closed_at": "2019-01-17T19:05:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have one test in particular in my test suite that I would like to ignore specifically when running xdist because it shuts down the server that I'm testing against (which will cause all the other parallel tests to fail)\r\n\r\nI added `--ignore=path/to/folder/*` from pytest's parameters to skip those tests, but it seems like xdist is still running the tests in that folder.\r\n\r\nI've tested it without using xdist, and it works fine.\r\n\r\nWith xdist, I'm not doing anything fancy, just using the `-n` parameter\r\n\r\nPython 3.6.3\r\npytest 3.6.4\r\nxdist 1.25.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/395", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/395/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/395/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/395", "id": 392894629, "node_id": "MDU6SXNzdWUzOTI4OTQ2Mjk=", "number": 395, "title": "pytest_runtest_logreport() check for item_index ruins custom test threading logic inside workers", "user": {"login": "sosadchuk", "id": 45584158, "node_id": "MDQ6VXNlcjQ1NTg0MTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/45584158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sosadchuk", "html_url": "https://github.com/sosadchuk", "followers_url": "https://api.github.com/users/sosadchuk/followers", "following_url": "https://api.github.com/users/sosadchuk/following{/other_user}", "gists_url": "https://api.github.com/users/sosadchuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/sosadchuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sosadchuk/subscriptions", "organizations_url": "https://api.github.com/users/sosadchuk/orgs", "repos_url": "https://api.github.com/users/sosadchuk/repos", "events_url": "https://api.github.com/users/sosadchuk/events{/privacy}", "received_events_url": "https://api.github.com/users/sosadchuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-12-20T05:21:38Z", "updated_at": "2019-01-16T12:45:31Z", "closed_at": "2019-01-16T12:45:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to implement ordering and parallel execution of tests inside worker with threading.\r\nFor example I have a list of tests to execute defined like:\r\n```\r\ntest02\r\ntest02, test01\r\ntest02\r\n```\r\nI use pytest_generate_tests() hook to order tests and add '_parallel' postfix for simultaneous tests.\r\n\r\nThen I use pytest_runtest_protocol() hook to start parallel tests:\r\n```\r\n    def pytest_runtest_protocol(self, item, nextitem):\r\n        if item in self._queue:\r\n            index = self._items.index(item)\r\n            return None        \r\n\r\n        if not item.name.endswith('_parallel]'):\r\n            if len(self._queue) > 0:\r\n                threads = []\r\n                for test in self._queue:\r\n                    thread = MyThread(test)\r\n                    thread.start()\r\n                    threads.append(thread)\r\n                [t.join() for t in threads]\r\n                self._queue = []\r\n            return None\r\n        else:\r\n            self._queue.append(item)\r\n            return True\r\n\r\n\r\nclass MyThread(threading.Thread):\r\n    def __init__(self, test):\r\n        super().__init__()\r\n        self.test = test\r\n\r\n    def run(self):\r\n        self.test.ihook.pytest_runtest_protocol(item=self.test, nextitem=None)\r\n```\r\n\r\nThe issue is in pytest-xdist pytest_runtest_logreport() hook in 'remote' module, which performs check:\r\n```\r\nassert self.session.items[self.item_index].nodeid == report.nodeid\r\n```\r\n\r\nIf I comment this out - everything works perfect.\r\n\r\nThe question is: is this check really needed to prevent some tests overlay, or is it possible to create a way to pass item_index to WorkerInteractor object, which works inside execnet?\r\n\r\nExecuting pytest with:\r\n```\r\n-n 2 --dist=loadscope --tx 2*popen//python=python -m 'not serial'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/394", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/394/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/394/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/394", "id": 392002451, "node_id": "MDU6SXNzdWUzOTIwMDI0NTE=", "number": 394, "title": "xdist uninstall has leftover ", "user": {"login": "jnoortheen", "id": 6702219, "node_id": "MDQ6VXNlcjY3MDIyMTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6702219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnoortheen", "html_url": "https://github.com/jnoortheen", "followers_url": "https://api.github.com/users/jnoortheen/followers", "following_url": "https://api.github.com/users/jnoortheen/following{/other_user}", "gists_url": "https://api.github.com/users/jnoortheen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnoortheen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnoortheen/subscriptions", "organizations_url": "https://api.github.com/users/jnoortheen/orgs", "repos_url": "https://api.github.com/users/jnoortheen/repos", "events_url": "https://api.github.com/users/jnoortheen/events{/privacy}", "received_events_url": "https://api.github.com/users/jnoortheen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 666693369, "node_id": "MDU6TGFiZWw2NjY2OTMzNjk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/needs%20information", "name": "needs information", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-18T05:28:57Z", "updated_at": "2018-12-18T07:05:14Z", "closed_at": "2018-12-18T07:05:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "After uninstalling `xdist` by `pip`it still has leftovers and been able to import from the Python shell like `import xdist` .\r\n\r\nThe issue is discussed [here](https://github.com/Frozenball/pytest-sugar/issues/124#issuecomment-376626718) \r\n\r\nEnv: Python 3.7 and Pip 18.1 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/391", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/391/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/391/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/391", "id": 390328129, "node_id": "MDU6SXNzdWUzOTAzMjgxMjk=", "number": 391, "title": "Document on README how to access master sys.argv", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-12T17:21:11Z", "updated_at": "2019-01-15T05:16:41Z", "closed_at": "2019-01-15T05:16:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Follow up from: https://github.com/pytest-dev/pytest-xdist/pull/388#issuecomment-446196303", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/387", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/387/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/387/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/387", "id": 388073832, "node_id": "MDU6SXNzdWUzODgwNzM4MzI=", "number": 387, "title": "sort out the ExceptionIno refactoring from pytest features", "user": {"login": "RonnyPfannschmidt", "id": 156838, "node_id": "MDQ6VXNlcjE1NjgzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RonnyPfannschmidt", "html_url": "https://github.com/RonnyPfannschmidt", "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers", "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}", "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}", "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions", "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs", "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos", "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}", "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-06T06:26:12Z", "updated_at": "2018-12-11T16:23:22Z", "closed_at": "2018-12-11T16:23:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "on the pytest features branch i refactored the `ExceptionInfo` class\r\nthis api change needs to be handled in xdist\r\n\r\nxref #386", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/382", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/382/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/382/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/382", "id": 386301861, "node_id": "MDU6SXNzdWUzODYzMDE4NjE=", "number": 382, "title": "Add ability to specify test order", "user": {"login": "HarrisonGregg", "id": 3527935, "node_id": "MDQ6VXNlcjM1Mjc5MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3527935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HarrisonGregg", "html_url": "https://github.com/HarrisonGregg", "followers_url": "https://api.github.com/users/HarrisonGregg/followers", "following_url": "https://api.github.com/users/HarrisonGregg/following{/other_user}", "gists_url": "https://api.github.com/users/HarrisonGregg/gists{/gist_id}", "starred_url": "https://api.github.com/users/HarrisonGregg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HarrisonGregg/subscriptions", "organizations_url": "https://api.github.com/users/HarrisonGregg/orgs", "repos_url": "https://api.github.com/users/HarrisonGregg/repos", "events_url": "https://api.github.com/users/HarrisonGregg/events{/privacy}", "received_events_url": "https://api.github.com/users/HarrisonGregg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-30T18:34:29Z", "updated_at": "2018-12-03T18:28:02Z", "closed_at": "2018-12-03T18:26:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have a a test suite that has a few hundred E2E tests that run against productions backends. The tests take anywhere from less than a second to 10+ minutes. They're generally CPU light and spend most of their time waiting for the backend. We run them with 12-30 workers (depending on the platform).\r\n\r\nI've inspected the scheduling of the tests, and found that most of the workers finish in around 9-10 minutes, but then workers that got stuck with longer running tests keep going for 25+ minutes. Using the historical data on the run time of our tests, we'd like to schedule the slowest tests to run first, and then the workers who finish those first would pick up the shorter tests. Is there currently any way we could influence the schedule like this? Ideally, we'd be able to provide a list of the priority order of all of the tests, and they would be allocated to workers in that order, but it would also be an improvement to just specify the initial set up tests that get scheduled in the first round.\r\n\r\nAny suggestions would be appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/376", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/376/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/376/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/376", "id": 380035644, "node_id": "MDU6SXNzdWUzODAwMzU2NDQ=", "number": 376, "title": "Running with pytest-xdist changes sys.path", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-13T02:51:53Z", "updated_at": "2019-01-11T23:15:22Z", "closed_at": "2019-01-09T20:40:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "A simple test to show sys.path (and then fail, to always see the output):\r\n```\r\n$ cat test_sys_path.py\r\nimport pprint, sys\r\n\r\ndef test_sys_path():\r\n    pprint.pprint(sys.path)\r\n    1/0\r\n$ pip freeze\r\napipkg==1.5\r\natomicwrites==1.2.1\r\nattrs==18.2.0\r\nexecnet==1.5.0\r\nmore-itertools==4.3.0\r\npluggy==0.8.0\r\npy==1.7.0\r\npytest==3.10.1\r\npytest-forked==0.2\r\npytest-xdist==1.24.1\r\nsix==1.11.0\r\n$ pytest -n 0 -q\r\nF                                                                                                                                                        [100%]\r\n=========================================================================== FAILURES ===========================================================================\r\n________________________________________________________________________ test_sys_path _________________________________________________________________________\r\n\r\n    def test_sys_path():\r\n        pprint.pprint(sys.path)\r\n>       1/0\r\nE       ZeroDivisionError: division by zero\r\n\r\ntest_sys_path.py:5: ZeroDivisionError\r\n--------------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------------\r\n['/private/var/folders/j2/gr3cj3jn63s5q8g3bjvw57hm0000gp/T/pytest_sys_path',\r\n '/usr/local/virtualenvs/tmp-9cf2e53a94c913c/bin',\r\n '/usr/local/virtualenvs/tmp-9cf2e53a94c913c/lib/python36.zip',\r\n '/usr/local/virtualenvs/tmp-9cf2e53a94c913c/lib/python3.6',\r\n '/usr/local/virtualenvs/tmp-9cf2e53a94c913c/lib/python3.6/lib-dynload',\r\n '/usr/local/py/cpython-v3.6.7/lib/python3.6',\r\n '/usr/local/virtualenvs/tmp-9cf2e53a94c913c/lib/python3.6/site-packages']\r\n1 failed in 0.05 seconds\r\n$ pytest -n 1 -q\r\ngw0 [1]\r\nscheduling tests via LoadScheduling\r\nF                                                                                                                                                        [100%]\r\n=========================================================================== FAILURES ===========================================================================\r\n________________________________________________________________________ test_sys_path _________________________________________________________________________\r\n[gw0] darwin -- Python 3.6.7 /usr/local/virtualenvs/tmp-9cf2e53a94c913c/bin/python3.6\r\n\r\n    def test_sys_path():\r\n        pprint.pprint(sys.path)\r\n>       1/0\r\nE       ZeroDivisionError: division by zero\r\n\r\ntest_sys_path.py:5: ZeroDivisionError\r\n--------------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------------\r\n['/private/var/folders/j2/gr3cj3jn63s5q8g3bjvw57hm0000gp/T/pytest_sys_path',\r\n '',\r\n '/usr/local/virtualenvs/tmp-9cf2e53a94c913c/lib/python36.zip',\r\n '/usr/local/virtualenvs/tmp-9cf2e53a94c913c/lib/python3.6',\r\n '/usr/local/virtualenvs/tmp-9cf2e53a94c913c/lib/python3.6/lib-dynload',\r\n '/usr/local/py/cpython-v3.6.7/lib/python3.6',\r\n '/usr/local/virtualenvs/tmp-9cf2e53a94c913c/lib/python3.6/site-packages']\r\n1 failed in 0.54 seconds\r\n```\r\nThe second entry in sys.path is different: without xdist, it's the bin directory of the virtualenv.  With xdist, it's an empty string (current directory).  \r\n\r\nxdist shouldn't change this, it means my tests behave differently under the two scenarios.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/373", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/373/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/373/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/373", "id": 379585998, "node_id": "MDU6SXNzdWUzNzk1ODU5OTg=", "number": 373, "title": "Don't show worker nodes when pytest is run quiet", "user": {"login": "ethanhs", "id": 9504279, "node_id": "MDQ6VXNlcjk1MDQyNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9504279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ethanhs", "html_url": "https://github.com/ethanhs", "followers_url": "https://api.github.com/users/ethanhs/followers", "following_url": "https://api.github.com/users/ethanhs/following{/other_user}", "gists_url": "https://api.github.com/users/ethanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ethanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ethanhs/subscriptions", "organizations_url": "https://api.github.com/users/ethanhs/orgs", "repos_url": "https://api.github.com/users/ethanhs/repos", "events_url": "https://api.github.com/users/ethanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/ethanhs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 649076668, "node_id": "MDU6TGFiZWw2NDkwNzY2Njg=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/easy", "name": "easy", "color": "c2e0c6", "default": false, "description": null}, {"id": 255239946, "node_id": "MDU6TGFiZWwyNTUyMzk5NDY=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 255239947, "node_id": "MDU6TGFiZWwyNTUyMzk5NDc=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-12T01:06:15Z", "updated_at": "2018-12-11T20:08:43Z", "closed_at": "2018-12-11T20:08:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a manycore machine (32 threads), and when I use pytest-xdist, the output of the worker node status is a bit bothersome due to showing 32 node status messages multiple times.\r\n\r\nThis is the output of running pytest-xdist with a subset of the mypy test suite (a full screen CMD window on a 4k monitor):\r\n![image](https://user-images.githubusercontent.com/9504279/48320945-924a4080-e5d3-11e8-9deb-b5588784a7f2.png)\r\n\r\nThe setup messages take up about 90% of the window.\r\n\r\nIt would be nice if this could be hidden when pytest is run in quiet mode, as it makes the time to print out the test setup info non-trivial (in addition it fills up the screen making scroll back more annoying).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/370", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/370/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/370/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/370", "id": 379434025, "node_id": "MDU6SXNzdWUzNzk0MzQwMjU=", "number": 370, "title": "Skipped modules are not reported", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-11-10T16:03:23Z", "updated_at": "2018-11-21T19:47:39Z", "closed_at": "2018-11-21T19:47:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Modules skipped completely are not reported correctly under xdist:\r\n\r\n```python\r\nimport pytest\r\npytest.skip('some reason', allow_module_level=True)\r\n```\r\n\r\n```\r\n\u03bb pytest .tmp\\test_foo.py -n0\r\n======================== test session starts ========================\r\nplatform win32 -- Python 3.6.3, pytest-3.8.1, py-1.5.2, pluggy-0.7.1\r\nrootdir: x:\\pytest-xdist, inifile: tox.ini\r\nplugins: forked-0.2, xdist-1.24.1.dev1+gadc3852.d20181029\r\ncollected 0 items / 1 skipped\r\n\r\n====================== short test summary info ======================\r\nSKIP [1] x:\\pytest-xdist\\.tmp\\test_foo.py:4: some reason\r\n===================== 1 skipped in 0.08 seconds =====================\r\n\r\n\u03bb pytest .tmp\\test_foo.py -n1\r\n======================== test session starts ========================\r\nplatform win32 -- Python 3.6.3, pytest-3.8.1, py-1.5.2, pluggy-0.7.1\r\nrootdir: x:\\pytest-xdist, inifile: tox.ini\r\nplugins: forked-0.2, xdist-1.24.1.dev1+gadc3852.d20181029\r\ngw0 [0]\r\nscheduling tests via LoadScheduling\r\n\r\n=================== no tests ran in 0.53 seconds ====================\r\n```\r\n\r\nThis was caused by #332 and it we didn't note the regression because the test in place was skipped for pytest > 3.0 because 3.0 did not allow module-level skips anymore, but this was reintroduced in later versions with the `allow_module_level=True` flag.\r\n\r\nPR incoming.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/367", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/367/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/367/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/367", "id": 379136196, "node_id": "MDU6SXNzdWUzNzkxMzYxOTY=", "number": 367, "title": "TypeError: '>' not supported between instances of 'NoneType' and 'float'", "user": {"login": "radeklat", "id": 7273178, "node_id": "MDQ6VXNlcjcyNzMxNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7273178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radeklat", "html_url": "https://github.com/radeklat", "followers_url": "https://api.github.com/users/radeklat/followers", "following_url": "https://api.github.com/users/radeklat/following{/other_user}", "gists_url": "https://api.github.com/users/radeklat/gists{/gist_id}", "starred_url": "https://api.github.com/users/radeklat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radeklat/subscriptions", "organizations_url": "https://api.github.com/users/radeklat/orgs", "repos_url": "https://api.github.com/users/radeklat/repos", "events_url": "https://api.github.com/users/radeklat/events{/privacy}", "received_events_url": "https://api.github.com/users/radeklat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-09T12:03:52Z", "updated_at": "2018-11-09T12:06:05Z", "closed_at": "2018-11-09T12:06:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I consistently observe a crash when running pytest with xdist. I tried different versions of xdist (from 1.24.0 down to 1.20.1) and all have the same issue. Is it possibly a configuration issue? The command is:\r\n\r\n`pytest -n auto tests/unit`\r\n\r\nAnd the crash (with base path obscured) below:\r\n\r\n```platform linux -- Python 3.6.6, pytest-3.10.0, py-1.7.0, pluggy-0.8.0\r\nrootdir: <BASEPATH>, inifile:\r\nplugins: xdist-1.24.0, forked-0.2, cov-2.6.0\r\ngw0 [3351] / gw1 [3351] / gw2 [3351] / gw3 [3351]\r\nscheduling tests via LoadScheduling\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/_pytest/main.py\", line 185, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/_pytest/main.py\", line 225, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/hooks.py\", line 284, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/xdist/dsession.py\", line 115, in pytest_runtestloop\r\nINTERNALERROR>     self.loop_once()\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/xdist/dsession.py\", line 138, in loop_once\r\nINTERNALERROR>     call(**kwargs)\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/xdist/dsession.py\", line 235, in worker_collectionfinish\r\nINTERNALERROR>     self.sched.schedule()\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/xdist/scheduler/load.py\", line 230, in schedule\r\nINTERNALERROR>     if not self._check_nodes_have_same_collection():\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/xdist/scheduler/load.py\", line 284, in _check_nodes_have_same_collection\r\nINTERNALERROR>     self.config.hook.pytest_collectreport(report=rep)\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/hooks.py\", line 284, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/_pytest/terminal.py\", line 491, in pytest_collectreport\r\nINTERNALERROR>     self.report_collect()\r\nINTERNALERROR>   File \"<BASEPATH>/.venv/lib/python3.6/site-packages/_pytest/terminal.py\", line 500, in report_collect\r\nINTERNALERROR>     if self._collect_report_last_write > t - 0.5:\r\nINTERNALERROR> TypeError: '>' not supported between instances of 'NoneType' and 'float'```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/361", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/361/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/361/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/361", "id": 373186768, "node_id": "MDU6SXNzdWUzNzMxODY3Njg=", "number": 361, "title": "All workers are blocked when 'sleep' is running in any worker", "user": {"login": "Vadim-Kovrizhkin", "id": 12123266, "node_id": "MDQ6VXNlcjEyMTIzMjY2", "avatar_url": "https://avatars1.githubusercontent.com/u/12123266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vadim-Kovrizhkin", "html_url": "https://github.com/Vadim-Kovrizhkin", "followers_url": "https://api.github.com/users/Vadim-Kovrizhkin/followers", "following_url": "https://api.github.com/users/Vadim-Kovrizhkin/following{/other_user}", "gists_url": "https://api.github.com/users/Vadim-Kovrizhkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vadim-Kovrizhkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vadim-Kovrizhkin/subscriptions", "organizations_url": "https://api.github.com/users/Vadim-Kovrizhkin/orgs", "repos_url": "https://api.github.com/users/Vadim-Kovrizhkin/repos", "events_url": "https://api.github.com/users/Vadim-Kovrizhkin/events{/privacy}", "received_events_url": "https://api.github.com/users/Vadim-Kovrizhkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-10-23T20:27:36Z", "updated_at": "2018-10-24T16:26:43Z", "closed_at": "2018-10-24T16:26:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "If `sleep` is invoked in test method in one worker, then all other workers will also wait until that sleep finishes. \r\n\r\nHere are just examples of tests:\r\n```\r\n    def test_1():\r\n        # test is running in gw1 worker\r\n        print(\"Start sleep 5 sec in test 1\")\r\n        sleep(5)\r\n        print(\"Test 1 finished\")\r\n\r\n    def test_2():\r\n        # test is running in gw2 worker\r\n        print(\"Test 2 finished\")\r\n```\r\n\r\nAfter running tests with `pytest -s -n2`  we can see, that `test_2` will not start until `sleep(5)` is finished in `test_1` test. So worker `gw2` will be blocked by worker `gw1`\r\n\r\nIs this really expected behavior?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/360", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/360/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/360/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/360", "id": 373102458, "node_id": "MDU6SXNzdWUzNzMxMDI0NTg=", "number": 360, "title": "Capturing exceptions from stdout/stderr when raised from hook in child node", "user": {"login": "westhomas", "id": 953369, "node_id": "MDQ6VXNlcjk1MzM2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/953369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/westhomas", "html_url": "https://github.com/westhomas", "followers_url": "https://api.github.com/users/westhomas/followers", "following_url": "https://api.github.com/users/westhomas/following{/other_user}", "gists_url": "https://api.github.com/users/westhomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/westhomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/westhomas/subscriptions", "organizations_url": "https://api.github.com/users/westhomas/orgs", "repos_url": "https://api.github.com/users/westhomas/repos", "events_url": "https://api.github.com/users/westhomas/events{/privacy}", "received_events_url": "https://api.github.com/users/westhomas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-23T17:01:28Z", "updated_at": "2018-10-24T15:15:37Z", "closed_at": "2018-10-24T15:15:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've got an internal tool that orchestrates a pytest execution using `pytest.main()`. I use this instead of using `Popen` because it allows me to pass an instantiated plugin reference to the `plugins` param, which is handy.\r\n\r\nI'm facing a problem though with capturing exceptions when they occur in a hook raised from the child node.\r\n\r\nHere's an example of what's not working:\r\n\r\n```python\r\n# test_xdist_exception.py\r\n# see full source at https://github.com/westhomas/pytest-testapp/blob/master/test_xdist_exception.py\r\n\r\n@pytest.hookimpl(tryfirst=True, hookwrapper=True)\r\ndef pytest_runtest_makereport(item, call):\r\n    raise Exception('this exception is hidden by xdist in parallel mode')\r\n\r\n# Tests\r\ndef test_foo():\r\n    assert True\r\n\r\ndef test_foo2():\r\n    assert True\r\n\r\n\r\n# Doesn't work\r\ndef main():\r\n\r\n    msg = \"\"\r\n\r\n    with io.StringIO() as error_buff, \\\r\n            io.StringIO() as out_buff, \\\r\n            redirect_stderr(error_buff), \\\r\n            redirect_stdout(out_buff):\r\n\r\n        returncode = pytest.main(['test_xdist_exception.py', '--html={}'.format('testing.html'), '-d', '--tx', '{}*popen//python=python3'.format(2), ])\r\n\r\n        if returncode > 1 and returncode != 5:\r\n            msg = \"CRITICAL FAILURE RUNNING PYTEST: return code: {}\\n\".format(returncode)\r\n\r\n        error = error_buff.getvalue()\r\n        log_standard = out_buff.getvalue()\r\n\r\n    print(\"CAPTURED ERROR\")\r\n    print(\"===============================\")\r\n    print(error)\r\n    print(\"CAPTURED LOGS\")\r\n    print(\"===============================\")\r\n    print(log_standard)\r\n    print(msg)\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nWhat happens when running xdist is the master exception is thrown [1]  when the child crashes but the actual exception raised from `pytest_runtest_makereport` is hidden from my attempt to capture stdout and stderr. It's *there* in the terminal output, but I can't seem to capture it using the `redirect_std*` methods.  When running without xdist, the exception is captured in stdout as desired.\r\n\r\nI need a way to capture this exception (either in stdout or stderr) so I can log it properly. Preferably without switching over to Popen for executing a pytest session.\r\n\r\nAny ideas?\r\n\r\n[1]\r\n```\r\n# xdist crash exception\r\n$ python3 test_xdist_exception.py\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/main.py\", line 181, in wrap_session\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/main.py\", line 181, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/main.py\", line 221, in _main\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/main.py\", line 221, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"<remote exec>\", line 68, in pytest_runtestloop\r\nINTERNALERROR>   File \"<remote exec>\", line 82, in run_one_test\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/runner.py\", line 71, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/runner.py\", line 80, in runtestprotocol\r\nINTERNALERROR>     rep = call_and_report(item, \"setup\", log)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/runner.py\", line 168, in call_and_report\r\nINTERNALERROR>     report = hook.pytest_runtest_makereport(item=item, call=call)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 174, in _multicall\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     gen = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/wes/work/pytest-testapp/test_xdist_exception.py\", line 19, in pytest_runtest_makereport\r\nINTERNALERROR>     raise Exception('this exception is hidden by xdist in parallel mode')\r\nINTERNALERROR> Exception: this exception is hidden by xdist in parallel mode\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"<remote exec>\", line 68, in pytest_runtestloop\r\nINTERNALERROR>   File \"<remote exec>\", line 82, in run_one_test\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/runner.py\", line 71, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/runner.py\", line 80, in runtestprotocol\r\nINTERNALERROR>     rep = call_and_report(item, \"setup\", log)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/runner.py\", line 168, in call_and_report\r\nINTERNALERROR>     report = hook.pytest_runtest_makereport(item=item, call=call)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 174, in _multicall\r\nINTERNALERROR>     gen = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/wes/work/pytest-testapp/test_xdist_exception.py\", line 19, in pytest_runtest_makereport\r\nINTERNALERROR>     raise Exception('this exception is hidden by xdist in parallel mode')\r\nINTERNALERROR> Exception: this exception is hidden by xdist in parallel mode\r\nCAPTURED ERROR\r\n===============================\r\n\r\nCAPTURED LOGS\r\n===============================\r\n============================================================================== test session starts ===============================================================================\r\nplatform darwin -- Python 3.6.2, pytest-3.9.1, py-1.5.3, pluggy-0.7.1\r\nrootdir: /Users/wes/work/pytest-testapp, inifile:\r\nplugins: xdist-1.23.2, timeout-1.3.2, rerunfailures-4.2, metadata-1.7.0, html-1.19.0, forked-0.2\r\ngw0 I / gw1 I\r\ngw0 [2] / gw1 [2]\r\n\r\nscheduling tests via LoadScheduling\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/main.py\", line 181, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/_pytest/main.py\", line 221, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/xdist/dsession.py\", line 115, in pytest_runtestloop\r\nINTERNALERROR>     self.loop_once()\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/xdist/dsession.py\", line 138, in loop_once\r\nINTERNALERROR>     call(**kwargs)\r\nINTERNALERROR>   File \"/Users/wes/.virtualenvs/decisio/lib/python3.6/site-packages/xdist/dsession.py\", line 180, in worker_workerfinished\r\nINTERNALERROR>     assert not crashitem, (crashitem, node)\r\nINTERNALERROR> AssertionError: ('test_xdist_exception.py::test_foo', <WorkerController gw0>)\r\nINTERNALERROR> assert not 'test_xdist_exception.py::test_foo'\r\n\r\n========================================================================== no tests ran in 0.56 seconds ==========================================================================\r\n\r\nCRITICAL FAILURE RUNNING PYTEST: return code: 3\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/358", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/358/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/358/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/358", "id": 372180747, "node_id": "MDU6SXNzdWUzNzIxODA3NDc=", "number": 358, "title": "Access the CLI parameters when running with pytest xdist", "user": {"login": "david-fliguer-ws", "id": 35069943, "node_id": "MDQ6VXNlcjM1MDY5OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/35069943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-fliguer-ws", "html_url": "https://github.com/david-fliguer-ws", "followers_url": "https://api.github.com/users/david-fliguer-ws/followers", "following_url": "https://api.github.com/users/david-fliguer-ws/following{/other_user}", "gists_url": "https://api.github.com/users/david-fliguer-ws/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-fliguer-ws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-fliguer-ws/subscriptions", "organizations_url": "https://api.github.com/users/david-fliguer-ws/orgs", "repos_url": "https://api.github.com/users/david-fliguer-ws/repos", "events_url": "https://api.github.com/users/david-fliguer-ws/events{/privacy}", "received_events_url": "https://api.github.com/users/david-fliguer-ws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-20T06:49:12Z", "updated_at": "2018-12-12T17:21:57Z", "closed_at": "2018-12-12T17:21:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have the following script called test_cli.py\r\n\r\n```python\r\nimport sys\r\ndef test_one():\r\n    print(sys.argv[1])\r\ndef test_two():\r\n    print(sys.argv[1])\r\n```\r\n    \r\nWhen I run it like this\r\n\r\n```\r\npytest -s\r\n```\r\n\r\nI can see the output -s (Which is fine because it is the second parameter of the CLI) but when I run it with pytest xdist as \r\n\r\n```\r\npytest -s -n auto\r\n```\r\n\r\nI get the following output\r\n\r\n```\r\n================================== FAILURES ===================================\r\n__________________________________ test_one ___________________________________\r\n[gw0] win32 -- Python 3.6.4 c:\\python36-32\\python.exe\r\n\r\n    def test_one():\r\n>       print(sys.argv[1])\r\nE       IndexError: list index out of range\r\n\r\ntest_cli.py:3: IndexError\r\n__________________________________ test_two ___________________________________\r\n[gw1] win32 -- Python 3.6.4 c:\\python36-32\\python.exe\r\n\r\n    def test_two():\r\n>       print(sys.argv[1])\r\nE       IndexError: list index out of range\r\n\r\ntest_cli.py:5: IndexError\r\n========================== 2 failed in 3.49 seconds ===========================\r\n```\r\n\r\nHow can I access the CLI parameters when running with pytest-xdist ? \r\nI need to use one of the parameters of the CLI to control the behaviour of one of my fixtures that is shared between tests and processes..\r\n\r\nThanks,\r\n\r\nDavid\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/355", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/355/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/355/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/355", "id": 370951582, "node_id": "MDU6SXNzdWUzNzA5NTE1ODI=", "number": 355, "title": "altering test queue at runtime", "user": {"login": "mulawamichal", "id": 44225214, "node_id": "MDQ6VXNlcjQ0MjI1MjE0", "avatar_url": "https://avatars2.githubusercontent.com/u/44225214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mulawamichal", "html_url": "https://github.com/mulawamichal", "followers_url": "https://api.github.com/users/mulawamichal/followers", "following_url": "https://api.github.com/users/mulawamichal/following{/other_user}", "gists_url": "https://api.github.com/users/mulawamichal/gists{/gist_id}", "starred_url": "https://api.github.com/users/mulawamichal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mulawamichal/subscriptions", "organizations_url": "https://api.github.com/users/mulawamichal/orgs", "repos_url": "https://api.github.com/users/mulawamichal/repos", "events_url": "https://api.github.com/users/mulawamichal/events{/privacy}", "received_events_url": "https://api.github.com/users/mulawamichal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-17T08:17:52Z", "updated_at": "2018-10-18T14:38:07Z", "closed_at": "2018-10-18T14:38:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\n\r\nIs there a way to dynamically add some tests to the test queue (at the end) when using xdist ? I sometimes need to rerun my test, but not right after if tails, but rather at the end. I tried something like this:\r\n\r\n    request.session.items.append(request.node)\r\n\r\nbut it only works when xdist is disabled. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/354", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/354/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/354/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/354", "id": 370454315, "node_id": "MDU6SXNzdWUzNzA0NTQzMTU=", "number": 354, "title": "How to see output of tests when running with pytest-xdist ? (-s flag)", "user": {"login": "david-fliguer-ws", "id": 35069943, "node_id": "MDQ6VXNlcjM1MDY5OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/35069943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-fliguer-ws", "html_url": "https://github.com/david-fliguer-ws", "followers_url": "https://api.github.com/users/david-fliguer-ws/followers", "following_url": "https://api.github.com/users/david-fliguer-ws/following{/other_user}", "gists_url": "https://api.github.com/users/david-fliguer-ws/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-fliguer-ws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-fliguer-ws/subscriptions", "organizations_url": "https://api.github.com/users/david-fliguer-ws/orgs", "repos_url": "https://api.github.com/users/david-fliguer-ws/repos", "events_url": "https://api.github.com/users/david-fliguer-ws/events{/privacy}", "received_events_url": "https://api.github.com/users/david-fliguer-ws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-10-16T06:13:53Z", "updated_at": "2019-08-03T22:51:42Z", "closed_at": "2019-01-24T22:53:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I noticed that when running pytest -n auto -s then despite I am passing -s there is no output.\r\n\r\nI read that a possible workaround is to redirect on the code the standard error to the standard output (Or something like that) is there any other option, something more clean ?\r\n\r\nThanks and great job with pytest-xdist !!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/352", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/352/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/352/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/352", "id": 366311603, "node_id": "MDU6SXNzdWUzNjYzMTE2MDM=", "number": 352, "title": "Determine the number of workers", "user": {"login": "decaz", "id": 31096, "node_id": "MDQ6VXNlcjMxMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/31096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decaz", "html_url": "https://github.com/decaz", "followers_url": "https://api.github.com/users/decaz/followers", "following_url": "https://api.github.com/users/decaz/following{/other_user}", "gists_url": "https://api.github.com/users/decaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/decaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decaz/subscriptions", "organizations_url": "https://api.github.com/users/decaz/orgs", "repos_url": "https://api.github.com/users/decaz/repos", "events_url": "https://api.github.com/users/decaz/events{/privacy}", "received_events_url": "https://api.github.com/users/decaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-03T12:18:29Z", "updated_at": "2018-10-03T12:47:44Z", "closed_at": "2018-10-03T12:47:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to determine the number of workers within tests? As I know there is only `worker_id` variable and there is no something like `worker_count` variable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/349", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/349/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/349/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/349", "id": 365139026, "node_id": "MDU6SXNzdWUzNjUxMzkwMjY=", "number": 349, "title": "Internalerror  KeyError: <class '_io.BufferedReader'>", "user": {"login": "pv", "id": 35046, "node_id": "MDQ6VXNlcjM1MDQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/35046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pv", "html_url": "https://github.com/pv", "followers_url": "https://api.github.com/users/pv/followers", "following_url": "https://api.github.com/users/pv/following{/other_user}", "gists_url": "https://api.github.com/users/pv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pv/subscriptions", "organizations_url": "https://api.github.com/users/pv/orgs", "repos_url": "https://api.github.com/users/pv/repos", "events_url": "https://api.github.com/users/pv/events{/privacy}", "received_events_url": "https://api.github.com/users/pv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239944, "node_id": "MDU6TGFiZWwyNTUyMzk5NDQ=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 665481296, "node_id": "MDU6TGFiZWw2NjU0ODEyOTY=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/regression", "name": "regression", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-29T14:55:17Z", "updated_at": "2018-11-09T16:18:00Z", "closed_at": "2018-11-09T16:18:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure what's exactly going on but pytest-xdist started emitting INTERNALERRORs and failing in version 1.23.1 (and 1.23.2). pytest-xdist-1.23.0 does not emit these.\r\n\r\n**EDIT**: minimal repro:\r\n```\r\n$ cat test_foo.py\r\ndef test_foo():\r\n    open('/dev/null', 'rb')\r\n$ python3.6 -mpytest test_foo.py -W once -n2\r\n```\r\n\r\nTo reproduce:\r\n```\r\n$ python3.6 -mvenv tmp\r\n$ ./tmp/bin/python3.6 -mpip install pytest pytest-xdist six\r\n$ git clone https://github.com/airspeed-velocity/asv.git\r\n$ cd asv\r\n$ git checkout 6f729bb9808116c1ebaa77c6684a4c8120926051\r\n$ ../tmp/bin/python3.6 -mpytest test/test_dev.py -n2\r\n===================================== test session starts =====================================\r\nplatform linux -- Python 3.6.6, pytest-3.8.1, py-1.6.0, pluggy-0.7.1\r\nrootdir: /home/pauli/tmp/asv, inifile: setup.cfg\r\nplugins: xdist-1.23.2, forked-0.2\r\ngw0 [6] / gw1 [6]\r\nscheduling tests via LoadScheduling\r\n.INTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1383, in _save\r\nINTERNALERROR>     dispatch = self._dispatch[tp]\r\nINTERNALERROR> KeyError: <class '_io.BufferedReader'>\r\nINTERNALERROR> \r\nINTERNALERROR> During handling of the above exception, another exception occurred:\r\nINTERNALERROR> \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/_pytest/main.py\", line 178, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/_pytest/main.py\", line 215, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"<remote exec>\", line 65, in pytest_runtestloop\r\nINTERNALERROR>   File \"<remote exec>\", line 82, in run_one_test\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/callers.py\", line 196, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/_pytest/warnings.py\", line 137, in pytest_runtest_protocol\r\nINTERNALERROR>     yield\r\nINTERNALERROR>   File \"/usr/lib64/python3.6/contextlib.py\", line 88, in __exit__\r\nINTERNALERROR>     next(self.gen)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/_pytest/warnings.py\", line 96, in catch_warnings_for_item\r\nINTERNALERROR>     kwargs=dict(warning_message=warning_message, when=when, item=item)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/hooks.py\", line 280, in call_historic\r\nINTERNALERROR>     res = self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"<remote exec>\", line 135, in pytest_warning_captured\r\nINTERNALERROR>   File \"<remote exec>\", line 29, in sendevent\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 717, in send\r\nINTERNALERROR>     self.gateway._send(Message.CHANNEL_DATA, self.id, dumps_internal(item))\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1354, in dumps_internal\r\nINTERNALERROR>     return _Serializer().save(obj)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1372, in save\r\nINTERNALERROR>     self._save(obj)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1390, in _save\r\nINTERNALERROR>     dispatch(self, obj)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1475, in save_tuple\r\nINTERNALERROR>     self._save(item)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1390, in _save\r\nINTERNALERROR>     dispatch(self, obj)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1471, in save_dict\r\nINTERNALERROR>     self._write_setitem(key, value)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1465, in _write_setitem\r\nINTERNALERROR>     self._save(value)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1390, in _save\r\nINTERNALERROR>     dispatch(self, obj)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1471, in save_dict\r\nINTERNALERROR>     self._write_setitem(key, value)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1465, in _write_setitem\r\nINTERNALERROR>     self._save(value)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/execnet/gateway_base.py\", line 1388, in _save\r\nINTERNALERROR>     raise DumpError(\"can't serialize %s\" % (tp,))\r\nINTERNALERROR> execnet.gateway_base.DumpError: can't serialize <class '_io.BufferedReader'>\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/_pytest/main.py\", line 178, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/_pytest/main.py\", line 215, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/xdist/dsession.py\", line 115, in pytest_runtestloop\r\nINTERNALERROR>     self.loop_once()\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/xdist/dsession.py\", line 138, in loop_once\r\nINTERNALERROR>     call(**kwargs)\r\nINTERNALERROR>   File \"/home/pauli/tmp/tmp/lib64/python3.6/site-packages/xdist/dsession.py\", line 180, in worker_workerfinished\r\nINTERNALERROR>     assert not crashitem, (crashitem, node)\r\nINTERNALERROR> AssertionError: ('test/test_dev.py::test_dev_with_repo_subdir', <WorkerController gw1>)\r\nINTERNALERROR> assert not 'test/test_dev.py::test_dev_with_repo_subdir'\r\n\r\n================================== 1 passed in 6.23 seconds ===================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/344", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/344/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/344/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/344", "id": 364108831, "node_id": "MDU6SXNzdWUzNjQxMDg4MzE=", "number": 344, "title": "Warning subclass which break subclassing protocol break xdist", "user": {"login": "BrandonHoffman", "id": 2158257, "node_id": "MDQ6VXNlcjIxNTgyNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2158257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrandonHoffman", "html_url": "https://github.com/BrandonHoffman", "followers_url": "https://api.github.com/users/BrandonHoffman/followers", "following_url": "https://api.github.com/users/BrandonHoffman/following{/other_user}", "gists_url": "https://api.github.com/users/BrandonHoffman/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrandonHoffman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrandonHoffman/subscriptions", "organizations_url": "https://api.github.com/users/BrandonHoffman/orgs", "repos_url": "https://api.github.com/users/BrandonHoffman/repos", "events_url": "https://api.github.com/users/BrandonHoffman/events{/privacy}", "received_events_url": "https://api.github.com/users/BrandonHoffman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239944, "node_id": "MDU6TGFiZWwyNTUyMzk5NDQ=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-09-26T16:14:51Z", "updated_at": "2018-10-27T19:46:11Z", "closed_at": "2018-09-28T09:38:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The latest xdist change causes issues whenever a subclass of the Warning class which does not set the args property due to this line: https://github.com/nicoddemus/pytest-xdist/commit/eb81450915528976cea8372bbc4c41cb7e82e9d1#diff-cb98e0a92df3b797a1570a6e1a49b8d6R429\r\n\r\nsee the issue I created for an example: https://github.com/briancurtin/deprecation/issues/36\r\n\r\nI think it would be a good to add some error handling for cases like this in xdist so that they do not cause pytest to fail with an internal error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/341", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/341/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/341/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/341", "id": 363200498, "node_id": "MDU6SXNzdWUzNjMyMDA0OTg=", "number": 341, "title": "Handle pytest_warning_captured in workers", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-09-24T15:33:18Z", "updated_at": "2018-09-25T15:10:11Z", "closed_at": "2018-09-25T15:10:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently the warnings are no longer being transferred from workers to master.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/337", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/337/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/337/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/337", "id": 358711700, "node_id": "MDU6SXNzdWUzNTg3MTE3MDA=", "number": 337, "title": "Option to set max number of workers when using -n auto", "user": {"login": "jgissend10", "id": 589502, "node_id": "MDQ6VXNlcjU4OTUwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/589502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgissend10", "html_url": "https://github.com/jgissend10", "followers_url": "https://api.github.com/users/jgissend10/followers", "following_url": "https://api.github.com/users/jgissend10/following{/other_user}", "gists_url": "https://api.github.com/users/jgissend10/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgissend10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgissend10/subscriptions", "organizations_url": "https://api.github.com/users/jgissend10/orgs", "repos_url": "https://api.github.com/users/jgissend10/repos", "events_url": "https://api.github.com/users/jgissend10/events{/privacy}", "received_events_url": "https://api.github.com/users/jgissend10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-10T17:03:17Z", "updated_at": "2018-10-18T10:54:04Z", "closed_at": "2018-10-18T10:54:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "For CI in kubernetes I have my job configured to use -nauto. My cluster contains workers of different sizes. I was hoping that I could set a max number of workers even when the reported cpu is higher (i.e. 24 max even when cpu report is 48), but cpu of 4 would still be 4 workers with auto.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/331", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/331/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/331/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/331", "id": 350632497, "node_id": "MDU6SXNzdWUzNTA2MzI0OTc=", "number": 331, "title": "How to create individual log files for each worker", "user": {"login": "nbartos", "id": 923926, "node_id": "MDQ6VXNlcjkyMzkyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/923926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbartos", "html_url": "https://github.com/nbartos", "followers_url": "https://api.github.com/users/nbartos/followers", "following_url": "https://api.github.com/users/nbartos/following{/other_user}", "gists_url": "https://api.github.com/users/nbartos/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbartos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbartos/subscriptions", "organizations_url": "https://api.github.com/users/nbartos/orgs", "repos_url": "https://api.github.com/users/nbartos/repos", "events_url": "https://api.github.com/users/nbartos/events{/privacy}", "received_events_url": "https://api.github.com/users/nbartos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-08-14T23:29:09Z", "updated_at": "2020-04-15T08:06:30Z", "closed_at": "2018-08-29T07:11:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to figure out how individual log files can be created for each worker, in the same manor that pytest --log-file does when not using xdist.\r\n\r\nSince the basic pytest --log-file opens with write, not append (see https://github.com/pytest-dev/pytest/issues/3813), there does not seem to be a way of getting a complete log file for a run using xdist with multiple workers.  However, even if it could be opened in append mode, the individual worker IDs would not be present, and having everything mixed together can be more difficult for troubleshooting.\r\n\r\nI'm hoping that there is some way of creating a log file for each worker, but I'm not really sure how to do that, if it's even possible.  I tried setting up a logger in pytest_configure, but worker_id does not seem to be available at that time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/330", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/330/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/330/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/330", "id": 350132441, "node_id": "MDU6SXNzdWUzNTAxMzI0NDE=", "number": 330, "title": "Possible optimization in Worker", "user": {"login": "wfaris", "id": 57158, "node_id": "MDQ6VXNlcjU3MTU4", "avatar_url": "https://avatars2.githubusercontent.com/u/57158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wfaris", "html_url": "https://github.com/wfaris", "followers_url": "https://api.github.com/users/wfaris/followers", "following_url": "https://api.github.com/users/wfaris/following{/other_user}", "gists_url": "https://api.github.com/users/wfaris/gists{/gist_id}", "starred_url": "https://api.github.com/users/wfaris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wfaris/subscriptions", "organizations_url": "https://api.github.com/users/wfaris/orgs", "repos_url": "https://api.github.com/users/wfaris/repos", "events_url": "https://api.github.com/users/wfaris/events{/privacy}", "received_events_url": "https://api.github.com/users/wfaris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239946, "node_id": "MDU6TGFiZWwyNTUyMzk5NDY=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 255239947, "node_id": "MDU6TGFiZWwyNTUyMzk5NDc=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-13T18:00:49Z", "updated_at": "2018-08-23T19:31:10Z", "closed_at": "2018-08-23T19:31:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "In remote.py WorkerInteractor.pytest_collectreport the collectreport event is sent to the master which I believe handles this in dsession.py:worker_collectreport. It appears that this message is only meaningful if rep.failed is true. I am running pytest on a machine with 16 cpus on a very large test suite. The number of collectreport events actually causes the e2e time of running the test to be slower when using 16 cpus compared to using 8. When I pruned the number of collectreport events sent from workers to the master I was able to reduce the collection time from ~120 seconds to ~32 seconds.  Not sure what the priority of this should be but figured I would mention it,\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/323", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/323/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/323/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/323", "id": 346127940, "node_id": "MDU6SXNzdWUzNDYxMjc5NDA=", "number": 323, "title": "rsync before running remote interpreter?", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-31T10:29:08Z", "updated_at": "2018-07-31T16:44:36Z", "closed_at": "2018-07-31T16:44:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've tried using `--tx server//python=.venv/bin/python` to use the same `python` executable as locally, but this failed apparently due to the rsync not being done before the interpreter is run.\r\n\r\nWould it be possible to do the syncing before, or is the interpreter itself used for this?\r\n\r\nAnother minor issue in this regard is that symlinks are synced as-is, but typically `python` is a symlink, and it would be good if symlinks could be resolved (optionally) when syncing (another issue, will create it if it makes sense).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/320", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/320/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/320/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/320", "id": 345284743, "node_id": "MDU6SXNzdWUzNDUyODQ3NDM=", "number": 320, "title": "\"don't parallelise\" decorator?", "user": {"login": "twirrim", "id": 59949, "node_id": "MDQ6VXNlcjU5OTQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/59949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twirrim", "html_url": "https://github.com/twirrim", "followers_url": "https://api.github.com/users/twirrim/followers", "following_url": "https://api.github.com/users/twirrim/following{/other_user}", "gists_url": "https://api.github.com/users/twirrim/gists{/gist_id}", "starred_url": "https://api.github.com/users/twirrim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twirrim/subscriptions", "organizations_url": "https://api.github.com/users/twirrim/orgs", "repos_url": "https://api.github.com/users/twirrim/repos", "events_url": "https://api.github.com/users/twirrim/events{/privacy}", "received_events_url": "https://api.github.com/users/twirrim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-27T16:12:18Z", "updated_at": "2018-07-27T20:27:33Z", "closed_at": "2018-07-27T20:27:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got a test suite full of hundreds of slightly more involved tests that can be completely parallelised... with the exception of maybe a half dozen that need to be the only test running at the time.\r\n\r\nI don't know how practical it is, and I don't see any documentation suggesting this can be done already, but I'd love to be able to decorate those tests with some kind of indication that they shouldn't be parallelised.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/319", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/319/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/319/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/319", "id": 345257200, "node_id": "MDU6SXNzdWUzNDUyNTcyMDA=", "number": 319, "title": "pytest>=3.4 requirement is not being resolved by pip", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-27T14:54:04Z", "updated_at": "2018-07-27T15:13:15Z", "closed_at": "2018-07-27T15:11:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "We require `pytest>=3.0` and `pytest-xdist`. The latest `pytest-xdist` fails for `pytest<3.4`, but pip does not see it as a requirement, and so we get runtime failures for tests on Travis (which comes with pytest 3.3.0 installed).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/316", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/316/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/316/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/316", "id": 344312064, "node_id": "MDU6SXNzdWUzNDQzMTIwNjQ=", "number": 316, "title": "#9 is not fixed on PyPy", "user": {"login": "skirpichev", "id": 2155800, "node_id": "MDQ6VXNlcjIxNTU4MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2155800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skirpichev", "html_url": "https://github.com/skirpichev", "followers_url": "https://api.github.com/users/skirpichev/followers", "following_url": "https://api.github.com/users/skirpichev/following{/other_user}", "gists_url": "https://api.github.com/users/skirpichev/gists{/gist_id}", "starred_url": "https://api.github.com/users/skirpichev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skirpichev/subscriptions", "organizations_url": "https://api.github.com/users/skirpichev/orgs", "repos_url": "https://api.github.com/users/skirpichev/repos", "events_url": "https://api.github.com/users/skirpichev/events{/privacy}", "received_events_url": "https://api.github.com/users/skirpichev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-07-25T06:39:43Z", "updated_at": "2018-07-27T12:02:56Z", "closed_at": "2018-07-27T12:02:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See commit https://github.com/skirpichev/diofant/commit/cfe8a53e29207f6008af235cfc1c5b311e55e6ad,  which return ``-n auto`` and failing CI build: https://travis-ci.org/diofant/diofant/jobs/407725598\r\n\r\nCC @greut ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/310", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/310/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/310/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/310", "id": 343166103, "node_id": "MDU6SXNzdWUzNDMxNjYxMDM=", "number": 310, "title": "Print the each test execution result in single line while parallel execution", "user": {"login": "kunchamlokesh", "id": 10302541, "node_id": "MDQ6VXNlcjEwMzAyNTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/10302541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kunchamlokesh", "html_url": "https://github.com/kunchamlokesh", "followers_url": "https://api.github.com/users/kunchamlokesh/followers", "following_url": "https://api.github.com/users/kunchamlokesh/following{/other_user}", "gists_url": "https://api.github.com/users/kunchamlokesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kunchamlokesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kunchamlokesh/subscriptions", "organizations_url": "https://api.github.com/users/kunchamlokesh/orgs", "repos_url": "https://api.github.com/users/kunchamlokesh/repos", "events_url": "https://api.github.com/users/kunchamlokesh/events{/privacy}", "received_events_url": "https://api.github.com/users/kunchamlokesh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 666693369, "node_id": "MDU6TGFiZWw2NjY2OTMzNjk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/needs%20information", "name": "needs information", "color": "5319e7", "default": false, "description": null}, {"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-20T16:12:18Z", "updated_at": "2018-07-24T09:26:00Z", "closed_at": "2018-07-24T09:26:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe had a requirement to print each test name & its result in a single line in the parallel execution\r\n\r\nCurrent results are displayed as\r\n\r\n```\r\ngw0 I / gw1 I / gw2 I / gw3 I\r\ngw0 [8] / gw1 [8] / gw2 [8] / gw3 [8]\r\n\r\nscheduling tests via LoadScheduling\r\nFE....F\r\n\r\n```\r\nRequired result to be displayed as below\r\n\r\n```\r\ngw0 I / gw1 I / gw2 I / gw3 I\r\ngw0 [8] / gw1 [8] / gw2 [8] / gw3 [8]\r\n\r\nscheduling tests via LoadScheduling\r\n\r\nTest1 Failed\r\nTest2 Error\r\nTest3 Passed\r\nTest4 Passed\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/305", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/305/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/305/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/305", "id": 338731036, "node_id": "MDU6SXNzdWUzMzg3MzEwMzY=", "number": 305, "title": "pytest-xdist uses the wrong exceptioninfo type", "user": {"login": "RonnyPfannschmidt", "id": 156838, "node_id": "MDQ6VXNlcjE1NjgzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RonnyPfannschmidt", "html_url": "https://github.com/RonnyPfannschmidt", "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers", "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}", "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}", "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions", "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs", "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos", "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}", "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-05T21:25:30Z", "updated_at": "2018-07-25T12:07:19Z", "closed_at": "2018-07-25T12:07:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "CC @nicoddemus \r\n\r\ni just discovered that pytest-xdist uses the pylib one instead of the pytest one\r\n\r\nhttps://github.com/pytest-dev/pytest-xdist/blob/master/xdist/workermanage.py#L335", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/304", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/304/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/304/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/304", "id": 338244772, "node_id": "MDU6SXNzdWUzMzgyNDQ3NzI=", "number": 304, "title": "DumpError when running test with -n flag", "user": {"login": "sigiesec", "id": 16757805, "node_id": "MDQ6VXNlcjE2NzU3ODA1", "avatar_url": "https://avatars0.githubusercontent.com/u/16757805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigiesec", "html_url": "https://github.com/sigiesec", "followers_url": "https://api.github.com/users/sigiesec/followers", "following_url": "https://api.github.com/users/sigiesec/following{/other_user}", "gists_url": "https://api.github.com/users/sigiesec/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigiesec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigiesec/subscriptions", "organizations_url": "https://api.github.com/users/sigiesec/orgs", "repos_url": "https://api.github.com/users/sigiesec/repos", "events_url": "https://api.github.com/users/sigiesec/events{/privacy}", "received_events_url": "https://api.github.com/users/sigiesec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-04T11:49:14Z", "updated_at": "2018-10-24T10:46:34Z", "closed_at": "2018-07-04T14:53:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to run my tests with xdist and the -n flag, I get a DumpError:\r\n```\r\n13:33:10 ============================= test session starts =============================\r\n13:33:10 platform win32 -- Python 3.5.4, pytest-3.6.2, py-1.5.3, pluggy-0.6.0 -- D:\\slave\\venv\\0\\conan\\Scripts\\python.exe\r\n13:33:10 cachedir: .pytest_cache\r\n13:33:10 rootdir: D:\\slave\\bfsvidl0, inifile:\r\n13:33:10 plugins: xdist-1.22.2, forked-0.2\r\n13:33:10 gw0 I / gw1 I / gw2 I / gw3 I\r\n13:33:11 \r\n[gw0] win32 Python 3.5.4 cwd: D:\\slave\\bfsvidl0\r\n13:33:11 INTERNALERROR> Traceback (most recent call last):\r\n13:33:11 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1383, in _save\r\n13:33:11 INTERNALERROR>     dispatch = self._dispatch[tp]\r\n13:33:11 INTERNALERROR> KeyError: <enum 'TargetVersions'>\r\n13:33:11 INTERNALERROR> \r\n13:33:11 INTERNALERROR> During handling of the above exception, another exception occurred:\r\n13:33:11 INTERNALERROR> \r\n13:33:11 INTERNALERROR> Traceback (most recent call last):\r\n13:33:12 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\_pytest\\main.py\", line 176, in wrap_session\r\n13:33:12 INTERNALERROR>     config.hook.pytest_sessionstart(session=session)\r\n13:33:12 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\pluggy\\__init__.py\", line 617, in __call__\r\n13:33:12 INTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n13:33:12 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\pluggy\\__init__.py\", line 222, in _hookexec\r\n13:33:12 INTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\n13:33:12 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\pluggy\\__init__.py\", line 216, in <lambda>\r\n13:33:12 INTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\n13:33:13 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\pluggy\\callers.py\", line 201, in _multicall\r\n13:33:13 INTERNALERROR>     return outcome.get_result()\r\n13:33:13 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\pluggy\\callers.py\", line 76, in get_result\r\n13:33:13 INTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\n13:33:13 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\pluggy\\callers.py\", line 180, in _multicall\r\n13:33:13 INTERNALERROR>     res = hook_impl.function(*args)\r\n13:33:13 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\xdist\\dsession.py\", line 81, in pytest_sessionstart\r\n13:33:13 INTERNALERROR>     nodes = self.nodemanager.setup_nodes(putevent=self.queue.put)\r\n13:33:13 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\xdist\\workermanage.py\", line 64, in setup_nodes\r\n13:33:13 INTERNALERROR>     nodes.append(self.setup_node(spec, putevent))\r\n13:33:14 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\xdist\\workermanage.py\", line 73, in setup_node\r\n13:33:14 INTERNALERROR>     node.setup()\r\n13:33:14 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\xdist\\workermanage.py\", line 246, in setup\r\n13:33:14 INTERNALERROR>     self.channel.send((self.workerinput, args, option_dict))\r\n13:33:14 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 717, in send\r\n13:33:14 INTERNALERROR>     self.gateway._send(Message.CHANNEL_DATA, self.id, dumps_internal(item))\r\n13:33:14 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1354, in dumps_internal\r\n13:33:14 INTERNALERROR>     return _Serializer().save(obj)\r\n13:33:14 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1372, in save\r\n13:33:14 INTERNALERROR>     self._save(obj)\r\n13:33:15 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1390, in _save\r\n13:33:15 INTERNALERROR>     dispatch(self, obj)\r\n13:33:15 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1475, in save_tuple\r\n13:33:15 INTERNALERROR>     self._save(item)\r\n13:33:15 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1390, in _save\r\n13:33:15 INTERNALERROR>     dispatch(self, obj)\r\n13:33:15 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1471, in save_dict\r\n13:33:15 INTERNALERROR>     self._write_setitem(key, value)\r\n13:33:15 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1465, in _write_setitem\r\n13:33:15 INTERNALERROR>     self._save(value)\r\n13:33:15 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1390, in _save\r\n13:33:16 INTERNALERROR>     dispatch(self, obj)\r\n13:33:16 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1461, in save_list\r\n13:33:16 INTERNALERROR>     self._write_setitem(i, item)\r\n13:33:16 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1465, in _write_setitem\r\n13:33:16 INTERNALERROR>     self._save(value)\r\n13:33:16 INTERNALERROR>   File \"D:\\slave\\venv\\0\\conan\\lib\\site-packages\\execnet\\gateway_base.py\", line 1388, in _save\r\n13:33:16 INTERNALERROR>     raise DumpError(\"can't serialize %s\" % (tp,))\r\n13:33:16 INTERNALERROR> execnet.gateway_base.DumpError: can't serialize <enum 'TargetVersions'>\r\n```\r\n\r\nI am using a custom conftest.py, which includes another module that defines the mentioned enum. Do I need to register it somehow? If I understand it correctly, execnet uses pickle to serialize the objects, and an enum should be serializable out of the box.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/303", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/303/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/303/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/303", "id": 337290307, "node_id": "MDU6SXNzdWUzMzcyOTAzMDc=", "number": 303, "title": "using the pytest_sessionstart hook on each of the workers", "user": {"login": "shaicantor", "id": 2952388, "node_id": "MDQ6VXNlcjI5NTIzODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2952388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shaicantor", "html_url": "https://github.com/shaicantor", "followers_url": "https://api.github.com/users/shaicantor/followers", "following_url": "https://api.github.com/users/shaicantor/following{/other_user}", "gists_url": "https://api.github.com/users/shaicantor/gists{/gist_id}", "starred_url": "https://api.github.com/users/shaicantor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shaicantor/subscriptions", "organizations_url": "https://api.github.com/users/shaicantor/orgs", "repos_url": "https://api.github.com/users/shaicantor/repos", "events_url": "https://api.github.com/users/shaicantor/events{/privacy}", "received_events_url": "https://api.github.com/users/shaicantor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-01T13:15:01Z", "updated_at": "2018-07-22T05:41:16Z", "closed_at": "2018-07-22T05:41:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying to write a plugin that uses pytest's 3rd party hooks, meaning, xdist hooks.\r\nI'm trying to understand why the pytest_sessionstart hook is run only once, at the master and not on each worker node.\r\nI saw the pytest-cov plugin that uses this hook for each worker node [here](https://github.com/pytest-dev/pytest-cov/blob/master/src/pytest_cov/plugin.py#L176).\r\n\r\nWhat am I missing?\r\n\r\nThanks\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/301", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/301/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/301/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/301", "id": 336717010, "node_id": "MDU6SXNzdWUzMzY3MTcwMTA=", "number": 301, "title": "Injecting settings changes into test nodes using hooks", "user": {"login": "westhomas", "id": 953369, "node_id": "MDQ6VXNlcjk1MzM2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/953369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/westhomas", "html_url": "https://github.com/westhomas", "followers_url": "https://api.github.com/users/westhomas/followers", "following_url": "https://api.github.com/users/westhomas/following{/other_user}", "gists_url": "https://api.github.com/users/westhomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/westhomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/westhomas/subscriptions", "organizations_url": "https://api.github.com/users/westhomas/orgs", "repos_url": "https://api.github.com/users/westhomas/repos", "events_url": "https://api.github.com/users/westhomas/events{/privacy}", "received_events_url": "https://api.github.com/users/westhomas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-28T17:44:31Z", "updated_at": "2018-07-03T21:40:18Z", "closed_at": "2018-07-03T21:40:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm attempting to modify some basic settings within a manager class I maintain by using hooks.\r\n\r\nThis has been working great for a long time as long as I'm running without xdist. I import my settings class, make my changes and the changes are seen within my test methods. \r\n\r\nHowever, as soon as I attempt this same pattern using xdist hooks, this trick fails to work. The test nodes are unaware of my changes to the global scope.\r\n\r\nExample:\r\n```python\r\n# test-settings-injection.py\r\nimport pytest\r\n\r\nfrom settings import base as settings_base\r\n\r\n\r\n# Tests\r\ndef test_foo():\r\n    assert settings_base.settings.IMPORTANT_SETTING == 'parallel value'\r\n\r\n\r\ndef test_foo2():\r\n    assert settings_base.settings.IMPORTANT_SETTING == 'parallel value'\r\n\r\n\r\n@pytest.mark.serial\r\ndef test_bar():\r\n    assert settings_base.settings.IMPORTANT_SETTING == 'serial value'\r\n\r\n\r\n# Execute Tests\r\ndef main():\r\n    class MyPlugin(object):\r\n        def __init__(self):\r\n            self.__name__ = 'myplugin'\r\n            self.collected = set()\r\n\r\n        def pytest_xdist_node_collection_finished(self, node, ids):\r\n            self.collected.update(set(ids))\r\n\r\n        def pytest_collection_modifyitems(self, items):\r\n            for item in items:\r\n                self.collected.update({item.nodeid})\r\n\r\n        def pytest_configure(self, config):\r\n            # mutate setting value\r\n            from settings import base as settings_base\r\n            settings_base.settings.IMPORTANT_SETTING = 'serial value'\r\n\r\n        def pytest_testnodeready(self, node):\r\n            # mutate setting value\r\n            from settings import base as settings_base\r\n            settings_base.settings.IMPORTANT_SETTING = 'parallel value'\r\n\r\n    # this works\r\n    myplugin = MyPlugin()\r\n    pytest.main(['test-settings-injection.py', '-s', '-m', 'serial'], plugins=[myplugin])\r\n    print('Serial Collected:', myplugin.collected)\r\n\r\n    # this doesn't work\r\n    myplugin = MyPlugin()\r\n    pytest.main(['test-settings-injection.py', '-s', '-m', 'not serial', '-d', '--tx', '{}*popen//python=python3'.format(2), ], plugins=[myplugin])\r\n    print('Parallel (threads) Collected:', myplugin.collected)\r\n\r\n    # this doesn't work\r\n    myplugin = MyPlugin()\r\n    pytest.main(['test-settings-injection.py', '-s', '-m', 'not serial', '-n2', ], plugins=[myplugin])\r\n    print('Parallel (CPUs) Collected:', myplugin.collected)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nIs there anyway to do this sort of patching within the non-master test nodes?\r\n\r\n\r\nVersions:\r\n```\r\npytest==3.6.2\r\npytest-xdist==1.22.2\r\n```\r\n\r\nTest project here: https://github.com/westhomas/pytest-testapp\r\nRun with `python test-settings-injection.py`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/300", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/300/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/300/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/300", "id": 332745362, "node_id": "MDU6SXNzdWUzMzI3NDUzNjI=", "number": 300, "title": "'No module found' error -> how to configure an environment for remote usage", "user": {"login": "michaelbukachi", "id": 10145850, "node_id": "MDQ6VXNlcjEwMTQ1ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/10145850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbukachi", "html_url": "https://github.com/michaelbukachi", "followers_url": "https://api.github.com/users/michaelbukachi/followers", "following_url": "https://api.github.com/users/michaelbukachi/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbukachi/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbukachi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbukachi/subscriptions", "organizations_url": "https://api.github.com/users/michaelbukachi/orgs", "repos_url": "https://api.github.com/users/michaelbukachi/repos", "events_url": "https://api.github.com/users/michaelbukachi/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbukachi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-15T11:51:41Z", "updated_at": "2018-06-15T12:30:00Z", "closed_at": "2018-06-15T12:27:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I'm trying to run tests on a remote server but I'm getting a `No module found` error. I'm running pytests in a virtual env created using pipenv. Is it possible to have a setup before the tests that installs all the modules on the remote server ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/299", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/299/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/299/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/299", "id": 330798870, "node_id": "MDU6SXNzdWUzMzA3OTg4NzA=", "number": 299, "title": "xdist multi-machine CI integration", "user": {"login": "simon-weber", "id": 950506, "node_id": "MDQ6VXNlcjk1MDUwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/950506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simon-weber", "html_url": "https://github.com/simon-weber", "followers_url": "https://api.github.com/users/simon-weber/followers", "following_url": "https://api.github.com/users/simon-weber/following{/other_user}", "gists_url": "https://api.github.com/users/simon-weber/gists{/gist_id}", "starred_url": "https://api.github.com/users/simon-weber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simon-weber/subscriptions", "organizations_url": "https://api.github.com/users/simon-weber/orgs", "repos_url": "https://api.github.com/users/simon-weber/repos", "events_url": "https://api.github.com/users/simon-weber/events{/privacy}", "received_events_url": "https://api.github.com/users/simon-weber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-06-08T20:51:25Z", "updated_at": "2019-03-04T19:00:48Z", "closed_at": "2018-07-06T15:43:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the same topic as https://github.com/pytest-dev/pytest-xdist/issues/283: I'm looking into running xdist with remote machines on Jenkins.\r\n\r\nOur current setup uses [distributed-nose](http://policystat.github.io/distributed-nose), which works by splitting the suite into pieces, running those separately, then aggregating the results. The problem is that it gets difficult to create well-balanced static shards as we parallelize more (even when distributing by expected test runtime). Xdist's dynamic dispatching fixes this.\r\n\r\nSo, as far as I can tell, these are my options for running xdist in an automated multi-machine setup:\r\n\r\n1. reserve all workers ahead of time (either through jenkins or some other way), then use xdist as-is\r\n0. modify xdist so workers can connect back dynamically, rather than be connected to ahead of time\r\n0. modify xdist to decouple it from workers (eg have the master+workers communicate via pubsub)\r\n\r\nIs there anything I'm missing? Any thoughts on the feasibility/advantages/disadvantages of building the 2nd/3rd options on top of xdist? I'm not too familiar with how it works under the hood.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/295", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/295/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/295/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/295", "id": 322654938, "node_id": "MDU6SXNzdWUzMjI2NTQ5Mzg=", "number": 295, "title": "scope=session fixtures setup/teardown multiple times", "user": {"login": "cielavenir", "id": 1495368, "node_id": "MDQ6VXNlcjE0OTUzNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1495368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cielavenir", "html_url": "https://github.com/cielavenir", "followers_url": "https://api.github.com/users/cielavenir/followers", "following_url": "https://api.github.com/users/cielavenir/following{/other_user}", "gists_url": "https://api.github.com/users/cielavenir/gists{/gist_id}", "starred_url": "https://api.github.com/users/cielavenir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cielavenir/subscriptions", "organizations_url": "https://api.github.com/users/cielavenir/orgs", "repos_url": "https://api.github.com/users/cielavenir/repos", "events_url": "https://api.github.com/users/cielavenir/events{/privacy}", "received_events_url": "https://api.github.com/users/cielavenir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-14T02:38:52Z", "updated_at": "2018-05-14T02:41:17Z", "closed_at": "2018-05-14T02:41:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "\\_\\_init\\_\\_.py\r\n```py\r\nimport pytest\r\nimport inspect\r\n@pytest.fixture(scope=\"session\")\r\ndef F(request):\r\n  print('setup')\r\n  yield inspect.stack()[0]\r\n  print('teardown')\r\n```\r\n\r\ntest_1.py\r\n```py\r\nfrom . import F\r\ndef test_1(F):\r\n  print(F)\r\n```\r\n\r\ntest_2.py\r\n```py\r\nfrom . import F\r\ndef test_2(F):\r\n  print(F)\r\n```\r\n\r\nthis pytest tree shows:\r\n\r\n```\r\ntest_1.py setup\r\n(<frame object at 0x7ff2c97fa730>)\r\n.                                                                                                                                                              \r\ntest_2.py setup\r\n(<frame object at 0x7ff2c97faaa0>)\r\n.teardown\r\nteardown\r\n```\r\n\r\nI expect setup/teardown only once, since there are only one fixture definition.\r\n\r\nIf this is because global session fixtures are gathered multiple times, I think this can be fixed by checking module name in gathering.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/292", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/292/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/292/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/292", "id": 310081454, "node_id": "MDU6SXNzdWUzMTAwODE0NTQ=", "number": 292, "title": "Question: run py.test+xdist from python", "user": {"login": "moleksyuk", "id": 793472, "node_id": "MDQ6VXNlcjc5MzQ3Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/793472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moleksyuk", "html_url": "https://github.com/moleksyuk", "followers_url": "https://api.github.com/users/moleksyuk/followers", "following_url": "https://api.github.com/users/moleksyuk/following{/other_user}", "gists_url": "https://api.github.com/users/moleksyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/moleksyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moleksyuk/subscriptions", "organizations_url": "https://api.github.com/users/moleksyuk/orgs", "repos_url": "https://api.github.com/users/moleksyuk/repos", "events_url": "https://api.github.com/users/moleksyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/moleksyuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-30T14:36:07Z", "updated_at": "2018-04-02T17:46:37Z", "closed_at": "2018-04-02T10:10:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nPytest provides ability to run tests from python [directly](https://docs.pytest.org/en/latest/usage.html#calling-pytest-from-python-code):\r\n\r\n```python\r\npytest.main(['-x', 'mytestdir'])\r\n```\r\n\r\nBut when I try to run it with `xdist`:\r\n```python\r\npytest.main([\"-d\", \"--tx\", \"'ssh=-i ec2-nano-key-pair.pem ubuntu@ec2.amazonaws.com//python=/usr/bin/python3.5'\", \"--rsyncdir\", \"mytestdir\", \"mytestdir\"])\r\n```\r\nGetting error that xdist params are not recognized:\r\n```\r\nusage: __main__.py [options] [file_or_dir] [file_or_dir] [...]\r\n__main__.py: error: unrecognized arguments: -d --tx --rsyncdir mytestdir mytestdir\r\n```\r\n\r\nAlso, when I tried to run:\r\n```python\r\no = os.popen(\"py.test --help\").read()\r\nprint(o)\r\n``` \r\nIt doesn't out section related to **xdist** (`distributed and subprocess testing`) but everything works from Terminal directly.\r\n\r\nDoes it require some additional configuration or it's impossible at all?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/291", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/291/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/291/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/291", "id": 307239090, "node_id": "MDU6SXNzdWUzMDcyMzkwOTA=", "number": 291, "title": "pytest_xdist_make_scheduler doesn't work if pytest is executed from ancestor folder", "user": {"login": "abotalov", "id": 1497867, "node_id": "MDQ6VXNlcjE0OTc4Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1497867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abotalov", "html_url": "https://github.com/abotalov", "followers_url": "https://api.github.com/users/abotalov/followers", "following_url": "https://api.github.com/users/abotalov/following{/other_user}", "gists_url": "https://api.github.com/users/abotalov/gists{/gist_id}", "starred_url": "https://api.github.com/users/abotalov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abotalov/subscriptions", "organizations_url": "https://api.github.com/users/abotalov/orgs", "repos_url": "https://api.github.com/users/abotalov/repos", "events_url": "https://api.github.com/users/abotalov/events{/privacy}", "received_events_url": "https://api.github.com/users/abotalov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-21T13:13:53Z", "updated_at": "2018-03-21T14:03:25Z", "closed_at": "2018-03-21T14:03:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is the following directory structure - `temp/src/tests`.  \r\n`tests` folder contains `conftest.py` and `test_a.py` files:\r\n```python\r\n# conftest.py\r\nfrom xdist.scheduler import LoadScopeScheduling\r\n\r\ndef pytest_xdist_make_scheduler(config, log):\r\n  return LoadScopeScheduling(config, log)\r\n```\r\n\r\n```python\r\n# test_a.py\r\ndef test_answer():\r\n  assert 5 == 5\r\n```\r\n\r\nIf I execute `pytest -n=2` from child `src` or `tests` folder, I see `scheduling tests via LoadScopeScheduling` in test output as expected.\r\nBut if I execute `pytest -n=2` from ancestor `temp` folder, I see **`scheduling tests via LoadScheduling`** in test output. I would expect pytest to discover `conftest.py` and see `LoadScopeScheduling`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/290", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/290/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/290/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/290", "id": 306622888, "node_id": "MDU6SXNzdWUzMDY2MjI4ODg=", "number": 290, "title": "Running with custom marker support", "user": {"login": "Mr-F", "id": 3585440, "node_id": "MDQ6VXNlcjM1ODU0NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3585440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mr-F", "html_url": "https://github.com/Mr-F", "followers_url": "https://api.github.com/users/Mr-F/followers", "following_url": "https://api.github.com/users/Mr-F/following{/other_user}", "gists_url": "https://api.github.com/users/Mr-F/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mr-F/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mr-F/subscriptions", "organizations_url": "https://api.github.com/users/Mr-F/orgs", "repos_url": "https://api.github.com/users/Mr-F/repos", "events_url": "https://api.github.com/users/Mr-F/events{/privacy}", "received_events_url": "https://api.github.com/users/Mr-F/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-19T20:30:08Z", "updated_at": "2020-05-07T04:31:26Z", "closed_at": "2018-03-19T21:39:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm hoping this is more a question rather than an issue/feature request.  I'm trying to run a specific set of tests across multiple cores.  Currently, without xdist I simply use pytest's custom marker selection option `-m` i.e.\r\n```\r\npy.test -m foo_bar ./tests/\r\n```\r\nThis quite happily selects the tests marked with `foo_bar` and runs only those tests.  However, if I introduce the number of processes using `-n` i.e.\r\n```\r\npy.test -n 2 -m foo_bar ./tests/\r\n```\r\nIt simply ignores that and runs them all.  Am I missing something or does using `-n` flag exclude the ability to use custom markers?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/288", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/288/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/288/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/288", "id": 300846689, "node_id": "MDU6SXNzdWUzMDA4NDY2ODk=", "number": 288, "title": "Support mosh as a tx spec", "user": {"login": "gappleto97", "id": 1554778, "node_id": "MDQ6VXNlcjE1NTQ3Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1554778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gappleto97", "html_url": "https://github.com/gappleto97", "followers_url": "https://api.github.com/users/gappleto97/followers", "following_url": "https://api.github.com/users/gappleto97/following{/other_user}", "gists_url": "https://api.github.com/users/gappleto97/gists{/gist_id}", "starred_url": "https://api.github.com/users/gappleto97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gappleto97/subscriptions", "organizations_url": "https://api.github.com/users/gappleto97/orgs", "repos_url": "https://api.github.com/users/gappleto97/repos", "events_url": "https://api.github.com/users/gappleto97/events{/privacy}", "received_events_url": "https://api.github.com/users/gappleto97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-28T00:33:11Z", "updated_at": "2018-03-01T07:37:12Z", "closed_at": "2018-03-01T07:37:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "It should end up working a lot like your current ssh setup, but it has the advantage of being over UDP instead of TCP. This means that in long testing batches you don't get screwed by a short network error.\r\n\r\nIf you point me to the relevant bit of code, I might even be able to get a PR started.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/285", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/285/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/285/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/285", "id": 300334374, "node_id": "MDU6SXNzdWUzMDAzMzQzNzQ=", "number": 285, "title": "Missed slaveoutput backward compatibility alias in WorkerController", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-26T17:50:17Z", "updated_at": "2018-02-26T21:44:24Z", "closed_at": "2018-02-26T21:44:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As discussed in pytest-dev/pytest-cov#191", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/284", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/284/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/284/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/284", "id": 300212804, "node_id": "MDU6SXNzdWUzMDAyMTI4MDQ=", "number": 284, "title": "Multiple CPU option accept one core and launch tests with multiprocessing", "user": {"login": "jfhuete", "id": 11752986, "node_id": "MDQ6VXNlcjExNzUyOTg2", "avatar_url": "https://avatars2.githubusercontent.com/u/11752986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfhuete", "html_url": "https://github.com/jfhuete", "followers_url": "https://api.github.com/users/jfhuete/followers", "following_url": "https://api.github.com/users/jfhuete/following{/other_user}", "gists_url": "https://api.github.com/users/jfhuete/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfhuete/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfhuete/subscriptions", "organizations_url": "https://api.github.com/users/jfhuete/orgs", "repos_url": "https://api.github.com/users/jfhuete/repos", "events_url": "https://api.github.com/users/jfhuete/events{/privacy}", "received_events_url": "https://api.github.com/users/jfhuete/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-26T12:06:21Z", "updated_at": "2019-09-02T14:32:03Z", "closed_at": "2019-09-02T14:32:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you launch test with -n auto, if your machine have one core, the test is launched with multiprocessing. This is ineficient, it not necesary to launch a worker in this situation. The tests must be launched obviating the -n 1 argument. The diference when launch a tests with one core with multiprocess and withouth multiprocess is very significan. With multiprocess the memory consumption is very higher and this could cause that tests fails.\r\n\r\nIn the next attachments you can see this problem. The captures are done in the same time in the two sceneries.\r\n\r\nWith multiprocessing the test fails because the worker cannot to allocate memory, but without multiprocessing the test passed.\r\n\r\nWith Multiprocessing captures:\r\n![multiprocessing_worker_fails](https://user-images.githubusercontent.com/11752986/36669498-64557482-1af5-11e8-95e7-9e449f7b1318.png)\r\n![multiprocessing_memory_consumption](https://user-images.githubusercontent.com/11752986/36669496-6426586e-1af5-11e8-8a9c-78bf69f8373b.png)\r\n![multiprocessing_test_fails](https://user-images.githubusercontent.com/11752986/36669497-643dd2be-1af5-11e8-8263-23f4a72e3b3e.png)\r\n\r\nWithouth Multiprocessing captures:\r\n![withouth_multiprocessing_test_running](https://user-images.githubusercontent.com/11752986/36669599-b533f036-1af5-11e8-99ef-1d1b0d6838b4.png)\r\n![without_multiprocessing_memory](https://user-images.githubusercontent.com/11752986/36669605-b8adac98-1af5-11e8-9e7a-5e0767ff7239.png)\r\n![withouth_multiprocessing_test_ok](https://user-images.githubusercontent.com/11752986/36669606-bb06d316-1af5-11e8-98b0-a9d9ad27abd3.png)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/283", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/283/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/283/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/283", "id": 299605775, "node_id": "MDU6SXNzdWUyOTk2MDU3NzU=", "number": 283, "title": "[Help needed] xdist & Jenkins integration", "user": {"login": "Formartha", "id": 8232832, "node_id": "MDQ6VXNlcjgyMzI4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8232832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Formartha", "html_url": "https://github.com/Formartha", "followers_url": "https://api.github.com/users/Formartha/followers", "following_url": "https://api.github.com/users/Formartha/following{/other_user}", "gists_url": "https://api.github.com/users/Formartha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Formartha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Formartha/subscriptions", "organizations_url": "https://api.github.com/users/Formartha/orgs", "repos_url": "https://api.github.com/users/Formartha/repos", "events_url": "https://api.github.com/users/Formartha/events{/privacy}", "received_events_url": "https://api.github.com/users/Formartha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-02-23T05:46:57Z", "updated_at": "2018-02-28T20:50:16Z", "closed_at": "2018-02-28T20:50:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIn the past, in my organization we have implemented some mechanism for parallelize with using Jenkins to split the work among the slaves (with using some java/Jmeter scripts).\r\n\r\nSince I found out about pytest, we had switched to it and I'm happy to use it with xdist..\r\n\r\nHowever, one of the things I'm missing is some integration with Jenkins to understand how to run parallel tasks from one of the Jenkins slaves to another.. (meaning, job trigger otherjobs with integration of pytest and xdist).\r\n\r\nThe way I see it, I can build a script with remote workers and let it run..\r\nHowever, what will happen if jenkins will spawn a new job on this slave? how could we have an idea about it?\r\n\r\nI got tons of questions about this process.. however, I believe that you folks handlede such integration and I will be happy to learn from it..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/282", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/282/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/282/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/282", "id": 299281169, "node_id": "MDU6SXNzdWUyOTkyODExNjk=", "number": 282, "title": "pytest_unconfigure doesn't always complete on worker nodes", "user": {"login": "mikeage", "id": 87874, "node_id": "MDQ6VXNlcjg3ODc0", "avatar_url": "https://avatars0.githubusercontent.com/u/87874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeage", "html_url": "https://github.com/mikeage", "followers_url": "https://api.github.com/users/mikeage/followers", "following_url": "https://api.github.com/users/mikeage/following{/other_user}", "gists_url": "https://api.github.com/users/mikeage/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeage/subscriptions", "organizations_url": "https://api.github.com/users/mikeage/orgs", "repos_url": "https://api.github.com/users/mikeage/repos", "events_url": "https://api.github.com/users/mikeage/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeage/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-22T09:38:31Z", "updated_at": "2018-02-22T12:32:19Z", "closed_at": "2018-02-22T11:09:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIt seems like pytest_unconfigure is called, but doesn't necessarily finish, on worker nodes.\r\n\r\nSample conftest.py:\r\n```python\r\nimport time\r\nimport logging\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\ndef pytest_unconfigure(config):\r\n    if hasattr(config, 'workerinput'):\r\n        logging.info(\"Unconfiguring worker; sleeping\")\r\n        time.sleep(20)\r\n        logging.info(\"Done\")\r\n    else:\r\n        logging.info(\"Unconfiguring master; not sleeping\")\r\n        logging.info(\"Done\")\r\n```\r\n\r\nOutput:\r\n```\r\n$ py.test -s -n 1\r\n========================================================================================================================================================================== test session starts ==========================================================================================================================================================================\r\nplatform darwin -- Python 2.7.14, pytest-3.3.2, py-1.5.2, pluggy-0.6.0\r\nrootdir: /Users/mikemi/pytest_unconf_abort, inifile:\r\nplugins: xdist-1.22.1, forked-0.2\r\ngw0 [0]\r\nscheduling tests via LoadScheduling\r\nINFO:root:Unconfiguring worker; sleeping\r\n\r\n===================================================================================================================================================================== no tests ran in 5.42 seconds ======================================================================================================================================================================\r\nINFO:root:Unconfiguring master; not sleeping\r\nINFO:root:Done\r\n```\r\n\r\nThis is obviously just sample code, but I saw that a long running operation that I have in pytest_unconfigure sometimes didn't finish. Is there any way to make sure that the master blocks on all the workers' completions? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/280", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/280/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/280/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/280", "id": 297514661, "node_id": "MDU6SXNzdWUyOTc1MTQ2NjE=", "number": 280, "title": "Retrieving the process id using worker_id", "user": {"login": "kunchamlokesh", "id": 10302541, "node_id": "MDQ6VXNlcjEwMzAyNTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/10302541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kunchamlokesh", "html_url": "https://github.com/kunchamlokesh", "followers_url": "https://api.github.com/users/kunchamlokesh/followers", "following_url": "https://api.github.com/users/kunchamlokesh/following{/other_user}", "gists_url": "https://api.github.com/users/kunchamlokesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kunchamlokesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kunchamlokesh/subscriptions", "organizations_url": "https://api.github.com/users/kunchamlokesh/orgs", "repos_url": "https://api.github.com/users/kunchamlokesh/repos", "events_url": "https://api.github.com/users/kunchamlokesh/events{/privacy}", "received_events_url": "https://api.github.com/users/kunchamlokesh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239949, "node_id": "MDU6TGFiZWwyNTUyMzk5NDk=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-15T16:40:52Z", "updated_at": "2018-03-29T05:10:30Z", "closed_at": "2018-03-29T05:10:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have issue related to worker_id. In our project while executing, mulit process will be launched and for every process username & password will be allocated randomly so due to this same credentials were assigned to multiple process., due to this we are facing collision issue.\r\nWe can solve this issue by allocating a static credentials to a process ie.\r\n\r\nsuppose we launched 4 process using pytest -n 4\r\nnow four process were launched named pw[0], pw[1], pw[2] & pw[3].\r\n\r\nI would allocate user1 credentails to process1 and user2 credentials to process2 bsed on name that pw[0] & pw[1]\r\n\r\nHere i am unable to retriever the name of the process . Can any please suggest me how to reterive them\r\n\r\nBy referring the above comments i have understood we can user worker_id to retrieve but can you please mention in detail", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/275", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/275/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/275/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/275", "id": 293551751, "node_id": "MDU6SXNzdWUyOTM1NTE3NTE=", "number": 275, "title": "pytest-xdist not compatible with pytest 3.4.0", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-01T14:33:08Z", "updated_at": "2018-02-01T14:53:23Z", "closed_at": "2018-02-01T14:52:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running tests with `pytest-3.4` both `xdist-1.22.0` (most recent released version) and `xdist-1.22.1.dev1+g3098f27` (current master). I'm getting the error below.\r\n\r\nI thought this might be fixed by #266 but apparently not since I still get the error with master.\r\n\r\nThis was working fine with `pytest-3.3.2`.\r\n\r\nI've looked and couldn't find a duplicate of this, sorry if I'm being blind. I'm aware this could be an error with another plugin, but xdist looked most likely so I started here.\r\n\r\n```\r\n(env) TutorCruncher2 0 123ms \u27a4  pytest TutorCruncher/accounting/tests/test_ahcs.py\r\nTest session starts (platform: linux, Python 3.6.3, pytest 3.4.0, pytest-sugar 0.9.0)\r\nDjango settings: TutorCruncher.test_settings (from ini file)\r\nrootdir: /home/samuel/TutorCruncher2, inifile: setup.cfg\r\nplugins: xdist-1.22.1.dev1+g3098f27, timeout-1.2.1, sugar-0.9.0, forked-0.2, django-3.1.2, cov-2.5.1\r\ntimeout: 60.0s method: signal\r\n\r\n TutorCruncher/accounting/tests/test_ahcs.py \u2713                                                                                                 4% \u258c         \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/_pytest/main.py\", line 100, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/_pytest/main.py\", line 138, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/__init__.py\", line 617, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/__init__.py\", line 222, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/__init__.py\", line 216, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/_pytest/main.py\", line 161, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/__init__.py\", line 617, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/__init__.py\", line 222, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/__init__.py\", line 216, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/_pytest/runner.py\", line 64, in pytest_runtest_protocol\r\nINTERNALERROR>     nodeid=item.nodeid, location=item.location,\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/__init__.py\", line 617, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/__init__.py\", line 222, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/__init__.py\", line 216, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/samuel/TutorCruncher2/env/lib/python3.6/site-packages/_pytest/terminal.py\", line 315, in pytest_runtest_logfinish\r\nINTERNALERROR>     last_item = len(self._progress_nodeids_reported) == self._session.testscollected\r\nINTERNALERROR> AttributeError: 'NoneType' object has no attribute 'testscollected'\r\n\r\n\r\nResults (4.08s):\r\n       1 passed\r\n(env) TutorCruncher2 3 5.55s \u27a4  \r\n```\r\n\r\nI hope that includes all information need, if not, let me know and I'll provide what I can.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/269", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/269/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/269/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/269", "id": 289918757, "node_id": "MDU6SXNzdWUyODk5MTg3NTc=", "number": 269, "title": "Error \"Different tests were collected\" when use generator in parametrize", "user": {"login": "feuillemorte", "id": 9434344, "node_id": "MDQ6VXNlcjk0MzQzNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9434344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feuillemorte", "html_url": "https://github.com/feuillemorte", "followers_url": "https://api.github.com/users/feuillemorte/followers", "following_url": "https://api.github.com/users/feuillemorte/following{/other_user}", "gists_url": "https://api.github.com/users/feuillemorte/gists{/gist_id}", "starred_url": "https://api.github.com/users/feuillemorte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feuillemorte/subscriptions", "organizations_url": "https://api.github.com/users/feuillemorte/orgs", "repos_url": "https://api.github.com/users/feuillemorte/repos", "events_url": "https://api.github.com/users/feuillemorte/events{/privacy}", "received_events_url": "https://api.github.com/users/feuillemorte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255239948, "node_id": "MDU6TGFiZWwyNTUyMzk5NDg=", "url": "https://api.github.com/repos/pytest-dev/pytest-xdist/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-19T09:53:22Z", "updated_at": "2018-01-24T10:02:30Z", "closed_at": "2018-01-23T09:52:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This code\r\n```\r\nimport pytest\r\nimport random\r\n\r\n\r\n@pytest.mark.parametrize('number', [random.randint(1, 10)])\r\ndef test_one(number):\r\n    print(number)\r\n```\r\nnot working because of error:\r\n\r\n```\r\n____________________________________________________________________________________ ERROR collecting gw3 _____________________________________________________________________________________\r\nDifferent tests were collected between gw1 and gw3. The difference is:\r\n--- gw1\r\n\r\n+++ gw3\r\n\r\n@@ -1 +1 @@\r\n\r\n-tests/test_one.py::test_one[5]\r\n+tests/test_one.py::test_one[3]\r\n====================================\r\n```\r\nFor temporary solution you can use ids for fix this:\r\n`@pytest.mark.parametrize('number', [random.randint(1, 10)], ids=['number'])`\r\n\r\nCan it be fixed or it a feature of pytest?\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/264", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/264/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/264/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/264", "id": 284512528, "node_id": "MDU6SXNzdWUyODQ1MTI1Mjg=", "number": 264, "title": "ERROR collecting gw0 if parameters are changing.", "user": {"login": "Kappasama", "id": 3257133, "node_id": "MDQ6VXNlcjMyNTcxMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3257133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kappasama", "html_url": "https://github.com/Kappasama", "followers_url": "https://api.github.com/users/Kappasama/followers", "following_url": "https://api.github.com/users/Kappasama/following{/other_user}", "gists_url": "https://api.github.com/users/Kappasama/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kappasama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kappasama/subscriptions", "organizations_url": "https://api.github.com/users/Kappasama/orgs", "repos_url": "https://api.github.com/users/Kappasama/repos", "events_url": "https://api.github.com/users/Kappasama/events{/privacy}", "received_events_url": "https://api.github.com/users/Kappasama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-26T07:58:00Z", "updated_at": "2017-12-26T08:44:18Z", "closed_at": "2017-12-26T08:44:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The parameter is a function that returns an array of parameters.\r\n\r\nThe problem is that if the parameters change, an error is displayed:\r\n\r\n==================================== ERRORS ============= =======================\r\n_____________________________ ERROR collecting gw0 _____________________________\r\nDifferent tests were collected between gw2 and gw0. The difference is:\r\n--- gw2\r\n\r\n+++ gw0\r\n\r\n@@ -133.4 +133.3 @@@\r\n\r\n tests / test.py :: TestAutotest: :() :: test_parametrize [132]\r\n tests / test.py :: TestAutotest: :() :: test_parametrize [133]\r\n tests / test.py :: TestAutotest: :() :: test_parametrize [134]\r\n-tests / test.py :: TestAutotest: :() :: test_parametrize [135]\r\n\r\nPython 3.5.2, pytest-3.3.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/260", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/260/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/260/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/260", "id": 284134583, "node_id": "MDU6SXNzdWUyODQxMzQ1ODM=", "number": 260, "title": "Latest master failing on pytestmaster and pytestfeatures", "user": {"login": "hugovk", "id": 1324225, "node_id": "MDQ6VXNlcjEzMjQyMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1324225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugovk", "html_url": "https://github.com/hugovk", "followers_url": "https://api.github.com/users/hugovk/followers", "following_url": "https://api.github.com/users/hugovk/following{/other_user}", "gists_url": "https://api.github.com/users/hugovk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugovk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugovk/subscriptions", "organizations_url": "https://api.github.com/users/hugovk/orgs", "repos_url": "https://api.github.com/users/hugovk/repos", "events_url": "https://api.github.com/users/hugovk/events{/privacy}", "received_events_url": "https://api.github.com/users/hugovk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-22T10:58:19Z", "updated_at": "2017-12-22T17:51:03Z", "closed_at": "2017-12-22T17:51:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For example: https://travis-ci.org/hugovk/pytest-xdist/builds/319594409\r\n\r\nFrom \r\nhttps://github.com/pytest-dev/pytest-xdist/pull/259#issuecomment-353459821:\r\n\r\n> I suspect this is breaking because the output has changed and now includes the progress indicator in pytest-3.3, so the code which parses the output is not detecting what it intends to.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/258", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/258/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/258/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/258", "id": 283818596, "node_id": "MDU6SXNzdWUyODM4MTg1OTY=", "number": 258, "title": "404 links in OVERVIEW.md", "user": {"login": "hugovk", "id": 1324225, "node_id": "MDQ6VXNlcjEzMjQyMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1324225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugovk", "html_url": "https://github.com/hugovk", "followers_url": "https://api.github.com/users/hugovk/followers", "following_url": "https://api.github.com/users/hugovk/following{/other_user}", "gists_url": "https://api.github.com/users/hugovk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugovk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugovk/subscriptions", "organizations_url": "https://api.github.com/users/hugovk/orgs", "repos_url": "https://api.github.com/users/hugovk/repos", "events_url": "https://api.github.com/users/hugovk/events{/privacy}", "received_events_url": "https://api.github.com/users/hugovk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-21T09:18:40Z", "updated_at": "2018-01-21T05:54:30Z", "closed_at": "2018-01-21T05:53:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/pytest-dev/pytest-xdist/blob/master/OVERVIEW.md links to:\r\n\r\n> [execnet](http://codespeak.net/execnet/) and its [gateways](http://codespeak.net/execnet/basics.html#gateways-bootstrapping-python-interpreters)\r\n\r\nBoth of which are 404. codespeak.net is @hpk42's site.\r\n\r\nThe pages should be fixed on codespeak.net, the links switched to archived versions, or links removed.\r\n\r\n(If fixed, these can be https as well.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/257", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-xdist", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/257/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-xdist/issues/257/events", "html_url": "https://github.com/pytest-dev/pytest-xdist/issues/257", "id": 282594108, "node_id": "MDU6SXNzdWUyODI1OTQxMDg=", "number": 257, "title": "dist=loadscope scheduling hangs on test class with only one test", "user": {"login": "DanaGoyette", "id": 1697486, "node_id": "MDQ6VXNlcjE2OTc0ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1697486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanaGoyette", "html_url": "https://github.com/DanaGoyette", "followers_url": "https://api.github.com/users/DanaGoyette/followers", "following_url": "https://api.github.com/users/DanaGoyette/following{/other_user}", "gists_url": "https://api.github.com/users/DanaGoyette/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanaGoyette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanaGoyette/subscriptions", "organizations_url": "https://api.github.com/users/DanaGoyette/orgs", "repos_url": "https://api.github.com/users/DanaGoyette/repos", "events_url": "https://api.github.com/users/DanaGoyette/events{/privacy}", "received_events_url": "https://api.github.com/users/DanaGoyette/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-12-16T02:42:51Z", "updated_at": "2018-02-19T19:02:23Z", "closed_at": "2018-02-19T19:02:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "With pytest 3.2.3, when I tried using --dist=loadscope with two ssh nodes, the test framework simply hung without even trying to run any tests.  The same environment works fine with the other schedulers.\r\n\r\nPart of the traceback (seems exactly the same as #230 ):\r\n        while not self.session_finished:\r\n>           self.loop_once()\r\n\r\nThe hang seems to occur when running a test class that has only one test function.\r\nI eventually tracked down a simple change that seems to fix it: on the following line, expect only one item, not two:\r\n\r\nhttps://github.com/pytest-dev/pytest-xdist/blob/master/xdist/remote.py#L62\r\n\r\nI can't tell what the change might break, though.", "performed_via_github_app": null, "score": 1.0}]}