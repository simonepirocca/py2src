{"total_count": 2, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/LLNL/certipy/issues/5", "repository_url": "https://api.github.com/repos/LLNL/certipy", "labels_url": "https://api.github.com/repos/LLNL/certipy/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/LLNL/certipy/issues/5/comments", "events_url": "https://api.github.com/repos/LLNL/certipy/issues/5/events", "html_url": "https://github.com/LLNL/certipy/issues/5", "id": 615080621, "node_id": "MDU6SXNzdWU2MTUwODA2MjE=", "number": 5, "title": "Syntax warning due to comparison of literals using is", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-09T03:27:24Z", "updated_at": "2020-05-12T16:23:04Z", "closed_at": "2020-05-12T16:23:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nfind . -iname '*.py' | grep -Ev 'test.py' | xargs -P4 -I{} python3.8 -Wall -m py_compile {}\r\n./certipy/command_line.py:55: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  cert_type = crypto.TYPE_RSA if args.cert_type is \"rsa\" else crypto.TYPE_DSA\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LLNL/certipy/issues/2", "repository_url": "https://api.github.com/repos/LLNL/certipy", "labels_url": "https://api.github.com/repos/LLNL/certipy/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/LLNL/certipy/issues/2/comments", "events_url": "https://api.github.com/repos/LLNL/certipy/issues/2/events", "html_url": "https://github.com/LLNL/certipy/issues/2", "id": 414398957, "node_id": "MDU6SXNzdWU0MTQzOTg5NTc=", "number": 2, "title": "certipy install fails if building from tar.gz", "user": {"login": "varunsaxena", "id": 10049695, "node_id": "MDQ6VXNlcjEwMDQ5Njk1", "avatar_url": "https://avatars2.githubusercontent.com/u/10049695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varunsaxena", "html_url": "https://github.com/varunsaxena", "followers_url": "https://api.github.com/users/varunsaxena/followers", "following_url": "https://api.github.com/users/varunsaxena/following{/other_user}", "gists_url": "https://api.github.com/users/varunsaxena/gists{/gist_id}", "starred_url": "https://api.github.com/users/varunsaxena/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varunsaxena/subscriptions", "organizations_url": "https://api.github.com/users/varunsaxena/orgs", "repos_url": "https://api.github.com/users/varunsaxena/repos", "events_url": "https://api.github.com/users/varunsaxena/events{/privacy}", "received_events_url": "https://api.github.com/users/varunsaxena/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-26T02:22:40Z", "updated_at": "2019-03-18T17:59:50Z", "closed_at": "2019-03-18T17:59:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "certipy install fails if building from tar.gz\r\n\r\n\r\n$ ./build/li-jupyterhub/venv/bin/pip3 install certipy==0.1.2 --no-binary :all:\r\nCollecting certipy==0.1.2\r\n  Using cached https://files.pythonhosted.org/packages/04/1e/340c66cddafdbbc378ff4ddd8659c633a162471645059fc5976b3aadf58b/certipy-0.1.2.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    warning: pypandoc module not found, could not convert Markdown to RST\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-pmj2g9co/certipy/setup.py\", line 79, in <module>\r\n        long_description = read_md(f.read())\r\n      File \"/tmp/pip-install-pmj2g9co/certipy/setup.py\", line 73, in <lambda>\r\n        read_md = lambda f: open(f, 'r').read()\r\n      File \"/home/vasaxena/Projects/lijupyterhub_trunk/build/li-jupyterhub/venv/lib/python3.6/codecs.py\", line 895, in open\r\n        file = builtins.open(filename, mode, buffering)\r\n    OSError: [Errno 36] File name too long: \"# Certipy\\n\\nA simple python tool for creating certificate authorities and certificates on\\nthe fly.\\n\\n## Introduction\\n\\nCertipy was made to simplify the certificate creation process. To that end,\\nCertipy exposes methods for creating and managing certificate authorities,\\ncertificates, signing and building trust bundles. Behind the scenes Certipy:\\n\\n* Manages records of all certificates it creates\\n  * External certs can be imported and managed by Certipy\\n  * Maintains signing hierarchy\\n* Persists certificates to files with appropriate permissions\\n\\n## Usage\\n\\n### Command line\\n\\nCreating a certificate authority:\\n\\nCertipy defaults to writing certs and certipy.json into a folder called `out`\\nin your current directory.\\n\\n```\\n$ certipy foo\\nFILES {'ca': '', 'cert': 'out/foo/foo.crt', 'key': 'out/foo/foo.key'}\\nIS_CA True\\nSERIAL 0\\nSIGNEES None\\nPARENT_CA\\n```\\n\\nCreating and signing a key-cert pair:\\n\\n```\\n$ certipy bar --ca-name foo\\nFILES {'ca': 'out/foo/foo.crt', 'key': 'out/bar/bar.key', 'cert': 'out/bar/bar.crt'}\\nIS_CA False\\nSERIAL 0\\nSIGNEES None\\nPARENT_CA foo\\n```\\n\\nRemoval:\\n\\n```\\ncertipy --rm bar\\nDeleted:\\nFILES {'ca': 'out/foo/foo.crt', 'key': 'out/bar/bar.key', 'cert': 'out/bar/bar.crt'}\\nIS_CA False\\nSERIAL 0\\nSIGNEES None\\nPARENT_CA foo\\n```\\n\\n### Code\\n\\nCreating a certificate authority:\\n\\n```\\nfrom certipy import Certipy\\n\\ncertipy = Certipy(store_dir='/tmp')\\ncertipy.create_ca('foo')\\nrecord = certipy.get_record('foo')\\n```\\n\\nCreating and signing a key-cert pair:\\n\\n```\\ncertipy.create_signed_pair('bar', 'foo')\\nrecord = certipy.get_record('bar')\\n```\\n\\nCreating trust:\\n\\n```\\ncertipy.create_ca_bundle('ca-bundle.crt')\\n\\n# or to trust specific certs only:\\ncertipy.create_ca_bundle_for_names('ca-bundle.crt', ['bar'])\\n```\\n\\nRemoval:\\n\\n```\\nrecord = certipy.remove_files('bar')\\n```\\n\\nRecords are dicts with the following structure:\\n\\n```\\n{\\n  'serial': 0,\\n  'is_ca': true,\\n  'parent_ca': 'ca_name',\\n  'signees': {\\n    'signee_name': 1\\n  },\\n  'files': {\\n    'key': 'path/to/key.key',\\n    'cert': 'path/to/cert.crt',\\n    'ca': 'path/to/ca.crt',\\n  }\\n}\\n```\\n\\nThe `signees` will be empty for non-CA certificates. The `signees` field\\nis stored as a python `Counter`. These relationships are used to build trust\\nbundles.\\n\\nInformation in Certipy is generally passed around as records which point to\\nactual files. For most `_record` methods, there are generally equivalent\\n`_file` methods that operate on files themselves. The former will only affect\\nrecords in Certipy's store and the latter will affect both (something happens\\nto the file, the record for it should change, too).\\n\\n### Release\\n\\nCertipy is released under BSD license. For more details see the LICENSE file.\\n\\nLLNL-CODE-754897\\n\"\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-pmj2g9co/certipy/\r\n\r\n\r\nCan pypandoc dependency be explicitly included in setup.py?", "performed_via_github_app": null, "score": 1.0}]}