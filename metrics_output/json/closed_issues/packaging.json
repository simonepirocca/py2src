{"total_count": 101, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pypa/packaging/issues/322", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/322/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/322/events", "html_url": "https://github.com/pypa/packaging/issues/322", "id": 657943610, "node_id": "MDU6SXNzdWU2NTc5NDM2MTA=", "number": 322, "title": "Typo in documentation for \"Specifiers\"", "user": {"login": "domdfcoding", "id": 8050853, "node_id": "MDQ6VXNlcjgwNTA4NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8050853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domdfcoding", "html_url": "https://github.com/domdfcoding", "followers_url": "https://api.github.com/users/domdfcoding/followers", "following_url": "https://api.github.com/users/domdfcoding/following{/other_user}", "gists_url": "https://api.github.com/users/domdfcoding/gists{/gist_id}", "starred_url": "https://api.github.com/users/domdfcoding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domdfcoding/subscriptions", "organizations_url": "https://api.github.com/users/domdfcoding/orgs", "repos_url": "https://api.github.com/users/domdfcoding/repos", "events_url": "https://api.github.com/users/domdfcoding/events{/privacy}", "received_events_url": "https://api.github.com/users/domdfcoding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-16T07:45:04Z", "updated_at": "2020-07-17T15:43:50Z", "closed_at": "2020-07-17T15:43:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe documentation for \"Specifiers\" starts as follows:\r\n\r\n> A core requirement of dealing with dependency is the ability to specify what versions of a dependency are acceptable for you.\r\n\r\nTo be grammatically correct it should say:\r\n\r\n> A core requirement of dealing with **dependencies** is the ability to specify what versions of a dependency are acceptable for you.\r\n\r\n\r\nThe docs for \"Markers\" has the correct wording.\r\n\r\n\r\nHappy to submit a PR if you'd like\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/315", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/315/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/315/events", "html_url": "https://github.com/pypa/packaging/issues/315", "id": 636837906, "node_id": "MDU6SXNzdWU2MzY4Mzc5MDY=", "number": 315, "title": "Pre-release versions not included when specifying version interval", "user": {"login": "andy-maier", "id": 8939758, "node_id": "MDQ6VXNlcjg5Mzk3NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8939758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andy-maier", "html_url": "https://github.com/andy-maier", "followers_url": "https://api.github.com/users/andy-maier/followers", "following_url": "https://api.github.com/users/andy-maier/following{/other_user}", "gists_url": "https://api.github.com/users/andy-maier/gists{/gist_id}", "starred_url": "https://api.github.com/users/andy-maier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andy-maier/subscriptions", "organizations_url": "https://api.github.com/users/andy-maier/orgs", "repos_url": "https://api.github.com/users/andy-maier/repos", "events_url": "https://api.github.com/users/andy-maier/events{/privacy}", "received_events_url": "https://api.github.com/users/andy-maier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-11T08:46:51Z", "updated_at": "2020-06-12T19:46:10Z", "closed_at": "2020-06-12T19:46:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please see https://github.com/pypa/pip/issues/8425 which describes the details. It has been noted that the issue likely should be reported here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/313", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/313/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/313/events", "html_url": "https://github.com/pypa/packaging/issues/313", "id": 634664162, "node_id": "MDU6SXNzdWU2MzQ2NjQxNjI=", "number": 313, "title": "python 2 installs broken with next pyparsing release", "user": {"login": "AlanCoding", "id": 1385596, "node_id": "MDQ6VXNlcjEzODU1OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1385596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlanCoding", "html_url": "https://github.com/AlanCoding", "followers_url": "https://api.github.com/users/AlanCoding/followers", "following_url": "https://api.github.com/users/AlanCoding/following{/other_user}", "gists_url": "https://api.github.com/users/AlanCoding/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlanCoding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlanCoding/subscriptions", "organizations_url": "https://api.github.com/users/AlanCoding/orgs", "repos_url": "https://api.github.com/users/AlanCoding/repos", "events_url": "https://api.github.com/users/AlanCoding/events{/privacy}", "received_events_url": "https://api.github.com/users/AlanCoding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-08T14:26:16Z", "updated_at": "2020-06-22T02:44:00Z", "closed_at": "2020-06-08T20:06:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "On April 5, 2020 your dependency `pyparsing` released version `3.0.0a1` to PyPI\r\n\r\nhttps://pypi.org/project/pyparsing/#history\r\n\r\nYou might have guessed this from the version number, but it dropped python2 support\r\n\r\n```\r\nVersion 2.4.5 - November, 2019\r\n------------------------------\r\n- NOTE: final release compatible with Python 2.x.\r\n```\r\n\r\nThe way I hit this is by trying to do a manual `python setup.py install` of Ansible on a fresh RHEL7 machine. This results in the error:\r\n\r\n```\r\n[2020-05-30T02:29:51.352Z]     Installed /usr/lib/python2.7/site-packages/ansible_base-2.10.0.dev0-py2.7.egg\r\n[2020-05-30T02:29:51.352Z]     Processing dependencies for ansible-base==2.10.0.dev0\r\n[2020-05-30T02:29:51.352Z]     Searching for packaging\r\n[2020-05-30T02:29:51.352Z]     Reading https://pypi.python.org/simple/packaging/\r\n[2020-05-30T02:29:51.352Z]     Best match: packaging 20.4\r\n[2020-05-30T02:29:51.352Z]     Downloading https://files.pythonhosted.org/packages/55/fd/fc1aca9cf51ed2f2c11748fa797370027babd82f87829c7a8e6dbe720145/packaging-20.4.tar.gz#sha256=4357f74f47b9c12db93624a82154e9b120fa8293699949152b22065d556079f8\r\n[2020-05-30T02:29:51.352Z]     Processing packaging-20.4.tar.gz\r\n[2020-05-30T02:29:51.352Z]     Writing /tmp/easy_install-R9Lrlo/packaging-20.4/setup.cfg\r\n[2020-05-30T02:29:51.352Z]     Running packaging-20.4/setup.py -q bdist_egg --dist-dir /tmp/easy_install-R9Lrlo/packaging-20.4/egg-dist-tmp-oofGOu\r\n[2020-05-30T02:29:51.352Z]     Adding packaging 20.4 to easy-install.pth file\r\n[2020-05-30T02:29:51.352Z]   \r\n[2020-05-30T02:29:51.352Z]     Installed /usr/lib/python2.7/site-packages/packaging-20.4-py2.7.egg\r\n[2020-05-30T02:29:51.352Z]     Searching for pyparsing>=2.0.2\r\n[2020-05-30T02:29:51.352Z]     Reading https://pypi.python.org/simple/pyparsing/\r\n[2020-05-30T02:29:51.352Z]     Best match: pyparsing 3.0.0a1\r\n[2020-05-30T02:29:51.352Z]     Downloading https://files.pythonhosted.org/packages/4f/49/f5ef814360ce13ab6eab4e05762ce555ed5bbc169ac941229a3355e9197a/pyparsing-3.0.0a1.tar.gz#sha256=700d17888d441604b0bd51535908dcb297561b040819cccde647a92439db5a2a\r\n[2020-05-30T02:29:51.352Z]     Processing pyparsing-3.0.0a1.tar.gz\r\n[2020-05-30T02:29:51.352Z]     Writing /tmp/easy_install-XgLaMc/pyparsing-3.0.0a1/setup.cfg\r\n[2020-05-30T02:29:51.352Z]     Running pyparsing-3.0.0a1/setup.py -q bdist_egg --dist-dir /tmp/easy_install-XgLaMc/pyparsing-3.0.0a1/egg-dist-tmp-kQzHCn\r\n```\r\n\r\nin stderr\r\n\r\n```\r\n[2020-05-30T02:29:51.053Z]     zip_safe flag not set; analyzing archive contents...\r\n[2020-05-30T02:29:51.053Z]     Traceback (most recent call last):\r\n[2020-05-30T02:29:51.053Z]       File \"setup.py\", line 338, in <module>\r\n[2020-05-30T02:29:51.053Z]         main()\r\n[2020-05-30T02:29:51.053Z]       File \"setup.py\", line 333, in main\r\n[2020-05-30T02:29:51.053Z]         setup(**setup_params)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib64/python2.7/distutils/core.py\", line 152, in setup\r\n[2020-05-30T02:29:51.053Z]         dist.run_commands()\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib64/python2.7/distutils/dist.py\", line 953, in run_commands\r\n[2020-05-30T02:29:51.053Z]         self.run_command(cmd)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib64/python2.7/distutils/dist.py\", line 972, in run_command\r\n[2020-05-30T02:29:51.053Z]         cmd_obj.run()\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/command/install.py\", line 73, in run\r\n[2020-05-30T02:29:51.053Z]         self.do_egg_install()\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/command/install.py\", line 101, in do_egg_install\r\n[2020-05-30T02:29:51.053Z]         cmd.run()\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 380, in run\r\n[2020-05-30T02:29:51.053Z]         self.easy_install(spec, not self.no_deps)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 604, in easy_install\r\n[2020-05-30T02:29:51.053Z]         return self.install_item(None, spec, tmpdir, deps, True)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 655, in install_item\r\n[2020-05-30T02:29:51.053Z]         self.process_distribution(spec, dist, deps)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 706, in process_distribution\r\n[2020-05-30T02:29:51.053Z]         [requirement], self.local_index, self.easy_install\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/pkg_resources.py\", line 618, in resolve\r\n[2020-05-30T02:29:51.053Z]         dist = best[req.key] = env.best_match(req, self, installer)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/pkg_resources.py\", line 862, in best_match\r\n[2020-05-30T02:29:51.053Z]         return self.obtain(req, installer) # try and download/install\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/pkg_resources.py\", line 874, in obtain\r\n[2020-05-30T02:29:51.053Z]         return installer(requirement)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 623, in easy_install\r\n[2020-05-30T02:29:51.053Z]         return self.install_item(spec, dist.location, tmpdir, deps)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 653, in install_item\r\n[2020-05-30T02:29:51.053Z]         dists = self.install_eggs(spec, download, tmpdir)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 849, in install_eggs\r\n[2020-05-30T02:29:51.053Z]         return self.build_and_install(setup_script, setup_base)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 1130, in build_and_install\r\n[2020-05-30T02:29:51.053Z]         self.run_setup(setup_script, setup_base, args)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/command/easy_install.py\", line 1115, in run_setup\r\n[2020-05-30T02:29:51.053Z]         run_setup(setup_script, args)\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/sandbox.py\", line 69, in run_setup\r\n[2020-05-30T02:29:51.053Z]         lambda: execfile(\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/sandbox.py\", line 120, in run\r\n[2020-05-30T02:29:51.053Z]         return func()\r\n[2020-05-30T02:29:51.053Z]       File \"/usr/lib/python2.7/site-packages/setuptools/sandbox.py\", line 71, in <lambda>\r\n[2020-05-30T02:29:51.053Z]         {'__file__':setup_script, '__name__':'__main__'}\r\n[2020-05-30T02:29:51.053Z]       File \"setup.py\", line 10, in <module>\r\n[2020-05-30T02:29:51.053Z]   \r\n[2020-05-30T02:29:51.053Z]       File \"/tmp/easy_install-XgLaMc/pyparsing-3.0.0a1/pyparsing/__init__.py\", line 104, in <module>\r\n[2020-05-30T02:29:51.053Z]       File \"/tmp/easy_install-XgLaMc/pyparsing-3.0.0a1/pyparsing/core.py\", line 166\r\n[2020-05-30T02:29:51.053Z]         nonlocal found_arity, limit\r\n[2020-05-30T02:29:51.053Z]                            ^\r\n[2020-05-30T02:29:51.053Z]     SyntaxError: invalid syntax\r\n```\r\n\r\nThe requirements for the `ansible` package are:\r\n\r\nhttps://github.com/ansible/ansible/blob/devel/requirements.txt\r\n\r\n```\r\n# Note: this requirements.txt file is used to specify what dependencies are\r\n# needed to make the package run rather than for deployment of a tested set of\r\n# packages.  Thus, this should be the loosest set possible (only required\r\n# packages, not optional ones, and with the widest range of versions that could\r\n# be suitable)\r\njinja2\r\nPyYAML\r\ncryptography\r\npackaging\r\n```\r\n\r\nThis is passed into its `setup.py` file `install_requires` option, mostly as-is (it might remove the cryptography dependency but nothing that would matter).\r\n\r\nIt's totally fine if you want to remove python 2 support #305, but it would be nice to have a final python 2 version that will keep working, and the lack of _maximum_ version pins of dependencies is going to create a big problem for anything trying to keep an environment on life support still working.\r\n\r\nExactly how to do the pin is tricky, the minimum pin is:\r\n\r\nhttps://github.com/pypa/packaging/blob/59e14881910bf836c43b7d319ea08ab321ccfb39/setup.py#L52\r\n\r\nYou could add an entry with `pyparsing<3.0; python_version < '3.0'`. That won't work with all versions of pip and setuptools, or you could [add code](https://hynek.me/articles/conditional-python-dependencies/) to handle more cases. These decisions are why I am filing an issue and not creating a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/309", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/309/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/309/events", "html_url": "https://github.com/pypa/packaging/issues/309", "id": 623850436, "node_id": "MDU6SXNzdWU2MjM4NTA0MzY=", "number": 309, "title": "Latest version", "user": {"login": "0xFF1E071F", "id": 55749371, "node_id": "MDQ6VXNlcjU1NzQ5Mzcx", "avatar_url": "https://avatars1.githubusercontent.com/u/55749371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xFF1E071F", "html_url": "https://github.com/0xFF1E071F", "followers_url": "https://api.github.com/users/0xFF1E071F/followers", "following_url": "https://api.github.com/users/0xFF1E071F/following{/other_user}", "gists_url": "https://api.github.com/users/0xFF1E071F/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xFF1E071F/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xFF1E071F/subscriptions", "organizations_url": "https://api.github.com/users/0xFF1E071F/orgs", "repos_url": "https://api.github.com/users/0xFF1E071F/repos", "events_url": "https://api.github.com/users/0xFF1E071F/events{/privacy}", "received_events_url": "https://api.github.com/users/0xFF1E071F/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-24T12:00:46Z", "updated_at": "2020-05-26T11:42:14Z", "closed_at": "2020-05-26T11:42:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\nWhat is the latest version right now?\r\nYou tagged 20.1 on github but pypi.org show 20.4 as latest?\r\n\r\nThank you =)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/307", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/307/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/307/events", "html_url": "https://github.com/pypa/packaging/issues/307", "id": 623264614, "node_id": "MDU6SXNzdWU2MjMyNjQ2MTQ=", "number": 307, "title": "A specifier of \"==*\" is not handled properly", "user": {"login": "pfmoore", "id": 1110419, "node_id": "MDQ6VXNlcjExMTA0MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1110419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfmoore", "html_url": "https://github.com/pfmoore", "followers_url": "https://api.github.com/users/pfmoore/followers", "following_url": "https://api.github.com/users/pfmoore/following{/other_user}", "gists_url": "https://api.github.com/users/pfmoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfmoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfmoore/subscriptions", "organizations_url": "https://api.github.com/users/pfmoore/orgs", "repos_url": "https://api.github.com/users/pfmoore/repos", "events_url": "https://api.github.com/users/pfmoore/events{/privacy}", "received_events_url": "https://api.github.com/users/pfmoore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922666, "node_id": "MDU6TGFiZWw5OTkyMjY2Ng==", "url": "https://api.github.com/repos/pypa/packaging/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 1934954468, "node_id": "MDU6TGFiZWwxOTM0OTU0NDY4", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.specifiers", "name": "packaging.specifiers", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-22T14:54:23Z", "updated_at": "2020-05-26T08:15:15Z", "closed_at": "2020-05-26T08:05:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is somewhat useless, and I'm not *entirely* sure it's PEP 400 conformant, but the following fails:\r\n\r\n```\r\n>>> from packaging.specifiers import SpecifierSet\r\n>>> from packaging.version import Version\r\n>>> s = SpecifierSet(\"==*\")\r\n>>> s.contains(Version(\"1.0.0\"))\r\nFalse\r\n```\r\n\r\nThis form of specifier is used in pip's test suite [here](https://github.com/pypa/pip/blob/20.1.1/tests/functional/test_install.py#L1498). I'll fix the test by using a different specifier, but I think that `packaging` should either reject the specifier as invalid, or treat it as \"always matching\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/302", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/302/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/302/events", "html_url": "https://github.com/pypa/packaging/issues/302", "id": 616554365, "node_id": "MDU6SXNzdWU2MTY1NTQzNjU=", "number": 302, "title": "Version comparison is slow due to useless function calls", "user": {"login": "gotcha", "id": 105204, "node_id": "MDQ6VXNlcjEwNTIwNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/105204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotcha", "html_url": "https://github.com/gotcha", "followers_url": "https://api.github.com/users/gotcha/followers", "following_url": "https://api.github.com/users/gotcha/following{/other_user}", "gists_url": "https://api.github.com/users/gotcha/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotcha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotcha/subscriptions", "organizations_url": "https://api.github.com/users/gotcha/orgs", "repos_url": "https://api.github.com/users/gotcha/repos", "events_url": "https://api.github.com/users/gotcha/events{/privacy}", "received_events_url": "https://api.github.com/users/gotcha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}, {"id": 1870887322, "node_id": "MDU6TGFiZWwxODcwODg3MzIy", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.version", "name": "packaging.version", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T10:44:41Z", "updated_at": "2020-07-15T21:33:56Z", "closed_at": "2020-07-15T21:33:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While profiling the simple code below (provided for https://github.com/pypa/setuptools/issues/2089), I find that version comparison goes through two function calls that can be easily removed.\r\n\r\n    import pkg_resources\r\n    import setuptools.package_index\r\n    \r\n    pki = setuptools.package_index.PackageIndex()\r\n    req = pkg_resources.Requirement.parse('setuptools')\r\n    pki.obtain(req)\r\n\r\nIn this example, `version.__eq__` is called more than 1.3 million times.\r\n\r\nIn `version.py`, I find the following code:\r\n\r\n    class _BaseVersion(object):\r\n    ...\r\n        def __eq__(self, other):\r\n             return self._compare(other, lambda s, o: s == o)\r\n    ...\r\n        def _compare(self, other, method):\r\n            if not isinstance(other, _BaseVersion):\r\n                return NotImplemented\r\n            return method(self._key, other._key)\r\n\r\nThis adds a call to `_compare` and a call to the lambda function.\r\n\r\nTurning this code into the following simpler code makes a real difference:\r\n\r\n    class _BaseVersion(object):\r\n    ...\r\n        def __eq__(self, other):\r\n            if not isinstance(other, _BaseVersion):\r\n                return NotImplemented\r\n            return self._key == other._key\r\n\r\n    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/300", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/300/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/300/events", "html_url": "https://github.com/pypa/packaging/issues/300", "id": 615804687, "node_id": "MDU6SXNzdWU2MTU4MDQ2ODc=", "number": 300, "title": "Lower or equal comparison inconsistent when local version is present", "user": {"login": "lkollar", "id": 791741, "node_id": "MDQ6VXNlcjc5MTc0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/791741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkollar", "html_url": "https://github.com/lkollar", "followers_url": "https://api.github.com/users/lkollar/followers", "following_url": "https://api.github.com/users/lkollar/following{/other_user}", "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions", "organizations_url": "https://api.github.com/users/lkollar/orgs", "repos_url": "https://api.github.com/users/lkollar/repos", "events_url": "https://api.github.com/users/lkollar/events{/privacy}", "received_events_url": "https://api.github.com/users/lkollar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}, {"id": 1870887322, "node_id": "MDU6TGFiZWwxODcwODg3MzIy", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.version", "name": "packaging.version", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-11T11:17:33Z", "updated_at": "2020-05-13T09:51:12Z", "closed_at": "2020-05-13T09:51:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the version number contains a local version suffix, the `<=` comparison does not evaluate to True even though the version numbers are identical in the `version` and `SpecifierSet` objects.\r\n\r\nMinimal reproducer:\r\n```python\r\nfrom packaging import version\r\nfrom packaging.specifiers import SpecifierSet\r\n\r\nversion.parse('1.0.0+1') in SpecifierSet(\"==1.0.0\") # True\r\nversion.parse('1.0.0+1') in SpecifierSet(\">=1.0.0\") #\u00a0True\r\nversion.parse('1.0.0+1') in SpecifierSet(\"<=1.0.0\") #\u00a0False\r\n```\r\n\r\nI ran into this through `pkg_resources.Requirement` while putting together a resolver based on `resolvelib`, using `pkg_resources` as I started seeing cases where a package with local version identifier (which should satisfy the requirement) ends ends up being ignored.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/299", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/299/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/299/events", "html_url": "https://github.com/pypa/packaging/issues/299", "id": 611168120, "node_id": "MDU6SXNzdWU2MTExNjgxMjA=", "number": 299, "title": "version wrongly compares '1.2' and '1.2_5'", "user": {"login": "LubosKolouch", "id": 4145223, "node_id": "MDQ6VXNlcjQxNDUyMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4145223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LubosKolouch", "html_url": "https://github.com/LubosKolouch", "followers_url": "https://api.github.com/users/LubosKolouch/followers", "following_url": "https://api.github.com/users/LubosKolouch/following{/other_user}", "gists_url": "https://api.github.com/users/LubosKolouch/gists{/gist_id}", "starred_url": "https://api.github.com/users/LubosKolouch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LubosKolouch/subscriptions", "organizations_url": "https://api.github.com/users/LubosKolouch/orgs", "repos_url": "https://api.github.com/users/LubosKolouch/repos", "events_url": "https://api.github.com/users/LubosKolouch/events{/privacy}", "received_events_url": "https://api.github.com/users/LubosKolouch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1870887322, "node_id": "MDU6TGFiZWwxODcwODg3MzIy", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.version", "name": "packaging.version", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T11:47:31Z", "updated_at": "2020-05-02T17:43:02Z", "closed_at": "2020-05-02T17:43:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\ndef compare_versions(ver_1, ver_2):\r\n    \"\"\" Compare versions and return the result\"\"\"\r\n\r\n    v_1 = version.parse(ver_1)\r\n    v_2 = version.parse(ver_2)\r\n\r\n    if v_1 > v_2:\r\n        return 1\r\n\r\n    if v_1 < v_2:\r\n        return -1\r\n\r\n    return 0\r\n\r\n\r\nassert compare_versions('0.1', '1.1') == -1\r\nassert compare_versions('2.0', '1.2') == 1\r\nassert compare_versions('1.2', '1.2_5') == -1\r\nassert compare_versions('1.2.1', '1.2_1') == 1\r\nassert compare_versions('1.2.1', '1.2.1') == 0\r\n```\r\n```\r\nTraceback (most recent call last):\r\n  File \"ch-1.py\", line 25, in <module>\r\n    assert compare_versions('1.2', '1.2_5') == -1\r\nAssertionError\r\n```\r\n\r\nObviously, 1.2 should be greater than development 1.2_5 alpha version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/295", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/295/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/295/events", "html_url": "https://github.com/pypa/packaging/issues/295", "id": 600416089, "node_id": "MDU6SXNzdWU2MDA0MTYwODk=", "number": 295, "title": "Release 20.4", "user": {"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-15T16:08:41Z", "updated_at": "2020-05-19T07:33:24Z", "closed_at": "2020-05-19T07:33:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should probably make one at some point, that includes #292. :3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/290", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/290/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/290/events", "html_url": "https://github.com/pypa/packaging/issues/290", "id": 594452428, "node_id": "MDU6SXNzdWU1OTQ0NTI0Mjg=", "number": 290, "title": "Improve `canonicalize_name` safety with type hints", "user": {"login": "uranusjr", "id": 605277, "node_id": "MDQ6VXNlcjYwNTI3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/605277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uranusjr", "html_url": "https://github.com/uranusjr", "followers_url": "https://api.github.com/users/uranusjr/followers", "following_url": "https://api.github.com/users/uranusjr/following{/other_user}", "gists_url": "https://api.github.com/users/uranusjr/gists{/gist_id}", "starred_url": "https://api.github.com/users/uranusjr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uranusjr/subscriptions", "organizations_url": "https://api.github.com/users/uranusjr/orgs", "repos_url": "https://api.github.com/users/uranusjr/repos", "events_url": "https://api.github.com/users/uranusjr/events{/privacy}", "received_events_url": "https://api.github.com/users/uranusjr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-05T13:20:38Z", "updated_at": "2020-04-08T12:54:10Z", "closed_at": "2020-04-08T12:54:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Quoting from pypa/pip#7974:\r\n\r\n> There's no clear picture in pip's internal code of when a project name is correctly normalised. As a result, code tends to call `canonicalize_name()` \u201cjust in case.\u201d\r\n> [\u2026]\r\n> It would be nice if we could use type checks to enforce normalisation hygene, but apparently MyPy treats type aliases as identical, so doesn't support this.\r\n\r\nAfter some investigation, I found that `typing.NewType` seems to be the strong-typed variant to type aliasing. `canonicalize_name` return a `CanonicalName` that\u2019s defined as `NewType(\"CanonicalName\", str)`, and the callee can use this new type to ensure the name is correctly canonicalised when needed.\r\n\r\nI don\u2019t think this would cause much disruption to depending packages, since they are likely to already type-hint the surrounding interface with `str`, which the new type automatically downgrades to. They can choose to introduce this new type if they want to. The runtime behaviour would be entirely unchanged.\r\n\r\nThe new type can also be alternatively named `NormalizedName`, which would match the terminology used in various PEPs, but could be confusing since the utility function is named differently.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/287", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/287/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/287/events", "html_url": "https://github.com/pypa/packaging/issues/287", "id": 591190317, "node_id": "MDU6SXNzdWU1OTExOTAzMTc=", "number": 287, "title": "BSD Licesne Clarification", "user": {"login": "CleanHit", "id": 16132350, "node_id": "MDQ6VXNlcjE2MTMyMzUw", "avatar_url": "https://avatars0.githubusercontent.com/u/16132350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanHit", "html_url": "https://github.com/CleanHit", "followers_url": "https://api.github.com/users/CleanHit/followers", "following_url": "https://api.github.com/users/CleanHit/following{/other_user}", "gists_url": "https://api.github.com/users/CleanHit/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanHit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanHit/subscriptions", "organizations_url": "https://api.github.com/users/CleanHit/orgs", "repos_url": "https://api.github.com/users/CleanHit/repos", "events_url": "https://api.github.com/users/CleanHit/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanHit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-31T15:11:37Z", "updated_at": "2020-04-02T17:03:42Z", "closed_at": "2020-04-02T17:03:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Which of the BSD Licenses described in this [SPDX](https://github.com/spdx/license-list-data/tree/master/json/details) repository is actually being used?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/286", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/286/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/286/events", "html_url": "https://github.com/pypa/packaging/issues/286", "id": 589726039, "node_id": "MDU6SXNzdWU1ODk3MjYwMzk=", "number": 286, "title": "docs and lint command for nox are not working", "user": {"login": "deveshks", "id": 13155849, "node_id": "MDQ6VXNlcjEzMTU1ODQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/13155849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deveshks", "html_url": "https://github.com/deveshks", "followers_url": "https://api.github.com/users/deveshks/followers", "following_url": "https://api.github.com/users/deveshks/following{/other_user}", "gists_url": "https://api.github.com/users/deveshks/gists{/gist_id}", "starred_url": "https://api.github.com/users/deveshks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deveshks/subscriptions", "organizations_url": "https://api.github.com/users/deveshks/orgs", "repos_url": "https://api.github.com/users/deveshks/repos", "events_url": "https://api.github.com/users/deveshks/events{/privacy}", "received_events_url": "https://api.github.com/users/deveshks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-29T05:55:16Z", "updated_at": "2020-03-30T20:02:50Z", "closed_at": "2020-03-30T20:02:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The nox commands listed at https://packaging.pypa.io/en/latest/development/getting-started/ for `Running tests` and `Running linters`are not working and failing with `Session lint skipped: Python interpreter 3.8 not found.`\r\n\r\n**System Information:**\r\n\r\nOS: Mac OSX 10.15.4\r\nPython versions installed (via pyenv)\r\n\r\n```\r\n$ pyenv versions\r\n  system\r\n  3.4.9\r\n* 3.7.7 (set by ~/.pyenv/version)\r\n```\r\n\r\n**Steps to reproduce:**\r\n\r\n1. Git clone packaging repo\r\n2. Create a virtualenv \r\n\r\n```\r\n$ cd packaging/\r\n$ python --version\r\nPython 3.7.7\r\n$ python -m venv env\r\n$ source env/bin/activate\r\n```\r\n\r\n3. Install nox in that virtualenv\r\n4. Both `nox lint` and `nox docs` command fail as follows\r\n\r\n```\r\n(env) $ nox -s lint\r\nnox > Running session lint\r\nnox > Session lint skipped: Python interpreter 3.8 not found.\r\n(env) $ nox -s docs\r\nnox > Running session docs\r\nnox > Session docs skipped: Python interpreter 3.8 not found.\r\n```\r\n\r\nI do see that in the Getting started page, it is noted that `You may not have all the required Python versions installed, in which case you will see one or more InterpreterNotFound errors.`, which I am seeing, but that shouldn't stop me from running `lint` or `docs`.\r\n\r\nI also glanced through the source code and found that both \r\n\r\nhttps://github.com/pypa/packaging/blob/ed0a58f0dacf08c871ce7b687558d3891de75ca9/noxfile.py#L40\r\n\r\nand\r\n\r\nhttps://github.com/pypa/packaging/blob/ed0a58f0dacf08c871ce7b687558d3891de75ca9/noxfile.py#L52\r\n\r\nare only specifying `3.8` as session, unlike tests which include other python versions too. Maybe that's where the problem lies?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/282", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/282/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/282/events", "html_url": "https://github.com/pypa/packaging/issues/282", "id": 587950717, "node_id": "MDU6SXNzdWU1ODc5NTA3MTc=", "number": 282, "title": "Specifier equivalence check does not consider version equivalence", "user": {"login": "uranusjr", "id": 605277, "node_id": "MDQ6VXNlcjYwNTI3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/605277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uranusjr", "html_url": "https://github.com/uranusjr", "followers_url": "https://api.github.com/users/uranusjr/followers", "following_url": "https://api.github.com/users/uranusjr/following{/other_user}", "gists_url": "https://api.github.com/users/uranusjr/gists{/gist_id}", "starred_url": "https://api.github.com/users/uranusjr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uranusjr/subscriptions", "organizations_url": "https://api.github.com/users/uranusjr/orgs", "repos_url": "https://api.github.com/users/uranusjr/repos", "events_url": "https://api.github.com/users/uranusjr/events{/privacy}", "received_events_url": "https://api.github.com/users/uranusjr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}, {"id": 1934954468, "node_id": "MDU6TGFiZWwxOTM0OTU0NDY4", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.specifiers", "name": "packaging.specifiers", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-25T19:52:32Z", "updated_at": "2020-03-26T18:52:41Z", "closed_at": "2020-03-26T18:52:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Orginally reported as pypa/pip#7900.\r\n\r\nCurrently the specifier equivalence check compares the contained version as a string. `packaging.version.parse` should be used instead to ensure equivalent version strings are considered equal.\r\n\r\nMinimal reproduction:\r\n\r\n```pycon\r\n>>> from packaging.specifiers import SpecifierSet\r\n>>> SpecifierSet(\"==2.8.0\") == SpecifierSet(\"==2.8.0\")\r\nTrue\r\n>>> SpecifierSet(\"==2.8.0\") == SpecifierSet(\"==2.8\")\r\nFalse\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/280", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/280/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/280/events", "html_url": "https://github.com/pypa/packaging/issues/280", "id": 584937660, "node_id": "MDU6SXNzdWU1ODQ5Mzc2NjA=", "number": 280, "title": "Support PEP 600", "user": {"login": "mattip", "id": 823911, "node_id": "MDQ6VXNlcjgyMzkxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/823911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattip", "html_url": "https://github.com/mattip", "followers_url": "https://api.github.com/users/mattip/followers", "following_url": "https://api.github.com/users/mattip/following{/other_user}", "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattip/subscriptions", "organizations_url": "https://api.github.com/users/mattip/orgs", "repos_url": "https://api.github.com/users/mattip/repos", "events_url": "https://api.github.com/users/mattip/events{/privacy}", "received_events_url": "https://api.github.com/users/mattip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}, {"id": 1672986369, "node_id": "MDU6TGFiZWwxNjcyOTg2MzY5", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.tags", "name": "packaging.tags", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-20T09:20:17Z", "updated_at": "2020-05-28T14:55:10Z", "closed_at": "2020-05-28T14:40:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am interested in getting [PEP 600](https://www.python.org/dev/peps/pep-0600/) and general `manylinux_X_Y` support out, since it turns out `manylinux2014` limits us to `glibc2.17`, and NumPy has found that many trigonometric functions are inaccurate in that glibc. Also, the aarch64 gcc compiler in manylinux2014 has a bug that was fixed upstream but  it seems will take quite some time to percolate out into the image. xref numpy/numpy#15763, numpy/numpy#7518, pypa/manylinux#494.\r\n\r\nI am not sure how to do this and still respect the [Package Installers](https://www.python.org/dev/peps/pep-0600/#package-installers) section of the PEP. Any thoughts, especially in light of PR gh-262?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/279", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/279/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/279/events", "html_url": "https://github.com/pypa/packaging/issues/279", "id": 583900217, "node_id": "MDU6SXNzdWU1ODM5MDAyMTc=", "number": 279, "title": "./tests/hello-world-invalid-class: Heuristics.Broken.Executable FOUND", "user": {"login": "slmi", "id": 11402915, "node_id": "MDQ6VXNlcjExNDAyOTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/11402915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slmi", "html_url": "https://github.com/slmi", "followers_url": "https://api.github.com/users/slmi/followers", "following_url": "https://api.github.com/users/slmi/following{/other_user}", "gists_url": "https://api.github.com/users/slmi/gists{/gist_id}", "starred_url": "https://api.github.com/users/slmi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slmi/subscriptions", "organizations_url": "https://api.github.com/users/slmi/orgs", "repos_url": "https://api.github.com/users/slmi/repos", "events_url": "https://api.github.com/users/slmi/events{/privacy}", "received_events_url": "https://api.github.com/users/slmi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-18T17:45:37Z", "updated_at": "2020-03-19T15:22:41Z", "closed_at": "2020-03-19T15:22:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nclamscan -ir packaging.git/\r\npackaging.git/tests/hello-world-invalid-class: Heuristics.Broken.Executable FOUND\r\n\r\n----------- SCAN SUMMARY -----------\r\nKnown viruses: 6779666\r\nEngine version: 0.102.2\r\nScanned directories: 25\r\nScanned files: 94\r\nInfected files: 1\r\nData scanned: 1.63 MB\r\nData read: 0.84 MB (ratio 1.95:1)\r\nTime: 13.676 sec (0 m 13 s)\r\n\r\n\r\nImpacted version: >=20", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/278", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/278/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/278/events", "html_url": "https://github.com/pypa/packaging/issues/278", "id": 576705837, "node_id": "MDU6SXNzdWU1NzY3MDU4Mzc=", "number": 278, "title": "Add docstrings to Tag and parse_tag() in packaging.tags", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1601188132, "node_id": "MDU6TGFiZWwxNjAxMTg4MTMy", "url": "https://api.github.com/repos/pypa/packaging/labels/documentation", "name": "documentation", "color": "b8d626", "default": true, "description": ""}, {"id": 1672986369, "node_id": "MDU6TGFiZWwxNjcyOTg2MzY5", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.tags", "name": "packaging.tags", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-06T05:22:03Z", "updated_at": "2020-03-23T01:21:03Z", "closed_at": "2020-03-23T01:21:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Both `packaging.tags.Tag` and `packaging.tags.parse_tag()` lack docstrings which makes checking what the things do in the REPL a bit hard. \ud83d\ude09 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/277", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/277/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/277/events", "html_url": "https://github.com/pypa/packaging/issues/277", "id": 574884064, "node_id": "MDU6SXNzdWU1NzQ4ODQwNjQ=", "number": 277, "title": "Dev versions not contained in final release specifiers", "user": {"login": "YakDriver", "id": 31492422, "node_id": "MDQ6VXNlcjMxNDkyNDIy", "avatar_url": "https://avatars0.githubusercontent.com/u/31492422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YakDriver", "html_url": "https://github.com/YakDriver", "followers_url": "https://api.github.com/users/YakDriver/followers", "following_url": "https://api.github.com/users/YakDriver/following{/other_user}", "gists_url": "https://api.github.com/users/YakDriver/gists{/gist_id}", "starred_url": "https://api.github.com/users/YakDriver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YakDriver/subscriptions", "organizations_url": "https://api.github.com/users/YakDriver/orgs", "repos_url": "https://api.github.com/users/YakDriver/repos", "events_url": "https://api.github.com/users/YakDriver/events{/privacy}", "received_events_url": "https://api.github.com/users/YakDriver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-03T19:18:42Z", "updated_at": "2020-03-04T21:53:36Z", "closed_at": "2020-03-04T21:53:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "This behavior seems strange to me. Am I doing this wrong?\r\n\r\n```python\r\nfrom packaging.specifiers import SpecifierSet\r\nfrom packaging.version import Version\r\n\r\nSpecifierSet('>=0.0').contains(Version('1.0'))     # True - expected\r\nSpecifierSet('>=0.dev0').contains(Version('1.0'))   # True - expected\r\nSpecifierSet('>=0.0').contains(Version('1.0.dev0'))  # False - what?\r\nSpecifierSet('>=0.0').contains(Version('99.9.9.dev0'))   # False - what??\r\n```\r\n\r\nTested on:\r\nPython 3.7.6\r\npackaging 20.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/276", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/276/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/276/events", "html_url": "https://github.com/pypa/packaging/issues/276", "id": 570811364, "node_id": "MDU6SXNzdWU1NzA4MTEzNjQ=", "number": 276, "title": "Document major, minor, and micro properties on Version", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1601188132, "node_id": "MDU6TGFiZWwxNjAxMTg4MTMy", "url": "https://api.github.com/repos/pypa/packaging/labels/documentation", "name": "documentation", "color": "b8d626", "default": true, "description": ""}, {"id": 1870887322, "node_id": "MDU6TGFiZWwxODcwODg3MzIy", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.version", "name": "packaging.version", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-25T20:26:30Z", "updated_at": "2020-04-02T20:07:28Z", "closed_at": "2020-04-02T20:07:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/pypa/packaging/blob/318a0347665fb0990ed33f00e0434615ece5ea3a/packaging/version.py#L404-L417", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/272", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/272/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/272/events", "html_url": "https://github.com/pypa/packaging/issues/272", "id": 562874109, "node_id": "MDU6SXNzdWU1NjI4NzQxMDk=", "number": 272, "title": "Release version 20.2?", "user": {"login": "xuhdev", "id": 325476, "node_id": "MDQ6VXNlcjMyNTQ3Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/325476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xuhdev", "html_url": "https://github.com/xuhdev", "followers_url": "https://api.github.com/users/xuhdev/followers", "following_url": "https://api.github.com/users/xuhdev/following{/other_user}", "gists_url": "https://api.github.com/users/xuhdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/xuhdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xuhdev/subscriptions", "organizations_url": "https://api.github.com/users/xuhdev/orgs", "repos_url": "https://api.github.com/users/xuhdev/repos", "events_url": "https://api.github.com/users/xuhdev/events{/privacy}", "received_events_url": "https://api.github.com/users/xuhdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-02-10T22:45:04Z", "updated_at": "2020-03-10T18:47:12Z", "closed_at": "2020-03-05T07:39:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Could you make a bugfix release? The bug of https://github.com/pypa/packaging/pull/234 has been negatively impacting a lot of (at least our) projects that run on Raspberry Pi and rely on Travis for CI. Thank you in advance.\r\n\r\ncc @bdwyer2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/268", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/268/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/268/events", "html_url": "https://github.com/pypa/packaging/issues/268", "id": 558603681, "node_id": "MDU6SXNzdWU1NTg2MDM2ODE=", "number": 268, "title": "Try running tests in GitHub Actions using nox", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-02-01T21:54:47Z", "updated_at": "2020-02-05T09:56:50Z", "closed_at": "2020-02-05T09:56:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I _think_ if the [\"test\" GitHub Action](https://github.com/pypa/packaging/blob/master/.github/workflows/test.yml) was updated to run nox via `python -m nox --session test-${{ matrix.python_version }}` we could then simplify that entire thing to use nox. We could then also merge the two jobs in that file as the noxfile already does the right thing for PyPy vs. CPython.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/261", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/261/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/261/events", "html_url": "https://github.com/pypa/packaging/issues/261", "id": 555051801, "node_id": "MDU6SXNzdWU1NTUwNTE4MDE=", "number": 261, "title": "cp3-abi3-<platform> missing from cpython_tags()", "user": {"login": "alexFickle", "id": 20073418, "node_id": "MDQ6VXNlcjIwMDczNDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/20073418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexFickle", "html_url": "https://github.com/alexFickle", "followers_url": "https://api.github.com/users/alexFickle/followers", "following_url": "https://api.github.com/users/alexFickle/following{/other_user}", "gists_url": "https://api.github.com/users/alexFickle/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexFickle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexFickle/subscriptions", "organizations_url": "https://api.github.com/users/alexFickle/orgs", "repos_url": "https://api.github.com/users/alexFickle/repos", "events_url": "https://api.github.com/users/alexFickle/events{/privacy}", "received_events_url": "https://api.github.com/users/alexFickle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}, {"id": 1672986369, "node_id": "MDU6TGFiZWwxNjcyOTg2MzY5", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.tags", "name": "packaging.tags", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-25T06:51:56Z", "updated_at": "2020-01-30T20:59:26Z", "closed_at": "2020-01-30T04:19:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "packaging.tags.cpython_tags() does not contain any tags that start with just cp3.  cp3-abi3-\\<platform\\> is used as an example in PEP 425.\r\n\r\nReplication:\r\n```python\r\nimport packaging.tags\r\nprint(*packaging.tags.cpython_tags())\r\n```\r\n\r\nOutput with cpython 3.7.0 win32 and version 20.1 of packaging:\r\n```\r\ncp37-cp37m-win32 cp37-abi3-win32 cp37-none-win32 cp36-abi3-win32 cp35-abi3-win32 cp34-abi3-win32 cp33-abi3-win32 cp32-abi3-win32\r\n```\r\n\r\n\r\nSee related pip issue: https://github.com/pypa/pip/issues/7637", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/260", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/260/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/260/events", "html_url": "https://github.com/pypa/packaging/issues/260", "id": 554986266, "node_id": "MDU6SXNzdWU1NTQ5ODYyNjY=", "number": 260, "title": "missing changelog entry for 20.1", "user": {"login": "ewdurbin", "id": 1200832, "node_id": "MDQ6VXNlcjEyMDA4MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1200832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ewdurbin", "html_url": "https://github.com/ewdurbin", "followers_url": "https://api.github.com/users/ewdurbin/followers", "following_url": "https://api.github.com/users/ewdurbin/following{/other_user}", "gists_url": "https://api.github.com/users/ewdurbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ewdurbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ewdurbin/subscriptions", "organizations_url": "https://api.github.com/users/ewdurbin/orgs", "repos_url": "https://api.github.com/users/ewdurbin/repos", "events_url": "https://api.github.com/users/ewdurbin/events{/privacy}", "received_events_url": "https://api.github.com/users/ewdurbin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-24T22:32:54Z", "updated_at": "2020-01-25T16:07:38Z", "closed_at": "2020-01-25T15:58:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "While reviewing a [dependabot upgrade for warehouse](https://github.com/pypa/warehouse/pull/7299), I noticed that it reported:\r\n\r\n<img width=\"486\" alt=\"Screen Shot 2020-01-24 at 5 31 03 PM\" src=\"https://user-images.githubusercontent.com/1200832/73108838-69a82100-3ecf-11ea-9fb5-e8b1ce502f0d.png\">\r\n\r\nThere appears to be some helpful information on the GitHub release though, which should probably be reflected in the changelog: https://github.com/pypa/packaging/blob/master/CHANGELOG.rst", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/257", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/257/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/257/events", "html_url": "https://github.com/pypa/packaging/issues/257", "id": 553025729, "node_id": "MDU6SXNzdWU1NTMwMjU3Mjk=", "number": 257, "title": "packaging.tags.compatible_tags is not re-creating a new iterator", "user": {"login": "jeroendecroos", "id": 8101323, "node_id": "MDQ6VXNlcjgxMDEzMjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8101323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeroendecroos", "html_url": "https://github.com/jeroendecroos", "followers_url": "https://api.github.com/users/jeroendecroos/followers", "following_url": "https://api.github.com/users/jeroendecroos/following{/other_user}", "gists_url": "https://api.github.com/users/jeroendecroos/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeroendecroos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeroendecroos/subscriptions", "organizations_url": "https://api.github.com/users/jeroendecroos/orgs", "repos_url": "https://api.github.com/users/jeroendecroos/repos", "events_url": "https://api.github.com/users/jeroendecroos/events{/privacy}", "received_events_url": "https://api.github.com/users/jeroendecroos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-21T17:33:26Z", "updated_at": "2020-01-21T22:47:33Z", "closed_at": "2020-01-21T22:47:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With the release of pip==20.0.1 a problem was observed as described here: https://github.com/pypa/pip/issues/7626\r\n\r\nThe problem was tracked back to packaging.tags.compatible_tags\r\n\r\nWhen no iterator is given for parameter platforms, an iterator is initialized:\r\nhttps://github.com/pypa/packaging/blob/e664cdd5c82b706ba4c5368477c8d7081fd99456/packaging/tags.py#L332\r\n\r\nWhich is then used in:\r\nhttps://github.com/pypa/packaging/blob/e664cdd5c82b706ba4c5368477c8d7081fd99456/packaging/tags.py#L334\r\n\r\nThis should be the otherway around, to not reuse the exhausted iterator.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/254", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/254/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/254/events", "html_url": "https://github.com/pypa/packaging/issues/254", "id": 545647594, "node_id": "MDU6SXNzdWU1NDU2NDc1OTQ=", "number": 254, "title": "Tests fail on i686 architecture with Linux", "user": {"login": "frenzymadness", "id": 5688939, "node_id": "MDQ6VXNlcjU2ODg5Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5688939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frenzymadness", "html_url": "https://github.com/frenzymadness", "followers_url": "https://api.github.com/users/frenzymadness/followers", "following_url": "https://api.github.com/users/frenzymadness/following{/other_user}", "gists_url": "https://api.github.com/users/frenzymadness/gists{/gist_id}", "starred_url": "https://api.github.com/users/frenzymadness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frenzymadness/subscriptions", "organizations_url": "https://api.github.com/users/frenzymadness/orgs", "repos_url": "https://api.github.com/users/frenzymadness/repos", "events_url": "https://api.github.com/users/frenzymadness/events{/privacy}", "received_events_url": "https://api.github.com/users/frenzymadness/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}, {"id": 1672986369, "node_id": "MDU6TGFiZWwxNjcyOTg2MzY5", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.tags", "name": "packaging.tags", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-06T10:14:43Z", "updated_at": "2020-02-04T08:29:25Z", "closed_at": "2020-02-04T08:29:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that tests `test_linux_platforms_manylinux*` in `test_tags.py` don't work on i686 architecture with Linux.\r\n\r\nError log:\r\n```\r\n____________ TestManylinuxPlatform.test_linux_platforms_manylinux1 _____________\r\nself = <tests.test_tags.TestManylinuxPlatform object at 0xf5f10bc8>\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0xf5f10cb8>\r\n    def test_linux_platforms_manylinux1(self, monkeypatch):\r\n        monkeypatch.setattr(\r\n            tags, \"_is_manylinux_compatible\", lambda name, _: name == \"manylinux1\"\r\n        )\r\n        if platform.system() != \"Linux\":\r\n            monkeypatch.setattr(distutils.util, \"get_platform\", lambda: \"linux_x86_64\")\r\n        platforms = list(tags._linux_platforms(is_32bit=False))\r\n>       assert platforms == [\"manylinux1_x86_64\", \"linux_x86_64\"]\r\nE       AssertionError: assert ['manylinux1_... 'linux_i686'] == ['manylinux1_x...linux_x86_64']\r\nE         At index 0 diff: 'manylinux1_i686' != 'manylinux1_x86_64'\r\nE         Use -v to get the full diff\r\ntests/test_tags.py:445: AssertionError\r\n___________ TestManylinuxPlatform.test_linux_platforms_manylinux2010 ___________\r\nself = <tests.test_tags.TestManylinuxPlatform object at 0xf29c2130>\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0xf29c2238>\r\n    def test_linux_platforms_manylinux2010(self, monkeypatch):\r\n        monkeypatch.setattr(\r\n            tags, \"_is_manylinux_compatible\", lambda name, _: name == \"manylinux2010\"\r\n        )\r\n        if platform.system() != \"Linux\":\r\n            monkeypatch.setattr(distutils.util, \"get_platform\", lambda: \"linux_x86_64\")\r\n        platforms = list(tags._linux_platforms(is_32bit=False))\r\n        expected = [\"manylinux2010_x86_64\", \"manylinux1_x86_64\", \"linux_x86_64\"]\r\n>       assert platforms == expected\r\nE       AssertionError: assert ['manylinux20... 'linux_i686'] == ['manylinux201...linux_x86_64']\r\nE         At index 0 diff: 'manylinux2010_i686' != 'manylinux2010_x86_64'\r\nE         Use -v to get the full diff\r\ntests/test_tags.py:455: AssertionError\r\n___________ TestManylinuxPlatform.test_linux_platforms_manylinux2014 ___________\r\nself = <tests.test_tags.TestManylinuxPlatform object at 0xf5f10af0>\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0xf281f040>\r\n    def test_linux_platforms_manylinux2014(self, monkeypatch):\r\n        monkeypatch.setattr(\r\n            tags, \"_is_manylinux_compatible\", lambda name, _: name == \"manylinux2014\"\r\n        )\r\n        if platform.system() != \"Linux\":\r\n            monkeypatch.setattr(distutils.util, \"get_platform\", lambda: \"linux_x86_64\")\r\n        platforms = list(tags._linux_platforms(is_32bit=False))\r\n        expected = [\r\n            \"manylinux2014_x86_64\",\r\n            \"manylinux2010_x86_64\",\r\n            \"manylinux1_x86_64\",\r\n            \"linux_x86_64\",\r\n        ]\r\n>       assert platforms == expected\r\nE       AssertionError: assert ['manylinux20... 'linux_i686'] == ['manylinux201...linux_x86_64']\r\nE         At index 0 diff: 'manylinux2014_i686' != 'manylinux2014_x86_64'\r\nE         Use -v to get the full diff\r\ntests/test_tags.py:470: AssertionError\r\n======== 3 failed, 29203 passed, 2 skipped, 1 xfailed in 52.46 seconds =========\r\n```\r\n\r\nIt seems that the reason is that `distutils.util.get_platform` stays untouched on Linux platforms and therefore `tags._linux_platforms` generates platforms with `i686` instead of `x86_64`. I'd like to create a simple reproducer but my only access to a 32bit system is in the Fedora build system where I've discovered this issue and I cannot access the system directly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/253", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/253/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/253/events", "html_url": "https://github.com/pypa/packaging/issues/253", "id": 544929522, "node_id": "MDU6SXNzdWU1NDQ5Mjk1MjI=", "number": 253, "title": "Automate the release process", "user": {"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-03T10:10:24Z", "updated_at": "2020-02-11T10:16:20Z", "closed_at": "2020-02-11T10:06:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think we all agree that this would be a good idea.\r\n\r\nWe have a few options here IMO:\r\n\r\n- Have a GitHub Action triggered on tag, that runs the release processes\r\n  - 2 stage: bump+tag+bump+push (releaser), build+publish (automation)\r\n  - Needs auth/API token management\r\n  - Consistent build environment\r\n- Add something like https://github.com/pradyunsg/vendoring/blob/master/noxfile.py#L103-L146\r\n  - Runs on the *release manager*'s system\r\n  - Performs exactly the same steps as a manual release process, except automatically.\r\n- A combination of the two above?\r\n  - version bumping + tagging + push is done by automation locally.\r\n  - package building + publishing is done by CI automation.\r\n\r\nPersonally, I think doing 2, then 3 would be easiest -- partly because I am familiar with the second approach. :)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/252", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/252/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/252/events", "html_url": "https://github.com/pypa/packaging/issues/252", "id": 544756367, "node_id": "MDU6SXNzdWU1NDQ3NTYzNjc=", "number": 252, "title": "Release version 20.0", "user": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-01-02T21:34:14Z", "updated_at": "2020-01-06T06:28:58Z", "closed_at": "2020-01-06T06:28:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think we're ready for a 20.0 release. [Here's what this would include](https://github.com/pypa/packaging/blob/master/CHANGELOG.rst#200---master), is anything missing?\r\n\r\nAny volunteers to make the release?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/246", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/246/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/246/events", "html_url": "https://github.com/pypa/packaging/issues/246", "id": 538614946, "node_id": "MDU6SXNzdWU1Mzg2MTQ5NDY=", "number": 246, "title": "CI failing due to coverage failures", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-16T19:45:58Z", "updated_at": "2020-01-02T21:31:13Z", "closed_at": "2020-01-02T21:31:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It looks like coverage 5.0 was released and it now claims we are not at 100% coverage any longer (e.g. https://github.com/pypa/packaging/runs/349609790).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/238", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/238/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/238/events", "html_url": "https://github.com/pypa/packaging/issues/238", "id": 523769393, "node_id": "MDU6SXNzdWU1MjM3NjkzOTM=", "number": 238, "title": "Dynamically detect abi3 support", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}, {"id": 1672986369, "node_id": "MDU6TGFiZWwxNjcyOTg2MzY5", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.tags", "name": "packaging.tags", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-16T01:33:32Z", "updated_at": "2019-11-19T18:09:03Z", "closed_at": "2019-11-19T18:09:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Check supported file extensions for importing for one that contains `.abi3.`.\r\n\r\nCame up as part of #187 .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/237", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/237/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/237/events", "html_url": "https://github.com/pypa/packaging/issues/237", "id": 523769196, "node_id": "MDU6SXNzdWU1MjM3NjkxOTY=", "number": 237, "title": "Don't list support for abi3 on old Python versions", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}, {"id": 1672986369, "node_id": "MDU6TGFiZWwxNjcyOTg2MzY5", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.tags", "name": "packaging.tags", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-16T01:31:50Z", "updated_at": "2019-12-19T00:25:39Z", "closed_at": "2019-12-19T00:25:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "E.g. specifying Python 2.7 shouldn't lead to listing ABI support from 2.7 to 2.3.\r\n\r\nFound as part of #187 .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/235", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/235/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/235/events", "html_url": "https://github.com/pypa/packaging/issues/235", "id": 523648450, "node_id": "MDU6SXNzdWU1MjM2NDg0NTA=", "number": 235, "title": "Add PyPy to GitHub Actions", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}, {"id": 1105849599, "node_id": "MDU6TGFiZWwxMTA1ODQ5NTk5", "url": "https://api.github.com/repos/pypa/packaging/labels/good%20first%20issue", "name": "good first issue", "color": "88ff6d", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-15T19:31:54Z", "updated_at": "2019-12-02T18:32:15Z", "closed_at": "2019-12-02T18:32:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Looks like PyPy and PyPy3 have been added to the [runners](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners). Probably just need to look at how the tests are run under tox for PyPy and then duplicate it as another job under `Test`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/233", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/233/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/233/events", "html_url": "https://github.com/pypa/packaging/issues/233", "id": 521822299, "node_id": "MDU6SXNzdWU1MjE4MjIyOTk=", "number": 233, "title": "Visually separate PyPy interpreter version from name", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}, {"id": 1672986369, "node_id": "MDU6TGFiZWwxNjcyOTg2MzY5", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.tags", "name": "packaging.tags", "color": "bfd4f2", "default": false, "description": ""}, {"id": 99922667, "node_id": "MDU6TGFiZWw5OTkyMjY2Nw==", "url": "https://api.github.com/repos/pypa/packaging/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-11-12T21:47:08Z", "updated_at": "2020-01-27T11:29:14Z", "closed_at": "2019-11-16T01:30:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The interpreter tag of `pp370` looks like (at least to me) that this is PyPy for Python 3.7.0 which isn't accurate: it's actually PyPy3 7.0. If the name was changed to `pp3_70` it would be more obvious this is about PyPy3 7.0.\r\n\r\n@mattip would PyPy like to see this change? We would emit tags for both `pp370` and `pp3_70` for a while to keep compatibility to give a clear, easy, long transition.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/232", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/232/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/232/events", "html_url": "https://github.com/pypa/packaging/issues/232", "id": 521815953, "node_id": "MDU6SXNzdWU1MjE4MTU5NTM=", "number": 232, "title": "Officially support Python 3.8", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}, {"id": 1105849599, "node_id": "MDU6TGFiZWwxMTA1ODQ5NTk5", "url": "https://api.github.com/repos/pypa/packaging/labels/good%20first%20issue", "name": "good first issue", "color": "88ff6d", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-12T21:33:54Z", "updated_at": "2019-11-25T19:10:37Z", "closed_at": "2019-11-15T23:56:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "- [x] Update `tox.ini`\r\n- [x] Update trove classifiers in `setup.py`\r\n- [x] Update GitHub Actions", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/216", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/216/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/216/events", "html_url": "https://github.com/pypa/packaging/issues/216", "id": 501784279, "node_id": "MDU6SXNzdWU1MDE3ODQyNzk=", "number": 216, "title": "Document comparing different version number classes is not supported", "user": {"login": "guifre", "id": 987927, "node_id": "MDQ6VXNlcjk4NzkyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/987927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guifre", "html_url": "https://github.com/guifre", "followers_url": "https://api.github.com/users/guifre/followers", "following_url": "https://api.github.com/users/guifre/following{/other_user}", "gists_url": "https://api.github.com/users/guifre/gists{/gist_id}", "starred_url": "https://api.github.com/users/guifre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guifre/subscriptions", "organizations_url": "https://api.github.com/users/guifre/orgs", "repos_url": "https://api.github.com/users/guifre/repos", "events_url": "https://api.github.com/users/guifre/events{/privacy}", "received_events_url": "https://api.github.com/users/guifre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1601188132, "node_id": "MDU6TGFiZWwxNjAxMTg4MTMy", "url": "https://api.github.com/repos/pypa/packaging/labels/documentation", "name": "documentation", "color": "b8d626", "default": true, "description": ""}, {"id": 99922665, "node_id": "MDU6TGFiZWw5OTkyMjY2NQ==", "url": "https://api.github.com/repos/pypa/packaging/labels/help%20wanted", "name": "help wanted", "color": "eeee00", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-10-03T00:04:06Z", "updated_at": "2020-04-27T18:54:50Z", "closed_at": "2020-04-27T18:54:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the latest version, the following statement returns true, but it should instead return false.\r\n\r\nversion.parse('1.0.2t') <= version.parse('0.9.8r')\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/215", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/215/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/215/events", "html_url": "https://github.com/pypa/packaging/issues/215", "id": 500580980, "node_id": "MDU6SXNzdWU1MDA1ODA5ODA=", "number": 215, "title": "Document our use of pre-commit for development", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1601188132, "node_id": "MDU6TGFiZWwxNjAxMTg4MTMy", "url": "https://api.github.com/repos/pypa/packaging/labels/documentation", "name": "documentation", "color": "b8d626", "default": true, "description": ""}, {"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}, {"id": 1105849599, "node_id": "MDU6TGFiZWwxMTA1ODQ5NTk5", "url": "https://api.github.com/repos/pypa/packaging/labels/good%20first%20issue", "name": "good first issue", "color": "88ff6d", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-30T23:44:23Z", "updated_at": "2019-11-23T20:56:36Z", "closed_at": "2019-11-23T20:56:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/214", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/214/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/214/events", "html_url": "https://github.com/pypa/packaging/issues/214", "id": 500575391, "node_id": "MDU6SXNzdWU1MDA1NzUzOTE=", "number": 214, "title": "What should dev-requirements.txt be used for?", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922667, "node_id": "MDU6TGFiZWw5OTkyMjY2Nw==", "url": "https://api.github.com/repos/pypa/packaging/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-09-30T23:23:40Z", "updated_at": "2019-10-09T17:55:25Z", "closed_at": "2019-10-09T17:50:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A few times I have found that the dependencies listed in `dev-requirements.txt` do not match what gets installed by tox. So what should `dev-requirements.txt` be used for? Is it just what is required to run the tests using pytest directly? What about the linters (which I care about since that's necessary to work with VS Code)? Basically should `dev-requirements.txt` be kept in sync with tox or should it have targeted usage that is documented in the file?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/211", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/211/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/211/events", "html_url": "https://github.com/pypa/packaging/issues/211", "id": 499408602, "node_id": "MDU6SXNzdWU0OTk0MDg2MDI=", "number": 211, "title": "Extras not parsed as extras when importlib.metadata.requires is used", "user": {"login": "fridex", "id": 880687, "node_id": "MDQ6VXNlcjg4MDY4Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/880687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fridex", "html_url": "https://github.com/fridex", "followers_url": "https://api.github.com/users/fridex/followers", "following_url": "https://api.github.com/users/fridex/following{/other_user}", "gists_url": "https://api.github.com/users/fridex/gists{/gist_id}", "starred_url": "https://api.github.com/users/fridex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fridex/subscriptions", "organizations_url": "https://api.github.com/users/fridex/orgs", "repos_url": "https://api.github.com/users/fridex/repos", "events_url": "https://api.github.com/users/fridex/events{/privacy}", "received_events_url": "https://api.github.com/users/fridex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922667, "node_id": "MDU6TGFiZWw5OTkyMjY2Nw==", "url": "https://api.github.com/repos/pypa/packaging/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-27T12:09:27Z", "updated_at": "2019-10-02T11:32:21Z", "closed_at": "2019-10-02T11:32:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to automatically parse package extras with [importlib.metadata.requires](https://docs.python.org/3.9/library/importlib.metadata.html#distribution-requirements). The official documentation states the following code snippet as an example:\r\n\r\n```python\r\n>>> requires('wheel')  \r\n[\r\n  \"pytest (>=3.0.0) ; extra == 'test'\",\r\n  \"pytest-cov ; extra == 'test'\"\r\n]\r\n```\r\n\r\nI would assume the string to be compatible with `packaging.requirement.Requirement` implementation which would provide me a parsed representation of the requirement (actually, this is also stated in the [`requires` docstring](https://github.com/python/cpython/blob/5faff977adbe089e1f91a5916ccb2160a22dd292/Lib/importlib/metadata.py#L500-L507)).\r\n\r\nHowever, the implementation of `Requirement` keeps the extra in marker instead of parsing it as `extras`:\r\n\r\n```python\r\n>>> from packaging.requirements import Requirement\r\n>>> Requirement(\"pytest (>=3.0.0) ; extra == 'test'\").__dict__\r\n{'name': 'pytest', 'url': None, 'extras': set(), 'specifier': <SpecifierSet('>=3.0.0')>, 'marker': <Marker('extra == \"test\"')>}\r\n>>> Requirement(\"pytest (>=3.0.0) ; extra == 'test'\").marker._markers[0]\r\n(<Variable('extra')>, <Op('==')>, <Value('test')>)\r\n```\r\n\r\nIf I try to evaluate marker, it causes an exception (which is expected to my understanding of [PEP-0508](https://www.python.org/dev/peps/pep-0508/#environment-markers)):\r\n\r\n```python\r\n>>> Requirement(\"pytest (>=3.0.0) ; extra == 'test'\").marker.evaluate()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/fpokorny/.local/share/virtualenvs/solver-WFdZ3ODT/lib/python3.6/site-packages/packaging/markers.py\", line 296, in evaluate\r\n    return _evaluate_markers(self._markers, current_environment)\r\n  File \"/home/fpokorny/.local/share/virtualenvs/solver-WFdZ3ODT/lib/python3.6/site-packages/packaging/markers.py\", line 221, in _evaluate_markers\r\n    lhs_value = _get_env(environment, lhs.value)\r\n  File \"/home/fpokorny/.local/share/virtualenvs/solver-WFdZ3ODT/lib/python3.6/site-packages/packaging/markers.py\", line 203, in _get_env\r\n    \"{0!r} does not exist in evaluation environment.\".format(name)\r\npackaging.markers.UndefinedEnvironmentName: 'extra' does not exist in evaluation environment.\r\n```\r\n\r\nUsing the bracket syntax of extras works as expected:\r\n\r\n```python\r\n>>> from packaging.requirements import Requirement\r\n>>> Requirement(\"pytest[test] (>=3.0.0)\").__dict__\r\n{'name': 'pytest', 'url': None, 'extras': {'test'}, 'specifier': <SpecifierSet('>=3.0.0')>, 'marker': None}\r\n```\r\n\r\nAccording to [PEP-0508](https://www.python.org/dev/peps/pep-0508/#environment-markers), \"extra\" can be treated as a marker, which should not be used during interpretation (which explains the above exception to me).\r\n\r\n\r\nI would like to know if the parsing behavior of strings as returned by `importlib.metadata.requires`  is expected. Also, is there any other way how to parse a package require extras? The solution that comes to my mind is to iterate over `_markers` explicitly with checks for `Variable`'s `value` equal to `extra` as shown below:\r\n\r\n```python\r\n>>> [m[2].value for m in Requirement(\"pytest (>=3.0.0) ; extra == 'test'\").marker._markers if m[0].value == 'extra']\r\n['test']\r\n```\r\n\r\nPlease note I'm using a private variable of `Marker` instance, which is not good. A suitable public API would be more appropriate.\r\n\r\nThanks for any help in advance!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/210", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/210/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/210/events", "html_url": "https://github.com/pypa/packaging/issues/210", "id": 499067436, "node_id": "MDU6SXNzdWU0OTkwNjc0MzY=", "number": 210, "title": "Fix mypy failures", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-26T19:15:56Z", "updated_at": "2019-09-27T18:01:47Z", "closed_at": "2019-09-27T18:01:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Warnings about `sys.implementation` not being on Python 2 and `sys.pypy_version_info` not existing in the stdlib.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/203", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/203/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/203/events", "html_url": "https://github.com/pypa/packaging/issues/203", "id": 495489637, "node_id": "MDU6SXNzdWU0OTU0ODk2Mzc=", "number": 203, "title": "Configure black to match flake8's line length (or vice-versa)", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}, {"id": 99922667, "node_id": "MDU6TGFiZWw5OTkyMjY2Nw==", "url": "https://api.github.com/repos/pypa/packaging/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-18T22:46:39Z", "updated_at": "2019-09-19T23:16:25Z", "closed_at": "2019-09-19T23:16:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "flake8 uses 78, black uses 88. That leads to conflicts when developing. We should choose one and then configure the other to respect the chosen line length.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/197", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/197/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/197/events", "html_url": "https://github.com/pypa/packaging/issues/197", "id": 493247802, "node_id": "MDU6SXNzdWU0OTMyNDc4MDI=", "number": 197, "title": "Release version 19.2", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-09-13T10:19:08Z", "updated_at": "2019-09-18T22:40:39Z", "closed_at": "2019-09-18T22:40:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As soon as #172 is fixed (which will probably also pull in #194 ), then I think we can do a 19.2 release as that should have us prepped for Python 3.8.\r\n\r\nAnd I'm up for doing the release (I actually was just about to when I realized we might as well get it Python 3.8-ready at this point instead of rushing a release out now and then have to do it again in a month).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/194", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/194/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/194/events", "html_url": "https://github.com/pypa/packaging/issues/194", "id": 488368677, "node_id": "MDU6SXNzdWU0ODgzNjg2Nzc=", "number": 194, "title": "Improve detection of debug builds on Windows", "user": {"login": "chrahunt", "id": 2312275, "node_id": "MDQ6VXNlcjIzMTIyNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2312275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrahunt", "html_url": "https://github.com/chrahunt", "followers_url": "https://api.github.com/users/chrahunt/followers", "following_url": "https://api.github.com/users/chrahunt/following{/other_user}", "gists_url": "https://api.github.com/users/chrahunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrahunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrahunt/subscriptions", "organizations_url": "https://api.github.com/users/chrahunt/orgs", "repos_url": "https://api.github.com/users/chrahunt/repos", "events_url": "https://api.github.com/users/chrahunt/events{/privacy}", "received_events_url": "https://api.github.com/users/chrahunt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-03T02:57:00Z", "updated_at": "2019-09-18T22:14:29Z", "closed_at": "2019-09-18T22:14:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From pypa/pip#3535:\r\n\r\n> From pypa/pip#3383 it'd be nice to have better detection of debug builds on Windows.\r\n> \r\n> @zooba said on [#3383 (comment)](https://github.com/pypa/pip/issues/3383#issuecomment-173267692)\r\n> \r\n> > `Py_DEBUG` is never going to be in `pyconfig.h` on Windows as the header is static (no autoconf) and debug/no-debug is determined using the preprocessor at build.\r\n> > `sys.gettotalrefcount` is protected by `Py_REF_DEBUG`, which is not guaranteed to always be set when `Py_DEBUG` is set. That said, `distutils.command.build` tests for it, so it's probably safe enough (or at least, there'll be twice as many bugs when it breaks...).\r\n> > The most reliable check is probably going to be:\r\n> > ```python\r\n> > any(x[0] == '_d.pyd' for x in imp.get_suffixes())\r\n> > ```\r\n> > \r\n> > \r\n> > The only issue with this is that the `imp` module is deprecated - Python 3.3 and later should really use:\r\n> > ```python\r\n> > '_d.pyd' in importlib.machinery.EXTENSION_SUFFIXES\r\n> > ```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/193", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/193/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/193/events", "html_url": "https://github.com/pypa/packaging/issues/193", "id": 487905976, "node_id": "MDU6SXNzdWU0ODc5MDU5NzY=", "number": 193, "title": "Use sys.implementation.name if available", "user": {"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}, {"id": 1105849599, "node_id": "MDU6TGFiZWwxMTA1ODQ5NTk5", "url": "https://api.github.com/repos/pypa/packaging/labels/good%20first%20issue", "name": "good first issue", "color": "88ff6d", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-01T16:33:47Z", "updated_at": "2019-10-07T17:33:32Z", "closed_at": "2019-10-07T17:33:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From https://www.python.org/dev/peps/pep-0425/#python-tag\r\n\r\n> Other Python implementations should use sys.implementation.name.\r\n\r\n---\r\n\r\nWe should probably use `sys.implementation.name` in packaging.tags, instead of `platform.python_implementation().lower()`, if it exists.\r\n\r\nhttps://github.com/pypa/packaging/blob/d09b0b5f2118f4b324175b7ee66e4a3c41e619a5/packaging/tags.py#L341\r\n\r\n---\r\n\r\nRelevant discussion about `platform.python_implementation()` vs `sys.implementation`: https://www.python.org/dev/peps/pep-0421/#platform-python-implementation", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/192", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/192/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/192/events", "html_url": "https://github.com/pypa/packaging/issues/192", "id": 485377345, "node_id": "MDU6SXNzdWU0ODUzNzczNDU=", "number": 192, "title": "Set the URL for the project in GitHub as https://packaging.pypa.io/", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-26T18:30:46Z", "updated_at": "2019-08-27T16:12:43Z", "closed_at": "2019-08-27T13:16:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Basically make it easier to find the link to the docs. \ud83d\ude04 Requires an administrator.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/191", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/191/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/191/events", "html_url": "https://github.com/pypa/packaging/issues/191", "id": 485374907, "node_id": "MDU6SXNzdWU0ODUzNzQ5MDc=", "number": 191, "title": "Add type hints", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-26T18:25:34Z", "updated_at": "2019-08-26T18:26:07Z", "closed_at": "2019-08-26T18:26:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/pypa/pip/issues/6908 has requested that type hints be added to at least `packaging.tags`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/189", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/189/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/189/events", "html_url": "https://github.com/pypa/packaging/issues/189", "id": 484962280, "node_id": "MDU6SXNzdWU0ODQ5NjIyODA=", "number": 189, "title": "Add type annotations to packaging.tags", "user": {"login": "cjerdonek", "id": 355822, "node_id": "MDQ6VXNlcjM1NTgyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/355822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjerdonek", "html_url": "https://github.com/cjerdonek", "followers_url": "https://api.github.com/users/cjerdonek/followers", "following_url": "https://api.github.com/users/cjerdonek/following{/other_user}", "gists_url": "https://api.github.com/users/cjerdonek/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjerdonek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjerdonek/subscriptions", "organizations_url": "https://api.github.com/users/cjerdonek/orgs", "repos_url": "https://api.github.com/users/cjerdonek/repos", "events_url": "https://api.github.com/users/cjerdonek/events{/privacy}", "received_events_url": "https://api.github.com/users/cjerdonek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-25T18:40:15Z", "updated_at": "2019-09-25T18:05:21Z", "closed_at": "2019-09-25T18:05:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "pip's `pep425tags` module [has type annotations](https://github.com/pypa/pip/blob/d2b7082932a59585ea6198cbf375758fae949c67/src/pip/_internal/pep425tags.py), so it would be good for `packaging.tags` to have type annotations as well before [switching pip away](https://github.com/pypa/pip/issues/6908) from `pep425tags`.\r\n\r\nIt looks like this would require adding a mypy CI check.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/187", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/187/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/187/events", "html_url": "https://github.com/pypa/packaging/issues/187", "id": 484942168, "node_id": "MDU6SXNzdWU0ODQ5NDIxNjg=", "number": 187, "title": "Allow customizing generation of tags", "user": {"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}, {"id": 1672986369, "node_id": "MDU6TGFiZWwxNjcyOTg2MzY5", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.tags", "name": "packaging.tags", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2019-08-25T15:13:11Z", "updated_at": "2019-11-25T18:59:54Z", "closed_at": "2019-11-25T18:59:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Coming from https://github.com/pypa/pip/issues/6908\r\n\r\npip's [current `get_supported` function][1] for generating PEP 425 tags, has the following signature:\r\n\r\n```py\r\ndef get_supported(\r\n    versions=None,  # type: Optional[List[str]]\r\n    noarch=False,  # type: bool\r\n    platform=None,  # type: Optional[str]\r\n    impl=None,  # type: Optional[str]\r\n    abi=None  # type: Optional[str]\r\n):\r\n```\r\n\r\nIt takes details/strings about the specific platform, implementation, ABI and interpreter versions. It also has a flag to avoid generating architecture specific tags.\r\n\r\n`packaging.tags` would need to have feature parity with this interface, to be used within pip.\r\n\r\n[1]: https://github.com/pypa/pip/blob/master/src/pip/_internal/pep425tags.py#L276", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/184", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/184/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/184/events", "html_url": "https://github.com/pypa/packaging/issues/184", "id": 483056194, "node_id": "MDU6SXNzdWU0ODMwNTYxOTQ=", "number": 184, "title": "Tags missing from pypy3 on Windows 10", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}, {"id": 1672986369, "node_id": "MDU6TGFiZWwxNjcyOTg2MzY5", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.tags", "name": "packaging.tags", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2019-08-20T20:04:56Z", "updated_at": "2019-11-25T19:03:23Z", "closed_at": "2019-11-25T19:03:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Comparing what pip's tags and packaging.tags under pypy3 7.0.0 on Windows 10, the following tags are only found by pip:\r\n1. `pp370-pp370-win32`\r\n1. `pp3-none-any`\r\n1. `py370-none-any`\r\n\r\nThe first one could be considered legitimate, but the last two do not make sense.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/181", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/181/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/181/events", "html_url": "https://github.com/pypa/packaging/issues/181", "id": 481393739, "node_id": "MDU6SXNzdWU0ODEzOTM3Mzk=", "number": 181, "title": "packaging.tags does not include `m` for abi tag in Python 3.7 (and below)", "user": {"login": "chrahunt", "id": 2312275, "node_id": "MDQ6VXNlcjIzMTIyNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2312275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrahunt", "html_url": "https://github.com/chrahunt", "followers_url": "https://api.github.com/users/chrahunt/followers", "following_url": "https://api.github.com/users/chrahunt/following{/other_user}", "gists_url": "https://api.github.com/users/chrahunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrahunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrahunt/subscriptions", "organizations_url": "https://api.github.com/users/chrahunt/orgs", "repos_url": "https://api.github.com/users/chrahunt/repos", "events_url": "https://api.github.com/users/chrahunt/events{/privacy}", "received_events_url": "https://api.github.com/users/chrahunt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-08-16T00:38:14Z", "updated_at": "2019-08-22T18:00:09Z", "closed_at": "2019-08-22T18:00:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Environment**\r\n\r\n**OS**: Windows 10\r\n**Packaging version**: 19.1\r\n**Python version**: `Python 3.7.4 (tags/v3.7.4:e09359112e, Jul  8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)]`, from [nuget](https://www.nuget.org/packages/python)\r\n\r\n**Issue**: The ABI tag for Python 3.7 in `sys_tags()` does not have `cp37m` (just `cp37`):\r\n\r\n```\r\n(.venv) PS C:\\Users\\User\\Desktop> python -c 'from packaging.tags import sys_tags; print(list(sys_tags()))'\r\n[<cp37-cp37-win_amd64 @ 2675185733256>, <cp37-abi3-win_amd64 @ 2675185848584>, <cp37-none-win_amd64 @ 2675185852360>, <cp36-abi3-win_amd64 @ 2675185868424>, <cp35-abi3-win_amd64 @ 2675185868488>, <cp34-abi3-win_amd64 @ 2675188128520>, <cp33-abi3-win_amd64 @ 2675188128776>, <cp32-abi3-win_amd64 @ 2675188129032>, <py37-none-win_amd64 @ 2675188129544>, <py3-none-win_amd64 @ 2675188154440>, <py36-none-win_amd64 @ 2675188154696>, <py35-none-win_amd64 @ 2675188154952>, <py34-none-win_amd64 @ 2675188155208>, <py33-none-win_amd64 @ 2675188155464>, <py32-none-win_amd64 @ 2675188155720>, <py31-none-win_amd64 @ 2675188155976>, <py30-none-win_amd64 @ 2675188156232>, <cp37-none-any @ 2675188129288>, <py37-none-any @ 2675185733576>, <py3-none-any @ 2675188156680>, <py36-none-any @ 2675188156936>, <py35-none-any @ 2675188157192>, <py34-none-any @ 2675188157448>, <py33-none-any @ 2675188157704>, <py32-none-any @ 2675188157960>, <py31-none-any @ 2675188158216>, <py30-none-any @ 2675188162632>]\r\n```\r\n\r\n**Expected**: The ABI tag for Python 3.7 should have `cp37m`.\r\n\r\nIt looks like we are relying strictly on either `SOABI` or `WITH_PYMALLOC` being available [here](https://github.com/pypa/packaging/blob/9bc25964dce3b4781d5dde7e96e4e9f0d0b6762a/packaging/tags.py#L87-L98), but neither are:\r\n\r\n```\r\n(.venv) PS C:\\Users\\User\\Desktop> python -c \"from sysconfig import get_config_var as c; print(c('SOABI')); print(c('WITH_PYMALLOC'))\"\r\nNone\r\nNone\r\n```\r\n\r\nRelated to #180.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/180", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/180/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/180/events", "html_url": "https://github.com/pypa/packaging/issues/180", "id": 481021299, "node_id": "MDU6SXNzdWU0ODEwMjEyOTk=", "number": 180, "title": "Removal of 'm' flag from tag in Python 3.8", "user": {"login": "rdb", "id": 194842, "node_id": "MDQ6VXNlcjE5NDg0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/194842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdb", "html_url": "https://github.com/rdb", "followers_url": "https://api.github.com/users/rdb/followers", "following_url": "https://api.github.com/users/rdb/following{/other_user}", "gists_url": "https://api.github.com/users/rdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdb/subscriptions", "organizations_url": "https://api.github.com/users/rdb/orgs", "repos_url": "https://api.github.com/users/rdb/repos", "events_url": "https://api.github.com/users/rdb/events{/privacy}", "received_events_url": "https://api.github.com/users/rdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-15T06:59:02Z", "updated_at": "2019-08-17T10:36:02Z", "closed_at": "2019-08-15T16:37:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.8 removes the existence of the `m` ABI flag:\r\nhttps://bugs.python.org/issue36707\r\nhttps://docs.python.org/dev/whatsnew/3.8.html#build-and-c-api-changes\r\n\r\nChanges are needed in `packaging.tags` for platforms that do not define `SOABI` in the configuration.  Linux and macOS wheels already are built without the `m` suffix.  On Windows, pip fails to install binary wheels with the following error:\r\n```\r\nERROR: mypackage-1.0.0-cp38-cp38-win_amd64.whl is not a supported wheel on this platform.\r\n```\r\n\r\nFixing this is required to support installing binary Windows wheels in Python 3.8.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/178", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/178/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/178/events", "html_url": "https://github.com/pypa/packaging/issues/178", "id": 479669136, "node_id": "MDU6SXNzdWU0Nzk2NjkxMzY=", "number": 178, "title": "19.1 circular dependencies", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-12T14:13:15Z", "updated_at": "2019-08-28T16:16:24Z", "closed_at": "2019-08-15T16:42:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the 19.1 release the package now depends on attrs, which in turn depends directly on setuptools. Packaging on its own is a direct dependency of setuptools as well. This means when you are bootstraping the packages it can't be done properly.\r\n\r\nLooking at attrs they rely on find_packages and few other tiny features of setuptools 40+ so I don't think it is possible to build them just with distutils...\r\n  https://github.com/python-attrs/attrs/blob/master/setup.py\r\n\r\nCould maybe tags became optional feature? That would be good enough for us to not hard-require it...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/177", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/177/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/177/events", "html_url": "https://github.com/pypa/packaging/issues/177", "id": 479367330, "node_id": "MDU6SXNzdWU0NzkzNjczMzA=", "number": 177, "title": "[19.1] Tests fail on most architectures", "user": {"login": "mbakke", "id": 1269099, "node_id": "MDQ6VXNlcjEyNjkwOTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1269099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbakke", "html_url": "https://github.com/mbakke", "followers_url": "https://api.github.com/users/mbakke/followers", "following_url": "https://api.github.com/users/mbakke/following{/other_user}", "gists_url": "https://api.github.com/users/mbakke/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbakke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbakke/subscriptions", "organizations_url": "https://api.github.com/users/mbakke/orgs", "repos_url": "https://api.github.com/users/mbakke/repos", "events_url": "https://api.github.com/users/mbakke/events{/privacy}", "received_events_url": "https://api.github.com/users/mbakke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-11T12:56:14Z", "updated_at": "2019-08-13T18:39:03Z", "closed_at": "2019-08-13T18:39:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nRunning the test suite of 19.1 fails on architectures other than x86_64. Build logs below.\r\n\r\ni686: https://ci.guix.gnu.org/log/7mi4gk6w21l4j4lzjgcz9ary5bawcnvx-python-packaging-19.1\r\n\r\naarch64: https://ci.guix.gnu.org/log/6v67bysg3k6sxg1n0cxl9yjl8s1bs3c6-python-packaging-19.1\r\n\r\narmhf: https://ci.guix.gnu.org/log/c25i80m1vydhscg27ggcqnz4sm9wr61i-python-packaging-19.1\r\n\r\nAny idea what is wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/171", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/171/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/171/events", "html_url": "https://github.com/pypa/packaging/issues/171", "id": 472087899, "node_id": "MDU6SXNzdWU0NzIwODc4OTk=", "number": 171, "title": "Port changes to reduce dependencies on ctypes module in packaging.tags.", "user": {"login": "chrahunt", "id": 2312275, "node_id": "MDQ6VXNlcjIzMTIyNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2312275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrahunt", "html_url": "https://github.com/chrahunt", "followers_url": "https://api.github.com/users/chrahunt/followers", "following_url": "https://api.github.com/users/chrahunt/following{/other_user}", "gists_url": "https://api.github.com/users/chrahunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrahunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrahunt/subscriptions", "organizations_url": "https://api.github.com/users/chrahunt/orgs", "repos_url": "https://api.github.com/users/chrahunt/repos", "events_url": "https://api.github.com/users/chrahunt/events{/privacy}", "received_events_url": "https://api.github.com/users/chrahunt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-24T05:37:33Z", "updated_at": "2019-10-02T08:21:42Z", "closed_at": "2019-10-02T08:21:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Benefits as mentioned in the linked issues on PR pypa/pip#6678:\r\n\r\n* reduces dependency on ctypes\r\n* allows usage from a statically-linked Python", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/172", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/172/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/172/events", "html_url": "https://github.com/pypa/packaging/issues/172", "id": 472823189, "node_id": "MDU6SXNzdWU0NzI4MjMxODk=", "number": 172, "title": "CPython 3.8 debug/release wheel ABI compatibility", "user": {"login": "chrahunt", "id": 2312275, "node_id": "MDQ6VXNlcjIzMTIyNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2312275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrahunt", "html_url": "https://github.com/chrahunt", "followers_url": "https://api.github.com/users/chrahunt/followers", "following_url": "https://api.github.com/users/chrahunt/following{/other_user}", "gists_url": "https://api.github.com/users/chrahunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrahunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrahunt/subscriptions", "organizations_url": "https://api.github.com/users/chrahunt/orgs", "repos_url": "https://api.github.com/users/chrahunt/repos", "events_url": "https://api.github.com/users/chrahunt/events{/privacy}", "received_events_url": "https://api.github.com/users/chrahunt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-24T05:27:59Z", "updated_at": "2019-09-18T22:13:49Z", "closed_at": "2019-09-18T22:13:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Per [bpo-36465](https://bugs.python.org/issue36465), Python 3.8 will support libraries compiled against a release build running in a debug build of the interpreter.\r\n\r\nPip could make this easier to take advantage of by allowing e.g. cp38dm and cp38m wheels in a debug Python 3.8. If we are planning to switch to `packaging.tags` then that may be the place to make the actual changes and this issue could be closed or track the integration.\r\n\r\n**Additional context**\r\n\r\n* pypa/pip#5733\r\n* [python-dev mailing list](https://mail.python.org/pipermail/python-dev/2019-April/157178.html) by @vstinner", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/170", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/170/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/170/events", "html_url": "https://github.com/pypa/packaging/issues/170", "id": 471356326, "node_id": "MDU6SXNzdWU0NzEzNTYzMjY=", "number": 170, "title": "Warnings traced when installed with pyparsing 2.4.1", "user": {"login": "chrahunt", "id": 2312275, "node_id": "MDQ6VXNlcjIzMTIyNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2312275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrahunt", "html_url": "https://github.com/chrahunt", "followers_url": "https://api.github.com/users/chrahunt/followers", "following_url": "https://api.github.com/users/chrahunt/following{/other_user}", "gists_url": "https://api.github.com/users/chrahunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrahunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrahunt/subscriptions", "organizations_url": "https://api.github.com/users/chrahunt/orgs", "repos_url": "https://api.github.com/users/chrahunt/repos", "events_url": "https://api.github.com/users/chrahunt/events{/privacy}", "received_events_url": "https://api.github.com/users/chrahunt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-22T21:53:04Z", "updated_at": "2019-07-30T08:14:30Z", "closed_at": "2019-07-30T06:57:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This impacts packaging 19.0.\r\n\r\n**Issue**: Importing `packaging.requirements` outputs warnings\r\n\r\n**Expected**: Importing `packaging.requirements` does not output warnings\r\n\r\n**Context**: pyparsing 2.4.1 was released [yesterday](https://github.com/pyparsing/pyparsing/releases/tag/pyparsing_2.4.1) and unfortunately caused our CI runs to fail because of the warning output to stdout on invocation of tox (which internally imports `packaging.requirements`). See pypa/pip#6767.\r\n\r\nTo reproduce:\r\n\r\n```\r\n$ docker run --rm -it python:3.6 bash -xc 'pip install packaging && python -c \"import packaging.requirements\"'\r\n+ pip install packaging\r\nCollecting packaging\r\n  Downloading https://files.pythonhosted.org/packages/91/32/58bc30e646e55eab8b21abf89e353f59c0cc02c417e42929f4a9546e1b1d/packaging-19.0-py2.py3-none-any.whl\r\nCollecting pyparsing>=2.0.2 (from packaging)\r\n  Downloading https://files.pythonhosted.org/packages/9f/dc/b205465a60baca8e04a1555a84d9c79f910661765056f071fb6fc2db4841/pyparsing-2.4.1-py2.py3-none-any.whl (65kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 71kB 15.3MB/s\r\nCollecting six (from packaging)\r\n  Downloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nInstalling collected packages: pyparsing, six, packaging\r\nSuccessfully installed packaging-19.0 pyparsing-2.4.1 six-1.12.0\r\n+ python -c 'import packaging.requirements'\r\n/usr/local/lib/python3.6/site-packages/packaging/requirements.py:57: UserWarning: warn_ungrouped_named_tokens_in_collection: setting results name 'specifier' on And expression collides with '_original_end' on contained expression\r\n  VERSION_SPEC = originalTextFor(_VERSION_SPEC)(\"specifier\")\r\n/usr/local/lib/python3.6/site-packages/packaging/requirements.py:60: UserWarning: warn_ungrouped_named_tokens_in_collection: setting results name 'marker' on And expression collides with '_original_end' on contained expression\r\n  MARKER_EXPR = originalTextFor(MARKER_EXPR())(\"marker\")\r\n```\r\n\r\n**Available workarounds**:\r\n\r\nEither pin pyparsing to 2.4.0 or set the warnings filter to include `ignore:warn_ungrouped_named_tokens_in_collection` (e.g. `PYTHONWARNINGS=ignore:warn_ungrouped_named_tokens_in_collection`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/166", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/166/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/166/events", "html_url": "https://github.com/pypa/packaging/issues/166", "id": 470509411, "node_id": "MDU6SXNzdWU0NzA1MDk0MTE=", "number": 166, "title": "Master branch is failing with pytest >= 5.0", "user": {"login": "pganssle", "id": 1377457, "node_id": "MDQ6VXNlcjEzNzc0NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pganssle", "html_url": "https://github.com/pganssle", "followers_url": "https://api.github.com/users/pganssle/followers", "following_url": "https://api.github.com/users/pganssle/following{/other_user}", "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}", "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions", "organizations_url": "https://api.github.com/users/pganssle/orgs", "repos_url": "https://api.github.com/users/pganssle/repos", "events_url": "https://api.github.com/users/pganssle/events{/privacy}", "received_events_url": "https://api.github.com/users/pganssle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-19T19:44:07Z", "updated_at": "2019-07-27T19:43:01Z", "closed_at": "2019-07-27T19:43:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I restarted the last build for the master branch and Python versions >= 3.5 are [failing to match some part of exception messages](https://travis-ci.org/pypa/packaging/jobs/541530561#L644). Given that `python_version >= 3.5` describes the support matrix for `pytest >= 5.0` and these same builds were passing a month ago, I suspect that the problem is that the current version of `packaging`'s tests have not been updated to be compatible with the latest `pytest`.\r\n\r\nLately I've been recommending pinning all test dependencies - though I have no actually effective and reasonable way of doing this myself yet (working incrementally on some mechanism to update the dependencies that doesn't spam me with a million individual PRs like dependabot does). That would help the user experience for contributors here, though in the short term just pinning `pytest` will probably work for a while.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/164", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/164/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/164/events", "html_url": "https://github.com/pypa/packaging/issues/164", "id": 466597269, "node_id": "MDU6SXNzdWU0NjY1OTcyNjk=", "number": 164, "title": "update security policy to match PyPI security policy", "user": {"login": "brainwane", "id": 842790, "node_id": "MDQ6VXNlcjg0Mjc5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/842790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brainwane", "html_url": "https://github.com/brainwane", "followers_url": "https://api.github.com/users/brainwane/followers", "following_url": "https://api.github.com/users/brainwane/following{/other_user}", "gists_url": "https://api.github.com/users/brainwane/gists{/gist_id}", "starred_url": "https://api.github.com/users/brainwane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brainwane/subscriptions", "organizations_url": "https://api.github.com/users/brainwane/orgs", "repos_url": "https://api.github.com/users/brainwane/repos", "events_url": "https://api.github.com/users/brainwane/events{/privacy}", "received_events_url": "https://api.github.com/users/brainwane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1105849599, "node_id": "MDU6TGFiZWwxMTA1ODQ5NTk5", "url": "https://api.github.com/repos/pypa/packaging/labels/good%20first%20issue", "name": "good first issue", "color": "88ff6d", "default": true, "description": ""}, {"id": 99922665, "node_id": "MDU6TGFiZWw5OTkyMjY2NQ==", "url": "https://api.github.com/repos/pypa/packaging/labels/help%20wanted", "name": "help wanted", "color": "eeee00", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-11T00:47:32Z", "updated_at": "2019-07-27T22:51:53Z", "closed_at": "2019-07-27T22:51:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Let's update https://packaging.pypa.io/en/latest/security/ (`docs/security.rst`) so that it matches the [PyPI security policy](https://pypi.org/security/) and uses the role address rather than Donald's personal email address.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/162", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/162/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/162/events", "html_url": "https://github.com/pypa/packaging/issues/162", "id": 451019256, "node_id": "MDU6SXNzdWU0NTEwMTkyNTY=", "number": 162, "title": "Documentation no longer building", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-31T23:59:40Z", "updated_at": "2019-06-04T16:25:35Z", "closed_at": "2019-06-04T16:25:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://readthedocs.org/projects/packaging/builds/ says there hasn't been a build in 5 months but https://github.com/pypa/packaging/commit/76bc450c18c909f5167f518cd310db550da0e0cb was 22 days ago.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/160", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/160/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/160/events", "html_url": "https://github.com/pypa/packaging/issues/160", "id": 445545415, "node_id": "MDU6SXNzdWU0NDU1NDU0MTU=", "number": 160, "title": "manylinux tags should come after linux tags", "user": {"login": "dholth", "id": 208018, "node_id": "MDQ6VXNlcjIwODAxOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/208018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dholth", "html_url": "https://github.com/dholth", "followers_url": "https://api.github.com/users/dholth/followers", "following_url": "https://api.github.com/users/dholth/following{/other_user}", "gists_url": "https://api.github.com/users/dholth/gists{/gist_id}", "starred_url": "https://api.github.com/users/dholth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dholth/subscriptions", "organizations_url": "https://api.github.com/users/dholth/orgs", "repos_url": "https://api.github.com/users/dholth/repos", "events_url": "https://api.github.com/users/dholth/events{/privacy}", "received_events_url": "https://api.github.com/users/dholth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}, {"id": 1672986369, "node_id": "MDU6TGFiZWwxNjcyOTg2MzY5", "url": "https://api.github.com/repos/pypa/packaging/labels/packaging.tags", "name": "packaging.tags", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-17T17:33:28Z", "updated_at": "2019-11-16T08:25:35Z", "closed_at": "2019-11-16T08:25:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I designed packaging tags to come in order of \"most specific to this machine\" to \"least specific to this machine\". Unfortunately pip has interpreted this as meaning \"most specified\", putting \"manylinux1\" before \"linux_x86_64\", even though any \"linux_x86_64\" wheels visible to pip should have been compiled on exactly the machine you're in.\r\n\r\nWhen a particular manylinux wheel is broken, you should be able to compile a linux_x86_64 wheel, add it to pip's search path, and pip would prefer the wheel you compiled. With manylinux1 first the option of having a folder of known-good-and-preferred wheels is not available, instead you have to use no-binary or avoid specific packages.\r\n\r\nIt would also be helpful if a packaging tool could just pick the first tag from the list, instead of skipping all the manylinux tags, when choosing a tag for a new binary wheel.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/159", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/159/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/159/events", "html_url": "https://github.com/pypa/packaging/issues/159", "id": 401943609, "node_id": "MDU6SXNzdWU0MDE5NDM2MDk=", "number": 159, "title": "--no-cache-dir broken in pip 19.0", "user": {"login": "neilvana", "id": 5402224, "node_id": "MDQ6VXNlcjU0MDIyMjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5402224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilvana", "html_url": "https://github.com/neilvana", "followers_url": "https://api.github.com/users/neilvana/followers", "following_url": "https://api.github.com/users/neilvana/following{/other_user}", "gists_url": "https://api.github.com/users/neilvana/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilvana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilvana/subscriptions", "organizations_url": "https://api.github.com/users/neilvana/orgs", "repos_url": "https://api.github.com/users/neilvana/repos", "events_url": "https://api.github.com/users/neilvana/events{/privacy}", "received_events_url": "https://api.github.com/users/neilvana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-22T20:38:05Z", "updated_at": "2019-01-22T20:44:29Z", "closed_at": "2019-01-22T20:44:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the release of pip 19.0, the --no-cache-dir option seems to no longer work.  Running something as simple as:\r\n`pip install --no-cache-dir requests`\r\n\r\n fails with the following exception:\r\n\r\n```\r\nCollecting requests\r\n  Downloading https://files.pythonhosted.org/packages/7d/e3/20f3d364d6c8e5d2353c72a67778eb189176f08e873c9900e10c0287b84b/requests-2.21.0-py2.py3-none-any.whl (57kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 61kB 3.9MB/s\r\nRequirement already satisfied: chardet<3.1.0,>=3.0.2 in c:\\program files\\python37\\lib\\site-packages (from requests) (3.0.4)\r\nRequirement already satisfied: certifi>=2017.4.17 in c:\\program files\\python37\\lib\\site-packages (from requests) (2018.11.29)\r\nRequirement already satisfied: urllib3<1.25,>=1.21.1 in c:\\program files\\python37\\lib\\site-packages (from requests) (1.24.1)\r\nRequirement already satisfied: idna<2.9,>=2.5 in c:\\program files\\python37\\lib\\site-packages (from requests) (2.8)\r\nException:\r\nTraceback (most recent call last):\r\n  File \"c:\\program files\\python37\\lib\\site-packages\\pip\\_internal\\cli\\base_command.py\", line 176, in main\r\n    status = self.run(options, args)\r\n  File \"c:\\program files\\python37\\lib\\site-packages\\pip\\_internal\\commands\\install.py\", line 346, in run\r\n    session=session, autobuilding=True\r\n  File \"c:\\program files\\python37\\lib\\site-packages\\pip\\_internal\\wheel.py\", line 848, in build\r\n    assert building_is_possible\r\nAssertionError\r\n```\r\n\r\nI have tested this fails on Windows with both Python 2.7 and Python 3.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/154", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/154/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/154/events", "html_url": "https://github.com/pypa/packaging/issues/154", "id": 388869954, "node_id": "MDU6SXNzdWUzODg4Njk5NTQ=", "number": 154, "title": "Set up CI for macOS and Windows", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922665, "node_id": "MDU6TGFiZWw5OTkyMjY2NQ==", "url": "https://api.github.com/repos/pypa/packaging/labels/help%20wanted", "name": "help wanted", "color": "eeee00", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-08T01:30:29Z", "updated_at": "2019-09-26T16:36:02Z", "closed_at": "2019-09-26T16:36:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Assuming my PEP 425 work lands, there will be a need to have CI for macOS, Windows, and Linux for which there is no CI for the first two. The options I know of are:\r\n\r\n1. Move to Azure Pipeilnes which has all platforms\r\n2. Add macOS on Travis and add their experimental Windows support\r\n3. Add macOS on Travis and add AppVeyor", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/152", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/152/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/152/events", "html_url": "https://github.com/pypa/packaging/issues/152", "id": 384979483, "node_id": "MDU6SXNzdWUzODQ5Nzk0ODM=", "number": 152, "title": "platform dependent packages, installed via pypi versus local pip.", "user": {"login": "petersilva", "id": 394117, "node_id": "MDQ6VXNlcjM5NDExNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/394117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petersilva", "html_url": "https://github.com/petersilva", "followers_url": "https://api.github.com/users/petersilva/followers", "following_url": "https://api.github.com/users/petersilva/following{/other_user}", "gists_url": "https://api.github.com/users/petersilva/gists{/gist_id}", "starred_url": "https://api.github.com/users/petersilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petersilva/subscriptions", "organizations_url": "https://api.github.com/users/petersilva/orgs", "repos_url": "https://api.github.com/users/petersilva/repos", "events_url": "https://api.github.com/users/petersilva/events{/privacy}", "received_events_url": "https://api.github.com/users/petersilva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-11-27T20:48:36Z", "updated_at": "2019-11-17T16:43:54Z", "closed_at": "2019-08-26T18:45:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a package (github.com/MetPX/Sarracenia) that has fewer features on windows than it does on Linux.  So it has fewer dependencies on windows than it has on Linux.  So I needed platform specific dependencies.  Googling had me come up with the following:\r\n\r\n```\r\n  install_requires=[ \r\n   ...\r\n    \"psutil\" ] \\\r\n    + ( [ \"xattr\" ] if not sys.platform.startswith(\"win\") else [] ) \r\n \r\n```   \r\nwhich when I install with:\r\n\r\n```\r\ngit clone https://github.com/MetPX/sarracenia\r\ncd sarracenia\r\npip install -e .\r\n\r\n```\r\ndoes the right thing, in that it installs the xattr package when on linux, but not when on windows.\r\nbut if I upload the package to pypi, and then use pip install on windows, it tries to install xattr.\r\nso... who's bug is that?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/151", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/151/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/151/events", "html_url": "https://github.com/pypa/packaging/issues/151", "id": 384750623, "node_id": "MDU6SXNzdWUzODQ3NTA2MjM=", "number": 151, "title": "TypeError: __call__() missing 1 required positional argument: 'shape'", "user": {"login": "Gogolooklook", "id": 22886217, "node_id": "MDQ6VXNlcjIyODg2MjE3", "avatar_url": "https://avatars1.githubusercontent.com/u/22886217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gogolooklook", "html_url": "https://github.com/Gogolooklook", "followers_url": "https://api.github.com/users/Gogolooklook/followers", "following_url": "https://api.github.com/users/Gogolooklook/following{/other_user}", "gists_url": "https://api.github.com/users/Gogolooklook/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gogolooklook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gogolooklook/subscriptions", "organizations_url": "https://api.github.com/users/Gogolooklook/orgs", "repos_url": "https://api.github.com/users/Gogolooklook/repos", "events_url": "https://api.github.com/users/Gogolooklook/events{/privacy}", "received_events_url": "https://api.github.com/users/Gogolooklook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-27T11:30:31Z", "updated_at": "2018-11-27T16:16:31Z", "closed_at": "2018-11-27T16:16:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "> Using TensorFlow backend.\r\n2018-11-27 19:19:40.819599: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\nNow we build the Actor model\r\n/home/lkx/\u4e0b\u8f7d/DRL/ActorNetwork.py:65: UserWarning: Update your `Dense` call to the Keras 2 API: `Dense(91, name=\"a_h0\", activation=<function ..., kernel_initializer=<function ...)`\r\n  h0 = Dense(self.HIDDEN1_UNITS, activation=self.h_acti, init=glorot_normal, name='a_h0')(S)\r\nTraceback (most recent call last):\r\n  File \"ddpg.py\", line 216, in <module>\r\n    playGame(DDPG_config, train_indicator=1)\r\n  File \"ddpg.py\", line 75, in playGame\r\n    actor = ActorNetwork(sess, state_dim, action_dim, DDPG_config)\r\n  File \"/home/lkx/\u4e0b\u8f7d/DRL/ActorNetwork.py\", line 41, in __init__\r\n    self.model, self.weights, self.state = self.create_actor_network(state_size, action_size)\r\n  File \"/home/lkx/\u4e0b\u8f7d/DRL/ActorNetwork.py\", line 65, in create_actor_network\r\n    h0 = Dense(self.HIDDEN1_UNITS, activation=self.h_acti, init=glorot_normal, name='a_h0')(S)\r\n  File \"/home/lkx/.local/lib/python3.5/site-packages/keras/engine/base_layer.py\", line 431, in __call__\r\n    self.build(unpack_singleton(input_shapes))\r\n  File \"/home/lkx/.local/lib/python3.5/site-packages/keras/layers/core.py\", line 866, in build\r\n    constraint=self.kernel_constraint)\r\n  File \"/home/lkx/.local/lib/python3.5/site-packages/keras/legacy/interfaces.py\", line 91, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/home/lkx/.local/lib/python3.5/site-packages/keras/engine/base_layer.py\", line 252, in add_weight\r\n    constraint=constraint)\r\n  File \"/home/lkx/.local/lib/python3.5/site-packages/keras/backend/tensorflow_backend.py\", line 402, in variable\r\n    v = tf.Variable(value, dtype=tf.as_dtype(dtype), name=name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 183, in __call__\r\n    return cls._variable_v1_call(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 146, in _variable_v1_call\r\n    aggregation=aggregation)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 125, in <lambda>\r\n    previous_getter = lambda **kwargs: default_variable_creator(None, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2444, in default_variable_creator\r\n    expected_shape=expected_shape, import_scope=import_scope)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 187, in __call__\r\n    return super(VariableMetaclass, cls).__call__(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 1329, in __init__\r\n    constraint=constraint)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 1437, in _init_from_args\r\n    initial_value(), name=\"initial_value\", dtype=dtype)\r\nTypeError: __call__() missing 1 required positional argument: 'shape'\r\n\r\n> I just run the http://knowledgedefinednetworking.org/ DRL, what should i do ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/149", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/149/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/149/events", "html_url": "https://github.com/pypa/packaging/issues/149", "id": 381386045, "node_id": "MDU6SXNzdWUzODEzODYwNDU=", "number": 149, "title": "Accept empty string as local identifier (e.g. 1.0+ == 1.0)", "user": {"login": "paulproteus", "id": 25457, "node_id": "MDQ6VXNlcjI1NDU3", "avatar_url": "https://avatars0.githubusercontent.com/u/25457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulproteus", "html_url": "https://github.com/paulproteus", "followers_url": "https://api.github.com/users/paulproteus/followers", "following_url": "https://api.github.com/users/paulproteus/following{/other_user}", "gists_url": "https://api.github.com/users/paulproteus/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulproteus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulproteus/subscriptions", "organizations_url": "https://api.github.com/users/paulproteus/orgs", "repos_url": "https://api.github.com/users/paulproteus/repos", "events_url": "https://api.github.com/users/paulproteus/events{/privacy}", "received_events_url": "https://api.github.com/users/paulproteus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-15T23:40:03Z", "updated_at": "2018-11-19T05:24:42Z", "closed_at": "2018-11-19T05:24:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since `pipenv` relies on `pythonfinder` to find `python2.7` and friends, and since `pythonfinder` relies on `packaging`'s version number calculation stuff, I'm submitting this issue here.\r\n\r\n**Summary**\r\n\r\nIf `packaging` can accept `1.0+` as a version number equal to `1.0`, that will avoid a crash in `pythonfinder` that will result in `pipenv` working for a colleague.\r\n\r\n*Steps to reproduce*\r\n\r\n- Create any Pipfile and pipenv environment\r\n- Run `pipenv install`\r\n- Get a Python binary whose version number is `2.7.15+`, as on Ubuntu 18.10\r\n- See a crash, ending in a stack trace similar to:\r\n\r\n```\r\n  File \".../pythonfinder/models/python.py\", line 366, in parse\r\n    raise ValueError(\"Not a valid python version: %r\" % version)\r\nValueError: Not a valid python version: <LegacyVersion('2.7.15+')>\r\n```\r\n\r\nOther details:\r\n\r\n```\r\n$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 18.10\r\nRelease:    18.10\r\nCodename:   cosmic\r\n$ /usr/bin/python2 --version\r\nPython 2.7.15+\r\n```\r\n\r\n**Proposed fix**\r\n\r\nAccept `2.7.15+` as equivalent to `2.7.15`.\r\n\r\nI'll work on a pull request now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/144", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/144/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/144/events", "html_url": "https://github.com/pypa/packaging/issues/144", "id": 374642433, "node_id": "MDU6SXNzdWUzNzQ2NDI0MzM=", "number": 144, "title": "flake8 generates W503 and W504 which are conflicting in the latest version", "user": {"login": "opethe1st", "id": 7265129, "node_id": "MDQ6VXNlcjcyNjUxMjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7265129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opethe1st", "html_url": "https://github.com/opethe1st", "followers_url": "https://api.github.com/users/opethe1st/followers", "following_url": "https://api.github.com/users/opethe1st/following{/other_user}", "gists_url": "https://api.github.com/users/opethe1st/gists{/gist_id}", "starred_url": "https://api.github.com/users/opethe1st/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opethe1st/subscriptions", "organizations_url": "https://api.github.com/users/opethe1st/orgs", "repos_url": "https://api.github.com/users/opethe1st/repos", "events_url": "https://api.github.com/users/opethe1st/events{/privacy}", "received_events_url": "https://api.github.com/users/opethe1st/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-27T12:55:47Z", "updated_at": "2018-10-28T14:26:22Z", "closed_at": "2018-10-28T14:26:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is why some of the recent PRs have build failures", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/141", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/141/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/141/events", "html_url": "https://github.com/pypa/packaging/issues/141", "id": 374630314, "node_id": "MDU6SXNzdWUzNzQ2MzAzMTQ=", "number": 141, "title": "dev-requirements needs to include pytest or the example should use tox -e py", "user": {"login": "opethe1st", "id": 7265129, "node_id": "MDQ6VXNlcjcyNjUxMjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7265129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opethe1st", "html_url": "https://github.com/opethe1st", "followers_url": "https://api.github.com/users/opethe1st/followers", "following_url": "https://api.github.com/users/opethe1st/following{/other_user}", "gists_url": "https://api.github.com/users/opethe1st/gists{/gist_id}", "starred_url": "https://api.github.com/users/opethe1st/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opethe1st/subscriptions", "organizations_url": "https://api.github.com/users/opethe1st/orgs", "repos_url": "https://api.github.com/users/opethe1st/repos", "events_url": "https://api.github.com/users/opethe1st/events{/privacy}", "received_events_url": "https://api.github.com/users/opethe1st/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-27T10:21:56Z", "updated_at": "2019-11-12T20:23:21Z", "closed_at": "2019-11-12T20:23:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "dev-requirements needs `pytest` installed for this to work \r\n```\r\n.. code-block:: console\r\n\r\n    $ # Create a virtualenv and activate it\r\n    $ pip install --requirement dev-requirements.txt\r\n    $ pip install --editable .\r\n\r\nYou are now ready to run the tests and build the documentation.\r\n\r\nRunning tests\r\n~~~~~~~~~~~~~\r\n\r\npackaging unit tests are found in the ``tests/`` directory and are\r\ndesigned to be run using `pytest`_. `pytest`_ will discover the tests\r\nautomatically, so all you have to do is:\r\n\r\n.. code-block:: console\r\n\r\n    $ py.test\r\n    ...\r\n    62746 passed in 220.43 seconds\r\n``` \r\n- this is from - https://github.com/pypa/packaging/blob/master/docs/development/getting-started.rst\r\nthis section doesn't work if there is no pytest in your virtualenv or default python", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/139", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/139/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/139/events", "html_url": "https://github.com/pypa/packaging/issues/139", "id": 374480330, "node_id": "MDU6SXNzdWUzNzQ0ODAzMzA=", "number": 139, "title": "Officially support Python 3.7", "user": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1105849599, "node_id": "MDU6TGFiZWwxMTA1ODQ5NTk5", "url": "https://api.github.com/repos/pypa/packaging/labels/good%20first%20issue", "name": "good first issue", "color": "88ff6d", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-26T17:36:47Z", "updated_at": "2018-10-28T15:39:38Z", "closed_at": "2018-10-28T15:39:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "- [x] Test against Python 3.7\r\n- [ ] Add Python 3.7 classifier", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/133", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/133/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/133/events", "html_url": "https://github.com/pypa/packaging/issues/133", "id": 341242576, "node_id": "MDU6SXNzdWUzNDEyNDI1NzY=", "number": 133, "title": "VCS links", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-14T15:03:59Z", "updated_at": "2019-08-26T18:43:26Z", "closed_at": "2019-08-26T18:43:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "VCS links like `git+https://github.com/foo/bar`, `git+https://github.com/foo/bar#egg=baz` and `git+https://github.com/foo/bar#egg=baz-1.0` are not supported.  Similar to https://github.com/pypa/packaging/issues/120\r\n\r\nThey are supported by pip and setuptools.\r\n\r\n```py\r\n >>> packaging.requirements.Requirement('git+https://github.com/foo/bar')\r\n  Traceback (most recent call last):\r\n  File \"packaging/requirements.py\", line 97, in __init__\r\n    requirement_string[e.loc:e.loc + 8]))\r\npackaging.requirements.InvalidRequirement: Invalid requirement, parse error at \"'+https:/'\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/127", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/127/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/127/events", "html_url": "https://github.com/pypa/packaging/issues/127", "id": 301314015, "node_id": "MDU6SXNzdWUzMDEzMTQwMTU=", "number": 127, "title": "Missing Git tag for 17.1 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-01T08:18:06Z", "updated_at": "2019-01-20T11:10:41Z", "closed_at": "2019-01-20T11:10:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/121", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/121/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/121/events", "html_url": "https://github.com/pypa/packaging/issues/121", "id": 296495337, "node_id": "MDU6SXNzdWUyOTY0OTUzMzc=", "number": 121, "title": "Normalization of equivalent versions", "user": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-12T19:26:59Z", "updated_at": "2018-02-28T04:42:21Z", "closed_at": "2018-02-28T04:42:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It'd be nice if there was an easy way to get a \"normalized\" version, e.g.:\r\n\r\n```\r\n>>> from packaging.version import parse\r\n>>> parse('4.1') == parse('4.1.0')\r\nTrue\r\n>>> parse('4.1').normalized_version\r\n'4.1.0'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/119", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/119/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/119/events", "html_url": "https://github.com/pypa/packaging/issues/119", "id": 292175749, "node_id": "MDU6SXNzdWUyOTIxNzU3NDk=", "number": 119, "title": "Future Python versions might be problematic with the definition of Environment Marker Variable `python_version`", "user": {"login": "finefoot", "id": 33361833, "node_id": "MDQ6VXNlcjMzMzYxODMz", "avatar_url": "https://avatars3.githubusercontent.com/u/33361833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finefoot", "html_url": "https://github.com/finefoot", "followers_url": "https://api.github.com/users/finefoot/followers", "following_url": "https://api.github.com/users/finefoot/following{/other_user}", "gists_url": "https://api.github.com/users/finefoot/gists{/gist_id}", "starred_url": "https://api.github.com/users/finefoot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finefoot/subscriptions", "organizations_url": "https://api.github.com/users/finefoot/orgs", "repos_url": "https://api.github.com/users/finefoot/repos", "events_url": "https://api.github.com/users/finefoot/events{/privacy}", "received_events_url": "https://api.github.com/users/finefoot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-28T04:17:41Z", "updated_at": "2019-07-27T22:07:38Z", "closed_at": "2019-07-27T22:07:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "There might be a problem with https://github.com/pypa/packaging/blob/c22fbd8c7bfa989df911243b10901645b7d4758d/packaging/markers.py#L267 in the future.\r\n\r\nThe line is using the definition of the Environment Marker Variable `python_version` according to PEP 508. But what if the Python version will consist of more than 3 characters?\r\n\r\nI originally posted this as a question on Stack Overflow https://stackoverflow.com/questions/48119291/whats-with-the-definition-of-environment-marker-variable-python-version-in-pe Just as Martijn Pieters wrote there, something like `\".\".join(platform.python_version_tuple()[:2])` would fix the problem.\r\n\r\nI guess, the PEP would have to be changed first?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/114", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/114/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/114/events", "html_url": "https://github.com/pypa/packaging/issues/114", "id": 266957878, "node_id": "MDU6SXNzdWUyNjY5NTc4Nzg=", "number": 114, "title": "Making it possible to bump versions", "user": {"login": "pradyunsg", "id": 3275593, "node_id": "MDQ6VXNlcjMyNzU1OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3275593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pradyunsg", "html_url": "https://github.com/pradyunsg", "followers_url": "https://api.github.com/users/pradyunsg/followers", "following_url": "https://api.github.com/users/pradyunsg/following{/other_user}", "gists_url": "https://api.github.com/users/pradyunsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pradyunsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pradyunsg/subscriptions", "organizations_url": "https://api.github.com/users/pradyunsg/orgs", "repos_url": "https://api.github.com/users/pradyunsg/repos", "events_url": "https://api.github.com/users/pradyunsg/events{/privacy}", "received_events_url": "https://api.github.com/users/pradyunsg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-19T19:19:22Z", "updated_at": "2019-08-21T00:22:53Z", "closed_at": "2019-08-20T20:37:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Thoughts about something like `Version.bump_major() -> Version`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/112", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/112/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/112/events", "html_url": "https://github.com/pypa/packaging/issues/112", "id": 262558461, "node_id": "MDU6SXNzdWUyNjI1NTg0NjE=", "number": 112, "title": "inconsistency with different version specifier and special version ?", "user": {"login": "gst", "id": 38055, "node_id": "MDQ6VXNlcjM4MDU1", "avatar_url": "https://avatars1.githubusercontent.com/u/38055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gst", "html_url": "https://github.com/gst", "followers_url": "https://api.github.com/users/gst/followers", "following_url": "https://api.github.com/users/gst/following{/other_user}", "gists_url": "https://api.github.com/users/gst/gists{/gist_id}", "starred_url": "https://api.github.com/users/gst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gst/subscriptions", "organizations_url": "https://api.github.com/users/gst/orgs", "repos_url": "https://api.github.com/users/gst/repos", "events_url": "https://api.github.com/users/gst/events{/privacy}", "received_events_url": "https://api.github.com/users/gst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-03T19:36:05Z", "updated_at": "2017-10-03T19:39:31Z", "closed_at": "2017-10-03T19:39:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nRequest for explanation : \r\n\r\nI recently discovered what I think looks like an inconsistency in the `packaging` package (as vendored by pip-9.0.1).\r\n\r\nI've built for my work a wheel with this exact version : `3.0.32-rdo.1.0.0`\r\n\r\nWhen I use pip with `pip install mypackage==3.0.32-rdo.1.0.0`  it successfully identify the correct wheel and install it. (1)\r\n\r\nBut if I use pip with `pip install mypackage~=3.0.32-rdo.1.0.0` ( *~=*  instead of _==_ ) then I get an error from `packaging` package (2) : \r\n\r\n```\r\nInvalid requirement: 'mypackage~=3.0.32-rdo.1.0.0'\r\nTraceback (most recent call last):\r\n  File \"/home/gregory/foo/lib/python2.7/site-packages/pip/req/req_install.py\", line 82, in __init__\r\n    req = Requirement(req)\r\n  File \"/home/gregory/foo/lib/python2.7/site-packages/pip/_vendor/packaging/requirements.py\", line 96, in __init__\r\n    requirement_string[e.loc:e.loc + 8]))\r\nInvalidRequirement: Invalid requirement, parse error at \"'do.1.0.0'\"\r\n```\r\n\r\n(1) + (2) : this is what I think looks like an inconsistency or I miss something.. ?\r\n\r\n\r\n3) side question :  I'm actually managing a wheels folder from wich I `pip install` with `--find-links` so.\r\n\r\nin it I have many version of this *mypackage* ; some of them don't have the extra `-rdo.x.y.z` _subversion_  part (or _tag_ is a more appropriate term maybe).\r\n\r\nWhen I so install with `pip install mypackage~=3.0.32` (or *>=* )  then my `-rdo.x.y.z` other wheel isn't resolved/installed but only a \"normal\" version (`==3.0.32`) without this subversion or version tag.\r\n\r\nis it normal ?\r\n\r\nI'm not sure using such version _subpart_ is very common / nor really officially supported actually .. ?\r\nif you have any good pointer on that ?\r\n\r\nThx for any info :)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/106", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/106/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/106/events", "html_url": "https://github.com/pypa/packaging/issues/106", "id": 231387448, "node_id": "MDU6SXNzdWUyMzEzODc0NDg=", "number": 106, "title": "Newer Python support", "user": {"login": "impredicative", "id": 566650, "node_id": "MDQ6VXNlcjU2NjY1MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/566650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/impredicative", "html_url": "https://github.com/impredicative", "followers_url": "https://api.github.com/users/impredicative/followers", "following_url": "https://api.github.com/users/impredicative/following{/other_user}", "gists_url": "https://api.github.com/users/impredicative/gists{/gist_id}", "starred_url": "https://api.github.com/users/impredicative/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/impredicative/subscriptions", "organizations_url": "https://api.github.com/users/impredicative/orgs", "repos_url": "https://api.github.com/users/impredicative/repos", "events_url": "https://api.github.com/users/impredicative/events{/privacy}", "received_events_url": "https://api.github.com/users/impredicative/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-25T16:19:15Z", "updated_at": "2018-05-22T13:25:24Z", "closed_at": "2018-05-22T13:25:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can the list of Categories at https://pypi.python.org/pypi/packaging/ be updated to also include 3.5 and 3.6, assuming the package supports them?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/104", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/104/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/104/events", "html_url": "https://github.com/pypa/packaging/issues/104", "id": 220069979, "node_id": "MDU6SXNzdWUyMjAwNjk5Nzk=", "number": 104, "title": "Some sort of race condition in packaging.requirement", "user": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-07T00:10:00Z", "updated_at": "2017-04-07T01:22:32Z", "closed_at": "2017-04-07T00:40:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```py\r\nimport sys\r\nimport threading\r\n\r\nfrom packaging.requirements import Requirement\r\n\r\n\r\nN_THREADS = 32\r\n\r\ndef target():\r\n    Requirement(\"x[]\")\r\n\r\ndef main(argv):\r\n    threads = []\r\n    for i in range(N_THREADS):\r\n        threads.append(threading.Thread(target=target))\r\n    for t in threads:\r\n        t.start()\r\n    for t in threads:\r\n        t.join()\r\n    print(\"Ok\")\r\n\r\nif __name__ == \"__main__\":\r\n    main(sys.argv)\r\n```\r\n\r\nThis fails every once in a while. Put in a loop in your terminal for best results.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/95", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/95/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/95/events", "html_url": "https://github.com/pypa/packaging/issues/95", "id": 206983318, "node_id": "MDU6SXNzdWUyMDY5ODMzMTg=", "number": 95, "title": "Setuptools 34 breaks packaging CI builds", "user": {"login": "jaraco", "id": 308610, "node_id": "MDQ6VXNlcjMwODYxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/308610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaraco", "html_url": "https://github.com/jaraco", "followers_url": "https://api.github.com/users/jaraco/followers", "following_url": "https://api.github.com/users/jaraco/following{/other_user}", "gists_url": "https://api.github.com/users/jaraco/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaraco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaraco/subscriptions", "organizations_url": "https://api.github.com/users/jaraco/orgs", "repos_url": "https://api.github.com/users/jaraco/repos", "events_url": "https://api.github.com/users/jaraco/events{/privacy}", "received_events_url": "https://api.github.com/users/jaraco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-11T14:37:11Z", "updated_at": "2017-10-22T18:12:55Z", "closed_at": "2017-10-22T18:12:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It appears from [this job](https://travis-ci.org/pypa/packaging/builds/196614333) and probably others that the introduction of Setuptools 34 is breaking the tox setup for packaging. The traceback implicates pypa/setuptools#951 and pypa/pip#4264 as the cause.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/94", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/94/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/94/events", "html_url": "https://github.com/pypa/packaging/issues/94", "id": 205253471, "node_id": "MDU6SXNzdWUyMDUyNTM0NzE=", "number": 94, "title": "Error in requirements.py prevents mysqlclient package install", "user": {"login": "chrisspen", "id": 116631, "node_id": "MDQ6VXNlcjExNjYzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/116631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisspen", "html_url": "https://github.com/chrisspen", "followers_url": "https://api.github.com/users/chrisspen/followers", "following_url": "https://api.github.com/users/chrisspen/following{/other_user}", "gists_url": "https://api.github.com/users/chrisspen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisspen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisspen/subscriptions", "organizations_url": "https://api.github.com/users/chrisspen/orgs", "repos_url": "https://api.github.com/users/chrisspen/repos", "events_url": "https://api.github.com/users/chrisspen/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisspen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-03T19:53:42Z", "updated_at": "2017-02-03T22:29:34Z", "closed_at": "2017-02-03T22:29:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to install the mysqlclient package in a virtualenv on a fresh Ubuntu 16, and when I run:\r\n\r\n    pip install --cache-dir /tmp --no-binary mysqlclient mysqlclient\r\n\r\nit fails with the traceback:\r\n\r\n    Traceback (most recent call last):\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/pip/basecommand.py\", line 215, in main\r\n        status = self.run(options, args)\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/pip/commands/install.py\", line 335, in run\r\n        wb.build(autobuilding=True)\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/pip/wheel.py\", line 749, in build\r\n        self.requirement_set.prepare_files(self.finder)\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/pip/req/req_set.py\", line 380, in prepare_files\r\n        ignore_dependencies=self.ignore_dependencies))\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/pip/req/req_set.py\", line 634, in _prepare_file\r\n        abstract_dist.prep_for_dist()\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/pip/req/req_set.py\", line 129, in prep_for_dist\r\n        self.req_to_install.run_egg_info()\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/pip/req/req_install.py\", line 412, in run_egg_info\r\n        self.setup_py, self.name,\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/pip/req/req_install.py\", line 387, in setup_py\r\n        import setuptools  # noqa\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/setuptools/__init__.py\", line 12, in <module>\r\n        import setuptools.version\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/setuptools/version.py\", line 1, in <module>\r\n        import pkg_resources\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 72, in <module>\r\n        import packaging.requirements\r\n      File \"/myproject/build/.env/local/lib/python2.7/site-packages/packaging/requirements.py\", line 59, in <module>\r\n        MARKER_EXPR = originalTextFor(MARKER_EXPR())(\"marker\")\r\n    TypeError: __call__() takes exactly 2 arguments (1 given)\r\n\r\n[This SO answer](http://stackoverflow.com/a/41974462/247542) suggests it's a problem in requirements.txt, specifically on [this line](https://github.com/pypa/packaging/blob/master/packaging/requirements.py#L59), and recommends that:\r\n\r\n    MARKER_EXPR = originalTextFor(MARKER_EXPR())(\"marker\")\r\n\r\nshould instead be changed to:\r\n\r\n    MARKER_EXPR = originalTextFor(MARKER_EXPR(\"\"))(\"marker\")\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/91", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/91/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/91/events", "html_url": "https://github.com/pypa/packaging/issues/91", "id": 203091322, "node_id": "MDU6SXNzdWUyMDMwOTEzMjI=", "number": 91, "title": "Incompatible version of pyparsing not restricted in setup.py", "user": {"login": "Lehych", "id": 66037, "node_id": "MDQ6VXNlcjY2MDM3", "avatar_url": "https://avatars1.githubusercontent.com/u/66037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lehych", "html_url": "https://github.com/Lehych", "followers_url": "https://api.github.com/users/Lehych/followers", "following_url": "https://api.github.com/users/Lehych/following{/other_user}", "gists_url": "https://api.github.com/users/Lehych/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lehych/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lehych/subscriptions", "organizations_url": "https://api.github.com/users/Lehych/orgs", "repos_url": "https://api.github.com/users/Lehych/repos", "events_url": "https://api.github.com/users/Lehych/events{/privacy}", "received_events_url": "https://api.github.com/users/Lehych/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-25T12:34:40Z", "updated_at": "2017-04-07T00:40:41Z", "closed_at": "2017-04-07T00:40:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "To reproduce do the following\r\n`virtualenv venv &&  venv/bin/pip install pyparsing==2.0.1 && venv/bin/pip install packaging==16.3 && venv/bin/python -c \"import packaging.requirements\"`\r\nyoull get\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"venv/local/lib/python2.7/site-packages/packaging/requirements.py\", line 59, in <module>\r\n    MARKER_EXPR = originalTextFor(MARKER_EXPR())(\"marker\")\r\nTypeError: __call__() takes exactly 2 arguments (1 given)\r\n```\r\n\r\nIn pyparsing it was fixed here: https://sourceforge.net/p/pyparsing/code/256/ (v 2.0.2)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/86", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/86/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/86/events", "html_url": "https://github.com/pypa/packaging/issues/86", "id": 186762218, "node_id": "MDU6SXNzdWUxODY3NjIyMTg=", "number": 86, "title": "Bug in `python_version` comparison with minor version ?", "user": {"login": "cournape", "id": 25111, "node_id": "MDQ6VXNlcjI1MTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/25111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cournape", "html_url": "https://github.com/cournape", "followers_url": "https://api.github.com/users/cournape/followers", "following_url": "https://api.github.com/users/cournape/following{/other_user}", "gists_url": "https://api.github.com/users/cournape/gists{/gist_id}", "starred_url": "https://api.github.com/users/cournape/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cournape/subscriptions", "organizations_url": "https://api.github.com/users/cournape/orgs", "repos_url": "https://api.github.com/users/cournape/repos", "events_url": "https://api.github.com/users/cournape/events{/privacy}", "received_events_url": "https://api.github.com/users/cournape/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922662, "node_id": "MDU6TGFiZWw5OTkyMjY2Mg==", "url": "https://api.github.com/repos/pypa/packaging/labels/bug", "name": "bug", "color": "e00202", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-02T10:22:38Z", "updated_at": "2019-08-26T18:41:14Z", "closed_at": "2019-08-26T18:41:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following was unexpected for me, and smells like a bug ?\r\n\r\n``` python\r\nimport sys\r\nfrom packaging.markers import Marker\r\n\r\nprint(sys.version_info)\r\nprint(Marker('python_version < \"2.7.6\"').evaluate())\r\n```\r\n\r\nOutputing:\r\n\r\n``` bash\r\nsys.version_info(major=2, minor=7, micro=10, releaselevel='final', serial=0)\r\nTrue\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/84", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/84/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/84/events", "html_url": "https://github.com/pypa/packaging/issues/84", "id": 174578693, "node_id": "MDU6SXNzdWUxNzQ1Nzg2OTM=", "number": 84, "title": "expose an API to differentiate between dev/rc releases", "user": {"login": "digwanderlust", "id": 5316293, "node_id": "MDQ6VXNlcjUzMTYyOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5316293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/digwanderlust", "html_url": "https://github.com/digwanderlust", "followers_url": "https://api.github.com/users/digwanderlust/followers", "following_url": "https://api.github.com/users/digwanderlust/following{/other_user}", "gists_url": "https://api.github.com/users/digwanderlust/gists{/gist_id}", "starred_url": "https://api.github.com/users/digwanderlust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/digwanderlust/subscriptions", "organizations_url": "https://api.github.com/users/digwanderlust/orgs", "repos_url": "https://api.github.com/users/digwanderlust/repos", "events_url": "https://api.github.com/users/digwanderlust/events{/privacy}", "received_events_url": "https://api.github.com/users/digwanderlust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-01T17:17:58Z", "updated_at": "2018-02-28T04:42:21Z", "closed_at": "2018-02-28T04:42:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently is_prerelease allows you to differentiate between a final release and pre_release.  However if your project uses both dev and rc releases there is no way using packaging to differentiate. \n\nWe need to resort to something similar to:\n\n```\nsuffix = version.public[len(version.base_version):]\ncomponents = version.base_version.split('.') + [suffix]\nif suffix == '' or suffix.startswith('rc'):\n```\n\nA new attribute that allows access to the release suffix would be helpful since this is already being parsed by packaging.  Also making the components available would be useful for example:\n\n'1.2.3rc9' - > ['1', '2', '3', 'rc9']\n'1.2.3-rc9' -> ['1', '2', '3', 'rc9']\n'1.2.3' -> ['1', '2', '3']\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/83", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/83/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/83/events", "html_url": "https://github.com/pypa/packaging/issues/83", "id": 173528320, "node_id": "MDU6SXNzdWUxNzM1MjgzMjA=", "number": 83, "title": "Lift pip.pep425tags into packaging", "user": {"login": "leorochael", "id": 239125, "node_id": "MDQ6VXNlcjIzOTEyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/239125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leorochael", "html_url": "https://github.com/leorochael", "followers_url": "https://api.github.com/users/leorochael/followers", "following_url": "https://api.github.com/users/leorochael/following{/other_user}", "gists_url": "https://api.github.com/users/leorochael/gists{/gist_id}", "starred_url": "https://api.github.com/users/leorochael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leorochael/subscriptions", "organizations_url": "https://api.github.com/users/leorochael/orgs", "repos_url": "https://api.github.com/users/leorochael/repos", "events_url": "https://api.github.com/users/leorochael/events{/privacy}", "received_events_url": "https://api.github.com/users/leorochael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-26T19:41:16Z", "updated_at": "2019-05-10T12:08:20Z", "closed_at": "2019-05-10T12:08:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "While discussing how to implement wheel installation support into `setuptools`, @dholth mentioned that the `wheel` package had its own implementation of PEP-425 parsing, that was different than the one in pip.\n\nIn order not to duplicate another piece of code, wouldn't it be better to lift `pep425tags` into `packaging`, which is vendored in both `pip` and `setuptools`?\n\nAnd since the main consumer of these tags are functions that parse wheel filenames, what do you think about lifting the `pip.wheel:Wheel` class as well? (which would be better named `WheelFilename`, since pretty much all it does is parse information from a potential wheel filename to help deciding whether it should be downloaded/installed or not).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/81", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/81/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/81/events", "html_url": "https://github.com/pypa/packaging/issues/81", "id": 171599817, "node_id": "MDU6SXNzdWUxNzE1OTk4MTc=", "number": 81, "title": "Provide function to create valid RPM version?", "user": {"login": "toabctl", "id": 276317, "node_id": "MDQ6VXNlcjI3NjMxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/276317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toabctl", "html_url": "https://github.com/toabctl", "followers_url": "https://api.github.com/users/toabctl/followers", "following_url": "https://api.github.com/users/toabctl/following{/other_user}", "gists_url": "https://api.github.com/users/toabctl/gists{/gist_id}", "starred_url": "https://api.github.com/users/toabctl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toabctl/subscriptions", "organizations_url": "https://api.github.com/users/toabctl/orgs", "repos_url": "https://api.github.com/users/toabctl/repos", "events_url": "https://api.github.com/users/toabctl/events{/privacy}", "received_events_url": "https://api.github.com/users/toabctl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 99922664, "node_id": "MDU6TGFiZWw5OTkyMjY2NA==", "url": "https://api.github.com/repos/pypa/packaging/labels/enhancement", "name": "enhancement", "color": "1060ea", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-17T08:16:41Z", "updated_at": "2020-07-15T18:58:14Z", "closed_at": "2020-07-15T18:58:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is more a question than an issue.\r\nWould you accept a PR to add a new function which can create a valid version for RPM packages from a given version? Same could be done for DEB versions.\r\nThis is something that would be very useful when packaging python software and dealing with alpha/beta/rc/post releases .\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/79", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/79/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/79/events", "html_url": "https://github.com/pypa/packaging/issues/79", "id": 161618218, "node_id": "MDU6SXNzdWUxNjE2MTgyMTg=", "number": 79, "title": "test failure with python 3.5 release candidate build", "user": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars3.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-22T08:08:44Z", "updated_at": "2016-07-05T19:40:56Z", "closed_at": "2016-07-05T19:40:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "packaging test's fail with the release candidate build of of python3.5.2:\n\n=================================== FAILURES ===================================\n_________________ TestDefaultEnvironment.test_matches_expected _________________\n\nself = <tests.test_markers.TestDefaultEnvironment object at 0x7ff51c8e1278>\n\n```\n@pytest.mark.skipif(not hasattr(sys, 'implementation'),\n                    reason='sys.implementation does not exist')\ndef test_matches_expected(self):\n    environment = default_environment()\n\n    iver = \"{0.major}.{0.minor}.{0.micro}\".format(\n        sys.implementation.version\n    )\n    if sys.implementation.version.releaselevel != \"final\":\n        iver = \"{0}{1}[0]{2}\".format(\n            iver,\n            sys.implementation.version.releaselevel,\n            sys.implementation.version.serial,\n        )\n```\n\n> ```\n>   assert environment == {\n>         \"implementation_name\": sys.implementation.name,\n>         \"implementation_version\": iver,\n>         \"os_name\": os.name,\n>         \"platform_machine\": platform.machine(),\n>         \"platform_release\": platform.release(),\n>         \"platform_system\": platform.system(),\n>         \"platform_version\": platform.version(),\n>         \"python_full_version\": platform.python_version(),\n>         \"platform_python_implementation\": platform.python_implementation(),\n>         \"python_version\": platform.python_version()[:3],\n>         \"sys_platform\": sys.platform,\n>     }\n> ```\n> \n> E       assert {'implementat...'x86_64', ...} == {'implementati...'x86_64', ...}\n> E         Omitting 10 identical items, use -v to show\n> E         Differing items:\n> E         {'implementation_version': '3.5.2c1'} != {'implementation_version': '3.5.2candidate[0]1'}\n> E         Use -v to get the full diff\n\ntests/test_markers.py:134: AssertionError\n======== 1 failed, 28376 passed, 2 skipped, 1 xfailed in 41.70 seconds =========\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/77", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/77/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/77/events", "html_url": "https://github.com/pypa/packaging/issues/77", "id": 155778228, "node_id": "MDU6SXNzdWUxNTU3NzgyMjg=", "number": 77, "title": "shifting aways from pip internal api", "user": {"login": "stonebig", "id": 4312421, "node_id": "MDQ6VXNlcjQzMTI0MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stonebig", "html_url": "https://github.com/stonebig", "followers_url": "https://api.github.com/users/stonebig/followers", "following_url": "https://api.github.com/users/stonebig/following{/other_user}", "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}", "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions", "organizations_url": "https://api.github.com/users/stonebig/orgs", "repos_url": "https://api.github.com/users/stonebig/repos", "events_url": "https://api.github.com/users/stonebig/events{/privacy}", "received_events_url": "https://api.github.com/users/stonebig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-19T16:20:23Z", "updated_at": "2016-05-19T17:35:44Z", "closed_at": "2016-05-19T16:58:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello,\n\nI would like to get the equivalent of:\n\n```\nimport pip\n[(i.key,i.version) for i in pip.get_installed_distributions()]\n```\n\nwith `packaging` package. \n\nIs it possible ? Can anyone point me to an example ? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/75", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/75/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/75/events", "html_url": "https://github.com/pypa/packaging/issues/75", "id": 154539477, "node_id": "MDU6SXNzdWUxNTQ1Mzk0Nzc=", "number": 75, "title": "Marker string format breaks with \"win32\" in sys_platform", "user": {"login": "genericmoniker", "id": 2375404, "node_id": "MDQ6VXNlcjIzNzU0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2375404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genericmoniker", "html_url": "https://github.com/genericmoniker", "followers_url": "https://api.github.com/users/genericmoniker/followers", "following_url": "https://api.github.com/users/genericmoniker/following{/other_user}", "gists_url": "https://api.github.com/users/genericmoniker/gists{/gist_id}", "starred_url": "https://api.github.com/users/genericmoniker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genericmoniker/subscriptions", "organizations_url": "https://api.github.com/users/genericmoniker/orgs", "repos_url": "https://api.github.com/users/genericmoniker/repos", "events_url": "https://api.github.com/users/genericmoniker/events{/privacy}", "received_events_url": "https://api.github.com/users/genericmoniker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-12T17:36:41Z", "updated_at": "2016-05-25T17:05:02Z", "closed_at": "2016-05-25T14:49:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed this in pip 8.1.2, but I think the issue is in here.\n\nI have an \"extras_require\" in my setup.py like:\n`extras_require={':\"win32\" in sys_platform': ['pywin32==219','wmi==1.4.9'],}`\n\nWhen trying to install the package with pip, I get:\n\n```\nInvalid requirement: 'pywin32==219; win32 in \"sys_platform\"'\n```\n\nSomething seems to be quoting the variable rather than the value. I'd expect:\n\n```\n'pywin32==219; \"win32\" in sys_platform'\n```\n\nDigging through the code, I see markers.py, line 140:\n\n```\nreturn '{0} {1} \"{2}\"'.format(*marker)\n```\n\nThis would work for a marker using '==', but not one using 'in', where the order of the variable and value are typically switched. I think this is the problem. This works as expected in pip 8.1.1.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/72", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/72/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/72/events", "html_url": "https://github.com/pypa/packaging/issues/72", "id": 150585499, "node_id": "MDU6SXNzdWUxNTA1ODU0OTk=", "number": 72, "title": "Add support for python_implementation", "user": {"login": "gsnedders", "id": 176218, "node_id": "MDQ6VXNlcjE3NjIxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/176218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsnedders", "html_url": "https://github.com/gsnedders", "followers_url": "https://api.github.com/users/gsnedders/followers", "following_url": "https://api.github.com/users/gsnedders/following{/other_user}", "gists_url": "https://api.github.com/users/gsnedders/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsnedders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsnedders/subscriptions", "organizations_url": "https://api.github.com/users/gsnedders/orgs", "repos_url": "https://api.github.com/users/gsnedders/repos", "events_url": "https://api.github.com/users/gsnedders/events{/privacy}", "received_events_url": "https://api.github.com/users/gsnedders/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-04-23T19:04:52Z", "updated_at": "2016-08-22T18:19:41Z", "closed_at": "2016-04-23T20:27:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We currently support `platform.python_implementation` and `platform_python_implementation`. `setuptools`' previous fork of packaging did support `python_implementation` until it was replaced by `platform_python_implementation` in https://github.com/pypa/setuptools/commit/3bd5118eaa87b4f6598e0a473fec3623b6579d3b#diff-0c04a5cfcbd2a4bdd1121db108b79d3d.\n\n`python_implementation` existed in `setuptools` until that commit and the death of `MarkerEvaluation`, see https://github.com/pypa/setuptools/blob/f8b1293c408bbb652bec3f2ae6e5b4f33f3ca55e/pkg_resources/__init__.py#L1389 for the full (?) list of what was supported there. It also briefly existed in PEP 508 until February (https://hg.python.org/peps/rev/655a101719a5 replaced it with `platform_python_implementation`).\n\nThe one thing we're missing from what `setuptools` historically supported is `python_implementation`; we have everything else. This adds more duplication, but its removal broke some packages (e.g., some versions of html5lib).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/70", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/70/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/70/events", "html_url": "https://github.com/pypa/packaging/issues/70", "id": 143978401, "node_id": "MDU6SXNzdWUxNDM5Nzg0MDE=", "number": 70, "title": "Marker support for `platform.python_implementation` lost", "user": {"login": "jaraco", "id": 308610, "node_id": "MDQ6VXNlcjMwODYxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/308610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaraco", "html_url": "https://github.com/jaraco", "followers_url": "https://api.github.com/users/jaraco/followers", "following_url": "https://api.github.com/users/jaraco/following{/other_user}", "gists_url": "https://api.github.com/users/jaraco/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaraco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaraco/subscriptions", "organizations_url": "https://api.github.com/users/jaraco/orgs", "repos_url": "https://api.github.com/users/jaraco/repos", "events_url": "https://api.github.com/users/jaraco/events{/privacy}", "received_events_url": "https://api.github.com/users/jaraco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-28T13:32:45Z", "updated_at": "2016-03-29T15:00:55Z", "closed_at": "2016-03-29T15:00:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When Setuptools adopted Packaging 16.x for the marker implementation, it [lost support for](https://bitbucket.org/pypa/setuptools/issues/503/) the deprecated `platform.python_implementation` marker, which prevents packages using that deprecated marker from installing under Setuptools 20.2+.\n\n@s-t-e-v-e-n-k Can you develop a patch to support this legacy expectation?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/69", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/69/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/69/events", "html_url": "https://github.com/pypa/packaging/issues/69", "id": 139489627, "node_id": "MDU6SXNzdWUxMzk0ODk2Mjc=", "number": 69, "title": "Specifier comparison broken", "user": {"login": "toabctl", "id": 276317, "node_id": "MDQ6VXNlcjI3NjMxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/276317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toabctl", "html_url": "https://github.com/toabctl", "followers_url": "https://api.github.com/users/toabctl/followers", "following_url": "https://api.github.com/users/toabctl/following{/other_user}", "gists_url": "https://api.github.com/users/toabctl/gists{/gist_id}", "starred_url": "https://api.github.com/users/toabctl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toabctl/subscriptions", "organizations_url": "https://api.github.com/users/toabctl/orgs", "repos_url": "https://api.github.com/users/toabctl/repos", "events_url": "https://api.github.com/users/toabctl/events{/privacy}", "received_events_url": "https://api.github.com/users/toabctl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-09T06:31:51Z", "updated_at": "2016-03-09T14:09:30Z", "closed_at": "2016-03-09T14:07:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using packaging 16.5 I try to find the lowest version from a given SpecifierSet:\n\n```\n$ python\nPython 2.7.10 (default, May 24 2015, 14:46:10) [GCC] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from packaging.specifiers import SpecifierSet\n>>> s = SpecifierSet(\"!=1.2.0,!=1.3b1,<1.3,>=1.1.2\")\n>>> min(s)\n<Specifier('!=1.2.0')>\n```\n\nI expected that the minimum version is `1.1.2`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/65", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/65/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/65/events", "html_url": "https://github.com/pypa/packaging/issues/65", "id": 136322413, "node_id": "MDU6SXNzdWUxMzYzMjI0MTM=", "number": 65, "title": " Whitespace between a conditional operator and the following version identifier is not allowed by Requirement", "user": {"login": "drcraig", "id": 93644, "node_id": "MDQ6VXNlcjkzNjQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/93644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drcraig", "html_url": "https://github.com/drcraig", "followers_url": "https://api.github.com/users/drcraig/followers", "following_url": "https://api.github.com/users/drcraig/following{/other_user}", "gists_url": "https://api.github.com/users/drcraig/gists{/gist_id}", "starred_url": "https://api.github.com/users/drcraig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drcraig/subscriptions", "organizations_url": "https://api.github.com/users/drcraig/orgs", "repos_url": "https://api.github.com/users/drcraig/repos", "events_url": "https://api.github.com/users/drcraig/events{/privacy}", "received_events_url": "https://api.github.com/users/drcraig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-25T08:59:32Z", "updated_at": "2016-02-26T16:36:18Z", "closed_at": "2016-02-26T16:36:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Found in the release of setuptools 20.2.1, which vendors in packaging 16.4. It appears that packaging.requirements.Requirement does not comply with PEP-440's \"Whitespace between a conditional operator and the following version identifier is optional, as is the whitespace around the commas.\", per https://www.python.org/dev/peps/pep-0440/#version-specifiers. Instead, it fails when there is whitespace.\n\n```\n>>> from pkg_resources.extern.packaging.requirements import Requirement\n>>> Requirement('Jinja2 >=2.7, <3')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/tmp/v/local/lib/python2.7/site-packages/pkg_resources/_vendor/packaging/requirements.py\", line 94, in __init__\n    requirement_string[e.loc:e.loc + 8]))\npkg_resources._vendor.packaging.requirements.InvalidRequirement: Invalid requirement, parse error at \"'<3'\"\n```\n\nBut it succeeds when the whitespace is removed\n\n```\n>>> Requirement('Jinja2 >=2.7,<3')\n<Requirement('Jinja2<3,>=2.7')>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/64", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/64/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/64/events", "html_url": "https://github.com/pypa/packaging/issues/64", "id": 135924451, "node_id": "MDU6SXNzdWUxMzU5MjQ0NTE=", "number": 64, "title": "Support editable", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-24T01:49:03Z", "updated_at": "2016-07-05T19:53:43Z", "closed_at": "2016-07-05T19:53:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIn [1]: from packaging.requirements import Requirement\n\nIn [2]: Requirement('-e git://hello/world/git#egg=Hello')\n---------------------------------------------------------------------------\nInvalidRequirement                        Traceback (most recent call last)\n<ipython-input-2-5b0607f7b9e2> in <module>()\n----> 1 Requirement('-e git://hello/world/git#egg=Hello')\n\n/home/sontek/venvs/tox/local/lib/python2.7/site-packages/packaging/requirements.pyc in __init__(self, requirement_string)\n     92             raise InvalidRequirement(\n     93                 \"Invalid requirement, parse error at \\\"{0!r}\\\"\".format(\n---> 94                     requirement_string[e.loc:e.loc + 8]))\n     95 \n     96         self.name = req.name\n\nInvalidRequirement: Invalid requirement, parse error at \"'-e git:/'\"\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/61", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/61/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/61/events", "html_url": "https://github.com/pypa/packaging/issues/61", "id": 134938237, "node_id": "MDU6SXNzdWUxMzQ5MzgyMzc=", "number": 61, "title": "Requirement: local version labels are accepted with == but raises with >=", "user": {"login": "xavfernandez", "id": 1089744, "node_id": "MDQ6VXNlcjEwODk3NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1089744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xavfernandez", "html_url": "https://github.com/xavfernandez", "followers_url": "https://api.github.com/users/xavfernandez/followers", "following_url": "https://api.github.com/users/xavfernandez/following{/other_user}", "gists_url": "https://api.github.com/users/xavfernandez/gists{/gist_id}", "starred_url": "https://api.github.com/users/xavfernandez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xavfernandez/subscriptions", "organizations_url": "https://api.github.com/users/xavfernandez/orgs", "repos_url": "https://api.github.com/users/xavfernandez/repos", "events_url": "https://api.github.com/users/xavfernandez/events{/privacy}", "received_events_url": "https://api.github.com/users/xavfernandez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-19T18:20:00Z", "updated_at": "2016-02-19T19:00:48Z", "closed_at": "2016-02-19T19:00:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`packaging.requirements.Requirement('django==1.6+azeze')` is correctly parsed but `packaging.requirements.Requirement('django>=1.6+azeze')` raises `InvalidRequirement: Invalid requirement, parse error at \"'+azeze'\"`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/59", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/59/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/59/events", "html_url": "https://github.com/pypa/packaging/issues/59", "id": 130814529, "node_id": "MDU6SXNzdWUxMzA4MTQ1Mjk=", "number": 59, "title": "ImportError: cannot import name api_helpers", "user": {"login": "soso25", "id": 17033655, "node_id": "MDQ6VXNlcjE3MDMzNjU1", "avatar_url": "https://avatars3.githubusercontent.com/u/17033655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soso25", "html_url": "https://github.com/soso25", "followers_url": "https://api.github.com/users/soso25/followers", "following_url": "https://api.github.com/users/soso25/following{/other_user}", "gists_url": "https://api.github.com/users/soso25/gists{/gist_id}", "starred_url": "https://api.github.com/users/soso25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soso25/subscriptions", "organizations_url": "https://api.github.com/users/soso25/orgs", "repos_url": "https://api.github.com/users/soso25/repos", "events_url": "https://api.github.com/users/soso25/events{/privacy}", "received_events_url": "https://api.github.com/users/soso25/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-02T20:59:23Z", "updated_at": "2016-02-02T23:20:04Z", "closed_at": "2016-02-02T23:02:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nit 's been almost a day I try to run my function \"regina.py\", but I can not get this makes me errors like this:\n\n> > > import regina.py\n> > > Traceback (most recent call last):\n> > >   File \"<input>\", line 1, in <module>\n> > >   File \"/Applications/PyCharm CE.app/Contents/helpers/pydev/pydev_import_hook.py\", line 21, in do_import\n> > >     module = self._system_import(name, _args, *_kwargs)\n> > >   File \"/Users/Sokhna/Documents/mgp-test-i11vf/regina.py\", line 13, in <module>\n> > >     import diane\n> > >   File \"/Applications/PyCharm CE.app/Contents/helpers/pydev/pydev_import_hook.py\", line 21, in do_import\n> > >     module = self._system_import(name, _args, *_kwargs)\n> > >   File \"/Users/Sokhna/Documents/mgp-test-i11vf/diane.py\", line 19, in <module>\n> > >     import nayru\n> > >   File \"/Applications/PyCharm CE.app/Contents/helpers/pydev/pydev_import_hook.py\", line 21, in do_import\n> > >     module = self._system_import(name, _args, *_kwargs)\n> > >   File \"/Users/Sokhna/Documents/mgp-test-i11vf/nayru.py\", line 1, in <module>\n> > >     import falcon\n> > >   File \"/Applications/PyCharm CE.app/Contents/helpers/pydev/pydev_import_hook.py\", line 21, in do_import\n> > >     module = self._system_import(name, _args, *_kwargs)\n> > >   File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/falcon/__init__.py\", line 32, in <module>\n> > >     from falcon.api import API, DEFAULT_MEDIA_TYPE  # NOQA\n> > >   File \"/Applications/PyCharm CE.app/Contents/helpers/pydev/pydev_import_hook.py\", line 21, in do_import\n> > >     module = self._system_import(name, _args, *_kwargs)\n> > >   File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/falcon/api.py\", line 18, in <module>\n> > >     from falcon import api_helpers as helpers\n> > > ImportError: cannot import name api_helpers\n\nI just started python and there I am disappointed because I don't understand anything.\n\nCan anyone help me please :( :( :(\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/48", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/48/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/48/events", "html_url": "https://github.com/pypa/packaging/issues/48", "id": 120059745, "node_id": "MDU6SXNzdWUxMjAwNTk3NDU=", "number": 48, "title": "Incompliant SpecifierSet behavior with prerelease versions", "user": {"login": "arcivanov", "id": 5355666, "node_id": "MDQ6VXNlcjUzNTU2NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5355666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcivanov", "html_url": "https://github.com/arcivanov", "followers_url": "https://api.github.com/users/arcivanov/followers", "following_url": "https://api.github.com/users/arcivanov/following{/other_user}", "gists_url": "https://api.github.com/users/arcivanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcivanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcivanov/subscriptions", "organizations_url": "https://api.github.com/users/arcivanov/orgs", "repos_url": "https://api.github.com/users/arcivanov/repos", "events_url": "https://api.github.com/users/arcivanov/events{/privacy}", "received_events_url": "https://api.github.com/users/arcivanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-12-02T23:30:32Z", "updated_at": "2015-12-02T23:58:10Z", "closed_at": "2015-12-02T23:56:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following [snippet](https://github.com/pypa/packaging/blob/master/packaging/specifiers.py#L717):\n\n```\n        # We can determine if we're going to allow pre-releases by looking to\n        # see if any of the underlying items supports them. If none of them do\n        # and this item is a pre-release then we do not allow it and we can\n        # short circuit that here.\n        # Note: This means that 1.0.dev1 would not be contained in something\n        #       like >=1.0.devabc however it would be in >=1.0.debabc,>0.0.dev0\n        if not prereleases and item.is_prerelease:\n            return False\n```\n\nThe actual code does not comply with the stated purpose in the comment above.\n\n`SpecifierSet(\">=1.0.devabc,>0.0.dev0\", False).contains(Version(\"1.0.dev1\")) == False`\n\nWhat should be happening is:\n\n```\nSpecifierSet(\">=1.0\", False).contains(Version(\"1.1.dev1\")) == False\nSpecifierSet(\">=1.0\", True).contains(Version(\"1.1.dev1\")) == True\nSpecifierSet(\">=1.0,>0.0.dev0\", False).contains(Version(\"1.1.dev1\")) == True\nSpecifierSet(\">=1.0,>0.0.dev0\", True).contains(Version(\"1.1.dev1\")) == True\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/46", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/46/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/46/events", "html_url": "https://github.com/pypa/packaging/issues/46", "id": 117357179, "node_id": "MDU6SXNzdWUxMTczNTcxNzk=", "number": 46, "title": "PyPi page looks strange", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-17T13:45:37Z", "updated_at": "2016-01-19T15:29:36Z", "closed_at": "2016-01-16T18:05:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The pypi page looks strange:\n\nhttps://pypi.python.org/pypi/packaging\n\nThe reST markup does not get rendered.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/42", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/42/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/42/events", "html_url": "https://github.com/pypa/packaging/issues/42", "id": 111462145, "node_id": "MDU6SXNzdWUxMTE0NjIxNDU=", "number": 42, "title": "Relicense as dual Apache / BSD 2 clause", "user": {"login": "dstufft", "id": 145979, "node_id": "MDQ6VXNlcjE0NTk3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dstufft", "html_url": "https://github.com/dstufft", "followers_url": "https://api.github.com/users/dstufft/followers", "following_url": "https://api.github.com/users/dstufft/following{/other_user}", "gists_url": "https://api.github.com/users/dstufft/gists{/gist_id}", "starred_url": "https://api.github.com/users/dstufft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dstufft/subscriptions", "organizations_url": "https://api.github.com/users/dstufft/orgs", "repos_url": "https://api.github.com/users/dstufft/repos", "events_url": "https://api.github.com/users/dstufft/events{/privacy}", "received_events_url": "https://api.github.com/users/dstufft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-10-14T18:34:31Z", "updated_at": "2015-10-20T12:07:30Z", "closed_at": "2015-10-20T12:07:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Similarly to what pyca/cryptography did, let's relicense as dual Apache License 2.0 and BSD 2 clause. This will allow folks with GPLv2 codebases to use packaging while still retaining the additional protections of Apache License 2.0. More information can be found in pyca/cryptography#1209. If you're one of the people who have contributed, please respond to this issue stating whether or not you give permission for your code to be relicensed as dual Apache License 2.0 and 2 clause BSD.\n#### Tasks\n- [ ] Update `LICENSE` file appropriately.\n- [ ] Update `setup.py` classifiers.\n- [ ] Update `__about__.py`.\n- [ ] Figure out what to do with copyright headers in every file.\n- [ ] Update contributing documentation\n- [ ] Receive consent of all folks who have contributed to packaging in the past.\n- [ ] Changelog entry.\n#### List of folks whose consent we need\n- [x] Donald Stufft (@dstufft)\n- [x] Vincent Driessen (@nvie)\n- [x] Paul Moore (@pfmoore)\n- [x] Xavier Fernandez (@xavfernandez)\n- [x] Ian Cordasco (@sigmavirus24)\n- [x] Marc Abramowitz (@msabramo)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/41", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/41/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/41/events", "html_url": "https://github.com/pypa/packaging/issues/41", "id": 106431464, "node_id": "MDU6SXNzdWUxMDY0MzE0NjQ=", "number": 41, "title": "==0.1.* doesn't match 0.1+upstream.2", "user": {"login": "habnabit", "id": 21168, "node_id": "MDQ6VXNlcjIxMTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/21168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/habnabit", "html_url": "https://github.com/habnabit", "followers_url": "https://api.github.com/users/habnabit/followers", "following_url": "https://api.github.com/users/habnabit/following{/other_user}", "gists_url": "https://api.github.com/users/habnabit/gists{/gist_id}", "starred_url": "https://api.github.com/users/habnabit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/habnabit/subscriptions", "organizations_url": "https://api.github.com/users/habnabit/orgs", "repos_url": "https://api.github.com/users/habnabit/repos", "events_url": "https://api.github.com/users/habnabit/events{/privacy}", "received_events_url": "https://api.github.com/users/habnabit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-14T21:25:31Z", "updated_at": "2016-01-16T00:51:12Z", "closed_at": "2016-01-16T00:51:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "As in the title, `==0.1.*` doesn't match the version `0.1+upstream.2`. I discovered this as a result of specifying a requirement `~=0.1.0`, and getting `0.1` instead of `0.1+upstream.2`. I can produce a reproducing example if necessary.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/35", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/35/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/35/events", "html_url": "https://github.com/pypa/packaging/issues/35", "id": 90765664, "node_id": "MDU6SXNzdWU5MDc2NTY2NA==", "number": 35, "title": "Post release spelling not recognized", "user": {"login": "toabctl", "id": 276317, "node_id": "MDQ6VXNlcjI3NjMxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/276317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toabctl", "html_url": "https://github.com/toabctl", "followers_url": "https://api.github.com/users/toabctl/followers", "following_url": "https://api.github.com/users/toabctl/following{/other_user}", "gists_url": "https://api.github.com/users/toabctl/gists{/gist_id}", "starred_url": "https://api.github.com/users/toabctl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toabctl/subscriptions", "organizations_url": "https://api.github.com/users/toabctl/orgs", "repos_url": "https://api.github.com/users/toabctl/repos", "events_url": "https://api.github.com/users/toabctl/events{/privacy}", "received_events_url": "https://api.github.com/users/toabctl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-24T19:41:41Z", "updated_at": "2015-08-02T00:01:41Z", "closed_at": "2015-08-02T00:01:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nAccording to https://www.python.org/dev/peps/pep-0440/#post-release-spelling , versions like '1.0-r4' should be normalized to '1.0.post4'. But running a simple test, this does not work:\n\n```\n$ python\nPython 2.7.10 (default, May 24 2015, 14:46:10) [GCC] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import packaging\n>>> packaging.__version__\n'15.1'\n>>> from packaging.version import parse\n>>> v1 = parse('1.0.post4')\n>>> v2 = parse('1.0.post4')\n>>> v1 == v2\nTrue\n>>> v2 = parse('1.0.r4')\n>>> v1 == v2\nFalse\n>>> \n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/34", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/34/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/34/events", "html_url": "https://github.com/pypa/packaging/issues/34", "id": 89207164, "node_id": "MDU6SXNzdWU4OTIwNzE2NA==", "number": 34, "title": "Provide access to the structured information about a version.", "user": {"login": "tomprince", "id": 283816, "node_id": "MDQ6VXNlcjI4MzgxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/283816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomprince", "html_url": "https://github.com/tomprince", "followers_url": "https://api.github.com/users/tomprince/followers", "following_url": "https://api.github.com/users/tomprince/following{/other_user}", "gists_url": "https://api.github.com/users/tomprince/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomprince/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomprince/subscriptions", "organizations_url": "https://api.github.com/users/tomprince/orgs", "repos_url": "https://api.github.com/users/tomprince/repos", "events_url": "https://api.github.com/users/tomprince/events{/privacy}", "received_events_url": "https://api.github.com/users/tomprince/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-18T05:54:31Z", "updated_at": "2018-02-28T04:42:21Z", "closed_at": "2018-02-28T04:42:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have built some automation around releases and testing that involve inspecting the version, to determine what type of release something is, and where to publish it (etc.).\n\nCurrently we are using a regex to parse pre PEP-440 versions. I was planning on using `packaging` to replace this, but it appears that packaging doesn't expose this information in a structured way.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/28", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/28/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/28/events", "html_url": "https://github.com/pypa/packaging/issues/28", "id": 68528265, "node_id": "MDU6SXNzdWU2ODUyODI2NQ==", "number": 28, "title": "pip install pre-release seems to fail sporadically", "user": {"login": "jaraco", "id": 308610, "node_id": "MDQ6VXNlcjMwODYxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/308610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaraco", "html_url": "https://github.com/jaraco", "followers_url": "https://api.github.com/users/jaraco/followers", "following_url": "https://api.github.com/users/jaraco/following{/other_user}", "gists_url": "https://api.github.com/users/jaraco/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaraco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaraco/subscriptions", "organizations_url": "https://api.github.com/users/jaraco/orgs", "repos_url": "https://api.github.com/users/jaraco/repos", "events_url": "https://api.github.com/users/jaraco/events{/privacy}", "received_events_url": "https://api.github.com/users/jaraco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-14T23:41:55Z", "updated_at": "2015-04-15T00:19:12Z", "closed_at": "2015-04-15T00:19:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Running `pip install -i https://devpi.net/hpk/dev/+simple/ devpi-server==2.2.0dev4` sometimes results in:\n\n```\nCould not find a version that satisfies the requirement devpi-common<2.1,>=2.0.6.dev0 (from devpi-server==2.2.0dev4->-r requirements.txt (line 2)) (from versions: 1.2, 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.0.5, 2.0.6.dev2)\n```\n\nThe issue appears to be in packaging, as \n\n```\npython -c \"from packaging.specifiers import SpecifierSet; print(list(SpecifierSet('<2.1,>=2.0.6.dev0').filter(['1.2', '2.0.0', '2.0.1', '2.0.2', '2.0.3', '2.0.4', '2.0.5', '2.0.6.dev2'])))\"\n```\n\nwill return different results on different, adjacent calls.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/23", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/23/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/23/events", "html_url": "https://github.com/pypa/packaging/issues/23", "id": 52327310, "node_id": "MDU6SXNzdWU1MjMyNzMxMA==", "number": 23, "title": "PyPI page displays raw RST", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-18T05:34:01Z", "updated_at": "2014-12-29T17:12:35Z", "closed_at": "2014-12-29T17:12:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Probably a small markup problem. \n\nhttps://pypi.python.org/pypi/packaging/14.5\n\nPyPI should be more lenient. I have a PR to do this (https://bitbucket.org/pypa/pypi/pull-request/60/fix-bb-214-make-rst-rendering-not-fail-for/diff). \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/17", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/17/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/17/events", "html_url": "https://github.com/pypa/packaging/issues/17", "id": 45491939, "node_id": "MDU6SXNzdWU0NTQ5MTkzOQ==", "number": 17, "title": "Legacy version parsing appears too broad", "user": {"login": "pfmoore", "id": 1110419, "node_id": "MDQ6VXNlcjExMTA0MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1110419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfmoore", "html_url": "https://github.com/pfmoore", "followers_url": "https://api.github.com/users/pfmoore/followers", "following_url": "https://api.github.com/users/pfmoore/following{/other_user}", "gists_url": "https://api.github.com/users/pfmoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfmoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfmoore/subscriptions", "organizations_url": "https://api.github.com/users/pfmoore/orgs", "repos_url": "https://api.github.com/users/pfmoore/repos", "events_url": "https://api.github.com/users/pfmoore/events{/privacy}", "received_events_url": "https://api.github.com/users/pfmoore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-10T15:21:58Z", "updated_at": "2014-12-18T02:32:47Z", "closed_at": "2014-12-18T02:32:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It's not clear why this would be valid:\n\n```\n>>> packaging.version.LegacyVersion('rest-hooks-1.0.4')\n<LegacyVersion('rest-hooks-1.0.4')>\n```\n\nWhat is the purpose of the LegacyVersion class? Is it the equivalent of `distutils.version.LooseVersion`, something that basically does its best to parse _anything_? Is there really a plausible case for a version that doesn't start with a number?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/packaging/issues/13", "repository_url": "https://api.github.com/repos/pypa/packaging", "labels_url": "https://api.github.com/repos/pypa/packaging/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/packaging/issues/13/comments", "events_url": "https://api.github.com/repos/pypa/packaging/issues/13/events", "html_url": "https://github.com/pypa/packaging/issues/13", "id": 44568902, "node_id": "MDU6SXNzdWU0NDU2ODkwMg==", "number": 13, "title": "Add an API for parsing package filename formats?", "user": {"login": "pfmoore", "id": 1110419, "node_id": "MDQ6VXNlcjExMTA0MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1110419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfmoore", "html_url": "https://github.com/pfmoore", "followers_url": "https://api.github.com/users/pfmoore/followers", "following_url": "https://api.github.com/users/pfmoore/following{/other_user}", "gists_url": "https://api.github.com/users/pfmoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfmoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfmoore/subscriptions", "organizations_url": "https://api.github.com/users/pfmoore/orgs", "repos_url": "https://api.github.com/users/pfmoore/repos", "events_url": "https://api.github.com/users/pfmoore/events{/privacy}", "received_events_url": "https://api.github.com/users/pfmoore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2014-10-01T14:22:46Z", "updated_at": "2014-12-29T17:17:28Z", "closed_at": "2014-12-29T17:17:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I keep writing the same code over and over, to parse a filename and return information on the content - distribution name, version and file type, specifically. Would such a routine be a suitable addition to the packaging project?\n\nI'd propose to support wheels, eggs, sdists and bdist_wininst installers, as those are the types package handling tools tend to need to deal with (and apart from wininst, the filename formats are either straightforward or documented).\n\nIf this seems like a good idea, I'll submit a PR.\n", "performed_via_github_app": null, "score": 1.0}]}