{"total_count": 466, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/getsentry/raven-python/issues/1367", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1367/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1367/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1367/events", "html_url": "https://github.com/getsentry/raven-python/issues/1367", "id": 654892457, "node_id": "MDU6SXNzdWU2NTQ4OTI0NTc=", "number": 1367, "title": "Python FTP_TLS.login() raises OSError: [Errno 0]", "user": {"login": "Zooty6", "id": 23386234, "node_id": "MDQ6VXNlcjIzMzg2MjM0", "avatar_url": "https://avatars1.githubusercontent.com/u/23386234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zooty6", "html_url": "https://github.com/Zooty6", "followers_url": "https://api.github.com/users/Zooty6/followers", "following_url": "https://api.github.com/users/Zooty6/following{/other_user}", "gists_url": "https://api.github.com/users/Zooty6/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zooty6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zooty6/subscriptions", "organizations_url": "https://api.github.com/users/Zooty6/orgs", "repos_url": "https://api.github.com/users/Zooty6/repos", "events_url": "https://api.github.com/users/Zooty6/events{/privacy}", "received_events_url": "https://api.github.com/users/Zooty6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T16:21:24Z", "updated_at": "2020-07-10T16:31:54Z", "closed_at": "2020-07-10T16:27:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1366", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1366/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1366/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1366/events", "html_url": "https://github.com/getsentry/raven-python/issues/1366", "id": 612816041, "node_id": "MDU6SXNzdWU2MTI4MTYwNDE=", "number": 1366, "title": "When is the new version releasing?", "user": {"login": "yangjiel", "id": 28792920, "node_id": "MDQ6VXNlcjI4NzkyOTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/28792920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangjiel", "html_url": "https://github.com/yangjiel", "followers_url": "https://api.github.com/users/yangjiel/followers", "following_url": "https://api.github.com/users/yangjiel/following{/other_user}", "gists_url": "https://api.github.com/users/yangjiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangjiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangjiel/subscriptions", "organizations_url": "https://api.github.com/users/yangjiel/orgs", "repos_url": "https://api.github.com/users/yangjiel/repos", "events_url": "https://api.github.com/users/yangjiel/events{/privacy}", "received_events_url": "https://api.github.com/users/yangjiel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T18:45:30Z", "updated_at": "2020-05-05T18:56:03Z", "closed_at": "2020-05-05T18:56:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/getsentry/raven-python/blob/d7d14f61b7fb425bcb15512f659626648c494f98/raven/utils/json.py#L58-L63\r\n\r\n#1155 \r\n\r\nI am experiencing the issue above and the master branch has fixed the issue. However, I use PYPI to install the Raven package, the latest version of that is 6.10.0 which the fixs haven't gotten applied yet.\r\n\r\nI wonder when is it going to release the newer version? Raven hasn't released new tag for about 2 years.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1365", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1365/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1365/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1365/events", "html_url": "https://github.com/getsentry/raven-python/issues/1365", "id": 612809519, "node_id": "MDU6SXNzdWU2MTI4MDk1MTk=", "number": 1365, "title": "'encoding' cannot be specified in python 3", "user": {"login": "yangjiel", "id": 28792920, "node_id": "MDQ6VXNlcjI4NzkyOTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/28792920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangjiel", "html_url": "https://github.com/yangjiel", "followers_url": "https://api.github.com/users/yangjiel/followers", "following_url": "https://api.github.com/users/yangjiel/following{/other_user}", "gists_url": "https://api.github.com/users/yangjiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangjiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangjiel/subscriptions", "organizations_url": "https://api.github.com/users/yangjiel/orgs", "repos_url": "https://api.github.com/users/yangjiel/repos", "events_url": "https://api.github.com/users/yangjiel/events{/privacy}", "received_events_url": "https://api.github.com/users/yangjiel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-05T18:33:53Z", "updated_at": "2020-05-05T18:37:51Z", "closed_at": "2020-05-05T18:37:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/getsentry/raven-python/blob/285b257cf386bfac78f6fe334c9044af65f98561/raven/utils/json.py#L59-L63\r\n\r\n#1155\r\n\r\nI am still experiencing the issue above.\r\nIn Python 3, the argument `encoding` is no longer supported. The error message is:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/catalina/env/lib/python3.6/site-packages/raven/handlers/logging.py\", line 97, in emit\r\n    return self._emit(record)\r\n  File \"/home/ubuntu/catalina/env/lib/python3.6/site-packages/raven/contrib/django/handlers.py\", line 33, in _emit\r\n    return super(SentryHandler, self)._emit(record, request=request)\r\n  File \"/home/ubuntu/catalina/env/lib/python3.6/site-packages/raven/handlers/logging.py\", line 192, in _emit\r\n    **kwargs)\r\n  File \"/home/ubuntu/catalina/env/lib/python3.6/site-packages/raven/contrib/django/client.py\", line 303, in capture\r\n    result = super(DjangoClient, self).capture(event_type, **kwargs)\r\n  File \"/home/ubuntu/catalina/env/lib/python3.6/site-packages/raven/base.py\", line 653, in capture\r\n    self.send(**data)\r\n  File \"/home/ubuntu/catalina/env/lib/python3.6/site-packages/raven/base.py\", line 748, in send\r\n    message = self.encode(data)\r\n  File \"/home/ubuntu/catalina/env/lib/python3.6/site-packages/raven/base.py\", line 790, in encode\r\n    return zlib.compress(json.dumps(data).encode(\\'utf8\\'))\r\n  File \"/home/ubuntu/catalina/env/lib/python3.6/site-packages/raven/utils/json.py\", line 63, in dumps\r\n    return json.dumps(value, cls=BetterJSONEncoder, **kwargs)\r\n  File \"/usr/lib/python3.6/json/__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\nTypeError: __init__() got an unexpected keyword argument 'encoding'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1364", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1364/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1364/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1364/events", "html_url": "https://github.com/getsentry/raven-python/issues/1364", "id": 604893941, "node_id": "MDU6SXNzdWU2MDQ4OTM5NDE=", "number": 1364, "title": "Does this project follow semantic versioning?", "user": {"login": "alvassin", "id": 1497444, "node_id": "MDQ6VXNlcjE0OTc0NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1497444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvassin", "html_url": "https://github.com/alvassin", "followers_url": "https://api.github.com/users/alvassin/followers", "following_url": "https://api.github.com/users/alvassin/following{/other_user}", "gists_url": "https://api.github.com/users/alvassin/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvassin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvassin/subscriptions", "organizations_url": "https://api.github.com/users/alvassin/orgs", "repos_url": "https://api.github.com/users/alvassin/repos", "events_url": "https://api.github.com/users/alvassin/events{/privacy}", "received_events_url": "https://api.github.com/users/alvassin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-22T16:29:26Z", "updated_at": "2020-04-23T04:18:02Z", "closed_at": "2020-04-22T16:49:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can i use this project with `~=` operator?\r\n \r\n```\r\nraven~=6.10.0\r\n```\r\n\r\nDoes it follow [Semantic versioning](https://semver.org)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1361", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1361/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1361/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1361/events", "html_url": "https://github.com/getsentry/raven-python/issues/1361", "id": 577820520, "node_id": "MDU6SXNzdWU1Nzc4MjA1MjA=", "number": 1361, "title": "Invalid Sentry DSN", "user": {"login": "Timtech4u", "id": 11256481, "node_id": "MDQ6VXNlcjExMjU2NDgx", "avatar_url": "https://avatars0.githubusercontent.com/u/11256481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Timtech4u", "html_url": "https://github.com/Timtech4u", "followers_url": "https://api.github.com/users/Timtech4u/followers", "following_url": "https://api.github.com/users/Timtech4u/following{/other_user}", "gists_url": "https://api.github.com/users/Timtech4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/Timtech4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Timtech4u/subscriptions", "organizations_url": "https://api.github.com/users/Timtech4u/orgs", "repos_url": "https://api.github.com/users/Timtech4u/repos", "events_url": "https://api.github.com/users/Timtech4u/events{/privacy}", "received_events_url": "https://api.github.com/users/Timtech4u/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T10:55:08Z", "updated_at": "2020-03-09T14:33:23Z", "closed_at": "2020-03-09T14:33:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to integrate sentry to a CKAN application and I get the following eror.\r\n\r\n```\r\n InvalidDsn('Invalid Sentry DSN: %r' % url.geturl()) raven.exceptions.InvalidDsn: Invalid Sentry DSN: 'https://XYZ@sentry.io/ZYX'\r\n```\r\n\r\nThe Sentry DSN code is exactly the same as the one I copied from sentry.\r\n\r\nI am using of the following page: https://github.com/okfn/ckanext-sentry\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1360", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1360/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1360/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1360/events", "html_url": "https://github.com/getsentry/raven-python/issues/1360", "id": 571933253, "node_id": "MDU6SXNzdWU1NzE5MzMyNTM=", "number": 1360, "title": "UWSGI + Nginx + Python (Flask) - ImportError: ModuleNotFoundError: No module named 'app'", "user": {"login": "FlamboyantOm", "id": 16036479, "node_id": "MDQ6VXNlcjE2MDM2NDc5", "avatar_url": "https://avatars0.githubusercontent.com/u/16036479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FlamboyantOm", "html_url": "https://github.com/FlamboyantOm", "followers_url": "https://api.github.com/users/FlamboyantOm/followers", "following_url": "https://api.github.com/users/FlamboyantOm/following{/other_user}", "gists_url": "https://api.github.com/users/FlamboyantOm/gists{/gist_id}", "starred_url": "https://api.github.com/users/FlamboyantOm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FlamboyantOm/subscriptions", "organizations_url": "https://api.github.com/users/FlamboyantOm/orgs", "repos_url": "https://api.github.com/users/FlamboyantOm/repos", "events_url": "https://api.github.com/users/FlamboyantOm/events{/privacy}", "received_events_url": "https://api.github.com/users/FlamboyantOm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-27T09:22:09Z", "updated_at": "2020-02-27T10:06:16Z", "closed_at": "2020-02-27T10:06:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using UWSGI + Nginx + Python (Flask)\r\n\r\nWhen ever I fit page getting following **error** in log.\r\n\r\n`*** no app loaded. going in full dynamic mode ***`\r\n\r\nI have check with following command \r\n\r\n`sudo -u nobody python -c \"from app.wsgi import application\"`\r\n\r\nGetting following **error** \r\n\r\n`Traceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'app'\r\n`\r\n\r\nI have following folder structure :\r\n\r\n/var/www/dashboard/web/app/app\r\n\r\nInside app i have  __init__.py file, which consist of code such :\r\n\r\nfrom flask import Flask\r\nfrom app.models import models\r\nfrom app.controller import views\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1356", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1356/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1356/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1356/events", "html_url": "https://github.com/getsentry/raven-python/issues/1356", "id": 545166787, "node_id": "MDU6SXNzdWU1NDUxNjY3ODc=", "number": 1356, "title": "Fix simple typo: survery -> survey", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-03T21:15:36Z", "updated_at": "2020-01-07T08:51:59Z", "closed_at": "2020-01-07T08:51:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in raven/utils/ssl_match_hostname.py.\nShould read `survey` rather than `survery`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1348", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1348/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1348/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1348/events", "html_url": "https://github.com/getsentry/raven-python/issues/1348", "id": 420396382, "node_id": "MDU6SXNzdWU0MjAzOTYzODI=", "number": 1348, "title": "raven[flask]  not send any event when flask app use the wsgi ", "user": {"login": "henrytom1703", "id": 38415727, "node_id": "MDQ6VXNlcjM4NDE1NzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/38415727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henrytom1703", "html_url": "https://github.com/henrytom1703", "followers_url": "https://api.github.com/users/henrytom1703/followers", "following_url": "https://api.github.com/users/henrytom1703/following{/other_user}", "gists_url": "https://api.github.com/users/henrytom1703/gists{/gist_id}", "starred_url": "https://api.github.com/users/henrytom1703/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henrytom1703/subscriptions", "organizations_url": "https://api.github.com/users/henrytom1703/orgs", "repos_url": "https://api.github.com/users/henrytom1703/repos", "events_url": "https://api.github.com/users/henrytom1703/events{/privacy}", "received_events_url": "https://api.github.com/users/henrytom1703/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-13T09:29:25Z", "updated_at": "2019-03-13T12:10:15Z", "closed_at": "2019-03-13T12:06:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1342", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1342/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1342/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1342/events", "html_url": "https://github.com/getsentry/raven-python/issues/1342", "id": 395976219, "node_id": "MDU6SXNzdWUzOTU5NzYyMTk=", "number": 1342, "title": "Raven 6.10.0 installs tornado-6.0a", "user": {"login": "stefanwoj89", "id": 875614, "node_id": "MDQ6VXNlcjg3NTYxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/875614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanwoj89", "html_url": "https://github.com/stefanwoj89", "followers_url": "https://api.github.com/users/stefanwoj89/followers", "following_url": "https://api.github.com/users/stefanwoj89/following{/other_user}", "gists_url": "https://api.github.com/users/stefanwoj89/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanwoj89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanwoj89/subscriptions", "organizations_url": "https://api.github.com/users/stefanwoj89/orgs", "repos_url": "https://api.github.com/users/stefanwoj89/repos", "events_url": "https://api.github.com/users/stefanwoj89/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanwoj89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-04T15:59:41Z", "updated_at": "2019-01-04T16:13:02Z", "closed_at": "2019-01-04T16:13:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently encountered an issue with raven where the tornado dependency installed is tornado-6.0a1 (Just was tagged Jan 1, 2019), seems that even though raven-python setup.py constrains the version between 4.1 and 5.0, somehow this package is making it through:\r\n\r\n```\r\nenv/local/lib/python2.7/site-packages/raven-6.10.0-py2.7.egg/raven/base.py\", line 37, in <module>\r\n    from raven.conf.remote import RemoteConfig\r\n  File \"...env/local/lib/python2.7/site-packages/raven-6.10.0-py2.7.egg/raven/conf/remote.py\", line 36, in <module>\r\n    DEFAULT_TRANSPORT = discover_default_transport()\r\n  File \"...env/local/lib/python2.7/site-packages/raven-6.10.0-py2.7.egg/raven/conf/remote.py\", line 18, in discover_default_transport\r\n    from raven.transport.threaded import ThreadedHTTPTransport\r\n  File \"...env/local/lib/python2.7/site-packages/raven-6.10.0-py2.7.egg/raven/transport/__init__.py\", line 18, in <module>\r\n    from raven.transport.registry import *  # NOQA\r\n  File \"...env/local/lib/python2.7/site-packages/raven-6.10.0-py2.7.egg/raven/transport/registry.py\", line 19, in <module>\r\n    from raven.transport.tornado import TornadoHTTPTransport\r\n  File \"...env/local/lib/python2.7/site-packages/raven-6.10.0-py2.7.egg/raven/transport/tornado.py\", line 16, in <module>\r\n    from tornado import ioloop\r\n  File \"...env/local/lib/python2.7/site-packages/tornado-6.0a1-py2.7-linux-x86_64.egg/tornado/ioloop.py\", line 66\r\n    def fileno(self) -> int:\r\n                     ^\r\nSyntaxError: invalid syntax\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1311", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1311/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1311/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1311/events", "html_url": "https://github.com/getsentry/raven-python/issues/1311", "id": 385216988, "node_id": "MDU6SXNzdWUzODUyMTY5ODg=", "number": 1311, "title": "Sentry responded with an error: <urlopen error unknown error (_ssl.c:2788)> (url: https://app.getsentry.com/api/XXXXX/store/)", "user": {"login": "odscjames", "id": 37832009, "node_id": "MDQ6VXNlcjM3ODMyMDA5", "avatar_url": "https://avatars2.githubusercontent.com/u/37832009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odscjames", "html_url": "https://github.com/odscjames", "followers_url": "https://api.github.com/users/odscjames/followers", "following_url": "https://api.github.com/users/odscjames/following{/other_user}", "gists_url": "https://api.github.com/users/odscjames/gists{/gist_id}", "starred_url": "https://api.github.com/users/odscjames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odscjames/subscriptions", "organizations_url": "https://api.github.com/users/odscjames/orgs", "repos_url": "https://api.github.com/users/odscjames/repos", "events_url": "https://api.github.com/users/odscjames/events{/privacy}", "received_events_url": "https://api.github.com/users/odscjames/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-28T11:10:53Z", "updated_at": "2018-12-05T15:51:10Z", "closed_at": "2018-12-05T15:51:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has anyone else seen this?\r\n\r\nUbuntu 18.04 LTS, Python 3.6, Sentry 6.9.0. It's a Django app being served by uwsgi.\r\n\r\n````\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 1318, in do_open\r\n    encode_chunked=req.has_header('Transfer-encoding'))\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1239, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1285, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1234, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1026, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 964, in send\r\n    self.connect()\r\n  File \"/home/xxx/xxx/.ve/lib/python3.6/site-packages/raven/utils/http.py\", line 38, in connect\r\n    sock, ca_certs=ca_certs, cert_reqs=ssl.CERT_REQUIRED)\r\n  File \"/usr/lib/python3.6/ssl.py\", line 1158, in wrap_socket\r\n    ciphers=ciphers)\r\n  File \"/usr/lib/python3.6/ssl.py\", line 745, in __init__\r\n    self._context = SSLContext(ssl_version)\r\n  File \"/usr/lib/python3.6/ssl.py\", line 391, in __new__\r\n    self = _SSLContext.__new__(cls, protocol)\r\nssl.SSLError: unknown error (_ssl.c:2788)\r\n````\r\n\r\nThanks,\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1310", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1310/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1310/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1310/events", "html_url": "https://github.com/getsentry/raven-python/issues/1310", "id": 384986907, "node_id": "MDU6SXNzdWUzODQ5ODY5MDc=", "number": 1310, "title": "TypeError w/ __repr__ when using plone/zope", "user": {"login": "lobsterkatie", "id": 14812505, "node_id": "MDQ6VXNlcjE0ODEyNTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/14812505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lobsterkatie", "html_url": "https://github.com/lobsterkatie", "followers_url": "https://api.github.com/users/lobsterkatie/followers", "following_url": "https://api.github.com/users/lobsterkatie/following{/other_user}", "gists_url": "https://api.github.com/users/lobsterkatie/gists{/gist_id}", "starred_url": "https://api.github.com/users/lobsterkatie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lobsterkatie/subscriptions", "organizations_url": "https://api.github.com/users/lobsterkatie/orgs", "repos_url": "https://api.github.com/users/lobsterkatie/repos", "events_url": "https://api.github.com/users/lobsterkatie/events{/privacy}", "received_events_url": "https://api.github.com/users/lobsterkatie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321323, "node_id": "MDU6TGFiZWw2MjgzMjEzMjM=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-27T21:09:51Z", "updated_at": "2018-12-17T15:45:11Z", "closed_at": "2018-12-17T15:45:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "A user reports that whenever an OPTIONS request is made to a Plone application (running Zope) this issue occurs:\r\n\r\n```\r\n==> client2-event.log <== \r\n------ \r\n2018-11-27T09:58:57 ERROR Zope.SiteErrorLog 1543283937.330.238564883427 https://website.com/file.txt \r\nTraceback (innermost last): \r\nModule ZPublisher.Publish, line 127, in publish \r\nModule ZPublisher.BaseRequest, line 479, in traverse \r\nModule zope.browserresource.file, line 94, in browserDefault \r\nAttributeError: 'FileResource' object has no attribute 'OPTIONS' \r\n------ \r\n2018-11-27T09:58:57 ERROR sentry.errors.serializer unbound method __repr__() must be called with Application instance as first argument (got nothing instead) \r\nTraceback (most recent call last): \r\nFile \"/home/plone/eggs/raven-6.8.0-py2.7.egg/raven/utils/serializer/manager.py\", line 76, in transform \r\nreturn repr(value) \r\nTypeError: unbound method __repr__() must be called with Application instance as first argument (got nothing instead) \r\n------ \r\n2018-11-27T09:58:57 ERROR sentry.errors.serializer unbound method __repr__() must be called with Application instance as first argument (got nothing instead) \r\nTraceback (most recent call last): \r\nFile \"/home/plone/eggs/raven-6.8.0-py2.7.egg/raven/utils/serializer/manager.py\", line 76, in transform \r\nreturn repr(value) \r\nTypeError: unbound method __repr__() must be called with Application instance as first argument (got nothing instead)\r\n```\r\n\r\nThis has also been reported [here](https://community.plone.org/t/attributeerror-and-unbound-method---repr---for-an-otherwise-working-object/3238).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1308", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1308/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1308/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1308/events", "html_url": "https://github.com/getsentry/raven-python/issues/1308", "id": 375319164, "node_id": "MDU6SXNzdWUzNzUzMTkxNjQ=", "number": 1308, "title": "Django project in subversion, raven does not work", "user": {"login": "ccpwcn", "id": 5465756, "node_id": "MDQ6VXNlcjU0NjU3NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5465756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccpwcn", "html_url": "https://github.com/ccpwcn", "followers_url": "https://api.github.com/users/ccpwcn/followers", "following_url": "https://api.github.com/users/ccpwcn/following{/other_user}", "gists_url": "https://api.github.com/users/ccpwcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccpwcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccpwcn/subscriptions", "organizations_url": "https://api.github.com/users/ccpwcn/orgs", "repos_url": "https://api.github.com/users/ccpwcn/repos", "events_url": "https://api.github.com/users/ccpwcn/events{/privacy}", "received_events_url": "https://api.github.com/users/ccpwcn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-30T04:45:04Z", "updated_at": "2018-10-30T06:00:21Z", "closed_at": "2018-10-30T05:57:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Project: Django\r\nOS: Windows 10\r\ncode manage: subversion\r\nin setting.py:\r\n```\r\nimport raven\r\nRAVEN_CONFIG = {\r\n    'dsn': 'https://xxx@sentry.io/nnn',\r\n    # If you are using git, you can also automatically configure the\r\n    # release based on the git info.\r\n    'release': raven.fetch_git_sha(BASE_DIR),\r\n}\r\n```\r\nWhen I have errors:\r\n```\r\nTraceback (most recent call last):\r\n  File \"E:/code/PycharmProjects/pss_patent/manage.py\", line 15, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"E:\\code\\PycharmProjects\\pss_patent\\venv\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"E:\\code\\PycharmProjects\\pss_patent\\venv\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 325, in execute\r\n    settings.INSTALLED_APPS\r\n  File \"E:\\code\\PycharmProjects\\pss_patent\\venv\\lib\\site-packages\\django\\conf\\__init__.py\", line 57, in __getattr__\r\n    self._setup(name)\r\n  File \"E:\\code\\PycharmProjects\\pss_patent\\venv\\lib\\site-packages\\django\\conf\\__init__.py\", line 44, in _setup\r\n    self._wrapped = Settings(settings_module)\r\n  File \"E:\\code\\PycharmProjects\\pss_patent\\venv\\lib\\site-packages\\django\\conf\\__init__.py\", line 107, in __init__\r\n    mod = importlib.import_module(self.SETTINGS_MODULE)\r\n  File \"E:\\code\\PycharmProjects\\pss_patent\\venv\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"E:\\code\\PycharmProjects\\pss_patent\\pss_patent\\settings.py\", line 23, in <module>\r\n    'release': raven.fetch_git_sha(BASE_DIR),\r\n  File \"E:\\code\\PycharmProjects\\pss_patent\\venv\\lib\\site-packages\\raven\\versioning.py\", line 19, in fetch_git_sha\r\n    'Cannot identify HEAD for git repository at %s' % (path,))\r\nraven.exceptions.InvalidGitRepository: Cannot identify HEAD for git repository at E:\\code\\PycharmProjects\\pss_patent\r\n```\r\nI had lookup a lot of informations, All of body said: I needed git, but My project is in subversion, How can I resolve it???", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1305", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1305/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1305/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1305/events", "html_url": "https://github.com/getsentry/raven-python/issues/1305", "id": 366295350, "node_id": "MDU6SXNzdWUzNjYyOTUzNTA=", "number": 1305, "title": "passing KeyError exception Failed", "user": {"login": "weinbergdavid", "id": 6140588, "node_id": "MDQ6VXNlcjYxNDA1ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6140588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weinbergdavid", "html_url": "https://github.com/weinbergdavid", "followers_url": "https://api.github.com/users/weinbergdavid/followers", "following_url": "https://api.github.com/users/weinbergdavid/following{/other_user}", "gists_url": "https://api.github.com/users/weinbergdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/weinbergdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weinbergdavid/subscriptions", "organizations_url": "https://api.github.com/users/weinbergdavid/orgs", "repos_url": "https://api.github.com/users/weinbergdavid/repos", "events_url": "https://api.github.com/users/weinbergdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/weinbergdavid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 649733452, "node_id": "MDU6TGFiZWw2NDk3MzM0NTI=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Support", "name": "Support", "color": "fef2c0", "default": false, "description": null}, {"id": 1071873730, "node_id": "MDU6TGFiZWwxMDcxODczNzMw", "url": "https://api.github.com/repos/getsentry/raven-python/labels/works-in-new-sdk", "name": "works-in-new-sdk", "color": "a1fcac", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-03T11:35:18Z", "updated_at": "2018-10-03T18:51:01Z", "closed_at": "2018-10-03T18:11:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to pass KeyError and it's fail due to \r\n\r\n> TypeError: 'KeyError' object is not subscriptable\r\n\r\nthis is my code:\r\n`\r\n    except KeyError as e:\r\n        client.captureException(e)\r\n`\r\n\r\nAnd this is the error message:\r\n\r\nTraceback (most recent call last):\r\n....\r\n  File \"...\\venv\\lib\\site-packages\\raven\\base.py\", line 824, in captureException\r\n    'raven.events.Exception', exc_info=exc_info, **kwargs)\r\n  File \"...\\venv\\lib\\site-packages\\raven\\contrib\\django\\client.py\", line 284, in capture\r\n    exc_value = kwargs['exc_info'][1]\r\nTypeError: 'KeyError' object is not subscriptable\r\n\r\n\r\nit's failed in this row:\r\nhttps://github.com/getsentry/raven-python/blob/4206873d63c461ffe6944029d36951514157928e/raven/contrib/django/client.py#L284\r\nYou need to wrap this line in try-except (than maybe you can try `exc.args[0]`).\r\n\r\nThanks, David.\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1295", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1295/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1295/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1295/events", "html_url": "https://github.com/getsentry/raven-python/issues/1295", "id": 356181457, "node_id": "MDU6SXNzdWUzNTYxODE0NTc=", "number": 1295, "title": "Catching unhandled exceptions in Python", "user": {"login": "daghemo", "id": 42886403, "node_id": "MDQ6VXNlcjQyODg2NDAz", "avatar_url": "https://avatars2.githubusercontent.com/u/42886403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daghemo", "html_url": "https://github.com/daghemo", "followers_url": "https://api.github.com/users/daghemo/followers", "following_url": "https://api.github.com/users/daghemo/following{/other_user}", "gists_url": "https://api.github.com/users/daghemo/gists{/gist_id}", "starred_url": "https://api.github.com/users/daghemo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daghemo/subscriptions", "organizations_url": "https://api.github.com/users/daghemo/orgs", "repos_url": "https://api.github.com/users/daghemo/repos", "events_url": "https://api.github.com/users/daghemo/events{/privacy}", "received_events_url": "https://api.github.com/users/daghemo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-01T07:39:27Z", "updated_at": "2018-10-02T09:25:03Z", "closed_at": "2018-10-02T09:25:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\nis there any option to catch unhandled exceptions from within a Python program (no Flask/Django)?\r\n\r\nI can do this in Azure Application Insights as follows:\r\n\r\n```\r\n#!/bin/env python\r\nimport applicationinsights.exceptions\r\napplicationinsights.exceptions.enable( '********-****-****-****-************' )\r\nprint 2/0\r\n```\r\n\r\nThe above code would report a ZeroDivisionError exeception to the Azure Application Insights console.\r\n\r\nRegards,\r\nDanilo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1293", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1293/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1293/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1293/events", "html_url": "https://github.com/getsentry/raven-python/issues/1293", "id": 355080060, "node_id": "MDU6SXNzdWUzNTUwODAwNjA=", "number": 1293, "title": "celery config difference vs plain django setup", "user": {"login": "rustanacexd", "id": 4982729, "node_id": "MDQ6VXNlcjQ5ODI3Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4982729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustanacexd", "html_url": "https://github.com/rustanacexd", "followers_url": "https://api.github.com/users/rustanacexd/followers", "following_url": "https://api.github.com/users/rustanacexd/following{/other_user}", "gists_url": "https://api.github.com/users/rustanacexd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustanacexd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustanacexd/subscriptions", "organizations_url": "https://api.github.com/users/rustanacexd/orgs", "repos_url": "https://api.github.com/users/rustanacexd/repos", "events_url": "https://api.github.com/users/rustanacexd/events{/privacy}", "received_events_url": "https://api.github.com/users/rustanacexd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-29T09:43:23Z", "updated_at": "2018-09-11T10:44:44Z", "closed_at": "2018-09-11T10:44:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking at this page - https://docs.sentry.io/clients/python/integrations/celery/ and I am wondering what is the difference of this compared to just using this setup https://docs.sentry.io/clients/python/integrations/django/.\r\n\r\nOur project is just using the django setup and we are using celery. I am wondering what we are missing if we also use the celery setup. Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1289", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1289/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1289/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1289/events", "html_url": "https://github.com/getsentry/raven-python/issues/1289", "id": 352155184, "node_id": "MDU6SXNzdWUzNTIxNTUxODQ=", "number": 1289, "title": "Support for teardown", "user": {"login": "mottosso", "id": 2152766, "node_id": "MDQ6VXNlcjIxNTI3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2152766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mottosso", "html_url": "https://github.com/mottosso", "followers_url": "https://api.github.com/users/mottosso/followers", "following_url": "https://api.github.com/users/mottosso/following{/other_user}", "gists_url": "https://api.github.com/users/mottosso/gists{/gist_id}", "starred_url": "https://api.github.com/users/mottosso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mottosso/subscriptions", "organizations_url": "https://api.github.com/users/mottosso/orgs", "repos_url": "https://api.github.com/users/mottosso/repos", "events_url": "https://api.github.com/users/mottosso/events{/privacy}", "received_events_url": "https://api.github.com/users/mottosso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-20T14:16:05Z", "updated_at": "2018-10-02T09:26:21Z", "closed_at": "2018-10-02T09:26:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Sentry team,\r\n\r\nIs there any way to teardown/uninstall Sentry?\r\n\r\nI've got an application embedded in a long-running process, which is installed and uninstalled on-demand. \r\n\r\n```python\r\nimport myapp\r\nmyapp.install()\r\n# .. some time later\r\nmyapp.unistall()\r\n```\r\n\r\nThe `uninstall` reverses the `install`, such as removing UI elements, disconnecting from event handlers/listeners and clearing memory.\r\n\r\nThe application is using Raven for communication with Sentry, but I'm struggling to find some way of reliably undoing or otherwise uninstalling Raven once installed. Primarily the added `sys.excepthook` and log handlers, and likely other things I am unaware is being installed.\r\n\r\nAt the moment, the `Client()` and `setup_logging` is being called repeatedly, which is registering new excepthooks and log handlers over and over.\r\n\r\nHere is what I use to install Sentry.\r\n\r\n```python\r\nimport logging\r\nfrom raven import Client\r\nfrom raven.handlers.logging import SentryHandler\r\nfrom raven.conf import setup_logging\r\n\r\nclient = Client(MY_DSN)\r\n\r\nhandler = SentryHandler(client)\r\nhandler.setLevel(logging.ERROR)\r\n\r\nsetup_logging(handler)\r\n```\r\n\r\nWhat would be an equivalent \"uninstall\"?\r\n\r\nThanks,\r\nMarcus", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1282", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1282/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1282/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1282/events", "html_url": "https://github.com/getsentry/raven-python/issues/1282", "id": 347221382, "node_id": "MDU6SXNzdWUzNDcyMjEzODI=", "number": 1282, "title": "Flask Extension passing User object instead of attributes", "user": {"login": "Cabalist", "id": 828557, "node_id": "MDQ6VXNlcjgyODU1Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/828557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cabalist", "html_url": "https://github.com/Cabalist", "followers_url": "https://api.github.com/users/Cabalist/followers", "following_url": "https://api.github.com/users/Cabalist/following{/other_user}", "gists_url": "https://api.github.com/users/Cabalist/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cabalist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cabalist/subscriptions", "organizations_url": "https://api.github.com/users/Cabalist/orgs", "repos_url": "https://api.github.com/users/Cabalist/repos", "events_url": "https://api.github.com/users/Cabalist/events{/privacy}", "received_events_url": "https://api.github.com/users/Cabalist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-03T00:47:51Z", "updated_at": "2018-08-07T00:37:07Z", "closed_at": "2018-08-07T00:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "We've started to notice these errors at the top of our issues:\r\n\r\n\r\n<img width=\"1133\" alt=\"screen shot 2018-08-02 at 5 46 16 pm\" src=\"https://user-images.githubusercontent.com/828557/43618218-fb8d8f2c-967b-11e8-9d33-ca6acf3fcaf7.png\">\r\n\r\nIt appears that the AnonymousUser object is being passed directly to the 'user' parameter.   Is this intentional?   Should it not be the attributes listed in SENTRY_USER_ATTRS?  \r\n\r\nEdit:  \r\n\r\nI am using Flask-Security-3.0.0 and Flask-Login-0.4.0.   \r\n\r\nThis is also happening with registered users.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1281", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1281/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1281/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1281/events", "html_url": "https://github.com/getsentry/raven-python/issues/1281", "id": 346485589, "node_id": "MDU6SXNzdWUzNDY0ODU1ODk=", "number": 1281, "title": "Support Django's sensitive data decorators", "user": {"login": "jaap3", "id": 48517, "node_id": "MDQ6VXNlcjQ4NTE3", "avatar_url": "https://avatars1.githubusercontent.com/u/48517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaap3", "html_url": "https://github.com/jaap3", "followers_url": "https://api.github.com/users/jaap3/followers", "following_url": "https://api.github.com/users/jaap3/following{/other_user}", "gists_url": "https://api.github.com/users/jaap3/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaap3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaap3/subscriptions", "organizations_url": "https://api.github.com/users/jaap3/orgs", "repos_url": "https://api.github.com/users/jaap3/repos", "events_url": "https://api.github.com/users/jaap3/events{/privacy}", "received_events_url": "https://api.github.com/users/jaap3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-01T07:46:59Z", "updated_at": "2020-01-27T15:51:36Z", "closed_at": "2020-01-27T15:42:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Django has some decorators that allow developers to annotate functions and methods with information about sensitive variables and post data: https://docs.djangoproject.com/en/2.0/howto/error-reporting/#filtering-error-reports\r\n\r\nAs far as I can tell the Django client from raven doesn't do anything with this information.\r\n\r\nProcessors are an alternative solution, but don't support granular control of when to filter something. i.e. key can be a safe var in one function, but highly sensitive in another one.\r\n\r\nIs it possible to take these decorators into account? Would it be possible to write a filter that does so? Is it possible to somehow reuse the filter logic in [SafeExceptionReporterFilter](https://docs.djangoproject.com/en/2.0/howto/error-reporting/#custom-error-reports) \r\n\r\nI found an old PR (#345) that tries to support sensitive_post_params, but it got abandoned.\r\n\r\nI'm willing to work on this, but I'm not familiar with the inner workings of Raven so hopefully someone can provide some guidance before I put some actual effort into this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1277", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1277/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1277/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1277/events", "html_url": "https://github.com/getsentry/raven-python/issues/1277", "id": 345026038, "node_id": "MDU6SXNzdWUzNDUwMjYwMzg=", "number": 1277, "title": "syntax error on python 3.7", "user": {"login": "AlecRosenbaum", "id": 1953412, "node_id": "MDQ6VXNlcjE5NTM0MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1953412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlecRosenbaum", "html_url": "https://github.com/AlecRosenbaum", "followers_url": "https://api.github.com/users/AlecRosenbaum/followers", "following_url": "https://api.github.com/users/AlecRosenbaum/following{/other_user}", "gists_url": "https://api.github.com/users/AlecRosenbaum/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlecRosenbaum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlecRosenbaum/subscriptions", "organizations_url": "https://api.github.com/users/AlecRosenbaum/orgs", "repos_url": "https://api.github.com/users/AlecRosenbaum/repos", "events_url": "https://api.github.com/users/AlecRosenbaum/events{/privacy}", "received_events_url": "https://api.github.com/users/AlecRosenbaum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-26T22:22:13Z", "updated_at": "2018-09-17T14:41:32Z", "closed_at": "2018-09-17T14:41:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting this error on python 3.7 inside of docker. Using the python 3.6 image everything seems to be working fine.\r\n```\r\n    from raven.exceptions import InvalidGitRepository\r\n  File \"/usr/local/lib/python3.7/site-packages/raven/__init__.py\", line 53, in <module>\r\n    from raven.base import *  # NOQA\r\n  File \"/usr/local/lib/python3.7/site-packages/raven/base.py\", line 691\r\n    if transport.async:\r\n                     ^\r\nSyntaxError: invalid syntax\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1266", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1266/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1266/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1266/events", "html_url": "https://github.com/getsentry/raven-python/issues/1266", "id": 335905284, "node_id": "MDU6SXNzdWUzMzU5MDUyODQ=", "number": 1266, "title": "How does this exception get sent without calling captureException?", "user": {"login": "sujaymansingh", "id": 989657, "node_id": "MDQ6VXNlcjk4OTY1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/989657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sujaymansingh", "html_url": "https://github.com/sujaymansingh", "followers_url": "https://api.github.com/users/sujaymansingh/followers", "following_url": "https://api.github.com/users/sujaymansingh/following{/other_user}", "gists_url": "https://api.github.com/users/sujaymansingh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sujaymansingh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sujaymansingh/subscriptions", "organizations_url": "https://api.github.com/users/sujaymansingh/orgs", "repos_url": "https://api.github.com/users/sujaymansingh/repos", "events_url": "https://api.github.com/users/sujaymansingh/events{/privacy}", "received_events_url": "https://api.github.com/users/sujaymansingh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-26T16:42:01Z", "updated_at": "2018-07-02T22:29:21Z", "closed_at": "2018-07-02T18:09:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following code\r\n\r\n```py\r\nfrom raven import Client\r\n\r\nSENTRY_DSN = \"...\"\r\n\r\nif __name__ == \"__main__\":\r\n    Client(SENTRY_DSN)\r\n    1 / 0\r\n```\r\n\r\nWhat happens is that the exception automatically gets sent to sentry (despite me not explicitly calling `captureException`)\r\n\r\nThis is pleasing for me, as I don't need to do much other than initialise the client in my `__main__` block (or a method it calls).\r\n\r\nI was just wondering whether this is 'documented' behaviour, i.e. should I rely on this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1243", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1243/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1243/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1243/events", "html_url": "https://github.com/getsentry/raven-python/issues/1243", "id": 325391575, "node_id": "MDU6SXNzdWUzMjUzOTE1NzU=", "number": 1243, "title": "Missing git tag for 6.8.0 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-22T17:26:15Z", "updated_at": "2018-05-22T18:00:48Z", "closed_at": "2018-05-22T18:00:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1242", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1242/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1242/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1242/events", "html_url": "https://github.com/getsentry/raven-python/issues/1242", "id": 325085148, "node_id": "MDU6SXNzdWUzMjUwODUxNDg=", "number": 1242, "title": "Raven on Openshift fails with KeyError: 'getpwuid(): uid not found: 1000580000'", "user": {"login": "rypalmer", "id": 227651, "node_id": "MDQ6VXNlcjIyNzY1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/227651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rypalmer", "html_url": "https://github.com/rypalmer", "followers_url": "https://api.github.com/users/rypalmer/followers", "following_url": "https://api.github.com/users/rypalmer/following{/other_user}", "gists_url": "https://api.github.com/users/rypalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rypalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rypalmer/subscriptions", "organizations_url": "https://api.github.com/users/rypalmer/orgs", "repos_url": "https://api.github.com/users/rypalmer/repos", "events_url": "https://api.github.com/users/rypalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/rypalmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-05-21T22:54:47Z", "updated_at": "2018-05-23T13:42:18Z", "closed_at": "2018-05-23T13:42:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use raven==6.6.0 on a Django site hosted in Openshift. \r\n\r\nThere seems to be a known issue of the \"unknown user\" when running on a Docker container. \r\n\r\nhttp://blog.dscpl.com.au/2015/12/unknown-user-when-running-docker.html\r\n\r\nHas anyone else encountered this issue? Or know of a workaround? \r\n\r\n\r\n```\r\nsh-4.2$ python3 manage.py raven test                                                               \r\nClient configuration:                                                                                                                                                                          \r\n  base_url       : https://sentry.io                                                                                                                                                           \r\n  project        :                                                                                                                                                                     \r\n  public_key     :\r\n  secret_key     :                                                                                                                                            \r\n                                                                                                                                                                                              \r\nSending a test message... Traceback (most recent call last):                                                                                                                                   \r\n  File \"manage.py\", line 24, in <module>                                                                                                                                                       \r\n    execute_from_command_line(sys.argv)                                                                                                                                                        \r\n  File \"/opt/app-root/src/.local/lib/python3.6/site-packages/django/core/management/__init__.py\", line 364, in execute_from_command_line                                                       \r\n    utility.execute()                                                                                                                                                                          \r\n  File \"/opt/app-root/src/.local/lib/python3.6/site-packages/django/core/management/__init__.py\", line 356, in execute                                                                         \r\n    self.fetch_command(subcommand).run_from_argv(self.argv)                                                                                                                                    \r\n  File \"/opt/app-root/src/.local/lib/python3.6/site-packages/django/core/management/base.py\", line 283, in run_from_argv                                                                       \r\n    self.execute(*args, **cmd_options)                                                                                                                                                         \r\n  File \"/opt/app-root/src/.local/lib/python3.6/site-packages/django/core/management/base.py\", line 330, in execute                                                                             \r\n    output = self.handle(*args, **options)                                                                                                                                                     \r\n  File \"/opt/app-root/src/.local/lib/python3.6/site-packages/raven/contrib/django/management/commands/raven.py\", line 69, in handle                                                            \r\n    'data': options.get('data'),                                                                                                                                                               \r\n  File \"/opt/app-root/src/.local/lib/python3.6/site-packages/raven/scripts/runner.py\", line 80, in send_test_message                                                                           \r\n    'user': get_uid(),                                                                                                                                                                         \r\n  File \"/opt/app-root/src/.local/lib/python3.6/site-packages/raven/scripts/runner.py\", line 43, in get_uid                                                                                     \r\n    return pwd.getpwuid(os.geteuid())[0]                                                                                                                                                       \r\nKeyError: 'getpwuid(): uid not found: 1000580000' \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1241", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1241/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1241/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1241/events", "html_url": "https://github.com/getsentry/raven-python/issues/1241", "id": 324518794, "node_id": "MDU6SXNzdWUzMjQ1MTg3OTQ=", "number": 1241, "title": "Drop python 3.3 support", "user": {"login": "mattrobenolt", "id": 375744, "node_id": "MDQ6VXNlcjM3NTc0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/375744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattrobenolt", "html_url": "https://github.com/mattrobenolt", "followers_url": "https://api.github.com/users/mattrobenolt/followers", "following_url": "https://api.github.com/users/mattrobenolt/following{/other_user}", "gists_url": "https://api.github.com/users/mattrobenolt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattrobenolt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattrobenolt/subscriptions", "organizations_url": "https://api.github.com/users/mattrobenolt/orgs", "repos_url": "https://api.github.com/users/mattrobenolt/repos", "events_url": "https://api.github.com/users/mattrobenolt/events{/privacy}", "received_events_url": "https://api.github.com/users/mattrobenolt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-05-18T19:01:05Z", "updated_at": "2018-05-19T07:09:46Z", "closed_at": "2018-05-19T07:09:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, python 3.3 is broken in tox in our test suite with:\r\n\r\n> DEPRECATION: Python 3.3 supported has been deprecated and support for it will be dropped in the future. Please upgrade your Python.\r\n\r\nAny reason not to just drop this from CI?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1235", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1235/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1235/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1235/events", "html_url": "https://github.com/getsentry/raven-python/issues/1235", "id": 319933808, "node_id": "MDU6SXNzdWUzMTk5MzM4MDg=", "number": 1235, "title": "New style dsn setting", "user": {"login": "caulagi", "id": 222507, "node_id": "MDQ6VXNlcjIyMjUwNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/222507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caulagi", "html_url": "https://github.com/caulagi", "followers_url": "https://api.github.com/users/caulagi/followers", "following_url": "https://api.github.com/users/caulagi/following{/other_user}", "gists_url": "https://api.github.com/users/caulagi/gists{/gist_id}", "starred_url": "https://api.github.com/users/caulagi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caulagi/subscriptions", "organizations_url": "https://api.github.com/users/caulagi/orgs", "repos_url": "https://api.github.com/users/caulagi/repos", "events_url": "https://api.github.com/users/caulagi/events{/privacy}", "received_events_url": "https://api.github.com/users/caulagi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-05-03T14:01:25Z", "updated_at": "2018-05-11T09:23:59Z", "closed_at": "2018-05-11T09:23:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I use the new style of dsn values (without the secret part), the exception doesn't appear on sentry.io. However, if I use the dsn with the secret part, the exception appears on the site.\r\n\r\n```\r\n$ python3.6 -m venv raven-test\r\n\r\n$ . ./raven-test/bin/activate\r\n$ pip install raven\r\nCollecting raven\r\n  Cache entry deserialization failed, entry ignored\r\n  Cache entry deserialization failed, entry ignored\r\n  Downloading https://files.pythonhosted.org/packages/51/7c/bdfa7eff52208a949bc5ab770c084f4725c42dde41e36d5a9e15f11a9a14/raven-6.7.0-py2.py3-none-any.whl (284kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 286kB 1.4MB/s\r\nInstalling collected packages: raven\r\nSuccessfully installed raven-6.7.0\r\nYou are using pip version 9.0.1, however version 10.0.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\r\n$ python\r\nPython 3.6.4 (default, Jan  6 2018, 11:51:15)\r\n[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.39.2)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from raven import Client\r\n>>> client = Client('https://****@sentry.io/220697')\r\n>>>\r\n>>> try:\r\n...   1/0\r\n... except ZeroDivisionError:\r\n...   client.captureException()\r\n...\r\n>>>\r\n>>> client = Client('https://****:****@sentry.io/220697')\r\n>>> try:\r\n...   1/0\r\n... except ZeroDivisionError:\r\n...   client.captureException()\r\n...\r\n'94ba8e1f6e68467eb01492b81f1624d6'\r\n>>>\r\n```\r\n\r\nAm I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1231", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1231/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1231/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1231/events", "html_url": "https://github.com/getsentry/raven-python/issues/1231", "id": 319169068, "node_id": "MDU6SXNzdWUzMTkxNjkwNjg=", "number": 1231, "title": "Blinker missing from requirements for Sanic", "user": {"login": "madisvain", "id": 727994, "node_id": "MDQ6VXNlcjcyNzk5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/727994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madisvain", "html_url": "https://github.com/madisvain", "followers_url": "https://api.github.com/users/madisvain/followers", "following_url": "https://api.github.com/users/madisvain/following{/other_user}", "gists_url": "https://api.github.com/users/madisvain/gists{/gist_id}", "starred_url": "https://api.github.com/users/madisvain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madisvain/subscriptions", "organizations_url": "https://api.github.com/users/madisvain/orgs", "repos_url": "https://api.github.com/users/madisvain/repos", "events_url": "https://api.github.com/users/madisvain/events{/privacy}", "received_events_url": "https://api.github.com/users/madisvain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-05-01T10:46:57Z", "updated_at": "2018-05-06T12:56:05Z", "closed_at": "2018-05-06T12:56:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Blinker is imported in raven.contrib.sanic:\r\nhttps://github.com/getsentry/raven-python/blob/master/raven/contrib/sanic.py#L13\r\n\r\nBut missing from the sanic_requires in setup.py:\r\nhttps://github.com/getsentry/raven-python/blob/master/setup.py#L64\r\n\r\nAlso the extras_requires could include sanic:\r\nhttps://github.com/getsentry/raven-python/blob/master/setup.py#L126\r\n\r\nIf this is intentional then this issue can be closed. If I can be of help adding them then I can prepare a pull request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1230", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1230/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1230/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1230/events", "html_url": "https://github.com/getsentry/raven-python/issues/1230", "id": 318990290, "node_id": "MDU6SXNzdWUzMTg5OTAyOTA=", "number": 1230, "title": "\"TypeError: Expected type, got ABCMeta\" Flask + Raven + Gevent", "user": {"login": "shreyanshk", "id": 8820721, "node_id": "MDQ6VXNlcjg4MjA3MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8820721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shreyanshk", "html_url": "https://github.com/shreyanshk", "followers_url": "https://api.github.com/users/shreyanshk/followers", "following_url": "https://api.github.com/users/shreyanshk/following{/other_user}", "gists_url": "https://api.github.com/users/shreyanshk/gists{/gist_id}", "starred_url": "https://api.github.com/users/shreyanshk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shreyanshk/subscriptions", "organizations_url": "https://api.github.com/users/shreyanshk/orgs", "repos_url": "https://api.github.com/users/shreyanshk/repos", "events_url": "https://api.github.com/users/shreyanshk/events{/privacy}", "received_events_url": "https://api.github.com/users/shreyanshk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-30T18:34:44Z", "updated_at": "2018-09-12T22:21:40Z", "closed_at": "2018-09-12T22:21:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom gevent import monkey; monkey.patch_all()\r\nfrom raven.contrib.flask import Sentry\r\nfrom flask import Flask\r\n\r\nsentry = Sentry()\r\napp = Flask(\"test\")\r\n\r\nsentry.init_app(app)\r\n```\r\nSoftware: gevent 1.3b1, flask 1.0.1, raven 6.7.0, python 3.6.5\r\nOS: Arch Linux\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/tmp/test.py\", line 8, in <module>\r\n    sentry.init_app(app)\r\n  File \"/home/shreyansh/Projects/shreyanshjain/venv/lib/python3.6/site-packages/raven/contrib/flask.py\", line 279, in init_app\r\n    self.client = make_client(self.client_cls, app, self.dsn)\r\n  File \"/home/shreyansh/Projects/shreyanshjain/venv/lib/python3.6/site-packages/raven/contrib/flask.py\", line 52, in make_client\r\n    'app': app,\r\n  File \"/home/shreyansh/Projects/shreyanshjain/venv/lib/python3.6/site-packages/raven/base.py\", line 230, in __init__\r\n    self._context = Context(self)\r\n  File \"src/gevent/local.py\", line 376, in gevent._local.local.__cinit__\r\n  File \"src/gevent/local.py\", line 542, in gevent._local._local_find_descriptors\r\nTypeError: Expected type, got ABCMeta\r\n```\r\n\r\nAny pointers?\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1227", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1227/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1227/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1227/events", "html_url": "https://github.com/getsentry/raven-python/issues/1227", "id": 317728654, "node_id": "MDU6SXNzdWUzMTc3Mjg2NTQ=", "number": 1227, "title": "Sentry Fails to Report", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-25T17:45:36Z", "updated_at": "2018-04-25T17:46:26Z", "closed_at": "2018-04-25T17:46:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unclear why but the process dies and all that it prints is:\r\n```\r\nSentry is attempting to send 1 pending error messages\r\nWaiting up to 10 seconds\r\nPress Ctrl-C to quit\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1221", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1221/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1221/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1221/events", "html_url": "https://github.com/getsentry/raven-python/issues/1221", "id": 314047683, "node_id": "MDU6SXNzdWUzMTQwNDc2ODM=", "number": 1221, "title": "Add blinker to requirements in documentation", "user": {"login": "jboegeholz", "id": 22006147, "node_id": "MDQ6VXNlcjIyMDA2MTQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/22006147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jboegeholz", "html_url": "https://github.com/jboegeholz", "followers_url": "https://api.github.com/users/jboegeholz/followers", "following_url": "https://api.github.com/users/jboegeholz/following{/other_user}", "gists_url": "https://api.github.com/users/jboegeholz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jboegeholz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jboegeholz/subscriptions", "organizations_url": "https://api.github.com/users/jboegeholz/orgs", "repos_url": "https://api.github.com/users/jboegeholz/repos", "events_url": "https://api.github.com/users/jboegeholz/events{/privacy}", "received_events_url": "https://api.github.com/users/jboegeholz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-13T10:08:43Z", "updated_at": "2018-04-13T14:26:50Z", "closed_at": "2018-04-13T14:26:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "After doing pip install raven --upgrade\r\nand starting the flask app\r\nthe blinker module is missing.\r\n\r\nUpdate of the documentation is needed. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1212", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1212/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1212/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1212/events", "html_url": "https://github.com/getsentry/raven-python/issues/1212", "id": 307283783, "node_id": "MDU6SXNzdWUzMDcyODM3ODM=", "number": 1212, "title": "WSGI middleware - Display formatted tracebacks", "user": {"login": "azmeuk", "id": 60163, "node_id": "MDQ6VXNlcjYwMTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/60163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azmeuk", "html_url": "https://github.com/azmeuk", "followers_url": "https://api.github.com/users/azmeuk/followers", "following_url": "https://api.github.com/users/azmeuk/following{/other_user}", "gists_url": "https://api.github.com/users/azmeuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/azmeuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azmeuk/subscriptions", "organizations_url": "https://api.github.com/users/azmeuk/orgs", "repos_url": "https://api.github.com/users/azmeuk/repos", "events_url": "https://api.github.com/users/azmeuk/events{/privacy}", "received_events_url": "https://api.github.com/users/azmeuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-21T15:04:26Z", "updated_at": "2018-03-21T15:48:24Z", "closed_at": "2018-03-21T15:48:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. \r\nSentry is very useful to catch production errors. Though at my company, we usually do not use it in the development phase, as we generate a lot of exceptions and prefer just see them on the fly instead of generating few valuable exception info in mass.\r\n\r\nWe would love raven to be able to format and display tracebacks like [cgitb](https://docs.python.org/3.8/library/cgitb.html) does. Maybe the piece of code that sentry server uses to format tracebacks is reusable ?\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1206", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1206/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1206/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1206/events", "html_url": "https://github.com/getsentry/raven-python/issues/1206", "id": 302518068, "node_id": "MDU6SXNzdWUzMDI1MTgwNjg=", "number": 1206, "title": "Tornado 5.0 release broke our build on Trusty", "user": {"login": "robvdl", "id": 1018674, "node_id": "MDQ6VXNlcjEwMTg2NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1018674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robvdl", "html_url": "https://github.com/robvdl", "followers_url": "https://api.github.com/users/robvdl/followers", "following_url": "https://api.github.com/users/robvdl/following{/other_user}", "gists_url": "https://api.github.com/users/robvdl/gists{/gist_id}", "starred_url": "https://api.github.com/users/robvdl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robvdl/subscriptions", "organizations_url": "https://api.github.com/users/robvdl/orgs", "repos_url": "https://api.github.com/users/robvdl/repos", "events_url": "https://api.github.com/users/robvdl/events{/privacy}", "received_events_url": "https://api.github.com/users/robvdl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-06T00:32:55Z", "updated_at": "2018-03-22T09:25:00Z", "closed_at": "2018-03-22T09:25:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can tornado please be pinned in raven, it's crashing on Trusty ever since Tornado 5.0 has been released, fine with Tornado 4.5.3\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/share/parcelcollectbroker/venv/lib/python3.4/site-packages/octocommon/logfilters.py\", line 3, in <module>\r\n    from raven.contrib.django.raven_compat.handlers import SentryHandler\r\n  File \"/usr/share/parcelcollectbroker/venv/lib/python3.4/site-packages/raven/__init__.py\", line 54, in <module>\r\n    from raven.base import *  # NOQA\r\n  File \"/usr/share/parcelcollectbroker/venv/lib/python3.4/site-packages/raven/base.py\", line 37, in <module>\r\n    from raven.conf.remote import RemoteConfig\r\n  File \"/usr/share/parcelcollectbroker/venv/lib/python3.4/site-packages/raven/conf/remote.py\", line 36, in <module>\r\n    DEFAULT_TRANSPORT = discover_default_transport()\r\n  File \"/usr/share/parcelcollectbroker/venv/lib/python3.4/site-packages/raven/conf/remote.py\", line 18, in discover_default_transport\r\n    from raven.transport.threaded import ThreadedHTTPTransport\r\n  File \"/usr/share/parcelcollectbroker/venv/lib/python3.4/site-packages/raven/transport/__init__.py\", line 18, in <module>\r\n    from raven.transport.registry import *  # NOQA\r\n  File \"/usr/share/parcelcollectbroker/venv/lib/python3.4/site-packages/raven/transport/registry.py\", line 19, in <module>\r\n    from raven.transport.tornado import TornadoHTTPTransport\r\n  File \"/usr/share/parcelcollectbroker/venv/lib/python3.4/site-packages/raven/transport/tornado.py\", line 17, in <module>\r\n    from tornado.httpclient import AsyncHTTPClient, HTTPClient\r\n  File \"/usr/share/parcelcollectbroker/venv/lib/python3.4/site-packages/tornado/httpclient.py\", line 49, in <module>\r\n    from tornado import gen, httputil, stack_context\r\n  File \"/usr/share/parcelcollectbroker/venv/lib/python3.4/site-packages/tornado/gen.py\", line 1295, in <module>\r\n    _wrap_awaitable = asyncio.ensure_future\r\nAttributeError: 'module' object has no attribute 'ensure_future'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1196", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1196/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1196/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1196/events", "html_url": "https://github.com/getsentry/raven-python/issues/1196", "id": 296583073, "node_id": "MDU6SXNzdWUyOTY1ODMwNzM=", "number": 1196, "title": "What is this comment in the code talking about?", "user": {"login": "thanatos", "id": 90853, "node_id": "MDQ6VXNlcjkwODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/90853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thanatos", "html_url": "https://github.com/thanatos", "followers_url": "https://api.github.com/users/thanatos/followers", "following_url": "https://api.github.com/users/thanatos/following{/other_user}", "gists_url": "https://api.github.com/users/thanatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/thanatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thanatos/subscriptions", "organizations_url": "https://api.github.com/users/thanatos/orgs", "repos_url": "https://api.github.com/users/thanatos/repos", "events_url": "https://api.github.com/users/thanatos/events{/privacy}", "received_events_url": "https://api.github.com/users/thanatos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-13T01:25:31Z", "updated_at": "2018-02-13T01:35:42Z", "closed_at": "2018-02-13T01:29:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "[This passage in the code](https://github.com/getsentry/raven-python/blob/0c417999944646c0d8d27856f2440ecb6b1c336a/raven/breadcrumbs.py#L145-L155) reads as follows:\r\n\r\n```python\r\n        # We do not want to include exc_info as argument because it often\r\n        # lies (set to a constant value like 1 or True) or even if it's a\r\n        # tuple it will not be particularly useful for us as we cannot\r\n        # process it anyways.\r\n        kwargs.pop('exc_info', None)\r\n        data.update({\r\n            'message': formatted_msg,\r\n            'category': logger.name,\r\n            'level': logging.getLevelName(level).lower(),\r\n            'data': kwargs,\r\n        })\r\n```\r\n\r\nFirst,\r\n\r\n> We do not want to include `exc_info` as argument because it often lies (set to a constant value like 1 or True)\r\n\r\n`exc_info` is not \"lying\"; 1/`True` is a documented, valid value: it means to retrieve the exception information from `sys.exc_info`. See [`logging.debug`](https://docs.python.org/3/library/logging.html#logging.Logger.debug):\r\n\r\n> If exc\\_info does not evaluate as false, it causes exception information to be added to the logging message. If an exception tuple (in the format returned by `sys.exc_info()`) or an exception instance is provided, it is used; otherwise, `sys.exc_info()` is called to get the exception information.\r\n\r\nThe passage continues,\r\n\r\n> or even if it's a tuple it will not be particularly useful for us as we cannot process it anyways\r\n\r\nWhy not? How does `sentry_client.captureException()` manage to capture the exception information, and why can't this code path use similar means?\r\n\r\nWe see a number of Sentry calls that end up originating from this area; they come from an incredibly generic area of our code unfortunately, so the exception information would be extremely useful in determining _what_ went wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1191", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1191/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1191/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1191/events", "html_url": "https://github.com/getsentry/raven-python/issues/1191", "id": 293542310, "node_id": "MDU6SXNzdWUyOTM1NDIzMTA=", "number": 1191, "title": "Django logging integration docs", "user": {"login": "filipeximenes", "id": 1180884, "node_id": "MDQ6VXNlcjExODA4ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1180884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/filipeximenes", "html_url": "https://github.com/filipeximenes", "followers_url": "https://api.github.com/users/filipeximenes/followers", "following_url": "https://api.github.com/users/filipeximenes/following{/other_user}", "gists_url": "https://api.github.com/users/filipeximenes/gists{/gist_id}", "starred_url": "https://api.github.com/users/filipeximenes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/filipeximenes/subscriptions", "organizations_url": "https://api.github.com/users/filipeximenes/orgs", "repos_url": "https://api.github.com/users/filipeximenes/repos", "events_url": "https://api.github.com/users/filipeximenes/events{/privacy}", "received_events_url": "https://api.github.com/users/filipeximenes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-01T14:05:50Z", "updated_at": "2018-02-08T17:13:04Z", "closed_at": "2018-02-08T17:13:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not super experienced with logs so feel free to disregard.\r\nHere in the docs: https://docs.sentry.io/clients/python/integrations/django/#integration-with-logging\r\nit defines the `'sentry'` handlers but it's not being used anywhere in the loggers. Is this right? Am i missing something? In this blog post from LincolnLoop https://lincolnloop.com/blog/django-logging-right-way/ they set sentry's handler in the loggers so this kind of backs me up in my question.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1177", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1177/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1177/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1177/events", "html_url": "https://github.com/getsentry/raven-python/issues/1177", "id": 285701388, "node_id": "MDU6SXNzdWUyODU3MDEzODg=", "number": 1177, "title": "Expand self", "user": {"login": "boxed", "id": 332428, "node_id": "MDQ6VXNlcjMzMjQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/332428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxed", "html_url": "https://github.com/boxed", "followers_url": "https://api.github.com/users/boxed/followers", "following_url": "https://api.github.com/users/boxed/following{/other_user}", "gists_url": "https://api.github.com/users/boxed/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxed/subscriptions", "organizations_url": "https://api.github.com/users/boxed/orgs", "repos_url": "https://api.github.com/users/boxed/repos", "events_url": "https://api.github.com/users/boxed/events{/privacy}", "received_events_url": "https://api.github.com/users/boxed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 703737828, "node_id": "MDU6TGFiZWw3MDM3Mzc4Mjg=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Feature%20Request", "name": "Feature Request", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-03T14:25:07Z", "updated_at": "2019-02-08T09:35:38Z", "closed_at": "2019-02-08T09:35:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "A common problem with object oriented code is that the crash logs in sentry don't contain the relevant variables because they live on self. So instead of \"a = 2, b = 3\" you'd get \"self = <SomeClass at 0xdeadmeat>\". This makes it much more difficult to reproduce and fix the bug. We could instead expand members of self that have been used! Proof of concept looks something like this:\r\n\r\n```python\r\nfrom __future__ import print_function\r\nimport inspect\r\nimport re\r\n\r\nclass Foo(object):\r\n    def __init__(self):\r\n        self.a = 1\r\n        self.b = 2\r\n        self.c = 3\r\n        self.d = 6\r\n\r\n    def foo(self):\r\n        x = self.c + self.d\r\n        raise Exception()\r\n\r\ndef format_stack(frame):\r\n    frame_info = inspect.getframeinfo(frame)\r\n\r\n    print('---- %s:%s ----' % (frame_info.filename, frame_info.lineno))\r\n    for k, v in frame.tb_frame.f_locals.items():\r\n        print('%s: %s' % (k, v))\r\n        if k == 'self':\r\n            source = inspect.getsource(frame)\r\n            for self_member in re.findall(r'self\\.(\\w)', source):\r\n                print('self.%s: %s' % (self_member, getattr(v, self_member)))\r\n\r\n\r\n    if frame.tb_next:\r\n        format_stack(frame)\r\n\r\ntry:\r\n    Foo().foo()\r\nexcept Exception as e:\r\n    import sys\r\n    tb = sys.exc_info()[2]\r\n    format_stack(tb.tb_next)\r\n\r\n```\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1172", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1172/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1172/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1172/events", "html_url": "https://github.com/getsentry/raven-python/issues/1172", "id": 284881688, "node_id": "MDU6SXNzdWUyODQ4ODE2ODg=", "number": 1172, "title": "Sentry responded with an error: HTTP Error 403: OK", "user": {"login": "justin76tan", "id": 8719408, "node_id": "MDQ6VXNlcjg3MTk0MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8719408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justin76tan", "html_url": "https://github.com/justin76tan", "followers_url": "https://api.github.com/users/justin76tan/followers", "following_url": "https://api.github.com/users/justin76tan/following{/other_user}", "gists_url": "https://api.github.com/users/justin76tan/gists{/gist_id}", "starred_url": "https://api.github.com/users/justin76tan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justin76tan/subscriptions", "organizations_url": "https://api.github.com/users/justin76tan/orgs", "repos_url": "https://api.github.com/users/justin76tan/repos", "events_url": "https://api.github.com/users/justin76tan/events{/privacy}", "received_events_url": "https://api.github.com/users/justin76tan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44357545, "node_id": "MDU6TGFiZWw0NDM1NzU0NQ==", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Need%20more%20information", "name": "Need more information", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-28T10:00:55Z", "updated_at": "2018-05-13T13:16:28Z", "closed_at": "2018-01-06T14:39:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use django, raven-python version is 6.4.0\r\npython manage.py raven --traceback test\r\nClient configuration:\r\n  base_url       : http://120.24.249.69:9000/sentry\r\n  project        : 2\r\n  public_key     : 2acf61cecdd24a7b922c9416af5e1fe3\r\n  secret_key     : c18ac29d6cf54792983f55dde6182f95\r\n\r\nSending a test message... Event ID was '3a0153965d834802a22ffca24a8b4fec'\r\nSentry responded with an error: HTTP Error 403: OK (url: http://120.24.249.69:9000/sentry/api/2/store/)\r\nTraceback (most recent call last):\r\n  File \"/home/deploy/act_python35x/lib/python3.5/site-packages/raven/transport/threaded.py\", line 165, in send_sync\r\n    super(ThreadedHTTPTransport, self).send(url, data, headers)\r\n  File \"/home/deploy/act_python35x/lib/python3.5/site-packages/raven/transport/http.py\", line 43, in send\r\n    ca_certs=self.ca_certs,\r\n  File \"/home/deploy/act_python35x/lib/python3.5/site-packages/raven/utils/http.py\", line 73, in urlopen\r\n    return opener.open(url, data, timeout)\r\n  File \"/usr/lib/python3.5/urllib/request.py\", line 472, in open\r\n    response = meth(req, response)\r\n  File \"/usr/lib/python3.5/urllib/request.py\", line 582, in http_response\r\n    'http', request, response, code, msg, hdrs)\r\n  File \"/usr/lib/python3.5/urllib/request.py\", line 510, in error\r\n    return self._call_chain(*args)\r\n  File \"/usr/lib/python3.5/urllib/request.py\", line 444, in _call_chain\r\n    result = func(*args)\r\n  File \"/usr/lib/python3.5/urllib/request.py\", line 590, in http_error_default\r\n    raise HTTPError(req.full_url, code, msg, hdrs, fp)\r\nurllib.error.HTTPError: HTTP Error 403: OK\r\n['This is a test message generated using ``raven test``']", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1169", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1169/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1169/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1169/events", "html_url": "https://github.com/getsentry/raven-python/issues/1169", "id": 283560554, "node_id": "MDU6SXNzdWUyODM1NjA1NTQ=", "number": 1169, "title": "\"AttributeError: 'NoneType' object has no attribute 'get'\" in LambdaClient.captureMessage()", "user": {"login": "flurischt", "id": 191603, "node_id": "MDQ6VXNlcjE5MTYwMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flurischt", "html_url": "https://github.com/flurischt", "followers_url": "https://api.github.com/users/flurischt/followers", "following_url": "https://api.github.com/users/flurischt/following{/other_user}", "gists_url": "https://api.github.com/users/flurischt/gists{/gist_id}", "starred_url": "https://api.github.com/users/flurischt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flurischt/subscriptions", "organizations_url": "https://api.github.com/users/flurischt/orgs", "repos_url": "https://api.github.com/users/flurischt/repos", "events_url": "https://api.github.com/users/flurischt/events{/privacy}", "received_events_url": "https://api.github.com/users/flurischt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321323, "node_id": "MDU6TGFiZWw2MjgzMjEzMjM=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 649408345, "node_id": "MDU6TGFiZWw2NDk0MDgzNDU=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Platforms:%20AWS%20Lambda", "name": "Platforms: AWS Lambda", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-12-20T13:21:32Z", "updated_at": "2018-01-02T09:16:54Z", "closed_at": "2018-01-02T09:16:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "## 'NoneType' object has no attribute 'get'\r\nI added LambdaClient to my AWS Lambda functions. Using the latest version of sentry installed using pip I get ```AttributeError: 'NoneType' object has no attribute 'get'``` when calling `client.captureMessage()`.\r\n\r\nThis happens inside my Lambdas on AWS as well as on my local computer.\r\n\r\n## Steps to reproduce\r\n```\r\n$ pip install raven\r\n$ python3.6\r\n>>> from raven.contrib.awslambda import LambdaClient\r\n>>> client = LambdaClient('https://********')\r\n>>> client.captureMessage('My event just happened!')\r\nError in sys.excepthook:\r\nTraceback (most recent call last):\r\n  File \"/****/raven/base.py\", line 274, in handle_exception\r\n    self.captureException(exc_info=exc_info, level='fatal')\r\n  File \"/****/raven/base.py\", line 814, in captureException\r\n    'raven.events.Exception', exc_info=exc_info, **kwargs)\r\n  File \"/****/raven/contrib/awslambda/__init__.py\", line 67, in capture\r\n    user_info = self._get_user_interface(event)\r\n  File \"/****/raven/contrib/awslambda/__init__.py\", line 128, in _get_user_interface\r\n    if event.get('requestContext'):\r\nAttributeError: 'NoneType' object has no attribute 'get'\r\n\r\nOriginal exception was:\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/****/raven/base.py\", line 792, in captureMessage\r\n    return self.capture('raven.events.Message', message=message, **kwargs)\r\n  File \"/****/raven/contrib/awslambda/__init__.py\", line 67, in capture\r\n    user_info = self._get_user_interface(event)\r\n  File \"/****/raven/contrib/awslambda/__init__.py\", line 128, in _get_user_interface\r\n    if event.get('requestContext'):\r\nAttributeError: 'NoneType' object has no attribute 'get'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1168", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1168/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1168/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1168/events", "html_url": "https://github.com/getsentry/raven-python/issues/1168", "id": 283297521, "node_id": "MDU6SXNzdWUyODMyOTc1MjE=", "number": 1168, "title": "Raven serialization error for Decimal InvalidOperation", "user": {"login": "AgDude", "id": 1122519, "node_id": "MDQ6VXNlcjExMjI1MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1122519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AgDude", "html_url": "https://github.com/AgDude", "followers_url": "https://api.github.com/users/AgDude/followers", "following_url": "https://api.github.com/users/AgDude/following{/other_user}", "gists_url": "https://api.github.com/users/AgDude/gists{/gist_id}", "starred_url": "https://api.github.com/users/AgDude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AgDude/subscriptions", "organizations_url": "https://api.github.com/users/AgDude/orgs", "repos_url": "https://api.github.com/users/AgDude/repos", "events_url": "https://api.github.com/users/AgDude/events{/privacy}", "received_events_url": "https://api.github.com/users/AgDude/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-19T16:45:50Z", "updated_at": "2018-01-02T20:14:21Z", "closed_at": "2018-01-02T20:14:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom decimal import Decimal\r\nimport raven\r\nclient = raven.Client(dsn='https://mydsn')\r\n\r\n\r\ntry:\r\n    Decimal('')\r\nexcept:\r\n    client.captureException()\r\n```\r\ncauses the exception stack below.\r\n\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-15-01f1eea56cbc> in <module>()\r\n      7     Decimal('')\r\n      8 except:\r\n----> 9     client.captureException()\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/raven/base.pyc in captureException(self, exc_info, **kwargs)\r\n    816 \r\n    817         return self.capture(\r\n--> 818             'raven.events.Exception', exc_info=exc_info, **kwargs)\r\n    819 \r\n    820     def should_capture(self, exc_info):\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/raven/base.pyc in capture(self, event_type, data, date, time_spent, extra, stack, tags, sample_rate, **kwargs)\r\n    636         data = self.build_msg(\r\n    637             event_type, data, date, time_spent, extra, stack, tags=tags,\r\n--> 638             **kwargs)\r\n    639 \r\n    640         # should this event be sampled?\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/raven/base.pyc in build_msg(self, event_type, data, date, time_spent, extra, stack, public_key, tags, fingerprint, **kwargs)\r\n    389 \r\n    390         handler = self.get_handler(event_type)\r\n--> 391         result = handler.capture(**kwargs)\r\n    392 \r\n    393         # data (explicit) culprit takes over auto event detection\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/raven/events.pyc in capture(self, exc_info, **kwargs)\r\n    119         values = []\r\n    120         for exc_info in _chained_exceptions(exc_info):\r\n--> 121             value = self._get_value(*exc_info)\r\n    122             values.insert(0, value)\r\n    123 \r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/raven/events.pyc in _get_value(self, exc_type, exc_value, exc_traceback)\r\n     95             iter_traceback_frames(exc_traceback),\r\n     96             transformer=self.transform,\r\n---> 97             capture_locals=self.client.capture_locals,\r\n     98         )\r\n     99 \r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/raven/utils/stacks.pyc in get_stack_info(frames, transformer, capture_locals, frame_allowance)\r\n    295         }\r\n    296         if capture_locals:\r\n--> 297             f_vars = get_frame_locals(frame, transformer=transformer)\r\n    298             if f_vars:\r\n    299                 frame_result['vars'] = f_vars\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/raven/utils/stacks.pyc in get_frame_locals(frame, transformer, max_var_size)\r\n    158     f_size = 0\r\n    159     for k, v in iteritems(f_locals):\r\n--> 160         v = transformer(v)\r\n    161         v_size = len(repr(v))\r\n    162         if v_size + f_size < max_var_size:\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/raven/events.pyc in transform(self, value)\r\n     31 \r\n     32     def transform(self, value):\r\n---> 33         return self.client.transform(value)\r\n     34 \r\n     35 \r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/raven/base.pyc in transform(self, data)\r\n    510         return transform(\r\n    511             data, list_max_length=self.list_max_length,\r\n--> 512             string_max_length=self.string_max_length)\r\n    513 \r\n    514     @property\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/raven/utils/serializer/manager.pyc in transform(value, manager, **kwargs)\r\n     92 def transform(value, manager=manager, **kwargs):\r\n     93     with closing(Serializer(manager)) as serializer:\r\n---> 94         return serializer.transform(value, **kwargs)\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/raven/utils/serializer/manager.pyc in transform(self, value, **kwargs)\r\n     76                 return repr(value)\r\n     77             except Exception as e:\r\n---> 78                 logger.exception(e)\r\n     79                 # It's common case that a model's __unicode__ definition\r\n     80                 # may try to query the database which if it was not\r\n\r\n/usr/lib/python2.7/logging/__init__.pyc in exception(self, msg, *args, **kwargs)\r\n   1180     def exception(self, msg, *args, **kwargs):\r\n   1181         \"\"\"\r\n-> 1182         Convenience method for logging an ERROR with exception information.\r\n   1183         \"\"\"\r\n   1184         kwargs['exc_info'] = 1\r\n\r\n/usr/lib/python2.7/logging/__init__.pyc in exception(self, msg, *args, **kwargs)\r\n   1183         \"\"\"\r\n   1184         kwargs['exc_info'] = 1\r\n-> 1185         self.error(msg, *args, **kwargs)\r\n   1186 \r\n   1187     def critical(self, msg, *args, **kwargs):\r\n\r\n/usr/lib/python2.7/logging/__init__.pyc in error(self, msg, *args, **kwargs)\r\n   1168     def error(self, msg, *args, **kwargs):\r\n   1169         \"\"\"\r\n-> 1170         Log 'msg % args' with severity 'ERROR'.\r\n   1171 \r\n   1172         To pass exception information, use the keyword argument exc_info with\r\n\r\n/usr/lib/python2.7/logging/__init__.pyc in error(self, msg, *args, **kwargs)\r\n   1176         \"\"\"\r\n   1177         if self.isEnabledFor(ERROR):\r\n-> 1178             self._log(ERROR, msg, args, **kwargs)\r\n   1179 \r\n   1180     def exception(self, msg, *args, **kwargs):\r\n\r\n/usr/lib/python2.7/logging/__init__.pyc in _log(self, level, msg, args, exc_info, extra)\r\n   1269                 exc_info = sys.exc_info()\r\n   1270         record = self.makeRecord(self.name, level, fn, lno, msg, args, exc_info, func, extra)\r\n-> 1271         self.handle(record)\r\n   1272 \r\n   1273     def handle(self, record):\r\n\r\n/usr/lib/python2.7/logging/__init__.pyc in handle(self, record)\r\n   1279         \"\"\"\r\n   1280         if (not self.disabled) and self.filter(record):\r\n-> 1281             self.callHandlers(record)\r\n   1282 \r\n   1283     def addHandler(self, hdlr):\r\n\r\n/usr/lib/python2.7/logging/__init__.pyc in callHandlers(self, record)\r\n   1319                 found = found + 1\r\n   1320                 if record.levelno >= hdlr.level:\r\n-> 1321                     hdlr.handle(record)\r\n   1322             if not c.propagate:\r\n   1323                 c = None    #break out\r\n\r\n/usr/lib/python2.7/logging/__init__.pyc in handle(self, record)\r\n    747             self.acquire()\r\n    748             try:\r\n--> 749                 self.emit(record)\r\n    750             finally:\r\n    751                 self.release()\r\n\r\n/usr/lib/python2.7/logging/handlers.pyc in emit(self, record)\r\n    840         exception information is present, it is NOT sent to the server.\r\n    841         \"\"\"\r\n--> 842         msg = self.format(record) + '\\000'\r\n    843         \"\"\"\r\n    844         We need to convert record level to lowercase, maybe this will\r\n\r\n/usr/lib/python2.7/logging/__init__.pyc in format(self, record)\r\n    722         else:\r\n    723             fmt = _defaultFormatter\r\n--> 724         return fmt.format(record)\r\n    725 \r\n    726     def emit(self, record):\r\n\r\n/var/django/myenvsync/DairyComplete/dairylogging.pyc in format(self, record)\r\n    160             data.pop('message', None)\r\n    161         return data\r\n--> 162 \r\n    163     def format(self, record):\r\n    164         data = self.as_dict(record)\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/simplejson/__init__.pyc in dumps(obj, skipkeys, ensure_ascii, check_circular, allow_nan, cls, indent, separators, encoding, default, use_decimal, namedtuple_as_object, tuple_as_array, bigint_as_string, sort_keys, item_sort_key, **kw)\r\n    322         and not bigint_as_string and not sort_keys\r\n    323         and not item_sort_key and not kw):\r\n--> 324         return _default_encoder.encode(obj)\r\n    325     if cls is None:\r\n    326         cls = JSONEncoder\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/simplejson/encoder.pyc in encode(self, o)\r\n    247         # exceptions aren't as detailed.  The list call should be roughly\r\n    248         # equivalent to the PySequence_Fast that ''.join() would do.\r\n--> 249         chunks = self.iterencode(o, _one_shot=True)\r\n    250         if not isinstance(chunks, (list, tuple)):\r\n    251             chunks = list(chunks)\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/simplejson/encoder.pyc in iterencode(self, o, _one_shot)\r\n    323                 Decimal=Decimal)\r\n    324         try:\r\n--> 325             return _iterencode(o, 0)\r\n    326         finally:\r\n    327             key_memo.clear()\r\n\r\n/var/django/virtualenv/myenv/local/lib/python2.7/site-packages/simplejson/encoder.pyc in default(self, o)\r\n    224 \r\n    225         \"\"\"\r\n--> 226         raise TypeError(repr(o) + \" is not JSON serializable\")\r\n    227 \r\n    228     def encode(self, o):\r\n\r\nTypeError: AttributeError('_sign',) is not JSON serializable\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1166", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1166/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1166/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1166/events", "html_url": "https://github.com/getsentry/raven-python/issues/1166", "id": 283147524, "node_id": "MDU6SXNzdWUyODMxNDc1MjQ=", "number": 1166, "title": "Miracle in repo and pypi package", "user": {"login": "ziajka", "id": 29223277, "node_id": "MDQ6VXNlcjI5MjIzMjc3", "avatar_url": "https://avatars3.githubusercontent.com/u/29223277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziajka", "html_url": "https://github.com/ziajka", "followers_url": "https://api.github.com/users/ziajka/followers", "following_url": "https://api.github.com/users/ziajka/following{/other_user}", "gists_url": "https://api.github.com/users/ziajka/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziajka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziajka/subscriptions", "organizations_url": "https://api.github.com/users/ziajka/orgs", "repos_url": "https://api.github.com/users/ziajka/repos", "events_url": "https://api.github.com/users/ziajka/events{/privacy}", "received_events_url": "https://api.github.com/users/ziajka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321323, "node_id": "MDU6TGFiZWw2MjgzMjEzMjM=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-12-19T08:54:18Z", "updated_at": "2018-01-19T13:23:47Z", "closed_at": "2018-01-19T13:23:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Guys!\r\n\r\nFirst of all, thanks for a great software.\r\n\r\nRecently we're encouraging issue during our internal build. We found out that your pypi package contains one extra file.\r\n\r\nPlease unzip from here https://pypi.python.org/pypi/raven file `raven-6.4.0.tar.gz`. Inside you may find `raven/deprecation.py`\r\n\r\nHowever when we take a look on repository this file doesn't exist:\r\nhttps://github.com/getsentry/raven-python/tree/6.4.0/raven\r\n\r\nI don't know exact reason however we're letting you know.\r\n\r\nCheers,\r\nDominik\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1164", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1164/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1164/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1164/events", "html_url": "https://github.com/getsentry/raven-python/issues/1164", "id": 282637830, "node_id": "MDU6SXNzdWUyODI2Mzc4MzA=", "number": 1164, "title": "Test failures in 6.4.0 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-12-16T17:35:14Z", "updated_at": "2017-12-22T06:52:15Z", "closed_at": "2017-12-20T19:41:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The failures are not present in the previous 6.3.0 version. I have tested it with both Python 3.6 and 2.7 but got the same errors:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n_________________ BreadcrumbTestCase.test_log_crumb_reporting __________________\r\nTraceback (most recent call last):\r\n  File \"/build/python-raven/src/raven-python-6.4.0-py2/tests/breadcrumbs/tests.py\", line 28, in test_log_crumb_reporting\r\n    log.info('This is a message with %s!', 'foo', blah='baz')\r\n  File \"/usr/lib/python2.7/logging/__init__.py\", line 1159, in info\r\n    Log 'msg % args' with severity 'INFO'.\r\n  File \"/usr/lib/python2.7/logging/__init__.py\", line 1167, in info\r\n    self._log(INFO, msg, args, **kwargs)\r\nTypeError: _log() got an unexpected keyword argument 'blah'\r\n------------------------------ Captured log call -------------------------------\r\nbase.py                    265 DEBUG    Configuring Raven for host: <raven.conf.remote.RemoteConfig object at 0x7f0a459bced0>\r\n_________ SentryExceptionHandlerTest.test_does_exclude_filtered_types __________\r\nTraceback (most recent call last):\r\n  File \"/build/python-raven/src/raven-python-6.4.0-py2/tests/contrib/django/tests.py\", line 889, in test_does_exclude_filtered_types\r\n    assert not mock_send.called\r\nAssertionError: assert not True\r\n +  where True = <MagicMock name='send' id='139682075695248'>.called\r\n------------------------------ Captured log call -------------------------------\r\nbase.py                    628 INFO     Not capturing exception due to filters: <type 'exceptions.ValueError'>\r\nValueError: lol world\r\n___ SentryExceptionHandlerTest.test_ignore_exceptions_with_expression_match ____\r\nTraceback (most recent call last):\r\n  File \"/build/python-raven/src/raven-python-6.4.0-py2/tests/contrib/django/tests.py\", line 905, in test_ignore_exceptions_with_expression_match\r\n    assert not mock_send.called\r\nAssertionError: assert not True\r\n +  where True = <MagicMock name='send' id='139682072405904'>.called\r\n------------------------------ Captured log call -------------------------------\r\nbase.py                    628 INFO     Not capturing exception due to filters: <type 'exceptions.ValueError'>\r\nValueError: lol world\r\n_____ SentryExceptionHandlerTest.test_ignore_exceptions_with_module_match ______\r\nTraceback (most recent call last):\r\n  File \"/build/python-raven/src/raven-python-6.4.0-py2/tests/contrib/django/tests.py\", line 921, in test_ignore_exceptions_with_module_match\r\n    assert not mock_send.called\r\nAssertionError: assert not True\r\n +  where True = <MagicMock name='send' id='139682072404752'>.called\r\n------------------------------ Captured log call -------------------------------\r\nbase.py                    628 INFO     Not capturing exception due to filters: <type 'exceptions.ValueError'>\r\nValueError: lol world\r\n```\r\n\r\nSome more version info:\r\n```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.6.3, pytest-3.3.1, py-1.5.0, pluggy-0.6.0\r\nDjango settings: tests.contrib.django.settings (from ini file)\r\nrootdir: /build/python-raven/src/raven-python-6.4.0, inifile: setup.cfg\r\nplugins: timeout-1.2.1, django-3.1.3.dev0+ng7aee367.d20161226, cov-2.5.1, celery-4.1.0, case-1.5.3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1159", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1159/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1159/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1159/events", "html_url": "https://github.com/getsentry/raven-python/issues/1159", "id": 280957605, "node_id": "MDU6SXNzdWUyODA5NTc2MDU=", "number": 1159, "title": "Django 2.0 compatibility", "user": {"login": "Mogost", "id": 721963, "node_id": "MDQ6VXNlcjcyMTk2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/721963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mogost", "html_url": "https://github.com/Mogost", "followers_url": "https://api.github.com/users/Mogost/followers", "following_url": "https://api.github.com/users/Mogost/following{/other_user}", "gists_url": "https://api.github.com/users/Mogost/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mogost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mogost/subscriptions", "organizations_url": "https://api.github.com/users/Mogost/orgs", "repos_url": "https://api.github.com/users/Mogost/repos", "events_url": "https://api.github.com/users/Mogost/events{/privacy}", "received_events_url": "https://api.github.com/users/Mogost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-11T10:03:22Z", "updated_at": "2017-12-11T10:08:15Z", "closed_at": "2017-12-11T10:08:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"/***//lib/python3.5/site-packages/raven/contrib/django/middleware/__init__.py\", line 101, in process_view\r\n    client.get_transaction_from_request(request)\r\n  File \"/***//lib/python3.5/site-packages/raven/contrib/django/client.py\", line 309, in get_transaction_from_request\r\n    return self.resolver.resolve(request.path)\r\n  File \"/***//lib/python3.5/site-packages/raven/contrib/django/resolver.py\", line 88, in resolve\r\n    match = self._resolve(resolver, path)\r\n  File \"/***//lib/python3.5/site-packages/raven/contrib/django/resolver.py\", line 53, in _resolve\r\n    match = resolver.regex.search(path)\r\nAttributeError: 'URLResolver' object has no attribute 'regex'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1155", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1155/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1155/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1155/events", "html_url": "https://github.com/getsentry/raven-python/issues/1155", "id": 279742497, "node_id": "MDU6SXNzdWUyNzk3NDI0OTc=", "number": 1155, "title": "'encoding' cannot be specified in python 3", "user": {"login": "jonapich", "id": 5009356, "node_id": "MDQ6VXNlcjUwMDkzNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5009356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonapich", "html_url": "https://github.com/jonapich", "followers_url": "https://api.github.com/users/jonapich/followers", "following_url": "https://api.github.com/users/jonapich/following{/other_user}", "gists_url": "https://api.github.com/users/jonapich/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonapich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonapich/subscriptions", "organizations_url": "https://api.github.com/users/jonapich/orgs", "repos_url": "https://api.github.com/users/jonapich/repos", "events_url": "https://api.github.com/users/jonapich/events{/privacy}", "received_events_url": "https://api.github.com/users/jonapich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-12-06T12:53:47Z", "updated_at": "2020-05-05T19:17:41Z", "closed_at": "2018-04-18T09:43:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/getsentry/raven-python/blob/1a0d697dd11459bfa8ce933b3b53264098dad60d/raven/utils/json.py#L50\r\n\r\nThe 'json.dumps' command no longer have an encoding argument in python 3 and causes this stacktrace:\r\n\r\n```\r\nFile \"/usr/local/lib/python3.6/site-packages/raven/handlers/logging.py\", line 89, in emit\r\n return self.emit(record)\r\n File \"/usr/local/lib/python3.6/site-packages/raven/handlers/logging.py\", line 182, in _emit\r\n *kwargs)\r\n File \"/usr/local/lib/python3.6/site-packages/raven/base.py\", line 645, in capture\r\n self.send(*data)\r\n File \"/usr/local/lib/python3.6/site-packages/raven/base.py\", line 740, in send\r\n message = self.encode(data)\r\n File \"/usr/local/lib/python3.6/site-packages/raven/base.py\", line 782, in encode\r\n return zlib.compress(json.dumps(data).encode('utf8'))\r\n File \"/usr/local/lib/python3.6/site-packages/raven/utils/json.py\", line 51, in dumps\r\n return json.dumps(value, cls=BetterJSONEncoder, **kwargs)\r\n File \"/usr/local/lib/python3.6/json/init.py\", line 238, in dumps\r\n **kw).encode(obj)\r\nTypeError: __init_() got an unexpected keyword argument 'encoding'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1151", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1151/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1151/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1151/events", "html_url": "https://github.com/getsentry/raven-python/issues/1151", "id": 279163122, "node_id": "MDU6SXNzdWUyNzkxNjMxMjI=", "number": 1151, "title": "PySpark support", "user": {"login": "tedmiston", "id": 366688, "node_id": "MDQ6VXNlcjM2NjY4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/366688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedmiston", "html_url": "https://github.com/tedmiston", "followers_url": "https://api.github.com/users/tedmiston/followers", "following_url": "https://api.github.com/users/tedmiston/following{/other_user}", "gists_url": "https://api.github.com/users/tedmiston/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedmiston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedmiston/subscriptions", "organizations_url": "https://api.github.com/users/tedmiston/orgs", "repos_url": "https://api.github.com/users/tedmiston/repos", "events_url": "https://api.github.com/users/tedmiston/events{/privacy}", "received_events_url": "https://api.github.com/users/tedmiston/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 703737828, "node_id": "MDU6TGFiZWw3MDM3Mzc4Mjg=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Feature%20Request", "name": "Feature Request", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-04T21:50:22Z", "updated_at": "2019-10-24T21:31:43Z", "closed_at": "2019-10-24T21:28:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking to integrate Sentry into a PySpark project.  Behind the scenes PySpark wraps and runs the Scala Spark code on the JVM.  This makes exception aggregation a bit more complicated vs pure Python code.\r\n\r\nThe Scala spark code uses log4j which I noticed Sentry's Java client supports.\r\n\r\nI'm wondering if it'd be possible to use Sentry, the Python client, Java client, or something else to aggregate exceptions on PySpark code?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1150", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1150/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1150/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1150/events", "html_url": "https://github.com/getsentry/raven-python/issues/1150", "id": 279002602, "node_id": "MDU6SXNzdWUyNzkwMDI2MDI=", "number": 1150, "title": "Flask + gunicorn + gevent TypeError when instantiating", "user": {"login": "kamac", "id": 5012991, "node_id": "MDQ6VXNlcjUwMTI5OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5012991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamac", "html_url": "https://github.com/kamac", "followers_url": "https://api.github.com/users/kamac/followers", "following_url": "https://api.github.com/users/kamac/following{/other_user}", "gists_url": "https://api.github.com/users/kamac/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamac/subscriptions", "organizations_url": "https://api.github.com/users/kamac/orgs", "repos_url": "https://api.github.com/users/kamac/repos", "events_url": "https://api.github.com/users/kamac/events{/privacy}", "received_events_url": "https://api.github.com/users/kamac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321323, "node_id": "MDU6TGFiZWw2MjgzMjEzMjM=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-12-04T13:51:05Z", "updated_at": "2017-12-04T15:35:58Z", "closed_at": "2017-12-04T14:49:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been trying to get raven to run with flask + gevent stack, with little success. I was able to get it to work without gevent worker class, but with gunicorn as WSGI, which required me to set my config up like this:\r\n\r\n```\r\nSENTRY_DSN = 'my_dsn_here'\r\nSENTRY_CONFIG = {\r\n    'environment': 'production',\r\n}\r\n```\r\n\r\nThen I tried to run the app with gevent as worker class. This stack trace popped up:\r\n\r\n```\r\nTraceback (most recent call last):\r\n[...]\r\n  File \"/usr/local/lib/python3.6/site-packages/raven/contrib/flask.py\", line 104, in __init__\r\n    self.init_app(app)\r\n  File \"/usr/local/lib/python3.6/site-packages/raven/contrib/flask.py\", line 184, in init_app\r\n    self.client = make_client(self.client_cls, app, self.dsn)\r\n  File \"/usr/local/lib/python3.6/site-packages/raven/contrib/flask.py\", line 48, in make_client\r\n    'app': app,\r\n  File \"/usr/local/lib/python3.6/site-packages/raven/base.py\", line 193, in __init__\r\n    self._context = Context()\r\n  File \"/usr/local/lib/python3.6/site-packages/gevent/local.py\", line 244, in __new__\r\n    self = object.__new__(cls)\r\nTypeError: Can't instantiate abstract class Context with abstract methods __len__\r\n```\r\n\r\nI tried to set up gevented transport layer like this:\r\n\r\n```\r\nSENTRY_DSN = 'my_dsn_here'\r\nSENTRY_CONFIG = {\r\n    'environment': 'production',\r\n    'transport': 'raven.transport.gevent.GeventedHTTPTransport'\r\n}\r\n```\r\n\r\nBut nothing has changed. I think the exception throws before init_app is called, because \"Running with ProductionConfig\" is printed after the stack trace. Here's how i setup the application:\r\n\r\n```\r\nfrom raven.contrib.flask import Sentry\r\nfrom flask.helpers import get_debug_flag\r\nimport flask\r\n\r\nsentry = None\r\ndef create_app():\r\n    app = flask.Flask(__name__, static_url_path='/assets', static_folder='static/assets')\r\n    config_class = 'DevelopmentConfig' if get_debug_flag() else 'ProductionConfig'\r\n    app.config.from_object('app.config.{}'.format(config_class))\r\n    print(\"Running with \" + config_class)\r\n\r\n    global sentry\r\n    sentry = Sentry()\r\n    return app\r\n```\r\n\r\nSame error occurs when running with eventlet as worker class:\r\n\r\n```\r\nTraceback (most recent call last):\r\n[...]\r\n  File \"/usr/local/lib/python3.6/site-packages/raven/contrib/flask.py\", line 104, in __init__\r\n    self.init_app(app)\r\n  File \"/usr/local/lib/python3.6/site-packages/raven/contrib/flask.py\", line 184, in init_app\r\n    self.client = make_client(self.client_cls, app, self.dsn)\r\n  File \"/usr/local/lib/python3.6/site-packages/raven/contrib/flask.py\", line 48, in make_client\r\n    'app': app,\r\n  File \"/usr/local/lib/python3.6/site-packages/raven/base.py\", line 193, in __init__\r\n    self._context = Context()\r\n  File \"/usr/local/lib/python3.6/site-packages/eventlet/corolocal.py\", line 19, in __new__\r\n    self = object.__new__(cls)\r\nTypeError: Can't instantiate abstract class Context with abstract methods __len__\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1148", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1148/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1148/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1148/events", "html_url": "https://github.com/getsentry/raven-python/issues/1148", "id": 278753443, "node_id": "MDU6SXNzdWUyNzg3NTM0NDM=", "number": 1148, "title": "Django 2.0: AttributeError: 'URLResolver' object has no attribute 'regex'", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-03T07:56:22Z", "updated_at": "2018-03-09T13:39:01Z", "closed_at": "2017-12-03T07:57:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "If an error happens in a middleware's `process_view()` with Django 2.0, the following error happens in Raven:\r\n\r\n```py\r\nTraceback (most recent call last):\r\n  File \"/home/adys/src/HearthSim/HSReplay.net/.tox/py36/lib/python3.6/site-packages/raven/contrib/django/middleware/__init__.py\", line 101, in process_view\r\n    client.get_transaction_from_request(request)\r\n  File \"/home/adys/src/HearthSim/HSReplay.net/.tox/py36/lib/python3.6/site-packages/raven/contrib/django/client.py\", line 309, in get_transaction_from_request\r\n    return self.resolver.resolve(request.path)\r\n  File \"/home/adys/src/HearthSim/HSReplay.net/.tox/py36/lib/python3.6/site-packages/raven/contrib/django/resolver.py\", line 88, in resolve\r\n    match = self._resolve(resolver, path)\r\n  File \"/home/adys/src/HearthSim/HSReplay.net/.tox/py36/lib/python3.6/site-packages/raven/contrib/django/resolver.py\", line 53, in _resolve\r\n    match = resolver.regex.search(path)\r\nAttributeError: 'URLResolver' object has no attribute 'regex'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1146", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1146/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1146/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1146/events", "html_url": "https://github.com/getsentry/raven-python/issues/1146", "id": 276848124, "node_id": "MDU6SXNzdWUyNzY4NDgxMjQ=", "number": 1146, "title": "Raven + Flask user_context ignored if using raise", "user": {"login": "reflash", "id": 2879985, "node_id": "MDQ6VXNlcjI4Nzk5ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2879985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reflash", "html_url": "https://github.com/reflash", "followers_url": "https://api.github.com/users/reflash/followers", "following_url": "https://api.github.com/users/reflash/following{/other_user}", "gists_url": "https://api.github.com/users/reflash/gists{/gist_id}", "starred_url": "https://api.github.com/users/reflash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reflash/subscriptions", "organizations_url": "https://api.github.com/users/reflash/orgs", "repos_url": "https://api.github.com/users/reflash/repos", "events_url": "https://api.github.com/users/reflash/events{/privacy}", "received_events_url": "https://api.github.com/users/reflash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-11-26T19:10:56Z", "updated_at": "2017-12-04T23:22:45Z", "closed_at": "2017-12-04T23:22:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm starting with Sentry to try it with my app, but I've faced an unexpected behaviour, at least from my point of view.\r\nI've used the following code to verify that user context is correctly sent to my Sentry service app.\r\n\r\n```python\r\ndef handle_text(message):\r\n    user_id = message.chat.id\r\n    name = message.from_user.first_name\r\n    sentry.user_context({'id': int(user_id), 'username': name})\r\n    raise SystemError(\"Sentry test exception\")\r\n```\r\n\r\n\r\nThe problem is that if I use `raise` keyword, I get no user_context on the Sentry side. But if instead, I raise some exception here, for example, NameError then the user context correctly appears on the Sentry side. What am I doing wrong? And is this an expected behaviour by design?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1127", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1127/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1127/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1127/events", "html_url": "https://github.com/getsentry/raven-python/issues/1127", "id": 270913082, "node_id": "MDU6SXNzdWUyNzA5MTMwODI=", "number": 1127, "title": "Support for Django 2.0 URL Resolver", "user": {"login": "ikosenn", "id": 5145715, "node_id": "MDQ6VXNlcjUxNDU3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5145715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikosenn", "html_url": "https://github.com/ikosenn", "followers_url": "https://api.github.com/users/ikosenn/followers", "following_url": "https://api.github.com/users/ikosenn/following{/other_user}", "gists_url": "https://api.github.com/users/ikosenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikosenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikosenn/subscriptions", "organizations_url": "https://api.github.com/users/ikosenn/orgs", "repos_url": "https://api.github.com/users/ikosenn/repos", "events_url": "https://api.github.com/users/ikosenn/events{/privacy}", "received_events_url": "https://api.github.com/users/ikosenn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321090, "node_id": "MDU6TGFiZWw2MjgzMjEwOTA=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Django", "name": "Integrations: Django", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2017-11-03T09:05:08Z", "updated_at": "2019-07-17T06:05:45Z", "closed_at": "2017-12-05T12:22:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django 2.0 has changed its routing. The resolver throws an ``Attribute Error`` in a bunch of places. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1123", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1123/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1123/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1123/events", "html_url": "https://github.com/getsentry/raven-python/issues/1123", "id": 269480314, "node_id": "MDU6SXNzdWUyNjk0ODAzMTQ=", "number": 1123, "title": "passing user identifiers with the python.logging handler", "user": {"login": "bendog", "id": 894916, "node_id": "MDQ6VXNlcjg5NDkxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/894916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bendog", "html_url": "https://github.com/bendog", "followers_url": "https://api.github.com/users/bendog/followers", "following_url": "https://api.github.com/users/bendog/following{/other_user}", "gists_url": "https://api.github.com/users/bendog/gists{/gist_id}", "starred_url": "https://api.github.com/users/bendog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bendog/subscriptions", "organizations_url": "https://api.github.com/users/bendog/orgs", "repos_url": "https://api.github.com/users/bendog/repos", "events_url": "https://api.github.com/users/bendog/events{/privacy}", "received_events_url": "https://api.github.com/users/bendog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 665499836, "node_id": "MDU6TGFiZWw2NjU0OTk4MzY=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Core", "name": "Core", "color": "5319e7", "default": false, "description": null}, {"id": 648781458, "node_id": "MDU6TGFiZWw2NDg3ODE0NTg=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Improvement", "name": "Improvement", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-10-30T04:43:06Z", "updated_at": "2017-11-06T11:57:13Z", "closed_at": "2017-11-06T11:57:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "you can pass tags with raven's logging handler with \r\n`log.error('error message', extra={'tags': {'server': SERVERNAME}`\r\n\r\nI haven't been able to get user identifying details working with any of the examples, perhaps it should be handled in a similar way to the tags method.\r\n`log.error('error message', extra={'user': {'username': USERNAME, 'email': USER_EMAIL}`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1118", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1118/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1118/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1118/events", "html_url": "https://github.com/getsentry/raven-python/issues/1118", "id": 269312648, "node_id": "MDU6SXNzdWUyNjkzMTI2NDg=", "number": 1118, "title": "pip install not adding latest changes", "user": {"login": "droidlabour", "id": 1991767, "node_id": "MDQ6VXNlcjE5OTE3Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1991767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/droidlabour", "html_url": "https://github.com/droidlabour", "followers_url": "https://api.github.com/users/droidlabour/followers", "following_url": "https://api.github.com/users/droidlabour/following{/other_user}", "gists_url": "https://api.github.com/users/droidlabour/gists{/gist_id}", "starred_url": "https://api.github.com/users/droidlabour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/droidlabour/subscriptions", "organizations_url": "https://api.github.com/users/droidlabour/orgs", "repos_url": "https://api.github.com/users/droidlabour/repos", "events_url": "https://api.github.com/users/droidlabour/events{/privacy}", "received_events_url": "https://api.github.com/users/droidlabour/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-28T12:11:10Z", "updated_at": "2017-10-28T12:24:56Z", "closed_at": "2017-10-28T12:24:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "`pip install raven` is missing latest changes for `raven/contrib/awslambda`\r\nMoreover it contains `raven/contrib/aws_lambda` and `raven/contrib/lambda` directories.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1116", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1116/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1116/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1116/events", "html_url": "https://github.com/getsentry/raven-python/issues/1116", "id": 267877447, "node_id": "MDU6SXNzdWUyNjc4Nzc0NDc=", "number": 1116, "title": "Version 6.2.1 is not tagged", "user": {"login": "dahlia", "id": 12431, "node_id": "MDQ6VXNlcjEyNDMx", "avatar_url": "https://avatars1.githubusercontent.com/u/12431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dahlia", "html_url": "https://github.com/dahlia", "followers_url": "https://api.github.com/users/dahlia/followers", "following_url": "https://api.github.com/users/dahlia/following{/other_user}", "gists_url": "https://api.github.com/users/dahlia/gists{/gist_id}", "starred_url": "https://api.github.com/users/dahlia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dahlia/subscriptions", "organizations_url": "https://api.github.com/users/dahlia/orgs", "repos_url": "https://api.github.com/users/dahlia/repos", "events_url": "https://api.github.com/users/dahlia/events{/privacy}", "received_events_url": "https://api.github.com/users/dahlia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-24T02:33:13Z", "updated_at": "2017-10-26T08:19:04Z", "closed_at": "2017-10-26T08:19:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The commit 12b388a76dba4d1de82314f0184efcfcd1e2070a needs to be tagged as `6.2.1`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1110", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1110/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1110/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1110/events", "html_url": "https://github.com/getsentry/raven-python/issues/1110", "id": 266698251, "node_id": "MDU6SXNzdWUyNjY2OTgyNTE=", "number": 1110, "title": "Sentry and multiprocessing?", "user": {"login": "hitmeupallthetime", "id": 32917660, "node_id": "MDQ6VXNlcjMyOTE3NjYw", "avatar_url": "https://avatars2.githubusercontent.com/u/32917660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hitmeupallthetime", "html_url": "https://github.com/hitmeupallthetime", "followers_url": "https://api.github.com/users/hitmeupallthetime/followers", "following_url": "https://api.github.com/users/hitmeupallthetime/following{/other_user}", "gists_url": "https://api.github.com/users/hitmeupallthetime/gists{/gist_id}", "starred_url": "https://api.github.com/users/hitmeupallthetime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hitmeupallthetime/subscriptions", "organizations_url": "https://api.github.com/users/hitmeupallthetime/orgs", "repos_url": "https://api.github.com/users/hitmeupallthetime/repos", "events_url": "https://api.github.com/users/hitmeupallthetime/events{/privacy}", "received_events_url": "https://api.github.com/users/hitmeupallthetime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321323, "node_id": "MDU6TGFiZWw2MjgzMjEzMjM=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 708413477, "node_id": "MDU6TGFiZWw3MDg0MTM0Nzc=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Duplicate", "name": "Duplicate", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-10-19T02:09:40Z", "updated_at": "2019-01-06T15:14:57Z", "closed_at": "2017-10-28T19:42:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't get multiprocessing spawned worker functions to work with sentry when the worker functions raises an exception.\r\n\r\nWith below code, I expect both of the spawned worker_function to separately send logs to sentry when the ZeroDivisionError is raised. However, sentry doesn't appear to send any logs at all. Am I missing something, or this is not how it works. Cheers.\r\n\r\n```\r\nimport multiprocessing\r\n\r\ndsn = 'https://xxx:yyy@sentry.io/zzzz'\r\n\r\ndef worker_function():\r\n    from raven import Client\r\n    client = Client(dsn)\r\n    print(\"worker crashes\")\r\n    1 / 0\r\n\r\ndef manager_function():\r\n    workers_count = 2\r\n    workers = [multiprocessing.Process(target=worker_function) for i in range(workers_count)]\r\n    for worker in workers:\r\n        worker.start()\r\n\r\nmanager_function()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1103", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1103/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1103/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1103/events", "html_url": "https://github.com/getsentry/raven-python/issues/1103", "id": 263074108, "node_id": "MDU6SXNzdWUyNjMwNzQxMDg=", "number": 1103, "title": "Are any way to add custom tags for sentry_exception_handler in Django?", "user": {"login": "artefactop", "id": 1199371, "node_id": "MDQ6VXNlcjExOTkzNzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1199371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artefactop", "html_url": "https://github.com/artefactop", "followers_url": "https://api.github.com/users/artefactop/followers", "following_url": "https://api.github.com/users/artefactop/following{/other_user}", "gists_url": "https://api.github.com/users/artefactop/gists{/gist_id}", "starred_url": "https://api.github.com/users/artefactop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artefactop/subscriptions", "organizations_url": "https://api.github.com/users/artefactop/orgs", "repos_url": "https://api.github.com/users/artefactop/repos", "events_url": "https://api.github.com/users/artefactop/events{/privacy}", "received_events_url": "https://api.github.com/users/artefactop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 649733452, "node_id": "MDU6TGFiZWw2NDk3MzM0NTI=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Support", "name": "Support", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-10-05T10:23:39Z", "updated_at": "2017-10-05T16:02:50Z", "closed_at": "2017-10-05T16:02:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to pass some custom tags to sentry in Django and I'm using `sentry_exception_handler`.\r\n\r\nWhat is the best way to do it?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1100", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1100/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1100/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1100/events", "html_url": "https://github.com/getsentry/raven-python/issues/1100", "id": 262020642, "node_id": "MDU6SXNzdWUyNjIwMjA2NDI=", "number": 1100, "title": "Raven + Celery 4.1.0 not reporting task failures", "user": {"login": "hartror", "id": 152681, "node_id": "MDQ6VXNlcjE1MjY4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/152681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hartror", "html_url": "https://github.com/hartror", "followers_url": "https://api.github.com/users/hartror/followers", "following_url": "https://api.github.com/users/hartror/following{/other_user}", "gists_url": "https://api.github.com/users/hartror/gists{/gist_id}", "starred_url": "https://api.github.com/users/hartror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hartror/subscriptions", "organizations_url": "https://api.github.com/users/hartror/orgs", "repos_url": "https://api.github.com/users/hartror/repos", "events_url": "https://api.github.com/users/hartror/events{/privacy}", "received_events_url": "https://api.github.com/users/hartror/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69352280, "node_id": "MDU6TGFiZWw2OTM1MjI4MA==", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Celery", "name": "Integrations: Celery", "color": "5319e7", "default": false, "description": null}, {"id": 44357545, "node_id": "MDU6TGFiZWw0NDM1NzU0NQ==", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Need%20more%20information", "name": "Need more information", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-10-02T08:59:55Z", "updated_at": "2017-11-12T22:42:00Z", "closed_at": "2017-11-10T14:36:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Environment:\r\n\r\nOS X 10.11.6\r\nPython 2.7.13\r\nrabbitmq 3.6.1\r\ncelery 4.1.0 (works with 3.1.23)\r\nraven 6.2.1\r\n\r\n**Code:**\r\n\r\n```\r\nimport celery\r\n\r\n# Sentry\r\nclient = Client(SENTRY_DSN)\r\nregister_logger_signal(client)\r\nregister_signal(client)\r\n\r\n# Celery\r\ncelery_app = celery.Celery()\r\n\r\n@celery_app.task(name='test')\r\ndef test():\r\n    1 / 0\r\n```\r\n\r\n**Commands:**\r\n\r\nRun worker: `celery worker -A sentry_case.celery_app -l INFO -c 1`\r\nand then submit a task: `celery call -A sentry_case.celery_app test`\r\n\r\n**Additional information:**\r\n\r\nRaven was partially working because this exception made it through to Sentry:\r\n\r\n```\r\nKeyError: u'test'\r\n  File \"celery/worker/consumer/consumer.py\", line 561, in on_task_received\r\n    strategy = strategies[type_]\r\n```\r\n\r\nps. Thanks for an amazing product!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1099", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1099/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1099/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1099/events", "html_url": "https://github.com/getsentry/raven-python/issues/1099", "id": 261996398, "node_id": "MDU6SXNzdWUyNjE5OTYzOTg=", "number": 1099, "title": "ValueError at / invalid literal for int() with base 10: ''", "user": {"login": "shuboy2014", "id": 11924206, "node_id": "MDQ6VXNlcjExOTI0MjA2", "avatar_url": "https://avatars0.githubusercontent.com/u/11924206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shuboy2014", "html_url": "https://github.com/shuboy2014", "followers_url": "https://api.github.com/users/shuboy2014/followers", "following_url": "https://api.github.com/users/shuboy2014/following{/other_user}", "gists_url": "https://api.github.com/users/shuboy2014/gists{/gist_id}", "starred_url": "https://api.github.com/users/shuboy2014/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shuboy2014/subscriptions", "organizations_url": "https://api.github.com/users/shuboy2014/orgs", "repos_url": "https://api.github.com/users/shuboy2014/repos", "events_url": "https://api.github.com/users/shuboy2014/events{/privacy}", "received_events_url": "https://api.github.com/users/shuboy2014/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321323, "node_id": "MDU6TGFiZWw2MjgzMjEzMjM=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 628321090, "node_id": "MDU6TGFiZWw2MjgzMjEwOTA=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Django", "name": "Integrations: Django", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-10-02T06:59:41Z", "updated_at": "2019-11-19T14:58:48Z", "closed_at": "2017-10-03T10:57:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I configure raven  with Django as per the documentation by sentry [here](https://docs.sentry.io/clients/python/integrations/django/) but when i run server i am getting this error\r\n\r\n```\r\nInternal Server Error: /\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/exception.py\", line 39, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 244, in _legacy_get_response\r\n    response = middleware_method(request)\r\n  File \"/usr/local/lib/python2.7/dist-packages/raven/contrib/django/middleware/__init__.py\", line 135, in process_request\r\n    request.body  # forces stream to be read into memory\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/http/request.py\", line 267, in body\r\n    int(self.META.get('CONTENT_LENGTH', 0)) > settings.DATA_UPLOAD_MAX_MEMORY_SIZE):\r\nValueError: invalid literal for int() with base 10: ''\r\n[02/Oct/2017 12:25:02] \"GET / HTTP/1.1\" 500 67787\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1098", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1098/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1098/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1098/events", "html_url": "https://github.com/getsentry/raven-python/issues/1098", "id": 261944833, "node_id": "MDU6SXNzdWUyNjE5NDQ4MzM=", "number": 1098, "title": "Crash on manage.py raven test --data foo", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-10-01T20:42:51Z", "updated_at": "2017-10-28T19:05:19Z", "closed_at": "2017-10-28T19:05:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was debugging some unrelated issue and ended up with this:\r\n\r\n```pytb\r\n[20:40:13] admin@ ~ % python manage.py raven test --data foo \r\nTraceback (most recent call last):\r\n  File \"/.../source/manage.py\", line 12, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/.../env/lib/python3.4/site-packages/django/core/management/__init__.py\", line 364, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/.../env/lib/python3.4/site-packages/django/core/management/__init__.py\", line 356, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/.../env/lib/python3.4/site-packages/django/core/management/base.py\", line 277, in run_from_argv\r\n    options = parser.parse_args(argv[2:])\r\n  File \"/.../env/lib/python3.4/site-packages/django/core/management/base.py\", line 58, in parse_args\r\n    return super(CommandParser, self).parse_args(args, namespace)\r\n  File \"/usr/lib/python3.4/argparse.py\", line 1730, in parse_args\r\n    args, argv = self.parse_known_args(args, namespace)\r\n  File \"/usr/lib/python3.4/argparse.py\", line 1762, in parse_known_args\r\n    namespace, args = self._parse_known_args(args, namespace)\r\n  File \"/usr/lib/python3.4/argparse.py\", line 1968, in _parse_known_args\r\n    start_index = consume_optional(start_index)\r\n  File \"/usr/lib/python3.4/argparse.py\", line 1908, in consume_optional\r\n    take_action(action, args, option_string)\r\n  File \"/usr/lib/python3.4/argparse.py\", line 1836, in take_action\r\n    action(self, namespace, argument_values, option_string)\r\n  File \"/.../env/lib/python3.4/site-packages/raven/contrib/django/management/commands/raven.py\", line 24, in __call__\r\n    setattr(namespace, self.dest, store_json(values[0]))\r\nTypeError: store_json() missing 3 required positional arguments: 'opt_str', 'value', and 'parser'\r\n```\r\n\r\nThat doesn't look right. Although I'm not sure if --data is still even supported.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1096", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1096/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1096/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1096/events", "html_url": "https://github.com/getsentry/raven-python/issues/1096", "id": 261613397, "node_id": "MDU6SXNzdWUyNjE2MTMzOTc=", "number": 1096, "title": "logging valueError in mail but i want it to give name of error i wish?", "user": {"login": "awesomehimanshu", "id": 16804408, "node_id": "MDQ6VXNlcjE2ODA0NDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/16804408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awesomehimanshu", "html_url": "https://github.com/awesomehimanshu", "followers_url": "https://api.github.com/users/awesomehimanshu/followers", "following_url": "https://api.github.com/users/awesomehimanshu/following{/other_user}", "gists_url": "https://api.github.com/users/awesomehimanshu/gists{/gist_id}", "starred_url": "https://api.github.com/users/awesomehimanshu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awesomehimanshu/subscriptions", "organizations_url": "https://api.github.com/users/awesomehimanshu/orgs", "repos_url": "https://api.github.com/users/awesomehimanshu/repos", "events_url": "https://api.github.com/users/awesomehimanshu/events{/privacy}", "received_events_url": "https://api.github.com/users/awesomehimanshu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 649733452, "node_id": "MDU6TGFiZWw2NDk3MzM0NTI=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Support", "name": "Support", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-29T11:33:37Z", "updated_at": "2017-10-03T09:41:18Z", "closed_at": "2017-10-03T09:41:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "@dcramer @jayakrishnag \r\nI want to modify error object\r\nIf i write this like as you said.\r\n\r\n```\r\ntry:\r\n raise ValueError('Error in postgres function.')\r\nexcept ValueError as err:\r\n client.captureException(exc_info=err,extra={'app_id': '1000', 'package': 'data'})   \r\n```\r\n\r\nIt give error \r\n\r\nERROR:  IndexError: tuple index out of range\r\nCONTEXT:  Traceback (most recent call last):\r\n  PL/Python function \"ravenlog\", line 7, in <module>\r\n    client.captureException(exc_info=err,extra={'app_id': '1000', 'package': 'data'})   ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1094", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1094/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1094/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1094/events", "html_url": "https://github.com/getsentry/raven-python/issues/1094", "id": 261315220, "node_id": "MDU6SXNzdWUyNjEzMTUyMjA=", "number": 1094, "title": "How to pass custom data with raven-python?", "user": {"login": "awesomehimanshu", "id": 16804408, "node_id": "MDQ6VXNlcjE2ODA0NDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/16804408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awesomehimanshu", "html_url": "https://github.com/awesomehimanshu", "followers_url": "https://api.github.com/users/awesomehimanshu/followers", "following_url": "https://api.github.com/users/awesomehimanshu/following{/other_user}", "gists_url": "https://api.github.com/users/awesomehimanshu/gists{/gist_id}", "starred_url": "https://api.github.com/users/awesomehimanshu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awesomehimanshu/subscriptions", "organizations_url": "https://api.github.com/users/awesomehimanshu/orgs", "repos_url": "https://api.github.com/users/awesomehimanshu/repos", "events_url": "https://api.github.com/users/awesomehimanshu/events{/privacy}", "received_events_url": "https://api.github.com/users/awesomehimanshu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-28T13:18:46Z", "updated_at": "2017-09-28T13:22:11Z", "closed_at": "2017-09-28T13:22:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "@ashwoods where to pass extra or dict . \r\ncan you tell by code client.captureException() . How?\r\nPlease can you write code and can you provide docs?\r\n\r\nThanks for quick reply.\r\n\r\n```\r\nfrom raven import Client\r\nclient = Client('__DSN__')\r\ntry:\r\n 1 / 0\r\nexcept ZeroDivisionError as err:\r\n client.captureException()\r\n```\r\nhow to pass custom error and data in client.captureException().\r\n\r\nYou answer\r\nhttps://github.com/getsentry/raven-python/issues/1093", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1093", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1093/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1093/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1093/events", "html_url": "https://github.com/getsentry/raven-python/issues/1093", "id": 261301099, "node_id": "MDU6SXNzdWUyNjEzMDEwOTk=", "number": 1093, "title": "Ho can i send custom data with  client.captureException()?", "user": {"login": "awesomehimanshu", "id": 16804408, "node_id": "MDQ6VXNlcjE2ODA0NDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/16804408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awesomehimanshu", "html_url": "https://github.com/awesomehimanshu", "followers_url": "https://api.github.com/users/awesomehimanshu/followers", "following_url": "https://api.github.com/users/awesomehimanshu/following{/other_user}", "gists_url": "https://api.github.com/users/awesomehimanshu/gists{/gist_id}", "starred_url": "https://api.github.com/users/awesomehimanshu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awesomehimanshu/subscriptions", "organizations_url": "https://api.github.com/users/awesomehimanshu/orgs", "repos_url": "https://api.github.com/users/awesomehimanshu/repos", "events_url": "https://api.github.com/users/awesomehimanshu/events{/privacy}", "received_events_url": "https://api.github.com/users/awesomehimanshu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-09-28T12:30:53Z", "updated_at": "2017-10-03T09:38:27Z", "closed_at": "2017-09-28T12:47:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nCREATE OR REPLACE FUNCTION public.ravenlog(a integer)\r\n    RETURNS integer\r\n    LANGUAGE 'plpythonu'\r\n    COST 100.0\r\n    VOLATILE \r\n   AS \r\n $function$\r\nfrom raven import Client\r\nclient = Client('__DSN__')\r\ntry:\r\n 1 / 0\r\nexcept ZeroDivisionError as err:\r\n client.captureException()\r\nreturn a\r\n$function$;\r\n```\r\n\r\nI want to add custom data with \r\nclient.captureException()\r\nlike some json data . How can i do so ?\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1088", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1088/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1088/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1088/events", "html_url": "https://github.com/getsentry/raven-python/issues/1088", "id": 260208705, "node_id": "MDU6SXNzdWUyNjAyMDg3MDU=", "number": 1088, "title": "Why is first client stored in global Raven variable?", "user": {"login": "hiir", "id": 10547847, "node_id": "MDQ6VXNlcjEwNTQ3ODQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/10547847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hiir", "html_url": "https://github.com/hiir", "followers_url": "https://api.github.com/users/hiir/followers", "following_url": "https://api.github.com/users/hiir/following{/other_user}", "gists_url": "https://api.github.com/users/hiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/hiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hiir/subscriptions", "organizations_url": "https://api.github.com/users/hiir/orgs", "repos_url": "https://api.github.com/users/hiir/repos", "events_url": "https://api.github.com/users/hiir/events{/privacy}", "received_events_url": "https://api.github.com/users/hiir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-25T09:27:19Z", "updated_at": "2017-09-25T19:23:19Z", "closed_at": "2017-09-25T16:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am confused why is first Raven Client is stored in global Raven variable in base.py module. It is not used anywhere as far I can tell from code and is not even exported from module. It is commented as \"singelton\", which it is not as it does not prevent creation of new Client instances.\r\n\r\nbase.py\r\n```\r\n# singleton for the client\r\nRaven = None\r\n..\r\n\r\nclass Client(object):\r\n    def __init__(self, dsn=None, raise_send_errors=False, transport=None,\r\n                 install_sys_hook=True, **options):\r\n        global Raven\r\n...\r\n        if Raven is None:\r\n            Raven = self\r\n```\r\n\r\nRelevant commit from 2013:\r\nhttps://github.com/getsentry/raven-python/commit/2c3acebf9ff882de0ea3b2db4b3bd2b1c5b3ed62\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1086", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1086/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1086/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1086/events", "html_url": "https://github.com/getsentry/raven-python/issues/1086", "id": 259814650, "node_id": "MDU6SXNzdWUyNTk4MTQ2NTA=", "number": 1086, "title": "pip install raven 6.2.0 is missing contextlib2", "user": {"login": "arthurlogilab", "id": 445200, "node_id": "MDQ6VXNlcjQ0NTIwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/445200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurlogilab", "html_url": "https://github.com/arthurlogilab", "followers_url": "https://api.github.com/users/arthurlogilab/followers", "following_url": "https://api.github.com/users/arthurlogilab/following{/other_user}", "gists_url": "https://api.github.com/users/arthurlogilab/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurlogilab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurlogilab/subscriptions", "organizations_url": "https://api.github.com/users/arthurlogilab/orgs", "repos_url": "https://api.github.com/users/arthurlogilab/repos", "events_url": "https://api.github.com/users/arthurlogilab/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurlogilab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2017-09-22T13:27:23Z", "updated_at": "2017-09-22T17:18:35Z", "closed_at": "2017-09-22T16:48:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are getting the following error on our jenkins : \r\n\r\n```\r\n[snip]\r\nraven/__init__.py:54: in <module>\r\n    from raven.base import * \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n    \"\"\"\r\n    \r\n    from __future__ import absolute_import\r\n    \r\n    import zlib\r\n    import logging\r\n    import os\r\n    import sys\r\n    import time\r\n    import uuid\r\n    import warnings\r\n    \r\n    from datetime import datetime\r\n    from inspect import isclass\r\n    from random import Random\r\n    from types import FunctionType\r\n    from threading import local\r\n    \r\n    if sys.version_info >= (3, 2):\r\n        import contextlib\r\n    else:\r\n>       import contextlib2 as contextlib\r\nE       ImportError: No module named contextlib2\r\n```\r\n\r\nit seems to have appeared since the release of 6.2.0. \r\n\r\npip install raven in a clean virtualenv doesn't seem to be pulling contextlib2...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1085", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1085/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1085/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1085/events", "html_url": "https://github.com/getsentry/raven-python/issues/1085", "id": 259632499, "node_id": "MDU6SXNzdWUyNTk2MzI0OTk=", "number": 1085, "title": "6.2.0 release has been generated, but not distributed to pypi yet", "user": {"login": "dhoffman34", "id": 4803968, "node_id": "MDQ6VXNlcjQ4MDM5Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4803968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhoffman34", "html_url": "https://github.com/dhoffman34", "followers_url": "https://api.github.com/users/dhoffman34/followers", "following_url": "https://api.github.com/users/dhoffman34/following{/other_user}", "gists_url": "https://api.github.com/users/dhoffman34/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhoffman34/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhoffman34/subscriptions", "organizations_url": "https://api.github.com/users/dhoffman34/orgs", "repos_url": "https://api.github.com/users/dhoffman34/repos", "events_url": "https://api.github.com/users/dhoffman34/events{/privacy}", "received_events_url": "https://api.github.com/users/dhoffman34/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-21T21:06:12Z", "updated_at": "2017-09-21T22:38:02Z", "closed_at": "2017-09-21T22:38:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that [6.2.0](https://github.com/getsentry/raven-python/releases/tag/6.2.0) was released today, but it is not yet on PyPI. Could someone please distribute it to PyPI? We are eagerly awaiting some of the changes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1083", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1083/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1083/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1083/events", "html_url": "https://github.com/getsentry/raven-python/issues/1083", "id": 259053225, "node_id": "MDU6SXNzdWUyNTkwNTMyMjU=", "number": 1083, "title": "Python v2.7 and raven v6.1.0 , server returns 404", "user": {"login": "hmilkovi", "id": 9272497, "node_id": "MDQ6VXNlcjkyNzI0OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9272497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmilkovi", "html_url": "https://github.com/hmilkovi", "followers_url": "https://api.github.com/users/hmilkovi/followers", "following_url": "https://api.github.com/users/hmilkovi/following{/other_user}", "gists_url": "https://api.github.com/users/hmilkovi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmilkovi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmilkovi/subscriptions", "organizations_url": "https://api.github.com/users/hmilkovi/orgs", "repos_url": "https://api.github.com/users/hmilkovi/repos", "events_url": "https://api.github.com/users/hmilkovi/events{/privacy}", "received_events_url": "https://api.github.com/users/hmilkovi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 649733452, "node_id": "MDU6TGFiZWw2NDk3MzM0NTI=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Support", "name": "Support", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-09-20T06:27:08Z", "updated_at": "2017-09-26T20:16:22Z", "closed_at": "2017-09-26T20:16:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\r\nI have latest Sentry server 8.20.0, Django 1.11.4, Raven 6.1.0 and Python v2.7.10.\r\n\r\nServer isn't the problem as I can send events via curl.\r\nFor some reason even cli command  ` raven test <dsn> ` returns 404 http error from urllib2.\r\n\r\nUrl is correct tryed with curl, my first guess would be the body of request or auth is wrong.\r\n\r\n\r\nAs raven cli doesn't return any stacktrace here is what I got from `python manage.py raven test ` : \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/hmilkovi/src/kraken/kwiki/backend/venv/lib/python2.7/site-packages/raven/transport/threaded.py\", line 172, in send_sync\r\n    super(ThreadedHTTPTransport, self).send(url, data, headers)\r\n  File \"/Users/hmilkovi/src/kraken/kwiki/backend/venv/lib/python2.7/site-packages/raven/transport/http.py\", line 43, in send\r\n    ca_certs=self.ca_certs,\r\n  File \"/Users/hmilkovi/src/kraken/kwiki/backend/venv/lib/python2.7/site-packages/raven/utils/http.py\", line 66, in urlopen\r\n    return opener.open(url, data, timeout)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 437, in open\r\n    response = meth(req, response)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 550, in http_response\r\n    'http', request, response, code, msg, hdrs)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 469, in error\r\n    result = self._call_chain(*args)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 409, in _call_chain\r\n    result = func(*args)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 656, in http_error_302\r\n    return self.parent.open(new, timeout=req.timeout)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 437, in open\r\n    response = meth(req, response)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 550, in http_response\r\n    'http', request, response, code, msg, hdrs)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 475, in error\r\n    return self._call_chain(*args)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 409, in _call_chain\r\n    result = func(*args)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\", line 558, in http_error_default\r\n    raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)\r\nHTTPError: HTTP Error 404: Not Found\r\n```\r\n\r\nThx, any info will help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1080", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1080/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1080/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1080/events", "html_url": "https://github.com/getsentry/raven-python/issues/1080", "id": 258433505, "node_id": "MDU6SXNzdWUyNTg0MzM1MDU=", "number": 1080, "title": "Django WSGIRequest's data is not sanitized at all by SanitizeProcessor", "user": {"login": "yevhen-m", "id": 10185058, "node_id": "MDQ6VXNlcjEwMTg1MDU4", "avatar_url": "https://avatars3.githubusercontent.com/u/10185058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yevhen-m", "html_url": "https://github.com/yevhen-m", "followers_url": "https://api.github.com/users/yevhen-m/followers", "following_url": "https://api.github.com/users/yevhen-m/following{/other_user}", "gists_url": "https://api.github.com/users/yevhen-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/yevhen-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yevhen-m/subscriptions", "organizations_url": "https://api.github.com/users/yevhen-m/orgs", "repos_url": "https://api.github.com/users/yevhen-m/repos", "events_url": "https://api.github.com/users/yevhen-m/events{/privacy}", "received_events_url": "https://api.github.com/users/yevhen-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321323, "node_id": "MDU6TGFiZWw2MjgzMjEzMjM=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 628321436, "node_id": "MDU6TGFiZWw2MjgzMjE0MzY=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Critical", "name": "Critical", "color": "fbca04", "default": false, "description": null}, {"id": 628321090, "node_id": "MDU6TGFiZWw2MjgzMjEwOTA=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Django", "name": "Integrations: Django", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-09-18T10:33:13Z", "updated_at": "2017-12-31T10:38:42Z", "closed_at": "2017-12-31T10:38:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "`python 3.6.2`\r\n`Django==1.11.4`\r\n`raven==6.1.0`\r\n\r\n`DjangoClient` captures request data from `WSGIRequest`. It's `body` attribute holds a `bytes` object, so body is skipped in `SanitizeProcessor` cause it's not an instance of `string_types` which is `str` for `python3`. This might cause sensitive data to be sent to sentry server unmasked!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1078", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1078/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1078/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1078/events", "html_url": "https://github.com/getsentry/raven-python/issues/1078", "id": 257587857, "node_id": "MDU6SXNzdWUyNTc1ODc4NTc=", "number": 1078, "title": "Django command fails with --data option.", "user": {"login": "Petelin", "id": 11812370, "node_id": "MDQ6VXNlcjExODEyMzcw", "avatar_url": "https://avatars0.githubusercontent.com/u/11812370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Petelin", "html_url": "https://github.com/Petelin", "followers_url": "https://api.github.com/users/Petelin/followers", "following_url": "https://api.github.com/users/Petelin/following{/other_user}", "gists_url": "https://api.github.com/users/Petelin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Petelin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Petelin/subscriptions", "organizations_url": "https://api.github.com/users/Petelin/orgs", "repos_url": "https://api.github.com/users/Petelin/repos", "events_url": "https://api.github.com/users/Petelin/events{/privacy}", "received_events_url": "https://api.github.com/users/Petelin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321323, "node_id": "MDU6TGFiZWw2MjgzMjEzMjM=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 628321090, "node_id": "MDU6TGFiZWw2MjgzMjEwOTA=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Django", "name": "Integrations: Django", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-09-14T03:57:12Z", "updated_at": "2017-09-26T19:50:42Z", "closed_at": "2017-09-26T19:50:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "`python manage.py raven --data \"{'as':1}\"  test`\r\n```\r\n(pycharm_cadus) [~/Documents/gitlib/cadus]$ pip show django                               [feature/maidan] \r\nName: Django\r\nVersion: 1.10\r\n(pycharm_cadus) [~/Documents/gitlib/cadus]$ pip show celery                               [feature/maidan] \r\nName: celery\r\nVersion: 4.0.2\r\n```\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/Users/zhangxiaolin/.virtualenvs/pycharm_cadus/lib/python3.5/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/zhangxiaolin/.virtualenvs/pycharm_cadus/lib/python3.5/site-packages/django/core/management/__init__.py\", line 359, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/Users/zhangxiaolin/.virtualenvs/pycharm_cadus/lib/python3.5/site-packages/django/core/management/base.py\", line 299, in run_from_argv\r\n    options = parser.parse_args(argv[2:])\r\n  File \"/Users/zhangxiaolin/.virtualenvs/pycharm_cadus/lib/python3.5/site-packages/django/core/management/base.py\", line 58, in parse_args\r\n    return super(CommandParser, self).parse_args(args, namespace)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/argparse.py\", line 1726, in parse_args\r\n    args, argv = self.parse_known_args(args, namespace)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/argparse.py\", line 1758, in parse_known_args\r\n    namespace, args = self._parse_known_args(args, namespace)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/argparse.py\", line 1964, in _parse_known_args\r\n    start_index = consume_optional(start_index)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/argparse.py\", line 1904, in consume_optional\r\n    take_action(action, args, option_string)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/argparse.py\", line 1832, in take_action\r\n    action(self, namespace, argument_values, option_string)\r\n  File \"/Users/zhangxiaolin/.virtualenvs/pycharm_cadus/lib/python3.5/site-packages/raven/contrib/django/management/commands/raven.py\", line 24, in __call__\r\n    setattr(namespace, self.dest, store_json(values[0]))\r\nTypeError: store_json() missing 3 required positional arguments: 'opt_str', 'value', and 'parser'\r\n```\r\n\r\n\r\ni use this version in product env, so i have no update raven to see if this bud have fix. i read source code, it is because `store_json` need `(option, opt_str, value, parser) `but \r\n```\r\nclass StoreJsonAction(argparse.Action):\r\n    def __call__(self, parser, namespace, values, option_string=None):\r\n        setattr(namespace, self.dest, store_json(values[0]))\r\n```\r\nif alread fix, sorry to bother.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1075", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1075/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1075/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1075/events", "html_url": "https://github.com/getsentry/raven-python/issues/1075", "id": 256982422, "node_id": "MDU6SXNzdWUyNTY5ODI0MjI=", "number": 1075, "title": "Importing `from raven.contrib.flask import Sentry` leads to RuntimeError because blinker is missing", "user": {"login": "MartinThoma", "id": 1658117, "node_id": "MDQ6VXNlcjE2NTgxMTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1658117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinThoma", "html_url": "https://github.com/MartinThoma", "followers_url": "https://api.github.com/users/MartinThoma/followers", "following_url": "https://api.github.com/users/MartinThoma/following{/other_user}", "gists_url": "https://api.github.com/users/MartinThoma/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinThoma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinThoma/subscriptions", "organizations_url": "https://api.github.com/users/MartinThoma/orgs", "repos_url": "https://api.github.com/users/MartinThoma/repos", "events_url": "https://api.github.com/users/MartinThoma/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinThoma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-12T09:46:32Z", "updated_at": "2020-03-19T03:28:42Z", "closed_at": "2017-09-12T13:36:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I followed the instructions of `Sentry` and added\r\n\r\n    from raven.contrib.flask import Sentry\r\n    sentry = Sentry(app, dsn='https://my_dsn')\r\n\r\nto my code. I've got\r\n\r\n    RuntimeError: signalling support is unavailable because the blinker library is not installed\r\n\r\nInstallink [blinker](https://pypi.python.org/pypi/blinker)\r\n\r\n    sudo -H pip install blinker\r\n\r\nfixed it. Should blinker be added to the `requirements.txt` of raven?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1074", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1074/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1074/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1074/events", "html_url": "https://github.com/getsentry/raven-python/issues/1074", "id": 256974884, "node_id": "MDU6SXNzdWUyNTY5NzQ4ODQ=", "number": 1074, "title": "Django: Configuration options for SentryCeleryHandler", "user": {"login": "andialbrecht", "id": 25632, "node_id": "MDQ6VXNlcjI1NjMy", "avatar_url": "https://avatars0.githubusercontent.com/u/25632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andialbrecht", "html_url": "https://github.com/andialbrecht", "followers_url": "https://api.github.com/users/andialbrecht/followers", "following_url": "https://api.github.com/users/andialbrecht/following{/other_user}", "gists_url": "https://api.github.com/users/andialbrecht/gists{/gist_id}", "starred_url": "https://api.github.com/users/andialbrecht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andialbrecht/subscriptions", "organizations_url": "https://api.github.com/users/andialbrecht/orgs", "repos_url": "https://api.github.com/users/andialbrecht/repos", "events_url": "https://api.github.com/users/andialbrecht/events{/privacy}", "received_events_url": "https://api.github.com/users/andialbrecht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-12T09:21:37Z", "updated_at": "2017-09-28T10:58:30Z", "closed_at": "2017-09-28T10:58:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using a combination of Django and Celery it seems that a Celery handler ist automatically initialized, if the `celery` module could be imported. The Celery handler is initialized in [SentryDjangoHandler.install_celery](https://github.com/getsentry/raven-python/blob/master/raven/contrib/django/models.py#L163) without any options.\r\n\r\nIt would be nice to have a configuration option for the SentryCeleryHandler, because I'd like to initialize it with `ignore_expected=False`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1071", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1071/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1071/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1071/events", "html_url": "https://github.com/getsentry/raven-python/issues/1071", "id": 255337121, "node_id": "MDU6SXNzdWUyNTUzMzcxMjE=", "number": 1071, "title": "Just a question not issue", "user": {"login": "hmilkovi", "id": 9272497, "node_id": "MDQ6VXNlcjkyNzI0OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9272497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmilkovi", "html_url": "https://github.com/hmilkovi", "followers_url": "https://api.github.com/users/hmilkovi/followers", "following_url": "https://api.github.com/users/hmilkovi/following{/other_user}", "gists_url": "https://api.github.com/users/hmilkovi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmilkovi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmilkovi/subscriptions", "organizations_url": "https://api.github.com/users/hmilkovi/orgs", "repos_url": "https://api.github.com/users/hmilkovi/repos", "events_url": "https://api.github.com/users/hmilkovi/events{/privacy}", "received_events_url": "https://api.github.com/users/hmilkovi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-05T16:31:51Z", "updated_at": "2017-09-05T16:54:49Z", "closed_at": "2017-09-05T16:54:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI really enjoy this package but I need info what is estimated date for release that\r\nfully supports Django 1.11.\r\n\r\nFor now with v6.1.0 i have Issue that the ` manage.py raven test ` returns 404 when\r\nsending ` test_message ` to server. If needed more info on this let me know.\r\n\r\nI have a project that will soon go in production so just for sake of project management\r\nthat I know should I downgrade Django or wait.\r\n\r\nThx.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1064", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1064/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1064/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1064/events", "html_url": "https://github.com/getsentry/raven-python/issues/1064", "id": 252106293, "node_id": "MDU6SXNzdWUyNTIxMDYyOTM=", "number": 1064, "title": "[flask] Resource leak when register_signal=False", "user": {"login": "bijanvakili", "id": 5158112, "node_id": "MDQ6VXNlcjUxNTgxMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5158112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bijanvakili", "html_url": "https://github.com/bijanvakili", "followers_url": "https://api.github.com/users/bijanvakili/followers", "following_url": "https://api.github.com/users/bijanvakili/following{/other_user}", "gists_url": "https://api.github.com/users/bijanvakili/gists{/gist_id}", "starred_url": "https://api.github.com/users/bijanvakili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bijanvakili/subscriptions", "organizations_url": "https://api.github.com/users/bijanvakili/orgs", "repos_url": "https://api.github.com/users/bijanvakili/repos", "events_url": "https://api.github.com/users/bijanvakili/events{/privacy}", "received_events_url": "https://api.github.com/users/bijanvakili/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321323, "node_id": "MDU6TGFiZWw2MjgzMjEzMjM=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 62855145, "node_id": "MDU6TGFiZWw2Mjg1NTE0NQ==", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Flask", "name": "Integrations: Flask", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-22T22:20:56Z", "updated_at": "2017-09-04T16:27:31Z", "closed_at": "2017-09-04T16:27:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For the `raven.contrib.flask.Sentry` client, the documentation explains the `register_signal` parameter as follows:\r\n```\r\nHook into the `got_request_exception` signal. This can be disabled by passing `register_signal=False`.\r\n```\r\n\r\nHowever, when setting `register_signal=False`, the `init_app` method [also disables registering the 'after_request' handler](https://github.com/getsentry/raven-python/blob/master/raven/contrib/flask.py#L291) despite the documentation not indicating so.  This causes a major resource leak if the `handle_exception()` method is called explicitly since the client `context` is never cleared.\r\n\r\nThe `after_request` handler should be hooked into the Flask [request_finished](http://flask.pocoo.org/docs/0.12/api/#flask.request_finished) signal in all cases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1062", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1062/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1062/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1062/events", "html_url": "https://github.com/getsentry/raven-python/issues/1062", "id": 251969109, "node_id": "MDU6SXNzdWUyNTE5NjkxMDk=", "number": 1062, "title": "AttributeError: 'NoneType' object has no attribute 'connection_pool'", "user": {"login": "xoco70", "id": 5855577, "node_id": "MDQ6VXNlcjU4NTU1Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5855577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xoco70", "html_url": "https://github.com/xoco70", "followers_url": "https://api.github.com/users/xoco70/followers", "following_url": "https://api.github.com/users/xoco70/following{/other_user}", "gists_url": "https://api.github.com/users/xoco70/gists{/gist_id}", "starred_url": "https://api.github.com/users/xoco70/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xoco70/subscriptions", "organizations_url": "https://api.github.com/users/xoco70/orgs", "repos_url": "https://api.github.com/users/xoco70/repos", "events_url": "https://api.github.com/users/xoco70/events{/privacy}", "received_events_url": "https://api.github.com/users/xoco70/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-22T14:05:42Z", "updated_at": "2017-08-22T15:17:06Z", "closed_at": "2017-08-22T14:51:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "After an internal bug reported by Sentry telling me I had an old version of raven, I updated to raven 5.33.0.\r\n\r\nAfter restarting supervisorctl, Sentry was not working anymore ( 502 Bad Gateway )\r\n\r\nI decided to upgrade sentry\r\n`source bin/activate`\r\n`pip install --upgrade sentry #This Command is OK` \r\n`sentry upgrade #This Command Failed --> No module Named Error` \r\n\r\nI tried to regenerated conf files ( config.yml and sentry.conf.py) but it didn't work.\r\n\r\nI backed up those 2 files before operation, and then compare them so I'm pretty sure the config is ok.\r\n\r\nIn my nginx logs, I have : \r\n\r\n2017/08/22 08:55:03 [error] 2638#2638: *3116 connect() failed (111: Connection refused) while connecting to upstream, client: 176.158.217.87, server: bugs.kendozone.com, request: \"GET /favicon.ico HTTP/2.0\", upstream: \"http://127.0.0.1:9000/favicon.ico\", host: \"bugs.kendozone.com\", referrer: \"https://bugs.kendozone.com/\"\r\n\r\nHere is my nginx config:\r\n\r\n\r\n\r\n```\r\nserver {\r\n    listen   443 ssl http2;\r\n    server_name bugs.kendozone.com;\r\n    \r\n    ssl_certificate /etc/nginx/ssl/bugs.kendozone.com/229137/server.crt;\r\n    ssl_certificate_key /etc/nginx/ssl/bugs.kendozone.com/229137/server.key;\r\n\r\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\r\n    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';\r\n    ssl_prefer_server_ciphers on;\r\n    ssl_dhparam /etc/nginx/dhparams.pem;\r\n\r\n    proxy_set_header   Host                 $host;\r\n    proxy_set_header   X-Forwarded-Proto    $scheme;\r\n    proxy_set_header   X-Forwarded-For      $remote_addr;\r\n    proxy_redirect     off;\r\n\r\n    # keepalive + raven.js is a disaster\r\n    keepalive_timeout 0;\r\n\r\n    # use very aggressive timeouts\r\n    proxy_read_timeout 15s;\r\n    proxy_send_timeout 15s;\r\n    send_timeout 15s;\r\n    resolver_timeout 15s;\r\n    client_body_timeout 15s;\r\n\r\n    # buffer larger messages\r\n    client_max_body_size 15m;\r\n    client_body_buffer_size 100k;\r\n\r\n    location / {\r\n      proxy_pass        http://localhost:9000;\r\n\r\n      add_header Strict-Transport-Security \"max-age=31536000\";\r\n    }\r\n  }\r\n\r\n```\r\n\r\nNow, When I try to upgrade , I get : \r\n\r\n(forge) root@ip-172-31-2-201:~# sentry upgrade\r\nError in sys.excepthook:\r\nTraceback (most recent call last):\r\n  File \"/home/forge/local/lib/python2.7/site-packages/raven/base.py\", line 249, in handle_exception\r\n    self.captureException(exc_info=exc_info, level='fatal')\r\n  File \"/home/forge/local/lib/python2.7/site-packages/raven/base.py\", line 781, in captureException\r\n    'raven.events.Exception', exc_info=exc_info, **kwargs)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/utils/raven.py\", line 43, in capture\r\n    return super(SentryInternalClient, self).capture(*args, **kwargs)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/raven/contrib/django/client.py\", line 284, in capture\r\n    result = super(DjangoClient, self).capture(event_type, **kwargs)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/raven/base.py\", line 610, in capture\r\n    self.send(**data)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/utils/raven.py\", line 64, in send\r\n    from sentry.coreapi import ClientApiHelper\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/coreapi.py\", line 28, in <module>\r\n    from sentry import filters\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/filters/__init__.py\", line 8, in <module>\r\n    from .base import Filter  # NOQA\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/filters/base.py\", line 5, in <module>\r\n    from sentry.models import ProjectOption\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/models/__init__.py\", line 14, in <module>\r\n    import_submodules(globals(), __name__, __path__)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/utils/imports.py\", line 52, in import_submodules\r\n    module = __import__(module_name, globals(), locals(), ['__name__'])\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/models/deploy.py\", line 11, in <module>\r\n    from sentry.app import locks\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/app.py\", line 15, in <module>\r\n    from sentry.utils.locking.backends.redis import RedisLockBackend\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/utils/locking/backends/redis.py\", line 10, in <module>\r\n    delete_lock = redis.load_script('utils/locking/delete_lock.lua')\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/utils/redis.py\", line 145, in load_script\r\n    script = Script(None, resource_string('sentry', posixpath.join('scripts', path)))\r\n  File \"/home/forge/local/lib/python2.7/site-packages/redis/client.py\", line 2930, in __init__\r\n    encoder = registered_client.connection_pool.get_encoder()\r\nAttributeError: 'NoneType' object has no attribute 'connection_pool'\r\n\r\nOriginal exception was:\r\nTraceback (most recent call last):\r\n  File \"/home/forge/bin/sentry\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/runner/__init__.py\", line 160, in main\r\n    cli(prog_name=get_prog(), obj={}, max_content_width=100)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/click/core.py\", line 722, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/click/core.py\", line 697, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/home/forge/local/lib/python2.7/site-packages/click/core.py\", line 895, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/click/core.py\", line 535, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/click/decorators.py\", line 17, in new_func\r\n    return f(get_current_context(), *args, **kwargs)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/runner/decorators.py\", line 35, in inner\r\n    configure()\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/runner/__init__.py\", line 123, in configure\r\n    configure(ctx, py, yaml, skip_service_validation)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/runner/settings.py\", line 152, in configure\r\n    skip_service_validation=skip_service_validation\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/runner/initializer.py\", line 288, in initialize_app\r\n    register_plugins(settings)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/runner/initializer.py\", line 22, in register_plugins\r\n    from sentry.plugins import plugins\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/plugins/__init__.py\", line 10, in <module>\r\n    from sentry.plugins.base import *  # NOQA\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/plugins/base/__init__.py\", line 10, in <module>\r\n    from .bindings import BindingManager\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/plugins/base/bindings.py\", line 5, in <module>\r\n    from sentry.plugins import providers\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/plugins/providers/__init__.py\", line 5, in <module>\r\n    import_submodules(globals(), __name__, __path__)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/utils/imports.py\", line 52, in import_submodules\r\n    module = __import__(module_name, globals(), locals(), ['__name__'])\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/plugins/providers/base.py\", line 9, in <module>\r\n    from sentry.models import Integration, OrganizationIntegration\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/models/__init__.py\", line 14, in <module>\r\n    import_submodules(globals(), __name__, __path__)\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/utils/imports.py\", line 52, in import_submodules\r\n    module = __import__(module_name, globals(), locals(), ['__name__'])\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/models/deploy.py\", line 11, in <module>\r\n    from sentry.app import locks\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/app.py\", line 15, in <module>\r\n    from sentry.utils.locking.backends.redis import RedisLockBackend\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/utils/locking/backends/redis.py\", line 10, in <module>\r\n    delete_lock = redis.load_script('utils/locking/delete_lock.lua')\r\n  File \"/home/forge/local/lib/python2.7/site-packages/sentry/utils/redis.py\", line 145, in load_script\r\n    script = Script(None, resource_string('sentry', posixpath.join('scripts', path)))\r\n  File \"/home/forge/local/lib/python2.7/site-packages/redis/client.py\", line 2930, in __init__\r\n    encoder = registered_client.connection_pool.get_encoder()\r\nAttributeError: 'NoneType' object has no attribute 'connection_pool'\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1057", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1057/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1057/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1057/events", "html_url": "https://github.com/getsentry/raven-python/issues/1057", "id": 249869302, "node_id": "MDU6SXNzdWUyNDk4NjkzMDI=", "number": 1057, "title": "Add basic AWS lambda", "user": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321779, "node_id": "MDU6TGFiZWw2MjgzMjE3Nzk=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Feature", "name": "Feature", "color": "006b75", "default": false, "description": null}, {"id": 649408345, "node_id": "MDU6TGFiZWw2NDk0MDgzNDU=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Platforms:%20AWS%20Lambda", "name": "Platforms: AWS Lambda", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/getsentry/raven-python/milestones/2", "html_url": "https://github.com/getsentry/raven-python/milestone/2", "labels_url": "https://api.github.com/repos/getsentry/raven-python/milestones/2/labels", "id": 2787024, "node_id": "MDk6TWlsZXN0b25lMjc4NzAyNA==", "number": 2, "title": "6.3.0", "description": "AWS Lamba support", "creator": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "open_issues": 9, "closed_issues": 5, "state": "open", "created_at": "2017-09-23T17:06:43Z", "updated_at": "2019-02-04T12:19:38Z", "due_on": "2017-09-29T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2017-08-13T11:56:32Z", "updated_at": "2017-10-13T10:52:43Z", "closed_at": "2017-10-13T10:52:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1051", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1051/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1051/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1051/events", "html_url": "https://github.com/getsentry/raven-python/issues/1051", "id": 248028172, "node_id": "MDU6SXNzdWUyNDgwMjgxNzI=", "number": 1051, "title": "Expect logging._srcfile to be None", "user": {"login": "MarcSchmitzer", "id": 3186654, "node_id": "MDQ6VXNlcjMxODY2NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3186654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcSchmitzer", "html_url": "https://github.com/MarcSchmitzer", "followers_url": "https://api.github.com/users/MarcSchmitzer/followers", "following_url": "https://api.github.com/users/MarcSchmitzer/following{/other_user}", "gists_url": "https://api.github.com/users/MarcSchmitzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcSchmitzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcSchmitzer/subscriptions", "organizations_url": "https://api.github.com/users/MarcSchmitzer/orgs", "repos_url": "https://api.github.com/users/MarcSchmitzer/repos", "events_url": "https://api.github.com/users/MarcSchmitzer/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcSchmitzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-04T14:46:54Z", "updated_at": "2017-08-08T14:07:32Z", "closed_at": "2017-08-08T14:06:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `breadcrumbs` module uses the `logging._srcfile` attribute and crashes if it is `None`. The `logging` module sort of allows this, though:\r\n\r\n> \\# _srcfile is only used in conjunction with sys._getframe().\r\n> \\# To provide compatibility with older versions of Python, set _srcfile\r\n> \\# to None if _getframe() is not available; this value will prevent\r\n> \\# findCaller() from being called.\r\n\r\nWe use a third party library that actively sets `logging._srcfile` to `None`. I'm aware that asking raven to consider this is rather weird, but I thought I'd at least ask :smile: \r\n\r\nI can provide a simple patch that makes `_wrap_logging_method` bail in that case, if there is interest.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1050", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1050/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1050/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1050/events", "html_url": "https://github.com/getsentry/raven-python/issues/1050", "id": 247495812, "node_id": "MDU6SXNzdWUyNDc0OTU4MTI=", "number": 1050, "title": "Possible core bug with payload size due to infinite Error stack trace limit results in 413 err", "user": {"login": "niftylettuce", "id": 523141, "node_id": "MDQ6VXNlcjUyMzE0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/523141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niftylettuce", "html_url": "https://github.com/niftylettuce", "followers_url": "https://api.github.com/users/niftylettuce/followers", "following_url": "https://api.github.com/users/niftylettuce/following{/other_user}", "gists_url": "https://api.github.com/users/niftylettuce/gists{/gist_id}", "starred_url": "https://api.github.com/users/niftylettuce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niftylettuce/subscriptions", "organizations_url": "https://api.github.com/users/niftylettuce/orgs", "repos_url": "https://api.github.com/users/niftylettuce/repos", "events_url": "https://api.github.com/users/niftylettuce/events{/privacy}", "received_events_url": "https://api.github.com/users/niftylettuce/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-02T19:25:30Z", "updated_at": "2017-08-02T20:05:27Z", "closed_at": "2017-08-02T20:04:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @benvinegar - I'm wondering if this is an issue with `raven` or something on my end.\r\n\r\nI'm using the standard default Express setup with `raven`'s `requestHandler` middleware, but for some reason I constantly get `raven@2.1.0 alert: failed to send exception to sentry: HTTP Error (413): undefined` errors.  This is a `413` is Payload Too Large error.\r\n\r\nRelated to #339 and #58.  Since we set `Error.stackTraceLimit = Infinity;` at https://github.com/getsentry/raven-node/blob/514159d8b2bf173ed70beafba786a1087c7ceaa5/index.js#L9-L10 does this cause this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1048", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1048/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1048/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1048/events", "html_url": "https://github.com/getsentry/raven-python/issues/1048", "id": 247263145, "node_id": "MDU6SXNzdWUyNDcyNjMxNDU=", "number": 1048, "title": "n.i(...) is not a function", "user": {"login": "eldyvoon", "id": 2796189, "node_id": "MDQ6VXNlcjI3OTYxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2796189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eldyvoon", "html_url": "https://github.com/eldyvoon", "followers_url": "https://api.github.com/users/eldyvoon/followers", "following_url": "https://api.github.com/users/eldyvoon/following{/other_user}", "gists_url": "https://api.github.com/users/eldyvoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/eldyvoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eldyvoon/subscriptions", "organizations_url": "https://api.github.com/users/eldyvoon/orgs", "repos_url": "https://api.github.com/users/eldyvoon/repos", "events_url": "https://api.github.com/users/eldyvoon/events{/privacy}", "received_events_url": "https://api.github.com/users/eldyvoon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-02T03:29:58Z", "updated_at": "2017-08-02T09:36:41Z", "closed_at": "2017-08-02T09:36:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "this error crashed my app, my app is fine in my local\r\n```\r\n\r\nn.i(...) is not a function\r\nraven.js:51 \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1046", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1046/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1046/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1046/events", "html_url": "https://github.com/getsentry/raven-python/issues/1046", "id": 246737680, "node_id": "MDU6SXNzdWUyNDY3Mzc2ODA=", "number": 1046, "title": "Offline?", "user": {"login": "vidstige", "id": 655605, "node_id": "MDQ6VXNlcjY1NTYwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/655605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vidstige", "html_url": "https://github.com/vidstige", "followers_url": "https://api.github.com/users/vidstige/followers", "following_url": "https://api.github.com/users/vidstige/following{/other_user}", "gists_url": "https://api.github.com/users/vidstige/gists{/gist_id}", "starred_url": "https://api.github.com/users/vidstige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vidstige/subscriptions", "organizations_url": "https://api.github.com/users/vidstige/orgs", "repos_url": "https://api.github.com/users/vidstige/repos", "events_url": "https://api.github.com/users/vidstige/events{/privacy}", "received_events_url": "https://api.github.com/users/vidstige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-07-31T12:23:31Z", "updated_at": "2017-08-04T20:27:56Z", "closed_at": "2017-08-04T18:00:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got a python program running on embedded linux machines all over the globe. I would like to add some kind of error tracking and sentry web interface seems awesome. However, the machine may or may not be online, but it seems Raven only handles the scenario where the machine running the python program has internet access. I would like it to\r\n\r\n1. Encode message to be sent to API\r\n2. Save it on disk\r\n3. Send it to server\r\n4. Remove from disk\r\n\r\nAnd then e.g. on startup or periodically (there could be an SDK call perhaps?) it would try to flush saved crashes to sentry.io.\r\n\r\nIs this reasonable? Are there any wrappers around raven to enable this? Is sentry.io right for me? Thanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1044", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1044/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1044/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1044/events", "html_url": "https://github.com/getsentry/raven-python/issues/1044", "id": 246419225, "node_id": "MDU6SXNzdWUyNDY0MTkyMjU=", "number": 1044, "title": "Is the sentry client object safe to make multiples of?", "user": {"login": "Daenyth", "id": 14644, "node_id": "MDQ6VXNlcjE0NjQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/14644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Daenyth", "html_url": "https://github.com/Daenyth", "followers_url": "https://api.github.com/users/Daenyth/followers", "following_url": "https://api.github.com/users/Daenyth/following{/other_user}", "gists_url": "https://api.github.com/users/Daenyth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Daenyth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Daenyth/subscriptions", "organizations_url": "https://api.github.com/users/Daenyth/orgs", "repos_url": "https://api.github.com/users/Daenyth/repos", "events_url": "https://api.github.com/users/Daenyth/events{/privacy}", "received_events_url": "https://api.github.com/users/Daenyth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-28T18:04:21Z", "updated_at": "2017-07-31T10:16:59Z", "closed_at": "2017-07-28T18:34:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking at using sentry client api a little more heavily in my application and I'm wondering whether it's reasonable to create multiple client objects, or whether I should create a single client object that gets passed through the app. Is there a recommended pattern here? Specifically for uses like custom sentry alerts, breadcrumbs, etc.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1043", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1043/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1043/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1043/events", "html_url": "https://github.com/getsentry/raven-python/issues/1043", "id": 246280455, "node_id": "MDU6SXNzdWUyNDYyODA0NTU=", "number": 1043, "title": "raven middleware iter error", "user": {"login": "yangjiaronga", "id": 19570959, "node_id": "MDQ6VXNlcjE5NTcwOTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/19570959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangjiaronga", "html_url": "https://github.com/yangjiaronga", "followers_url": "https://api.github.com/users/yangjiaronga/followers", "following_url": "https://api.github.com/users/yangjiaronga/following{/other_user}", "gists_url": "https://api.github.com/users/yangjiaronga/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangjiaronga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangjiaronga/subscriptions", "organizations_url": "https://api.github.com/users/yangjiaronga/orgs", "repos_url": "https://api.github.com/users/yangjiaronga/repos", "events_url": "https://api.github.com/users/yangjiaronga/events{/privacy}", "received_events_url": "https://api.github.com/users/yangjiaronga/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69352280, "node_id": "MDU6TGFiZWw2OTM1MjI4MA==", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Celery", "name": "Integrations: Celery", "color": "5319e7", "default": false, "description": null}, {"id": 62855145, "node_id": "MDU6TGFiZWw2Mjg1NTE0NQ==", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Flask", "name": "Integrations: Flask", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-28T08:26:28Z", "updated_at": "2019-10-08T08:34:41Z", "closed_at": "2019-10-08T08:34:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nFrom cffi callback <function uwsgi_pypy_wsgi_handler at 0x00007f8047616548>:\r\nTraceback (most recent call last):\r\n  File \"c callback\", line 472, in uwsgi_pypy_wsgi_handler\r\n  File \"/usr/local/site-packages/flask/app.py\", line 1997, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/usr/local/site-packages/raven/middleware.py\", line 99, in __call__\r\n    return ClosingIterator(self, iterable, environ)\r\n  File \"/usr/local/site-packages/raven/middleware.py\", line 47, in __init__\r\n    self.iterable = iter(iterable)\r\nTypeError: iter() returned non-iterator\r\n```\r\n\r\n```\r\nfrom raven import Client\r\nfrom raven.contrib.celery import register_signal, register_logger_signal\r\n\r\nclient = Client(__DNS__)\r\n\r\n# register a custom filter to filter out duplicate logs\r\nregister_logger_signal(client)\r\n\r\n# The register_logger_signal function can also take an optional argument\r\n# `loglevel` which is the level used for the handler created.\r\n# Defaults to `logging.ERROR`\r\nregister_logger_signal(client, loglevel=logging.INFO)\r\n\r\n# hook into the Celery error handler\r\nregister_signal(client)\r\n```\r\npypy 5.8.0\r\nflask 0.12\r\ni  pypy run.py then raise this error\r\nhow to solve\uff1f thinks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1036", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1036/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1036/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1036/events", "html_url": "https://github.com/getsentry/raven-python/issues/1036", "id": 242065285, "node_id": "MDU6SXNzdWUyNDIwNjUyODU=", "number": 1036, "title": "Breadcrumbs are not recorded when using a LoggerAdapter", "user": {"login": "NicolasLM", "id": 7612656, "node_id": "MDQ6VXNlcjc2MTI2NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7612656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NicolasLM", "html_url": "https://github.com/NicolasLM", "followers_url": "https://api.github.com/users/NicolasLM/followers", "following_url": "https://api.github.com/users/NicolasLM/following{/other_user}", "gists_url": "https://api.github.com/users/NicolasLM/gists{/gist_id}", "starred_url": "https://api.github.com/users/NicolasLM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NicolasLM/subscriptions", "organizations_url": "https://api.github.com/users/NicolasLM/orgs", "repos_url": "https://api.github.com/users/NicolasLM/repos", "events_url": "https://api.github.com/users/NicolasLM/events{/privacy}", "received_events_url": "https://api.github.com/users/NicolasLM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321323, "node_id": "MDU6TGFiZWw2MjgzMjEzMjM=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 666040372, "node_id": "MDU6TGFiZWw2NjYwNDAzNzI=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Python:3", "name": "Python:3", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/getsentry/raven-python/milestones/2", "html_url": "https://github.com/getsentry/raven-python/milestone/2", "labels_url": "https://api.github.com/repos/getsentry/raven-python/milestones/2/labels", "id": 2787024, "node_id": "MDk6TWlsZXN0b25lMjc4NzAyNA==", "number": 2, "title": "6.3.0", "description": "AWS Lamba support", "creator": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "open_issues": 9, "closed_issues": 5, "state": "open", "created_at": "2017-09-23T17:06:43Z", "updated_at": "2019-02-04T12:19:38Z", "due_on": "2017-09-29T07:00:00Z", "closed_at": null}, "comments": 4, "created_at": "2017-07-11T14:20:31Z", "updated_at": "2018-02-15T15:55:46Z", "closed_at": "2018-02-15T15:55:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a [`LoggerAdapter`](https://docs.python.org/3/library/logging.html#loggeradapter-objects) instead of a `Logger` to record logs, Raven does not keep the log lines in breadcrumbs.\r\n\r\nTo reproduce, take any code that successfully records breadcrumbs and wrap its logger in an adapter:\r\n\r\n```\r\nfrom logging import getLogger, LoggerAdapter\r\nlogger = LoggerAdapter(getLogger(__name__), {})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1035", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1035/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1035/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1035/events", "html_url": "https://github.com/getsentry/raven-python/issues/1035", "id": 241135963, "node_id": "MDU6SXNzdWUyNDExMzU5NjM=", "number": 1035, "title": "Detecting if is_authenticated is a method causes deprecation warnings", "user": {"login": "braunsonm", "id": 5280764, "node_id": "MDQ6VXNlcjUyODA3NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5280764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/braunsonm", "html_url": "https://github.com/braunsonm", "followers_url": "https://api.github.com/users/braunsonm/followers", "following_url": "https://api.github.com/users/braunsonm/following{/other_user}", "gists_url": "https://api.github.com/users/braunsonm/gists{/gist_id}", "starred_url": "https://api.github.com/users/braunsonm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/braunsonm/subscriptions", "organizations_url": "https://api.github.com/users/braunsonm/orgs", "repos_url": "https://api.github.com/users/braunsonm/repos", "events_url": "https://api.github.com/users/braunsonm/events{/privacy}", "received_events_url": "https://api.github.com/users/braunsonm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 648781458, "node_id": "MDU6TGFiZWw2NDg3ODE0NTg=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Improvement", "name": "Improvement", "color": "c2e0c6", "default": false, "description": null}, {"id": 628321090, "node_id": "MDU6TGFiZWw2MjgzMjEwOTA=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Django", "name": "Integrations: Django", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/getsentry/raven-python/milestones/2", "html_url": "https://github.com/getsentry/raven-python/milestone/2", "labels_url": "https://api.github.com/repos/getsentry/raven-python/milestones/2/labels", "id": 2787024, "node_id": "MDk6TWlsZXN0b25lMjc4NzAyNA==", "number": 2, "title": "6.3.0", "description": "AWS Lamba support", "creator": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "open_issues": 9, "closed_issues": 5, "state": "open", "created_at": "2017-09-23T17:06:43Z", "updated_at": "2019-02-04T12:19:38Z", "due_on": "2017-09-29T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2017-07-07T02:00:24Z", "updated_at": "2017-10-13T10:39:29Z", "closed_at": "2017-10-13T10:39:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note the implementation you made for the client [here](https://github.com/getsentry/raven-python/blob/d8d3c834b7d3792bdef93a55e876ace1630579c6/raven/contrib/django/client.py#L150)\r\n\r\nThis is a problem because it will cause a deprecation warning every time the module runs a logger. \r\n\r\nI have a special case where I have to manage a large website. I use raven to send logging events when it detects a deprecation warning, this will cause it to send another deprecation warning event from the module itself.\r\n![](http://i.imgur.com/drrKVYt.png)\r\n\r\nSince technically in Django 1.11, `is_authenticated()` is still valid until it is fully phased out in 2.0.\r\n\r\nWouldn't a check for this be more effected like:\r\n```python\r\n            if hasattr(user, 'is_authenticated'):\r\n                authenticated = user.is_authenticated\r\n            elif callable(user.is_authenticated):\r\n                # Django < 1.11\r\n                authenticated = user.is_authenticated()\r\n            elif not authenticated:\r\n                return None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1034", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1034/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1034/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1034/events", "html_url": "https://github.com/getsentry/raven-python/issues/1034", "id": 241047985, "node_id": "MDU6SXNzdWUyNDEwNDc5ODU=", "number": 1034, "title": "Failed to import client", "user": {"login": "mikellykels", "id": 20312973, "node_id": "MDQ6VXNlcjIwMzEyOTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/20312973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikellykels", "html_url": "https://github.com/mikellykels", "followers_url": "https://api.github.com/users/mikellykels/followers", "following_url": "https://api.github.com/users/mikellykels/following{/other_user}", "gists_url": "https://api.github.com/users/mikellykels/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikellykels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikellykels/subscriptions", "organizations_url": "https://api.github.com/users/mikellykels/orgs", "repos_url": "https://api.github.com/users/mikellykels/repos", "events_url": "https://api.github.com/users/mikellykels/events{/privacy}", "received_events_url": "https://api.github.com/users/mikellykels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321090, "node_id": "MDU6TGFiZWw2MjgzMjEwOTA=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Django", "name": "Integrations: Django", "color": "5319e7", "default": false, "description": null}, {"id": 44357545, "node_id": "MDU6TGFiZWw0NDM1NzU0NQ==", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Need%20more%20information", "name": "Need more information", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-07-06T18:37:49Z", "updated_at": "2017-09-14T13:30:19Z", "closed_at": "2017-09-14T13:30:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From Zendesk: https://sentry.zendesk.com/agent/tickets/7308\r\n\r\nWe use raven==6.0.0 along with uWSGI app server to track errors in our Django application. Lately we've been seeing this type of tracebacks \r\n```\r\n[2017-06-30 12:46:26,307: ERROR/Worker-2] Failed to import client: <raven.base.Client object at 0x7fbae5a97e90> \r\nTraceback (most recent call last): \r\nFile \"/srv/python_envs/orbis/local/lib/python2.7/site-packages/raven/contrib/django/models.py\", line 127, in get_client \r\nClient = import_string(client) \r\nFile \"/srv/python_envs/orbis/local/lib/python2.7/site-packages/raven/utils/imports.py\", line 15, in import_string \r\nmodule = __import__(module_name, {}, {}, [class_name], 0) \r\nImportError: No module named <raven.base \r\n```\r\n\r\nRaven is imported as follows in our settings\r\n\r\n```\r\nif ENABLE_SENTRY: \r\nINSTALLED_APPS += ( \r\n'raven.contrib.django.raven_compat', \r\n) \r\nfrom sentry_config import RAVEN_CONFIG \r\nRAVEN_CONFIG['dsn'] = SENTRY_DSN \r\nSENTRY_CLIENT = Client(SENTRY_DSN)\r\n```\r\n\r\nCC @ashwoods ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1032", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1032/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1032/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1032/events", "html_url": "https://github.com/getsentry/raven-python/issues/1032", "id": 239836915, "node_id": "MDU6SXNzdWUyMzk4MzY5MTU=", "number": 1032, "title": "Import Behavior / Recursive Errors", "user": {"login": "dcramer", "id": 23610, "node_id": "MDQ6VXNlcjIzNjEw", "avatar_url": "https://avatars0.githubusercontent.com/u/23610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcramer", "html_url": "https://github.com/dcramer", "followers_url": "https://api.github.com/users/dcramer/followers", "following_url": "https://api.github.com/users/dcramer/following{/other_user}", "gists_url": "https://api.github.com/users/dcramer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcramer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcramer/subscriptions", "organizations_url": "https://api.github.com/users/dcramer/orgs", "repos_url": "https://api.github.com/users/dcramer/repos", "events_url": "https://api.github.com/users/dcramer/events{/privacy}", "received_events_url": "https://api.github.com/users/dcramer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-30T17:04:54Z", "updated_at": "2017-06-30T18:50:45Z", "closed_at": "2017-06-30T18:50:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We're specifically seeing this in Sentry, but it means its possible elsewhere to. The issue is with importing ``django.conf.settings`` in the same module that has the implementation of ``SENTRY_CLIENT`` defined.\r\n\r\n```\r\n:56:45 server          | Python auto-reloader enabled\r\n16:56:45 server          |   File \"/Users/dcramer/Development/sentry/src/sentry/wsgi.py\", line 22, in <module>\r\n16:56:45 server          |     configure()\r\n16:56:45 server          |   File \"/Users/dcramer/Development/sentry/src/sentry/runner/__init__.py\", line 123, in configure\r\n16:56:45 server          |     configure(ctx, py, yaml, skip_service_validation)\r\n16:56:45 server          |   File \"/Users/dcramer/Development/sentry/src/sentry/runner/settings.py\", line 153, in configure\r\n16:56:45 server          |     }, skip_service_validation=skip_service_validation)\r\n16:56:45 server          |   File \"/Users/dcramer/Development/sentry/src/sentry/runner/initializer.py\", line 243, in initialize_app\r\n16:56:45 server          |     configure_structlog()\r\n16:56:45 server          |   File \"/Users/dcramer/Development/sentry/src/sentry/runner/initializer.py\", line 235, in configure_structlog\r\n16:56:45 server          |     logging.config.dictConfig(settings.LOGGING)\r\n16:56:45 server          |   File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/logging/config.py\", line 794, in dictConfig\r\n16:56:45 server          |     dictConfigClass(config).configure()\r\n16:56:45 server          |   File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/logging/config.py\", line 559, in configure\r\n16:56:45 server          |     'filter %r: %s' % (name, e))\r\n16:56:45 server          | ValueError: Unable to configure filter 'sentry:internal': 'module' object has no attribute 'SentryInternalClient'\r\n16:56:45 server          | unable to load app 0 (mountpoint='') (callable not found or import error)\r\n```\r\n\r\nTrying to debug this real quick to see what we changed to cause this, but it was something from the 6.0.0 release AFAIK.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1030", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1030/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1030/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1030/events", "html_url": "https://github.com/getsentry/raven-python/issues/1030", "id": 239161109, "node_id": "MDU6SXNzdWUyMzkxNjExMDk=", "number": 1030, "title": "[flask] app.logger log call messages are not send to sentry", "user": {"login": "brodul", "id": 204514, "node_id": "MDQ6VXNlcjIwNDUxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/204514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brodul", "html_url": "https://github.com/brodul", "followers_url": "https://api.github.com/users/brodul/followers", "following_url": "https://api.github.com/users/brodul/following{/other_user}", "gists_url": "https://api.github.com/users/brodul/gists{/gist_id}", "starred_url": "https://api.github.com/users/brodul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brodul/subscriptions", "organizations_url": "https://api.github.com/users/brodul/orgs", "repos_url": "https://api.github.com/users/brodul/repos", "events_url": "https://api.github.com/users/brodul/events{/privacy}", "received_events_url": "https://api.github.com/users/brodul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 62855145, "node_id": "MDU6TGFiZWw2Mjg1NTE0NQ==", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Flask", "name": "Integrations: Flask", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-06-28T13:18:45Z", "updated_at": "2017-09-04T16:29:48Z", "closed_at": "2017-09-04T16:29:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am researching how python raven behaves in a flask app. And I encountered some weird behavior.\r\n\r\n# Issue\r\nI initialize sentry/raven with\r\n`sentry = Sentry(app, logging=True, level=logging.ERROR)`\r\nIf I call for example `app.logger.error('App logger error')` the message is not reported back to sentry.\r\nBut if I use `logger.error('Generic logger error')` where the `logger` object is returned by `getLogger`, the message is send to sentry.\r\n\r\nWhy is the `app.logger.error` call not registered? Is this expected?\r\n\r\n# Versions\r\n```\r\nFlask==0.12.2\r\nraven==6.1.0\r\n```\r\n\r\n# How to reproduce\r\n\r\nYou need to set the DSN.\r\n\r\n``` python\r\nimport logging\r\n\r\nfrom flask import Flask\r\nfrom raven.contrib.flask import Sentry\r\n\r\n\r\nlogger = logging.getLogger(__name__)\r\napp = Flask(__name__)\r\n\r\n\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello World!\"\r\n\r\nsentry = Sentry(app, logging=True, level=logging.ERROR)\r\n\r\n\r\nlogger.error('Logger error')\r\n\r\napp.logger.error('App logger error')\r\n```\r\nhttps://github.com/brodul/flask_logging_research/blob/bug_report/simple_app.py ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1020", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1020/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1020/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1020/events", "html_url": "https://github.com/getsentry/raven-python/issues/1020", "id": 236813977, "node_id": "MDU6SXNzdWUyMzY4MTM5Nzc=", "number": 1020, "title": "Low level error not logged to Sentry when 'failed creating log record' is hit", "user": {"login": "Duologic", "id": 3349855, "node_id": "MDQ6VXNlcjMzNDk4NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3349855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Duologic", "html_url": "https://github.com/Duologic", "followers_url": "https://api.github.com/users/Duologic/followers", "following_url": "https://api.github.com/users/Duologic/following{/other_user}", "gists_url": "https://api.github.com/users/Duologic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Duologic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Duologic/subscriptions", "organizations_url": "https://api.github.com/users/Duologic/orgs", "repos_url": "https://api.github.com/users/Duologic/repos", "events_url": "https://api.github.com/users/Duologic/events{/privacy}", "received_events_url": "https://api.github.com/users/Duologic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-19T08:23:03Z", "updated_at": "2019-02-04T12:19:57Z", "closed_at": "2019-02-04T12:19:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "When initiating a faulty logger.warning(), it generates a stack trace in the shell, but this doesn't get send to Sentry. \r\n\r\nIs this expected behavior? I've tried different settings (add 'sentry' as handler for Sentry itself, add 'logging' to the loggers), but nothing seems to get it to Sentry.\r\n\r\nPOC:\r\n```\r\nimport logging\r\nlogger = logging.getLogger('test')\r\nlogger.warning('{}', 1)\r\n```\r\n\r\nConfig:\r\n```\r\nLOGGING = {'disable_existing_loggers': False,\r\n 'formatters': {'verbose': {'format': '%(levelname)s %(asctime)s %(module)s %(message)s'}},\r\n 'handlers': {'console': {'class': 'logging.StreamHandler',\r\n                          'formatter': 'verbose',\r\n                          'level': 'DEBUG'},\r\n              'null': {'class': 'logging.NullHandler', 'level': 'DEBUG'},\r\n              'sentry': {'class': 'raven.contrib.django.handlers.SentryHandler',\r\n                         'level': 'WARNING'}},\r\n 'loggers': {\r\n             'raven': {'handlers': ['console'],\r\n                       'level': 'DEBUG',\r\n                       'propagate': False},\r\n             'sentry.errors': {'handlers': ['console'],\r\n                               'level': 'DEBUG',\r\n                               'propagate': False}},\r\n 'root': {'handlers': ['sentry', 'console'], 'level': 'INFO'},\r\n 'version': 1}\r\n```\r\n\r\nOutput:\r\n```\r\nDEBUG 2017-06-19 10:09:55,586 base Configuring Raven for host: <raven.conf.remote.RemoteConfig object at 0x7fa89015d910>\r\nTop level Sentry exception caught - failed creating log record\r\n{}\r\nTraceback (most recent call last):\r\n  File \"/data/apps/mvne-platform-production/download/f9651bcdb1db5f14731fd61bedf8b0d08fb46950/mvne-platform/venv/lib/python2.7/site-packages/raven/handlers/logging.py\", line 83, in emit\r\n    self.format(record)\r\n  File \"/usr/lib64/python2.7/logging/__init__.py\", line 724, in format\r\n    return fmt.format(record)\r\n  File \"/usr/lib64/python2.7/logging/__init__.py\", line 464, in format\r\n    record.message = record.getMessage()\r\n  File \"/usr/lib64/python2.7/logging/__init__.py\", line 328, in getMessage\r\n    msg = msg % self.args\r\nTypeError: not all arguments converted during string formatting\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python2.7/logging/__init__.py\", line 851, in emit\r\n    msg = self.format(record)\r\n  File \"/usr/lib64/python2.7/logging/__init__.py\", line 724, in format\r\n    return fmt.format(record)\r\n  File \"/usr/lib64/python2.7/logging/__init__.py\", line 464, in format\r\n    record.message = record.getMessage()\r\n  File \"/usr/lib64/python2.7/logging/__init__.py\", line 328, in getMessage\r\n    msg = msg % self.args\r\nTypeError: not all arguments converted during string formatting\r\nLogged from file <ipython-input-3-2225fd5d817c>, line 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1019", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1019/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1019/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1019/events", "html_url": "https://github.com/getsentry/raven-python/issues/1019", "id": 236322386, "node_id": "MDU6SXNzdWUyMzYzMjIzODY=", "number": 1019, "title": "Breadcrumbs in Raven", "user": {"login": "prasantarmaye", "id": 29464556, "node_id": "MDQ6VXNlcjI5NDY0NTU2", "avatar_url": "https://avatars0.githubusercontent.com/u/29464556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prasantarmaye", "html_url": "https://github.com/prasantarmaye", "followers_url": "https://api.github.com/users/prasantarmaye/followers", "following_url": "https://api.github.com/users/prasantarmaye/following{/other_user}", "gists_url": "https://api.github.com/users/prasantarmaye/gists{/gist_id}", "starred_url": "https://api.github.com/users/prasantarmaye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prasantarmaye/subscriptions", "organizations_url": "https://api.github.com/users/prasantarmaye/orgs", "repos_url": "https://api.github.com/users/prasantarmaye/repos", "events_url": "https://api.github.com/users/prasantarmaye/events{/privacy}", "received_events_url": "https://api.github.com/users/prasantarmaye/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 44357545, "node_id": "MDU6TGFiZWw0NDM1NzU0NQ==", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Need%20more%20information", "name": "Need more information", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-15T21:41:45Z", "updated_at": "2017-08-10T09:14:42Z", "closed_at": "2017-08-10T09:14:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am using Raven in my openERP project to log to Sentry. During this, I have observed that the breadcrumbs limit cannot be set by the client through the API. I can only enable_breadcrumbs or disable them. I would like to log breadcrumbs for ERROR only.\r\n\r\nTo summarise, I am looking forward to:\r\n1. Set the limit for number of breadcrumbs from client.\r\n2. To log breadcrumbs for specific log levels.\r\n\r\nBelow is additional information:\r\nI have gone through the Raven package and understood that we are getting breadcrumbs if below statement is true-\r\n# insert breadcrumbs\r\nif self.enable_breadcrumbs:\r\n\r\nAlso breadcrumbs limit is set to 100, in breadcrumbs.py that can't be changed by client.\r\n\r\nPlease let me know if we have a workflow to get these items through the API else, can these changes be provided in your upcoming releases.\r\n\r\nThanks,\r\nPrasantarmaye", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1015", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1015/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1015/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1015/events", "html_url": "https://github.com/getsentry/raven-python/issues/1015", "id": 234562949, "node_id": "MDU6SXNzdWUyMzQ1NjI5NDk=", "number": 1015, "title": "Is raven_compat needed anymore?", "user": {"login": "dwaynebailey", "id": 647438, "node_id": "MDQ6VXNlcjY0NzQzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/647438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwaynebailey", "html_url": "https://github.com/dwaynebailey", "followers_url": "https://api.github.com/users/dwaynebailey/followers", "following_url": "https://api.github.com/users/dwaynebailey/following{/other_user}", "gists_url": "https://api.github.com/users/dwaynebailey/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwaynebailey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwaynebailey/subscriptions", "organizations_url": "https://api.github.com/users/dwaynebailey/orgs", "repos_url": "https://api.github.com/users/dwaynebailey/repos", "events_url": "https://api.github.com/users/dwaynebailey/events{/privacy}", "received_events_url": "https://api.github.com/users/dwaynebailey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-08T15:17:54Z", "updated_at": "2017-06-08T16:16:09Z", "closed_at": "2017-06-08T16:16:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "All the docs seem to reference imports as e.g.:\r\n\r\n```python\r\nfrom raven.contrib.django.raven_compat.models import sentry_exception_handler\r\n```\r\n\r\nWhile:\r\n\r\n```python\r\nfrom raven.contrib.django.models import sentry_exception_handler\r\n```\r\n\r\nSeems to work just fine.  Is `raven_compat` strictly needed, or is it a backward compatability fix that just never got updated?  If it isn't needed it would be great to cleanup the docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1013", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1013/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1013/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1013/events", "html_url": "https://github.com/getsentry/raven-python/issues/1013", "id": 234166818, "node_id": "MDU6SXNzdWUyMzQxNjY4MTg=", "number": 1013, "title": "Unable to configure handler 'sentry' with raven-python 6.1.0 and django 1.5", "user": {"login": "JeanFred", "id": 364381, "node_id": "MDQ6VXNlcjM2NDM4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/364381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanFred", "html_url": "https://github.com/JeanFred", "followers_url": "https://api.github.com/users/JeanFred/followers", "following_url": "https://api.github.com/users/JeanFred/following{/other_user}", "gists_url": "https://api.github.com/users/JeanFred/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanFred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanFred/subscriptions", "organizations_url": "https://api.github.com/users/JeanFred/orgs", "repos_url": "https://api.github.com/users/JeanFred/repos", "events_url": "https://api.github.com/users/JeanFred/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanFred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-07T10:41:58Z", "updated_at": "2017-07-11T00:31:24Z", "closed_at": "2017-07-10T23:53:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tried upgrading the raven client from 6.0.0 to 6.1.0 on my Django 1.5 app (yes, it\u2019s old :) and hit the following error (when running it with UWSGI):\r\n```\r\nError in sys.excepthook:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/base.py\", line 276, in handle_exception\r\n    self.captureException(exc_info=exc_info, level='fatal')\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/base.py\", line 818, in captureException\r\n    'raven.events.Exception', exc_info=exc_info, **kwargs)\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/contrib/django/client.py\", line 292, in capture\r\n    result = super(DjangoClient, self).capture(event_type, **kwargs)\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/base.py\", line 638, in capture\r\n    **kwargs)\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/contrib/django/client.py\", line 233, in build_msg\r\n    data = super(DjangoClient, self).build_msg(*args, **kwargs)\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/base.py\", line 451, in build_msg\r\n    data['modules'] = self.get_module_versions()\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/base.py\", line 303, in get_module_versions\r\n    modules = get_versions(self.include_paths)\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/utils/__init__.py\", line 112, in get_versions\r\n    __import__(module_name)\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/contrib/django/__init__.py\", line 19, in <module>\r\n    initialize()\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/contrib/django/models.py\", line 257, in initialize\r\n    get_client()  # NOQA\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/contrib/django/models.py\", line 133, in get_client\r\n    instance = Client(**options)\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/contrib/django/client.py\", line 140, in __init__\r\n    self.install_sql_hook()\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/contrib/django/client.py\", line 143, in install_sql_hook\r\n    install_sql_hook()\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/utils/__init__.py\", line 185, in new_func\r\n    rv = func(*args, **kwargs)\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/raven/contrib/django/client.py\", line 81, in install_sql_hook\r\n    from django.db.backends.utils import CursorWrapper\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/django/db/__init__.py\", line 40, in <module>\r\n    backend = load_backend(connection.settings_dict['ENGINE'])\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/django/db/__init__.py\", line 34, in __getattr__\r\n    return getattr(connections[DEFAULT_DB_ALIAS], item)\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/django/db/utils.py\", line 93, in __getitem__\r\n    backend = load_backend(db['ENGINE'])\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/django/db/utils.py\", line 45, in load_backend\r\n    raise ImproperlyConfigured(error_msg)\r\ndjango.core.exceptions.ImproperlyConfigured: 'django.db.backends.dummy' isn't an available database backend.\r\nTry using 'django.db.backends.XXX', where XXX is one of:\r\n    u'mysql', u'oracle', u'postgresql_psycopg2', u'sqlite3'\r\nError was: cannot import name util\r\n\r\nOriginal exception was:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/myapp/wsgi.py\", line 23, in <module>\r\n    import django.test\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/django/test/__init__.py\", line 5, in <module>\r\n    from django.test.client import Client, RequestFactory\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/django/test/client.py\", line 21, in <module>\r\n    from django.db import close_connection\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/django/db/__init__.py\", line 11, in <module>\r\n    if settings.DATABASES and DEFAULT_DB_ALIAS not in settings.DATABASES:\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 52, in __getattr__\r\n    self._setup(name)\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 48, in _setup\r\n    self._configure_logging()\r\n  File \"/usr/lib/myapp/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 82, in _configure_logging\r\n    logging_config_func(self.LOGGING)\r\n  File \"/usr/lib/python2.7/logging/config.py\", line 794, in dictConfig\r\n    dictConfigClass(config).configure()\r\n  File \"/usr/lib/python2.7/logging/config.py\", line 576, in configure\r\n    '%r: %s' % (name, e))\r\nValueError: Unable to configure handler 'sentry': Cannot resolve 'raven.contrib.django.handlers.SentryHandler': cannot import name util\r\n```\r\n\r\nDowngrading to 6.0.0 solved the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1008", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1008/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1008/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1008/events", "html_url": "https://github.com/getsentry/raven-python/issues/1008", "id": 231582831, "node_id": "MDU6SXNzdWUyMzE1ODI4MzE=", "number": 1008, "title": "don't just ignore oversized stack frame local in get_frame_locals", "user": {"login": "agroszer", "id": 350912, "node_id": "MDQ6VXNlcjM1MDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/350912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroszer", "html_url": "https://github.com/agroszer", "followers_url": "https://api.github.com/users/agroszer/followers", "following_url": "https://api.github.com/users/agroszer/following{/other_user}", "gists_url": "https://api.github.com/users/agroszer/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroszer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroszer/subscriptions", "organizations_url": "https://api.github.com/users/agroszer/orgs", "repos_url": "https://api.github.com/users/agroszer/repos", "events_url": "https://api.github.com/users/agroszer/events{/privacy}", "received_events_url": "https://api.github.com/users/agroszer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-26T10:08:27Z", "updated_at": "2017-05-28T20:05:22Z", "closed_at": "2017-05-26T16:42:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ndef get_frame_locals(frame, transformer=transform, max_var_size=4096):\r\n...\r\n    for k, v in iteritems(f_locals):\r\n        v = transformer(v)\r\n        v_size = len(repr(v))\r\n        if v_size + f_size < 4096:\r\n            f_vars[k] = v\r\n            f_size += v_size\r\n```\r\n\r\nThat will just leave out the oversized variable WITHOUT ANY NOTICE. Come on! If it's oversized at least add ```f_vars[k] = \"<Value omitted because it's too big>\"```. Otherwise I can debug all day why it's missing.\r\n\r\nBTW, the `max_var_size` parameter seems to be a decoy here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1003", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1003/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1003/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1003/events", "html_url": "https://github.com/getsentry/raven-python/issues/1003", "id": 229365375, "node_id": "MDU6SXNzdWUyMjkzNjUzNzU=", "number": 1003, "title": "Segmentation fault when running Flask development server in Alpine Linux", "user": {"login": "rossgray", "id": 5103732, "node_id": "MDQ6VXNlcjUxMDM3MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5103732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rossgray", "html_url": "https://github.com/rossgray", "followers_url": "https://api.github.com/users/rossgray/followers", "following_url": "https://api.github.com/users/rossgray/following{/other_user}", "gists_url": "https://api.github.com/users/rossgray/gists{/gist_id}", "starred_url": "https://api.github.com/users/rossgray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rossgray/subscriptions", "organizations_url": "https://api.github.com/users/rossgray/orgs", "repos_url": "https://api.github.com/users/rossgray/repos", "events_url": "https://api.github.com/users/rossgray/events{/privacy}", "received_events_url": "https://api.github.com/users/rossgray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-17T14:09:02Z", "updated_at": "2017-07-17T17:03:58Z", "closed_at": "2017-07-17T17:03:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am getting a segmentation fault when using Raven with the Flask development server on Alpine Linux. Oddly, this issue only appears to occur when I install a recent version of the `requests` library (>= v2.13.0) (even if I don't import that library in my code). This issue is only specific to Alpine - it works fine on other Python Docker images. The issue occurs on versions of Raven >= 5.4.0.\r\n\r\nI think the segmentation fault is related to some imports within the Raven library.\r\nWhen I change the following lines it fixes the problem:\r\nhttps://github.com/getsentry/raven-python/blob/master/raven/conf/remote.py#L18-L19\r\n\r\nfrom:\r\n\r\n```py\r\nfrom raven.transport.threaded import ThreadedHTTPTransport\r\nfrom raven.transport.http import HTTPTransport\r\n```\r\n\r\nto:\r\n\r\n```py\r\nfrom raven.transport import ThreadedHTTPTransport\r\nfrom raven.transport import HTTPTransport\r\n```\r\n\r\ni.e. remove the submodule, which isn't needed since in `transport/__init__.py` there is:\r\n\r\n```py\r\nfrom raven.transport.http import *  # NOQA\r\n```\r\n\r\nI have created a test project to reproduce this issue:\r\nhttps://github.com/ingresso-group/flask-raven-debug\r\n\r\n**Environment:**\r\n- `python:3.6-alpine` Docker image\r\n- Python 3.6.1\r\n- Flask 0.12\r\n- Werkzeug 0.12.1\r\n- Raven 6.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/1001", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/1001/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/1001/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/1001/events", "html_url": "https://github.com/getsentry/raven-python/issues/1001", "id": 227931945, "node_id": "MDU6SXNzdWUyMjc5MzE5NDU=", "number": 1001, "title": "Bad changelog entry for 6.0.0 on current master", "user": {"login": "noirbizarre", "id": 15725, "node_id": "MDQ6VXNlcjE1NzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/15725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noirbizarre", "html_url": "https://github.com/noirbizarre", "followers_url": "https://api.github.com/users/noirbizarre/followers", "following_url": "https://api.github.com/users/noirbizarre/following{/other_user}", "gists_url": "https://api.github.com/users/noirbizarre/gists{/gist_id}", "starred_url": "https://api.github.com/users/noirbizarre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noirbizarre/subscriptions", "organizations_url": "https://api.github.com/users/noirbizarre/orgs", "repos_url": "https://api.github.com/users/noirbizarre/repos", "events_url": "https://api.github.com/users/noirbizarre/events{/privacy}", "received_events_url": "https://api.github.com/users/noirbizarre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-11T09:32:12Z", "updated_at": "2017-07-17T13:26:07Z", "closed_at": "2017-07-17T13:26:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When #964 has been updated for being merged, [the changelog entry has been left into the 6.0.0 release](https://github.com/getsentry/raven-python/blob/master/CHANGES#L16-L17) which was released between the PR submission and the merge.\r\nThis change hasn't been released yet and should be in a new changelog section (6.0.1 ?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/993", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/993/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/993/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/993/events", "html_url": "https://github.com/getsentry/raven-python/issues/993", "id": 220139893, "node_id": "MDU6SXNzdWUyMjAxMzk4OTM=", "number": 993, "title": "[DOCS] Django message references example breaks in version 1.11", "user": {"login": "isms", "id": 1284973, "node_id": "MDQ6VXNlcjEyODQ5NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1284973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isms", "html_url": "https://github.com/isms", "followers_url": "https://api.github.com/users/isms/followers", "following_url": "https://api.github.com/users/isms/following{/other_user}", "gists_url": "https://api.github.com/users/isms/gists{/gist_id}", "starred_url": "https://api.github.com/users/isms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isms/subscriptions", "organizations_url": "https://api.github.com/users/isms/orgs", "repos_url": "https://api.github.com/users/isms/repos", "events_url": "https://api.github.com/users/isms/events{/privacy}", "received_events_url": "https://api.github.com/users/isms/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321090, "node_id": "MDU6TGFiZWw2MjgzMjEwOTA=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Integrations:%20Django", "name": "Integrations: Django", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/getsentry/raven-python/milestones/1", "html_url": "https://github.com/getsentry/raven-python/milestone/1", "labels_url": "https://api.github.com/repos/getsentry/raven-python/milestones/1/labels", "id": 2644792, "node_id": "MDk6TWlsZXN0b25lMjY0NDc5Mg==", "number": 1, "title": "6.2.0", "description": "- Initial AWS lamda support\r\n- Improve Django +1.11 support \r\n- General bug fixes", "creator": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2017-07-17T13:23:17Z", "updated_at": "2017-09-23T17:10:22Z", "due_on": "2017-08-31T07:00:00Z", "closed_at": "2017-09-23T17:05:47Z"}, "comments": 0, "created_at": "2017-04-07T08:01:54Z", "updated_at": "2017-09-06T14:56:01Z", "closed_at": "2017-09-06T14:56:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of Django 1.11, `django.Template.render()` no longer accepts a `Context` object (changelog entry [here](https://docs.djangoproject.com/en/1.11/releases/1.11/#django-template-render-prohibits-non-dict-context)).\r\n\r\nMeanwhile, [current example](https://raven.readthedocs.io/en/stable/integrations/django.html#message-references) for adding message references to request context uses the old way:\r\n\r\n```python\r\n    t = loader.get_template('500.html') # You need to create a 500.html template.\r\n    return HttpResponseServerError(t.render(Context({\r\n        'request': request,\r\n    })))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/988", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/988/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/988/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/988/events", "html_url": "https://github.com/getsentry/raven-python/issues/988", "id": 219016917, "node_id": "MDU6SXNzdWUyMTkwMTY5MTc=", "number": 988, "title": "AttributeError: 'ParsedException' object has no attribute '__suppress_context__'", "user": {"login": "8enmann", "id": 1021104, "node_id": "MDQ6VXNlcjEwMjExMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1021104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/8enmann", "html_url": "https://github.com/8enmann", "followers_url": "https://api.github.com/users/8enmann/followers", "following_url": "https://api.github.com/users/8enmann/following{/other_user}", "gists_url": "https://api.github.com/users/8enmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/8enmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/8enmann/subscriptions", "organizations_url": "https://api.github.com/users/8enmann/orgs", "repos_url": "https://api.github.com/users/8enmann/repos", "events_url": "https://api.github.com/users/8enmann/events{/privacy}", "received_events_url": "https://api.github.com/users/8enmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-03T18:12:19Z", "updated_at": "2017-04-04T16:48:31Z", "closed_at": "2017-04-04T16:48:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is in 6.0.0\r\n```\r\nAttributeError: 'ParsedException' object has no attribute '__suppress_context__'\r\n  File \"run.py\", line 131, in <module>\r\n    event)\r\n  File \"run.py\", line 92, in process_event\r\n    tags=tags)\r\n  File \"raven/base.py\", line 799, in captureException\r\n    'raven.events.Exception', exc_info=exc_info, **kwargs)\r\n  File \"raven/base.py\", line 624, in capture\r\n    **kwargs)\r\n  File \"raven/base.py\", line 379, in build_msg\r\n    result = handler.capture(**kwargs)\r\n  File \"raven/events.py\", line 116, in capture\r\n    for exc_info in _chained_exceptions(exc_info):\r\n  File \"raven/events.py\", line 52, in _chained_exceptions\r\n    if exc.__suppress_context__:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/986", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/986/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/986/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/986/events", "html_url": "https://github.com/getsentry/raven-python/issues/986", "id": 218176873, "node_id": "MDU6SXNzdWUyMTgxNzY4NzM=", "number": 986, "title": "raven.exceptions.InvalidGitRepository: Cannot identify HEAD for git repository", "user": {"login": "neerajgupta2407", "id": 2323163, "node_id": "MDQ6VXNlcjIzMjMxNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2323163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajgupta2407", "html_url": "https://github.com/neerajgupta2407", "followers_url": "https://api.github.com/users/neerajgupta2407/followers", "following_url": "https://api.github.com/users/neerajgupta2407/following{/other_user}", "gists_url": "https://api.github.com/users/neerajgupta2407/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajgupta2407/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajgupta2407/subscriptions", "organizations_url": "https://api.github.com/users/neerajgupta2407/orgs", "repos_url": "https://api.github.com/users/neerajgupta2407/repos", "events_url": "https://api.github.com/users/neerajgupta2407/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajgupta2407/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-30T12:13:58Z", "updated_at": "2017-03-30T18:32:11Z", "closed_at": "2017-03-30T18:32:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI, I am usind Django-edge.\r\nhttps://django-edge.readthedocs.io/en/latest/\r\n\r\nI am trying to install Raven but it giving error: \r\nraven.exceptions.InvalidGitRepository: Cannot identify HEAD for git repository at /home/neeraj/codes/envision_code/src/envision_code/settings\r\n\r\nSince my settings file is in sub folder, so its giving error..\r\nHow should i rectify this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/985", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/985/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/985/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/985/events", "html_url": "https://github.com/getsentry/raven-python/issues/985", "id": 218120235, "node_id": "MDU6SXNzdWUyMTgxMjAyMzU=", "number": 985, "title": "Version confusion", "user": {"login": "beruic", "id": 724716, "node_id": "MDQ6VXNlcjcyNDcxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/724716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beruic", "html_url": "https://github.com/beruic", "followers_url": "https://api.github.com/users/beruic/followers", "following_url": "https://api.github.com/users/beruic/following{/other_user}", "gists_url": "https://api.github.com/users/beruic/gists{/gist_id}", "starred_url": "https://api.github.com/users/beruic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beruic/subscriptions", "organizations_url": "https://api.github.com/users/beruic/orgs", "repos_url": "https://api.github.com/users/beruic/repos", "events_url": "https://api.github.com/users/beruic/events{/privacy}", "received_events_url": "https://api.github.com/users/beruic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-30T08:34:33Z", "updated_at": "2017-04-01T07:34:42Z", "closed_at": "2017-03-30T13:49:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm a bit confused whether to use version 6.0.0 or 5.33.0 (which was release last). I cannot find documentation on the difference.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/983", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/983/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/983/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/983/events", "html_url": "https://github.com/getsentry/raven-python/issues/983", "id": 217979060, "node_id": "MDU6SXNzdWUyMTc5NzkwNjA=", "number": 983, "title": "Passing an exception class in ignore_exceptions causes raven error", "user": {"login": "mshang", "id": 999614, "node_id": "MDQ6VXNlcjk5OTYxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/999614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshang", "html_url": "https://github.com/mshang", "followers_url": "https://api.github.com/users/mshang/followers", "following_url": "https://api.github.com/users/mshang/following{/other_user}", "gists_url": "https://api.github.com/users/mshang/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshang/subscriptions", "organizations_url": "https://api.github.com/users/mshang/orgs", "repos_url": "https://api.github.com/users/mshang/repos", "events_url": "https://api.github.com/users/mshang/events{/privacy}", "received_events_url": "https://api.github.com/users/mshang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-29T19:10:07Z", "updated_at": "2017-03-29T20:07:06Z", "closed_at": "2017-03-29T20:07:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version: raven==6.0.0\r\n\r\nAccording to the documentation for the `ignore_exceptions` client configuration option, I should be able to pass in either strings or exception classes. Passing in an exception class causes an error in raven. See code below.\r\n\r\n`a.py`:\r\n```\r\nfrom raven import Client\r\n\r\nclient = Client('<omitted>',\r\n    ignore_exceptions=[\r\n        ZeroDivisionError,\r\n    ],\r\n)\r\n\r\ntry:\r\n    1 / 0\r\nexcept ZeroDivisionError:\r\n    client.captureException()\r\n```\r\n\r\n```\r\n(pyenv) Miless-MacBook:~ mshang$ python a.py\r\nError in sys.excepthook:\r\nTraceback (most recent call last):\r\n  File \"/Users/mshang/pyenv/lib/python2.7/site-packages/raven/base.py\", line 264, in handle_exception\r\n    self.captureException(exc_info=exc_info, level='fatal')\r\n  File \"/Users/mshang/pyenv/lib/python2.7/site-packages/raven/base.py\", line 799, in captureException\r\n    'raven.events.Exception', exc_info=exc_info, **kwargs)\r\n  File \"/Users/mshang/pyenv/lib/python2.7/site-packages/raven/base.py\", line 615, in capture\r\n    elif not self.should_capture(exc_info):\r\n  File \"/Users/mshang/pyenv/lib/python2.7/site-packages/raven/base.py\", line 810, in should_capture\r\n    elif any(exc_name.startswith(e[:-1]) for e in exclusions if e.endswith('*')):\r\n  File \"/Users/mshang/pyenv/lib/python2.7/site-packages/raven/base.py\", line 810, in <genexpr>\r\n    elif any(exc_name.startswith(e[:-1]) for e in exclusions if e.endswith('*')):\r\nAttributeError: type object 'exceptions.ZeroDivisionError' has no attribute 'endswith'\r\n\r\nOriginal exception was:\r\nTraceback (most recent call last):\r\n  File \"a.py\", line 12, in <module>\r\n    client.captureException()\r\n  File \"/Users/mshang/pyenv/lib/python2.7/site-packages/raven/base.py\", line 799, in captureException\r\n    'raven.events.Exception', exc_info=exc_info, **kwargs)\r\n  File \"/Users/mshang/pyenv/lib/python2.7/site-packages/raven/base.py\", line 615, in capture\r\n    elif not self.should_capture(exc_info):\r\n  File \"/Users/mshang/pyenv/lib/python2.7/site-packages/raven/base.py\", line 810, in should_capture\r\n    elif any(exc_name.startswith(e[:-1]) for e in exclusions if e.endswith('*')):\r\n  File \"/Users/mshang/pyenv/lib/python2.7/site-packages/raven/base.py\", line 810, in <genexpr>\r\n    elif any(exc_name.startswith(e[:-1]) for e in exclusions if e.endswith('*')):\r\nAttributeError: type object 'exceptions.ZeroDivisionError' has no attribute 'endswith'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/981", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/981/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/981/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/981/events", "html_url": "https://github.com/getsentry/raven-python/issues/981", "id": 215330856, "node_id": "MDU6SXNzdWUyMTUzMzA4NTY=", "number": 981, "title": "Sentry responded with an error: HTTP 413: Request Entity Too Large", "user": {"login": "dylanbfox", "id": 7076445, "node_id": "MDQ6VXNlcjcwNzY0NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7076445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanbfox", "html_url": "https://github.com/dylanbfox", "followers_url": "https://api.github.com/users/dylanbfox/followers", "following_url": "https://api.github.com/users/dylanbfox/following{/other_user}", "gists_url": "https://api.github.com/users/dylanbfox/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanbfox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanbfox/subscriptions", "organizations_url": "https://api.github.com/users/dylanbfox/orgs", "repos_url": "https://api.github.com/users/dylanbfox/repos", "events_url": "https://api.github.com/users/dylanbfox/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanbfox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 628321323, "node_id": "MDU6TGFiZWw2MjgzMjEzMjM=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Bug", "name": "Bug", "color": "b60205", "default": false, "description": null}, {"id": 708413477, "node_id": "MDU6TGFiZWw3MDg0MTM0Nzc=", "url": "https://api.github.com/repos/getsentry/raven-python/labels/Duplicate", "name": "Duplicate", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ashwoods", "id": 374965, "node_id": "MDQ6VXNlcjM3NDk2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/374965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwoods", "html_url": "https://github.com/ashwoods", "followers_url": "https://api.github.com/users/ashwoods/followers", "following_url": "https://api.github.com/users/ashwoods/following{/other_user}", "gists_url": "https://api.github.com/users/ashwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwoods/subscriptions", "organizations_url": "https://api.github.com/users/ashwoods/orgs", "repos_url": "https://api.github.com/users/ashwoods/repos", "events_url": "https://api.github.com/users/ashwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwoods/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-03-20T05:01:13Z", "updated_at": "2018-02-01T08:08:36Z", "closed_at": "2018-02-01T08:08:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an exception being raised in a POST request handler in Tornado. When that exception is sent to Sentry via `self.captureException(True)`, I am seeing:\r\n\r\n```\r\nERROR:sentry.errors:Sentry responded with an error: HTTP 413: Request Entity Too Large (url: https://sentry.io/api/148507/store/)\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/raven/contrib/tornado/__init__.py\", line 70, in _handle_result\r\n    future.result()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/concurrent.py\", line 237, in result\r\n    raise_exc_info(self._exc_info)\r\n  File \"<string>\", line 3, in raise_exc_info\r\nHTTPError: HTTP 413: Request Entity Too Large\r\n```\r\n\r\nIn the POST body is a large file. I tried to exclude the POST body data by adding the `'raven.processors.RemovePostDataProcessor'`, but I am still getting the 413 response.\r\n\r\n```\r\napp.sentry_client = AsyncSentryClient(_sentry_dsn, \r\n\tprocessors=(\r\n\t\t'raven.processors.SanitizePasswordsProcessor',\r\n\t\t'raven.processors.RemovePostDataProcessor'\r\n\t)\r\n)\r\n```\r\n\r\nI am using `raven==6.0.0`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/972", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/972/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/972/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/972/events", "html_url": "https://github.com/getsentry/raven-python/issues/972", "id": 210741175, "node_id": "MDU6SXNzdWUyMTA3NDExNzU=", "number": 972, "title": "Unable to run django-related tests", "user": {"login": "vincentbernat", "id": 631446, "node_id": "MDQ6VXNlcjYzMTQ0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/631446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentbernat", "html_url": "https://github.com/vincentbernat", "followers_url": "https://api.github.com/users/vincentbernat/followers", "following_url": "https://api.github.com/users/vincentbernat/following{/other_user}", "gists_url": "https://api.github.com/users/vincentbernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentbernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentbernat/subscriptions", "organizations_url": "https://api.github.com/users/vincentbernat/orgs", "repos_url": "https://api.github.com/users/vincentbernat/repos", "events_url": "https://api.github.com/users/vincentbernat/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentbernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-28T10:08:15Z", "updated_at": "2017-02-28T23:38:37Z", "closed_at": "2017-02-28T23:38:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey!\r\n\r\nAfter a fresh clone, `pip install django` in a virtualenv, running tests, I get the following output:\r\n\r\n```\r\n_________________ ERROR collecting tests/contrib/django/management/commands/test_raven.py __________________\r\n/usr/lib/python3.5/inspect.py:78: in isclass\r\n    return isinstance(object, type)\r\nraven/contrib/django/models.py:48: in <lambda>\r\n    __class__ = property(lambda x: get_client().__class__)\r\nraven/contrib/django/models.py:125: in get_client\r\n    Client = import_string(client)\r\nraven/utils/imports.py:15: in import_string\r\n    module = __import__(module_name, {}, {}, [class_name], 0)\r\n<frozen importlib._bootstrap>:969: in _find_and_load\r\n    ???\r\n<frozen importlib._bootstrap>:958: in _find_and_load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap>:664: in _load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap>:634: in _load_backward_compatible\r\n    ???\r\n.eggs/pytest-3.0.6-py3.5.egg/_pytest/assertion/rewrite.py:216: in load_module\r\n    py.builtin.exec_(co, mod.__dict__)\r\ntests/contrib/django/tests.py:14: in <module>\r\n    from django.contrib.auth.models import User\r\n../../../.virtualenvs/raven/lib/python3.5/site-packages/django/contrib/auth/models.py:4: in <module>\r\n    from django.contrib.auth.base_user import AbstractBaseUser, BaseUserManager\r\n../../../.virtualenvs/raven/lib/python3.5/site-packages/django/contrib/auth/base_user.py:52: in <module>\r\n    class AbstractBaseUser(models.Model):\r\n../../../.virtualenvs/raven/lib/python3.5/site-packages/django/db/models/base.py:105: in __new__\r\n    app_config = apps.get_containing_app_config(module)\r\n../../../.virtualenvs/raven/lib/python3.5/site-packages/django/apps/registry.py:237: in get_containing_app_config\r\n    self.check_apps_ready()\r\n../../../.virtualenvs/raven/lib/python3.5/site-packages/django/apps/registry.py:124: in check_apps_ready\r\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\r\nE   django.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\r\n```\r\n\r\nI can't find the missing step. A `django.configure()` in conftest helps but I suppose I am missing something else.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/968", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/968/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/968/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/968/events", "html_url": "https://github.com/getsentry/raven-python/issues/968", "id": 209375109, "node_id": "MDU6SXNzdWUyMDkzNzUxMDk=", "number": 968, "title": "Twisted Transport complaining with DeprecationWarning", "user": {"login": "iserko", "id": 473071, "node_id": "MDQ6VXNlcjQ3MzA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/473071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iserko", "html_url": "https://github.com/iserko", "followers_url": "https://api.github.com/users/iserko/followers", "following_url": "https://api.github.com/users/iserko/following{/other_user}", "gists_url": "https://api.github.com/users/iserko/gists{/gist_id}", "starred_url": "https://api.github.com/users/iserko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iserko/subscriptions", "organizations_url": "https://api.github.com/users/iserko/orgs", "repos_url": "https://api.github.com/users/iserko/repos", "events_url": "https://api.github.com/users/iserko/events{/privacy}", "received_events_url": "https://api.github.com/users/iserko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-22T07:38:58Z", "updated_at": "2017-02-22T07:47:46Z", "closed_at": "2017-02-22T07:47:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using Raven inside a Twisted environment and since upgrading Twisted to > v15 we've been getting these deprecation warnings:\r\n```\r\n[py.warnings] WARNING: /usr/lib/python2.7/dist-packages/raven-5.32.0-py2.7.egg/raven/transport/twisted.py:67: DeprecationWarning: Using readBody with a transport that does not have an abortConnection method\r\n  return readBody(response).addCallback(\r\n```\r\n\r\nReading this it looks like it's a Twisted problem https://twistedmatrix.com/trac/ticket/8227", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/963", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/963/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/963/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/963/events", "html_url": "https://github.com/getsentry/raven-python/issues/963", "id": 208573493, "node_id": "MDU6SXNzdWUyMDg1NzM0OTM=", "number": 963, "title": "Ignoring exceptions on Flask does not work anymore with child exceptions", "user": {"login": "noirbizarre", "id": 15725, "node_id": "MDQ6VXNlcjE1NzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/15725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noirbizarre", "html_url": "https://github.com/noirbizarre", "followers_url": "https://api.github.com/users/noirbizarre/followers", "following_url": "https://api.github.com/users/noirbizarre/following{/other_user}", "gists_url": "https://api.github.com/users/noirbizarre/gists{/gist_id}", "starred_url": "https://api.github.com/users/noirbizarre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noirbizarre/subscriptions", "organizations_url": "https://api.github.com/users/noirbizarre/orgs", "repos_url": "https://api.github.com/users/noirbizarre/repos", "events_url": "https://api.github.com/users/noirbizarre/events{/privacy}", "received_events_url": "https://api.github.com/users/noirbizarre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-17T22:20:37Z", "updated_at": "2017-03-06T03:12:53Z", "closed_at": "2017-03-06T03:12:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#821 is a fundamental behavior change on change on exception handling which is not documented into the changelog.\r\nThe main consequence is that child exception are now reported to sentry unless you list all child exceptions.\r\nOn a big project, this is really painful and this ends with a sentry massive polution with unwanted expection.\r\n\r\nOn flask, as handled HTTP errors are exception-based, I have to switch from ignoring HTTPException to ignoring every child, the werkzeug ones and the app children ones. In a case where the app can also host plugins raising custom exception, it becomes a nightmare.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/961", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/961/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/961/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/961/events", "html_url": "https://github.com/getsentry/raven-python/issues/961", "id": 208214982, "node_id": "MDU6SXNzdWUyMDgyMTQ5ODI=", "number": 961, "title": "raven.contrib.celery.register_logger_signal ignores subclasses of SentryHandler", "user": {"login": "mpistrang", "id": 1401703, "node_id": "MDQ6VXNlcjE0MDE3MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1401703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpistrang", "html_url": "https://github.com/mpistrang", "followers_url": "https://api.github.com/users/mpistrang/followers", "following_url": "https://api.github.com/users/mpistrang/following{/other_user}", "gists_url": "https://api.github.com/users/mpistrang/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpistrang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpistrang/subscriptions", "organizations_url": "https://api.github.com/users/mpistrang/orgs", "repos_url": "https://api.github.com/users/mpistrang/repos", "events_url": "https://api.github.com/users/mpistrang/events{/privacy}", "received_events_url": "https://api.github.com/users/mpistrang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-16T19:03:17Z", "updated_at": "2017-12-12T07:55:25Z", "closed_at": "2017-12-12T07:55:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`raven.contrib.celery.register_logger_signal` attempts to find an existing handler to add a CeleryFilter to.  It only considers existing handlers that are of type: `raven.handlers.logging.SentryHandler`.  This means that if a subclass of this handler is found (such as `raven.contrib.django.handlers.SentryHandler`) the existing handler is ignored and a brand new handler with default settings is added, resulting in two potentially duplicate handlers.\r\n\r\nThe fix for this would be to change the `type` check [here](https://github.com/getsentry/raven-python/blob/master/raven/contrib/celery/__init__.py#L46) to an `isinstance` check.\r\n\r\nI'm interested in submitting a PR for this with tests, if this change is considered appropriate.\r\n\r\nHere is the skeleton of a test that would help cover this:\r\n```\r\ndef test_subclassed_handler_updated(self):\r\n    client = InMemoryClient()\r\n    register_logger_signal(client)\r\n\r\n    class CustomHandler(SentryHandler):\r\n        pass\r\n\r\n    root = logging.getLogger()\r\n    handler = CustomHandler(client)\r\n    root.addHandler(handler)\r\n\r\n    celery.signals.after_setup_logger.send(\r\n        sender=None, logger=root,\r\n        loglevel=logging.WARNING, logfile=None,\r\n        format=u'', colorize=False,\r\n    )\r\n\r\n    assert len(root.handlers) == 1\r\n\r\n    handler = root.handlers[0]\r\n    assert isinstance(handler, CustomHandler)\r\n\r\n    assert len(handler.filters) == 1\r\n\r\n    _filter = handler.filters[0]\r\n    assert isinstance(_filter, CeleryFilter)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/957", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/957/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/957/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/957/events", "html_url": "https://github.com/getsentry/raven-python/issues/957", "id": 207868092, "node_id": "MDU6SXNzdWUyMDc4NjgwOTI=", "number": 957, "title": "Request is not logged to sentry using the default django middleware", "user": {"login": "teeberg", "id": 199071, "node_id": "MDQ6VXNlcjE5OTA3MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/199071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teeberg", "html_url": "https://github.com/teeberg", "followers_url": "https://api.github.com/users/teeberg/followers", "following_url": "https://api.github.com/users/teeberg/following{/other_user}", "gists_url": "https://api.github.com/users/teeberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/teeberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teeberg/subscriptions", "organizations_url": "https://api.github.com/users/teeberg/orgs", "repos_url": "https://api.github.com/users/teeberg/repos", "events_url": "https://api.github.com/users/teeberg/events{/privacy}", "received_events_url": "https://api.github.com/users/teeberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-15T17:14:01Z", "updated_at": "2017-02-15T19:12:25Z", "closed_at": "2017-02-15T19:04:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like there's code to automatically track requests and send them to sentry even when you don't pass `extra={'request': request}` to the logging call. However, it's not working for us because of the following:\r\n\r\nThe request gets set in local thread storage [here](https://github.com/getsentry/raven-python/blob/6ead8beb09d6d40b91be213580dd4d9d5bd72f37/raven/contrib/django/middleware/__init__.py#L105), where `self.thread` is an instance of `raven.contrib.django.middleware.SentryMiddleware`, and then read [here](https://github.com/getsentry/raven-python/blob/6ead8beb09d6d40b91be213580dd4d9d5bd72f37/raven/contrib/django/client.py#L258), where `SentryLogMiddleware.thread` is a `property` object, which is not what it was set on, and thus leads to `request` being `None`.\r\n\r\nDoing some git blaming, I think this broke in https://github.com/getsentry/raven-python/commit/c3e504a0bf77deb9a79bd841e9cacc62c8127901, where `SentryMiddleware.thread` was changed from a thread-local class variable to a property\r\n\r\nThis is with raven-python 5.32.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/956", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/956/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/956/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/956/events", "html_url": "https://github.com/getsentry/raven-python/issues/956", "id": 207198896, "node_id": "MDU6SXNzdWUyMDcxOTg4OTY=", "number": 956, "title": "Reopen: How to see the Referrer URL in Sentry", "user": {"login": "eskhool", "id": 541485, "node_id": "MDQ6VXNlcjU0MTQ4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/541485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eskhool", "html_url": "https://github.com/eskhool", "followers_url": "https://api.github.com/users/eskhool/followers", "following_url": "https://api.github.com/users/eskhool/following{/other_user}", "gists_url": "https://api.github.com/users/eskhool/gists{/gist_id}", "starred_url": "https://api.github.com/users/eskhool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eskhool/subscriptions", "organizations_url": "https://api.github.com/users/eskhool/orgs", "repos_url": "https://api.github.com/users/eskhool/repos", "events_url": "https://api.github.com/users/eskhool/events{/privacy}", "received_events_url": "https://api.github.com/users/eskhool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-13T12:06:57Z", "updated_at": "2017-02-14T17:46:58Z", "closed_at": "2017-02-13T19:24:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "This could be my having missed it in the docs or in sentry itself, but I am unable to see which URL sent us to the URL causing the error. How would one go about capturing that using Sentry?\r\nThx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/955", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/955/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/955/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/955/events", "html_url": "https://github.com/getsentry/raven-python/issues/955", "id": 206851546, "node_id": "MDU6SXNzdWUyMDY4NTE1NDY=", "number": 955, "title": "'release' parameter not accepted or used in flask applications", "user": {"login": "jkomusin", "id": 488939, "node_id": "MDQ6VXNlcjQ4ODkzOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/488939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkomusin", "html_url": "https://github.com/jkomusin", "followers_url": "https://api.github.com/users/jkomusin/followers", "following_url": "https://api.github.com/users/jkomusin/following{/other_user}", "gists_url": "https://api.github.com/users/jkomusin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkomusin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkomusin/subscriptions", "organizations_url": "https://api.github.com/users/jkomusin/orgs", "repos_url": "https://api.github.com/users/jkomusin/repos", "events_url": "https://api.github.com/users/jkomusin/events{/privacy}", "received_events_url": "https://api.github.com/users/jkomusin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-10T17:07:32Z", "updated_at": "2017-02-15T20:49:46Z", "closed_at": "2017-02-15T20:49:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Although it is documented [here](https://docs.sentry.io/clients/python/integrations/flask/#settings), the 'release' setting does not appear to actually be pulled in or defined as a valid parameter when instantiating the Sentry object.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/getsentry/raven-python/issues/951", "repository_url": "https://api.github.com/repos/getsentry/raven-python", "labels_url": "https://api.github.com/repos/getsentry/raven-python/issues/951/labels{/name}", "comments_url": "https://api.github.com/repos/getsentry/raven-python/issues/951/comments", "events_url": "https://api.github.com/repos/getsentry/raven-python/issues/951/events", "html_url": "https://github.com/getsentry/raven-python/issues/951", "id": 206155387, "node_id": "MDU6SXNzdWUyMDYxNTUzODc=", "number": 951, "title": "compute_scope not implemented in any of the base transports", "user": {"login": "arthurlogilab", "id": 445200, "node_id": "MDQ6VXNlcjQ0NTIwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/445200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurlogilab", "html_url": "https://github.com/arthurlogilab", "followers_url": "https://api.github.com/users/arthurlogilab/followers", "following_url": "https://api.github.com/users/arthurlogilab/following{/other_user}", "gists_url": "https://api.github.com/users/arthurlogilab/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurlogilab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurlogilab/subscriptions", "organizations_url": "https://api.github.com/users/arthurlogilab/orgs", "repos_url": "https://api.github.com/users/arthurlogilab/repos", "events_url": "https://api.github.com/users/arthurlogilab/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurlogilab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-08T10:28:28Z", "updated_at": "2017-02-09T20:12:50Z", "closed_at": "2017-02-09T20:12:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using sentry with salt I bumped into this bug : \r\n\r\n```\r\nFeb 08 11:21:02  salt-master[6742]: File \"/usr/lib/python2.7/dist-packages/salt/log/handlers/sentry_mod.py\", line 129, in setup_handlers\r\nFeb 08 11:21:02  salt-master[6742]: conf_extras = transport_registry.compute_scope(url, dsn_config)\r\nFeb 08 11:21:02  salt-master[6742]: File \"/usr/lib/python2.7/dist-packages/raven/transport/registry.py\", line 71, in compute_scope\r\nFeb 08 11:21:02  salt-master[6742]: return transport.compute_scope(url, scope)\r\nFeb 08 11:21:02  salt-master[6742]: AttributeError: 'ThreadedHTTPTransport' object has no attribute 'compute_scope'\r\n```\r\n\r\nTrying to dig into this problem I found that compute_scope is in the registry but not on any of the transport classes, is this deprecated ? \r\n\r\nSee related discussion here https://github.com/saltstack/salt/issues/34152", "performed_via_github_app": null, "score": 1.0}]}