{"total_count": 20, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/kvesteri/intervals/issues/51", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/51/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/51/events", "html_url": "https://github.com/kvesteri/intervals/issues/51", "id": 657585550, "node_id": "MDU6SXNzdWU2NTc1ODU1NTA=", "number": 51, "title": "New release?", "user": {"login": "coreycb", "id": 1678881, "node_id": "MDQ6VXNlcjE2Nzg4ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1678881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coreycb", "html_url": "https://github.com/coreycb", "followers_url": "https://api.github.com/users/coreycb/followers", "following_url": "https://api.github.com/users/coreycb/following{/other_user}", "gists_url": "https://api.github.com/users/coreycb/gists{/gist_id}", "starred_url": "https://api.github.com/users/coreycb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coreycb/subscriptions", "organizations_url": "https://api.github.com/users/coreycb/orgs", "repos_url": "https://api.github.com/users/coreycb/repos", "events_url": "https://api.github.com/users/coreycb/events{/privacy}", "received_events_url": "https://api.github.com/users/coreycb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-15T19:08:18Z", "updated_at": "2020-07-16T13:23:15Z", "closed_at": "2020-07-16T11:41:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm working on packaging this for ubuntu as it is used by sqlalchemy-utils but will have a hard time getting it into main (ie. officially supported) as it currently gives the appearance of having an unmaintained state. I realize that free software isn't free so just putting this out there. :) I know there isn't much new since 0.8.1, however a new release showing that this project supports modern Python 3 versions (we're up to 3.8 now) would be a good way to show that it is still alive and well. Also getting some responses to open issues would be nice to see too. Thanks for listening!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/46", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/46/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/46/events", "html_url": "https://github.com/kvesteri/intervals/issues/46", "id": 308319154, "node_id": "MDU6SXNzdWUzMDgzMTkxNTQ=", "number": 46, "title": "Expose inf interface in this package", "user": {"login": "yxwangcs", "id": 10323518, "node_id": "MDQ6VXNlcjEwMzIzNTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/10323518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yxwangcs", "html_url": "https://github.com/yxwangcs", "followers_url": "https://api.github.com/users/yxwangcs/followers", "following_url": "https://api.github.com/users/yxwangcs/following{/other_user}", "gists_url": "https://api.github.com/users/yxwangcs/gists{/gist_id}", "starred_url": "https://api.github.com/users/yxwangcs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yxwangcs/subscriptions", "organizations_url": "https://api.github.com/users/yxwangcs/orgs", "repos_url": "https://api.github.com/users/yxwangcs/repos", "events_url": "https://api.github.com/users/yxwangcs/events{/privacy}", "received_events_url": "https://api.github.com/users/yxwangcs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-25T03:32:59Z", "updated_at": "2020-02-28T20:28:43Z", "closed_at": "2020-02-28T20:28:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe exposing the inf in the intervals package is better, since you don't have to import from infinity package.\r\n\r\n`from intervals import Interval, inf` is cleaner, I think.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/42", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/42/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/42/events", "html_url": "https://github.com/kvesteri/intervals/issues/42", "id": 281626846, "node_id": "MDU6SXNzdWUyODE2MjY4NDY=", "number": 42, "title": "OverflowError in daterange coercion with sqlalchemy in intervals==0.8.1", "user": {"login": "qria", "id": 4233072, "node_id": "MDQ6VXNlcjQyMzMwNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4233072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qria", "html_url": "https://github.com/qria", "followers_url": "https://api.github.com/users/qria/followers", "following_url": "https://api.github.com/users/qria/following{/other_user}", "gists_url": "https://api.github.com/users/qria/gists{/gist_id}", "starred_url": "https://api.github.com/users/qria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qria/subscriptions", "organizations_url": "https://api.github.com/users/qria/orgs", "repos_url": "https://api.github.com/users/qria/repos", "events_url": "https://api.github.com/users/qria/events{/privacy}", "received_events_url": "https://api.github.com/users/qria/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-13T05:08:09Z", "updated_at": "2020-07-16T11:40:57Z", "closed_at": "2020-07-16T11:40:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure whether to report this here or sqlalchemy but here it is.\r\n\r\nWhen updating a sqlalchemy object with a date_range field that was previously unset, it throws an `OverflowError` in intervals coercion part.\r\n\r\nHere's a replication.\r\n\r\n```\r\nimport datetime\r\nfrom intervals import DateInterval\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.schema import Column\r\nfrom sqlalchemy.types import Integer\r\nfrom sqlalchemy.orm import sessionmaker\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy_utils import DateRangeType\r\n\r\nengine = create_engine('sqlite://')\r\nSession = sessionmaker(bind=engine)\r\nBase = declarative_base()\r\n\r\nclass Test(Base):\r\n    \"\"\"Example model utilizing dateinterval field\"\"\"\r\n    id = Column(Integer, primary_key=True)\r\n    date_range = Column(DateRangeType)\r\n    __tablename__ = 'test'\r\n\r\nBase.metadata.create_all(engine)\r\n\r\nsession = Session()\r\ntest = Test()\r\nsession.add(test)\r\nsession.flush()\r\n\r\n# Try to update the date_range field\r\ndate_interval = DateInterval.closed(datetime.date.today(), datetime.date.today())\r\ntest.date_range = date_interval\r\nsession.flush()\r\n```\r\n\r\nAnd here's the traceback\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nOverflowError                             Traceback (most recent call last)\r\n<ipython-input-22-7c07ae3cd6ee> in <module>()\r\n     23 session.flush()\r\n     24 test.date_range = date_interval\r\n---> 25 session.flush()\r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/orm/session.py in flush(self, objects)\r\n   2078         try:\r\n   2079             self._flushing = True\r\n-> 2080             self._flush(objects)\r\n   2081         finally:\r\n   2082             self._flushing = False\r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/orm/session.py in _flush(self, objects)\r\n   2196         except:\r\n   2197             with util.safe_reraise():\r\n-> 2198                 transaction.rollback(_capture_exception=True)\r\n   2199 \r\n   2200     def bulk_save_objects(\r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py in __exit__(self, type_, value, traceback)\r\n     58             exc_type, exc_value, exc_tb = self._exc_info\r\n     59             self._exc_info = None   # remove potential circular references\r\n---> 60             compat.reraise(exc_type, exc_value, exc_tb)\r\n     61         else:\r\n     62             if not compat.py3k and self._exc_info and self._exc_info[1]:\r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/util/compat.py in reraise(tp, value, tb, cause)\r\n    185         if value.__traceback__ is not tb:\r\n    186             raise value.with_traceback(tb)\r\n--> 187         raise value\r\n    188 \r\n    189 else:\r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/orm/session.py in _flush(self, objects)\r\n   2160             self._warn_on_events = True\r\n   2161             try:\r\n-> 2162                 flush_context.execute()\r\n   2163             finally:\r\n   2164                 self._warn_on_events = False\r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/orm/unitofwork.py in execute(self)\r\n    371                     self.dependencies,\r\n    372                     postsort_actions):\r\n--> 373                 rec.execute(self)\r\n    374 \r\n    375     def finalize_flush_changes(self):\r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/orm/unitofwork.py in execute(self, uow)\r\n    530                              uow.states_for_mapper_hierarchy(\r\n    531                                  self.mapper, False, False),\r\n--> 532                              uow\r\n    533                              )\r\n    534 \r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/orm/persistence.py in save_obj(base_mapper, states, uowtransaction, single)\r\n    172         _emit_update_statements(base_mapper, uowtransaction,\r\n    173                                 cached_connections,\r\n--> 174                                 mapper, table, update)\r\n    175 \r\n    176         _emit_insert_statements(base_mapper, uowtransaction,\r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/orm/persistence.py in _emit_update_statements(base_mapper, uowtransaction, cached_connections, mapper, table, update, bookkeeping)\r\n    636         records in groupby(\r\n    637             update,\r\n--> 638             lambda rec: (\r\n    639                 rec[4],  # connection\r\n    640                 set(rec[2]),  # set of parameter keys\r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/orm/persistence.py in _collect_update_commands(uowtransaction, table, states_to_update, bulk)\r\n    464                 # objects for __eq__()\r\n    465                 elif state.manager[propkey].impl.is_equal(\r\n--> 466                         value, state.committed_state[propkey]) is not True:\r\n    467                     params[col.key] = value\r\n    468 \r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/sql/type_api.py in compare_values(self, x, y)\r\n   1088 \r\n   1089         \"\"\"\r\n-> 1090         return self.impl.compare_values(x, y)\r\n   1091 \r\n   1092     def __repr__(self):\r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/sqlalchemy/sql/type_api.py in compare_values(self, x, y)\r\n    277         \"\"\"Compare two values for equality.\"\"\"\r\n    278 \r\n--> 279         return x == y\r\n    280 \r\n    281     def get_dbapi_type(self, dbapi):\r\n\r\n/Users/qria/.venvs/jupyter/lib/python3.6/site-packages/intervals/interval.py in wrapper(self, arg)\r\n    101         try:\r\n    102             arg = type(self)(self.type(arg))\r\n--> 103         except (ValueError, TypeError):\r\n    104             pass\r\n    105         return func(self, arg)\r\n\r\nOverflowError: signed integer is less than minimum\r\n```\r\n\r\nLooks like sqlalchemy sets a really big or really small integer value to previously unset value (to differentiate them with `None`) in a form of `sqlalchemy.util.symbol('NO_VALUE')` and intervals blows up trying to parse it.\r\n\r\nThis does not happen in `0.8.0` so we'll pin the version for the time being.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/41", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/41/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/41/events", "html_url": "https://github.com/kvesteri/intervals/issues/41", "id": 279707017, "node_id": "MDU6SXNzdWUyNzk3MDcwMTc=", "number": 41, "title": "IntInterval and FloatInterval crash when input is not of the same type.", "user": {"login": "IlianIliev", "id": 541401, "node_id": "MDQ6VXNlcjU0MTQwMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/541401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlianIliev", "html_url": "https://github.com/IlianIliev", "followers_url": "https://api.github.com/users/IlianIliev/followers", "following_url": "https://api.github.com/users/IlianIliev/following{/other_user}", "gists_url": "https://api.github.com/users/IlianIliev/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlianIliev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlianIliev/subscriptions", "organizations_url": "https://api.github.com/users/IlianIliev/orgs", "repos_url": "https://api.github.com/users/IlianIliev/repos", "events_url": "https://api.github.com/users/IlianIliev/events{/privacy}", "received_events_url": "https://api.github.com/users/IlianIliev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-06T10:48:37Z", "updated_at": "2017-12-06T17:02:03Z", "closed_at": "2017-12-06T17:02:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Verified both with Python 2 and Python 3.\r\n\r\nIf I want to check if a specific number is in an interval and the number type does not match that of the interval an exception is raised (check examples below).\r\n\r\nI can except the case when `float` is not in `IntInterval` because the floating point numbers does not belong to the set of integers, but then the result should be `False` not an exception.\r\nAs for 'int' in 'FloatInterval' as the real numbers set include the integer numbers set then it should return true no matter if we pass integer or float.\r\n\r\nP.S. I would be happy to work on a fix )\r\n```\r\n>>> from intervals import IntInterval, FloatInterval\r\n>>> ii = IntInterval.from_string('[0, 30)')\r\n>>> 5 in ii\r\nTrue\r\n>>> 5.0 in ii\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/ilian/.virtualenvs/tmp-d04ae033510398ee/lib/python3.6/site-packages/intervals/interval.py\", line 101, in wrapper\r\n    return func(self, arg)\r\n  File \"/Users/ilian/.virtualenvs/tmp-d04ae033510398ee/lib/python3.6/site-packages/intervals/interval.py\", line 438, in __contains__\r\n    if self.upper_inc or (not self.upper_inc and not other.upper_inc)\r\nAttributeError: 'float' object has no attribute 'upper_inc'\r\n>>>\r\n```\r\n\r\nAnd for `FloatInterval`\r\n```\r\n>>> fi = FloatInterval.from_string('[0, 30)')\r\n>>> 5.0 in fi\r\nTrue\r\n>>> 5 in fi\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/ilian/.virtualenvs/tmp-d04ae033510398ee/lib/python3.6/site-packages/intervals/interval.py\", line 101, in wrapper\r\n    return func(self, arg)\r\n  File \"/Users/ilian/.virtualenvs/tmp-d04ae033510398ee/lib/python3.6/site-packages/intervals/interval.py\", line 438, in __contains__\r\n    if self.upper_inc or (not self.upper_inc and not other.upper_inc)\r\nAttributeError: 'int' object has no attribute 'upper_inc'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/36", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/36/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/36/events", "html_url": "https://github.com/kvesteri/intervals/issues/36", "id": 262635866, "node_id": "MDU6SXNzdWUyNjI2MzU4NjY=", "number": 36, "title": "Are intervals with the same lower and upper but inclusive of one and exclusive of the other valid?", "user": {"login": "vansivallab", "id": 2260936, "node_id": "MDQ6VXNlcjIyNjA5MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2260936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vansivallab", "html_url": "https://github.com/vansivallab", "followers_url": "https://api.github.com/users/vansivallab/followers", "following_url": "https://api.github.com/users/vansivallab/following{/other_user}", "gists_url": "https://api.github.com/users/vansivallab/gists{/gist_id}", "starred_url": "https://api.github.com/users/vansivallab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vansivallab/subscriptions", "organizations_url": "https://api.github.com/users/vansivallab/orgs", "repos_url": "https://api.github.com/users/vansivallab/repos", "events_url": "https://api.github.com/users/vansivallab/events{/privacy}", "received_events_url": "https://api.github.com/users/vansivallab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-04T00:57:05Z", "updated_at": "2017-10-04T16:15:02Z", "closed_at": "2017-10-04T16:15:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm able to create an interval with the same lower and upper bound but one bound is inclusive and other other is exclusive. However this seems like an invalid interval to me because such abound seems to suggest that a value is both included and excluded from the interval.\r\n\r\nAs an example:\r\n```\r\n>>> Interval(1,1, lower_inc=True, upper_inc=False)\r\nIntInterval('[1,1)')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/33", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/33/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/33/events", "html_url": "https://github.com/kvesteri/intervals/issues/33", "id": 160616825, "node_id": "MDU6SXNzdWUxNjA2MTY4MjU=", "number": 33, "title": ".sup and .inf do not assign lower_inc and upper_inc correctly", "user": {"login": "micklat", "id": 3190517, "node_id": "MDQ6VXNlcjMxOTA1MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3190517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micklat", "html_url": "https://github.com/micklat", "followers_url": "https://api.github.com/users/micklat/followers", "following_url": "https://api.github.com/users/micklat/following{/other_user}", "gists_url": "https://api.github.com/users/micklat/gists{/gist_id}", "starred_url": "https://api.github.com/users/micklat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micklat/subscriptions", "organizations_url": "https://api.github.com/users/micklat/orgs", "repos_url": "https://api.github.com/users/micklat/repos", "events_url": "https://api.github.com/users/micklat/events{/privacy}", "received_events_url": "https://api.github.com/users/micklat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-16T09:26:52Z", "updated_at": "2016-07-10T17:54:05Z", "closed_at": "2016-07-10T17:54:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n> a = FloatInterval((1,2))\n> b = FloatInterval([0,3])\n> a|b\nFloatInterval('[0.0, 3.0]')\n> b|a\nFloatInterval('(0.0, 3.0)')\n> a|b == b|a\nFalse\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/28", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/28/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/28/events", "html_url": "https://github.com/kvesteri/intervals/issues/28", "id": 62096733, "node_id": "MDU6SXNzdWU2MjA5NjczMw==", "number": 28, "title": "Problem using SQLAlchemy and calling history", "user": {"login": "fmerges", "id": 94341, "node_id": "MDQ6VXNlcjk0MzQx", "avatar_url": "https://avatars0.githubusercontent.com/u/94341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmerges", "html_url": "https://github.com/fmerges", "followers_url": "https://api.github.com/users/fmerges/followers", "following_url": "https://api.github.com/users/fmerges/following{/other_user}", "gists_url": "https://api.github.com/users/fmerges/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmerges/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmerges/subscriptions", "organizations_url": "https://api.github.com/users/fmerges/orgs", "repos_url": "https://api.github.com/users/fmerges/repos", "events_url": "https://api.github.com/users/fmerges/events{/privacy}", "received_events_url": "https://api.github.com/users/fmerges/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-16T14:24:46Z", "updated_at": "2016-01-28T11:59:27Z", "closed_at": "2016-01-28T11:59:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI have a problem with intervals and SQLAlchemy, I'm tracking changes to objects via the history, so when I try to insert a new DateRange it fails because it's comparing a DateInterval() object with a symbol('NO_VALUE'), which then tries to create a DateInterval(\"[symbol('NO_VALUE'), symbol('NO_VALUE')]\") which of course fails with:\n\nTypeError: unsupported operand type(s) for +: 'symbol' and 'datetime.timedelta'\n\nAny ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/27", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/27/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/27/events", "html_url": "https://github.com/kvesteri/intervals/issues/27", "id": 58500275, "node_id": "MDU6SXNzdWU1ODUwMDI3NQ==", "number": 27, "title": "Error in DateInterval", "user": {"login": "usakov-leonid", "id": 10977367, "node_id": "MDQ6VXNlcjEwOTc3MzY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10977367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usakov-leonid", "html_url": "https://github.com/usakov-leonid", "followers_url": "https://api.github.com/users/usakov-leonid/followers", "following_url": "https://api.github.com/users/usakov-leonid/following{/other_user}", "gists_url": "https://api.github.com/users/usakov-leonid/gists{/gist_id}", "starred_url": "https://api.github.com/users/usakov-leonid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usakov-leonid/subscriptions", "organizations_url": "https://api.github.com/users/usakov-leonid/orgs", "repos_url": "https://api.github.com/users/usakov-leonid/repos", "events_url": "https://api.github.com/users/usakov-leonid/events{/privacy}", "received_events_url": "https://api.github.com/users/usakov-leonid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-22T11:57:39Z", "updated_at": "2016-01-27T21:45:57Z", "closed_at": "2016-01-27T21:45:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I catch error, when I do:\nfrom intervals import DateInterval, inf\nDateInterval(['2000-01-01', inf])\n\non 195 line in **init** you try make:\n\n```\ndef coerce_string(self, value):\n    return self.type(value)\n```\n\nand self.type == datetime.date, and value == '2000-01-01' :)\n\nI install intervals from pypi, v0.3.1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/22", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/22/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/22/events", "html_url": "https://github.com/kvesteri/intervals/issues/22", "id": 49534545, "node_id": "MDU6SXNzdWU0OTUzNDU0NQ==", "number": 22, "title": "Intersection should be commutative", "user": {"login": "arimbr", "id": 2302748, "node_id": "MDQ6VXNlcjIzMDI3NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2302748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arimbr", "html_url": "https://github.com/arimbr", "followers_url": "https://api.github.com/users/arimbr/followers", "following_url": "https://api.github.com/users/arimbr/following{/other_user}", "gists_url": "https://api.github.com/users/arimbr/gists{/gist_id}", "starred_url": "https://api.github.com/users/arimbr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arimbr/subscriptions", "organizations_url": "https://api.github.com/users/arimbr/orgs", "repos_url": "https://api.github.com/users/arimbr/repos", "events_url": "https://api.github.com/users/arimbr/events{/privacy}", "received_events_url": "https://api.github.com/users/arimbr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-11-20T11:42:57Z", "updated_at": "2014-12-09T15:10:00Z", "closed_at": "2014-12-09T15:10:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I get these results\n\nIn [8]: IntInterval((1, 2)) & IntInterval([1, 2])\nOut[8]: IntInterval('[1, 2)')\n\nIn [9]: IntInterval([1, 2]) & IntInterval((1, 2))\nOut[9]: IntInterval('(1, 2]')\n\nI would expect these to be True\n\nIntInterval((1, 2)) & IntInterval([1, 2]) ==  IntInterval((1, 2))\nIntInterval([1, 2]) & IntInterval((1, 2)) == IntInterval((1, 2))\n\nNor 1 or 2 should be included in the intersection in my opinion (I am considering the intersection to be the elements that are present in both intervals), but in any case the intersection should be commutative.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/21", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/21/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/21/events", "html_url": "https://github.com/kvesteri/intervals/issues/21", "id": 48646661, "node_id": "MDU6SXNzdWU0ODY0NjY2MQ==", "number": 21, "title": "Support for unbounded intervals", "user": {"login": "homeworkprod", "id": 95277, "node_id": "MDQ6VXNlcjk1Mjc3", "avatar_url": "https://avatars0.githubusercontent.com/u/95277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/homeworkprod", "html_url": "https://github.com/homeworkprod", "followers_url": "https://api.github.com/users/homeworkprod/followers", "following_url": "https://api.github.com/users/homeworkprod/following{/other_user}", "gists_url": "https://api.github.com/users/homeworkprod/gists{/gist_id}", "starred_url": "https://api.github.com/users/homeworkprod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/homeworkprod/subscriptions", "organizations_url": "https://api.github.com/users/homeworkprod/orgs", "repos_url": "https://api.github.com/users/homeworkprod/repos", "events_url": "https://api.github.com/users/homeworkprod/events{/privacy}", "received_events_url": "https://api.github.com/users/homeworkprod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-13T15:13:46Z", "updated_at": "2016-01-28T11:54:25Z", "closed_at": "2016-01-27T21:41:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to see support for intervals which only define either a lower or upper boundary.\n\nExamples include a shop article that is available only until a certain date (like a discontinued product), or only starting on a certain date (like a newly introduced product). The article would include both a lifetime start date and end date. Making it available for a limited period of time already works (using an interval with two boundaries) as would making it available forever (both start date and end date not being set; this doesn't have to be modeled as an interval, though, as it can be handled before doing any interval membership tests).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/15", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/15/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/15/events", "html_url": "https://github.com/kvesteri/intervals/issues/15", "id": 33242879, "node_id": "MDU6SXNzdWUzMzI0Mjg3OQ==", "number": 15, "title": "Make Interval and IntervalSet hashable", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 73630282, "node_id": "MDU6TGFiZWw3MzYzMDI4Mg==", "url": "https://api.github.com/repos/kvesteri/intervals/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-05-10T17:10:34Z", "updated_at": "2014-12-30T15:01:26Z", "closed_at": "2014-12-30T15:01:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This also means the objects should be immutable.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/14", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/14/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/14/events", "html_url": "https://github.com/kvesteri/intervals/issues/14", "id": 33242594, "node_id": "MDU6SXNzdWUzMzI0MjU5NA==", "number": 14, "title": "Support for IntervalSets (discontinous intervals)", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 73630282, "node_id": "MDU6TGFiZWw3MzYzMDI4Mg==", "url": "https://api.github.com/repos/kvesteri/intervals/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-10T17:00:08Z", "updated_at": "2016-01-27T21:41:29Z", "closed_at": "2016-01-27T21:41:29Z", "author_association": "OWNER", "active_lock_reason": null, "body": "IntervalSet should support at least the following operations:\n- union\n- intersection\n- length (sum of the lengths of all intervals in this set)\n- radius (length / 2)\n- degenerate\n- empty / **bool** / **nonzero**\n- discrete\n- **contains** (`True` if given point / Interval / IntervalSet is contained within this IntervalSet)\n- **eq** (`True` if the set represents the same interval as another value)\n- **ne** \n- open (`True` if all the intervals in the set are open)\n- closed (`True` if all the intervals are closed)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/10", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/10/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/10/events", "html_url": "https://github.com/kvesteri/intervals/issues/10", "id": 30466039, "node_id": "MDU6SXNzdWUzMDQ2NjAzOQ==", "number": 10, "title": "Modify constructor to support more ways of initialization", "user": {"login": "adarshk7", "id": 3767107, "node_id": "MDQ6VXNlcjM3NjcxMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3767107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adarshk7", "html_url": "https://github.com/adarshk7", "followers_url": "https://api.github.com/users/adarshk7/followers", "following_url": "https://api.github.com/users/adarshk7/following{/other_user}", "gists_url": "https://api.github.com/users/adarshk7/gists{/gist_id}", "starred_url": "https://api.github.com/users/adarshk7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adarshk7/subscriptions", "organizations_url": "https://api.github.com/users/adarshk7/orgs", "repos_url": "https://api.github.com/users/adarshk7/repos", "events_url": "https://api.github.com/users/adarshk7/events{/privacy}", "received_events_url": "https://api.github.com/users/adarshk7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-30T14:20:28Z", "updated_at": "2016-02-25T18:30:29Z", "closed_at": "2016-02-25T18:30:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nIntInterval(2, 5, inc_upper=True) == IntInterval('(2, 5]']\nIntInterval(2, 5, inc_lower=True) == IntInterval('[2, 5)']\nIntInterval(2, 5, inc_lower=True, inc_upper=True) == IntInterval[2, 5]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/9", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/9/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/9/events", "html_url": "https://github.com/kvesteri/intervals/issues/9", "id": 27721159, "node_id": "MDU6SXNzdWUyNzcyMTE1OQ==", "number": 9, "title": "Zero interval", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 73630280, "node_id": "MDU6TGFiZWw3MzYzMDI4MA==", "url": "https://api.github.com/repos/kvesteri/intervals/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-02-17T14:11:36Z", "updated_at": "2014-03-07T20:54:31Z", "closed_at": "2014-03-07T20:54:31Z", "author_association": "OWNER", "active_lock_reason": null, "body": "``` python\nstr(IntInterval('[0, 0]'))  # '(0, 0]'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/7", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/7/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/7/events", "html_url": "https://github.com/kvesteri/intervals/issues/7", "id": 27088070, "node_id": "MDU6SXNzdWUyNzA4ODA3MA==", "number": 7, "title": "Support for easier initialization of intervals", "user": {"login": "adarshk7", "id": 3767107, "node_id": "MDQ6VXNlcjM3NjcxMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3767107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adarshk7", "html_url": "https://github.com/adarshk7", "followers_url": "https://api.github.com/users/adarshk7/followers", "following_url": "https://api.github.com/users/adarshk7/following{/other_user}", "gists_url": "https://api.github.com/users/adarshk7/gists{/gist_id}", "starred_url": "https://api.github.com/users/adarshk7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adarshk7/subscriptions", "organizations_url": "https://api.github.com/users/adarshk7/orgs", "repos_url": "https://api.github.com/users/adarshk7/repos", "events_url": "https://api.github.com/users/adarshk7/events{/privacy}", "received_events_url": "https://api.github.com/users/adarshk7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-02-06T21:48:22Z", "updated_at": "2016-07-10T18:25:48Z", "closed_at": "2016-07-10T17:24:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For example,\n\nIntInterval(3, 5) == IntInterval((3, 5))\nand,\nIntInterval[3, 5] == IntInterval([3, 5])\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/5", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/5/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/5/events", "html_url": "https://github.com/kvesteri/intervals/issues/5", "id": 26864616, "node_id": "MDU6SXNzdWUyNjg2NDYxNg==", "number": 5, "title": "Make support for empty intervals", "user": {"login": "adarshk7", "id": 3767107, "node_id": "MDQ6VXNlcjM3NjcxMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3767107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adarshk7", "html_url": "https://github.com/adarshk7", "followers_url": "https://api.github.com/users/adarshk7/followers", "following_url": "https://api.github.com/users/adarshk7/following{/other_user}", "gists_url": "https://api.github.com/users/adarshk7/gists{/gist_id}", "starred_url": "https://api.github.com/users/adarshk7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adarshk7/subscriptions", "organizations_url": "https://api.github.com/users/adarshk7/orgs", "repos_url": "https://api.github.com/users/adarshk7/repos", "events_url": "https://api.github.com/users/adarshk7/events{/privacy}", "received_events_url": "https://api.github.com/users/adarshk7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-02-04T07:42:10Z", "updated_at": "2014-02-04T15:24:21Z", "closed_at": "2014-02-04T15:24:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example:\n\nfrom intervals import IntInterval\n\ninterval = IntInterval('(3, 3]')\ninterval.empty  # True\n\ninterval = IntInterval([2, 4]) & IntInterval([5, 6])\nisinstance(interval, IntInterval)  # True\n\ninterval.empty  # True\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/3", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/3/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/3/events", "html_url": "https://github.com/kvesteri/intervals/issues/3", "id": 26663045, "node_id": "MDU6SXNzdWUyNjY2MzA0NQ==", "number": 3, "title": "Intersection does not check if interval is open or closed", "user": {"login": "adarshk7", "id": 3767107, "node_id": "MDQ6VXNlcjM3NjcxMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3767107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adarshk7", "html_url": "https://github.com/adarshk7", "followers_url": "https://api.github.com/users/adarshk7/followers", "following_url": "https://api.github.com/users/adarshk7/following{/other_user}", "gists_url": "https://api.github.com/users/adarshk7/gists{/gist_id}", "starred_url": "https://api.github.com/users/adarshk7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adarshk7/subscriptions", "organizations_url": "https://api.github.com/users/adarshk7/orgs", "repos_url": "https://api.github.com/users/adarshk7/repos", "events_url": "https://api.github.com/users/adarshk7/events{/privacy}", "received_events_url": "https://api.github.com/users/adarshk7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-01-31T08:36:11Z", "updated_at": "2014-02-06T21:46:22Z", "closed_at": "2014-02-06T21:46:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "from intervals import Interval\nx = Interval([2, 3]) # Closed Interval\ny = Interval([3, 4])\nx & y\n\nIntInterval('[3, 3]') # Correct answer\n\ny = Interval((3, 4)) # Open interval\nx = Interval((2, 3))\nx & y\n\nIntInterval('[3, 3]') # Should be [] because in open interval 3 won't be included\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/2", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/2/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/2/events", "html_url": "https://github.com/kvesteri/intervals/issues/2", "id": 25818161, "node_id": "MDU6SXNzdWUyNTgxODE2MQ==", "number": 2, "title": "`from intervals import *` doesn't work", "user": {"login": "jpvanhal", "id": 250983, "node_id": "MDQ6VXNlcjI1MDk4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/250983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpvanhal", "html_url": "https://github.com/jpvanhal", "followers_url": "https://api.github.com/users/jpvanhal/followers", "following_url": "https://api.github.com/users/jpvanhal/following{/other_user}", "gists_url": "https://api.github.com/users/jpvanhal/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpvanhal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpvanhal/subscriptions", "organizations_url": "https://api.github.com/users/jpvanhal/orgs", "repos_url": "https://api.github.com/users/jpvanhal/repos", "events_url": "https://api.github.com/users/jpvanhal/events{/privacy}", "received_events_url": "https://api.github.com/users/jpvanhal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-17T16:22:23Z", "updated_at": "2015-02-12T22:57:56Z", "closed_at": "2014-07-18T19:53:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` python\n>>> from intervals import *\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: 'type' object does not support indexing\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/intervals/issues/1", "repository_url": "https://api.github.com/repos/kvesteri/intervals", "labels_url": "https://api.github.com/repos/kvesteri/intervals/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/intervals/issues/1/comments", "events_url": "https://api.github.com/repos/kvesteri/intervals/issues/1/events", "html_url": "https://github.com/kvesteri/intervals/issues/1", "id": 25266317, "node_id": "MDU6SXNzdWUyNTI2NjMxNw==", "number": 1, "title": "Make intervals use infinity package", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-01-08T19:44:27Z", "updated_at": "2014-01-10T14:59:40Z", "closed_at": "2014-01-10T14:59:40Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}]}