{"total_count": 25, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/246", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/246/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/246/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/246", "id": 644613460, "node_id": "MDU6SXNzdWU2NDQ2MTM0NjA=", "number": 246, "title": "Split up util.get_file_details()", "user": {"login": "joshuagl", "id": 13888612, "node_id": "MDQ6VXNlcjEzODg4NjEy", "avatar_url": "https://avatars0.githubusercontent.com/u/13888612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshuagl", "html_url": "https://github.com/joshuagl", "followers_url": "https://api.github.com/users/joshuagl/followers", "following_url": "https://api.github.com/users/joshuagl/following{/other_user}", "gists_url": "https://api.github.com/users/joshuagl/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshuagl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshuagl/subscriptions", "organizations_url": "https://api.github.com/users/joshuagl/orgs", "repos_url": "https://api.github.com/users/joshuagl/repos", "events_url": "https://api.github.com/users/joshuagl/events{/privacy}", "received_events_url": "https://api.github.com/users/joshuagl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495826102, "node_id": "MDU6TGFiZWw0OTU4MjYxMDI=", "url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-24T13:25:31Z", "updated_at": "2020-08-03T09:49:46Z", "closed_at": "2020-08-03T09:49:45Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\n\r\n`util.get_file_details()` returns the length and hashes of the specified file. This makes a lot of sense for generating information about TUF targets, where the length and hashes of each target are required, but is potentially too costly a function when generating information about TUF metadata files for the snapshot role, where lengths and hashes are optional. Snapshot metadata may only want hashes, or only want lengths, and we don't want to force an adopter to implement their own subset of the functionality in `get_file_details()`.\r\n\r\nTherefore I suggest we factor out the two features of `get_file_details()` into two new utility functions \u2013 one for length and one for hashes \u2013 and have the existing `get_file_details()` wrap them.\r\n\r\n**Current behavior**:\r\n\r\nCallers wanting to compute length or hashes, not both, need to either accept the overhead of unwanted computations in `get_file_details()` (only a significant problem for hashes), or implement their own equivalent functionality.\r\n\r\n**Expected behavior**:\r\n\r\nA separate API is provided for at least hash computation, ideally hash and length computation, with `get_file_details()` conveniently wrapping both.\r\n`get_file_details(filepath, hash_algorithms=['sha256'], storage_backend=None)`\r\n`get_file_length(file_path, storage_backend=None)`\r\n`get_file_hashes(file_path, hash_algorithms=['sha256'], storage_backend=None)`\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/241", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/241/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/241/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/241", "id": 629057214, "node_id": "MDU6SXNzdWU2MjkwNTcyMTQ=", "number": 241, "title": "create_folder does nothing (and does not throw) if filepath is an empty string", "user": {"login": "joshuagl", "id": 13888612, "node_id": "MDQ6VXNlcjEzODg4NjEy", "avatar_url": "https://avatars0.githubusercontent.com/u/13888612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshuagl", "html_url": "https://github.com/joshuagl", "followers_url": "https://api.github.com/users/joshuagl/followers", "following_url": "https://api.github.com/users/joshuagl/following{/other_user}", "gists_url": "https://api.github.com/users/joshuagl/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshuagl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshuagl/subscriptions", "organizations_url": "https://api.github.com/users/joshuagl/orgs", "repos_url": "https://api.github.com/users/joshuagl/repos", "events_url": "https://api.github.com/users/joshuagl/events{/privacy}", "received_events_url": "https://api.github.com/users/joshuagl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-06-02T09:39:43Z", "updated_at": "2020-07-10T11:19:11Z", "closed_at": "2020-07-10T11:19:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\n\r\nIn order to support existing behaviour in tuf the `create_folder` method of `FilesystemBackend ` does nothing and does not raise an error if passed an empty string.\r\n\r\nThis feels like counter-intuitive behaviour that doesn't make sense for the storage backend. Ideally this would be resolved in tuf by removing calls to `create_folder` with an empty path i.e. performing any special casing in the caller.\r\n\r\nSee #240\r\n\r\n**Current behavior**:\r\n\r\nWhen `securesystemslib.storage.FilesystemBackend.create_folder()` is called with an empty string it returns immediately.\r\n\r\n**Expected behavior**:\r\n\r\nWhen `securesystemslib.storage.FilesystemBackend.create_folder()` is called with an empty string it raises an error, which better mimics the behaviour of `os.mkdir()`:\r\n```Python\r\n>>> os.mkdir('')\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n    os.mkdir('')\r\nFileNotFoundError: [Errno 2] No such file or directory: ''\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/239", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/239/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/239/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/239", "id": 626522341, "node_id": "MDU6SXNzdWU2MjY1MjIzNDE=", "number": 239, "title": "Better distinguish between keytype and scheme for ECDSA keys", "user": {"login": "adityasaky", "id": 8928778, "node_id": "MDQ6VXNlcjg5Mjg3Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8928778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adityasaky", "html_url": "https://github.com/adityasaky", "followers_url": "https://api.github.com/users/adityasaky/followers", "following_url": "https://api.github.com/users/adityasaky/following{/other_user}", "gists_url": "https://api.github.com/users/adityasaky/gists{/gist_id}", "starred_url": "https://api.github.com/users/adityasaky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adityasaky/subscriptions", "organizations_url": "https://api.github.com/users/adityasaky/orgs", "repos_url": "https://api.github.com/users/adityasaky/repos", "events_url": "https://api.github.com/users/adityasaky/events{/privacy}", "received_events_url": "https://api.github.com/users/adityasaky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-28T13:46:32Z", "updated_at": "2020-08-20T13:45:02Z", "closed_at": "2020-08-20T13:45:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\n\r\nThe key format provided by `securesystemslib` defines a `keytype` field and a `scheme` field. Currently, there is no distinction between these fields for ECDSA keys.\r\n\r\n**Current behavior**:\r\n\r\nECDSA keys have the following format:\r\n\r\n```\r\n{\r\n    \"keytype\" : \"ecdsa-sha2-nistp256\",\r\n    \"scheme\" : \"ecdsa-sha2-nistp256\",\r\n    \"keyval\" : {\"public\" : PUBLIC}\r\n}\r\n```\r\nAs noted in https://github.com/secure-systems-lab/securesystemslib/commit/761aded9968cb380004a86c44eb4796c061bca9c, `ecdsa-sha2-nistp384` is also supported by `securesystemslib`.\r\n\r\n**Expected behavior**:\r\n\r\nUpdate `securesystemslib` to use just `ecdsa` as `keytype` while retaining the current scheme formats. This also aligns with the key format for RSA keys where we have:\r\n\r\n```\r\n{\r\n    \"keytype\" : \"rsa\",\r\n    \"scheme\" : \"rsassa-pss-sha256\",\r\n    \"keyval\" : {\"public\" : PUBLIC}\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/220", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/220/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/220/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/220", "id": 576866946, "node_id": "MDU6SXNzdWU1NzY4NjY5NDY=", "number": 220, "title": "Remove `keys.format_metadata_to_key()`'s dependency on `settings.HASH_ALGORITHMS`", "user": {"login": "joshuagl", "id": 13888612, "node_id": "MDQ6VXNlcjEzODg4NjEy", "avatar_url": "https://avatars0.githubusercontent.com/u/13888612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshuagl", "html_url": "https://github.com/joshuagl", "followers_url": "https://api.github.com/users/joshuagl/followers", "following_url": "https://api.github.com/users/joshuagl/following{/other_user}", "gists_url": "https://api.github.com/users/joshuagl/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshuagl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshuagl/subscriptions", "organizations_url": "https://api.github.com/users/joshuagl/orgs", "repos_url": "https://api.github.com/users/joshuagl/repos", "events_url": "https://api.github.com/users/joshuagl/events{/privacy}", "received_events_url": "https://api.github.com/users/joshuagl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-06T11:19:47Z", "updated_at": "2020-06-25T11:11:54Z", "closed_at": "2020-06-25T11:11:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\n\r\nIt should be possible to control the hash algorithms used for generating keyids in `securesystemslib.keys.format_metadata_to_key()` without having to change package level settings in `securesystemslib.settings`\r\n\r\nRelated to #219 \r\n\r\n**Current behavior**:\r\n\r\nThe tuf reference implementation has code like the following, i.e. [repository_tool.py#L3062](https://github.com/theupdateframework/tuf/blob/679348ffcf99c8e6736e257f4c533f55f438a028/tuf/repository_tool.py#L3062)\r\n```\r\nhash_algorithms = securesystemslib.settings.HASH_ALGORITHMS\r\nsecuresystemslib.settings.HASH_ALGORITHMS = key_metadata['keyid_hash_algorithms']\r\nkey_object, keyids = securesystemslib.keys.format_metadata_to_key(key_metadata)\r\nsecuresystemslib.settings.HASH_ALGORITHMS = hash_algorithms\r\n```\r\n\r\n**Expected behavior**:\r\n\r\nformat_metadata_to_key can be called without having to change `securesystemslib.settings.HASH_ALGORITHMS`, something like:\r\n```\r\nkey_object, keyids = securesystemslib.keys.format_metadata_to_key(key_metadata, hash_algorithms)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/207", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/207/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/207/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/207", "id": 562498923, "node_id": "MDU6SXNzdWU1NjI0OTg5MjM=", "number": 207, "title": "Fix coveralls integration", "user": {"login": "lukpueh", "id": 589324, "node_id": "MDQ6VXNlcjU4OTMyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/589324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukpueh", "html_url": "https://github.com/lukpueh", "followers_url": "https://api.github.com/users/lukpueh/followers", "following_url": "https://api.github.com/users/lukpueh/following{/other_user}", "gists_url": "https://api.github.com/users/lukpueh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukpueh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukpueh/subscriptions", "organizations_url": "https://api.github.com/users/lukpueh/orgs", "repos_url": "https://api.github.com/users/lukpueh/repos", "events_url": "https://api.github.com/users/lukpueh/events{/privacy}", "received_events_url": "https://api.github.com/users/lukpueh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-10T11:27:44Z", "updated_at": "2020-02-19T14:31:34Z", "closed_at": "2020-02-19T14:31:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\nFor each Travis Ci build we submit coverage results to [sslib's coveralls.io page](https://coveralls.io/github/secure-systems-lab/securesystemslib) (see `after_success` in .travis.yml) . This has stopped working a couple of builds ago.\r\n\r\n**Current behavior**:\r\nFrom the [log](https://travis-ci.org/secure-systems-lab/securesystemslib/jobs/648349095#L301) of a recent Travis build:\r\n```\r\n0.18s$ coveralls\r\nSubmitting coverage to coveralls.io...\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coverage/sqldata.py\", line 1046, in execute\r\n    return self.con.execute(sql, parameters)\r\nsqlite3.DatabaseError: file is encrypted or is not a database\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.5.6/bin/coveralls\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coveralls/cli.py\", line 77, in main\r\n    result = coverallz.wear()\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coveralls/api.py\", line 176, in wear\r\n    json_string = self.create_report()\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coveralls/api.py\", line 192, in create_report\r\n    data = self.create_data()\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coveralls/api.py\", line 246, in create_data\r\n    self._data = {'source_files': self.get_coverage()}\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coveralls/api.py\", line 261, in get_coverage\r\n    workman.load()\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coverage/control.py\", line 412, in load\r\n    self._data.read()\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coverage/sqldata.py\", line 742, in read\r\n    with self._connect():       # TODO: doesn't look right\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coverage/sqldata.py\", line 297, in _connect\r\n    self._open_db()\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coverage/sqldata.py\", line 265, in _open_db\r\n    self._read_db()\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coverage/sqldata.py\", line 269, in _read_db\r\n    with self._dbs[get_thread_id()] as db:\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coverage/sqldata.py\", line 1024, in __enter__\r\n    self._connect()\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coverage/sqldata.py\", line 1012, in _connect\r\n    self.execute(\"pragma journal_mode=off\").close()\r\n  File \"/home/travis/virtualenv/python3.5.6/lib/python3.5/site-packages/coverage/sqldata.py\", line 1063, in execute\r\n    raise CoverageException(\"Couldn't use data file {!r}: {}\".format(self.filename, msg))\r\ncoverage.misc.CoverageException: Couldn't use data file '/home/travis/build/secure-systems-lab/securesystemslib/.coverage': Looks like a coverage 4.x data file. Are you mixing versions of coverage?\r\n```\r\n\r\n**Expected behavior**:\r\nSubmit coverage result to coveralls.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/194", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/194/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/194/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/194", "id": 538535069, "node_id": "MDU6SXNzdWU1Mzg1MzUwNjk=", "number": 194, "title": "Print expected type instead of its string representation", "user": {"login": "trishankatdatadog", "id": 33133073, "node_id": "MDQ6VXNlcjMzMTMzMDcz", "avatar_url": "https://avatars1.githubusercontent.com/u/33133073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trishankatdatadog", "html_url": "https://github.com/trishankatdatadog", "followers_url": "https://api.github.com/users/trishankatdatadog/followers", "following_url": "https://api.github.com/users/trishankatdatadog/following{/other_user}", "gists_url": "https://api.github.com/users/trishankatdatadog/gists{/gist_id}", "starred_url": "https://api.github.com/users/trishankatdatadog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trishankatdatadog/subscriptions", "organizations_url": "https://api.github.com/users/trishankatdatadog/orgs", "repos_url": "https://api.github.com/users/trishankatdatadog/repos", "events_url": "https://api.github.com/users/trishankatdatadog/events{/privacy}", "received_events_url": "https://api.github.com/users/trishankatdatadog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-16T16:58:17Z", "updated_at": "2020-01-06T14:25:13Z", "closed_at": "2020-01-06T14:25:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\n\r\nMoved from the [TUF repo](https://github.com/theupdateframework/tuf/issues/243). Also see [this comment](https://github.com/theupdateframework/tuf/issues/243#issuecomment-530754200).\r\n\r\n**Current behavior**:\r\n\r\nPresently, if a user passes an object O other a list to a Schema ListOf object, the error message will print the string representation S of O. Unfortunately, the error message is obscured when the S is large (e.g. O is a set with hundreds of thousands of strings).\r\n\r\n**Expected behavior**:\r\n\r\nI think the error message would be just as effective if we simply printed the type of O.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/182", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/182/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/182/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/182", "id": 495669153, "node_id": "MDU6SXNzdWU0OTU2NjkxNTM=", "number": 182, "title": "Dependency monitoring is broken", "user": {"login": "lukpueh", "id": 589324, "node_id": "MDQ6VXNlcjU4OTMyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/589324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukpueh", "html_url": "https://github.com/lukpueh", "followers_url": "https://api.github.com/users/lukpueh/followers", "following_url": "https://api.github.com/users/lukpueh/following{/other_user}", "gists_url": "https://api.github.com/users/lukpueh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukpueh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukpueh/subscriptions", "organizations_url": "https://api.github.com/users/lukpueh/orgs", "repos_url": "https://api.github.com/users/lukpueh/repos", "events_url": "https://api.github.com/users/lukpueh/events{/privacy}", "received_events_url": "https://api.github.com/users/lukpueh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-19T09:05:42Z", "updated_at": "2020-02-19T14:31:05Z", "closed_at": "2020-02-19T14:31:05Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\nsecuresystemslib configures [pyup](https://pyup.io) to perform dependency monitoring. \r\n\r\n**Current behavior**:\r\n- The pyup badge on the README has a status `unknown` and its link 404s.\r\n- The last pyup PR was in April '18 (see https://github.com/secure-systems-lab/securesystemslib/pull/143).\r\n\r\n**Expected behavior**:\r\nConfigure dependency monitoring to regularly und automatically run securesystemslib's test suite against the latest versions of its dependencies.\r\n\r\n*See [tuf](https://github.com/theupdateframework/tuf) for a working pyup configuration, or in-toto which revises tuf's dependency monitoring and uses `dependabot` instead of pyup. (https://github.com/in-toto/in-toto/pull/294)*\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/180", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/180/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/180/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/180", "id": 492697868, "node_id": "MDU6SXNzdWU0OTI2OTc4Njg=", "number": 180, "title": "TempFile doesn't behave like a Python file object", "user": {"login": "joshuagl", "id": 13888612, "node_id": "MDQ6VXNlcjEzODg4NjEy", "avatar_url": "https://avatars0.githubusercontent.com/u/13888612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshuagl", "html_url": "https://github.com/joshuagl", "followers_url": "https://api.github.com/users/joshuagl/followers", "following_url": "https://api.github.com/users/joshuagl/following{/other_user}", "gists_url": "https://api.github.com/users/joshuagl/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshuagl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshuagl/subscriptions", "organizations_url": "https://api.github.com/users/joshuagl/orgs", "repos_url": "https://api.github.com/users/joshuagl/repos", "events_url": "https://api.github.com/users/joshuagl/events{/privacy}", "received_events_url": "https://api.github.com/users/joshuagl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-09-12T09:42:34Z", "updated_at": "2019-09-19T10:06:50Z", "closed_at": "2019-09-19T10:06:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This is replicating the content of theupdateframework/tuf#160, as the `TempFile` class is now implemented in securesystemslib, not tuf.\r\n\r\n**Description of issue or feature request**:\r\n\r\n`TempFile` isn't a [file object](https://docs.python.org/3/glossary.html#term-file-object) and its methods aren't consistent with similar methods on a [file object](https://docs.python.org/3/glossary.html#term-file-object).\r\n\r\n**Current behavior**:\r\n\r\nThere are inconsistencies between file operations on a `securesystemslib.util.TempFile` and [file object](https://docs.python.org/3/glossary.html#term-file-object)s from the Python standard library, for example:\r\n\r\n```python\r\n>>> import securesystemslib.util\r\n>>> tf = securesystemslib.util.TempFile()\r\n>>> import tempfile\r\n>>> ptf = tempfile.TemporaryFile()\r\n>>> f = open('tmpfile', 'w+')\r\n>>> tf.write(b'Hello, world!')\r\n>>> ptf.write(b'Hello, world!')\r\n13\r\n>>> f.write('Hello, world!')\r\n13\r\n>>> tf.read(3)\r\nb''\r\n>>> ptf.read(3)\r\nb''\r\n>>> f.read(3)\r\n''\r\n>>> tf.read()\r\nb'Hello, world!'\r\n>>> ptf.read()\r\nb''\r\n>>> f.read()\r\n''\r\n>>> tf.tell()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'TempFile' object has no attribute 'tell'\r\n>>> ptf.tell()\r\n13\r\n>>> f.tell()\r\n13\r\n>>> tf.seek(0)\r\n>>> ptf.seek(0)\r\n0\r\n>>> f.seek(0)\r\n0\r\n>>> tf.seek(0)\r\n>>> ptf.seek(0)\r\n0\r\n>>> f.seek(0)\r\n0\r\n>>> tf.read(3)\r\nb'Hel'\r\n>>> ptf.read(3)\r\nb'Hel'\r\n>>> f.read(3)\r\n'Hel'\r\n>>> tf.read()\r\nb'Hello, world!'\r\n>>> ptf.read()\r\nb'lo, world!'\r\n>>> f.read()\r\n'lo, world!'\r\n```\r\n\r\n**Expected behavior**:\r\n\r\nUsers familiar with Python will expect `TempFile` to behave like a [file object](https://docs.python.org/3/glossary.html#term-file-object)\r\n\r\nIt would be a usability improvement for Python developers if `TempFile` behaved like a [file object](https://docs.python.org/3/glossary.html#term-file-object). It should probably implement [`io.FileIO`](https://docs.python.org/3/library/io.html#io.FileIO).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/179", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/179/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/179/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/179", "id": 492693858, "node_id": "MDU6SXNzdWU0OTI2OTM4NTg=", "number": 179, "title": "Revise extra dependency handling", "user": {"login": "lukpueh", "id": 589324, "node_id": "MDQ6VXNlcjU4OTMyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/589324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukpueh", "html_url": "https://github.com/lukpueh", "followers_url": "https://api.github.com/users/lukpueh/followers", "following_url": "https://api.github.com/users/lukpueh/following{/other_user}", "gists_url": "https://api.github.com/users/lukpueh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukpueh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukpueh/subscriptions", "organizations_url": "https://api.github.com/users/lukpueh/orgs", "repos_url": "https://api.github.com/users/lukpueh/repos", "events_url": "https://api.github.com/users/lukpueh/events{/privacy}", "received_events_url": "https://api.github.com/users/lukpueh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-12T09:34:44Z", "updated_at": "2020-02-10T11:44:10Z", "closed_at": "2020-02-10T11:44:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "*[Updated on Jan 23, 2020]*\r\n\r\n**Description of issue or feature request**:\r\n\r\nsecuresystemslib lists some dependencies that require C-code (`cryptography` requires`openssl`, `pynacl` requires `libsodium`) as optional to allow for a pure-python installation.  The runtime handling of missing optional dependencies should be revised.\r\n\r\n**Current behavior**:\r\n`cryptography` and `pynacl` are listed as optional (extra) dependencies, but `securesystemslib` does not  fare (consistently) well, if installed without them.\r\n\r\n**Expected behavior**:\r\n- ~Public facing modules (e.g. `interface.py` and `keys.py`) must be importable, even if the optional dependencies are not installed.~ Fixed with #200\r\n- ~Each public facing function always should be callable and present meaningful user-feedback if an optional dependency that is required for that function is not installed.~ Fixed with #200\r\n\r\n- Also address or keep in mind recently merged or pending functionality, that has non-pure Python dependencies (#174, #169, #170). \r\n\r\n-~*Optional*: `colorama` was made a strict dependency  in #178 to quickfix #155. @SantiagoTorres, to consider making it a optional again (with respect to required adoptions as outlined above).~ Fixed with #200 \r\n\r\n- It would be nice to fine-tune code coverage measurement (see https://github.com/secure-systems-lab/securesystemslib/pull/200#discussion_r368568724 ff.)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/167", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/167/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/167/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/167", "id": 443763120, "node_id": "MDU6SXNzdWU0NDM3NjMxMjA=", "number": 167, "title": "Add missing git tag for 0.11.3 release", "user": {"login": "koobs", "id": 1011612, "node_id": "MDQ6VXNlcjEwMTE2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1011612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koobs", "html_url": "https://github.com/koobs", "followers_url": "https://api.github.com/users/koobs/followers", "following_url": "https://api.github.com/users/koobs/following{/other_user}", "gists_url": "https://api.github.com/users/koobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/koobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koobs/subscriptions", "organizations_url": "https://api.github.com/users/koobs/orgs", "repos_url": "https://api.github.com/users/koobs/repos", "events_url": "https://api.github.com/users/koobs/events{/privacy}", "received_events_url": "https://api.github.com/users/koobs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-14T07:53:34Z", "updated_at": "2019-09-09T12:52:08Z", "closed_at": "2019-09-09T12:52:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the GitHub sources to grab packages tests until they ship in the PyPI sdist (See #166), I noticed the git tag for the latest 0.11.3 release is missing.\r\n\r\nThis is a request to add that git tag for the commit hash which corresponds to the currently released 0.11.3 tarball on PyPI.\r\n\r\nOur FreeBSD ports (by default), use the canonical version (0.11.3) as an argument to pass to GitHub's API to fetch a specific version of the sources. In the absence of a matching git tag, we need to use a commit hash, which can be unreliable (not *exactly* the specific version uploaded to PyPI) \r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/166", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/166/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/166/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/166", "id": 443761093, "node_id": "MDU6SXNzdWU0NDM3NjEwOTM=", "number": 166, "title": "Add LICENSE file and tests to PyPI sdist", "user": {"login": "koobs", "id": 1011612, "node_id": "MDQ6VXNlcjEwMTE2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1011612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koobs", "html_url": "https://github.com/koobs", "followers_url": "https://api.github.com/users/koobs/followers", "following_url": "https://api.github.com/users/koobs/following{/other_user}", "gists_url": "https://api.github.com/users/koobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/koobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koobs/subscriptions", "organizations_url": "https://api.github.com/users/koobs/orgs", "repos_url": "https://api.github.com/users/koobs/repos", "events_url": "https://api.github.com/users/koobs/events{/privacy}", "received_events_url": "https://api.github.com/users/koobs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-14T07:48:33Z", "updated_at": "2019-07-02T07:38:19Z", "closed_at": "2019-07-02T07:38:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Downstream packagers like to use PyPI for (source) distribution files, and have those sources contain a LICENSE file and tests so we can distribute them along with any packages we ship to users, and properly QA the package locally.\r\n\r\nAt least: add `LICENSE` and graft `tests/` in `MANIFEST.in`, but preferably also add all requirements files and tox.ini/.travis.yml as they are good references for packagers to use, particularly as dependencies are often inconsistently/incorrectly declared in different places.\r\n\r\nOur case: I'm updating the existing FreeBSD port for tuf, and currently creating a port for securesystemslib for it to depend on.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/161", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/161/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/161/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/161", "id": 391277219, "node_id": "MDU6SXNzdWUzOTEyNzcyMTk=", "number": 161, "title": "Boundary between securesystemslib and TUF is off.", "user": {"login": "awwad", "id": 13263928, "node_id": "MDQ6VXNlcjEzMjYzOTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13263928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awwad", "html_url": "https://github.com/awwad", "followers_url": "https://api.github.com/users/awwad/followers", "following_url": "https://api.github.com/users/awwad/following{/other_user}", "gists_url": "https://api.github.com/users/awwad/gists{/gist_id}", "starred_url": "https://api.github.com/users/awwad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awwad/subscriptions", "organizations_url": "https://api.github.com/users/awwad/orgs", "repos_url": "https://api.github.com/users/awwad/repos", "events_url": "https://api.github.com/users/awwad/events{/privacy}", "received_events_url": "https://api.github.com/users/awwad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-14T21:00:42Z", "updated_at": "2019-09-06T08:25:01Z", "closed_at": "2019-09-06T08:25:01Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Some of the functions in securesystemslib are really pieces of TUF that I don't think are of use to others and don't belong here.\r\n\r\nSome examples that IIUC don't belong in securesystemslib:\r\n- util.ensure_all_targets_allowed(rolename, list_of_targets, parent_delegations)\r\n- util.find_delegated_role(roles, delegated_role)\r\n- formats.NUMBINS_SCHEMA\r\n- formats.TARGETS_SCHEMA\r\n- formats.SNAPSHOT_SCHEMA\r\n- formats.TIMESTAMP_SCHEMA\r\n- formats.ROOT_SCHEMA\r\n- formats.MIRRORDICT_SCHEMA\r\n- formats.MIRRORLIST_SCHEMA\r\n\r\nOther functions that could conceivably be useful in general have zero context within the module:\r\n- util.paths_are_consistent_with_hash_prefixes(paths, path_hash_prefixes)\r\n- formats.PROJECT_CFG_SCHEMA\r\n\r\nThings I'm less sure about:\r\n- formats.THRESHOLD_SCHEMA\r\n- exceptions.RoleAlreadyExistsError\r\n- exceptions.UnknownRoleError\r\n- formats.ROLENAME_SCHEMA\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/153", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/153/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/153/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/153", "id": 330792944, "node_id": "MDU6SXNzdWUzMzA3OTI5NDQ=", "number": 153, "title": "Lack of colorama hard dependency", "user": {"login": "SantiagoTorres", "id": 3579933, "node_id": "MDQ6VXNlcjM1Nzk5MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3579933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SantiagoTorres", "html_url": "https://github.com/SantiagoTorres", "followers_url": "https://api.github.com/users/SantiagoTorres/followers", "following_url": "https://api.github.com/users/SantiagoTorres/following{/other_user}", "gists_url": "https://api.github.com/users/SantiagoTorres/gists{/gist_id}", "starred_url": "https://api.github.com/users/SantiagoTorres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SantiagoTorres/subscriptions", "organizations_url": "https://api.github.com/users/SantiagoTorres/orgs", "repos_url": "https://api.github.com/users/SantiagoTorres/repos", "events_url": "https://api.github.com/users/SantiagoTorres/events{/privacy}", "received_events_url": "https://api.github.com/users/SantiagoTorres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-08T20:28:18Z", "updated_at": "2019-09-10T14:19:34Z", "closed_at": "2019-09-10T14:19:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\nThe current release blows up because `colorama` is not a dependency. Although it *should* get pulled in by either `cryptography` or `pynacl`, there is no information to describe that is the issue when using securesystemslib.\r\n\r\nFor example, this is the test log from `in-toto` using the latest securesystemslib (given that it doesn't hard depend on either library)\r\n\r\n```\r\n======================================================================\r\nERROR: tests.test_runlib (unittest.loader._FailedTest)\r\n----------------------------------------------------------------------\r\nImportError: Failed to import test module: tests.test_runlib\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.6/unittest/loader.py\", line 428, in _find_test_path\r\n    module = self._get_module_from_name(name)\r\n  File \"/usr/lib64/python3.6/unittest/loader.py\", line 369, in _get_module_from_name\r\n    __import__(name)\r\n  File \"/home/santiago/Documents/personal/programas/in-toto/in-toto/tests/test_runlib.py\", line 29, in <module>\r\n    from in_toto.models.metadata import Metablock\r\n  File \"/home/santiago/Documents/personal/programas/in-toto/in-toto/in_toto/models/metadata.py\", line 34, in <module>\r\n    from in_toto.models.layout import Layout\r\n  File \"/home/santiago/Documents/personal/programas/in-toto/in-toto/in_toto/models/layout.py\", line 49, in <module>\r\n    import securesystemslib.interface\r\n  File \"/home/santiago/Documents/personal/programas/in-toto/in-toto/.tox/py36/lib/python3.6/site-packages/securesystemslib/interface.py\", line 51, in <module>\r\n    from colorama import Fore\r\nModuleNotFoundError: No module named 'colorama'\r\n```\r\n\r\nNeedless to say, it's rather dangerous to assume that `cryptography` or `pynacl` will depend on colorama forever. Worse than that, I'm assuming that we may add support for other libraries which may or may not pull `colorama` in.\r\n\r\n**Current behavior**:\r\nThing breaks unless you explicitly:\r\n\r\n1. Install a dependency that pulls `colorama`, such as `pynacl` or `cryptography`.\r\n2. Install colorama explicitly to compensate for this lack of hard-dependency\r\n\r\n**Expected behavior**:\r\nThe library installs itself with everything it needs and doesn't make any assumptions of the packages that will be pulled and their upstream dependencies.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/88", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/88/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/88/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/88", "id": 290583668, "node_id": "MDU6SXNzdWUyOTA1ODM2Njg=", "number": 88, "title": "Enable password confirmation when generating keys", "user": {"login": "vladimir-v-diaz", "id": 3520883, "node_id": "MDQ6VXNlcjM1MjA4ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3520883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladimir-v-diaz", "html_url": "https://github.com/vladimir-v-diaz", "followers_url": "https://api.github.com/users/vladimir-v-diaz/followers", "following_url": "https://api.github.com/users/vladimir-v-diaz/following{/other_user}", "gists_url": "https://api.github.com/users/vladimir-v-diaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladimir-v-diaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladimir-v-diaz/subscriptions", "organizations_url": "https://api.github.com/users/vladimir-v-diaz/orgs", "repos_url": "https://api.github.com/users/vladimir-v-diaz/repos", "events_url": "https://api.github.com/users/vladimir-v-diaz/events{/privacy}", "received_events_url": "https://api.github.com/users/vladimir-v-diaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-22T19:19:47Z", "updated_at": "2018-01-31T18:13:54Z", "closed_at": "2018-01-31T18:13:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\n\r\nThe `generate_and_write_XXX_keypair()` functions should prompt for a password confirmation.  The `confirm` flag is incorrectly set to False.  See https://github.com/secure-systems-lab/securesystemslib/blob/07bf160803285c449e9f75e519aad588223b2954/securesystemslib/interface.py#L175-L177.\r\n\r\n**Current behavior**:\r\n```\r\n>>> generate_and_write_rsa_keypair(\"keystore/root_key2\")\r\nEnter a password for the RSA key:\r\n```\r\n\r\n**Expected behavior**:\r\n```\r\n>>> generate_and_write_rsa_keypair(\"keystore/root_key2\")\r\nEnter a password for the RSA key:\r\nConfirm:\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/75", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/75/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/75/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/75", "id": 270771937, "node_id": "MDU6SXNzdWUyNzA3NzE5Mzc=", "number": 75, "title": "Remove references to TUF", "user": {"login": "vladimir-v-diaz", "id": 3520883, "node_id": "MDQ6VXNlcjM1MjA4ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3520883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladimir-v-diaz", "html_url": "https://github.com/vladimir-v-diaz", "followers_url": "https://api.github.com/users/vladimir-v-diaz/followers", "following_url": "https://api.github.com/users/vladimir-v-diaz/following{/other_user}", "gists_url": "https://api.github.com/users/vladimir-v-diaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladimir-v-diaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladimir-v-diaz/subscriptions", "organizations_url": "https://api.github.com/users/vladimir-v-diaz/orgs", "repos_url": "https://api.github.com/users/vladimir-v-diaz/repos", "events_url": "https://api.github.com/users/vladimir-v-diaz/events{/privacy}", "received_events_url": "https://api.github.com/users/vladimir-v-diaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-02T19:06:00Z", "updated_at": "2019-09-06T08:26:05Z", "closed_at": "2019-09-06T08:26:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\n\r\n`securesystemslib` was not always a library. Many of its modules and functions previously lived in the [TUF repository](https://github.com/theupdateframework/tuf).  Unfortunately, there are still references to TUF in some of the `securesystemslib` comments.\r\n\r\n**Current behavior**:\r\nThere are references to TUF in comments and there exist schemata that are only relevant to TUF.  For example:\r\nhttps://github.com/secure-systems-lab/securesystemslib/blob/d1116044cfd0a9fd04077ececef9f8c148136f25/securesystemslib/formats.py#L18-L24\r\n\r\nhttps://github.com/secure-systems-lab/securesystemslib/blob/d1116044cfd0a9fd04077ececef9f8c148136f25/securesystemslib/formats.py#L326-L334\r\n\r\n**Expected behavior**:\r\nTUF references in `securesystemslib` should be removed and TUF-related schemata relocated to the TUF repository.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/71", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/71/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/71/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/71", "id": 268146717, "node_id": "MDU6SXNzdWUyNjgxNDY3MTc=", "number": 71, "title": "Python 3.3 and 3.5 not tested under Travis", "user": {"login": "vladimir-v-diaz", "id": 3520883, "node_id": "MDQ6VXNlcjM1MjA4ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3520883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladimir-v-diaz", "html_url": "https://github.com/vladimir-v-diaz", "followers_url": "https://api.github.com/users/vladimir-v-diaz/followers", "following_url": "https://api.github.com/users/vladimir-v-diaz/following{/other_user}", "gists_url": "https://api.github.com/users/vladimir-v-diaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladimir-v-diaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladimir-v-diaz/subscriptions", "organizations_url": "https://api.github.com/users/vladimir-v-diaz/orgs", "repos_url": "https://api.github.com/users/vladimir-v-diaz/repos", "events_url": "https://api.github.com/users/vladimir-v-diaz/events{/privacy}", "received_events_url": "https://api.github.com/users/vladimir-v-diaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-24T18:54:30Z", "updated_at": "2019-08-08T09:22:50Z", "closed_at": "2019-08-08T09:22:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\nPull request #59 temporarily excluded testing under Python versions 3.3 and 3.5 due to issues with Travis. Although testing under Tox does cover all of our supported Python versions, it is best if continuous integration covered all supported environments.  As recommended in https://github.com/secure-systems-lab/securesystemslib/pull/59#issuecomment-339089728, we should open a ticket to keep track of this issue.\r\n\r\n**Current behavior**:\r\nTravis runs our unit tests under Python versions 2.7, 3.4, and 3.6.\r\n\r\n**Expected behavior**:\r\nTravis should run our unit tests under Python versions 2.7, 3.3, 3.4, 3.5, and 3.6.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/69", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/69/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/69/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/69", "id": 267266312, "node_id": "MDU6SXNzdWUyNjcyNjYzMTI=", "number": 69, "title": "requirements.txt contains dev requirements", "user": {"login": "SantiagoTorres", "id": 3579933, "node_id": "MDQ6VXNlcjM1Nzk5MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3579933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SantiagoTorres", "html_url": "https://github.com/SantiagoTorres", "followers_url": "https://api.github.com/users/SantiagoTorres/followers", "following_url": "https://api.github.com/users/SantiagoTorres/following{/other_user}", "gists_url": "https://api.github.com/users/SantiagoTorres/gists{/gist_id}", "starred_url": "https://api.github.com/users/SantiagoTorres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SantiagoTorres/subscriptions", "organizations_url": "https://api.github.com/users/SantiagoTorres/orgs", "repos_url": "https://api.github.com/users/SantiagoTorres/repos", "events_url": "https://api.github.com/users/SantiagoTorres/events{/privacy}", "received_events_url": "https://api.github.com/users/SantiagoTorres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-20T18:37:04Z", "updated_at": "2017-10-24T18:40:03Z", "closed_at": "2017-10-24T18:40:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Description of issue or feature request**:\r\nthe requirements.txt file should document what packages are needed in order to *run* or *use* this library, but it contains dependencies that are used for testing.\r\n\r\n**Current behavior**: I should be able to run `pip install -r requirements.txt` if I just want to *use* the library. I get a bunch of dev packages pulled in that don't seem to be necessary (coverage/tox/coveralls)\r\n\r\n**Expected behavior**: I should only pull the minimal amount of packages to install. I was imagining that we should only depend on pynacl/pycrypto or so.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/56", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/56/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/56/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/56", "id": 257103848, "node_id": "MDU6SXNzdWUyNTcxMDM4NDg=", "number": 56, "title": "Discontinue pycrypto support", "user": {"login": "lukpueh", "id": 589324, "node_id": "MDQ6VXNlcjU4OTMyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/589324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukpueh", "html_url": "https://github.com/lukpueh", "followers_url": "https://api.github.com/users/lukpueh/followers", "following_url": "https://api.github.com/users/lukpueh/following{/other_user}", "gists_url": "https://api.github.com/users/lukpueh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukpueh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukpueh/subscriptions", "organizations_url": "https://api.github.com/users/lukpueh/orgs", "repos_url": "https://api.github.com/users/lukpueh/repos", "events_url": "https://api.github.com/users/lukpueh/events{/privacy}", "received_events_url": "https://api.github.com/users/lukpueh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-12T16:20:45Z", "updated_at": "2017-10-03T21:04:11Z", "closed_at": "2017-10-03T21:04:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "*pycrypto* which we provided as crypto backend alongside *pyca/cryptography*  is no longer maintained ([tip of *master* 3 years old](https://github.com/Legrandin/pycryptodome/commits/master) and [usage discouraged in issue tracker](https://github.com/dlitz/pycrypto/issues/238)).\r\n\r\nWe should probably replace it with the drop-in replacement [*pycryptodome*](https://github.com/Legrandin/pycryptodome) or drop it altogether?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/55", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/55/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/55/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/55", "id": 256852788, "node_id": "MDU6SXNzdWUyNTY4NTI3ODg=", "number": 55, "title": "Support GPG and SSH keys", "user": {"login": "lukpueh", "id": 589324, "node_id": "MDQ6VXNlcjU4OTMyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/589324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukpueh", "html_url": "https://github.com/lukpueh", "followers_url": "https://api.github.com/users/lukpueh/followers", "following_url": "https://api.github.com/users/lukpueh/following{/other_user}", "gists_url": "https://api.github.com/users/lukpueh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukpueh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukpueh/subscriptions", "organizations_url": "https://api.github.com/users/lukpueh/orgs", "repos_url": "https://api.github.com/users/lukpueh/repos", "events_url": "https://api.github.com/users/lukpueh/events{/privacy}", "received_events_url": "https://api.github.com/users/lukpueh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-11T21:48:31Z", "updated_at": "2019-09-06T13:50:17Z", "closed_at": "2019-09-06T13:50:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "*securesystemslib* provides an API to import and export public and private keys in PEM (RSA, ECDSA, also cf. #54) or in a proprietary format (Ed25519).\r\n\r\nIt would be convenient to extend the API so that users can load, e.g. their existing GPG or SSH keys. Note that *securesystemslib* does not necessarily have to provide an API to generate those keys. As @aaaaalbert has mentioned, user might even prefer to use their own well-known toolchain.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/54", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/54/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/54/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/54", "id": 256786589, "node_id": "MDU6SXNzdWUyNTY3ODY1ODk=", "number": 54, "title": "PEM parsing is broken", "user": {"login": "lukpueh", "id": 589324, "node_id": "MDQ6VXNlcjU4OTMyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/589324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukpueh", "html_url": "https://github.com/lukpueh", "followers_url": "https://api.github.com/users/lukpueh/followers", "following_url": "https://api.github.com/users/lukpueh/following{/other_user}", "gists_url": "https://api.github.com/users/lukpueh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukpueh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukpueh/subscriptions", "organizations_url": "https://api.github.com/users/lukpueh/orgs", "repos_url": "https://api.github.com/users/lukpueh/repos", "events_url": "https://api.github.com/users/lukpueh/events{/privacy}", "received_events_url": "https://api.github.com/users/lukpueh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-09-11T17:43:49Z", "updated_at": "2019-09-09T13:27:11Z", "closed_at": "2019-09-09T13:27:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**High-level problem**\r\nWe currently have an incomplete view on `PEM` formats. Several functions in the modules `pycrypto_keys`, `pyca_crypto_keys`, `ecdsa_keys` and  `keys` expect `PEM` header and footer to be one of:\r\n\r\n```\r\n-----BEGIN PUBLIC KEY----- ... -----END PUBLIC KEY-----\r\n-----BEGIN RSA PUBLIC KEY----- ... -----END RSA PUBLIC KEY-----\r\n-----BEGIN RSA PRIVATE KEY----- ... -----END RSA PRIVATE KEY-----\r\n-----BEGIN EC PRIVATE KEY----- ... -----END EC PRIVATE KEY-----\r\n```\r\n\r\nHowever, there are many values for `VALUE` in `-----BEGIN {VALUE} ... -----END {VALUE}-----`, as can be seen e.g. in [openssl's pem.h](https://github.com/openssl/openssl/blob/master/include/openssl/pem.h#L27-L51).\r\n\r\n\r\n**Breaking example**\r\nSecuresystemlib's default crypto library [`cryptography`](https://cryptography.io) has changed the PEM header for encrypted RSA private keys from `PKSC#5` to `PKSC#8` (without our noticing):\r\n\r\n```shell\r\n# PKCS#5 header example\r\n-----BEGIN RSA PRIVATE KEY-----\r\nProc-Type: 4,ENCRYPTED\r\nDEK-Info: DES-EDE3-CBC,7D3EC0DB6DFBB404 ....\r\n\r\n# PKCS#8 header example\r\n-----BEGIN ENCRYPTED PRIVATE KEY----- ....\r\n```\r\n\r\nAs a consequence a newly created encrypted RSA private key is not recognized as such anymore. \r\n\r\n```python\r\nfrom securesystemslib import keys\r\nrsa_key = keys.generate_rsa_key()\r\nrsa_private = rsa_key[\"keyval\"][\"private\"]\r\nprivate_pem = keys.create_rsa_encrypted_pem(rsa_private, \"1234\")\r\nkeys.is_pem_private(private_pem)\r\n# Returns `False` (should be `True`)\r\n```\r\n*Note: The unit tests use a [key that was generated before the update](https://github.com/secure-systems-lab/securesystemslib/blob/master/tests/data/keystore/rsa_key) and therefor pass.*\r\n\r\n\r\n**Solutions**\r\n1. Update our `PEM` parsing functions to account for *all* formats\r\n*Pro:* Quick/Easy fix\r\n*Con:* IMHO bad documentation of PEM formats, seems like a shortcut that can easily break\r\n\r\n2. Remove `PEM` parsing functions in securesystemslib and rely on crypto libraries \r\n*Pro:* Seems like a more stable approach\r\n*Con:* We support 2 crypto libraries (cryptography and pycrypto) and 3 key types (rsa, ecdsa, ed25519). And the affected functions are currently used to decide which crypto library functions should be called. Hence, this fix would require several larger changes.\r\n\r\nDespite all, I would prefer solution (2).\r\n\r\n\r\n**Further readings**\r\nBelow are random sources about PEM, PKCS5 and PKCS8. I didn't find the related RFC's very helpful, but I'll probably have to dig deeper:\r\n\r\n- [PKCS#8 on wikipedia](https://en.wikipedia.org/wiki/PKCS_8)\r\n- [More info on PKCS#5 and 8](https://github.com/kjur/jsrsasign/wiki/Tutorial-for-PKCS5-and-PKCS8-PEM-private-key-formats-differences)\r\n- [Interesting discussion about PKCS in `pyca`](https://github.com/pyca/pyopenssl/issues/206)\r\n- [`pycrypto` PEM loading](https://www.dlitz.net/software/pycrypto/api/current/Crypto.PublicKey.RSA.RSAImplementation-class.html#importKey)\r\n- [`cryptography` PEM loading](https://cryptography.io/en/latest/hazmat/primitives/asymmetric/rsa/#key-loading)\r\n- [PEM formats in openssl](https://github.com/openssl/openssl/blob/master/include/openssl/pem.h#L27-L51)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/51", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/51/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/51/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/51", "id": 254113008, "node_id": "MDU6SXNzdWUyNTQxMTMwMDg=", "number": 51, "title": "Signature verification ignores the Key ID in the signature", "user": {"login": "awwad", "id": 13263928, "node_id": "MDQ6VXNlcjEzMjYzOTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13263928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awwad", "html_url": "https://github.com/awwad", "followers_url": "https://api.github.com/users/awwad/followers", "following_url": "https://api.github.com/users/awwad/following{/other_user}", "gists_url": "https://api.github.com/users/awwad/gists{/gist_id}", "starred_url": "https://api.github.com/users/awwad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awwad/subscriptions", "organizations_url": "https://api.github.com/users/awwad/orgs", "repos_url": "https://api.github.com/users/awwad/repos", "events_url": "https://api.github.com/users/awwad/events{/privacy}", "received_events_url": "https://api.github.com/users/awwad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-30T19:42:11Z", "updated_at": "2017-09-19T15:54:42Z", "closed_at": "2017-09-19T15:54:42Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "### Summary\r\n`keys.verify_signature` takes a **key** and a **signature** (along with the data over which the signature may have been signed). Signature verification determines only whether or not the signature value (`sig`) can have been produced by the provided **key**. It does **not** check whether or not the signature itself reports that it was made using that key, so the keyid listed in the signature provided need not match the key in order for the signature to be deemed valid. Correct behavior, I would say, is to deem the signature invalid if the key id it lists is not the key id that is expected, without bothering to determine if the signature value ('sig') is correct.\r\n\r\n### Example\r\nSuppose I have two keys, k1 and k2. I use k1 to sign data, and then change the signature dictionary to claim that I used k2 by listing k2's key id, even though I signed with k1. I send you the signature. You want to know if it was generated by k1. You run `keys.verify_signature` and everything checks out, even though the signature incorrectly claims to be a signature by k2.\r\n\r\n### Security Implications\r\nNote that this can mean that an attacker could have a signature deemed valid without knowing what the right keyid is, and that, in upstream code, a single signature can be deemed valid if it could have been generated by any acceptable key, without the attacker having to choose one key or attempt multiple times listing different key ids. That problem depends on the behavior of upstream code, though, which can be written to eliminate that possibility.\r\n\r\nWhile this may not be a **large** security issue -- the signature value itself must still match a signature produced by the provided key over the provided data -- it's confusing, may break assumptions in upstream code, and may have **some** security impact upstream (where you can use the same signature in the same signature verification request to try to match any acceptable key's signature without choosing a single key).\r\n\r\nhttps://github.com/secure-systems-lab/securesystemslib/blob/433670b84f9d1490bacfcd2ba67b9ec77df0d970/securesystemslib/keys.py#L940-L946\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/44", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/44/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/44/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/44", "id": 244406087, "node_id": "MDU6SXNzdWUyNDQ0MDYwODc=", "number": 44, "title": "Inconsistent passphrase treatment on key generation / loading", "user": {"login": "awwad", "id": 13263928, "node_id": "MDQ6VXNlcjEzMjYzOTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13263928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awwad", "html_url": "https://github.com/awwad", "followers_url": "https://api.github.com/users/awwad/followers", "following_url": "https://api.github.com/users/awwad/following{/other_user}", "gists_url": "https://api.github.com/users/awwad/gists{/gist_id}", "starred_url": "https://api.github.com/users/awwad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awwad/subscriptions", "organizations_url": "https://api.github.com/users/awwad/orgs", "repos_url": "https://api.github.com/users/awwad/repos", "events_url": "https://api.github.com/users/awwad/events{/privacy}", "received_events_url": "https://api.github.com/users/awwad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-20T15:33:55Z", "updated_at": "2017-08-31T14:59:31Z", "closed_at": "2017-08-31T14:59:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "## Bug\r\nFirst, if you use `repository_tool` and try generating an rsa key (`rt.generate_and_write_rsa_keypair`) and don't provide a passphrase (by just hitting enter at the prompts), `repository_tool` generates an unencrypted PEM file (always using pycrypto -- see #43).\r\n\r\nIt makes some sense to support unencrypted key files, so this is fine. Two problems result from the code, though, aside from those mentioned in #43:\r\n- There is no way provided to instruct `repository_tool` to tell **pyca_crypto** to try to load an unencrypted PEM file, so the keys you just generated (with **pycrypto**) become unusable.\r\n- There is no way provided to instruct `repository_tool` to tell **pyca_crypto** to generate an unencrypted PEM file.\r\n\r\n## Analysis and Steps\r\nThree options are desired for key generation using `repository_tool.generate_and_write_rsa_keypair` and `repository_tool.import_rsa_privatekey_from_file` and their intersection is complicating things:\r\n- no passphrase; don't encrypt the PEM file  /  load an unencrypted PEM file\r\n- here's a passphrase to use; encrypt the created PEM file or load the encrypted PEM file\r\n- prompt me for a passphrase; encrypt the created PEM file or load the encrypted PEM file\r\n\r\nIt must be possible to do each (assuming we support unencrypted PEM files) and clear to the user how to do each. Further, it must be consistent behaviorally across calls to pyca_crypto and pycrypto.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/43", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/43/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/43/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/43", "id": 244402065, "node_id": "MDU6SXNzdWUyNDQ0MDIwNjU=", "number": 43, "title": "Always using pycrypto for key generation", "user": {"login": "awwad", "id": 13263928, "node_id": "MDQ6VXNlcjEzMjYzOTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13263928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awwad", "html_url": "https://github.com/awwad", "followers_url": "https://api.github.com/users/awwad/followers", "following_url": "https://api.github.com/users/awwad/following{/other_user}", "gists_url": "https://api.github.com/users/awwad/gists{/gist_id}", "starred_url": "https://api.github.com/users/awwad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awwad/subscriptions", "organizations_url": "https://api.github.com/users/awwad/orgs", "repos_url": "https://api.github.com/users/awwad/repos", "events_url": "https://api.github.com/users/awwad/events{/privacy}", "received_events_url": "https://api.github.com/users/awwad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-20T15:22:43Z", "updated_at": "2017-07-20T19:39:16Z", "closed_at": "2017-07-20T19:39:16Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In [the current keys.py, line 1702](https://github.com/secure-systems-lab/securesystemslib/blob/e35fc017f8676b9f6402e23c7ea0320872dd7687/securesystemslib/keys.py#L1702), regardless of which library you are configured to use (pycrypto or pyca_crypto), pycrypto is used to generate key files. This appears to be a typo / minor oversight, since there is logic to choose one or the other.\r\n\r\nThis is related to issue #44, in that it also complicates inconsistent passphrase treatment.\r\n\r\nIn any case, this prevents you from generating keys if you don't have pycrypto installed. (That should be supported: you're allowed to use pyca_crypto and not pycrypto if you want.)\r\n\r\nIt is also worth considering configuring `tox.ini` to do an integration test for this: run once with only pycrypto (not pyca_crypto) installed, once with only pyca_crypto (not pycrypto) installed, etc.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/36", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/36/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/36/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/36", "id": 203716031, "node_id": "MDU6SXNzdWUyMDM3MTYwMzE=", "number": 36, "title": "Return key objects with keyids_hash_algorithms when importing keys", "user": {"login": "lukpueh", "id": 589324, "node_id": "MDQ6VXNlcjU4OTMyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/589324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukpueh", "html_url": "https://github.com/lukpueh", "followers_url": "https://api.github.com/users/lukpueh/followers", "following_url": "https://api.github.com/users/lukpueh/following{/other_user}", "gists_url": "https://api.github.com/users/lukpueh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukpueh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukpueh/subscriptions", "organizations_url": "https://api.github.com/users/lukpueh/orgs", "repos_url": "https://api.github.com/users/lukpueh/repos", "events_url": "https://api.github.com/users/lukpueh/events{/privacy}", "received_events_url": "https://api.github.com/users/lukpueh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-27T19:13:45Z", "updated_at": "2017-06-14T16:00:04Z", "closed_at": "2017-06-14T16:00:04Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This issue is discussed in https://github.com/theupdateframework/tuf/issues/412.\r\n\r\nSince loading keys should be handled in securesystemslib from now on, it makes sense to address the issue here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/35", "repository_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib", "labels_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/35/comments", "events_url": "https://api.github.com/repos/secure-systems-lab/securesystemslib/issues/35/events", "html_url": "https://github.com/secure-systems-lab/securesystemslib/issues/35", "id": 203687983, "node_id": "MDU6SXNzdWUyMDM2ODc5ODM=", "number": 35, "title": "Create public high-level interface for securesystemslib.keys", "user": {"login": "lukpueh", "id": 589324, "node_id": "MDQ6VXNlcjU4OTMyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/589324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukpueh", "html_url": "https://github.com/lukpueh", "followers_url": "https://api.github.com/users/lukpueh/followers", "following_url": "https://api.github.com/users/lukpueh/following{/other_user}", "gists_url": "https://api.github.com/users/lukpueh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukpueh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukpueh/subscriptions", "organizations_url": "https://api.github.com/users/lukpueh/orgs", "repos_url": "https://api.github.com/users/lukpueh/repos", "events_url": "https://api.github.com/users/lukpueh/events{/privacy}", "received_events_url": "https://api.github.com/users/lukpueh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-01-27T17:02:58Z", "updated_at": "2019-09-09T13:25:53Z", "closed_at": "2019-09-09T13:25:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "~~Currently `securesystemslib.keys` provides PEM import functions for public and private ecdsa and rsa keys. \r\nLet's also support ed25519 and add JSON import functions for all three protocols.~~\r\n\r\nUPDATE:\r\nBelow discussion has moved the focus of this issue to add/factor out securesystemslib high-level functions from the lower-level `securesystemslib.keys` module, i.e. what goes into `securesystemslib.keys` and what goes into `securesystemslib.interface`.", "performed_via_github_app": null, "score": 1.0}]}