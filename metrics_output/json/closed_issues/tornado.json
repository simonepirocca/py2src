{"total_count": 1398, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2908", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2908/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2908/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2908/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2908", "id": 696319941, "node_id": "MDU6SXNzdWU2OTYzMTk5NDE=", "number": 2908, "title": "Error round out when I am return json response with the function handler.write for value 1285704473650888702", "user": {"login": "drcenterprises", "id": 4493564, "node_id": "MDQ6VXNlcjQ0OTM1NjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4493564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drcenterprises", "html_url": "https://github.com/drcenterprises", "followers_url": "https://api.github.com/users/drcenterprises/followers", "following_url": "https://api.github.com/users/drcenterprises/following{/other_user}", "gists_url": "https://api.github.com/users/drcenterprises/gists{/gist_id}", "starred_url": "https://api.github.com/users/drcenterprises/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drcenterprises/subscriptions", "organizations_url": "https://api.github.com/users/drcenterprises/orgs", "repos_url": "https://api.github.com/users/drcenterprises/repos", "events_url": "https://api.github.com/users/drcenterprises/events{/privacy}", "received_events_url": "https://api.github.com/users/drcenterprises/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-09-09T01:45:43Z", "updated_at": "2020-09-10T01:45:01Z", "closed_at": "2020-09-10T01:45:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am return the next value \r\n```python\r\n      self.write({\"agent_id\": 1285704473650888702})\r\n```\r\nwhen the handler response me the data I get the next information\r\n```\r\n{\"agent_id\": 1285704473650888700}\r\n```\r\n\r\nI am using tornado==4.4.2 and python 2.7\r\n\r\nThanks so much for whatever response", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2904", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2904/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2904/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2904/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2904", "id": 685127346, "node_id": "MDU6SXNzdWU2ODUxMjczNDY=", "number": 2904, "title": "```tornado.ioloop.IOLoop.current()``` is not ```asyncio.get_event_loop()```  ?", "user": {"login": "DachuanZhao", "id": 23434805, "node_id": "MDQ6VXNlcjIzNDM0ODA1", "avatar_url": "https://avatars0.githubusercontent.com/u/23434805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DachuanZhao", "html_url": "https://github.com/DachuanZhao", "followers_url": "https://api.github.com/users/DachuanZhao/followers", "following_url": "https://api.github.com/users/DachuanZhao/following{/other_user}", "gists_url": "https://api.github.com/users/DachuanZhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/DachuanZhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DachuanZhao/subscriptions", "organizations_url": "https://api.github.com/users/DachuanZhao/orgs", "repos_url": "https://api.github.com/users/DachuanZhao/repos", "events_url": "https://api.github.com/users/DachuanZhao/events{/privacy}", "received_events_url": "https://api.github.com/users/DachuanZhao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-25T02:51:37Z", "updated_at": "2020-09-03T19:09:59Z", "closed_at": "2020-09-03T19:09:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport tornado.ioloop\r\nimport tornado.web\r\nimport asyncio\r\nfrom tornado.ioloop import IOLoop\r\n\r\nclass MainHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        loop = asyncio.get_event_loop()\r\n        t_loop = IOLoop.current()\r\n        print(loop is t_loop)\r\n        print(loop == t_loop)\r\n        print(type(loop))\r\n        print(type(t_loop))\r\n        self.write(\"Hello, world\")\r\n\r\nif __name__ == \"__main__\":\r\n    application = tornado.web.Application([\r\n        (r\"/\", MainHandler),\r\n    ])\r\n    application.listen(9001)\r\n    tornado.ioloop.IOLoop.current().start()\r\n```\r\nThe output is :\r\n```\r\nFalse\r\nFalse\r\n<class 'asyncio.unix_events._UnixSelectorEventLoop'>\r\n<class 'tornado.platform.asyncio.AsyncIOMainLoop'>\r\n```\r\nWhy isn't the two ioloop the same ? \r\nWhich ioloop should I use in tornado when I call the method ```run_in_executor```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2900", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2900/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2900/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2900/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2900", "id": 679003475, "node_id": "MDU6SXNzdWU2NzkwMDM0NzU=", "number": 2900, "title": "Improve error handling for \"content-length too long\"", "user": {"login": "lalala223", "id": 35297622, "node_id": "MDQ6VXNlcjM1Mjk3NjIy", "avatar_url": "https://avatars0.githubusercontent.com/u/35297622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lalala223", "html_url": "https://github.com/lalala223", "followers_url": "https://api.github.com/users/lalala223/followers", "following_url": "https://api.github.com/users/lalala223/following{/other_user}", "gists_url": "https://api.github.com/users/lalala223/gists{/gist_id}", "starred_url": "https://api.github.com/users/lalala223/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lalala223/subscriptions", "organizations_url": "https://api.github.com/users/lalala223/orgs", "repos_url": "https://api.github.com/users/lalala223/repos", "events_url": "https://api.github.com/users/lalala223/events{/privacy}", "received_events_url": "https://api.github.com/users/lalala223/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-14T08:44:00Z", "updated_at": "2020-09-03T18:45:45Z", "closed_at": "2020-08-15T16:24:18Z", "author_association": "NONE", "active_lock_reason": null, "body": " I use file_upload code demo testing,When the request file content length is too long, the server does not respond to anything, does not throw an exception, and simply outputs a log: [I 200814 16:22:32 http1connection:290] Malformed HTTP message from 127.0.0.1: Content-Length too long.The framework should be able to throw an error or respond to some error messages to the client.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2899", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2899/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2899/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2899/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2899", "id": 678561248, "node_id": "MDU6SXNzdWU2Nzg1NjEyNDg=", "number": 2899, "title": "ioloop.run_sync raising TimeoutError before reaching supplied timeout", "user": {"login": "RuiLoureiro", "id": 16242214, "node_id": "MDQ6VXNlcjE2MjQyMjE0", "avatar_url": "https://avatars0.githubusercontent.com/u/16242214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RuiLoureiro", "html_url": "https://github.com/RuiLoureiro", "followers_url": "https://api.github.com/users/RuiLoureiro/followers", "following_url": "https://api.github.com/users/RuiLoureiro/following{/other_user}", "gists_url": "https://api.github.com/users/RuiLoureiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/RuiLoureiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RuiLoureiro/subscriptions", "organizations_url": "https://api.github.com/users/RuiLoureiro/orgs", "repos_url": "https://api.github.com/users/RuiLoureiro/repos", "events_url": "https://api.github.com/users/RuiLoureiro/events{/privacy}", "received_events_url": "https://api.github.com/users/RuiLoureiro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T16:16:38Z", "updated_at": "2020-08-14T10:59:11Z", "closed_at": "2020-08-14T10:59:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use run_sync to fetch about 2000 urls. Since I don't want a timeout, I'm sending the equivalent of a year in seconds to the `timeout` argument.\r\n\r\n```\r\nloop.run_sync(lambda: fetch_and_handle(urls), timeout=31449600)\r\n```\r\nHowever, after about 6 minutes (having completed 99,57% of the requests) I get the error:\r\n\r\n`TimeoutError: Operation timed out after 31449600 seconds`\r\n\r\nThe error gets raised in the following line (https://github.com/tornadoweb/tornado/blob/master/tornado/ioloop.py#L528):\r\n\r\n```\r\nif future_cell[0].cancelled() or not future_cell[0].done():\r\n    raise TimeoutError(\"Operation timed out after %s seconds\" % timeout)\r\n```\r\n\r\nI ran the debugger and saw that `future_cell[0].done()` is False, but don't know what that means.\r\nI'm using tornado 6.0.4 and python 3.8.5.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2898", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2898/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2898/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2898/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2898", "id": 677896017, "node_id": "MDU6SXNzdWU2Nzc4OTYwMTc=", "number": 2898, "title": "[Question] Twistlock scanning \"test.key\" from tornado package", "user": {"login": "sarathsund", "id": 6964886, "node_id": "MDQ6VXNlcjY5NjQ4ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6964886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sarathsund", "html_url": "https://github.com/sarathsund", "followers_url": "https://api.github.com/users/sarathsund/followers", "following_url": "https://api.github.com/users/sarathsund/following{/other_user}", "gists_url": "https://api.github.com/users/sarathsund/gists{/gist_id}", "starred_url": "https://api.github.com/users/sarathsund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sarathsund/subscriptions", "organizations_url": "https://api.github.com/users/sarathsund/orgs", "repos_url": "https://api.github.com/users/sarathsund/repos", "events_url": "https://api.github.com/users/sarathsund/events{/privacy}", "received_events_url": "https://api.github.com/users/sarathsund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-12T18:36:35Z", "updated_at": "2020-08-13T14:39:33Z", "closed_at": "2020-08-13T14:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Private keys stored in image\u00a0Hide details\r\n--\r\n\u00a0 | CauseFound: /opt/conda/lib/python3.7/site-packages/tornado/test/test.key\r\n\r\nI am trying scan a jupyter hub image with twistlock system which results in the above issue. jupyterhub internally uses the tornado.\r\n\r\ncan this test.key be removed from the docker file since its only used for code testing? Or any impacts to be considered ?\r\n\r\nhttps://www.tornadoweb.org/en/stable/_modules/tornado/testing.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2897", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2897/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2897/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2897/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2897", "id": 677887037, "node_id": "MDU6SXNzdWU2Nzc4ODcwMzc=", "number": 2897, "title": "[Question] How to view redirected content?", "user": {"login": "tashrifbillah", "id": 35086881, "node_id": "MDQ6VXNlcjM1MDg2ODgx", "avatar_url": "https://avatars3.githubusercontent.com/u/35086881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tashrifbillah", "html_url": "https://github.com/tashrifbillah", "followers_url": "https://api.github.com/users/tashrifbillah/followers", "following_url": "https://api.github.com/users/tashrifbillah/following{/other_user}", "gists_url": "https://api.github.com/users/tashrifbillah/gists{/gist_id}", "starred_url": "https://api.github.com/users/tashrifbillah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tashrifbillah/subscriptions", "organizations_url": "https://api.github.com/users/tashrifbillah/orgs", "repos_url": "https://api.github.com/users/tashrifbillah/repos", "events_url": "https://api.github.com/users/tashrifbillah/events{/privacy}", "received_events_url": "https://api.github.com/users/tashrifbillah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-12T18:20:15Z", "updated_at": "2020-08-15T16:13:59Z", "closed_at": "2020-08-15T16:13:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to redirect a request to a static file and view the content but running into error 404. \r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nimport tornado.ioloop\r\nimport tornado.web\r\nimport tornado.httpserver\r\n\r\nclass MainHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        self.redirect('/var/www/html/index.html')\r\n\r\ndef make_app():\r\n    return tornado.web.Application([\r\n        (r'/', MainHandler),\r\n    ])\r\n\r\nif __name__ == '__main__':\r\n    app = make_app()\r\n    api_sockets = tornado.netutil.bind_sockets('8888', '127.0.0.1')\r\n    server = tornado.httpserver.HTTPServer(app)\r\n    server.add_sockets(api_sockets)\r\n    tornado.ioloop.IOLoop.instance().start()\r\n```\r\n\r\n> python tornado_app.py\r\n```\r\nWARNING:tornado.access:404 GET /var/www/html/index.html (127.0.0.1) 1.43ms\r\nWARNING:tornado.access:404 GET /var/www/html/index.html (127.0.0.1) 0.90ms\r\n```\r\n > curl -L http://127.0.0.1:8888\r\n\r\n`<html><title>404: Not Found</title><body>404: Not Found</body></html>`\r\n\r\nCan anyone please help?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2896", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2896/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2896/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2896/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2896", "id": 676178373, "node_id": "MDU6SXNzdWU2NzYxNzgzNzM=", "number": 2896, "title": "Number of Active Connections", "user": {"login": "Integralist", "id": 180050, "node_id": "MDQ6VXNlcjE4MDA1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/180050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Integralist", "html_url": "https://github.com/Integralist", "followers_url": "https://api.github.com/users/Integralist/followers", "following_url": "https://api.github.com/users/Integralist/following{/other_user}", "gists_url": "https://api.github.com/users/Integralist/gists{/gist_id}", "starred_url": "https://api.github.com/users/Integralist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Integralist/subscriptions", "organizations_url": "https://api.github.com/users/Integralist/orgs", "repos_url": "https://api.github.com/users/Integralist/repos", "events_url": "https://api.github.com/users/Integralist/events{/privacy}", "received_events_url": "https://api.github.com/users/Integralist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-10T14:25:54Z", "updated_at": "2020-08-11T04:52:31Z", "closed_at": "2020-08-11T04:52:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello \ud83d\udc4b\ud83c\udffb\r\n\r\nThis is likely to be a simple question for most of y'all, but I'm trying to find (and subsequently 'report' as a custom metric to our metric aggregation provider) the total number of active connections.\r\n\r\nAnd by 'active connections' I'm referring to requests being handled. I believe tornado has some kind of internal queue or stack that it populates within incoming requests, so I imagine getting access to the length of that thing would give me what I'm looking for.\r\n\r\nBut A.) I don't know where to find that particular internal request handling queue and B.) if there's already a public api for that data?\r\n\r\nI guess I could manually calculate this by implementing my own logic, but it feels like something tornado would already know about and can expose to me.\r\n\r\nMany thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2895", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2895/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2895/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2895/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2895", "id": 672220462, "node_id": "MDU6SXNzdWU2NzIyMjA0NjI=", "number": 2895, "title": "how to renew a certificate (ssl_ctx) dynamically ?", "user": {"login": "frsauvage", "id": 23147820, "node_id": "MDQ6VXNlcjIzMTQ3ODIw", "avatar_url": "https://avatars1.githubusercontent.com/u/23147820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frsauvage", "html_url": "https://github.com/frsauvage", "followers_url": "https://api.github.com/users/frsauvage/followers", "following_url": "https://api.github.com/users/frsauvage/following{/other_user}", "gists_url": "https://api.github.com/users/frsauvage/gists{/gist_id}", "starred_url": "https://api.github.com/users/frsauvage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frsauvage/subscriptions", "organizations_url": "https://api.github.com/users/frsauvage/orgs", "repos_url": "https://api.github.com/users/frsauvage/repos", "events_url": "https://api.github.com/users/frsauvage/events{/privacy}", "received_events_url": "https://api.github.com/users/frsauvage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T17:12:55Z", "updated_at": "2020-08-07T15:28:00Z", "closed_at": "2020-08-07T15:28:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI swear I search all internet, really, unable to understand how to renew a certificate with tornado ?\r\nI successfully initialized app with SSL_ctx, but what if I need to change dynamically a certificate (ssl_ctx) in the io loop ?\r\n\r\nBest regards,\r\nFrancine", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2894", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2894/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2894/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2894/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2894", "id": 667477081, "node_id": "MDU6SXNzdWU2Njc0NzcwODE=", "number": 2894, "title": "static_path should allow explicit routes to favicon and robots.txt to override it", "user": {"login": "NucleaPeon", "id": 1475151, "node_id": "MDQ6VXNlcjE0NzUxNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1475151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NucleaPeon", "html_url": "https://github.com/NucleaPeon", "followers_url": "https://api.github.com/users/NucleaPeon/followers", "following_url": "https://api.github.com/users/NucleaPeon/following{/other_user}", "gists_url": "https://api.github.com/users/NucleaPeon/gists{/gist_id}", "starred_url": "https://api.github.com/users/NucleaPeon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NucleaPeon/subscriptions", "organizations_url": "https://api.github.com/users/NucleaPeon/orgs", "repos_url": "https://api.github.com/users/NucleaPeon/repos", "events_url": "https://api.github.com/users/NucleaPeon/events{/privacy}", "received_events_url": "https://api.github.com/users/NucleaPeon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T01:14:44Z", "updated_at": "2020-08-01T19:00:28Z", "closed_at": "2020-08-01T19:00:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a favicon I use on my site in a rendered html page. The favicon is imported using a template function that handles theming.\r\n\r\n    <link rel=\"shortcut icon\" href=\"{{ theme_url('favicon.ico') }}\">\r\n\r\nThe problem is when I open, say, a pdf in a new tab, it will use the static root directory favicon.ico to decorate the tab, which *isn't* the themed favicon we are using.\r\n\r\nMy issue and suggestion is that if a favicon is set in the route using `/(favicon\\.ico)$`, it should override the default StaticFileHandler so we don't get duplicates in the routes:\r\n\r\n    /(favicon\\.ico)$ -> StaticFileHandler {'path': '/var/www/static'} None\r\n    /static/(.*)$ -> StaticFileHandler {'path': '/var/www/static'} None\r\n    /js/(.*)$ -> ThemedStaticFileHandler {'path': '/var/www/static/js', 'theme': 'custom'} None\r\n    /(favicon\\.ico)$ -> ThemedStaticFileHandler {'path': '/var/www/static', 'theme': 'custom'} None\r\n    /static/(.*)$ -> ThemedStaticFileHandler {'path': '/var/www/static', 'theme': 'custom'} None\r\n\r\nCurrently adding an explicit favicon route will be ignored in favour of Tornado's.\r\n\r\nPerhaps a way to explicitly set a handler for favicon (and robots.txt?) that defaults to the StaticFileHandler but can be associated with a different handler.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2893", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2893/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2893/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2893/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2893", "id": 665802982, "node_id": "MDU6SXNzdWU2NjU4MDI5ODI=", "number": 2893, "title": "function check_origin does not behalf well", "user": {"login": "tonyshare", "id": 7498512, "node_id": "MDQ6VXNlcjc0OTg1MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7498512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonyshare", "html_url": "https://github.com/tonyshare", "followers_url": "https://api.github.com/users/tonyshare/followers", "following_url": "https://api.github.com/users/tonyshare/following{/other_user}", "gists_url": "https://api.github.com/users/tonyshare/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonyshare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonyshare/subscriptions", "organizations_url": "https://api.github.com/users/tonyshare/orgs", "repos_url": "https://api.github.com/users/tonyshare/repos", "events_url": "https://api.github.com/users/tonyshare/events{/privacy}", "received_events_url": "https://api.github.com/users/tonyshare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-26T15:28:08Z", "updated_at": "2020-07-26T18:26:00Z", "closed_at": "2020-07-26T18:26:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version\r\npython ->3.85\r\ntornado ->6.04\r\n\r\nWhen did not override the `websocket` class method `check_origin`, it returned 403, that is correct.\r\nBut when i override the function, even directly `return False` or `return None`, the websocket server did not block the connection.\r\nwhen `return parsed_origin.netloc.endswith(\".google.com\")`, the server also did not block the connection.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2892", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2892/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2892/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2892/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2892", "id": 665802919, "node_id": "MDU6SXNzdWU2NjU4MDI5MTk=", "number": 2892, "title": "function check_origin does not behalf well", "user": {"login": "tonyshare", "id": 7498512, "node_id": "MDQ6VXNlcjc0OTg1MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7498512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonyshare", "html_url": "https://github.com/tonyshare", "followers_url": "https://api.github.com/users/tonyshare/followers", "following_url": "https://api.github.com/users/tonyshare/following{/other_user}", "gists_url": "https://api.github.com/users/tonyshare/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonyshare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonyshare/subscriptions", "organizations_url": "https://api.github.com/users/tonyshare/orgs", "repos_url": "https://api.github.com/users/tonyshare/repos", "events_url": "https://api.github.com/users/tonyshare/events{/privacy}", "received_events_url": "https://api.github.com/users/tonyshare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-26T15:27:42Z", "updated_at": "2020-07-27T01:32:07Z", "closed_at": "2020-07-26T23:20:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version\r\npython ->3.85\r\ntornado ->6.04\r\n\r\nWhen did not override the `websocket` class method `check_origin`, it returned 403, that is correct.\r\nBut when i override the function, even directly `return False` or `return None`, the websocket server did not block the connection.\r\nwhen `return parsed_origin.netloc.endswith(\".google.com\")`, the server also did not block the connection.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2883", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2883/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2883/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2883/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2883", "id": 644136122, "node_id": "MDU6SXNzdWU2NDQxMzYxMjI=", "number": 2883, "title": "send item to other handler", "user": {"login": "hoseinmontazer", "id": 8070215, "node_id": "MDQ6VXNlcjgwNzAyMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8070215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoseinmontazer", "html_url": "https://github.com/hoseinmontazer", "followers_url": "https://api.github.com/users/hoseinmontazer/followers", "following_url": "https://api.github.com/users/hoseinmontazer/following{/other_user}", "gists_url": "https://api.github.com/users/hoseinmontazer/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoseinmontazer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoseinmontazer/subscriptions", "organizations_url": "https://api.github.com/users/hoseinmontazer/orgs", "repos_url": "https://api.github.com/users/hoseinmontazer/repos", "events_url": "https://api.github.com/users/hoseinmontazer/events{/privacy}", "received_events_url": "https://api.github.com/users/hoseinmontazer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T20:48:10Z", "updated_at": "2020-06-26T20:55:17Z", "closed_at": "2020-06-26T20:55:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi ,\r\ni a write  a simple app with tornado , but i can pass item to other class,\r\n  i want send resualt of  mainhandler (message= i) to other handler InsertComment ?\r\n\r\n```\r\nclass  (BaseHandler):\r\n    def get(self):\r\n        pass \r\n    def post(self):\r\n        comment = self.get_argument(\"commentbox\")\r\n        #self.render(\"comment.html\", message= i )\r\n\r\n\r\n\r\nclass MainHandler(BaseHandler):\r\n\r\n    def get(self):\r\n        self.render(\"url.html\",error='')\r\n    def post(self):\r\n        url = str(self.get_argument(\"url\"))\r\n        \r\n        if url:\r\n            if \"https://www.examole.com/\" in url:\r\n                sql = \"SELECT `url`, `id` FROM `url` WHERE `url` = %s \"\r\n                test = db.connectdb()\r\n                mycursor = test.cursor()\r\n                mycursor.execute(sql,(url, ))\r\n                myresult = mycursor.fetchall()\r\n                if not myresult:\r\n                    sql = \"INSERT INTO `url`(`url`) VALUES (%s)\"\r\n                    test = db.connectdb()\r\n                    mycursor = test.cursor()\r\n                    mycursor.execute(sql, (url,))\r\n                    test.commit()\r\n                    i = searchUrl.DigikalaUrl(self)\r\n                    self.render(\"comment.html\", message=i)\r\n                    print('hiiiii')\r\n                else:\r\n                    i = searchUrl.DigikalaUrl(self)\r\n                    return self.render(\"comment.html\", message= i )\r\n                    print('hi')\r\n\r\n            else:\r\n                sealink=[]\r\n                seadec=[]\r\n                search_results = google.search(url, 3)\r\n                for result in search_results:\r\n                    #print(result.link)\r\n                    sealink.append(str(result.link))\r\n                    seadec.append(str(result.description))\r\n\r\n                sea = {\"link\":sealink , \"dec\":seadec}\r\n                self.render(\"search.html\", message=(sea))\r\n        else:\r\n          self.render(\"url.html\", error=\"please enter anything!\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2877", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2877/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2877/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2877/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2877", "id": 640869206, "node_id": "MDU6SXNzdWU2NDA4NjkyMDY=", "number": 2877, "title": "del", "user": {"login": "Enivel", "id": 1982819, "node_id": "MDQ6VXNlcjE5ODI4MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1982819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Enivel", "html_url": "https://github.com/Enivel", "followers_url": "https://api.github.com/users/Enivel/followers", "following_url": "https://api.github.com/users/Enivel/following{/other_user}", "gists_url": "https://api.github.com/users/Enivel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Enivel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Enivel/subscriptions", "organizations_url": "https://api.github.com/users/Enivel/orgs", "repos_url": "https://api.github.com/users/Enivel/repos", "events_url": "https://api.github.com/users/Enivel/events{/privacy}", "received_events_url": "https://api.github.com/users/Enivel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-18T03:00:34Z", "updated_at": "2020-06-18T03:19:49Z", "closed_at": "2020-06-18T03:19:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "del", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2872", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2872/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2872/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2872/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2872", "id": 633546771, "node_id": "MDU6SXNzdWU2MzM1NDY3NzE=", "number": 2872, "title": "Missing path argument after moving WebSocketHandler", "user": {"login": "Hazmes", "id": 26164958, "node_id": "MDQ6VXNlcjI2MTY0OTU4", "avatar_url": "https://avatars3.githubusercontent.com/u/26164958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hazmes", "html_url": "https://github.com/Hazmes", "followers_url": "https://api.github.com/users/Hazmes/followers", "following_url": "https://api.github.com/users/Hazmes/following{/other_user}", "gists_url": "https://api.github.com/users/Hazmes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hazmes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hazmes/subscriptions", "organizations_url": "https://api.github.com/users/Hazmes/orgs", "repos_url": "https://api.github.com/users/Hazmes/repos", "events_url": "https://api.github.com/users/Hazmes/events{/privacy}", "received_events_url": "https://api.github.com/users/Hazmes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-07T16:18:44Z", "updated_at": "2020-06-19T15:36:14Z", "closed_at": "2020-06-19T15:36:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have a problem with my WebSocketHandler after moving it into its own file. Here  is my project structure:\r\n\r\n-  root\r\n   -  handlers\r\n      - ResetHandler.py\r\n      - ItemSocketHandler.py\r\n   - media\r\n      - js\r\n      - css\r\n      - images\r\n   - templates\r\n   - app.py\r\n   - settings.py\r\n\r\n\r\nWhen I have my WebsocketHandlers in my main app.py file, there is no problem, but as soon as I move it into e.g. ItemSocketHandler.py in the handerls directory, I get the following error:\r\n\r\n```\r\nERROR:tornado.application:Uncaught exception\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\NSA\\Documents\\Projects\\world-domination\\services\\webui-mock\\venv\\lib\\site-packages\\tornado\\http1connection.py\", line 273, in _read_message\r\n    delegate.finish()\r\n  File \"C:\\Users\\NSA\\Documents\\Projects\\world-domination\\services\\webui-mock\\venv\\lib\\site-packages\\tornado\\routing.py\", line 268, in finish\r\n    self.delegate.finish()\r\n  File \"C:\\Users\\NSA\\Documents\\Projects\\world-domination\\services\\webui-mock\\venv\\lib\\site-packages\\tornado\\web.py\", line 2297, in finish\r\n    self.execute()\r\n  File \"C:\\Users\\NSA\\Documents\\Projects\\world-domination\\services\\webui-mock\\venv\\lib\\site-packages\\tornado\\web.py\", line 2316, in execute\r\n    self.handler = self.handler_class(\r\n  File \"C:\\Users\\NSA\\Documents\\Projects\\world-domination\\services\\webui-mock\\venv\\lib\\site-packages\\tornado\\web.py\", line 233, in __init__\r\n    self.initialize(**kwargs)  # type: ignore\r\nTypeError: initialize() missing 1 required positional argument: 'path'\r\n```\r\n\r\nHere is the relevant code for this:\r\n\r\n### app.py\r\n```\r\n\r\nfrom handlers import ResetHandler, ItemSocketHandler\r\n\r\nclass Application(tornado.web.Application):\r\n    def __init__(self):\r\n        handlers = [\r\n                    (r'/', MainHandler),\r\n                    (r'/ws/item', ItemSocketHandler),\r\n                    (r'/ws/pic', PicSocketHandler),\r\n                    (r'/reset', ResetHandler),\r\n                    (r'/(.*)', web.StaticFileHandler)\r\n                ]\r\n        settings = config.settings\r\n        super(Application, self).__init__(handlers, **settings)\r\n\r\n[ ... ]\r\n\r\nasync def main():\r\n\r\n    app = Application()\r\n    app.listen(config.APP_PORT)\r\n\r\n    #ioloop.IOLoop.instance().start()\r\n    shutdown_event = tornado.locks.Event()\r\n    await shutdown_event.wait()\r\n\r\n```\r\n\r\n### ItemSocketHandler.py\r\n```\r\nimport aioredis\r\nimport tornado\r\nimport os\r\nfrom tornado.websocket import WebSocketHandler\r\n\r\nclass ItemSocketHandler(WebSocketHandler):\r\n    def check_origin(self, origin):\r\n        return True\r\n\r\n    async def open(self):\r\n        self.pub = await aioredis.create_redis((config.REDIS_HOST, config.REDIS_PORT))\r\n        \r\n        channel, = await self.pub.subscribe(config.RedisChannels.ITEMS)\r\n        assert isinstance(channel, aioredis.Channel)\r\n\r\n        async def read_redis(ch):\r\n            async for message in ch.iter(encoding=\"utf-8\"):\r\n               # print('received message')\r\n                self.write_message(message)\r\n\r\n        asyncio.get_running_loop().create_task(read_redis(channel))\r\n\r\n    def on_close(self):\r\n        self.pub.close()\r\n        \r\n        tornado.ioloop.IOLoop.current().add_callback(\r\n            self.pub.wait_closed\r\n        )\r\n        \r\n        print('closed picsockethandler and therefore redis connection')\r\n```\r\n\r\n### settings.py\r\n```\r\nMEDIA_ROOT = path(ROOT, 'media')\r\nTEMPLATE_ROOT = path(ROOT, 'templates')\r\n\r\nsettings = {}\r\nsettings['debug'] = True\r\nsettings['static_path'] = MEDIA_ROOT\r\nsettings['template_path'] = TEMPLATE_ROOT\r\n```\r\n\r\nI am suspecting something is wrong with my hander/url config in the Application, but I cannot figure it out. I have read that the statichandler needs a path variable, although it works when the WebsocketHandler is in the app.py file and since I set the static_path option it should not be needed from what I have read in the documentation.\r\n\r\nAny help would be Appreciated. Thank you and have a nice day :)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2871", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2871/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2871/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2871/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2871", "id": 630420849, "node_id": "MDU6SXNzdWU2MzA0MjA4NDk=", "number": 2871, "title": "Websocket bi-directional communication assertionError ", "user": {"login": "sctse999", "id": 6903470, "node_id": "MDQ6VXNlcjY5MDM0NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6903470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sctse999", "html_url": "https://github.com/sctse999", "followers_url": "https://api.github.com/users/sctse999/followers", "following_url": "https://api.github.com/users/sctse999/following{/other_user}", "gists_url": "https://api.github.com/users/sctse999/gists{/gist_id}", "starred_url": "https://api.github.com/users/sctse999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sctse999/subscriptions", "organizations_url": "https://api.github.com/users/sctse999/orgs", "repos_url": "https://api.github.com/users/sctse999/repos", "events_url": "https://api.github.com/users/sctse999/events{/privacy}", "received_events_url": "https://api.github.com/users/sctse999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-04T00:33:27Z", "updated_at": "2020-06-19T15:49:52Z", "closed_at": "2020-06-19T15:49:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to build a simple example of websocket bidrectional communication. Once the client is connected, the server and the client will continuously sending data to each other. I got an AssertionError everytime when I try to run even a single client. I am suspecting that I have misused ```write_message```. Here is the error, sample code and appreciate any help. \r\n\r\np.s.: If you can't reproduce it for the first time, run a few times more. \r\n\r\nError:\r\n```python\r\n[E 200604 08:22:32 iostream:746] Uncaught exception, closing connection.\r\n    Traceback (most recent call last):\r\n      File \"/home/jonathantse/anaconda3/envs/tornado/lib/python3.7/site-packages/tornado/iostream.py\", line 715, in _handle_events\r\n        self._handle_write()\r\n      File \"/home/jonathantse/anaconda3/envs/tornado/lib/python3.7/site-packages/tornado/iostream.py\", line 991, in _handle_write\r\n        self._write_buffer.advance(num_bytes)\r\n      File \"/home/jonathantse/anaconda3/envs/tornado/lib/python3.7/site-packages/tornado/iostream.py\", line 202, in advance\r\n        assert 0 < size <= self._size\r\n    AssertionError\r\n[E 200604 08:22:32 base_events:1619] Exception in callback None()\r\n    handle: <Handle cancelled>\r\n    Traceback (most recent call last):\r\n      File \"/home/jonathantse/anaconda3/envs/tornado/lib/python3.7/asyncio/events.py\", line 88, in _run\r\n        self._context.run(self._callback, *self._args)\r\n      File \"/home/jonathantse/anaconda3/envs/tornado/lib/python3.7/site-packages/tornado/platform/asyncio.py\", line 139, in _handle_events\r\n        handler_func(fileobj, events)\r\n      File \"/home/jonathantse/anaconda3/envs/tornado/lib/python3.7/site-packages/tornado/iostream.py\", line 715, in _handle_events\r\n        self._handle_write()\r\n      File \"/home/jonathantse/anaconda3/envs/tornado/lib/python3.7/site-packages/tornado/iostream.py\", line 991, in _handle_write\r\n        self._write_buffer.advance(num_bytes)\r\n      File \"/home/jonathantse/anaconda3/envs/tornado/lib/python3.7/site-packages/tornado/iostream.py\", line 202, in advance\r\n        assert 0 < size <= self._size\r\n    AssertionError\r\nclient closed\r\n\r\n```\r\n\r\n```test.py```\r\n```python\r\nimport tornado.ioloop\r\nimport tornado.web\r\nimport tornado.websocket\r\nfrom tornado import gen\r\nfrom tornado.options import define,options,parse_command_line\r\nimport asyncio\r\nclients=[]\r\n\r\nclass IndexHandler(tornado.web.RequestHandler):\r\n    # @tornado.web.asynchronous\r\n    @gen.coroutine\r\n    def get(self):\r\n        self.render(\"index_simple.html\")\r\n\r\nclass MyWebSocketHandler(tornado.websocket.WebSocketHandler):\r\n    def open(self, *args, **kwargs):\r\n        \r\n        clients.append(self)\r\n        print(\"client opening connection\")\r\n\r\n    def on_message(self, message):\r\n        print(f\"client sending: {message}\")\r\n\r\n    def on_close(self): \r\n        print(\"client closed\")\r\n        clients.remove(self)\r\n\r\n    def check_origin(self, origin):\r\n        return True\r\n        \r\napp=tornado.web.Application([\r\n    (r'/',IndexHandler),\r\n    (r'/websocket',MyWebSocketHandler),\r\n])\r\n\r\n\r\nimport threading\r\nimport time\r\nclass SendThread(threading.Thread):\r\n    def run(self):\r\n        asyncio.set_event_loop(asyncio.new_event_loop())\r\n        import datetime\r\n        while True:\r\n            try:\r\n                i = 0 \r\n                for client in clients:\r\n                    \r\n                    msg = str(datetime.datetime.now())\r\n                    print(f\"Client {i} : {msg}\")\r\n                    client.write_message(msg)\r\n                    i = i+1\r\n            except Exception as e:\r\n                print(f\"exception {e}\")\r\n            time.sleep(0.01)\r\n\r\n\r\nif __name__ == '__main__':\r\n    SendThread().start()\r\n    parse_command_line()\r\n    app.listen(8888)\r\n    tornado.ioloop.IOLoop.instance().start()\r\n```\r\n\r\n```index_simple.html```\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\" name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Websocket Test</title>\r\n\r\n</head>\r\n    \r\n    \r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.1/jquery.min.js\"></script>\r\n        \r\n<script>\r\n    \r\n\r\n$(document).ready(function(){\r\n\r\n    \r\n    var socket = new WebSocket('ws://127.0.0.1:8888/websocket');\r\n\r\n    socket.onopen = async function(event){\r\n        console.log('Connected'); \r\n        \r\n        console.log(\"Sending 1000 instructions\\n\")\r\n        while (true) {\r\n            data= {\"angle\": 1.0, \"throttle\": Math.random(), \"recording\": true, \"drive_mode\": \"user\"}\r\n            socket.send(JSON.stringify(data))\r\n        \r\n            await sleep(10);\r\n        }\r\n    }\r\n\r\n    socket.onmessage = function(event){\r\n        \r\n        console.log(event.data);\r\n    };\r\n    \r\n    socket.addEventListener('error', function (event) {\r\n        console.log(event)\r\n    });\r\n    \r\n    \r\n    socket.addEventListener('close', (event) => {\r\n        console.log('The connection has been closed successfully.');\r\n    });\r\n\r\n\r\n    $(window).unload(function(event){\r\n        console.log('socket closed'); \r\n        socket.close();\r\n    });\r\n    \r\n    \r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n});\r\n\r\n</script>\r\n</body>\r\n</html>\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\nOutput of ```conda list``` command:\r\n```\r\n# Name                    Version                   Build  Channel\r\n_libgcc_mutex             0.1                        main  \r\nca-certificates           2020.1.1                      0  \r\ncertifi                   2020.4.5.1               py37_0  \r\nld_impl_linux-64          2.33.1               h53a641e_7  \r\nlibedit                   3.1.20181209         hc058e9b_0  \r\nlibffi                    3.3                  he6710b0_1  \r\nlibgcc-ng                 9.1.0                hdf63c60_0  \r\nlibstdcxx-ng              9.1.0                hdf63c60_0  \r\nncurses                   6.2                  he6710b0_1  \r\nopenssl                   1.1.1g               h7b6447c_0  \r\npip                       20.0.2                   py37_3  \r\npython                    3.7.7                hcff3b4d_5  \r\nreadline                  8.0                  h7b6447c_0  \r\nsetuptools                46.4.0                   py37_0  \r\nsqlite                    3.31.1               h62c20be_1  \r\ntk                        8.6.8                hbc83047_0  \r\ntornado                   6.0.4            py37h7b6447c_1  \r\nwheel                     0.34.2                   py37_0  \r\nxz                        5.2.5                h7b6447c_0  \r\nzlib                      1.2.11               h7b6447c_3  \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2869", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2869/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2869/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2869/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2869", "id": 624713599, "node_id": "MDU6SXNzdWU2MjQ3MTM1OTk=", "number": 2869, "title": "Chat app demo won't work without check_origin", "user": {"login": "SimiCode", "id": 20975616, "node_id": "MDQ6VXNlcjIwOTc1NjE2", "avatar_url": "https://avatars3.githubusercontent.com/u/20975616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimiCode", "html_url": "https://github.com/SimiCode", "followers_url": "https://api.github.com/users/SimiCode/followers", "following_url": "https://api.github.com/users/SimiCode/following{/other_user}", "gists_url": "https://api.github.com/users/SimiCode/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimiCode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimiCode/subscriptions", "organizations_url": "https://api.github.com/users/SimiCode/orgs", "repos_url": "https://api.github.com/users/SimiCode/repos", "events_url": "https://api.github.com/users/SimiCode/events{/privacy}", "received_events_url": "https://api.github.com/users/SimiCode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-26T08:52:53Z", "updated_at": "2020-05-28T08:34:28Z", "closed_at": "2020-05-28T08:34:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could we safely say that all websocket demos need to have this in their code?\r\n```\r\n    def check_origin(self, origin):\r\n        # Override the origin check if needed\r\n        return True\r\n```\r\n\r\nI kept getting a 403 error when trying to run [demos/websocket/chatdemo.py](https://github.com/tornadoweb/tornado/blob/master/demos/websocket/chatdemo.py) before I added that method.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2868", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2868/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2868/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2868/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2868", "id": 624702904, "node_id": "MDU6SXNzdWU2MjQ3MDI5MDQ=", "number": 2868, "title": "AttributeError: partially initialized module 'asyncio' has no attribute 'Future' ", "user": {"login": "SimiCode", "id": 20975616, "node_id": "MDQ6VXNlcjIwOTc1NjE2", "avatar_url": "https://avatars3.githubusercontent.com/u/20975616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimiCode", "html_url": "https://github.com/SimiCode", "followers_url": "https://api.github.com/users/SimiCode/followers", "following_url": "https://api.github.com/users/SimiCode/following{/other_user}", "gists_url": "https://api.github.com/users/SimiCode/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimiCode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimiCode/subscriptions", "organizations_url": "https://api.github.com/users/SimiCode/orgs", "repos_url": "https://api.github.com/users/SimiCode/repos", "events_url": "https://api.github.com/users/SimiCode/events{/privacy}", "received_events_url": "https://api.github.com/users/SimiCode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-26T08:37:51Z", "updated_at": "2020-05-26T08:42:37Z", "closed_at": "2020-05-26T08:42:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "AttributeError: partially initialized module 'asyncio' has no attribute 'Future' (most likely due to a circular import)\r\n\r\ntornado==6.0.4\r\nPython 3.8.2\r\nPlatform: Windows 10\r\n\r\nWhen running: \r\nhttps://github.com/tornadoweb/tornado/blob/master/demos/websocket/chatdemo.py\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"tests/socket.py\", line 23, in <module>\r\n    import tornado.ioloop\r\n  File \"/mnt/c/Users/EEE/Desktop/projects/new-world/venv/lib/python3.8/site-packages/tornado/ioloop.py\", line 33, in <module>\r\n    import asyncio\r\n  File \"/usr/lib/python3.8/asyncio/__init__.py\", line 8, in <module>\r\n    from .base_events import *\r\n  File \"/usr/lib/python3.8/asyncio/base_events.py\", line 23, in <module>\r\n    import socket\r\n  File \"/mnt/c/Users/EEE/Desktop/projects/new-world/tests/socket.py\", line 25, in <module>\r\n    import tornado.web\r\n  File \"/mnt/c/Users/EEE/Desktop/projects/new-world/venv/lib/python3.8/site-packages/tornado/web.py\", line 84, in <module>\r\n    from tornado.concurrent import Future, future_set_result_unless_cancelled\r\n  File \"/mnt/c/Users/EEE/Desktop/projects/new-world/venv/lib/python3.8/site-packages/tornado/concurrent.py\", line 47, in <module>\r\n    Future = asyncio.Future\r\nAttributeError: partially initialized module 'asyncio' has no attribute 'Future' (most likely due to a circular import)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2867", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2867/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2867/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2867/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2867", "id": 623457779, "node_id": "MDU6SXNzdWU2MjM0NTc3Nzk=", "number": 2867, "title": "Windows implementation of `set_close_exec` will not work", "user": {"login": "zooba", "id": 1693688, "node_id": "MDQ6VXNlcjE2OTM2ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zooba", "html_url": "https://github.com/zooba", "followers_url": "https://api.github.com/users/zooba/followers", "following_url": "https://api.github.com/users/zooba/following{/other_user}", "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}", "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zooba/subscriptions", "organizations_url": "https://api.github.com/users/zooba/orgs", "repos_url": "https://api.github.com/users/zooba/repos", "events_url": "https://api.github.com/users/zooba/events{/privacy}", "received_events_url": "https://api.github.com/users/zooba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-22T20:21:57Z", "updated_at": "2020-06-27T14:12:58Z", "closed_at": "2020-06-27T14:12:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Windows implementation of `set_close_exec` https://github.com/tornadoweb/tornado/blob/master/tornado/platform/windows.py currently can never work because `SetHandleInformation` needs an OS handle, but everywhere this function is called it is given a file descriptor. \r\n\r\nFirstly, I believe that by default all handles are non-inheritable. But I haven't checked everywhere you're creating them though - certainly the returned pipes from `os.pipe` are explicitly noninheritable.\r\n\r\nMost likely you should just use [`os.set_inheritable`](https://docs.python.org/3/library/os.html#os.set_inheritable) on all platforms, which does what you need. It was added in Python 3.4, so once 2.7 is no longer a concern this is probably the easiest way forward. It knows how to convert FDs to handles on Windows.\r\n\r\nFinally, I came across this because I'm trying to bring up a Python environment on Windows that doesn't include ctypes, and this showed up on my list of \"concerns\". I'll patch my own to use the builtin function, but figured I'd mention that the current code doesn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2866", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2866/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2866/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2866/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2866", "id": 623457744, "node_id": "MDU6SXNzdWU2MjM0NTc3NDQ=", "number": 2866, "title": "`set_close_exec` implementation for Windows will not work", "user": {"login": "zooba", "id": 1693688, "node_id": "MDQ6VXNlcjE2OTM2ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zooba", "html_url": "https://github.com/zooba", "followers_url": "https://api.github.com/users/zooba/followers", "following_url": "https://api.github.com/users/zooba/following{/other_user}", "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}", "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zooba/subscriptions", "organizations_url": "https://api.github.com/users/zooba/orgs", "repos_url": "https://api.github.com/users/zooba/repos", "events_url": "https://api.github.com/users/zooba/events{/privacy}", "received_events_url": "https://api.github.com/users/zooba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-22T20:21:36Z", "updated_at": "2020-05-22T20:26:29Z", "closed_at": "2020-05-22T20:26:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Windows implementation of `set_close_exec` https://github.com/tornadoweb/tornado/blob/master/tornado/platform/windows.py currently can never work because `SetHandleInformation` needs an OS handle, but everywhere this function is called it is given a file descriptor. \r\n\r\nFirstly, I believe that by default all handles are non-inheritable. But I haven't checked everywhere you're creating them though - certainly the returned pipes from `os.pipe` are explicitly noninheritable.\r\n\r\nMost likely you should just use [`os.set_inheritable`](https://docs.python.org/3/library/os.html#os.set_inheritable) on all platforms, which does what you need. It was added in Python 3.4, so once 2.7 is no longer a concern this is probably the easiest way forward. It knows how to convert FDs to handles on Windows.\r\n\r\nFinally, I came across this because I'm trying to bring up a Python environment on Windows that doesn't include ctypes, and this showed up on my list of \"concerns\". I'll patch my own to use the builtin function, but figured I'd mention that the current code doesn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2864", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2864/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2864/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2864/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2864", "id": 620718536, "node_id": "MDU6SXNzdWU2MjA3MTg1MzY=", "number": 2864, "title": "ValueError: too many file descriptors in select()", "user": {"login": "gdbrianlu", "id": 54971103, "node_id": "MDQ6VXNlcjU0OTcxMTAz", "avatar_url": "https://avatars3.githubusercontent.com/u/54971103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdbrianlu", "html_url": "https://github.com/gdbrianlu", "followers_url": "https://api.github.com/users/gdbrianlu/followers", "following_url": "https://api.github.com/users/gdbrianlu/following{/other_user}", "gists_url": "https://api.github.com/users/gdbrianlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdbrianlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdbrianlu/subscriptions", "organizations_url": "https://api.github.com/users/gdbrianlu/orgs", "repos_url": "https://api.github.com/users/gdbrianlu/repos", "events_url": "https://api.github.com/users/gdbrianlu/events{/privacy}", "received_events_url": "https://api.github.com/users/gdbrianlu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T06:38:28Z", "updated_at": "2020-05-24T00:19:25Z", "closed_at": "2020-05-24T00:19:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"main.py\", line 98, in <module>\r\n    main()\r\n  File \"main.py\", line 93, in main\r\n    ioloop.start()\r\n  File \"D:\\TestService\\Python37\\lib\\site-packages\\tornado\\platform\\asyncio.py\", line 148, in start\r\n    self.asyncio_loop.run_forever()\r\n  File \"D:\\TestService\\Python37\\lib\\asyncio\\base_events.py\", line 539, in run_forever\r\n    self._run_once()\r\n  File \"D:\\TestService\\Python37\\lib\\asyncio\\base_events.py\", line 1739, in _run_once\r\n    event_list = self._selector.select(timeout)\r\n  File \"D:\\TestService\\Python37\\lib\\selectors.py\", line 323, in select\r\n    r, w, _ = self._select(self._readers, self._writers, [], timeout)\r\n  File \"D:\\TestService\\Python37\\lib\\selectors.py\", line 314, in _select\r\n    r, w, x = select.select(r, w, w, timeout)\r\nValueError: too many file descriptors in select()", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2862", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2862/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2862/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2862/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2862", "id": 618661907, "node_id": "MDU6SXNzdWU2MTg2NjE5MDc=", "number": 2862, "title": "Tornado 6.0.4 cannot import name 'futures' issue", "user": {"login": "jimchen0168", "id": 28459921, "node_id": "MDQ6VXNlcjI4NDU5OTIx", "avatar_url": "https://avatars0.githubusercontent.com/u/28459921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimchen0168", "html_url": "https://github.com/jimchen0168", "followers_url": "https://api.github.com/users/jimchen0168/followers", "following_url": "https://api.github.com/users/jimchen0168/following{/other_user}", "gists_url": "https://api.github.com/users/jimchen0168/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimchen0168/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimchen0168/subscriptions", "organizations_url": "https://api.github.com/users/jimchen0168/orgs", "repos_url": "https://api.github.com/users/jimchen0168/repos", "events_url": "https://api.github.com/users/jimchen0168/events{/privacy}", "received_events_url": "https://api.github.com/users/jimchen0168/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T02:58:31Z", "updated_at": "2020-05-18T20:08:17Z", "closed_at": "2020-05-18T20:08:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "version: Tornado 6.0.4\r\npython 3.8\r\ngot an error when tried to run a simple python simple_httpclient.py. \r\nthe same issue happened on the Linux version as well. \r\nC:\\Python38\\Lib\\site-packages\\tornado>python simple_httpclient.py\r\nTraceback (most recent call last):\r\n  File \"simple_httpclient.py\", line 2, in <module>\r\n    from tornado import gen\r\n  File \"C:\\Python38\\lib\\site-packages\\tornado\\gen.py\", line 69, in <module>\r\n    import asyncio\r\n  File \"C:\\Python38\\lib\\asyncio\\__init__.py\", line 8, in <module>\r\n    from .base_events import *\r\n  File \"C:\\Python38\\lib\\asyncio\\base_events.py\", line 18, in <module>\r\n    import concurrent.futures\r\n  File \"C:\\Python38\\Lib\\site-packages\\tornado\\concurrent.py\", line 29, in <modul\r\ne>\r\n    from concurrent import futures\r\nImportError: cannot import name 'futures' from partially initialized module 'con\r\ncurrent' (most likely due to a circular import) (C:\\Python38\\Lib\\site-packages\\t\r\nornado\\concurrent.py)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2856", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2856/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2856/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2856/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2856", "id": 616007399, "node_id": "MDU6SXNzdWU2MTYwMDczOTk=", "number": 2856, "title": "Tornado Uncaught Exception - After Upgrade", "user": {"login": "admatuszak", "id": 57879622, "node_id": "MDQ6VXNlcjU3ODc5NjIy", "avatar_url": "https://avatars0.githubusercontent.com/u/57879622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/admatuszak", "html_url": "https://github.com/admatuszak", "followers_url": "https://api.github.com/users/admatuszak/followers", "following_url": "https://api.github.com/users/admatuszak/following{/other_user}", "gists_url": "https://api.github.com/users/admatuszak/gists{/gist_id}", "starred_url": "https://api.github.com/users/admatuszak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/admatuszak/subscriptions", "organizations_url": "https://api.github.com/users/admatuszak/orgs", "repos_url": "https://api.github.com/users/admatuszak/repos", "events_url": "https://api.github.com/users/admatuszak/events{/privacy}", "received_events_url": "https://api.github.com/users/admatuszak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-11T16:15:27Z", "updated_at": "2020-05-11T19:26:34Z", "closed_at": "2020-05-11T19:26:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just upgraded to Tornado 6.0.4. When attempting to select a kernal in JupyterLab, it throws the following error. Any idea on how to fix this?\r\n\r\n[E 09:10:07.467 LabApp] Uncaught exception POST /api/sessions?1589213407001 (::1)\r\n    HTTPServerRequest(protocol='http', host='localhost:8888', method='POST', uri='/api/sessions?1589213407001', version='HTTP/1.1', remote_ip='::1')\r\n    Traceback (most recent call last):\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\web.py\", line 1592, in _execute\r\n        result = yield result\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1133, in run\r\n        value = future.result()\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1141, in run\r\n        yielded = self.gen.throw(*exc_info)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\notebook\\services\\sessions\\handlers.py\", line 72, in post\r\n        type=mtype))\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1133, in run\r\n        value = future.result()\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1141, in run\r\n        yielded = self.gen.throw(*exc_info)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\notebook\\services\\sessions\\sessionmanager.py\", line 88, in create_session\r\n        kernel_id = yield self.start_kernel_for_session(session_id, path, name, type, kernel_name)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1133, in run\r\n        value = future.result()\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1141, in run\r\n        yielded = self.gen.throw(*exc_info)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\notebook\\services\\sessions\\sessionmanager.py\", line 101, in start_kernel_for_session\r\n        self.kernel_manager.start_kernel(path=kernel_path, kernel_name=kernel_name)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1133, in run\r\n        value = future.result()\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 326, in wrapper\r\n        yielded = next(result)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\notebook\\services\\kernels\\kernelmanager.py\", line 168, in start_kernel\r\n        super(MappingKernelManager, self).start_kernel(**kwargs)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_client\\multikernelmanager.py\", line 158, in start_kernel\r\n        km.start_kernel(**kwargs)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_client\\manager.py\", line 301, in start_kernel\r\n        kernel_cmd, kw = self.pre_start_kernel(**kw)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_client\\manager.py\", line 248, in pre_start_kernel\r\n        self.write_connection_file()\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_client\\connect.py\", line 474, in write_connection_file\r\n        kernel_name=self.kernel_name\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_client\\connect.py\", line 138, in write_connection_file\r\n        with secure_write(fname) as f:\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\contextlib.py\", line 112, in __enter__\r\n        return next(self.gen)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_core\\paths.py\", line 435, in secure_write\r\n        win32_restrict_file_to_user(fname)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_core\\paths.py\", line 361, in win32_restrict_file_to_user\r\n        import win32api\r\n    ImportError: DLL load failed: The specified procedure could not be found.\r\n[W 09:10:07.496 LabApp] Unhandled error\r\n[E 09:10:07.512 LabApp] {\r\n      \"Host\": \"localhost:8888\",\r\n      \"Connection\": \"keep-alive\",\r\n      \"Content-Length\": \"137\",\r\n      \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36\",\r\n      \"X-Xsrftoken\": \"2|7bc81444|64e5d7881fc3f0665ea4474c6adec0cb|1587429462\",\r\n      \"Authorization\": \"token 244d2fe504f758082b4818224f1f29213eb70d6b7576caa6\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"*/*\",\r\n      \"Origin\": \"http://localhost:8888\",\r\n      \"Sec-Fetch-Site\": \"same-origin\",\r\n      \"Sec-Fetch-Mode\": \"cors\",\r\n      \"Sec-Fetch-Dest\": \"empty\",\r\n      \"Referer\": \"http://localhost:8888/lab\",\r\n      \"Accept-Encoding\": \"gzip, deflate, br\",\r\n      \"Accept-Language\": \"en-US,en;q=0.9\",\r\n      \"Cookie\": \"ajs_group_id=null; ajs_user_id=%220186b666-1ba7-5c0b-b583-661e739229a1%22; ajs_anonymous_id=%222d911756-437a-4649-9ee7-bb9bc7fd008a%22; _xsrf=2|7bc81444|64e5d7881fc3f0665ea4474c6adec0cb|1587429462; username-localhost-8888=\\\"2|1:0|10:1589213406|23:username-localhost-8888|44:MDcwZDcyMTU5NGFmNDkwMzhlMTI1OGFkNWQxOTNhYjQ=|7af95c0a64d0aa777472436f16d08eeea9cd7f9fd0e0067d72e07c8f0dc17467\\\"\"\r\n    }\r\n[E 09:10:07.512 LabApp] 500 POST /api/sessions?1589213407001 (::1) 516.62ms referer=http://localhost:8888/lab\r\n[E 09:10:10.404 LabApp] Uncaught exception POST /api/sessions?1589213410382 (::1)\r\n    HTTPServerRequest(protocol='http', host='localhost:8888', method='POST', uri='/api/sessions?1589213410382', version='HTTP/1.1', remote_ip='::1')\r\n    Traceback (most recent call last):\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\web.py\", line 1592, in _execute\r\n        result = yield result\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1133, in run\r\n        value = future.result()\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1141, in run\r\n        yielded = self.gen.throw(*exc_info)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\notebook\\services\\sessions\\handlers.py\", line 72, in post\r\n        type=mtype))\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1133, in run\r\n        value = future.result()\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1141, in run\r\n        yielded = self.gen.throw(*exc_info)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\notebook\\services\\sessions\\sessionmanager.py\", line 88, in create_session\r\n        kernel_id = yield self.start_kernel_for_session(session_id, path, name, type, kernel_name)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1133, in run\r\n        value = future.result()\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1141, in run\r\n        yielded = self.gen.throw(*exc_info)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\notebook\\services\\sessions\\sessionmanager.py\", line 101, in start_kernel_for_session\r\n        self.kernel_manager.start_kernel(path=kernel_path, kernel_name=kernel_name)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 1133, in run\r\n        value = future.result()\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\tornado\\gen.py\", line 326, in wrapper\r\n        yielded = next(result)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\notebook\\services\\kernels\\kernelmanager.py\", line 168, in start_kernel\r\n        super(MappingKernelManager, self).start_kernel(**kwargs)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_client\\multikernelmanager.py\", line 158, in start_kernel\r\n        km.start_kernel(**kwargs)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_client\\manager.py\", line 301, in start_kernel\r\n        kernel_cmd, kw = self.pre_start_kernel(**kw)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_client\\manager.py\", line 248, in pre_start_kernel\r\n        self.write_connection_file()\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_client\\connect.py\", line 474, in write_connection_file\r\n        kernel_name=self.kernel_name\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_client\\connect.py\", line 138, in write_connection_file\r\n        with secure_write(fname) as f:\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\contextlib.py\", line 112, in __enter__\r\n        return next(self.gen)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_core\\paths.py\", line 435, in secure_write\r\n        win32_restrict_file_to_user(fname)\r\n      File \"c:\\users\\amatuszak\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\jupyter_core\\paths.py\", line 361, in win32_restrict_file_to_user\r\n        import win32api\r\n    ImportError: DLL load failed: The specified procedure could not be found.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2854", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2854/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2854/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2854/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2854", "id": 613500427, "node_id": "MDU6SXNzdWU2MTM1MDA0Mjc=", "number": 2854, "title": "getting cancelledError when ", "user": {"login": "snirzango", "id": 28483526, "node_id": "MDQ6VXNlcjI4NDgzNTI2", "avatar_url": "https://avatars3.githubusercontent.com/u/28483526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snirzango", "html_url": "https://github.com/snirzango", "followers_url": "https://api.github.com/users/snirzango/followers", "following_url": "https://api.github.com/users/snirzango/following{/other_user}", "gists_url": "https://api.github.com/users/snirzango/gists{/gist_id}", "starred_url": "https://api.github.com/users/snirzango/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snirzango/subscriptions", "organizations_url": "https://api.github.com/users/snirzango/orgs", "repos_url": "https://api.github.com/users/snirzango/repos", "events_url": "https://api.github.com/users/snirzango/events{/privacy}", "received_events_url": "https://api.github.com/users/snirzango/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T17:49:18Z", "updated_at": "2020-05-11T19:03:04Z", "closed_at": "2020-05-11T19:03:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nwe are trying to optimize our server latency by postponing some heavy lifting actions to after returning the http response back to the client, we are trying to do so by using asyncio.wait_for, run_in_executor and contextvars ctx.run\r\nwith something that looks like that:\r\n\r\nfile A:\r\n```\r\nfrom contextvars import ContextVar\r\nfrom typing import Dict, List, Union\r\nid_context_var = ContextVar('id')\r\nuid_context_var.set('')\r\nfire_and_forget_tasks_context_var = ContextVar('fire_and_forget_tasks')\r\nfire_and_forget_tasks: Dict[FireAndForgetType, Union[List[AbstractFireAndForgetTask], AbstractFireAndForgetTask]] = {\r\n    FireAndForgetType.COLLECTION_TASK: None,  # holds data collections tasks\r\n    FireAndForgetType.METRICS_TASKS: []  # holds metrics repot tasks\r\n}\r\nfire_and_forget_tasks_context_var.set(fire_and_forget_tasks)\r\n```\r\neach of the tasks above implements its own execute\r\n\r\nwhile the server is running tasks are inserted to the tasks list like so:\r\n\r\nfor the data collection:\r\n```\r\nfire_and_forget_tasks_dict = fire_and_forget_tasks_context_var.get()\r\ncollection_task: CollectionTask = fire_and_forget_tasks_dict[FireAndForgetType.COLLECTION_TASK]\r\n if collection_task:\r\ncollection_task.add_rcom_data(data_dict) \r\n```\r\nfor the metrics: **different file\r\n```\r\nfire_and_forget_task = ReportMetricsTask(are_a, arg_b, arg_c ...)\r\nfire_and_forget_tasks = fire_and_forget_tasks_context_var.get()\r\nfire_and_forget_tasks[FireAndForgetType.METRICS_TASKS].append(fire_and_forget_task)\r\n```\r\n-----------------------------------------------------------------------------------------------------\r\nwhen we call the handle method in our server:\r\n```\r\nloop = asyncio.get_running_loop()\r\nctx = ContextVar.copy_context()\r\n** self._handle is an async method\r\nfuture = await loop.run_in_executor(None, ctx.run, functools.partial(self._handle, request_params,\r\n                                                                                       connections_holder))\r\nresponse = await wait_for(future, timeout, loop=loop)\r\n```\r\n\r\n------------------------------------------------------------------------------------------------------\r\nat the end of the request:\r\n```\r\nself.finish(err_msg)\r\nuid = uid_context_var.get()\r\n if self.id != id:\r\n                logger.error(f'self.id {self.id} != {id} id')\r\nelse:\r\n                logger.error('we got the right context')\r\nself.execute_fire_and_forget_tasks()  # goes throw all of the tasks in the fire_and_forget_tasks and execute them.\r\n```\r\nTHE PROBLEM:\r\ninside the execute method we are using async_http_client.fetch to address elasticsearch and it throws \r\ncancelledError are we taking the right approach? got any other ideas?\r\n\r\nthank you very much,\r\nSnir Zango ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2853", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2853/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2853/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2853/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2853", "id": 612994968, "node_id": "MDU6SXNzdWU2MTI5OTQ5Njg=", "number": 2853, "title": "parse_url_path mistreating url_path on windows", "user": {"login": "dukrat", "id": 1100448, "node_id": "MDQ6VXNlcjExMDA0NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukrat", "html_url": "https://github.com/dukrat", "followers_url": "https://api.github.com/users/dukrat/followers", "following_url": "https://api.github.com/users/dukrat/following{/other_user}", "gists_url": "https://api.github.com/users/dukrat/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukrat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukrat/subscriptions", "organizations_url": "https://api.github.com/users/dukrat/orgs", "repos_url": "https://api.github.com/users/dukrat/repos", "events_url": "https://api.github.com/users/dukrat/events{/privacy}", "received_events_url": "https://api.github.com/users/dukrat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-06T01:35:19Z", "updated_at": "2020-05-07T02:05:28Z", "closed_at": "2020-05-07T02:05:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nERROR    2020-05-05 21:29:34,510 [30532:HttpServer] tornado.application\r\n  Uncaught exception GET /iris/settings (::1)\r\nHTTPServerRequest(protocol='http', host='localhost:6680', method='GET', uri='/iris/settings', version='HTTP/1.1', remote_ip='::1')\r\nTraceback (most recent call last):\r\n  File \"C:\\msys64\\mingw64\\lib\\python3.8\\site-packages\\tornado\\web.py\", line 1703, in _execute\r\n    result = await result\r\n  File \"C:\\msys64\\mingw64\\lib\\python3.8\\site-packages\\tornado\\web.py\", line 2578, in get\r\n    self.path = self.parse_url_path(path)\r\n  File \"C:\\msys64\\mingw64\\lib\\python3.8\\site-packages\\tornado\\web.py\", line 2967, in parse_url_path\r\n    url_path = url_path.replace(\"/\", os.path.sep)\r\nTypeError: replace() takes 2 positional arguments but 3 were given\r\nERROR    2020-05-05 21:29:34,513 [30532:HttpServer] tornado.access\r\n```\r\n\r\nIt seems that url_path is considered <class 'pathlib.WindowsPath'> and not string as I believe is intended in the parse_url_path function.  \r\n\r\nChanging the line from\r\n`            url_path = url_path.replace(\"/\", os.path.sep)`\r\nto\r\n`            url_path = str(url_path).replace(\"/\", os.path.sep)`\r\nresolves the situation but I'm not sure if that's safe in other environments\r\n\r\nThis is on MSYS2 MINGW64 python 3.8.2-2 environment with tornado 6.0.4 installed via pip", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2851", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2851/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2851/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2851/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2851", "id": 609231489, "node_id": "MDU6SXNzdWU2MDkyMzE0ODk=", "number": 2851, "title": "Ability to configure TLS version and cipher suites", "user": {"login": "akalsnes", "id": 9532620, "node_id": "MDQ6VXNlcjk1MzI2MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9532620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akalsnes", "html_url": "https://github.com/akalsnes", "followers_url": "https://api.github.com/users/akalsnes/followers", "following_url": "https://api.github.com/users/akalsnes/following{/other_user}", "gists_url": "https://api.github.com/users/akalsnes/gists{/gist_id}", "starred_url": "https://api.github.com/users/akalsnes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akalsnes/subscriptions", "organizations_url": "https://api.github.com/users/akalsnes/orgs", "repos_url": "https://api.github.com/users/akalsnes/repos", "events_url": "https://api.github.com/users/akalsnes/events{/privacy}", "received_events_url": "https://api.github.com/users/akalsnes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-29T17:31:57Z", "updated_at": "2020-04-30T18:15:55Z", "closed_at": "2020-04-30T18:15:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "As far as I am aware, Tornado inherits the default Python TLS cipher suites and does not allow configurability. This is an issue for many organizations as TLSv1.0 and TLSv1.1 are deemed insecure.\r\n\r\nIs it possible to force TLSv1.2 only, and ideally configure the cipher suites?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2850", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2850/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2850/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2850/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2850", "id": 609137005, "node_id": "MDU6SXNzdWU2MDkxMzcwMDU=", "number": 2850, "title": "Condition closing out of scope", "user": {"login": "kaldown", "id": 3754017, "node_id": "MDQ6VXNlcjM3NTQwMTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3754017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaldown", "html_url": "https://github.com/kaldown", "followers_url": "https://api.github.com/users/kaldown/followers", "following_url": "https://api.github.com/users/kaldown/following{/other_user}", "gists_url": "https://api.github.com/users/kaldown/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaldown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaldown/subscriptions", "organizations_url": "https://api.github.com/users/kaldown/orgs", "repos_url": "https://api.github.com/users/kaldown/repos", "events_url": "https://api.github.com/users/kaldown/events{/privacy}", "received_events_url": "https://api.github.com/users/kaldown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T15:12:45Z", "updated_at": "2020-05-03T02:36:41Z", "closed_at": "2020-05-03T02:36:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/tornadoweb/tornado/blob/868772d8536280ec27d076d786a2640e9e0bdc00/demos/chat/chatdemo.py#L94-L96\r\n\r\nIs there any reason to `close()` **Condition** in `on_connection_close()`, rather thank in **finally** block?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2849", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2849/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2849/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2849/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2849", "id": 608316449, "node_id": "MDU6SXNzdWU2MDgzMTY0NDk=", "number": 2849, "title": "tornado extensions", "user": {"login": "pythonmobile", "id": 1297754, "node_id": "MDQ6VXNlcjEyOTc3NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1297754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pythonmobile", "html_url": "https://github.com/pythonmobile", "followers_url": "https://api.github.com/users/pythonmobile/followers", "following_url": "https://api.github.com/users/pythonmobile/following{/other_user}", "gists_url": "https://api.github.com/users/pythonmobile/gists{/gist_id}", "starred_url": "https://api.github.com/users/pythonmobile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pythonmobile/subscriptions", "organizations_url": "https://api.github.com/users/pythonmobile/orgs", "repos_url": "https://api.github.com/users/pythonmobile/repos", "events_url": "https://api.github.com/users/pythonmobile/events{/privacy}", "received_events_url": "https://api.github.com/users/pythonmobile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-28T13:24:44Z", "updated_at": "2020-05-03T02:40:09Z", "closed_at": "2020-05-03T02:40:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Flask has a system in which others can write extensions for flask apps. Is there a notion of extensions somewhere in tornado? If not, any hints on how to go about doing this ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2848", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2848/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2848/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2848/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2848", "id": 607191811, "node_id": "MDU6SXNzdWU2MDcxOTE4MTE=", "number": 2848, "title": "too many file descriptors in select()", "user": {"login": "GuckTubeYT", "id": 56192597, "node_id": "MDQ6VXNlcjU2MTkyNTk3", "avatar_url": "https://avatars0.githubusercontent.com/u/56192597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuckTubeYT", "html_url": "https://github.com/GuckTubeYT", "followers_url": "https://api.github.com/users/GuckTubeYT/followers", "following_url": "https://api.github.com/users/GuckTubeYT/following{/other_user}", "gists_url": "https://api.github.com/users/GuckTubeYT/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuckTubeYT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuckTubeYT/subscriptions", "organizations_url": "https://api.github.com/users/GuckTubeYT/orgs", "repos_url": "https://api.github.com/users/GuckTubeYT/repos", "events_url": "https://api.github.com/users/GuckTubeYT/events{/privacy}", "received_events_url": "https://api.github.com/users/GuckTubeYT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-27T02:51:08Z", "updated_at": "2020-05-03T02:45:36Z", "closed_at": "2020-05-03T02:45:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, please help me, when i got ddosed, i got this error\r\ntoo many file descriptors in select()\r\n\r\nThis is my code\r\n\r\n```\r\nimport tornado.ioloop\r\nimport tornado.web\r\n\r\nclass MainHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        self.write(\"Hello, world\")\r\n\r\nclass BadExampleHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        for i in range(1):\r\n            print(i)\r\n            time.sleep(5)\r\n\r\ndef make_app():\r\n    return tornado.web.Application([\r\n        (r\"/\", MainHandler),\r\n    ])\r\n\r\nif __name__ == \"__main__\":\r\n    app = make_app()\r\n    app.listen(8000)\r\n    tornado.ioloop.IOLoop.current().start()\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2846", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2846/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2846/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2846/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2846", "id": 607019202, "node_id": "MDU6SXNzdWU2MDcwMTkyMDI=", "number": 2846, "title": "show url image in html", "user": {"login": "hoseinmontazer", "id": 8070215, "node_id": "MDQ6VXNlcjgwNzAyMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8070215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoseinmontazer", "html_url": "https://github.com/hoseinmontazer", "followers_url": "https://api.github.com/users/hoseinmontazer/followers", "following_url": "https://api.github.com/users/hoseinmontazer/following{/other_user}", "gists_url": "https://api.github.com/users/hoseinmontazer/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoseinmontazer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoseinmontazer/subscriptions", "organizations_url": "https://api.github.com/users/hoseinmontazer/orgs", "repos_url": "https://api.github.com/users/hoseinmontazer/repos", "events_url": "https://api.github.com/users/hoseinmontazer/events{/privacy}", "received_events_url": "https://api.github.com/users/hoseinmontazer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-26T13:59:57Z", "updated_at": "2020-04-27T06:18:06Z", "closed_at": "2020-04-26T19:56:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\nI developed one of the demo programs (chat)\r\nBut the problem I encountered is that I can't display a image(url) in the tepmplate html\r\nin index.html i have\r\n\r\n> img_url = UsernameFinder.find_Avatr(self)\r\n> message = {\"id\": str(uuid.uuid4()), \"img_url\":img_url ,\"name\": name ,\"body\":body}\r\n\r\nand i want show img_url in web browser!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2844", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2844/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2844/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2844/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2844", "id": 603149231, "node_id": "MDU6SXNzdWU2MDMxNDkyMzE=", "number": 2844, "title": "Question: custom program flow blocking for specific websockets message", "user": {"login": "animesh-sharama", "id": 22367876, "node_id": "MDQ6VXNlcjIyMzY3ODc2", "avatar_url": "https://avatars1.githubusercontent.com/u/22367876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/animesh-sharama", "html_url": "https://github.com/animesh-sharama", "followers_url": "https://api.github.com/users/animesh-sharama/followers", "following_url": "https://api.github.com/users/animesh-sharama/following{/other_user}", "gists_url": "https://api.github.com/users/animesh-sharama/gists{/gist_id}", "starred_url": "https://api.github.com/users/animesh-sharama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/animesh-sharama/subscriptions", "organizations_url": "https://api.github.com/users/animesh-sharama/orgs", "repos_url": "https://api.github.com/users/animesh-sharama/repos", "events_url": "https://api.github.com/users/animesh-sharama/events{/privacy}", "received_events_url": "https://api.github.com/users/animesh-sharama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-20T11:03:22Z", "updated_at": "2020-04-26T14:36:39Z", "closed_at": "2020-04-26T14:36:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to block calls on tornado websocket server to wait for specific on_message to arrive from clients?\r\n\r\n```\r\nfrom tornado import websocket\r\n\r\nclass Player:\r\n\r\n    def __init__(self, name, websocket):\r\n        self.name = name\r\n        self.websocket = websocket\r\n        self.websocket.on_message = self.on_message\r\n        self.state = None\r\n        self.state_type = None\r\n\r\n    def send(self, msg):\r\n        self.websocket.write_message(msg)\r\n\r\n    def on_message(self, msg):\r\n        if msg.startswith('name:'):\r\n          self.state_type =  'NAME'\r\n          self.state = msg       \r\n\r\nclass Game:\r\n    def __init__(self, players):\r\n        self.players = players\r\n\r\n    def block_until_name_received(self):\r\n      while self.players[0].state_type != 'NAME' and self.players[1].state_type!='NAME':\r\n        pass\r\n\r\n\r\n    def start_game(self):\r\n        # wait for player to send the name information\r\n        self.block_until_name_received()\r\n        for player in self.players:\r\n            player.send('starting game players players')\r\n\r\nPLAYERS = []\r\n\r\nclass GameWebSocketHandler(websocket.WebSocketHandler):\r\n    def open(self):\r\n        global PLAYERS\r\n        logging.info(\"WebSocket opened\")\r\n        player = Player(name='abc', websocket=self)\r\n        # self.on_message = player.on_message\r\n        PLAYERS.append(player)\r\n        if len(PLAYERS) >= 2:\r\n            game_players = PLAYERS[:2]\r\n            PLAYERS = PLAYERS[2:]\r\n            game = Game(game_players)\r\n            game.start_game()\r\n\r\nclass GameApplication(tornado.web.Application):\r\n    def __init__(self):\r\n        handlers = [(r\"/\", GameWebSocketHandler)]\r\n        super(GameApplication, self).__init__(handlers)\r\n\r\napp = GameApplication()\r\napp.listen(os.environ['PORT'])\r\ntornado.ioloop.IOLoop.current().start()\r\n```\r\n\r\nIn the above code I wrote a lame  **block_until_name_received** method to block call since it goes on indefinite while loop eating up all cpu by continuously comparing the value.\r\n\r\nIs there any better way that tornado websocket supports to do the blocking maybe sleep till message arrive and if expected message has arrived resume the program flow if not go back to sleep and wait again for message arrival.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2843", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2843/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2843/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2843/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2843", "id": 602861278, "node_id": "MDU6SXNzdWU2MDI4NjEyNzg=", "number": 2843, "title": "Some tornado errors when using jupyter notebook with openssl self-signed certificate.", "user": {"login": "hongyi-zhao", "id": 11155854, "node_id": "MDQ6VXNlcjExMTU1ODU0", "avatar_url": "https://avatars2.githubusercontent.com/u/11155854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hongyi-zhao", "html_url": "https://github.com/hongyi-zhao", "followers_url": "https://api.github.com/users/hongyi-zhao/followers", "following_url": "https://api.github.com/users/hongyi-zhao/following{/other_user}", "gists_url": "https://api.github.com/users/hongyi-zhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/hongyi-zhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hongyi-zhao/subscriptions", "organizations_url": "https://api.github.com/users/hongyi-zhao/orgs", "repos_url": "https://api.github.com/users/hongyi-zhao/repos", "events_url": "https://api.github.com/users/hongyi-zhao/events{/privacy}", "received_events_url": "https://api.github.com/users/hongyi-zhao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-20T00:21:09Z", "updated_at": "2020-04-26T14:28:27Z", "closed_at": "2020-04-26T14:28:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI setup the ssl encrypted communication for my local jupyter notebook server according to th method described here: https://jupyter-notebook.readthedocs.io/en/stable/public_server.html#using-ssl-for-encrypted-communication.  Firstly, I generate the self-signed certificate as follows:\r\n```\r\n\r\n$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout mykey.key -out mycert.pem\r\n#Generating a RSA private key\r\n```\r\n\r\nThen set the following in the ~/.jupyter/jupyter_notebook_config.py\r\n```\r\nc.NotebookApp.certfile = u'/home/werner/.jupyter/custom/certificate/mycert.pem'\r\nc.NotebookApp.keyfile = u'/home/werner/.jupyter/custom/certificate/mykey.key'\r\n```\r\n\r\nFinally, start jupyter notebook and I meet some errors as following:\r\n\r\n```\r\n$ jupyter-notebook \r\n[I 08:05:44.261 NotebookApp] [jupyter_nbextensions_configurator] enabled 0.4.1\r\n[I 08:05:44.261 NotebookApp] Serving notebooks from local directory: /home/werner\r\n[I 08:05:44.261 NotebookApp] The Jupyter Notebook is running at:\r\n[I 08:05:44.261 NotebookApp] https://localhost:8888/\r\n[I 08:05:44.261 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).\r\n[W 08:05:49.171 NotebookApp] [jupyter_nbextensions_configurator] nbextension 'latex_envs/latex_envs' has duplicate listings in both '/home/werner/.pyenv/versions/py-3.7-aiida/share/jupyter/nbextensions/latex_envs/latex_envs.yaml' and '/home/werner/.local/share/jupyter/nbextensions/latex_envs/latex_envs.yaml'\r\n[W 08:05:49.186 NotebookApp] [jupyter_nbextensions_configurator] nbextension 'highlight_selected_word/main' has duplicate listings in both '/home/werner/.pyenv/versions/py-3.7-aiida/share/jupyter/nbextensions/highlight_selected_word/configurator.yaml' and '/home/werner/.local/share/jupyter/nbextensions/highlight_selected_word/configurator.yaml'\r\n[E 08:08:08.367 NotebookApp] Uncaught exception, closing connection.\r\n    Traceback (most recent call last):\r\n      File \"/home/werner/.pyenv/versions/py-3.7-aiida/lib/python3.7/site-packages/tornado/iostream.py\", line 519, in _handle_events\r\n        self._handle_read()\r\n      File \"/home/werner/.pyenv/versions/py-3.7-aiida/lib/python3.7/site-packages/tornado/iostream.py\", line 1395, in _handle_read\r\n        self._do_ssl_handshake()\r\n      File \"/home/werner/.pyenv/versions/py-3.7-aiida/lib/python3.7/site-packages/tornado/iostream.py\", line 1315, in _do_ssl_handshake\r\n        self.socket.do_handshake()\r\n      File \"/home/werner/.pyenv/versions/3.7-anaconda3-2020.02/lib/python3.7/ssl.py\", line 1139, in do_handshake\r\n        self._sslobj.do_handshake()\r\n    OSError: [Errno 0] Error\r\n[E 08:08:08.368 NotebookApp] Exception in callback None\r\n    Traceback (most recent call last):\r\n      File \"/home/werner/.pyenv/versions/py-3.7-aiida/lib/python3.7/site-packages/tornado/ioloop.py\", line 888, in start\r\n        handler_func(fd_obj, events)\r\n      File \"/home/werner/.pyenv/versions/py-3.7-aiida/lib/python3.7/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n        return fn(*args, **kwargs)\r\n      File \"/home/werner/.pyenv/versions/py-3.7-aiida/lib/python3.7/site-packages/tornado/iostream.py\", line 519, in _handle_events\r\n        self._handle_read()\r\n      File \"/home/werner/.pyenv/versions/py-3.7-aiida/lib/python3.7/site-packages/tornado/iostream.py\", line 1395, in _handle_read\r\n        self._do_ssl_handshake()\r\n      File \"/home/werner/.pyenv/versions/py-3.7-aiida/lib/python3.7/site-packages/tornado/iostream.py\", line 1315, in _do_ssl_handshake\r\n        self.socket.do_handshake()\r\n      File \"/home/werner/.pyenv/versions/3.7-anaconda3-2020.02/lib/python3.7/ssl.py\", line 1139, in do_handshake\r\n        self._sslobj.do_handshake()\r\n    OSError: [Errno 0] Error\r\n```\r\n\r\nAny hints for this issue?\r\n\r\nRegards\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2841", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2841/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2841/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2841/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2841", "id": 600389343, "node_id": "MDU6SXNzdWU2MDAzODkzNDM=", "number": 2841, "title": "process blocked when using RequestHandler.flush() as asynchronous function", "user": {"login": "JohnHerry", "id": 8011802, "node_id": "MDQ6VXNlcjgwMTE4MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8011802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnHerry", "html_url": "https://github.com/JohnHerry", "followers_url": "https://api.github.com/users/JohnHerry/followers", "following_url": "https://api.github.com/users/JohnHerry/following{/other_user}", "gists_url": "https://api.github.com/users/JohnHerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnHerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnHerry/subscriptions", "organizations_url": "https://api.github.com/users/JohnHerry/orgs", "repos_url": "https://api.github.com/users/JohnHerry/repos", "events_url": "https://api.github.com/users/JohnHerry/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnHerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-15T15:32:24Z", "updated_at": "2020-04-26T14:10:44Z", "closed_at": "2020-04-26T14:10:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "tornado 6.\r\n\r\nMy application just like this:\r\n```\r\nclass  MyHandler(tornado.web.RequestHandler):\r\n    def prepare(self):\r\n        self.ordered_tasks ={1: {\r\n             \"task_opt\": \"lower\",\r\n             \"task_param\": \"hello\"  \r\n        }, 2: {    \r\n             \"task_opt\": \"upper\",\r\n             \"task_param\": \"word\"\r\n       }, ...}\r\n       self.to_be_chunked_id = 0\r\n\r\n    async def long_run_function(self, task_id, task_opt, task_param):\r\n        self. ordered_tasks[task_id][\"async_result\"] = await  third_party_function(task_opt, task_param)\r\n        await self.chunk_out_result()\r\n\r\n    async def chunk_out_result(self):\r\n        while self.to_be_chunked_id < len(self.ordered_tasks ):\r\n            data = self.ordered_tasks[self.to_be_chunked_id].get(\"async_result\", None)\r\n            if not data:\r\n                break\r\n            else:\r\n                self.write(data)\r\n                **await** self.flush()\r\n                self.to_be_chunked_id += 1\r\n     async def schedule_tasks(self):\r\n        coroutines = []\r\n        for id, item in self.ordered_tasks.items():\r\n            coroutines.append(self.long_run_function(id, item[\"task_opt\"], item[\"task_param\"]))\r\n        return coroutines\r\n\r\n    async def post(self):\r\n        concurrent_tasks = await self.schedule_tasks\r\n        await tornado.gen.multi(concurrent_tasks )\r\n        self.finish()\r\n        assert(self.to_be_chunked_id == len(self.ordered_tasks))\r\n```\r\n\r\nThe problem happend when we call ``` await self.flush() ``` ; the program may be blocked there with the client side blocked also some times.  but when we use ``` self.flush() ```  with out the await operater, the app runs well. Then is the flush function an  asynchronous function? or it is a sync function\uff1f how to   avoid the problem of blocking when calling self.flush async?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2840", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2840/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2840/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2840/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2840", "id": 600018180, "node_id": "MDU6SXNzdWU2MDAwMTgxODA=", "number": 2840, "title": "Invalid setting cookie", "user": {"login": "reBiocoder", "id": 39401819, "node_id": "MDQ6VXNlcjM5NDAxODE5", "avatar_url": "https://avatars2.githubusercontent.com/u/39401819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reBiocoder", "html_url": "https://github.com/reBiocoder", "followers_url": "https://api.github.com/users/reBiocoder/followers", "following_url": "https://api.github.com/users/reBiocoder/following{/other_user}", "gists_url": "https://api.github.com/users/reBiocoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/reBiocoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reBiocoder/subscriptions", "organizations_url": "https://api.github.com/users/reBiocoder/orgs", "repos_url": "https://api.github.com/users/reBiocoder/repos", "events_url": "https://api.github.com/users/reBiocoder/events{/privacy}", "received_events_url": "https://api.github.com/users/reBiocoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-15T04:50:25Z", "updated_at": "2020-04-15T15:58:49Z", "closed_at": "2020-04-15T15:58:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "while user login\uff0ci set cookie for him. code show as below:\r\n```\r\nclass LoginHandler(CustomBasicHandler):\r\n    async def post_process(self, *args, **kwargs):\r\n        username = self.data.get('username', None)\r\n        password = self.data.get('password', None)\r\n        if username and password:\r\n            validate_user_result = await validate_user_info(username)\r\n            if validate_user_result is None:\r\n                self.send_response_data(MesCode.login, info=\"not register\")\r\n            else:  \r\n                real_name = validate_user_result[\"real_name\"]\r\n                if validate_user_result[\"password\"] == make_password(password):\r\n                    # set cookie\r\n                    self.set_secure_cookie(\"session_id\", set_cookie(username, real_name), expires_days=1, path='/')\r\n                    self.send_response_data(MesCode.success, {\"real_name\": real_name, \"username\": username}, info=\"success\")\r\n                else:\r\n                    self.send_response_data(MesCode.fail, {'res': 'password error'}, info=\"error\")\r\n        else:\r\n            self.send_response_data(MesCode.fail, info=\"error\")\r\n```\r\nWhen I visit the \u2018/api/login\u2019, the response does set a cookie\uff0c\r\n![$T0C@5QWCZ JM}ITF5%CGKJ](https://user-images.githubusercontent.com/39401819/79299557-f4b91600-7f16-11ea-9134-04da5ba8b71d.png)\r\nbut it was not found in the browser application\r\n![image](https://user-images.githubusercontent.com/39401819/79299697-495c9100-7f17-11ea-9a82-d6907d0d0687.png)\r\nAt the same time, I visit other path browsers in the same domain and no cookies\r\n![Z{97YDTTMRH1NUWR`A1LV`X](https://user-images.githubusercontent.com/39401819/79299814-96d8fe00-7f17-11ea-9549-0422b0f0eb50.png)\r\nIs my operation wrong?Look forward to your answer\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2838", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2838/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2838/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2838/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2838", "id": 597164762, "node_id": "MDU6SXNzdWU1OTcxNjQ3NjI=", "number": 2838, "title": "RuntimeError: Cannot run the event loop while another loop is running", "user": {"login": "appleyuchi", "id": 27613483, "node_id": "MDQ6VXNlcjI3NjEzNDgz", "avatar_url": "https://avatars1.githubusercontent.com/u/27613483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/appleyuchi", "html_url": "https://github.com/appleyuchi", "followers_url": "https://api.github.com/users/appleyuchi/followers", "following_url": "https://api.github.com/users/appleyuchi/following{/other_user}", "gists_url": "https://api.github.com/users/appleyuchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/appleyuchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/appleyuchi/subscriptions", "organizations_url": "https://api.github.com/users/appleyuchi/orgs", "repos_url": "https://api.github.com/users/appleyuchi/repos", "events_url": "https://api.github.com/users/appleyuchi/events{/privacy}", "received_events_url": "https://api.github.com/users/appleyuchi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-09T09:55:43Z", "updated_at": "2020-04-26T13:52:17Z", "closed_at": "2020-04-26T13:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "the code is\r\nhttps://paste.ubuntu.com/p/Vs77h77PqG/\r\nthe error is:\r\n\r\n\r\nERROR:tornado.application:Uncaught exception GET / (127.0.0.1)\r\nHTTPServerRequest(protocol='http', host='127.0.0.1:8000', method='GET', uri='/', version='HTTP/1.1', remote_ip='127.0.0.1')\r\nTraceback (most recent call last):\r\n  File \"/home/appleyuchi/anaconda3/envs/Python3.6/lib/python3.6/site-packages/tornado/web.py\", line 1590, in _execute\r\n    result = method(*self.path_args, **self.path_kwargs)\r\n  File \"wangyou.py\", line 11, in get\r\n    http_client = tornado.httpclient.HTTPClient()\r\n  File \"/home/appleyuchi/anaconda3/envs/Python3.6/lib/python3.6/site-packages/tornado/httpclient.py\", line 95, in __init__\r\n    gen.coroutine(lambda: async_client_class(**kwargs)))\r\n  File \"/home/appleyuchi/anaconda3/envs/Python3.6/lib/python3.6/site-packages/tornado/ioloop.py\", line 571, in run_sync\r\n    self.start()\r\n  File \"/home/appleyuchi/anaconda3/envs/Python3.6/lib/python3.6/site-packages/tornado/platform/asyncio.py\", line 132, in start\r\n    self.asyncio_loop.run_forever()\r\n  File \"/home/appleyuchi/anaconda3/envs/Python3.6/lib/python3.6/asyncio/base_events.py\", line 432, in run_forever\r\n    'Cannot run the event loop while another loop is running')\r\nRuntimeError: Cannot run the event loop while another loop is running\r\nERROR:tornado.access:500 GET / (127.0.0.1) 2.25ms\r\n\r\n\r\nPlease help,thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2835", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2835/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2835/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2835/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2835", "id": 594908274, "node_id": "MDU6SXNzdWU1OTQ5MDgyNzQ=", "number": 2835, "title": "The server did not trigger on_close after the client was disconnected due to network failure", "user": {"login": "Bbingbing", "id": 34453135, "node_id": "MDQ6VXNlcjM0NDUzMTM1", "avatar_url": "https://avatars2.githubusercontent.com/u/34453135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bbingbing", "html_url": "https://github.com/Bbingbing", "followers_url": "https://api.github.com/users/Bbingbing/followers", "following_url": "https://api.github.com/users/Bbingbing/following{/other_user}", "gists_url": "https://api.github.com/users/Bbingbing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bbingbing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bbingbing/subscriptions", "organizations_url": "https://api.github.com/users/Bbingbing/orgs", "repos_url": "https://api.github.com/users/Bbingbing/repos", "events_url": "https://api.github.com/users/Bbingbing/events{/privacy}", "received_events_url": "https://api.github.com/users/Bbingbing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-06T08:28:04Z", "updated_at": "2020-04-07T07:00:35Z", "closed_at": "2020-04-07T07:00:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, sorry, I don't know if I'm missing something somewhere, I wrote the following code, when I stop the client program,the server immediately triggered function on_close, but the server did not trigger on_close after the client was disconnected due to network failure\r\n\r\nhope it's my fault\r\n\r\ntornado version  6.0.4\r\n\r\nfrom tornado.ioloop import IOLoop\r\nfrom tornado.websocket import WebSocketHandler\r\nfrom tornado.web import Application\r\n\r\n\r\nclients = list()\r\n\r\n\r\nclass MyWebSocketHandler(WebSocketHandler):\r\n\r\n    async def open(self, *args, **kwargs):\r\n        clients.append(self)\r\n\r\n    async def on_message(self, message):\r\n        pass\r\n\r\n    def on_close(self):\r\n        print('on_close triggered')\r\n        if self in clients:\r\n            clients.remove(self)\r\n        self.close()\r\n\r\n    def check_origin(self, origin):\r\n        return True\r\n\r\n\r\nif __name__ == '__main__':\r\n    app = Application([\r\n        (r'/ws/test', MyWebSocketHandler),\r\n    ], debug=True)\r\n\r\n    app.listen(10099)\r\n    IOLoop.current().start()\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2834", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2834/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2834/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2834/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2834", "id": 593791968, "node_id": "MDU6SXNzdWU1OTM3OTE5Njg=", "number": 2834, "title": "Still seeing \"Stream is Closed\" Errors in 6.0.4", "user": {"login": "blink1073", "id": 2096628, "node_id": "MDQ6VXNlcjIwOTY2Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2096628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blink1073", "html_url": "https://github.com/blink1073", "followers_url": "https://api.github.com/users/blink1073/followers", "following_url": "https://api.github.com/users/blink1073/following{/other_user}", "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}", "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions", "organizations_url": "https://api.github.com/users/blink1073/orgs", "repos_url": "https://api.github.com/users/blink1073/repos", "events_url": "https://api.github.com/users/blink1073/events{/privacy}", "received_events_url": "https://api.github.com/users/blink1073/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-04T10:24:05Z", "updated_at": "2020-04-05T09:06:31Z", "closed_at": "2020-04-05T09:06:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're sill seeing the `Stream is Closed` error reported [here](https://github.com/tornadoweb/tornado/issues/2651#issuecomment-515687031) in the CI builds for [Jupyterlab](https://dev.azure.com/jupyterlab/jupyterlab/_build/results?buildId=5813&view=logs), where we've installed tornado 6.0.4, but we are seeing the following error during shutdown, intermittently:\r\n\r\n```python\r\n[I 23:20:44.416 TerminalTest] New terminal with automatic name: 1\r\nTermSocket.open: 1\r\nTermSocket.open: Opened 1\r\nPage loaded\r\n[I 23:20:44.499 TerminalTest] New terminal with automatic name: 2\r\n>> Example started!\r\nTermSocket.open: 2\r\n[E 23:20:44.565 TerminalTest] Uncaught exception GET /foo/terminals/websocket/2?token=a7a5d7ffa004312eb0867f817963bc768b60de7e8540fe87 (127.0.0.1)\r\n    HTTPServerRequest(protocol='http', host='127.0.0.1:8888', method='GET', uri='/foo/terminals/websocket/2?token=a7a5d7ffa004312eb0867f817963bc768b60de7e8540fe87', version='HTTP/1.1', remote_ip='127.0.0.1')\r\n    Traceback (most recent call last):\r\n      File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/tornado/websocket.py\", line 956, in _accept_connection\r\n        open_result = handler.open(*handler.open_args, **handler.open_kwargs)\r\n      File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/notebook/base/zmqhandlers.py\", line 168, in open\r\n        return super(WebSocketMixin, self).open(*args, **kwargs)\r\n      File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/terminado/websocket.py\", line 59, in open\r\n        self.send_json_message([\"setup\", {}])\r\n      File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/terminado/websocket.py\", line 68, in send_json_message\r\n        self.write_message(json_msg)\r\n      File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/notebook/terminal/handlers.py\", line 41, in write_message\r\n        super(TermSocket, self).write_message(message, binary=binary)\r\n      File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/tornado/websocket.py\", line 339, in write_message\r\n        raise WebSocketClosedError()\r\n    tornado.websocket.WebSocketClosedError\r\nExample test complete!\r\nUncaught exception %s\r\n%r\r\nTask exception was never retrieved\r\nfuture: <Task finished coro=<WebSocketProtocol13.write_message.<locals>.wrapper() done, defined at /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/tornado/websocket.py:1102> exception=WebSocketClosedError()>\r\nTraceback (most recent call last):\r\n  File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/tornado/websocket.py\", line 1104, in wrapper\r\n    await fut\r\ntornado.iostream.StreamClosedError: Stream is closed\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/tornado/websocket.py\", line 1106, in wrapper\r\n    raise WebSocketClosedError()\r\ntornado.websocket.WebSocketClosedError\r\nWebsocket closed\r\n```\r\n\r\nThe example test is starting the tornado server, running a browser test using [puppeteer](https://github.com/jupyterlab/jupyterlab/blob/master/examples/example_check.py#L62) in a subprocess, and then shutting down the [server](https://github.com/jupyterlab/jupyterlab/blob/d62dfab15231eb7af9a5b1c4736abd6b4128bae6/jupyterlab/browser_check.py#L88).   Note this is being done in a [ThreadPoolExecutor](https://github.com/jupyterlab/jupyterlab/blob/d62dfab15231eb7af9a5b1c4736abd6b4128bae6/jupyterlab/browser_check.py#L106), which is the first thing I'm going to try fixing now that we only support Python 3.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2829", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2829/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2829/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2829/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2829", "id": 588990937, "node_id": "MDU6SXNzdWU1ODg5OTA5Mzc=", "number": 2829, "title": "AttributeError: module 'tornado' has no attribute 'web'", "user": {"login": "oldmtn", "id": 4652810, "node_id": "MDQ6VXNlcjQ2NTI4MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4652810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oldmtn", "html_url": "https://github.com/oldmtn", "followers_url": "https://api.github.com/users/oldmtn/followers", "following_url": "https://api.github.com/users/oldmtn/following{/other_user}", "gists_url": "https://api.github.com/users/oldmtn/gists{/gist_id}", "starred_url": "https://api.github.com/users/oldmtn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oldmtn/subscriptions", "organizations_url": "https://api.github.com/users/oldmtn/orgs", "repos_url": "https://api.github.com/users/oldmtn/repos", "events_url": "https://api.github.com/users/oldmtn/events{/privacy}", "received_events_url": "https://api.github.com/users/oldmtn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-27T09:10:51Z", "updated_at": "2020-04-25T20:25:51Z", "closed_at": "2020-04-25T20:25:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"mainServer.py\", line 12, in <module>\r\n    from handler import gainTestInfo\r\n  File \"/Users/huanghao/Documents/www_htdocs/1/ttTestController/handler/gainTestInfo.py\", line 7, in <module>\r\n    class GainTestInfoHandler(tornado.web.RequestHandler):\r\nAttributeError: module 'tornado' has no attribute 'web'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2827", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2827/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2827/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2827/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2827", "id": 588769378, "node_id": "MDU6SXNzdWU1ODg3NjkzNzg=", "number": 2827, "title": "Python 3.7.5 AttributeError: module 'asyncio' has no attribute 'Future'", "user": {"login": "rafe-g", "id": 7691924, "node_id": "MDQ6VXNlcjc2OTE5MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/7691924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafe-g", "html_url": "https://github.com/rafe-g", "followers_url": "https://api.github.com/users/rafe-g/followers", "following_url": "https://api.github.com/users/rafe-g/following{/other_user}", "gists_url": "https://api.github.com/users/rafe-g/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafe-g/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafe-g/subscriptions", "organizations_url": "https://api.github.com/users/rafe-g/orgs", "repos_url": "https://api.github.com/users/rafe-g/repos", "events_url": "https://api.github.com/users/rafe-g/events{/privacy}", "received_events_url": "https://api.github.com/users/rafe-g/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-26T22:35:19Z", "updated_at": "2020-03-26T23:29:13Z", "closed_at": "2020-03-26T23:29:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running the starter code provided on the main page:\r\n\r\n```\r\nimport tornado.ioloop\r\nimport tornado.web\r\n\r\nclass MainHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        self.write(\"Hello, world\")\r\n\r\ndef make_app():\r\n    return tornado.web.Application([\r\n        (r\"/\", MainHandler),\r\n    ])\r\n\r\nif __name__ == \"__main__\":\r\n    app = make_app()\r\n    app.listen(8888)\r\n    tornado.ioloop.IOLoop.current().start()\r\n```\r\n\r\nI get this error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"socket.py\", line 1, in <module>\r\n    import tornado.ioloop\r\n  File \"/Users/desktop/env/lib/python3.7/site-packages/tornado/ioloop.py\", line 33, in <module>\r\n    import asyncio\r\n  File \"/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/__init__.py\", line 8, in <module>\r\n    from .base_events import *\r\n  File \"/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py\", line 23, in <module>\r\n    import socket\r\n  File \"/Users/desktop/socket.py\", line 2, in <module>\r\n    import tornado.web\r\n  File \"/Users/desktop/env/lib/python3.7/site-packages/tornado/web.py\", line 84, in <module>\r\n    from tornado.concurrent import Future, future_set_result_unless_cancelled\r\n  File \"/Users/desktop/env/lib/python3.7/site-packages/tornado/concurrent.py\", line 47, in <module>\r\n    Future = asyncio.Future\r\nAttributeError: module 'asyncio' has no attribute 'Future'\r\n```\r\n\r\nInstalled tornado using:\r\n\r\n`pip3 install tornado`\r\n\r\nrunning Python 3.7.5 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2823", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2823/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2823/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2823/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2823", "id": 578239836, "node_id": "MDU6SXNzdWU1NzgyMzk4MzY=", "number": 2823, "title": "Why are sockets handled this way?", "user": {"login": "gael-ian", "id": 216617, "node_id": "MDQ6VXNlcjIxNjYxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/216617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gael-ian", "html_url": "https://github.com/gael-ian", "followers_url": "https://api.github.com/users/gael-ian/followers", "following_url": "https://api.github.com/users/gael-ian/following{/other_user}", "gists_url": "https://api.github.com/users/gael-ian/gists{/gist_id}", "starred_url": "https://api.github.com/users/gael-ian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gael-ian/subscriptions", "organizations_url": "https://api.github.com/users/gael-ian/orgs", "repos_url": "https://api.github.com/users/gael-ian/repos", "events_url": "https://api.github.com/users/gael-ian/events{/privacy}", "received_events_url": "https://api.github.com/users/gael-ian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-09T23:06:07Z", "updated_at": "2020-03-14T17:11:18Z", "closed_at": "2020-03-14T17:11:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying to set up a Tornado app ([thumbor](https://github.com/thumbor/thumbor) to be precise. See [thumbor#1269](https://github.com/thumbor/thumbor/issues/1269)), with nginx as a frontend server (managing vhosts, dealing with SSL certificates, etc.) and an Unix socket in between (so nobody has to remember which port is in use and access control is finer).\r\n\r\nIn the process, I discovered that Tornado first deletes any existing file or socket then creates a new one (see [`bind_unix_socket` in `netutils.py`](https://github.com/tornadoweb/tornado/blob/master/tornado/netutil.py#L193) . Is there a reason for this?\r\n\r\nPeople may also want to manage the socket independently (i.e.: _via_ a systemd socket unit). It allows an app to be restarted and bound to the same socket, able to resume requests that came while it was down. With Tornado recreating the socket on every launch, it's not possible.\r\n\r\nIt also requires to set permissions on the socket folder open enough for Tornado to be able to write in. This can be a problem for someone who wants to use a socket stored in a directory where Tornado's process owner can't write, such as `/run`.\r\n\r\nI can see reasons to deal with socket that way, such as dismissing sockets gone wild after a crash or easily flushing anything that could have been left in on the last shutdown, but I'd like to know if it's a design choice or if other use cases can be considered.\r\n\r\nThanks\r\n\r\nP.S.: Just seing #2211 but it gives only part of the answer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2822", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2822/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2822/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2822/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2822", "id": 576857982, "node_id": "MDU6SXNzdWU1NzY4NTc5ODI=", "number": 2822, "title": "Make tornado options standalone package", "user": {"login": "inyutin", "id": 28871177, "node_id": "MDQ6VXNlcjI4ODcxMTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/28871177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inyutin", "html_url": "https://github.com/inyutin", "followers_url": "https://api.github.com/users/inyutin/followers", "following_url": "https://api.github.com/users/inyutin/following{/other_user}", "gists_url": "https://api.github.com/users/inyutin/gists{/gist_id}", "starred_url": "https://api.github.com/users/inyutin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inyutin/subscriptions", "organizations_url": "https://api.github.com/users/inyutin/orgs", "repos_url": "https://api.github.com/users/inyutin/repos", "events_url": "https://api.github.com/users/inyutin/events{/privacy}", "received_events_url": "https://api.github.com/users/inyutin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-06T11:02:21Z", "updated_at": "2020-03-06T20:52:43Z", "closed_at": "2020-03-06T20:52:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tornado.options is very cool module. I use it a lot on my work. \r\nI'm sure that it's the best module for parsing options and working with them.\r\n\r\nAs I see it's already a standalone module:\r\nhttps://github.com/tornadoweb/tornado/blob/d6819307ee050bbd8ec5deb623e9150ce2220ef9/tornado/options.py#L22\r\n\r\nHowever, there is no way to install tornado.options without whole tornado project.\r\nI mean it will be cool to have tornado.oprions like a standalone pip package. It will be great to install just options without other stuff.\r\n\r\n Can I create such a package? Of course, I will mention that it's original tornado.options.\r\nBut is it okay for Apache License 2.0?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2817", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2817/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2817/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2817/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2817", "id": 573346093, "node_id": "MDU6SXNzdWU1NzMzNDYwOTM=", "number": 2817, "title": "Tornado leap year (2020-2-29)", "user": {"login": "smaran2005", "id": 58915555, "node_id": "MDQ6VXNlcjU4OTE1NTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/58915555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaran2005", "html_url": "https://github.com/smaran2005", "followers_url": "https://api.github.com/users/smaran2005/followers", "following_url": "https://api.github.com/users/smaran2005/following{/other_user}", "gists_url": "https://api.github.com/users/smaran2005/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaran2005/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaran2005/subscriptions", "organizations_url": "https://api.github.com/users/smaran2005/orgs", "repos_url": "https://api.github.com/users/smaran2005/repos", "events_url": "https://api.github.com/users/smaran2005/events{/privacy}", "received_events_url": "https://api.github.com/users/smaran2005/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-29T17:23:27Z", "updated_at": "2020-04-25T20:09:58Z", "closed_at": "2020-04-25T20:09:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe that there is a problem when the day is February 29.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2816", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2816/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2816/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2816/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2816", "id": 569498242, "node_id": "MDU6SXNzdWU1Njk0OTgyNDI=", "number": 2816, "title": "ImportError: cannot import name 'PY3'", "user": {"login": "s-ansa", "id": 55759080, "node_id": "MDQ6VXNlcjU1NzU5MDgw", "avatar_url": "https://avatars2.githubusercontent.com/u/55759080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/s-ansa", "html_url": "https://github.com/s-ansa", "followers_url": "https://api.github.com/users/s-ansa/followers", "following_url": "https://api.github.com/users/s-ansa/following{/other_user}", "gists_url": "https://api.github.com/users/s-ansa/gists{/gist_id}", "starred_url": "https://api.github.com/users/s-ansa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/s-ansa/subscriptions", "organizations_url": "https://api.github.com/users/s-ansa/orgs", "repos_url": "https://api.github.com/users/s-ansa/repos", "events_url": "https://api.github.com/users/s-ansa/events{/privacy}", "received_events_url": "https://api.github.com/users/s-ansa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-23T13:51:31Z", "updated_at": "2020-02-28T03:32:07Z", "closed_at": "2020-02-28T03:32:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tornado version: 4.5.3\r\nPython version: 3.5.3 \r\n\r\nError appears in Jupyter Notebook on importing jupyterhub.spawner which in turn imports tornado. \r\n\r\n\r\n```\r\n/usr/local/lib/python3.5/dist-packages/jupyterhub/utils.py in <module>()\r\n     27 from tornado import gen\r\n     28 from tornado import ioloop\r\n---> 29 from tornado import web\r\n     30 from tornado.httpclient import AsyncHTTPClient\r\n     31 from tornado.httpclient import HTTPError\r\n\r\n/usr/local/lib/python3.5/dist-packages/tornado/web.py in <module>()\r\n     84 from tornado import escape\r\n     85 from tornado import gen\r\n---> 86 from tornado import httputil\r\n     87 from tornado import iostream\r\n     88 from tornado import locale\r\n\r\n/usr/local/lib/python3.5/dist-packages/tornado/httputil.py in <module>()\r\n     34 from tornado.escape import native_str, parse_qs_bytes, utf8\r\n     35 from tornado.log import gen_log\r\n---> 36 from tornado.util import ObjectDict, PY3\r\n     37 \r\n     38 if PY3:\r\n\r\nImportError: cannot import name 'PY3'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2813", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2813/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2813/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2813/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2813", "id": 568453267, "node_id": "MDU6SXNzdWU1Njg0NTMyNjc=", "number": 2813, "title": "[question] Interact on WebSocketHandler(s) from RequestHandler", "user": {"login": "flapili", "id": 29481952, "node_id": "MDQ6VXNlcjI5NDgxOTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/29481952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flapili", "html_url": "https://github.com/flapili", "followers_url": "https://api.github.com/users/flapili/followers", "following_url": "https://api.github.com/users/flapili/following{/other_user}", "gists_url": "https://api.github.com/users/flapili/gists{/gist_id}", "starred_url": "https://api.github.com/users/flapili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flapili/subscriptions", "organizations_url": "https://api.github.com/users/flapili/orgs", "repos_url": "https://api.github.com/users/flapili/repos", "events_url": "https://api.github.com/users/flapili/events{/privacy}", "received_events_url": "https://api.github.com/users/flapili/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-20T17:19:21Z", "updated_at": "2020-04-25T20:10:26Z", "closed_at": "2020-04-25T20:10:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, Sorry I'm not sure asking advise here is the best place but there is no official forum/discord/ect\r\n\r\nMaybe this question could become a request feature if it make sense to you.\r\n\r\nI'm creating a REST API and I think about a notification system, Tornado implement WS so I'm trying to use it but there is no way to interract on a `websocket.WebSocketHandler` from a`web.RequestHandler`.\r\n\r\nShould I use `open` and `on_close` to add/delete the `WebSocketHandler` instance like \r\n```py\r\n\r\nclass NotifyWebSocket(tornado.websocket.WebSocketHandler):\r\n    def open(self):\r\n        self.application.ws.append(self)\r\n\r\n    def on_close(self):\r\n        self.application.ws.remove(self)\r\n\r\nclass ExampleHandler(tornado.web.RequestHandler):\r\n    def post(self):\r\n        # somebody insert in a database as example\r\n        \r\n        # a kind of broadcast\r\n        for ws in self.application.ws:\r\n            ws.write_message(\"a json object of the new data\")\r\n```\r\nAlso could I secure/identify user in WebSocketHandler with cookies ? `WebSocketHandler`  inherit of `RequestHandler` so get_secure_cookie is accessible but according to the doc \"the protocol is message-based. Consequently, most of the Tornado HTTP facilities are not available in handlers of this type\".\r\n\r\nBest regard", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2810", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2810/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2810/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2810/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2810", "id": 563361993, "node_id": "MDU6SXNzdWU1NjMzNjE5OTM=", "number": 2810, "title": "Wheel release for Python 3.8 on Windows?", "user": {"login": "zooba", "id": 1693688, "node_id": "MDQ6VXNlcjE2OTM2ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1693688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zooba", "html_url": "https://github.com/zooba", "followers_url": "https://api.github.com/users/zooba/followers", "following_url": "https://api.github.com/users/zooba/following{/other_user}", "gists_url": "https://api.github.com/users/zooba/gists{/gist_id}", "starred_url": "https://api.github.com/users/zooba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zooba/subscriptions", "organizations_url": "https://api.github.com/users/zooba/orgs", "repos_url": "https://api.github.com/users/zooba/repos", "events_url": "https://api.github.com/users/zooba/events{/privacy}", "received_events_url": "https://api.github.com/users/zooba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-11T17:26:48Z", "updated_at": "2020-03-04T02:44:56Z", "closed_at": "2020-03-04T02:44:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see from other issues that you have resolved all the known problems on Python 3.8, so I'm wondering about the possibility of getting a Windows wheel release some time soon?\r\n\r\nFor context, I am in control of where the Windows built-in [\"python.exe\" redirector](https://devblogs.microsoft.com/python/python-in-the-windows-10-may-2019-update/) points, and would like to update it to use Python 3.8 rather than 3.7. But Tornado is on my list of critical packages (due to Jupyter's dependency), so I'm holding off until you're ready.\r\n\r\nLet me know if there's anything I can do to help out.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2809", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2809/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2809/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2809/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2809", "id": 563091964, "node_id": "MDU6SXNzdWU1NjMwOTE5NjQ=", "number": 2809, "title": "Run Demos Project : Blog use aiomysql", "user": {"login": "noormanboy", "id": 39110230, "node_id": "MDQ6VXNlcjM5MTEwMjMw", "avatar_url": "https://avatars3.githubusercontent.com/u/39110230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noormanboy", "html_url": "https://github.com/noormanboy", "followers_url": "https://api.github.com/users/noormanboy/followers", "following_url": "https://api.github.com/users/noormanboy/following{/other_user}", "gists_url": "https://api.github.com/users/noormanboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/noormanboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noormanboy/subscriptions", "organizations_url": "https://api.github.com/users/noormanboy/orgs", "repos_url": "https://api.github.com/users/noormanboy/repos", "events_url": "https://api.github.com/users/noormanboy/events{/privacy}", "received_events_url": "https://api.github.com/users/noormanboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-11T10:02:54Z", "updated_at": "2020-02-12T03:24:17Z", "closed_at": "2020-02-12T03:24:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im use aiomysql not use aiopg for database, but error message\r\n\r\n with (await self.application.db.connection.cursor()) as cur:\r\nAttributeError: 'Pool' object has no attribute 'connection'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2808", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2808/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2808/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2808/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2808", "id": 562176306, "node_id": "MDU6SXNzdWU1NjIxNzYzMDY=", "number": 2808, "title": "Cannot open Jupyter Notebook", "user": {"login": "ocesp98", "id": 59799466, "node_id": "MDQ6VXNlcjU5Nzk5NDY2", "avatar_url": "https://avatars2.githubusercontent.com/u/59799466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ocesp98", "html_url": "https://github.com/ocesp98", "followers_url": "https://api.github.com/users/ocesp98/followers", "following_url": "https://api.github.com/users/ocesp98/following{/other_user}", "gists_url": "https://api.github.com/users/ocesp98/gists{/gist_id}", "starred_url": "https://api.github.com/users/ocesp98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ocesp98/subscriptions", "organizations_url": "https://api.github.com/users/ocesp98/orgs", "repos_url": "https://api.github.com/users/ocesp98/repos", "events_url": "https://api.github.com/users/ocesp98/events{/privacy}", "received_events_url": "https://api.github.com/users/ocesp98/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-09T13:23:50Z", "updated_at": "2020-02-10T19:47:55Z", "closed_at": "2020-02-10T19:47:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to create a new Anaconda environment, I cannot load Jupyter Notebook. I get following error: \r\n\r\n> Traceback (most recent call last):\r\nFile \"C:\\Users\\X\\Anaconda3\\envs\\Stellargraph\\Scripts\\jupyter-notebook-script.py\", line 6, in \r\nfrom notebook.notebookapp import main\r\nFile \"C:\\Users\\X\\Anaconda3\\envs\\Stellargraph\\lib\\site-packages\\notebook\\notebookapp.py\", line 49, in \r\nfrom zmq.eventloop import ioloop\r\nFile \"C:\\Users\\X\\Anaconda3\\envs\\Stellargraph\\lib\\site-packages\\zmq\\eventloop\\__init__.py\", line 3, in \r\nfrom zmq.eventloop.ioloop import IOLoop\r\nFile \"C:\\Users\\X\\Anaconda3\\envs\\Stellargraph\\lib\\site-packages\\zmq\\eventloop\\ioloop.py\", line 78, in \r\nwhile _IOLoop.configurable_default() is not _IOLoop:\r\nFile \"C:\\Users\\X\\Anaconda3\\envs\\Stellargraph\\lib\\site-packages\\tornado\\ioloop.py\", line 328, in configurable_default\r\nfrom tornado.platform.asyncio import AsyncIOLoop\r\nFile \"C:\\Users\\X\\Anaconda3\\envs\\Stellargraph\\lib\\site-packages\\tornado\\platform\\asyncio.py\", line 34, in \r\nasyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())\r\nAttributeError: module 'asyncio' has no attribute 'WindowsSelectorEventLoopPolicy'\r\n\r\nThis only happens when I want to open a notebook in the new environment. I already created another environment a few weeks ago and that seemed to work fine. However, then I deleted that environment and when I wanted to create a new one, it wouldn't work anymore.\r\n\r\nI work with Python 3.6 and Tornado 6.0.3\r\n\r\nWhat can I do about this?\r\nThank you in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2803", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2803/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2803/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2803/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2803", "id": 554584170, "node_id": "MDU6SXNzdWU1NTQ1ODQxNzA=", "number": 2803, "title": "parse_multipart_form_data for stream_request_body", "user": {"login": "PLSDdev", "id": 60252267, "node_id": "MDQ6VXNlcjYwMjUyMjY3", "avatar_url": "https://avatars3.githubusercontent.com/u/60252267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PLSDdev", "html_url": "https://github.com/PLSDdev", "followers_url": "https://api.github.com/users/PLSDdev/followers", "following_url": "https://api.github.com/users/PLSDdev/following{/other_user}", "gists_url": "https://api.github.com/users/PLSDdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/PLSDdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PLSDdev/subscriptions", "organizations_url": "https://api.github.com/users/PLSDdev/orgs", "repos_url": "https://api.github.com/users/PLSDdev/repos", "events_url": "https://api.github.com/users/PLSDdev/events{/privacy}", "received_events_url": "https://api.github.com/users/PLSDdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-24T07:28:05Z", "updated_at": "2020-01-24T17:30:41Z", "closed_at": "2020-01-24T17:30:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "As per the example in https://github.com/Lookyan/tornado-stream-request\r\n\r\n\r\n@stream_request_body\r\nclass UploadHandler(BaseHandler, StreamingFormDataParserDelegate):\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n\r\nWhich class is BaseHandler.\r\nWhen I run the code I get the following error \r\n\r\nsuper().__init__(*args, **kwargs)\r\nTypeError: super() takes at least 1 argument (0 given)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2798", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2798/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2798/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2798/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2798", "id": 549792538, "node_id": "MDU6SXNzdWU1NDk3OTI1Mzg=", "number": 2798, "title": "Running sync code with run_sync_func tornado 5.1 and above ", "user": {"login": "Gusakovskiy", "id": 13348573, "node_id": "MDQ6VXNlcjEzMzQ4NTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/13348573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gusakovskiy", "html_url": "https://github.com/Gusakovskiy", "followers_url": "https://api.github.com/users/Gusakovskiy/followers", "following_url": "https://api.github.com/users/Gusakovskiy/following{/other_user}", "gists_url": "https://api.github.com/users/Gusakovskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gusakovskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gusakovskiy/subscriptions", "organizations_url": "https://api.github.com/users/Gusakovskiy/orgs", "repos_url": "https://api.github.com/users/Gusakovskiy/repos", "events_url": "https://api.github.com/users/Gusakovskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/Gusakovskiy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-01-14T20:13:41Z", "updated_at": "2020-01-18T19:00:36Z", "closed_at": "2020-01-16T19:42:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.7\r\nTornado 5.1 and above.\r\n\r\nHello, I have a problem running async code in sync manner when tornado IOLoop is running.\r\nThe simplified version of what I am trying to achieve is looked like:\r\n\r\n```\r\nimport tornado.ioloop\r\nimport tornado.web\r\nimport asyncio\r\n\r\ndef run_sync():\r\n    return asyncio.run(_async_connect())\r\n\r\nasync def _async_connect():\r\n      await asyncio.sleep(3)\r\n      return {'error': 42}\r\n\r\nclass MainHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        result = run_sync()\r\n        self.write(result)\r\n\r\ndef make_app():\r\n    return tornado.web.Application([\r\n        (r\"/\", MainHandler),\r\n    ])\r\nif __name__ == \"__main__\":\r\n    app = make_app()\r\n    app.listen(8888)\r\n    tornado.ioloop.IOLoop.current().start()\r\n```\r\nBecause of some projects reasons function `_async_connect ` can't be called with await. \r\nThis peace of code raises error that asyncio.run can not be called from other event lopp Traceback:\r\n```\r\nERROR:tornado.application:Uncaught exception GET / (127.0.0.1)\r\nHTTPServerRequest(protocol='http', host='127.0.0.1:8888', method='GET', uri='/', version='HTTP/1.1', remote_ip='127.0.0.1')\r\nTraceback (most recent call last):\r\n  File \".../python3.7/site-packages/tornado/web.py\", line 1590, in _execute\r\n    result = method(*self.path_args, **self.path_kwargs)\r\n  File \".../projects/todnado_check/main.py\", line 19, in get\r\n    result = run_sync()\r\n  File \".../projects/todnado_check/main.py\", line 8, in run_sync\r\n    return asyncio.run(_async_connect())\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/runners.py\", line 34, in run\r\n    \"asyncio.run() cannot be called from a running event loop\")\r\nRuntimeError: asyncio.run() cannot be called from a running event loop\r\n```\r\nSo the next step was to use tornado IOLoop and use `run_sync` method:\r\n```\r\ndef run_sync():\r\n    tornado_loop = tornado.ioloop.IOLoop.current()\r\n    return tornado_loop.run_sync(_async_connect)()\r\n\r\n```\r\nBut this raises other tracebacks that event loop is already runing:\r\n```\r\nERROR:tornado.application:Uncaught exception GET / (127.0.0.1)\r\nHTTPServerRequest(protocol='http', host='127.0.0.1:8888', method='GET', uri='/', version='HTTP/1.1', remote_ip='127.0.0.1')\r\nTraceback (most recent call last):\r\n  File \".../projects/todnado_check/envv/lib/python3.7/site-packages/tornado/web.py\", line 1590, in _execute\r\n    result = method(*self.path_args, **self.path_kwargs)\r\n  File \".../projects/todnado_check/main.py\", line 20, in get\r\n    result = run_sync()\r\n  File \"/Users/vitalii/projects/todnado_check/main.py\", line 9, in run_sync\r\n    return tornado_loop.run_sync(_async_connect)()\r\n  File \".../projects/todnado_check/envv/lib/python3.7/site-packages/tornado/ioloop.py\", line 571, in run_sync\r\n    self.start()\r\n  File \"...todnado_check/envv/lib/python3.7/site-packages/tornado/platform/asyncio.py\", line 132, in start\r\n    self.asyncio_loop.run_forever()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py\", line 521, in run_forever\r\n    raise RuntimeError('This event loop is already running')\r\nRuntimeError: This event loop is already running\r\nERROR:tornado.access:500 GET / (127.0.0.1) 4.29ms\r\n```\r\nThose runtime errors are blocking any calls to async functions from sync code handlers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2794", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2794/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2794/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2794/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2794", "id": 539695374, "node_id": "MDU6SXNzdWU1Mzk2OTUzNzQ=", "number": 2794, "title": "get_request alternative for tornado", "user": {"login": "maxisme", "id": 16902919, "node_id": "MDQ6VXNlcjE2OTAyOTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/16902919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxisme", "html_url": "https://github.com/maxisme", "followers_url": "https://api.github.com/users/maxisme/followers", "following_url": "https://api.github.com/users/maxisme/following{/other_user}", "gists_url": "https://api.github.com/users/maxisme/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxisme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxisme/subscriptions", "organizations_url": "https://api.github.com/users/maxisme/orgs", "repos_url": "https://api.github.com/users/maxisme/repos", "events_url": "https://api.github.com/users/maxisme/events{/privacy}", "received_events_url": "https://api.github.com/users/maxisme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-18T13:54:18Z", "updated_at": "2019-12-19T04:15:33Z", "closed_at": "2019-12-19T04:15:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "in the `webapp2` library there is a function `get_request()`: https://github.com/googleapis/google-cloud-python/blob/8bb406849475d753fbcacca13573377ee94ed1ab/logging/google/cloud/logging/handlers/_helpers.py#L91\r\n\r\nin django there is: https://github.com/googleapis/google-cloud-python/blob/8bb406849475d753fbcacca13573377ee94ed1ab/logging/google/cloud/logging/handlers/middleware/request.py#L27-L33\r\n\r\nand in flask there is `request`: https://github.com/googleapis/google-cloud-python/blob/8bb406849475d753fbcacca13573377ee94ed1ab/logging/google/cloud/logging/handlers/_helpers.py#L68\r\n\r\n\r\n## Is there an alternative for tornado?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2793", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2793/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2793/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2793/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2793", "id": 539446790, "node_id": "MDU6SXNzdWU1Mzk0NDY3OTA=", "number": 2793, "title": "tornado RequestHandler.get_argument can not get parm for post request", "user": {"login": "wpzhouGithub", "id": 40392447, "node_id": "MDQ6VXNlcjQwMzkyNDQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/40392447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wpzhouGithub", "html_url": "https://github.com/wpzhouGithub", "followers_url": "https://api.github.com/users/wpzhouGithub/followers", "following_url": "https://api.github.com/users/wpzhouGithub/following{/other_user}", "gists_url": "https://api.github.com/users/wpzhouGithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/wpzhouGithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wpzhouGithub/subscriptions", "organizations_url": "https://api.github.com/users/wpzhouGithub/orgs", "repos_url": "https://api.github.com/users/wpzhouGithub/repos", "events_url": "https://api.github.com/users/wpzhouGithub/events{/privacy}", "received_events_url": "https://api.github.com/users/wpzhouGithub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-18T04:39:08Z", "updated_at": "2019-12-19T04:16:36Z", "closed_at": "2019-12-19T04:16:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "tornado RequestHandler.get_argument can not get parm for post request\uff0c which the content-type: application/json\r\n\r\n```\r\n        if uri is not None:\r\n            self.path, sep, self.query = uri.partition(\"?\")\r\n        self.arguments = parse_qs_bytes(self.query, keep_blank_values=True)\r\n        self.query_arguments = copy.deepcopy(self.arguments)\r\n        self.body_arguments = {}  # type: Dict[str, List[bytes]]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2792", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2792/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2792/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2792/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2792", "id": 538173446, "node_id": "MDU6SXNzdWU1MzgxNzM0NDY=", "number": 2792, "title": "dose tornado 6.x not support convert tornado app to WSGI app?", "user": {"login": "woostundy", "id": 3305710, "node_id": "MDQ6VXNlcjMzMDU3MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3305710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woostundy", "html_url": "https://github.com/woostundy", "followers_url": "https://api.github.com/users/woostundy/followers", "following_url": "https://api.github.com/users/woostundy/following{/other_user}", "gists_url": "https://api.github.com/users/woostundy/gists{/gist_id}", "starred_url": "https://api.github.com/users/woostundy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woostundy/subscriptions", "organizations_url": "https://api.github.com/users/woostundy/orgs", "repos_url": "https://api.github.com/users/woostundy/repos", "events_url": "https://api.github.com/users/woostundy/events{/privacy}", "received_events_url": "https://api.github.com/users/woostundy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-16T04:07:51Z", "updated_at": "2019-12-26T13:01:01Z", "closed_at": "2019-12-17T02:01:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found that there is no WSGIAdapter in wsgi.py. \r\nWhy tornado remove it? will it back in feature?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2791", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2791/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2791/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2791/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2791", "id": 538115889, "node_id": "MDU6SXNzdWU1MzgxMTU4ODk=", "number": 2791, "title": "Coroutine unexpectedly terminated when a page is served", "user": {"login": "kriek", "id": 778790, "node_id": "MDQ6VXNlcjc3ODc5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/778790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kriek", "html_url": "https://github.com/kriek", "followers_url": "https://api.github.com/users/kriek/followers", "following_url": "https://api.github.com/users/kriek/following{/other_user}", "gists_url": "https://api.github.com/users/kriek/gists{/gist_id}", "starred_url": "https://api.github.com/users/kriek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kriek/subscriptions", "organizations_url": "https://api.github.com/users/kriek/orgs", "repos_url": "https://api.github.com/users/kriek/repos", "events_url": "https://api.github.com/users/kriek/events{/privacy}", "received_events_url": "https://api.github.com/users/kriek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-15T22:28:27Z", "updated_at": "2019-12-17T22:28:02Z", "closed_at": "2019-12-16T20:18:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\nI'm trying to build a tornado application (webserver.py) that connects to a TCP server (tcpserver.py). The application has a global `tcp_reader` coroutine responsible to read data from the server (and eventually share it via websockets).\r\n\r\nThis coroutine is added as a callback to the mainloop using `main_loop.add_callback(tcp_reader)`.\r\nWhen the application starts, it starts receiving data from the TCP server (counter incremented every second) as expected.\r\nBut as soon as a browser opens http://localhost:8080/, a GeneratorExit is triggered in the `tcp_reader` coroutine and its task is destroyed:\r\n```\r\nStarting server at port: 8080\r\n0\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\nOops\r\nERROR:asyncio:Task was destroyed but it is pending!\r\ntask: <Task pending name='Task-1' coro=<tcp_reader() done, defined at webserver.py:13> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x7fde40a22ac0>()]> cb=[IOLoop.add_future.<locals>.<lambda>() at /home/sly/.envs/scientific/lib/python3.8/site-packages/tornado/ioloop.py:690]>\r\nWARNING:tornado.access:404 GET /favicon.ico (::1) 0.73ms\r\n```\r\nI'm quite new to both tornado and asyncio and I don't get the reason for the task destruction.\r\n\r\nIf the page is requested first and the tcpserver.py started after that, the problem does not occur.\r\n\r\nwebserver.py\r\n```\r\nimport asyncio\r\nimport os\r\n\r\nfrom tornado.web import RequestHandler, StaticFileHandler, Application, url\r\nfrom tornado import ioloop\r\n\r\n\r\nclass MainHandler(RequestHandler):\r\n    def get(self):\r\n        self.render(\"index.html\")\r\n\r\n\r\nasync def tcp_reader():\r\n    while True:\r\n        try:\r\n            reader, writer = await asyncio.open_connection('127.0.0.1', 8888)\r\n        except ConnectionRefusedError:\r\n            print(\"ConnectionRefused\")\r\n            await asyncio.sleep(1)\r\n            continue\r\n        while True:\r\n            try:\r\n                data = await reader.read(1024)\r\n            except GeneratorExit:\r\n                print(\"Oops\")\r\n                raise\r\n            if not data:\r\n                writer.close()\r\n                await writer.wait_closed()\r\n                break\r\n            print(data.decode(), end='')\r\n\r\n\r\ndef main():\r\n    port = os.environ.get(\"PORT\", 8080)\r\n    clients = []\r\n    app = Application([\r\n        url(r\"/\", MainHandler),\r\n    ])\r\n    print(\"Starting server at port: %s\" % port)\r\n    app.listen(port)\r\n    main_loop = ioloop.IOLoop.current()\r\n    main_loop.add_callback(tcp_reader)\r\n    ioloop.IOLoop.current().start()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\ntcpserver.py\r\n```\r\nimport asyncio\r\nfrom itertools import count\r\n\r\nasync def handle_connection(reader, writer):\r\n    try:\r\n        print(\"open\")\r\n        for i in count():\r\n            writer.write(f'{i}\\n'.encode())\r\n            await writer.drain()\r\n            await asyncio.sleep(1)\r\n    except ConnectionResetError:\r\n        print(\"closed\")\r\n\r\nasync def main():\r\n    server = await asyncio.start_server(\r\n        handle_connection, '127.0.0.1', 8888)\r\n    addr = server.sockets[0].getsockname()\r\n    print(f'Serving on {addr}')\r\n\r\n    async with server:\r\n        await server.serve_forever()\r\n\r\nif __name__ == '__main__':\r\n    asyncio.run(main())\r\n```\r\n\r\nI'm using python 3.8 and tornado 6.0.3 under Ubuntu", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2787", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2787/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2787/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2787/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2787", "id": 534598162, "node_id": "MDU6SXNzdWU1MzQ1OTgxNjI=", "number": 2787, "title": "MemoryError in Octoprint", "user": {"login": "MatthewCroughan", "id": 26458780, "node_id": "MDQ6VXNlcjI2NDU4Nzgw", "avatar_url": "https://avatars3.githubusercontent.com/u/26458780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatthewCroughan", "html_url": "https://github.com/MatthewCroughan", "followers_url": "https://api.github.com/users/MatthewCroughan/followers", "following_url": "https://api.github.com/users/MatthewCroughan/following{/other_user}", "gists_url": "https://api.github.com/users/MatthewCroughan/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatthewCroughan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatthewCroughan/subscriptions", "organizations_url": "https://api.github.com/users/MatthewCroughan/orgs", "repos_url": "https://api.github.com/users/MatthewCroughan/repos", "events_url": "https://api.github.com/users/MatthewCroughan/events{/privacy}", "received_events_url": "https://api.github.com/users/MatthewCroughan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-08T20:46:04Z", "updated_at": "2020-04-25T19:58:44Z", "closed_at": "2020-04-25T19:58:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I do not have any concept of why this issue is occuring, but Foosel believes this is an issue with Tornado rather than a misuse. So I'm placing it here since I am apparently banned from discussing anything further in Octoprint. I'll give more details when I can.\r\n\r\nhttps://github.com/foosel/OctoPrint/issues/3376", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2786", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2786/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2786/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2786/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2786", "id": 534087021, "node_id": "MDU6SXNzdWU1MzQwODcwMjE=", "number": 2786, "title": "Websocket parameter for an external port when running behind an L2/L3 forwarding device.", "user": {"login": "EricZaluzec", "id": 11061431, "node_id": "MDQ6VXNlcjExMDYxNDMx", "avatar_url": "https://avatars2.githubusercontent.com/u/11061431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricZaluzec", "html_url": "https://github.com/EricZaluzec", "followers_url": "https://api.github.com/users/EricZaluzec/followers", "following_url": "https://api.github.com/users/EricZaluzec/following{/other_user}", "gists_url": "https://api.github.com/users/EricZaluzec/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricZaluzec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricZaluzec/subscriptions", "organizations_url": "https://api.github.com/users/EricZaluzec/orgs", "repos_url": "https://api.github.com/users/EricZaluzec/repos", "events_url": "https://api.github.com/users/EricZaluzec/events{/privacy}", "received_events_url": "https://api.github.com/users/EricZaluzec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-06T15:43:23Z", "updated_at": "2019-12-09T19:18:43Z", "closed_at": "2019-12-09T19:18:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a tornado websocket running in python3 which is working on a host system correctly but I have been unable to get it working when the server is running behind an L2/L3 forwarding device. I am using an nginx ingress controller with a load balancer that is serving the tornado secure websocket application. \r\n\r\nUsing tornado, is there a websocket parameter that can give an external port number to forward too; maybe similar to the [autobahn python websocket](https://autobahn.readthedocs.io/en/latest/reference/autobahn.websocket.html#autobahn.websocket.interfaces.IWebSocketServerChannelFactory) implementation? I've been able to get working the autobahn external port correctly but the server app is now using tornado.\r\n\r\nI've looked through the tornado docs but did not see anything relevant. Any feedback is much appreciated. Thank you.   ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2782", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2782/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2782/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2782/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2782", "id": 529154067, "node_id": "MDU6SXNzdWU1MjkxNTQwNjc=", "number": 2782, "title": "BufferError: Existing exports of data: object cannot be re-sized", "user": {"login": "lujinke", "id": 6049355, "node_id": "MDQ6VXNlcjYwNDkzNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6049355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lujinke", "html_url": "https://github.com/lujinke", "followers_url": "https://api.github.com/users/lujinke/followers", "following_url": "https://api.github.com/users/lujinke/following{/other_user}", "gists_url": "https://api.github.com/users/lujinke/gists{/gist_id}", "starred_url": "https://api.github.com/users/lujinke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lujinke/subscriptions", "organizations_url": "https://api.github.com/users/lujinke/orgs", "repos_url": "https://api.github.com/users/lujinke/repos", "events_url": "https://api.github.com/users/lujinke/events{/privacy}", "received_events_url": "https://api.github.com/users/lujinke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-27T06:54:05Z", "updated_at": "2019-12-08T20:56:38Z", "closed_at": "2019-12-08T20:56:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "related to #2271\r\n\r\nOS:centos 7\r\npython: 2.7\r\ntornado: 4.5.3 (not fix this issue as claimed)\r\n```\r\n[2019-11-27 14:10:26.584][ERROR][iostream.py:554]:Uncaught exception, closing connection.\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/iostream.py\", line 523, in _handle_events\r\n        self._handle_write()\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/iostream.py\", line 872, in _handle_write\r\n        del self._write_buffer[:self._write_buffer_pos]\r\n    BufferError: Existing exports of data: object cannot be re-sized\r\n[2019-11-27 14:10:26.585][ERROR][ioloop.py:638]:Exception in callback None\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/ioloop.py\", line 888, in start\r\n        handler_func(fd_obj, events)\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n        return fn(*args, **kwargs)\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/iostream.py\", line 523, in _handle_events\r\n        self._handle_write()\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/iostream.py\", line 872, in _handle_write\r\n        del self._write_buffer[:self._write_buffer_pos]\r\n    BufferError: Existing exports of data: object cannot be re-sized\r\n[2019-11-27 14:10:26.587][ERROR][acl.py:186]:Traceback (most recent call last):\r\n      File \"/home/dba/dba/dbas/handler/globals.py\", line 734, in wrapper\r\n        return fn(*args, **kwargs)\r\n      File \"/home/dba/dba/dbas/handler/acl.py\", line 92, in func_wrapper\r\n        return func(self)\r\n      File \"/home/dba/dba/dbas/handler/instancehandler.py\", line 26, in get\r\n        instance_type=instance_type, envs=data[\"envs\"]\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/web.py\", line 782, in render\r\n        self.finish(html)\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/web.py\", line 992, in finish\r\n        self.flush(include_footers=True)\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/web.py\", line 953, in flush\r\n        return self.request.connection.write(chunk, callback=callback)\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/http1connection.py\", line 437, in write\r\n        self._pending_write = self.stream.write(self._format_chunk(chunk))\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/iostream.py\", line 406, in write\r\n        self._handle_write()\r\n      File \"/usr/lib64/python2.7/site-packages/tornado/iostream.py\", line 847, in _handle_write\r\n        assert self._write_buffer_size >= 0\r\n    AssertionError\r\n```\r\nhere is my code:\r\ni try to make the http request async, so i use a wrapper and ThreadPoolExecutor, in the wrapper i submit the request to the ThreadPoolExecutor as the following:\r\n```\r\ndef async(f):\r\n    @tornado.web.asynchronous\r\n    @wraps(f)\r\n    def wrapper(*args, **kwargs):\r\n        def callback(future):\r\n            try:\r\n                future.result()\r\n            except Exception, e:\r\n                logger.error(e)\r\n\r\n        AsyncExecutor.executor.submit(\r\n            partial(f, *args, **kwargs)\r\n        ).add_done_callback(\r\n            lambda future: tornado.ioloop.IOLoop.instance().add_callback(\r\n                partial(callback, future)))\r\n\r\n    return wrapper\r\n```\r\n\r\nThe add_callback method is said thread safe to use in other threads as claimed in the tornado code:\r\n```\r\n        Calls the given callback on the next I/O loop iteration.\r\n\r\n        It is safe to call this method from any thread at any time,\r\n        except from a signal handler.  Note that this is the **only**\r\n        method in `IOLoop` that makes this thread-safety guarantee; all\r\n        other interaction with the `IOLoop` must be done from that\r\n        `IOLoop`'s thread.  `add_callback()` may be used to transfer\r\n        control from other threads to the `IOLoop`'s thread.\r\n\r\n        To add a callback from a signal handler, see\r\n        `add_callback_from_signal`.\r\n```\r\n\r\nGreat appreciate if someone can tell what's wrong here with my code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2781", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2781/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2781/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2781/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2781", "id": 527685536, "node_id": "MDU6SXNzdWU1Mjc2ODU1MzY=", "number": 2781, "title": "Mix synchronous and asynchronous code", "user": {"login": "afzoun", "id": 26465136, "node_id": "MDQ6VXNlcjI2NDY1MTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/26465136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afzoun", "html_url": "https://github.com/afzoun", "followers_url": "https://api.github.com/users/afzoun/followers", "following_url": "https://api.github.com/users/afzoun/following{/other_user}", "gists_url": "https://api.github.com/users/afzoun/gists{/gist_id}", "starred_url": "https://api.github.com/users/afzoun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afzoun/subscriptions", "organizations_url": "https://api.github.com/users/afzoun/orgs", "repos_url": "https://api.github.com/users/afzoun/repos", "events_url": "https://api.github.com/users/afzoun/events{/privacy}", "received_events_url": "https://api.github.com/users/afzoun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-24T11:39:12Z", "updated_at": "2019-12-08T20:35:21Z", "closed_at": "2019-11-24T14:56:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nI am using tornado 6.0.3 with python 3.7\r\nI get this RuntimeWarning that I don't know how to fix.\r\n\r\n> Task was destroyed but it is pending!\r\ntask: <Task pending coro=<WebSocketProtocol13.write_message.\\<locals\\>.wrapper() running at /home/python3.7/site-packages/tornado/websocket.py:1102>>\r\n/usr/lib/python3.7/asyncio/base_events.py:604: RuntimeWarning: coroutine 'WebSocketProtocol13.write_message.\\<locals\\>.wrapper' was never awaited\r\n\r\nHere's my code where I am using write_message:\r\n\r\n`\r\ndef handle_events():\r\n\r\n    message = redis.get_message()\r\n\r\n    if message:\r\n\r\n        message = json.loads(message['data'])\r\n\r\n        data = {\r\n\r\n            'time': message.get('time')\r\n\r\n        }\r\n\r\n        for connection in connections:\r\n\r\n            connection.write_message(json.dumps(data))\r\n\r\n        threading.Timer(1, handle_events).start()`\r\n\r\nI should mention that it's working and I am not losing any messages, but I feel this is dangerous.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2776", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2776/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2776/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2776/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2776", "id": 525799540, "node_id": "MDU6SXNzdWU1MjU3OTk1NDA=", "number": 2776, "title": "StaticFileHandler uses MD5 which is disabled in FIPS environment", "user": {"login": "idevat", "id": 16188254, "node_id": "MDQ6VXNlcjE2MTg4MjU0", "avatar_url": "https://avatars1.githubusercontent.com/u/16188254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idevat", "html_url": "https://github.com/idevat", "followers_url": "https://api.github.com/users/idevat/followers", "following_url": "https://api.github.com/users/idevat/following{/other_user}", "gists_url": "https://api.github.com/users/idevat/gists{/gist_id}", "starred_url": "https://api.github.com/users/idevat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idevat/subscriptions", "organizations_url": "https://api.github.com/users/idevat/orgs", "repos_url": "https://api.github.com/users/idevat/repos", "events_url": "https://api.github.com/users/idevat/events{/privacy}", "received_events_url": "https://api.github.com/users/idevat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-20T13:20:47Z", "updated_at": "2019-11-23T19:43:10Z", "closed_at": "2019-11-23T19:43:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "StaticFileHandler uses MD5 which is disabled in FIPS (Federal Information Processing Standards) environment. It reports (misleading) message  \"Could not open static file ...\" (probably during etag computation).\r\n\r\nReproducer:\r\n```python\r\n>>> import os\r\n>>> os.path.exists(\"/tmp/tornado-test.css\")\r\nTrue\r\n>>> from tornado.web import StaticFileHandler\r\n>>> StaticFileHandler._get_cached_version(\"/tmp/tornado-test.css\")\r\nCould not open static file '/tmp/tornado-test.css'\r\n>>> StaticFileHandler.get_content_version(\"/tmp/tornado-test.css\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib64/python3.6/site-packages/tornado/web.py\", line 2833, in get_content_version\r\n    hasher = hashlib.md5()\r\nValueError: [digital envelope routines: EVP_DigestInit_ex] disabled for FIPS\r\n```\r\nOverriding of the method `get_content_version` using `sha1` instead of `md5` can be used as a workaround.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2774", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2774/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2774/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2774/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2774", "id": 521370320, "node_id": "MDU6SXNzdWU1MjEzNzAzMjA=", "number": 2774, "title": "Only one process receive msg while using reuse_port in multiprocess", "user": {"login": "dulm", "id": 1228446, "node_id": "MDQ6VXNlcjEyMjg0NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1228446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dulm", "html_url": "https://github.com/dulm", "followers_url": "https://api.github.com/users/dulm/followers", "following_url": "https://api.github.com/users/dulm/following{/other_user}", "gists_url": "https://api.github.com/users/dulm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dulm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dulm/subscriptions", "organizations_url": "https://api.github.com/users/dulm/orgs", "repos_url": "https://api.github.com/users/dulm/repos", "events_url": "https://api.github.com/users/dulm/events{/privacy}", "received_events_url": "https://api.github.com/users/dulm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-12T07:11:18Z", "updated_at": "2019-11-12T09:46:11Z", "closed_at": "2019-11-12T09:46:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "the code run in osx 10.13.1 (17B1003), python3.7:\r\n\r\n```\r\n    app = Application([(conf.base_uri + '/query', QueryHandler),\r\n                       ],\r\n                      debug=False)\r\n    http_server = HTTPServer(app)\r\n    #http_server.listen(options.port)\r\n    http_server.bind(options.port, reuse_port=True)\r\n\r\n    http_server.start(options.numprocs)\r\n    loop = asyncio.get_event_loop()\r\n\r\n    logger.info('server start.')\r\n    IOLoop.current().start()\r\n```python\r\n\r\nuse supervisord to start 2 process bind same port\r\n\r\n```\r\n[program:recweb]\r\ncommand=python ./web_main.py --port=13246 --numprocs=1 \r\nprocess_name=%(program_name)s-%(process_num)02d \r\nnumprocs=2  \r\ndirectory=/Users/lqk/project/PycharmProjects/RecWebAsyn \r\n```\r\n\r\nOnly one process handles msges founded in stdout and log.\r\nis there any problem in my solution, or osx not surport reuse_port?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2773", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2773/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2773/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2773/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2773", "id": 521347506, "node_id": "MDU6SXNzdWU1MjEzNDc1MDY=", "number": 2773, "title": "tornado6.0.3 cannot import name 'responses'", "user": {"login": "yoter", "id": 17448849, "node_id": "MDQ6VXNlcjE3NDQ4ODQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/17448849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoter", "html_url": "https://github.com/yoter", "followers_url": "https://api.github.com/users/yoter/followers", "following_url": "https://api.github.com/users/yoter/following{/other_user}", "gists_url": "https://api.github.com/users/yoter/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoter/subscriptions", "organizations_url": "https://api.github.com/users/yoter/orgs", "repos_url": "https://api.github.com/users/yoter/repos", "events_url": "https://api.github.com/users/yoter/events{/privacy}", "received_events_url": "https://api.github.com/users/yoter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-12T06:05:03Z", "updated_at": "2019-11-12T08:01:51Z", "closed_at": "2019-11-12T08:01:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"E:/Program Files/project/python/tornado/app/test.py\", line 1, in <module>\r\n    from tornado import httputil\r\n  File \"E:\\Program Files\\project\\python\\tornado\\venv\\lib\\site-packages\\tornado\\httputil.py\", line 27, in <module>\r\n    from http.client import responses\r\nImportError: cannot import name 'responses'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2771", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2771/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2771/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2771/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2771", "id": 520017944, "node_id": "MDU6SXNzdWU1MjAwMTc5NDQ=", "number": 2771, "title": "Documentation mismatch for parent process exit in tornado.process.fork_processes", "user": {"login": "volinthius", "id": 90220, "node_id": "MDQ6VXNlcjkwMjIw", "avatar_url": "https://avatars3.githubusercontent.com/u/90220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/volinthius", "html_url": "https://github.com/volinthius", "followers_url": "https://api.github.com/users/volinthius/followers", "following_url": "https://api.github.com/users/volinthius/following{/other_user}", "gists_url": "https://api.github.com/users/volinthius/gists{/gist_id}", "starred_url": "https://api.github.com/users/volinthius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/volinthius/subscriptions", "organizations_url": "https://api.github.com/users/volinthius/orgs", "repos_url": "https://api.github.com/users/volinthius/repos", "events_url": "https://api.github.com/users/volinthius/events{/privacy}", "received_events_url": "https://api.github.com/users/volinthius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-08T13:35:17Z", "updated_at": "2019-11-12T02:49:41Z", "closed_at": "2019-11-12T02:49:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Docstring mismatches with parent process exit on success in `tornado.process.fork_processes`:\r\n\r\n> In the parent process, ``fork_processes`` returns None if all child processes have exited normally...\r\n\r\nThe behavior was changed in 4c23ba7e7.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2770", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2770/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2770/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2770/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2770", "id": 517958693, "node_id": "MDU6SXNzdWU1MTc5NTg2OTM=", "number": 2770, "title": "[Question] How to use persistent connections with CurlAsyncHTTPClient?", "user": {"login": "armona", "id": 13771747, "node_id": "MDQ6VXNlcjEzNzcxNzQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/13771747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/armona", "html_url": "https://github.com/armona", "followers_url": "https://api.github.com/users/armona/followers", "following_url": "https://api.github.com/users/armona/following{/other_user}", "gists_url": "https://api.github.com/users/armona/gists{/gist_id}", "starred_url": "https://api.github.com/users/armona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/armona/subscriptions", "organizations_url": "https://api.github.com/users/armona/orgs", "repos_url": "https://api.github.com/users/armona/repos", "events_url": "https://api.github.com/users/armona/events{/privacy}", "received_events_url": "https://api.github.com/users/armona/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-05T18:45:22Z", "updated_at": "2019-11-05T21:08:43Z", "closed_at": "2019-11-05T21:08:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Basically would like to use persistent HTTP connections when using the client, what is the correct way of implementing this (adding the `Connection` header is sufficient?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2764", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2764/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2764/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2764/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2764", "id": 516408216, "node_id": "MDU6SXNzdWU1MTY0MDgyMTY=", "number": 2764, "title": "Queue example AssertionError", "user": {"login": "jvansan", "id": 15289535, "node_id": "MDQ6VXNlcjE1Mjg5NTM1", "avatar_url": "https://avatars2.githubusercontent.com/u/15289535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvansan", "html_url": "https://github.com/jvansan", "followers_url": "https://api.github.com/users/jvansan/followers", "following_url": "https://api.github.com/users/jvansan/following{/other_user}", "gists_url": "https://api.github.com/users/jvansan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvansan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvansan/subscriptions", "organizations_url": "https://api.github.com/users/jvansan/orgs", "repos_url": "https://api.github.com/users/jvansan/repos", "events_url": "https://api.github.com/users/jvansan/events{/privacy}", "received_events_url": "https://api.github.com/users/jvansan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-02T00:03:45Z", "updated_at": "2019-11-03T14:53:33Z", "closed_at": "2019-11-03T14:53:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The example code for the concurrent web spider in the [user guide](https://www.tornadoweb.org/en/stable/guide/queues.html) raises an assertion error due to a dead link (referenced in Issue #2639 ).\r\n\r\nI will make a simple PR to fix this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2762", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2762/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2762/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2762/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2762", "id": 513336248, "node_id": "MDU6SXNzdWU1MTMzMzYyNDg=", "number": 2762, "title": "Limit threads created at startup", "user": {"login": "loretoparisi", "id": 163333, "node_id": "MDQ6VXNlcjE2MzMzMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/163333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loretoparisi", "html_url": "https://github.com/loretoparisi", "followers_url": "https://api.github.com/users/loretoparisi/followers", "following_url": "https://api.github.com/users/loretoparisi/following{/other_user}", "gists_url": "https://api.github.com/users/loretoparisi/gists{/gist_id}", "starred_url": "https://api.github.com/users/loretoparisi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loretoparisi/subscriptions", "organizations_url": "https://api.github.com/users/loretoparisi/orgs", "repos_url": "https://api.github.com/users/loretoparisi/repos", "events_url": "https://api.github.com/users/loretoparisi/events{/privacy}", "received_events_url": "https://api.github.com/users/loretoparisi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-28T14:22:17Z", "updated_at": "2019-11-11T18:07:39Z", "closed_at": "2019-10-28T23:38:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I initialize Tornado like\r\n\r\n```python\r\nclass WebServer(threading.Thread):\r\n    def run(self):\r\n        PORT = os.getenv('PORT', 8888)\r\n        asyncio.set_event_loop_policy(AnyThreadEventLoopPolicy())\r\n        app = application()\r\n        app.listen(PORT)\r\n        tornado.ioloop.IOLoop.instance().start()\r\n```\r\n\r\nI see a number of threads created at startup, before the first api call:\r\n\r\n```\r\n  689 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:33.89  `- python3 tornadoaas.py                                                                        \r\n  729 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.07      `- python3 tornadoaas.py                                                                    \r\n  730 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  731 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  732 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  733 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  734 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  735 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  736 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  737 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  738 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  739 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  741 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  742 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  743 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  744 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  745 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  746 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  747 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  748 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  749 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  750 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  751 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  752 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  753 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  754 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  755 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  756 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  757 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  758 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  759 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.07      `- python3 tornadoaas.py                                                                    \r\n  760 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:22.85      `- python3 tornadoaas.py                                                                    \r\n  761 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:23.00      `- python3 tornadoaas.py                                                                    \r\n  762 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.02      `- python3 tornadoaas.py                                                                    \r\n  763 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.02      `- python3 tornadoaas.py                                                                    \r\n  764 root      20   0 9027376   2.1g 287324 S   0.0  13.1   0:00.02      `- python3 tornadoaas.py \r\n```\r\n\r\nWhen the first api call is sent, all those threads get the same memory occupation like\r\n\r\n```\r\n    1 root      20   0   27244  21312   7864 S   0.0   0.1   0:00.45 /usr/bin/python2 /usr/bin/supervisord                                                            \r\n    8 root      20   0  966536 143588  36936 S   0.3   0.9   0:01.71  `- python3 dash/app.py                                                                          \r\n  689 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:33.89  `- python3 tornadoaas.py                                                                        \r\n  729 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.07      `- python3 tornadoaas.py                                                                    \r\n  730 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  731 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  732 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  733 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  734 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  735 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  736 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  737 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  738 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  739 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  741 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py                                                                    \r\n  742 root      20   0 9255584   2.1g 288516 S   0.0  13.6   0:00.00      `- python3 tornadoaas.py       \r\n...\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2761", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2761/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2761/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2761/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2761", "id": 513300667, "node_id": "MDU6SXNzdWU1MTMzMDA2Njc=", "number": 2761, "title": "Is data size limited caused  Exception in callback functools.partial(<function WebSocketProtocol._run_callback.<locals>.<lambda> at 0x000001F436C2B840>?", "user": {"login": "gdbrianlu", "id": 54971103, "node_id": "MDQ6VXNlcjU0OTcxMTAz", "avatar_url": "https://avatars3.githubusercontent.com/u/54971103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdbrianlu", "html_url": "https://github.com/gdbrianlu", "followers_url": "https://api.github.com/users/gdbrianlu/followers", "following_url": "https://api.github.com/users/gdbrianlu/following{/other_user}", "gists_url": "https://api.github.com/users/gdbrianlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdbrianlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdbrianlu/subscriptions", "organizations_url": "https://api.github.com/users/gdbrianlu/orgs", "repos_url": "https://api.github.com/users/gdbrianlu/repos", "events_url": "https://api.github.com/users/gdbrianlu/events{/privacy}", "received_events_url": "https://api.github.com/users/gdbrianlu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-28T13:24:06Z", "updated_at": "2019-10-29T02:37:01Z", "closed_at": "2019-10-29T02:37:01Z", "author_association": "NONE", "active_lock_reason": null, "body": " Exception in callback functools.partial(<function WebSocketProtocol._run_callback.<locals>.<lambda> at 0x000001F436C2B840>,\r\n\r\nactually  data size: 30952\r\n\r\ncode as follow\r\nasync def data_received(self, data):\r\n        host = 'localhost'\r\n        port = 6379\r\n        r = redis.Redis(host=host, port=port)\r\n        r.set('foo', data)\r\n        self.write(r.get('foo'))\r\n        await self.ws.write_message(r.get('foo'))#Get data from Redis\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2759", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2759/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2759/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2759/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2759", "id": 512824557, "node_id": "MDU6SXNzdWU1MTI4MjQ1NTc=", "number": 2759, "title": "AssertionError: assert loop is None or isinstance(loop, AbstractEventLoop)", "user": {"login": "loretoparisi", "id": 163333, "node_id": "MDQ6VXNlcjE2MzMzMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/163333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loretoparisi", "html_url": "https://github.com/loretoparisi", "followers_url": "https://api.github.com/users/loretoparisi/followers", "following_url": "https://api.github.com/users/loretoparisi/following{/other_user}", "gists_url": "https://api.github.com/users/loretoparisi/gists{/gist_id}", "starred_url": "https://api.github.com/users/loretoparisi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loretoparisi/subscriptions", "organizations_url": "https://api.github.com/users/loretoparisi/orgs", "repos_url": "https://api.github.com/users/loretoparisi/repos", "events_url": "https://api.github.com/users/loretoparisi/events{/privacy}", "received_events_url": "https://api.github.com/users/loretoparisi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-26T11:28:32Z", "updated_at": "2019-11-01T00:22:17Z", "closed_at": "2019-10-26T17:11:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error when running Tornado in a thread and using `AnyThreadEventLoopPolicy`.\r\n\r\n```python\r\nclass WebServer(threading.Thread):\r\n    def run(self):\r\n        PORT = os.getenv('PORT', 8888)\r\n        \r\n        #asyncio.set_event_loop(asyncio.new_event_loop())\r\n        asyncio.set_event_loop(AnyThreadEventLoopPolicy())\r\n        \r\n        app = application()\r\n        app.listen(PORT)\r\n        tornado.ioloop.IOLoop.instance().start()\r\nWebServer.start()\r\n```\r\n\r\nFull stack trace:\r\n```\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"tornadoaas.py\", line 101, in run\r\n    asyncio.set_event_loop(AnyThreadEventLoopPolicy())\r\n  File \"/usr/local/lib/python3.7/asyncio/events.py\", line 757, in set_event_loop\r\n    get_event_loop_policy().set_event_loop(loop)\r\n  File \"/usr/local/lib/python3.7/asyncio/unix_events.py\", line 1119, in set_event_loop\r\n    super().set_event_loop(loop)\r\n  File \"/usr/local/lib/python3.7/asyncio/events.py\", line 651, in set_event_loop\r\n    assert loop is None or isinstance(loop, AbstractEventLoop)\r\nAssertionError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2758", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2758/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2758/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2758/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2758", "id": 511952353, "node_id": "MDU6SXNzdWU1MTE5NTIzNTM=", "number": 2758, "title": "How to pass \"contextvars\" to tornado.concurrent.run_in_executor ?", "user": {"login": "zhubijia", "id": 45035787, "node_id": "MDQ6VXNlcjQ1MDM1Nzg3", "avatar_url": "https://avatars3.githubusercontent.com/u/45035787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhubijia", "html_url": "https://github.com/zhubijia", "followers_url": "https://api.github.com/users/zhubijia/followers", "following_url": "https://api.github.com/users/zhubijia/following{/other_user}", "gists_url": "https://api.github.com/users/zhubijia/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhubijia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhubijia/subscriptions", "organizations_url": "https://api.github.com/users/zhubijia/orgs", "repos_url": "https://api.github.com/users/zhubijia/repos", "events_url": "https://api.github.com/users/zhubijia/events{/privacy}", "received_events_url": "https://api.github.com/users/zhubijia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-24T13:39:28Z", "updated_at": "2019-10-28T02:53:58Z", "closed_at": "2019-10-28T02:53:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I build something  with contextvars.Is there any way to pass it to tornado.concurrent.run_in_executor?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2756", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2756/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2756/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2756/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2756", "id": 508655897, "node_id": "MDU6SXNzdWU1MDg2NTU4OTc=", "number": 2756, "title": "NotImplementedError raised when sphinx-autobuild tries to start tornado server on Python 3.8", "user": {"login": "bskinn", "id": 11325439, "node_id": "MDQ6VXNlcjExMzI1NDM5", "avatar_url": "https://avatars2.githubusercontent.com/u/11325439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bskinn", "html_url": "https://github.com/bskinn", "followers_url": "https://api.github.com/users/bskinn/followers", "following_url": "https://api.github.com/users/bskinn/following{/other_user}", "gists_url": "https://api.github.com/users/bskinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/bskinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bskinn/subscriptions", "organizations_url": "https://api.github.com/users/bskinn/orgs", "repos_url": "https://api.github.com/users/bskinn/repos", "events_url": "https://api.github.com/users/bskinn/events{/privacy}", "received_events_url": "https://api.github.com/users/bskinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-17T18:46:30Z", "updated_at": "2019-10-17T21:01:49Z", "closed_at": "2019-10-17T20:19:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just upgraded my Windows Python to 3.8.0 amd64, and now [`sphinx-autobuild`](https://github.com/GaretJax/sphinx-autobuild) is failing when it tries to bring up the web server. Based on the traceback, it looks to be a problem in `tornado`, trying to use a non-implemented (no-longer-implemented-in-3.8?) asyncio feature:\r\n\r\n```\r\n>make livehtml\r\n\r\n+--------- manually triggered build ---------------------------------------------\r\n| Running Sphinx v2.2.0\r\n| loading pickled environment... done\r\n| loading intersphinx inventory from isphx/objects_python.inv...\r\n| loading intersphinx inventory from isphx/objects_numpy.inv...\r\n| encountered some issues with some of the inventories, but they had working alternatives:\r\n| intersphinx inventory 'isphx/objects_numpy.inv' not fetchable due to <class 'FileNotFoundError'>: [Errno 2] No such file or directory: 'C:\\\\...\\\\doc\\\\source\\\\isphx/objects_numpy.inv'\r\n| building [mo]: targets for 0 po files that are out of date\r\n| building [html]: targets for 0 source files that are out of date\r\n| updating environment: 0 added, 0 changed, 0 removed\r\n| looking for now-outdated files... none found\r\n| no targets are out of date.\r\n| build succeeded.\r\n|\r\n| The HTML pages are in build.\r\n+--------------------------------------------------------------------------------\r\n\r\n[I 191017 14:36:13 server:296] Serving on http://127.0.0.1:8000\r\nTraceback (most recent call last):\r\n  File \"c:\\...\\python38\\Lib\\runpy.py\", line 192, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"c:\\...\\python38\\Lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\...\\env\\Scripts\\sphinx-autobuild.exe\\__main__.py\", line 7, in <module>\r\n  File \"c:\\...\\env\\lib\\site-packages\\sphinx_autobuild\\__init__.py\", line 318, in main\r\n    server.serve(port=portn, host=args.host, root=outdir)\r\n  File \"c:\\...\\env\\lib\\site-packages\\livereload\\server.py\", line 298, in serve\r\n    self.application(\r\n  File \"c:\\...\\env\\lib\\site-packages\\livereload\\server.py\", line 253, in application\r\n    app.listen(port, address=host)\r\n  File \"c:\\...\\env\\lib\\site-packages\\tornado\\web.py\", line 2112, in listen\r\n    server.listen(port, address)\r\n  File \"c:\\...\\env\\lib\\site-packages\\tornado\\tcpserver.py\", line 152, in listen\r\n    self.add_sockets(sockets)\r\n  File \"c:\\...\\env\\lib\\site-packages\\tornado\\tcpserver.py\", line 165, in add_sockets\r\n    self._handlers[sock.fileno()] = add_accept_handler(\r\n  File \"c:\\...\\env\\lib\\site-packages\\tornado\\netutil.py\", line 279, in add_accept_handler\r\n    io_loop.add_handler(sock, accept_handler, IOLoop.READ)\r\n  File \"c:\\...\\env\\lib\\site-packages\\tornado\\platform\\asyncio.py\", line 99, in add_handler\r\n    self.asyncio_loop.add_reader(fd, self._handle_events, fd, IOLoop.READ)\r\n  File \"c:\\...\\python38\\Lib\\asyncio\\events.py\", line 501, in add_reader\r\n    raise NotImplementedError\r\nNotImplementedError\r\n```\r\n\r\nPackages in the environment:\r\n```\r\n>pip list\r\nPackage                       Version\r\n----------------------------- ----------\r\nalabaster                     0.7.12\r\nappdirs                       1.4.3\r\nargh                          0.26.2\r\nattrs                         17.4.0\r\nBabel                         2.7.0\r\nblack                         19.3b0\r\nbleach                        3.1.0\r\ncertifi                       2019.9.11\r\nchardet                       3.0.4\r\nClick                         7.0\r\ncolorama                      0.4.1\r\ncoverage                      4.5.4\r\ndocutils                      0.15.2\r\nentrypoints                   0.3\r\nfilelock                      3.0.12\r\nflake8                        3.7.8\r\nflake8-docstrings             1.5.0\r\nidna                          2.8\r\nimagesize                     1.1.0\r\nJinja2                        2.10.3\r\nlivereload                    2.6.1\r\nMarkupSafe                    1.1.1\r\nmccabe                        0.6.1\r\nnumpy                         1.17.3+mkl\r\npackaging                     19.2\r\npathtools                     0.1.2\r\npip                           19.3\r\npkginfo                       1.5.0.1\r\npluggy                        0.13.0\r\nport-for                      0.3.1\r\npy                            1.8.0\r\npycodestyle                   2.5.0\r\npydocstyle                    4.0.1\r\npyflakes                      2.1.1\r\nPygments                      2.4.2\r\npyparsing                     2.4.2\r\npytz                          2019.3\r\nPyYAML                        5.1.2\r\nreadme-renderer               24.0\r\nrequests                      2.22.0\r\nrequests-toolbelt             0.9.1\r\nrestview                      2.9.2\r\nsetuptools                    41.4.0\r\nsix                           1.12.0\r\nsnowballstemmer               2.0.0\r\nSphinx                        2.2.0\r\nsphinx-autobuild              0.7.1\r\nsphinx-issues                 1.2.0\r\nsphinx-rtd-theme              0.4.3\r\nsphinxcontrib-applehelp       1.0.1\r\nsphinxcontrib-devhelp         1.0.1\r\nsphinxcontrib-htmlhelp        1.0.2\r\nsphinxcontrib-jsmath          1.0.1\r\nsphinxcontrib-qthelp          1.0.2\r\nsphinxcontrib-serializinghtml 1.1.3\r\ntoml                          0.10.0\r\ntornado                       6.0.3\r\ntox                           3.14.0\r\ntqdm                          4.36.1\r\ntwine                         2.0.0\r\nurllib3                       1.25.6\r\nvirtualenv                    16.7.6\r\nwatchdog                      0.9.0\r\nwebencodings                  0.5.1\r\nwheel                         0.33.6\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2754", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2754/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2754/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2754/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2754", "id": 505902514, "node_id": "MDU6SXNzdWU1MDU5MDI1MTQ=", "number": 2754, "title": "Error generated by SSL Websocket when pinged by TCP SYN packets", "user": {"login": "hk298", "id": 15907767, "node_id": "MDQ6VXNlcjE1OTA3NzY3", "avatar_url": "https://avatars1.githubusercontent.com/u/15907767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hk298", "html_url": "https://github.com/hk298", "followers_url": "https://api.github.com/users/hk298/followers", "following_url": "https://api.github.com/users/hk298/following{/other_user}", "gists_url": "https://api.github.com/users/hk298/gists{/gist_id}", "starred_url": "https://api.github.com/users/hk298/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hk298/subscriptions", "organizations_url": "https://api.github.com/users/hk298/orgs", "repos_url": "https://api.github.com/users/hk298/repos", "events_url": "https://api.github.com/users/hk298/events{/privacy}", "received_events_url": "https://api.github.com/users/hk298/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-11T14:57:41Z", "updated_at": "2019-10-17T01:07:54Z", "closed_at": "2019-10-17T01:07:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running a rather simplistic Websocket server with SSL on a machine that sits behind an Amazon Network Load Balancer (NLB). This setup is beyond my control. The NLB does some health checks on the services it is supposed to be balancing and bombards my Websocket server with TCP SYN packets. Tornado replies with SYN/ACK and the NLB then closes the connection with FIN. This causes Tornado to spit out the following errors:\r\n\r\n```\r\nERROR:tornado.general:Uncaught exception, closing connection.\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/tornado/iostream.py\", line 511, in _handle_events\r\n    self._handle_read()\r\n  File \"/usr/lib/python2.7/dist-packages/tornado/iostream.py\", line 1344, in _handle_read\r\n    self._do_ssl_handshake()\r\n  File \"/usr/lib/python2.7/dist-packages/tornado/iostream.py\", line 1264, in _do_ssl_handshake\r\n    self.socket.do_handshake()\r\n  File \"/usr/lib/python2.7/ssl.py\", line 840, in do_handshake\r\n    self._sslobj.do_handshake()\r\nerror: [Errno 0] Error\r\nERROR:tornado.application:Exception in callback None\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/tornado/ioloop.py\", line 887, in start\r\n    handler_func(fd_obj, events)\r\n  File \"/usr/lib/python2.7/dist-packages/tornado/stack_context.py\", line 275, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/tornado/iostream.py\", line 511, in _handle_events\r\n    self._handle_read()\r\n  File \"/usr/lib/python2.7/dist-packages/tornado/iostream.py\", line 1344, in _handle_read\r\n    self._do_ssl_handshake()\r\n  File \"/usr/lib/python2.7/dist-packages/tornado/iostream.py\", line 1264, in _do_ssl_handshake\r\n    self.socket.do_handshake()\r\n  File \"/usr/lib/python2.7/ssl.py\", line 840, in do_handshake\r\n    self._sslobj.do_handshake()\r\nerror: [Errno 0] Error\r\n```\r\n\r\nIt looks like that the handling of the `socket.error` in `_do_ssl_handshake` (`iostream.py`) could handle this case. The server is quiet when I add 0 as another possible error number in the following:\r\n\r\n```\r\n        except socket.error as err:\r\n            # Some port scans (e.g. nmap in -sT mode) have been known\r\n            # to cause do_handshake to raise EBADF and ENOTCONN, so make\r\n            # those errors quiet as well.\r\n            # https://groups.google.com/forum/?fromgroups#!topic/python-tornado/ApucKJat1_0\r\n            if (self._is_connreset(err) or\r\n                    err.args[0] in (errno.EBADF, errno.ENOTCONN, 0)):\r\n                return self.close(exc_info=True)\r\n            raise\r\n```\r\nThis is probably not the correct way to deal with this situation, but it avoids the flood of errors messages that I received.\r\n\r\nYou can reproduce the issue by simply connecting to the Websocket with telnet and closing the session immediately.\r\n\r\nI observed this in versions 4.4.3 on Debian 9 and 4.5.3 on Ubuntu 18.04. The messages above are from 4.4.3. Version 4.5.3 does the same thing, only the line numbers are different.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2753", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2753/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2753/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2753/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2753", "id": 505809849, "node_id": "MDU6SXNzdWU1MDU4MDk4NDk=", "number": 2753, "title": "getting assert error", "user": {"login": "himanshu4code", "id": 52200766, "node_id": "MDQ6VXNlcjUyMjAwNzY2", "avatar_url": "https://avatars3.githubusercontent.com/u/52200766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/himanshu4code", "html_url": "https://github.com/himanshu4code", "followers_url": "https://api.github.com/users/himanshu4code/followers", "following_url": "https://api.github.com/users/himanshu4code/following{/other_user}", "gists_url": "https://api.github.com/users/himanshu4code/gists{/gist_id}", "starred_url": "https://api.github.com/users/himanshu4code/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/himanshu4code/subscriptions", "organizations_url": "https://api.github.com/users/himanshu4code/orgs", "repos_url": "https://api.github.com/users/himanshu4code/repos", "events_url": "https://api.github.com/users/himanshu4code/events{/privacy}", "received_events_url": "https://api.github.com/users/himanshu4code/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-11T11:59:13Z", "updated_at": "2020-05-27T07:17:52Z", "closed_at": "2020-04-25T20:09:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "ERROR:tornado.application:Error in connection callback\r\nTraceback (most recent call last):\r\n  File \"/home/ongraph/Desktop/botuserv/lib/python3.7/site-packages/tornado/tcpserver.py\", line 327, in _handle_connection\r\n    future = self.handle_stream(stream, address)\r\n  File \"/home/ongraph/Desktop/botuserv/lib/python3.7/site-packages/tornado/httpserver.py\", line 229, in handle_stream\r\n    conn.start_serving(self)\r\n  File \"/home/ongraph/Desktop/botuserv/lib/python3.7/site-packages/tornado/http1connection.py\", line 810, in start_serving\r\n    self.stream.io_loop.add_future(fut, lambda f: f.result())\r\n  File \"/home/ongraph/Desktop/botuserv/lib/python3.7/site-packages/tornado/ioloop.py\", line 693, in add_future\r\n    assert is_future(future)\r\nAssertionError\r\n\r\n\r\nwhen i checked i found out that future get object of Http1ServerConnection.\r\n<Task pending coro=<HTTP1ServerConnection._server_request_loop() >>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2752", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2752/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2752/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2752/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2752", "id": 504414307, "node_id": "MDU6SXNzdWU1MDQ0MTQzMDc=", "number": 2752, "title": "python occupied memory keeps getting accumulated when ran through service and not released to OS", "user": {"login": "abhijeetbedagkar", "id": 1477895, "node_id": "MDQ6VXNlcjE0Nzc4OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1477895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhijeetbedagkar", "html_url": "https://github.com/abhijeetbedagkar", "followers_url": "https://api.github.com/users/abhijeetbedagkar/followers", "following_url": "https://api.github.com/users/abhijeetbedagkar/following{/other_user}", "gists_url": "https://api.github.com/users/abhijeetbedagkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhijeetbedagkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhijeetbedagkar/subscriptions", "organizations_url": "https://api.github.com/users/abhijeetbedagkar/orgs", "repos_url": "https://api.github.com/users/abhijeetbedagkar/repos", "events_url": "https://api.github.com/users/abhijeetbedagkar/events{/privacy}", "received_events_url": "https://api.github.com/users/abhijeetbedagkar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-09T04:53:23Z", "updated_at": "2020-04-25T19:55:01Z", "closed_at": "2020-04-25T19:55:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe are facing issue where occupied memory keeps getting accumulated when ran through service and not released to OS (Please refer to sample code below). \r\n\r\n```\r\nimport tornado.ioloop\r\nimport tornado.web\r\nfrom tornado.httpserver import HTTPServer\r\n\r\nclass BotoContainer:\r\n    def __init__(self):\r\n        import boto3 # 2\r\n        emr_client = boto3.client(\"emr\", **{'region_name': 'us-east-1',\r\n                                        'aws_access_key_id': 'XXXXXXX',\r\n                                        'aws_secret_access_key': 'XXXXXXX',\r\n                                        'aws_session_token': 'XXXXXXX'})\r\n        print emr_client # 3\r\n\r\n\r\nclass MainHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        BotoContainer()\r\n\r\n\r\nclass Application(tornado.web.Application):\r\n    def __init__(self):\r\n        handlers = [\r\n        (r\"/abc\", MainHandler)\r\n    ]\r\n\r\n        tornado.web.Application.__init__(self, handlers)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app = HTTPServer(Application())\r\n    app.listen(8888)\r\n    tornado.ioloop.IOLoop.instance().start()\r\n```\r\n\r\nInitially, after running the service, consumed memory is \"12.0 MB\". When We hit http GET request for \"http://localhost:8888/abc\" at point 2 (Pointed in below code) Memory goes to 30MB. As code proceeds to point 3 memory consumption is increased till 31MB. After point 3, as per our observation the memory never comes down and it remains at 31 MB. As we invoke HTTP GET request multiple times this memory consumption in increased during each request as 32MB, 33MB and so on and it never comes down. We tried using \"del emr_client\" using del method to delete emr_client object but nothing seems to be working. In our larger code base this accumulated memory is causing our web server going into unhealthy status and only option we have is the stop and start the service. Same behavior exist for Linux machine too.\r\n\r\nWe understand that python keeps imported package in memory for faster execution during subsequent calls but any reason the memory is not released after life of an object (ex. emr_client in above example) comes to end after it's scope is complete.\r\n\r\n\r\nThanks,\r\nAbhijeet", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2751", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2751/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2751/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2751/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2751", "id": 503442151, "node_id": "MDU6SXNzdWU1MDM0NDIxNTE=", "number": 2751, "title": "python 3.8 changes default asyncio loop on windows https://bugs.python.org/issue37373", "user": {"login": "Savier", "id": 1430977, "node_id": "MDQ6VXNlcjE0MzA5Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1430977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Savier", "html_url": "https://github.com/Savier", "followers_url": "https://api.github.com/users/Savier/followers", "following_url": "https://api.github.com/users/Savier/following{/other_user}", "gists_url": "https://api.github.com/users/Savier/gists{/gist_id}", "starred_url": "https://api.github.com/users/Savier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Savier/subscriptions", "organizations_url": "https://api.github.com/users/Savier/orgs", "repos_url": "https://api.github.com/users/Savier/repos", "events_url": "https://api.github.com/users/Savier/events{/privacy}", "received_events_url": "https://api.github.com/users/Savier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-07T13:09:39Z", "updated_at": "2020-03-04T11:11:02Z", "closed_at": "2019-10-17T01:27:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "See https://bugs.python.org/issue37373\r\nI failed to find failing tests in tornado, but loop's add_reader() now \"not implemented\" by default on windows and asyncio platform uses it. \r\n\r\nHere is the crash form Jupyter notebook:\r\n```\r\nC:\\Python38\\Scripts>jupyter-notebook.exe\r\nTraceback (most recent call last):\r\n  File \"c:\\python38\\lib\\runpy.py\", line 192, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"c:\\python38\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Python38\\Scripts\\jupyter-notebook.exe\\__main__.py\", line 9, in <module>\r\n  File \"c:\\python38\\lib\\site-packages\\jupyter_core\\application.py\", line 267, in launch_instance\r\n    return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)\r\n  File \"c:\\python38\\lib\\site-packages\\traitlets\\config\\application.py\", line 663, in launch_instance\r\n    app.initialize(argv)\r\n  File \"<c:\\python38\\lib\\site-packages\\decorator.py:decorator-gen-7>\", line 2, in initialize\r\n  File \"c:\\python38\\lib\\site-packages\\traitlets\\config\\application.py\", line 87, in catch_config_error\r\n    return method(app, *args, **kwargs)\r\n  File \"c:\\python38\\lib\\site-packages\\notebook\\notebookapp.py\", line 1679, in initialize\r\n    self.init_webapp()\r\n  File \"c:\\python38\\lib\\site-packages\\notebook\\notebookapp.py\", line 1442, in init_webapp\r\n    self.http_server.listen(port, self.ip)\r\n  File \"c:\\python38\\lib\\site-packages\\tornado\\tcpserver.py\", line 152, in listen\r\n    self.add_sockets(sockets)\r\n  File \"c:\\python38\\lib\\site-packages\\tornado\\tcpserver.py\", line 165, in add_sockets\r\n    self._handlers[sock.fileno()] = add_accept_handler(\r\n  File \"c:\\python38\\lib\\site-packages\\tornado\\netutil.py\", line 279, in add_accept_handler\r\n    io_loop.add_handler(sock, accept_handler, IOLoop.READ)\r\n  File \"c:\\python38\\lib\\site-packages\\tornado\\platform\\asyncio.py\", line 99, in add_handler\r\n    self.asyncio_loop.add_reader(fd, self._handle_events, fd, IOLoop.READ)\r\n  File \"c:\\python38\\lib\\asyncio\\events.py\", line 501, in add_reader\r\n    raise NotImplementedError\r\nNotImplementedError\r\n```\r\n\r\nI think patch is trivial:\r\n`tornado/platform/asyncio.py `:\r\n```\r\nimport sys\r\n\r\nif sys.platform == 'win32':\r\n    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())\r\n```\r\nBut it's too hard to me is to write tests.\r\n\r\nThere is a note on the top of tornado/platform/asyncio.py describing situation, but it seems it pretends application must set such policy. I don't know which way is correct, my patch solves the problem for me, I think devs must communicate in all of three places - here, jupyter issues, python bugs to make a decision.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2744", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2744/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2744/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2744/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2744", "id": 502377937, "node_id": "MDU6SXNzdWU1MDIzNzc5Mzc=", "number": 2744, "title": "reverse_url() unescapes regex inconsistently", "user": {"login": "remram44", "id": 426784, "node_id": "MDQ6VXNlcjQyNjc4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remram44", "html_url": "https://github.com/remram44", "followers_url": "https://api.github.com/users/remram44/followers", "following_url": "https://api.github.com/users/remram44/following{/other_user}", "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}", "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remram44/subscriptions", "organizations_url": "https://api.github.com/users/remram44/orgs", "repos_url": "https://api.github.com/users/remram44/repos", "events_url": "https://api.github.com/users/remram44/events{/privacy}", "received_events_url": "https://api.github.com/users/remram44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-04T01:30:23Z", "updated_at": "2019-10-21T02:16:11Z", "closed_at": "2019-10-21T02:16:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you have a rule with an escaped regex character coming after a group in parentheses, like:\r\n```python\r\nURLSpec('/project/([0-9]+)/export/codebook\\\\.csv', ExportCodebookCsv)\r\n```\r\nit will correctly match `/project/1/export/codebook.csv`, but will reverse to `/project/1/export/codebook\\.csv`.\r\n\r\nOf course, if you remove the backslash:\r\n```python\r\nURLSpec('/project/([0-9]+)/export/codebook.csv', ExportCodebookCsv)\r\n```\r\nit will reverse to the wanted `/project/1/export/codebook.csv` but then it will also match `/project/1/export/codebookXcsv` (the dot matches any character).\r\n\r\nThis is because `re_unescape()` is only called for the first fragment, not the following ones; see no unescaping line 630:\r\nhttps://github.com/tornadoweb/tornado/blob/ff985fe509513325462441e017f1ec31dda737c1/tornado/routing.py#L626-L638\r\n\r\nSee also #1619", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2740", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2740/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2740/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2740/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2740", "id": 489824817, "node_id": "MDU6SXNzdWU0ODk4MjQ4MTc=", "number": 2740, "title": "Tornado memory leak (may be not a bug but a usage error)", "user": {"login": "ok2", "id": 201152, "node_id": "MDQ6VXNlcjIwMTE1Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/201152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ok2", "html_url": "https://github.com/ok2", "followers_url": "https://api.github.com/users/ok2/followers", "following_url": "https://api.github.com/users/ok2/following{/other_user}", "gists_url": "https://api.github.com/users/ok2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ok2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ok2/subscriptions", "organizations_url": "https://api.github.com/users/ok2/orgs", "repos_url": "https://api.github.com/users/ok2/repos", "events_url": "https://api.github.com/users/ok2/events{/privacy}", "received_events_url": "https://api.github.com/users/ok2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-05T15:05:14Z", "updated_at": "2019-09-06T02:43:23Z", "closed_at": "2019-09-06T02:43:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have such a code, which read's everything from stdin and send it to the given URL through websockets. All data which it gets from websockets will be send to stdout. It works well the most of the time, but sometimes it eats all of the memory and OOM killer comes, why?\r\n\r\n(it is on python 2 with tornado 5.1.1)\r\n\r\n```\r\nconn = None\r\ninput_counter = 0\r\n\r\ndef on_message(message):\r\n    if message is None or message == '':\r\n        ioloop.stop()\r\n        return\r\n    sys.stdout.write(message)\r\n    sys.stdout.flush()\r\n\r\n@tornado.gen.coroutine\r\ndef on_input(fd, events):\r\n    global input_counter\r\n    if not events & ioloop.READ:\r\n        sys.stderr.write(\"ERROR: failed to read file (error 0x%03x)\\n\" % events)\r\n        sys.exit(1)\r\n    if input_counter >= 16:\r\n        time.sleep(0.1)\r\n        gc.collect()\r\n        return\r\n    input_counter += 1\r\n    data = None\r\n    try:\r\n        try: data = sys.stdin.read()\r\n        except: data = ''\r\n        if conn is None or conn.protocol is None:\r\n            sys.exit(1)\r\n        yield conn.write_message(data, binary = True)\r\n    except Exception as err:\r\n        if data != '':\r\n            sys.stderr.write(\"ERROR: %s\\n\" % repr(err))\r\n            sys.exit(1)\r\n    finally: input_counter -= 1\r\n\r\ndef on_start(*args):\r\n    fd = sys.stdin.fileno()\r\n    fcntl.fcntl(fd, fcntl.F_SETFL, fcntl.fcntl(fd, fcntl.F_GETFL) | os.O_NONBLOCK)\r\n    ioloop.add_handler(fd, on_input, ioloop.READ)\r\n\r\nurl = urlparse(sys.argv[2])\r\nioloop = tornado.ioloop.IOLoop.instance()\r\nrequest = tornado.httpclient._RequestProxy(tornado.httpclient.HTTPRequest(url, validate_cert = False),\r\n                                           tornado.httpclient.HTTPRequest._DEFAULTS)\r\nconn = tornado.websocket.WebSocketClientConnection(request, on_message_callback = on_message, max_message_size = 10*1024*1024)\r\nioloop.add_future(conn.connect_future, on_start)\r\nioloop.start()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2739", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2739/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2739/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2739/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2739", "id": 489585554, "node_id": "MDU6SXNzdWU0ODk1ODU1NTQ=", "number": 2739, "title": "How to get the IP address of the server which Tornado Async HTTP Client is trying to connect.", "user": {"login": "DivyareddyS", "id": 10287889, "node_id": "MDQ6VXNlcjEwMjg3ODg5", "avatar_url": "https://avatars0.githubusercontent.com/u/10287889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DivyareddyS", "html_url": "https://github.com/DivyareddyS", "followers_url": "https://api.github.com/users/DivyareddyS/followers", "following_url": "https://api.github.com/users/DivyareddyS/following{/other_user}", "gists_url": "https://api.github.com/users/DivyareddyS/gists{/gist_id}", "starred_url": "https://api.github.com/users/DivyareddyS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DivyareddyS/subscriptions", "organizations_url": "https://api.github.com/users/DivyareddyS/orgs", "repos_url": "https://api.github.com/users/DivyareddyS/repos", "events_url": "https://api.github.com/users/DivyareddyS/events{/privacy}", "received_events_url": "https://api.github.com/users/DivyareddyS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-05T07:47:12Z", "updated_at": "2019-09-05T09:10:32Z", "closed_at": "2019-09-05T09:10:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to know to which IP address is the hostname resolved to in Tornado when using AsyncHTTPClient using python.\r\n\r\nip_address = await tornado.netutil.Resolver.resolve(hostname)\r\nprint(\"IP ADDRESS Resolver: {}\".format(ip_address))\r\nI need to know the IP address of the server machine to which the hostname is resolved to.\r\n\r\nPlease guide and correct me where I'm wrong...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2738", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2738/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2738/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2738/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2738", "id": 489259561, "node_id": "MDU6SXNzdWU0ODkyNTk1NjE=", "number": 2738, "title": "Attribute error while using AsyncHTTPClient", "user": {"login": "lbolla", "id": 20991, "node_id": "MDQ6VXNlcjIwOTkx", "avatar_url": "https://avatars3.githubusercontent.com/u/20991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbolla", "html_url": "https://github.com/lbolla", "followers_url": "https://api.github.com/users/lbolla/followers", "following_url": "https://api.github.com/users/lbolla/following{/other_user}", "gists_url": "https://api.github.com/users/lbolla/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbolla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbolla/subscriptions", "organizations_url": "https://api.github.com/users/lbolla/orgs", "repos_url": "https://api.github.com/users/lbolla/repos", "events_url": "https://api.github.com/users/lbolla/events{/privacy}", "received_events_url": "https://api.github.com/users/lbolla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-04T16:13:27Z", "updated_at": "2019-09-05T17:56:30Z", "closed_at": "2019-09-05T17:56:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `AsyncHTTPClient` I get the below error (on Tornado 6.0.3).\r\n\r\n```\r\n[E 190904 16:04:29 ioloop:763] Exception in callback functools.partial(<function _HTTPConnection.__init__.<locals>.<lambda> at 0x7f58706627b8>, <Task finished coro=<_HTTPConnection.run() done, defined at /usr/local/lib/python3.6/site-packages/tornado/simple_httpclient.py:289> exception=_QuietException()>)\r\n   Traceback (most recent call last):\r\n      File \"/usr/local/lib/python3.6/site-packages/tornado/http1connection.py\", line 273, in _read_message\r\n        delegate.finish()\r\n      File \"/usr/local/lib/python3.6/site-packages/tornado/http1connection.py\", line 756, in finish\r\n        return self._delegate.finish()\r\n      File \"/usr/local/lib/python3.6/site-packages/tornado/simple_httpclient.py\", line 657, in finish\r\n       fut.add_done_callback(lambda f: final_callback(f.result()))\r\n    AttributeError: 'coroutine' object has no attribute 'add_done_callback'\r\n\r\n    During handling of the above exception, another exception occurred:\r\n\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/lib/python3.6/site-packages/tornado/ioloop.py\", line 743, in _run_callback\r\n        ret = callback()\r\n      File \"/usr/local/lib/python3.6/site-packages/tornado/simple_httpclient.py\", line 286, in <lambda>\r\n        gen.convert_yielded(self.run()), lambda f: f.result()\r\n      File \"/usr/local/lib/python3.6/site-packages/tornado/simple_httpclient.py\", line 438, in run\r\n        await self._write_body(True)\r\n      File \"/usr/local/lib/python3.6/site-packages/tornado/simple_httpclient.py\", line 518, in _write_body\r\n        await self.connection.read_response(self)\r\n    File \"/usr/local/lib/python3.6/site-packages/tornado/http1connection.py\", line 273, in _read_message\r\n        delegate.finish()\r\n     File \"/usr/local/lib/python3.6/site-packages/tornado/http1connection.py\", line 68, in __exit__\r\n        raise _QuietException\r\n    tornado.http1connection._QuietException\r\n```\r\n\r\nI can't reproduce this error in all my environments: it seems to happen only in certain Docker containers. So, it may be caused a user misconfiguration, but given that it works most of the times, I am inclined to think that the code is right, but a bug in Tornado is revealed in certain (unknown) circumstances.\r\n\r\nI am using async/await syntax, not `tornado.gen.coroutine`, and Python 3.6.9.\r\n\r\nDo you know what may be causing this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2737", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2737/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2737/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2737/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2737", "id": 488645285, "node_id": "MDU6SXNzdWU0ODg2NDUyODU=", "number": 2737, "title": "Explicitly use SelectorEventLoop on Windows", "user": {"login": "animalize", "id": 11244865, "node_id": "MDQ6VXNlcjExMjQ0ODY1", "avatar_url": "https://avatars2.githubusercontent.com/u/11244865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/animalize", "html_url": "https://github.com/animalize", "followers_url": "https://api.github.com/users/animalize/followers", "following_url": "https://api.github.com/users/animalize/following{/other_user}", "gists_url": "https://api.github.com/users/animalize/gists{/gist_id}", "starred_url": "https://api.github.com/users/animalize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/animalize/subscriptions", "organizations_url": "https://api.github.com/users/animalize/orgs", "repos_url": "https://api.github.com/users/animalize/repos", "events_url": "https://api.github.com/users/animalize/events{/privacy}", "received_events_url": "https://api.github.com/users/animalize/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-03T14:37:04Z", "updated_at": "2019-09-04T01:55:16Z", "closed_at": "2019-09-04T01:55:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Windows, Python 3.8's default event loop is now `ProactorEventLoop`. [1]\r\nBut tornado doesn't support `ProactorEventLoop`. [2]\r\n\r\nShould we use `SelectorEventLoop` explicitly on Windows?\r\n```python\r\n    if os.name == 'nt':\r\n        import asyncio\r\n        asyncio.DefaultEventLoopPolicy = asyncio.WindowsSelectorEventLoopPolicy\r\n```\r\nFYI, Python 3.8.0's release schedule: [3]\r\n```\r\n3.8.0 beta 4: Monday, 2019-08-26\r\n3.8.0 candidate 1: Monday, 2019-09-30\r\n3.8.0 candidate 2: Monday, 2019-10-07 (if necessary)\r\n3.8.0 final: Monday, 2019-10-21\r\n```\r\n\r\n[1] https://docs.python.org/3.8/whatsnew/3.8.html#asyncio\r\n[2] https://github.com/tornadoweb/tornado/blob/master/tornado/platform/asyncio.py#L15-L19\r\n[3] https://www.python.org/dev/peps/pep-0569/#id6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2736", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2736/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2736/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2736/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2736", "id": 486954464, "node_id": "MDU6SXNzdWU0ODY5NTQ0NjQ=", "number": 2736, "title": "cookies not saving in ios, other ways to authenticate", "user": {"login": "kelvinthu", "id": 13059433, "node_id": "MDQ6VXNlcjEzMDU5NDMz", "avatar_url": "https://avatars3.githubusercontent.com/u/13059433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kelvinthu", "html_url": "https://github.com/kelvinthu", "followers_url": "https://api.github.com/users/kelvinthu/followers", "following_url": "https://api.github.com/users/kelvinthu/following{/other_user}", "gists_url": "https://api.github.com/users/kelvinthu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kelvinthu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kelvinthu/subscriptions", "organizations_url": "https://api.github.com/users/kelvinthu/orgs", "repos_url": "https://api.github.com/users/kelvinthu/repos", "events_url": "https://api.github.com/users/kelvinthu/events{/privacy}", "received_events_url": "https://api.github.com/users/kelvinthu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-29T13:20:36Z", "updated_at": "2019-08-30T02:24:04Z", "closed_at": "2019-08-30T02:24:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen I use set_secure_cookie in tornado, the cookie is returned by the server but the client does not save the cookie in ios and therefore authentication fails. It is the problem with cordova-ios and wkwebview.\r\n\r\nSo while I cannot solve the above problem, is there any other ways to authenticate? I do not want to store the cookies in local storage manually.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2733", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2733/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2733/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2733/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2733", "id": 486209595, "node_id": "MDU6SXNzdWU0ODYyMDk1OTU=", "number": 2733, "title": "latin-1 codec can't encode characters", "user": {"login": "FlameSky-S", "id": 20079773, "node_id": "MDQ6VXNlcjIwMDc5Nzcz", "avatar_url": "https://avatars3.githubusercontent.com/u/20079773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FlameSky-S", "html_url": "https://github.com/FlameSky-S", "followers_url": "https://api.github.com/users/FlameSky-S/followers", "following_url": "https://api.github.com/users/FlameSky-S/following{/other_user}", "gists_url": "https://api.github.com/users/FlameSky-S/gists{/gist_id}", "starred_url": "https://api.github.com/users/FlameSky-S/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FlameSky-S/subscriptions", "organizations_url": "https://api.github.com/users/FlameSky-S/orgs", "repos_url": "https://api.github.com/users/FlameSky-S/repos", "events_url": "https://api.github.com/users/FlameSky-S/events{/privacy}", "received_events_url": "https://api.github.com/users/FlameSky-S/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-28T07:37:36Z", "updated_at": "2019-08-29T03:12:09Z", "closed_at": "2019-08-29T03:12:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using tornado to accept some POST data sended from clients I don't have access to. Everything works fine if only English characters appear in the data. When utf-8 encoded Chinese characters(3 bytes) are within the data, Tornado gives me this warning and the 'get_argument' function can't get anything at all.\r\n\r\nI debuged and simplified my code to the simplest, yet the warning still comes up\r\n\r\n```python\r\nclass DataHandler(tornado.web.RequestHandler):\r\n    def post(self):\r\n        print(\"test\")\r\n        print(self.get_argument(\"data\"))\r\n        print(\"1\")\r\n\r\napplication = tornado.web.Application([\r\n    (r\"/data\", Data),\r\n])\r\n\r\napplication.listen(5000)\r\ntornado.ioloop.IOLoop.instance().start()\r\n```\r\n\r\nThe data the clients post is like:\r\n```\r\ndata={\"id\":\"00f1c423\",\"name\":\"\u5f20\u4e09\"}\r\n```\r\n\r\nThe data is x-www-form-urlencoded and WireShark shows the Chinese characters are perfectly 3-bytes utf-8 which starts with E(1110). \r\nIt has nothing to do with the print function because I actually tried simpler codes:\r\n```python\r\nclass Data(tornado.web.RequestHandler):\r\n    def post(self):\r\n        return\r\n```\r\nThe warning is still there. So could anyone tell me where does this encoding thing come from since I did nothing about encoding in my code?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2732", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2732/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2732/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2732/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2732", "id": 485817717, "node_id": "MDU6SXNzdWU0ODU4MTc3MTc=", "number": 2732, "title": "set_secure_cookie limit on content size?", "user": {"login": "AMMullan", "id": 9948612, "node_id": "MDQ6VXNlcjk5NDg2MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/9948612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AMMullan", "html_url": "https://github.com/AMMullan", "followers_url": "https://api.github.com/users/AMMullan/followers", "following_url": "https://api.github.com/users/AMMullan/following{/other_user}", "gists_url": "https://api.github.com/users/AMMullan/gists{/gist_id}", "starred_url": "https://api.github.com/users/AMMullan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AMMullan/subscriptions", "organizations_url": "https://api.github.com/users/AMMullan/orgs", "repos_url": "https://api.github.com/users/AMMullan/repos", "events_url": "https://api.github.com/users/AMMullan/events{/privacy}", "received_events_url": "https://api.github.com/users/AMMullan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-27T13:40:17Z", "updated_at": "2019-08-27T23:24:49Z", "closed_at": "2019-08-27T23:24:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use set_secure_cookie and it works perfectly until you try to put too much data in it - working content at 2907 bytes but fails when setting 2965 bytes.\r\n\r\nFrom what I can see, Chrome has a max cookie size of 4096 bytes so not sure if this is a known issue with Tornado or me doing something wrong? Firefox is letting me use a little bit more but not much.\r\n\r\nUsing Tornado 6.0.3 w/ Python 3.6.8\r\n\r\nCheers in advance :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2729", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2729/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2729/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2729/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2729", "id": 482077985, "node_id": "MDU6SXNzdWU0ODIwNzc5ODU=", "number": 2729, "title": "'AsyncIOMainLoop' object has no attribute 'run_on_executor' -- Python  3.6", "user": {"login": "jayanth1991", "id": 1319597, "node_id": "MDQ6VXNlcjEzMTk1OTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1319597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayanth1991", "html_url": "https://github.com/jayanth1991", "followers_url": "https://api.github.com/users/jayanth1991/followers", "following_url": "https://api.github.com/users/jayanth1991/following{/other_user}", "gists_url": "https://api.github.com/users/jayanth1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayanth1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayanth1991/subscriptions", "organizations_url": "https://api.github.com/users/jayanth1991/orgs", "repos_url": "https://api.github.com/users/jayanth1991/repos", "events_url": "https://api.github.com/users/jayanth1991/events{/privacy}", "received_events_url": "https://api.github.com/users/jayanth1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-19T02:40:03Z", "updated_at": "2019-08-19T12:12:13Z", "closed_at": "2019-08-19T12:12:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```sh\r\ntokens = await IOLoop.current().run_on_executor(None, self._get_alltokens)\r\nAttributeError: 'AsyncIOMainLoop' object has no attribute 'run_on_executor'\r\n```\r\n\r\nPython: Python 3.6.8\r\nTornado: 6.0.3\r\n\r\nI am not sure what I am doing wrong, I've gone over multiple examples and the syntax seems to be the same. Any help regarding this is greatly appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2726", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2726/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2726/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2726/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2726", "id": 479441533, "node_id": "MDU6SXNzdWU0Nzk0NDE1MzM=", "number": 2726, "title": "Incorrectly removes \u2018Allow\u2019 header from HTTP 204 response", "user": {"login": "andersk", "id": 26471, "node_id": "MDQ6VXNlcjI2NDcx", "avatar_url": "https://avatars0.githubusercontent.com/u/26471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andersk", "html_url": "https://github.com/andersk", "followers_url": "https://api.github.com/users/andersk/followers", "following_url": "https://api.github.com/users/andersk/following{/other_user}", "gists_url": "https://api.github.com/users/andersk/gists{/gist_id}", "starred_url": "https://api.github.com/users/andersk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andersk/subscriptions", "organizations_url": "https://api.github.com/users/andersk/orgs", "repos_url": "https://api.github.com/users/andersk/repos", "events_url": "https://api.github.com/users/andersk/events{/privacy}", "received_events_url": "https://api.github.com/users/andersk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-12T01:54:45Z", "updated_at": "2019-10-21T02:34:19Z", "closed_at": "2019-10-21T02:34:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In this application, Tornado (6.0.3) filters the `Allow` header out of the 204 response to an `OPTIONS` request, while the misspelled `Alloww` header is passed through. [RFC 7231 \u00a77.4.1](https://tools.ietf.org/html/rfc7231#section-7.4.1) is clear that an `Allow` header MAY be sent on any response, and [\u00a74.3.7](https://tools.ietf.org/html/rfc7231#section-4.3.7) says that it SHOULD be sent if applicable in response to an `OPTIONS` request, so Tornado should not filter it out.\r\n\r\n```python\r\nimport tornado.ioloop\r\nimport tornado.web\r\n\r\nclass MainHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        self.write(\"Hello, world\")\r\n\r\n    def options(self):\r\n        self.set_header(\"Allow\", \"GET, OPTIONS\")\r\n        self.set_header(\"Alloww\", \"GET, OPTIONS\")\r\n        self.set_status(204)\r\n        self.finish()\r\n\r\nif __name__ == \"__main__\":\r\n    app = tornado.web.Application([(r\"/\", MainHandler)])\r\n    app.listen(8888)\r\n    tornado.ioloop.IOLoop.current().start()\r\n```\r\n\r\n```console\r\n$ curl -i -X OPTIONS http://localhost:8888\r\nHTTP/1.1 204 No Content\r\nServer: TornadoServer/6.0.3\r\nDate: Mon, 12 Aug 2019 01:49:10 GMT\r\nAlloww: GET, OPTIONS\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2724", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2724/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2724/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2724/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2724", "id": 479289663, "node_id": "MDU6SXNzdWU0NzkyODk2NjM=", "number": 2724, "title": "WSGI __call__() takes 2 positional arguments but 3 were given", "user": {"login": "lalabuy948", "id": 24271777, "node_id": "MDQ6VXNlcjI0MjcxNzc3", "avatar_url": "https://avatars1.githubusercontent.com/u/24271777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lalabuy948", "html_url": "https://github.com/lalabuy948", "followers_url": "https://api.github.com/users/lalabuy948/followers", "following_url": "https://api.github.com/users/lalabuy948/following{/other_user}", "gists_url": "https://api.github.com/users/lalabuy948/gists{/gist_id}", "starred_url": "https://api.github.com/users/lalabuy948/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lalabuy948/subscriptions", "organizations_url": "https://api.github.com/users/lalabuy948/orgs", "repos_url": "https://api.github.com/users/lalabuy948/repos", "events_url": "https://api.github.com/users/lalabuy948/events{/privacy}", "received_events_url": "https://api.github.com/users/lalabuy948/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-10T17:32:53Z", "updated_at": "2019-08-10T17:44:33Z", "closed_at": "2019-08-10T17:44:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to wrap hello_world example in wsgi server\r\n\r\n```py\r\nfrom gevent.pywsgi import WSGIServer\r\nimport app\r\n\r\nhttp_server = WSGIServer(('', 8888), application=app.make_tornado_app())\r\nhttp_server.serve_forever()\r\n```\r\n\r\nand getting always this error\r\n\r\n```sh\r\nFile \"/venv/lib/python3.7/site-packages/gevent/pywsgi.py\", line 923, in run_application\r\n    self.result = self.application(self.environ, self.start_response)\r\nTypeError: __call__() takes 2 positional arguments but 3 were given\r\n```\r\n\r\nor if using `tornado.wsgi.WSGIContainer`\r\n\r\n```sh\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/wsgiref/handlers.py\", line 137, in run\r\n    self.result = application(self.environ, self.start_response)\r\nTypeError: __call__() takes 2 positional arguments but 3 were given\r\n127.0.0.1 - - [10/Aug/2019 17:40:58] \"GET / HTTP/1.1\" 500 59\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2722", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2722/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2722/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2722/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2722", "id": 477418834, "node_id": "MDU6SXNzdWU0Nzc0MTg4MzQ=", "number": 2722, "title": "Misleading CSRF docs / bug in setting CSRF cookie?", "user": {"login": "flowirtz", "id": 6052785, "node_id": "MDQ6VXNlcjYwNTI3ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6052785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flowirtz", "html_url": "https://github.com/flowirtz", "followers_url": "https://api.github.com/users/flowirtz/followers", "following_url": "https://api.github.com/users/flowirtz/following{/other_user}", "gists_url": "https://api.github.com/users/flowirtz/gists{/gist_id}", "starred_url": "https://api.github.com/users/flowirtz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flowirtz/subscriptions", "organizations_url": "https://api.github.com/users/flowirtz/orgs", "repos_url": "https://api.github.com/users/flowirtz/repos", "events_url": "https://api.github.com/users/flowirtz/events{/privacy}", "received_events_url": "https://api.github.com/users/flowirtz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-06T14:35:12Z", "updated_at": "2019-08-24T20:02:13Z", "closed_at": "2019-08-24T20:02:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [docs read as such](https://www.tornadoweb.org/en/stable/guide/security.html#cross-site-request-forgery-protection):\r\n> The XSRF cookie is normally set when xsrf_form_html is used, but in a pure-Javascript application that does not use any regular forms you may need to access self.xsrf_token manually (**just reading the property is enough to set the cookie as a side effect**).\r\n\r\nUpon further inspection, I found this:\r\nhttps://github.com/tornadoweb/tornado/blob/4ac3d54396ebeb65e37eac28762a462d5a345ade/tornado/web.py#L1417-L1420\r\n\r\nIt only seems to be setting the cookie as a side effect, `if version is None`.\r\n\r\nFor my usecase, I want to update the CSRF cookie with every mutating request (read `!= GET`). I can't rely however on just calling `self.xsrf_token`, as it **does not always update the cookie**.\r\n\r\n---\r\n\r\nI am unsure about the intended effect of said line for this project. For my usecase however it is breaking the side effect of the property or rather just runs it once.\r\nI think it would be nice if the documentation was changed this way or the part that sets the cookie was changed, not sure why it's only set when `version is None`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2718", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2718/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2718/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2718/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2718", "id": 475628930, "node_id": "MDU6SXNzdWU0NzU2Mjg5MzA=", "number": 2718, "title": "Listen to IP address range", "user": {"login": "YodaEmbedding", "id": 721196, "node_id": "MDQ6VXNlcjcyMTE5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/721196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YodaEmbedding", "html_url": "https://github.com/YodaEmbedding", "followers_url": "https://api.github.com/users/YodaEmbedding/followers", "following_url": "https://api.github.com/users/YodaEmbedding/following{/other_user}", "gists_url": "https://api.github.com/users/YodaEmbedding/gists{/gist_id}", "starred_url": "https://api.github.com/users/YodaEmbedding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YodaEmbedding/subscriptions", "organizations_url": "https://api.github.com/users/YodaEmbedding/orgs", "repos_url": "https://api.github.com/users/YodaEmbedding/repos", "events_url": "https://api.github.com/users/YodaEmbedding/events{/privacy}", "received_events_url": "https://api.github.com/users/YodaEmbedding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-01T11:28:14Z", "updated_at": "2019-08-02T01:37:07Z", "closed_at": "2019-08-02T01:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the Hello World example:\r\n\r\n```python3\r\nimport tornado.ioloop\r\nimport tornado.web\r\n\r\nclass MainHandler(tornado.web.RequestHandler):\r\n    def get(self):\r\n        self.write(\"Hello, world\")\r\n\r\ndef make_app():\r\n    return tornado.web.Application([\r\n        (r\"/\", MainHandler),\r\n    ])\r\n\r\nif __name__ == \"__main__\":\r\n    PORT = 8080\r\n    ADDR = '192.168.100.0'\r\n    app = make_app()\r\n    app.listen(PORT, ADDR)\r\n    tornado.ioloop.IOLoop.current().start()\r\n```\r\n\r\nFor `ADDR` set to `'0.0.0.0'` or `'127.0.0.1'`, I am able to access the webpage from `localhost:8080`. However, if I try to listen only on my LAN, `'192.168.100.0'` doesn't do anything and `'192.168.100.0/24'` is just a parse error.\r\n\r\nIs there any reasonable way to listen to an IP address range? (Particularly for LAN.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2717", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2717/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2717/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2717/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2717", "id": 475579914, "node_id": "MDU6SXNzdWU0NzU1Nzk5MTQ=", "number": 2717, "title": "IOStream read can fail if closed with an open read buffer", "user": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-01T09:40:02Z", "updated_at": "2020-02-01T21:44:44Z", "closed_at": "2020-02-01T21:44:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm currently investigating the issue mentioned [here](https://github.com/tornadoweb/tornado/issues/2651#issuecomment-515687031) and I've narrowed the situation down somewhat:\r\n\r\nSimpleAsyncHTTPRequest is making a POST request with an empty body to a server that is responding *very* quickly. In this case, it is the request to github.com to complete GitHub OAuth.\r\n\r\nWhen `read_until_regex` is called in \r\n- read buffer is not empty, but\r\n- stream is closed\r\n\r\nSo a closed check is apparently occurring before the read is attempted from the existing buffer. Interestingly, #2670 introduces exactly such a premature closed check (a `_try_inline_read()` would succeed if attempted), but the issue still occurs in 6.0.2, prior to #2670, so there must be an *additional* check that's causing StreamClosedError to be raised even when the \r\n\r\nI'm trying to provoke this with a self-contained test case that doesn't require github credentials, but haven't managed it yet. Will report back when I do.\r\n\r\nUsing curl_httpclient does not appear to exhibit this behavior.\r\n\r\nI think this is related to #2651 in that it's another issue in 6.0 where there are races between the closed state and pending reads/writes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2713", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2713/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2713/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2713/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2713", "id": 473089261, "node_id": "MDU6SXNzdWU0NzMwODkyNjE=", "number": 2713, "title": "no files are saved by upload demo", "user": {"login": "joshuacox", "id": 6137404, "node_id": "MDQ6VXNlcjYxMzc0MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6137404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshuacox", "html_url": "https://github.com/joshuacox", "followers_url": "https://api.github.com/users/joshuacox/followers", "following_url": "https://api.github.com/users/joshuacox/following{/other_user}", "gists_url": "https://api.github.com/users/joshuacox/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshuacox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshuacox/subscriptions", "organizations_url": "https://api.github.com/users/joshuacox/orgs", "repos_url": "https://api.github.com/users/joshuacox/repos", "events_url": "https://api.github.com/users/joshuacox/events{/privacy}", "received_events_url": "https://api.github.com/users/joshuacox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-25T22:02:09Z", "updated_at": "2019-07-25T23:52:59Z", "closed_at": "2019-07-25T23:52:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running this code:\r\n\r\nhttps://github.com/tornadoweb/tornado/blob/master/demos/file_upload/file_receiver.py\r\n\r\nand uploading a file:\r\n\r\n```\r\npython file_uploader.py --put /home/myuser/Pictures/filetest.jpg\r\n\r\nHTTPResponse(_body=None,_error_is_response_code=False,buffer=<_io.BytesIO object at 0x7fcb69baceb8>,code=200,effective_url='http://localhost:8888/filetest.jpg',error=None,headers=<tornado.httputil.HTTPHeaders object at 0x7fcb69b38588>,reason='OK',request=<tornado.httpclient.HTTPRequest object at 0x7fcb69be4358>,request_time=0.004802703857421875,start_time=1564094635.3881001,time_info={})\r\n```\r\n\r\nor\r\n\r\n```\r\ncurl -v -F name=filetest -F image=@/home/thoth/Pictures/filetest.jpg localhost:8888/post\r\n*   Trying ::1:8888...\r\n* TCP_NODELAY set\r\n* Connected to localhost (::1) port 8888 (#0)\r\n> POST /post HTTP/1.1\r\n> Host: localhost:8888\r\n> User-Agent: curl/7.65.1\r\n> Accept: */*\r\n> Content-Length: 99169\r\n> Content-Type: multipart/form-data; boundary=------------------------eed1e4e250753c56\r\n> Expect: 100-continue\r\n> \r\n* Mark bundle as not supporting multiuse\r\n< HTTP/1.1 100 (Continue)\r\n* We are completely uploaded and fine\r\n* Mark bundle as not supporting multiuse\r\n< HTTP/1.1 200 OK\r\n< Server: TornadoServer/6.0.3\r\n< Content-Type: text/html; charset=UTF-8\r\n< Date: Thu, 25 Jul 2019 22:45:49 GMT\r\n< Content-Length: 2\r\n< \r\n* Connection #0 to host localhost left intact\r\nOK%                  \r\n```\r\n\r\n\r\nNo file was saved.\r\n\r\n```\r\n$ ls -alh\r\ntotal 12K\r\ndrwxr-xr-x 1 root root 4.0K Jul 25 22:26 .\r\ndrwxr-xr-x 1 root root 4.0K Jul 25 22:21 ..\r\n-rwxr-xr-x 1 root root 1.7K Jul 25 22:26 file_receiver.py\r\n$ ls -alh /tmp\r\ntotal 8.0K\r\ndrwxrwxrwt 1 root root 4.0K Jul 13 14:05 .\r\ndrwxr-xr-x 1 root root 4.0K Jul 25 22:26 ..\r\n```\r\n\r\nAm I looking in the wrong places?\r\n\r\nExample docker test environment:\r\n\r\n```\r\nFROM python:3\r\nWORKDIR /usr/src/app\r\nRUN pip install --no-cache-dir tornado\r\nCOPY ./file_receiver.py ./\r\nCMD [ \"python\", \"./file_receiver.py\" ]\r\n```\r\n\r\nlogs from container:\r\n```\r\n[I 190725 22:45:49 receiver:29] POST \"filetest.jpg\" \"image/jpeg\" 98877 bytes\r\n[I 190725 22:45:49 web:2246] 200 POST /post (172.17.0.1) 2.06ms\r\n[I 190725 22:47:26 receiver:29] POST \"filetest.jpg\" \"image/jpeg\" 98877 bytes\r\n[I 190725 22:47:26 web:2246] 200 POST /post (172.17.0.1) 1.47ms\r\n[I 190725 22:47:32 receiver:46] PUT \"filetest.jpg\" \"image/jpeg\" 98877 bytes\r\n[I 190725 22:47:32 web:2246] 200 PUT /filetest.jpg (172.17.0.1) 1.38ms\r\n```\r\n\r\nIs there something that is wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2712", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2712/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2712/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2712/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2712", "id": 472719845, "node_id": "MDU6SXNzdWU0NzI3MTk4NDU=", "number": 2712, "title": "argument's value cut off by semicolon", "user": {"login": "trysu", "id": 16658746, "node_id": "MDQ6VXNlcjE2NjU4NzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/16658746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trysu", "html_url": "https://github.com/trysu", "followers_url": "https://api.github.com/users/trysu/followers", "following_url": "https://api.github.com/users/trysu/following{/other_user}", "gists_url": "https://api.github.com/users/trysu/gists{/gist_id}", "starred_url": "https://api.github.com/users/trysu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trysu/subscriptions", "organizations_url": "https://api.github.com/users/trysu/orgs", "repos_url": "https://api.github.com/users/trysu/repos", "events_url": "https://api.github.com/users/trysu/events{/privacy}", "received_events_url": "https://api.github.com/users/trysu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-25T07:57:46Z", "updated_at": "2019-07-25T15:28:21Z", "closed_at": "2019-07-25T15:28:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a argument's value contain `;`, the value will cut off by `;`\r\ne.g:\r\nThere is a GET method : `https://www.test.com/test?_arg1==face;book`\r\n\r\n```python\r\nprint(self.get_query_argument(name=\"_arg1\", default=None))\r\n```\r\nI hope output: `face;book`, but now only output:\r\n```\r\nface\r\n```\r\nand the `;book` cut off by `;`\r\n\r\nIs this a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2709", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2709/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2709/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2709/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2709", "id": 472016898, "node_id": "MDU6SXNzdWU0NzIwMTY4OTg=", "number": 2709, "title": "jupyter 4.4.0 did not work with tornado 6.0.3", "user": {"login": "jimgunn3", "id": 17791942, "node_id": "MDQ6VXNlcjE3NzkxOTQy", "avatar_url": "https://avatars1.githubusercontent.com/u/17791942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimgunn3", "html_url": "https://github.com/jimgunn3", "followers_url": "https://api.github.com/users/jimgunn3/followers", "following_url": "https://api.github.com/users/jimgunn3/following{/other_user}", "gists_url": "https://api.github.com/users/jimgunn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimgunn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimgunn3/subscriptions", "organizations_url": "https://api.github.com/users/jimgunn3/orgs", "repos_url": "https://api.github.com/users/jimgunn3/repos", "events_url": "https://api.github.com/users/jimgunn3/events{/privacy}", "received_events_url": "https://api.github.com/users/jimgunn3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-23T23:53:29Z", "updated_at": "2019-07-24T03:20:17Z", "closed_at": "2019-07-24T02:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried unsuccessfully to  run a jupyter 4.4.0, notebook 5.7.4  with tornado 6.0..3. I am able to get it to run using tornado 5.1.1. Hopefully this can be fixed. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2708", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2708/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2708/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2708/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2708", "id": 471884299, "node_id": "MDU6SXNzdWU0NzE4ODQyOTk=", "number": 2708, "title": "Attribute Error: EPollIO object has no attribute 'run_in_executor'", "user": {"login": "bbergmann", "id": 870780, "node_id": "MDQ6VXNlcjg3MDc4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/870780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbergmann", "html_url": "https://github.com/bbergmann", "followers_url": "https://api.github.com/users/bbergmann/followers", "following_url": "https://api.github.com/users/bbergmann/following{/other_user}", "gists_url": "https://api.github.com/users/bbergmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbergmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbergmann/subscriptions", "organizations_url": "https://api.github.com/users/bbergmann/orgs", "repos_url": "https://api.github.com/users/bbergmann/repos", "events_url": "https://api.github.com/users/bbergmann/events{/privacy}", "received_events_url": "https://api.github.com/users/bbergmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-23T19:18:48Z", "updated_at": "2019-07-24T14:03:47Z", "closed_at": "2019-07-24T14:03:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "python version 3.5.7\r\ntornado version 6.03\r\nCentOS\r\n\r\nI am using code similar to the code using bcrypt in the tornado blog example:\r\n...\r\nhashed = await tornado.ioloop.IOLoop.current().run_in_executor(\r\n  None,\r\n  bcrypt.hashpw,\r\n  tornado.escape.utf8(self.get_argument('password')),\r\n  bcrypt.gensalt()\r\n )\r\n...\r\n\r\nI am not sure what I am missing here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2706", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2706/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2706/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2706/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2706", "id": 468516806, "node_id": "MDU6SXNzdWU0Njg1MTY4MDY=", "number": 2706, "title": "ImportError: cannot import name 'Future' from 'tornado.concurrent'", "user": {"login": "cTaoLee", "id": 17348958, "node_id": "MDQ6VXNlcjE3MzQ4OTU4", "avatar_url": "https://avatars3.githubusercontent.com/u/17348958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cTaoLee", "html_url": "https://github.com/cTaoLee", "followers_url": "https://api.github.com/users/cTaoLee/followers", "following_url": "https://api.github.com/users/cTaoLee/following{/other_user}", "gists_url": "https://api.github.com/users/cTaoLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/cTaoLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cTaoLee/subscriptions", "organizations_url": "https://api.github.com/users/cTaoLee/orgs", "repos_url": "https://api.github.com/users/cTaoLee/repos", "events_url": "https://api.github.com/users/cTaoLee/events{/privacy}", "received_events_url": "https://api.github.com/users/cTaoLee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-16T08:27:22Z", "updated_at": "2019-07-16T10:02:21Z", "closed_at": "2019-07-16T10:00:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I import the Queue module by `from tornado.queues import Queue` , it is error like that", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2705", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2705/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2705/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2705/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2705", "id": 467211419, "node_id": "MDU6SXNzdWU0NjcyMTE0MTk=", "number": 2705, "title": "Is there a ```get_current_request()``` method in tornado6.0 ?", "user": {"login": "DachuanZhao", "id": 23434805, "node_id": "MDQ6VXNlcjIzNDM0ODA1", "avatar_url": "https://avatars0.githubusercontent.com/u/23434805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DachuanZhao", "html_url": "https://github.com/DachuanZhao", "followers_url": "https://api.github.com/users/DachuanZhao/followers", "following_url": "https://api.github.com/users/DachuanZhao/following{/other_user}", "gists_url": "https://api.github.com/users/DachuanZhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/DachuanZhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DachuanZhao/subscriptions", "organizations_url": "https://api.github.com/users/DachuanZhao/orgs", "repos_url": "https://api.github.com/users/DachuanZhao/repos", "events_url": "https://api.github.com/users/DachuanZhao/events{/privacy}", "received_events_url": "https://api.github.com/users/DachuanZhao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-12T04:09:24Z", "updated_at": "2019-07-12T22:42:50Z", "closed_at": "2019-07-12T22:42:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use both sqlalchemy and tornado.\r\nHere is my sqlalchemy code:\r\n```\r\nfrom sqlalchemy.orm import sessionmaker,scoped_session,mapper\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\n\r\nBase = declarative_base()\r\nengine = create_engine(MYSQL_DB_URL,pool_size=300,max_overflow=20,pool_recycle=1800,pool_pre_ping=True)\r\n\r\n@event.listens_for(engine, \"connect\")\r\ndef connect(dbapi_connection, connection_record):\r\n    connection_record.info['pid'] = os.getpid()\r\n\r\n@event.listens_for(engine, \"checkout\")\r\ndef checkout(dbapi_connection, connection_record, connection_proxy):\r\n    pid = os.getpid()\r\n    if connection_record.info['pid'] != pid:\r\n        connection_record.connection = connection_proxy.connection = None\r\n        raise exc.DisconnectionError(\r\n                \"Connection record belongs to pid %s, \"\r\n                \"attempting to check out in pid %s\" %\r\n                (connection_record.info['pid'], pid)\r\n        )\r\n\r\nDBSession = sessionmaker(bind=engine)\r\n\r\ndb_session = scoped_session(DBSession)\r\n```\r\ntornado code:\r\n```\r\n\r\nclass CustomTornadoHandler(tornado.web.RequestHandler):\r\n\r\n    \"\"\"\r\n    custom tornadoHandler with sqlalchemy session\r\n    \"\"\"\r\n\r\n    def set_default_headers(self):\r\n        \"\"\"\r\n        \"\"\"\r\n        self.set_header(\"Access-Control-Allow-Origin\", \"*\")\r\n        self.set_header(\"Access-Control-Allow-Headers\", \"x-requested-with,application/x-www-form-urlencoded\")\r\n        self.set_header('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, PATCH, DELETE, PUT')\r\n\r\n    def initialize(self, *args, **kwargs):\r\n        self.db_session = db_session()\r\n\r\n    def on_finish(self):\r\n        db_session.remove()\r\n\r\nclass TerminologyDetailHandler(CustomTornadoHandler):\r\n\r\n    executor = ThreadPoolExecutor()\r\n\r\n    @run_on_executor\r\n    def get(self):\r\n        data = SqlFunc.get_terminology_detail(self.db_session,**param_dict)\r\n        self.write('success')\r\n```\r\nBut it goes wrong.\r\n```\r\npymysql.err.internalerror: packet sequence number wrong - got 102 expected 8\r\n```\r\nI think the reason for the error is that I should give the param ```scopefunc=get_current_request``` in method ```scoped_session()```\r\nSo I want to know that is there a ```get_current_request()``` method in tornado6.0 ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2704", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2704/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2704/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2704/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2704", "id": 466435480, "node_id": "MDU6SXNzdWU0NjY0MzU0ODA=", "number": 2704, "title": "Problem converting IOStream to SSLIOStream with \"start_tls\" function", "user": {"login": "amTorrinha", "id": 45203522, "node_id": "MDQ6VXNlcjQ1MjAzNTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/45203522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amTorrinha", "html_url": "https://github.com/amTorrinha", "followers_url": "https://api.github.com/users/amTorrinha/followers", "following_url": "https://api.github.com/users/amTorrinha/following{/other_user}", "gists_url": "https://api.github.com/users/amTorrinha/gists{/gist_id}", "starred_url": "https://api.github.com/users/amTorrinha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amTorrinha/subscriptions", "organizations_url": "https://api.github.com/users/amTorrinha/orgs", "repos_url": "https://api.github.com/users/amTorrinha/repos", "events_url": "https://api.github.com/users/amTorrinha/events{/privacy}", "received_events_url": "https://api.github.com/users/amTorrinha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-10T17:40:45Z", "updated_at": "2019-08-02T13:38:36Z", "closed_at": "2019-08-02T13:38:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Tornado to run as a Proxy Server that receives several requests from a client, redirecting most of them. However, in some specific cases, I want to establish a ssl connection between client and proxy. To do this, my idea was to use the ```start_tls``` function to convert the client's IOStream into an SSLIOStream, sending a self-signed certificate to the client, which will be used to encrypt their following communications.\r\n\r\nIn my client, I use Python Requests to perform the request, redirecting it to the proxy :\r\n```\r\nproxies = {\r\n\t\t\t'http' : 'http://user:1@localhost:8888',\r\n\t\t\t'https': 'http://user:1@localhost:8888'  \r\n\t\t}\r\n\r\nr = requests.request('GET', 'https://www.somedomain.com/', proxies = proxies, verify = False)\r\n```\r\nIn my proxy, I'm using a RequestHandler that receives and deals with the requests. Inside the connect function, which will be called for https connections, I have the following code for the specific cases mentioned above:\r\n```\r\nclass MainHandler(tornado.web.RequestHandler):\r\n\r\n   async def connect(self):\r\n      self.client = self.request.connection.stream\r\n      #some code\r\n      ssl_context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)                                                                                                        \r\n      ssl_context.load_cert_chain(certfile=\"ssl/cert.pem\", keyfile=\"ssl/key.pem\")                                                                                            \r\n      client_future = self.client.start_tls(server_side=True, ssl_options=ssl_context)\r\n      self.client = await client_future\r\n``` \r\nThe problem here is that the future's result is never set, so it blocks in the ```await```. My goal is to send a self-signed certificate to the client, in order to be able to decrypt the client's data before sending it to the domain, by\"upgrading\" the client connection (```self.client```) to an SSL connection, with the handshake done, between my server and the client. Is this the best way to do it, or is there a better solution?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2703", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2703/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2703/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2703/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2703", "id": 465203684, "node_id": "MDU6SXNzdWU0NjUyMDM2ODQ=", "number": 2703, "title": "ioloop overwrites log format and log level", "user": {"login": "jesopo", "id": 11245819, "node_id": "MDQ6VXNlcjExMjQ1ODE5", "avatar_url": "https://avatars1.githubusercontent.com/u/11245819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesopo", "html_url": "https://github.com/jesopo", "followers_url": "https://api.github.com/users/jesopo/followers", "following_url": "https://api.github.com/users/jesopo/following{/other_user}", "gists_url": "https://api.github.com/users/jesopo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesopo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesopo/subscriptions", "organizations_url": "https://api.github.com/users/jesopo/orgs", "repos_url": "https://api.github.com/users/jesopo/repos", "events_url": "https://api.github.com/users/jesopo/events{/privacy}", "received_events_url": "https://api.github.com/users/jesopo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-08T11:28:13Z", "updated_at": "2019-08-02T13:36:51Z", "closed_at": "2019-08-02T13:36:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "(using Python 3.7.3)\r\n\r\nThis line here https://github.com/jesopo/bitbot/blob/15e143fcff39d64c5acc2d93f61c2f00f65c2ee0/src/utils/http.py#L127 overwrites all the configuration done here https://github.com/jesopo/bitbot/blob/15e143fcff39d64c5acc2d93f61c2f00f65c2ee0/src/Logging.py#L19\r\n\r\n```\r\n2019-07-08T12:21:29.059Z [DEBUG] [redcated] (raw recv) | @time=2019-07-08T11:21:29.000Z;account=[redacted] :[redacted] PRIVMSG BitBotTest :VERSION\r\n2019-07-08T12:21:29.360Z [DEBUG] [redcated] (raw recv) | :[redacted] 324 BitBotTest #bitbot +nt\r\n2019-07-08T12:21:29.361Z [DEBUG] [redcated] (raw recv) | :[redacted] 329 BitBotTest #bitbot 1562584887\r\n2019-07-08T12:21:29.362Z [DEBUG] [redcated] (raw recv) | :[redacted] 354 BitBotTest 111 jess [redacted]/bot/BitBot BitBotTest BitBot :BitBot\r\n2019-07-08T12:21:29.363Z [DEBUG] [redcated] (raw recv) | :[redacted] 315 BitBotTest #bitbot :End of /WHO list.\r\n2019-07-08T12:21:29.393Z [DEBUG] [redcated] (raw send) | NOTICE [redacted] :VERSION BitBot v1.10.0 (https://git.io/bitbot)\r\n2019-07-08T12:21:59.361Z [DEBUG] [redcated] (raw send) | PING hello\r\n2019-07-08T12:21:59.439Z [DEBUG] [redcated] (raw recv) | :[redacted1] PONG [redacted2] :hello\r\n\r\n// tornado.ioloop.IOLoop.current().run_sync(_request) is called\r\n\r\nTRACE:bitbot:executed query in 0.150282ms: \"SELECT value FROM channel_settings WHERE channel_id=? AND setting=?\" (params: [2, 'rss-seen-ids-https://lorem-rss.herokuapp.com/feed'])\r\nTRACE:bitbot:calling event: \"send.stdout\" (params: {'target': IRCChannel.Channel([redacted]|##bitbot), 'module_name': 'RSS', 'server': IRCServer.Server([redacted]), 'message': 'Lorem ipsum feed for an interval of 1 minutes: Lorem ip\r\nsum 2019-07-08T11:18:00Z by John Smith - http://example.com/test/1562584680'})\r\nTRACE:bitbot:executed query in 0.068126ms: \"SELECT value FROM bot_settings WHERE setting=?\" (params: ['command-method'])\r\nTRACE:bitbot:executed query in 0.064742ms: \"SELECT value FROM server_settings WHERE server_id=? AND setting=?\" (params: [1, 'command-method'])\r\nTRACE:bitbot:executed query in 0.060078ms: \"SELECT value FROM channel_settings WHERE channel_id=? AND setting=?\" (params: [2, 'command-method'])\r\nTRACE:bitbot:calling event: \"preprocess.send.privmsg\" (params: {'server': IRCServer.Server([redacted]), 'line': ParsedLine(PRIVMSG ##bitbot :[03RSS] Lorem ipsum feed for an interval of 1 minutes: Lorem ipsum 2019-07-08T11:18:00Z by John Smi\r\nth - http://example.com/test/1562584680), 'events': <src.EventManager.Events object at 0x7f4987fd5a20>})\r\nTRACE:bitbot:executed query in 0.061754ms: \"SELECT value FROM server_settings WHERE server_id=? AND setting=?\" (params: [1, 'message-filters'])\r\nTRACE:bitbot:executed query in 0.069875ms: \"SELECT value FROM channel_settings WHERE channel_id=? AND setting=?\" (params: [2, 'message-filters'])\r\nTRACE:bitbot:executed query in 0.069631ms: \"SELECT value FROM server_settings WHERE server_id=? AND setting=?\" (params: [1, 'strip-color'])\r\nTRACE:bitbot:executed query in 0.068505ms: \"SELECT value FROM channel_settings WHERE channel_id=? AND setting=?\" (params: [2, 'strip-color'])\r\n```\r\n\r\nI've tried:\r\n\r\n```\r\nimport tornado.options\r\ntornado.options.options.logging = None\r\n```\r\n\r\nOn this line https://github.com/jesopo/bitbot/blob/15e143fcff39d64c5acc2d93f61c2f00f65c2ee0/src/utils/http.py#L6 but it doesn't help. What am I doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2702", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2702/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2702/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2702/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2702", "id": 464423613, "node_id": "MDU6SXNzdWU0NjQ0MjM2MTM=", "number": 2702, "title": "Provide default User-Agent in SimpleAsyncHTTPClient", "user": {"login": "yan12125", "id": 1937689, "node_id": "MDQ6VXNlcjE5Mzc2ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1937689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yan12125", "html_url": "https://github.com/yan12125", "followers_url": "https://api.github.com/users/yan12125/followers", "following_url": "https://api.github.com/users/yan12125/following{/other_user}", "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}", "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions", "organizations_url": "https://api.github.com/users/yan12125/orgs", "repos_url": "https://api.github.com/users/yan12125/repos", "events_url": "https://api.github.com/users/yan12125/events{/privacy}", "received_events_url": "https://api.github.com/users/yan12125/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 114337843, "node_id": "MDU6TGFiZWwxMTQzMzc4NDM=", "url": "https://api.github.com/repos/tornadoweb/tornado/labels/httpclient", "name": "httpclient", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-05T01:05:29Z", "updated_at": "2020-04-26T20:18:27Z", "closed_at": "2020-04-26T20:18:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "From https://tools.ietf.org/html/rfc7231:\r\n\r\n> A user agent SHOULD send a User-Agent field in each request unless specifically configured not to do so.\r\n\r\n`CurlAsyncHTTPClient` provides default `User-Agent` string:\r\n\r\nhttps://github.com/tornadoweb/tornado/blob/c92b883f806d99b35af52464980722c9c9a36a13/tornado/curl_httpclient.py#L380-L383\r\n\r\nWhile `SimpleAsyncHTTPClient` writes `User-Agent` only when it's provided by the user:\r\n\r\nhttps://github.com/tornadoweb/tornado/blob/c92b883f806d99b35af52464980722c9c9a36a13/tornado/simple_httpclient.py#L393-L396\r\n\r\nCould you consider adding default User-Agent string in `SimpleAsyncHTTPClient`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2701", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2701/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2701/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2701/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2701", "id": 464031355, "node_id": "MDU6SXNzdWU0NjQwMzEzNTU=", "number": 2701, "title": "Next request is being block", "user": {"login": "losewin", "id": 14087762, "node_id": "MDQ6VXNlcjE0MDg3NzYy", "avatar_url": "https://avatars3.githubusercontent.com/u/14087762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/losewin", "html_url": "https://github.com/losewin", "followers_url": "https://api.github.com/users/losewin/followers", "following_url": "https://api.github.com/users/losewin/following{/other_user}", "gists_url": "https://api.github.com/users/losewin/gists{/gist_id}", "starred_url": "https://api.github.com/users/losewin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/losewin/subscriptions", "organizations_url": "https://api.github.com/users/losewin/orgs", "repos_url": "https://api.github.com/users/losewin/repos", "events_url": "https://api.github.com/users/losewin/events{/privacy}", "received_events_url": "https://api.github.com/users/losewin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-04T02:36:05Z", "updated_at": "2019-07-04T17:11:25Z", "closed_at": "2019-07-04T17:11:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if this issue belongs here, but right now I don't know where should I ask this question.\r\nMy question is how could I make suck calls non-blocking though I already prove that tornado server is non-blocking. But I observe something if I call `pricing` multiple times the other link request is being blocked which is calling `names`. My question is what are the ways to make the `pricing` and `name`API not being block.\r\nThe`pricing` API will response even the other calls is uncompleted. But `names` API will not be called unless all the `pricing` API is done\r\n![Screen Shot 2019-07-04 at 9 37 39 AM](https://user-images.githubusercontent.com/14087762/60635915-0aa59080-9e47-11e9-9b4e-31c73262b03d.png)\r\n\r\n```python\r\n@tornado.gen.coroutine\r\n\tdef get(self):\r\n\t\thotelId=self.get_argument('code',False)\r\n\t\ttry:\r\n\t\t\tif not hotelId:\r\n\t\t\t\traise Error('Hotel ID is not defined')\r\n\t\t\tparams=json.loads(self.get_secure_cookie(utils.helpers.languages.Cookies.SEARCH))\r\n\t\t\tresult=yield Hotel.pricing(hotelId,params)\r\n\t\t\tself.write(result)\r\n\r\n\t\texcept Error as e:\r\n\t\t\tself.write_wrong(str(e))\r\n\t\texcept Exception as e:\r\n\t\t\tprint(traceback.format_exc())\r\n\t\t\tself.write_wrong()\r\n\t\tfinally:\r\n\t\t\t# time.sleep(15)\r\n\t\t\tself.finish()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2699", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2699/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2699/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2699/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2699", "id": 463763908, "node_id": "MDU6SXNzdWU0NjM3NjM5MDg=", "number": 2699, "title": "ujkok+++", "user": {"login": "rdmontgomery", "id": 13895700, "node_id": "MDQ6VXNlcjEzODk1NzAw", "avatar_url": "https://avatars3.githubusercontent.com/u/13895700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdmontgomery", "html_url": "https://github.com/rdmontgomery", "followers_url": "https://api.github.com/users/rdmontgomery/followers", "following_url": "https://api.github.com/users/rdmontgomery/following{/other_user}", "gists_url": "https://api.github.com/users/rdmontgomery/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdmontgomery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdmontgomery/subscriptions", "organizations_url": "https://api.github.com/users/rdmontgomery/orgs", "repos_url": "https://api.github.com/users/rdmontgomery/repos", "events_url": "https://api.github.com/users/rdmontgomery/events{/privacy}", "received_events_url": "https://api.github.com/users/rdmontgomery/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-03T13:48:22Z", "updated_at": "2019-07-03T21:51:50Z", "closed_at": "2019-07-03T21:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2698", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2698/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2698/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2698/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2698", "id": 463763905, "node_id": "MDU6SXNzdWU0NjM3NjM5MDU=", "number": 2698, "title": "ujkok+", "user": {"login": "rdmontgomery", "id": 13895700, "node_id": "MDQ6VXNlcjEzODk1NzAw", "avatar_url": "https://avatars3.githubusercontent.com/u/13895700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdmontgomery", "html_url": "https://github.com/rdmontgomery", "followers_url": "https://api.github.com/users/rdmontgomery/followers", "following_url": "https://api.github.com/users/rdmontgomery/following{/other_user}", "gists_url": "https://api.github.com/users/rdmontgomery/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdmontgomery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdmontgomery/subscriptions", "organizations_url": "https://api.github.com/users/rdmontgomery/orgs", "repos_url": "https://api.github.com/users/rdmontgomery/repos", "events_url": "https://api.github.com/users/rdmontgomery/events{/privacy}", "received_events_url": "https://api.github.com/users/rdmontgomery/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-03T13:48:21Z", "updated_at": "2019-07-03T21:51:42Z", "closed_at": "2019-07-03T21:51:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2697", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2697/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2697/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2697/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2697", "id": 463156247, "node_id": "MDU6SXNzdWU0NjMxNTYyNDc=", "number": 2697, "title": "Retry on Connection Timeout Only", "user": {"login": "armona", "id": 13771747, "node_id": "MDQ6VXNlcjEzNzcxNzQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/13771747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/armona", "html_url": "https://github.com/armona", "followers_url": "https://api.github.com/users/armona/followers", "following_url": "https://api.github.com/users/armona/following{/other_user}", "gists_url": "https://api.github.com/users/armona/gists{/gist_id}", "starred_url": "https://api.github.com/users/armona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/armona/subscriptions", "organizations_url": "https://api.github.com/users/armona/orgs", "repos_url": "https://api.github.com/users/armona/repos", "events_url": "https://api.github.com/users/armona/events{/privacy}", "received_events_url": "https://api.github.com/users/armona/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-02T10:44:32Z", "updated_at": "2019-07-04T09:40:26Z", "closed_at": "2019-07-04T09:40:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI noticed that both connection timeout (fail to establish a TCP connection?) and request timeout (HTTP response sent, no response was received) both return an `HTTPError` with 599 status code.\r\n\r\nI would like to retry on connection errors in my application, is there a way to distinguish between the two?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2695", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2695/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2695/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2695/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2695", "id": 461971421, "node_id": "MDU6SXNzdWU0NjE5NzE0MjE=", "number": 2695, "title": "HTTPStreamClosedError when using old-style gen.coroutine", "user": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-28T10:36:53Z", "updated_at": "2019-10-01T13:34:42Z", "closed_at": "2019-10-01T13:34:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We are seeing reliably reproducible HTTPStreamClosedErrors with SimpleHTTPClient attempting to make a POST request as the final step of an OAuth login with GitHub. I've tracked it down to using old-style `@gen.coroutine` instead of `async def`. When using `async def` there is no error.\r\n\r\nI haven't been able to reproduce it fully self-contained, unfortunately, but [this sample application](https://gist.github.com/minrk/789830a603e21b308138a3b0cad7bb25) reproduces it if you set up a dummy GitHub OAuth application.\r\n\r\nThe failure occurs in:\r\n\r\n```python\r\n        params = dict(client_id=client_id, client_secret=client_secret, code=code)\r\n        url = url_concat(\"https://github.com/login/oauth/access_token\", params)\r\n        req = HTTPRequest(\r\n            url,\r\n            method=\"POST\",\r\n            headers={\"Accept\": \"application/json\"},\r\n            body='',  # Body is required for a POST...\r\n        )\r\n        resp = yield http_client.fetch(req)  \r\n```\r\n\r\nTraceback:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/Users/benjaminrk/dev/py/test-oauth/lib/python3.7/site-packages/tornado/web.py\", line 1699, in _execute\r\n    result = await result\r\n  File \"/Users/benjaminrk/dev/py/test-oauth/lib/python3.7/site-packages/tornado/gen.py\", line 742, in run\r\n    yielded = self.gen.throw(*exc_info)  # type: ignore\r\n  File \"test-auth.py\", line 43, in get\r\n    resp = yield http_client.fetch(req)\r\n  File \"/Users/benjaminrk/dev/py/test-oauth/lib/python3.7/site-packages/tornado/gen.py\", line 735, in run\r\n    value = future.result()\r\ntornado.simple_httpclient.HTTPStreamClosedError: Stream closed\r\n```\r\n\r\nThis is with tornado 6.0.3 and Python 3.7.2 on a mac. No error with tornado 5.1.1, or using `async def` instead of `@gen.coroutine`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tornadoweb/tornado/issues/2694", "repository_url": "https://api.github.com/repos/tornadoweb/tornado", "labels_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2694/labels{/name}", "comments_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2694/comments", "events_url": "https://api.github.com/repos/tornadoweb/tornado/issues/2694/events", "html_url": "https://github.com/tornadoweb/tornado/issues/2694", "id": 461833803, "node_id": "MDU6SXNzdWU0NjE4MzM4MDM=", "number": 2694, "title": "AttributeError in netutil.py", "user": {"login": "FrancisLF", "id": 32158940, "node_id": "MDQ6VXNlcjMyMTU4OTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/32158940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancisLF", "html_url": "https://github.com/FrancisLF", "followers_url": "https://api.github.com/users/FrancisLF/followers", "following_url": "https://api.github.com/users/FrancisLF/following{/other_user}", "gists_url": "https://api.github.com/users/FrancisLF/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancisLF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancisLF/subscriptions", "organizations_url": "https://api.github.com/users/FrancisLF/orgs", "repos_url": "https://api.github.com/users/FrancisLF/repos", "events_url": "https://api.github.com/users/FrancisLF/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancisLF/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-28T03:07:15Z", "updated_at": "2019-06-28T14:05:44Z", "closed_at": "2019-06-28T14:05:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "    from tornado.web import Application,RequestHandler,StaticFileHandler\r\n  File \"/Users/useradmin/anaconda2/lib/python2.7/site-packages/tornado/web.py\", line 88, in <module>\r\n    from tornado import iostream\r\n  File \"/Users/useradmin/anaconda2/lib/python2.7/site-packages/tornado/iostream.py\", line 40, in <module>\r\n    from tornado.netutil import ssl_wrap_socket, _client_ssl_defaults, _server_ssl_defaults\r\n  File \"/Users/useradmin/anaconda2/lib/python2.7/site-packages/tornado/netutil.py\", line 44, in <module>\r\n    _client_ssl_defaults = ssl.create_default_context(\r\nAttributeError: 'module' object has no attribute 'create_default_context'", "performed_via_github_app": null, "score": 1.0}]}