{"total_count": 79, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pypa/auditwheel/issues/254", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/254/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/254/events", "html_url": "https://github.com/pypa/auditwheel/issues/254", "id": 655492364, "node_id": "MDU6SXNzdWU2NTU0OTIzNjQ=", "number": 254, "title": "Support for excluding certain SO's from repair", "user": {"login": "minerllabs", "id": 47487483, "node_id": "MDQ6VXNlcjQ3NDg3NDgz", "avatar_url": "https://avatars1.githubusercontent.com/u/47487483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minerllabs", "html_url": "https://github.com/minerllabs", "followers_url": "https://api.github.com/users/minerllabs/followers", "following_url": "https://api.github.com/users/minerllabs/following{/other_user}", "gists_url": "https://api.github.com/users/minerllabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/minerllabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minerllabs/subscriptions", "organizations_url": "https://api.github.com/users/minerllabs/orgs", "repos_url": "https://api.github.com/users/minerllabs/repos", "events_url": "https://api.github.com/users/minerllabs/events{/privacy}", "received_events_url": "https://api.github.com/users/minerllabs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-12T22:55:51Z", "updated_at": "2020-07-12T23:04:36Z", "closed_at": "2020-07-12T23:04:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Certain SO's such as those coming from OpenGL or the JDK should be able to be excluded, is there a way to configure the whitelist?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/247", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/247/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/247/events", "html_url": "https://github.com/pypa/auditwheel/issues/247", "id": 634898574, "node_id": "MDU6SXNzdWU2MzQ4OTg1NzQ=", "number": 247, "title": "auditwheel stopped recognizing platform tags", "user": {"login": "nightlark", "id": 3969255, "node_id": "MDQ6VXNlcjM5NjkyNTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3969255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nightlark", "html_url": "https://github.com/nightlark", "followers_url": "https://api.github.com/users/nightlark/followers", "following_url": "https://api.github.com/users/nightlark/following{/other_user}", "gists_url": "https://api.github.com/users/nightlark/gists{/gist_id}", "starred_url": "https://api.github.com/users/nightlark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nightlark/subscriptions", "organizations_url": "https://api.github.com/users/nightlark/orgs", "repos_url": "https://api.github.com/users/nightlark/repos", "events_url": "https://api.github.com/users/nightlark/events{/privacy}", "received_events_url": "https://api.github.com/users/nightlark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-08T20:05:38Z", "updated_at": "2020-06-09T22:51:50Z", "closed_at": "2020-06-09T22:50:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're using the manylinux2010 docker image, and for our latest release, auditwheel stopped working.\r\n\r\ntl;dr auditwheel 3.1.1 broke recognizing platform wheels that previously worked fine.\r\n\r\nThe platform tags back then looked like helics-2.5.0-cp37-cp37m-linux_x86_64.whl and running auditwheel worked fine. Now builds are failing with this error:\r\n```\r\nINFO:auditwheel.main_repair:Repairing helics-2.5.1-cp37-cp37m-linux_x86_64.whl\r\nINFO:auditwheel.main_repair:This does not look like a platform wheel\r\n```\r\n\r\nThe exact command run is: `auditwheel repair \"$whl\" --plat manylinux2010_x86_64 -w wheelhouse/manylinux2010`\r\n\r\nI tested with some older manylinux2010 images, the last one with an auditwheel that works is `pypa/manylinux2010_x86_64:2020-04-25-bdd9229`. Everything from `pypa/manylinux2010_x86_64:2020-04-29-0e1afc5` onward has an auditwheel that doesn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/243", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/243/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/243/events", "html_url": "https://github.com/pypa/auditwheel/issues/243", "id": 623021042, "node_id": "MDU6SXNzdWU2MjMwMjEwNDI=", "number": 243, "title": "Wheels for Python2 no longer work", "user": {"login": "JorjMcKie", "id": 8290722, "node_id": "MDQ6VXNlcjgyOTA3MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8290722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JorjMcKie", "html_url": "https://github.com/JorjMcKie", "followers_url": "https://api.github.com/users/JorjMcKie/followers", "following_url": "https://api.github.com/users/JorjMcKie/following{/other_user}", "gists_url": "https://api.github.com/users/JorjMcKie/gists{/gist_id}", "starred_url": "https://api.github.com/users/JorjMcKie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JorjMcKie/subscriptions", "organizations_url": "https://api.github.com/users/JorjMcKie/orgs", "repos_url": "https://api.github.com/users/JorjMcKie/repos", "events_url": "https://api.github.com/users/JorjMcKie/events{/privacy}", "received_events_url": "https://api.github.com/users/JorjMcKie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-05-22T07:43:36Z", "updated_at": "2020-05-25T13:10:32Z", "closed_at": "2020-05-25T12:38:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since a few days, binary wheels generated for Python2.7 on Travis CI do no longer work.\r\nWhen importing, the error message ``undefined symbol: PyUnicodeUCS2_FromStringAndSize`` appears:\r\n\r\n```python\r\nPython 2.7.17 (default, Apr 15 2020, 17:20:14)\r\n[GCC 7.5.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import fitz\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/fitz/__init__.py\", line 3, in <module>\r\n    from fitz.fitz import *\r\n  File \"/usr/local/lib/python2.7/dist-packages/fitz/fitz.py\", line 18, in <module>\r\n    from . import _fitz\r\nImportError: /usr/local/lib/python2.7/dist-packages/fitz/_fitz.so: undefined symbol: PyUnicodeUCS2_FromStringAndSize\r\n>>>\r\n```\r\n\r\nThe wheel generated by auditwheel is tagged ``cp27-cp27mu-manylinux2010_x86_64``. Same happens for ``cp27-cp27m-manylinux2010_x86_64``.\r\nThe original wheel ``cp27-cp27mu-linux_x86_64`` (compiled on Ubuntu) **_does_** work.\r\n\r\nHere is a full Travis CI run log: \r\n[linux-wheel.zip](https://github.com/joerick/cibuildwheel/files/4666695/linux-wheel.zip)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/239", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/239/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/239/events", "html_url": "https://github.com/pypa/auditwheel/issues/239", "id": 615258859, "node_id": "MDU6SXNzdWU2MTUyNTg4NTk=", "number": 239, "title": "How to update policy.json for a PEP 600 perennial manylinux spec", "user": {"login": "mattip", "id": 823911, "node_id": "MDQ6VXNlcjgyMzkxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/823911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattip", "html_url": "https://github.com/mattip", "followers_url": "https://api.github.com/users/mattip/followers", "following_url": "https://api.github.com/users/mattip/following{/other_user}", "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattip/subscriptions", "organizations_url": "https://api.github.com/users/mattip/orgs", "repos_url": "https://api.github.com/users/mattip/repos", "events_url": "https://api.github.com/users/mattip/events{/privacy}", "received_events_url": "https://api.github.com/users/mattip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-09T20:59:23Z", "updated_at": "2020-06-08T04:52:25Z", "closed_at": "2020-06-08T04:52:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current specs in [policy.json](https://github.com/pypa/auditwheel/blob/8b255b5cf09365d2fd4ab770996005df05a62b63/auditwheel/policy/policy.json) relate to `GLIBC`, `CXXABI`, `GLIBCXX`, and `GCC` while [PEP 600](https://www.python.org/dev/peps/pep-0600/#package-installers) specifies only `GLIBC`. In a perennial manylinux world, what should become of the other values? What should the `lib_whitelist` be?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/234", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/234/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/234/events", "html_url": "https://github.com/pypa/auditwheel/issues/234", "id": 596892792, "node_id": "MDU6SXNzdWU1OTY4OTI3OTI=", "number": 234, "title": "Can 'auditwheel repair' be ported in any form to MacOS?", "user": {"login": "bsolomon1124", "id": 25164676, "node_id": "MDQ6VXNlcjI1MTY0Njc2", "avatar_url": "https://avatars1.githubusercontent.com/u/25164676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsolomon1124", "html_url": "https://github.com/bsolomon1124", "followers_url": "https://api.github.com/users/bsolomon1124/followers", "following_url": "https://api.github.com/users/bsolomon1124/following{/other_user}", "gists_url": "https://api.github.com/users/bsolomon1124/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsolomon1124/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsolomon1124/subscriptions", "organizations_url": "https://api.github.com/users/bsolomon1124/orgs", "repos_url": "https://api.github.com/users/bsolomon1124/repos", "events_url": "https://api.github.com/users/bsolomon1124/events{/privacy}", "received_events_url": "https://api.github.com/users/bsolomon1124/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-08T22:06:58Z", "updated_at": "2020-04-09T12:20:51Z", "closed_at": "2020-04-09T12:20:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Auditwheel enables me to bundle external shared libraries into `manylinux` wheels.  My understanding of what this means is that there is no need for a `dlopen()` call at runtime.\r\n\r\nIt looks like auditwheel only works on Linux, however.  Is there any way, even if more tedious, to do the same on MacOS?  What would that look like, at a high level?\r\n\r\nIn this case, I am trying to distribute a C++ extension module that depends on [Protobuf](https://github.com/protocolbuffers/protobuf/tree/master/src).  Even if I can successfully build a MacOS wheel, the user will still need a `brew install protobuf`, otherwise they'll get an error like:\r\n\r\n```\r\nImportError: dlopen(site-packages/xyz.cpython-38-darwin.so, 2): Library not loaded\r\n/usr/local/opt/protobuf/lib/libprotobuf.22.dylib\r\n```\r\n\r\nThis is not the case with Linux (where auditwheel does exactly what it says it does!).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/233", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/233/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/233/events", "html_url": "https://github.com/pypa/auditwheel/issues/233", "id": 593080187, "node_id": "MDU6SXNzdWU1OTMwODAxODc=", "number": 233, "title": "Repair: RPath-Contained Library not Found", "user": {"login": "ax3l", "id": 1353258, "node_id": "MDQ6VXNlcjEzNTMyNTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1353258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ax3l", "html_url": "https://github.com/ax3l", "followers_url": "https://api.github.com/users/ax3l/followers", "following_url": "https://api.github.com/users/ax3l/following{/other_user}", "gists_url": "https://api.github.com/users/ax3l/gists{/gist_id}", "starred_url": "https://api.github.com/users/ax3l/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ax3l/subscriptions", "organizations_url": "https://api.github.com/users/ax3l/orgs", "repos_url": "https://api.github.com/users/ax3l/repos", "events_url": "https://api.github.com/users/ax3l/events{/privacy}", "received_events_url": "https://api.github.com/users/ax3l/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-03T05:07:41Z", "updated_at": "2020-04-03T07:02:54Z", "closed_at": "2020-04-03T06:53:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am building a python module with a dependent shared lib via `scikit-build`, which results in an in-wheel file structure like this:\r\n```\r\n/data/lib/python3.8/site-packages/my-module-1.2.3-cp38-cp38-linux_x86_64.so\r\n/data/lib/libdependency.so\r\n```\r\n\r\nI properly set the RPATH of `my-module-1.2.3-cp38-cp38-linux_x86_64.so` to `$ORIGIN/../..`.\r\nNevertheless, `auditwheel repair` reports the already contained library as missing:\r\n```\r\n$ auditwheel repair --plat manylinux2010_x86_64 my-module-1.2.3-cp38-cp38-linux_x86_64.whl\r\nValueError: Cannot repair wheel, because required library \"libdependency.so\" could not be located\r\n```\r\n\r\nI attached an example wheel of [openPMD-api](https://github.com/openPMD/openPMD-api) that can be used to demonstrate the problem (build recipe: https://github.com/openPMD/openPMD-api/pull/585): \r\n[openPMD_api-0.12.0.dev0-cp38-cp38-linux_x86_64.whl.zip](https://github.com/pypa/auditwheel/files/4425129/openPMD_api-0.12.0.dev0-cp38-cp38-linux_x86_64.whl.zip)\r\n\r\nIn order to fix this issue, I could imagine that [somewhere around here in `get_wheel_elfdata`](https://github.com/pypa/auditwheel/blob/3.1.0/auditwheel/wheel_abi.py#L94-L101) we should filter the `needed_libs` for libs found in the RPATH (and runpath?).\r\n\r\nRef.: https://github.com/scikit-build/scikit-build/issues/69#issuecomment-608192121", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/232", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/232/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/232/events", "html_url": "https://github.com/pypa/auditwheel/issues/232", "id": 590422222, "node_id": "MDU6SXNzdWU1OTA0MjIyMjI=", "number": 232, "title": "RPATH not properly set when using -L option", "user": {"login": "niess", "id": 11327514, "node_id": "MDQ6VXNlcjExMzI3NTE0", "avatar_url": "https://avatars1.githubusercontent.com/u/11327514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niess", "html_url": "https://github.com/niess", "followers_url": "https://api.github.com/users/niess/followers", "following_url": "https://api.github.com/users/niess/following{/other_user}", "gists_url": "https://api.github.com/users/niess/gists{/gist_id}", "starred_url": "https://api.github.com/users/niess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niess/subscriptions", "organizations_url": "https://api.github.com/users/niess/orgs", "repos_url": "https://api.github.com/users/niess/repos", "events_url": "https://api.github.com/users/niess/events{/privacy}", "received_events_url": "https://api.github.com/users/niess/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-30T16:23:45Z", "updated_at": "2020-03-30T18:55:23Z", "closed_at": "2020-03-30T18:55:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nthank your for this great tool :)\r\n\r\nThis issue is related to #90 I guess. With the latest release when using `using auditwheel -L libs` the libs are indeed put under `libs` yet the RPATH of binaries are set to `${WHEELNAME}libs`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/229", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/229/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/229/events", "html_url": "https://github.com/pypa/auditwheel/issues/229", "id": 567034131, "node_id": "MDU6SXNzdWU1NjcwMzQxMzE=", "number": 229, "title": "Possible bug in symbol version lookup? \"GLIBC_PRIVATE\"", "user": {"login": "dralley", "id": 2751996, "node_id": "MDQ6VXNlcjI3NTE5OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2751996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dralley", "html_url": "https://github.com/dralley", "followers_url": "https://api.github.com/users/dralley/followers", "following_url": "https://api.github.com/users/dralley/following{/other_user}", "gists_url": "https://api.github.com/users/dralley/gists{/gist_id}", "starred_url": "https://api.github.com/users/dralley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dralley/subscriptions", "organizations_url": "https://api.github.com/users/dralley/orgs", "repos_url": "https://api.github.com/users/dralley/repos", "events_url": "https://api.github.com/users/dralley/events{/privacy}", "received_events_url": "https://api.github.com/users/dralley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-02-18T17:05:52Z", "updated_at": "2020-02-24T18:43:15Z", "closed_at": "2020-02-24T18:43:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Filing this after a discussion with @njsmith on the wheel-builders mailing list.\r\n\r\nI'm trying to build a manylinux2014-based Python wheel for the \"createrepo_c\" library.  It compiles properly in the docker container (and every other platform I've tried) but \"auditwheel repair\" always fails.\r\n\r\nHere is the output from auditwheel repair and auditwheel show:\r\n\r\n```\r\n+ auditwheel show wheelhouse/createrepo_c-0.15.7-cp35-cp35m-linux_x86_64.whl\r\n\r\ncreaterepo_c-0.15.7-cp35-cp35m-linux_x86_64.whl is consistent with the\r\nfollowing platform tag: \"linux_x86_64\".\r\n\r\nThe wheel references external versioned symbols in these system-\r\nprovided shared libraries: libz.so.1 with versions {'ZLIB_1.2.3.5',\r\n'ZLIB_1.2.3.3', 'ZLIB_1.2.2.3'}, liblzma.so.5 with versions\r\n{'XZ_5.1.2alpha', 'XZ_5.0'}, libxml2.so.2 with versions\r\n{'LIBXML2_2.4.30'}, libcrypto.so.10 with versions {'libcrypto.so.10',\r\n'OPENSSL_1.0.1_EC'}, libc.so.6 with versions {'GLIBC_2.4',\r\n'GLIBC_2.15', 'GLIBC_2.3.3', 'GLIBC_2.8', 'GLIBC_PRIVATE',\r\n'GLIBC_2.7', 'GLIBC_2.14', 'GLIBC_2.3', 'GLIBC_2.2.5', 'GLIBC_2.16',\r\n'GLIBC_2.3.2', 'GLIBC_2.17', 'GLIBC_2.3.4', 'GLIBC_2.11',\r\n'GLIBC_2.12'}, libpthread.so.0 with versions {'GLIBC_2.3.3',\r\n'GLIBC_2.2.5', 'GLIBC_2.3.2'}, libdl.so.2 with versions\r\n{'GLIBC_2.2.5'}, libgssapi_krb5.so.2 with versions\r\n{'gssapi_krb5_2_MIT'}, libidn.so.11 with versions {'LIBIDN_1.0'},\r\nlibnss3.so with versions {'NSS_3.5', 'NSS_3.21', 'NSS_3.11.2',\r\n'NSS_3.6', 'NSS_3.13', 'NSS_3.34', 'NSS_3.22', 'NSS_3.11.1',\r\n'NSS_3.10', 'NSS_3.12', 'NSS_3.12.5', 'NSS_3.12.6', 'NSS_3.3.1',\r\n'NSS_3.14.3', 'NSS_3.2', 'NSS_3.14', 'NSS_3.11', 'NSS_3.8',\r\n'NSS_3.9.3', 'NSS_3.7', 'NSS_3.4', 'NSS_3.15', 'NSS_3.9',\r\n'NSS_3.12.1', 'NSS_3.19.1', 'NSS_3.3', 'NSS_3.9.2'}, libssl3.so with\r\nversions {'NSS_3.2', 'NSS_3.11.4', 'NSS_3.4', 'NSS_3.14'},\r\nlibk5crypto.so.3 with versions {'k5crypto_3_MIT'}, libkrb5.so.3 with\r\nversions {'krb5_3_MIT'}, librt.so.1 with versions {'GLIBC_2.2.5'},\r\nlibnssutil3.so with versions {'NSSUTIL_3.31', 'NSSUTIL_3.21',\r\n'NSSUTIL_3.15', 'NSSUTIL_3.13', 'NSSUTIL_3.14', 'NSSUTIL_3.12.3',\r\n'NSSUTIL_3.17.1', 'NSSUTIL_3.24', 'NSSUTIL_3.38', 'NSSUTIL_3.12',\r\n'NSSUTIL_3.12.5', 'NSSUTIL_3.39'}, libm.so.6 with versions\r\n{'GLIBC_2.2.5'}, libfreebl3.so with versions {'NSSRAWHASH_3.12.3'},\r\nlibresolv.so.2 with versions {'GLIBC_2.2.5'}, libkrb5support.so.0 with\r\nversions {'krb5support_0_MIT'}, libkeyutils.so.1 with versions\r\n{'KEYUTILS_0.3', 'KEYUTILS_1.0', 'KEYUTILS_1.5'}, libacl.so.1 with\r\nversions {'ACL_1.0'}, libpopt.so.0 with versions {'LIBPOPT_0'},\r\nlibgcc_s.so.1 with versions {'GCC_3.3.1', 'GCC_3.0'}, libssl.so.10\r\nwith versions {'libssl.so.10'}, libattr.so.1 with versions\r\n{'ATTR_1.0'}, libelf.so.1 with versions {'ELFUTILS_1.0'}\r\n\r\nThis constrains the platform tag to \"linux_x86_64\". In order to\r\nachieve a more compatible tag, you would need to recompile a new wheel\r\nfrom source on a system with earlier versions of these libraries, such\r\nas a recent manylinux image.\r\n+ auditwheel repair wheelhouse/createrepo_c-0.15.7-cp35-cp35m-linux_x86_64.whl --plat manylinux2014_x86_64 -w /io/wheelhouse/\r\nINFO:auditwheel.main_repair:Repairing createrepo_c-0.15.7-cp35-cp35m-linux_x86_64.whl\r\nusage: auditwheel [-h] [-V] [-v] command ...\r\nauditwheel: error: cannot repair \"wheelhouse/createrepo_c-0.15.7-cp35-cp35m-linux_x86_64.whl\" to \"manylinux2014_x86_64\" ABI because of the presence of too-recent versioned symbols. You'll need to compile the wheel on an older toolchain.\r\n(.env) [vagrant@pulp3-source-fedora31 createrepo_c]$\r\n```\r\n\r\nI went through all of those symbols and compared them against the symbol version whitelist [here](https://github.com/pypa/auditwheel/blob/8b255b5cf09365d2fd4ab770996005df05a62b63/auditwheel/policy/policy.json)\r\n\r\nAll of the versions of GCC and Glib that are listed exist in the whitelist, except for one which is rather strange.\r\n\r\n> libc.so.6 with versions { ..<snip>..,  'GLIBC_PRIVATE', ..<snip>..},\r\n\r\nIs this a bug?  I don't know what ```GLIBC_PRIVATE``` is, but it doesn't match the general pattern, and I don't think this library is depending on any private glibc interfaces or anything like that. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/228", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/228/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/228/events", "html_url": "https://github.com/pypa/auditwheel/issues/228", "id": 561236780, "node_id": "MDU6SXNzdWU1NjEyMzY3ODA=", "number": 228, "title": "CI for s390x is failing", "user": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-06T19:59:00Z", "updated_at": "2020-02-09T01:18:07Z", "closed_at": "2020-02-09T01:18:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Seems due to https://github.com/docker/docker-py/issues/2503 as a result of low disk space, also reported here: https://travis-ci.community/t/no-space-left-on-device-for-system-z/5954/9", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/227", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/227/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/227/events", "html_url": "https://github.com/pypa/auditwheel/issues/227", "id": 560279672, "node_id": "MDU6SXNzdWU1NjAyNzk2NzI=", "number": 227, "title": "auditwheel repair --tag manylinux2010 creates shared libraries that can't be loaded. ldd/dlopen segfaults!", "user": {"login": "atilag", "id": 1304071, "node_id": "MDQ6VXNlcjEzMDQwNzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1304071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atilag", "html_url": "https://github.com/atilag", "followers_url": "https://api.github.com/users/atilag/followers", "following_url": "https://api.github.com/users/atilag/following{/other_user}", "gists_url": "https://api.github.com/users/atilag/gists{/gist_id}", "starred_url": "https://api.github.com/users/atilag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atilag/subscriptions", "organizations_url": "https://api.github.com/users/atilag/orgs", "repos_url": "https://api.github.com/users/atilag/repos", "events_url": "https://api.github.com/users/atilag/events{/privacy}", "received_events_url": "https://api.github.com/users/atilag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-05T10:32:34Z", "updated_at": "2020-02-05T21:40:21Z", "closed_at": "2020-02-05T21:21:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "The process of creating the manylinux2010 wheel package seems to be  working correctly, but when I install the wheel and try to run the extension, it segfaults while the linker tries to load dynamically:\r\n```\r\nThread 1 \"python\" received signal SIGSEGV, Segmentation fault.\r\n0x00007ffff7dec008 in _dl_check_map_versions () from /lib64/ld-linux-x86-64.so.2\r\n(gdb) bt\r\n#0  0x00007ffff7dec008 in _dl_check_map_versions () from /lib64/ld-linux-x86-64.so.2\r\n#1  0x00007ffff7def5b1 in dl_open_worker () from /lib64/ld-linux-x86-64.so.2\r\n#2  0x00007ffff7dea7a4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2\r\n#3  0x00007ffff7deeb5b in _dl_open () from /lib64/ld-linux-x86-64.so.2\r\n#4  0x00007ffff75edfab in dlopen_doit () from /lib64/libdl.so.2\r\n#5  0x00007ffff7dea7a4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2\r\n#6  0x00007ffff75ee5ad in _dlerror_run () from /lib64/libdl.so.2\r\n#7  0x00007ffff75ee041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2\r\n#8  0x000055555574e1ad in _PyImport_FindSharedFuncptr () at /tmp/build/80754af9/python_1578510683607/work/Python/dynload_shlib.c:96\r\n```\r\nIf I try to see which libraries are dynamically linked with the python extension or the external libraries patched by auditwheel (patchelf) with `ldd`, it crashes as well:\r\n```\r\n(test) [atilag@aergpu backends]$ ldd controller_wrappers.cpython-37m-x86_64-linux-gnu.so\r\n/usr/bin/ldd: l\u00ednea 116: 27276 Violaci\u00f3n de segmento  LD_TRACE_LOADED_OBJECTS=1 LD_WARN= LD_BIND_NOW= LD_LIBRARY_VERSION=$verify_out LD_VERBOSE= \"$@\"\r\n```\r\nThis is info `readelf -d` dumps:\r\n```\r\nDynamic section at offset 0x2eb2268 contains 34 entries:\r\n  Marca      Tipo                         Nombre/Valor\r\n 0x000000000000000f (RPATH)              Rpath de la biblioteca: [$ORIGIN/../../../../qiskit_aer.libs]\r\n 0x0000000000000001 (NEEDED)             Biblioteca compartida: [libpthread.so.0]\r\n 0x0000000000000001 (NEEDED)             Biblioteca compartida: [libdl.so.2]\r\n 0x0000000000000001 (NEEDED)             Biblioteca compartida: [librt.so.1]\r\n 0x0000000000000001 (NEEDED)             Biblioteca compartida: [libopenblas-r0-da994f36.3.3.so]\r\n 0x0000000000000001 (NEEDED)             Biblioteca compartida: [libstdc++.so.6]\r\n 0x0000000000000001 (NEEDED)             Biblioteca compartida: [libm.so.6]\r\n 0x0000000000000001 (NEEDED)             Biblioteca compartida: [libgomp-f7e03b3e.so.1.0.0]\r\n 0x0000000000000001 (NEEDED)             Biblioteca compartida: [libgcc_s.so.1]\r\n 0x0000000000000001 (NEEDED)             Biblioteca compartida: [libc.so.6]\r\n 0x0000000000000001 (NEEDED)             Biblioteca compartida: [ld-linux-x86-64.so.2]\r\n 0x000000000000000c (INIT)               0x970e0\r\n 0x000000000000000d (FINI)               0x295d8c\r\n 0x0000000000000019 (INIT_ARRAY)         0x2f2d620\r\n 0x000000000000001b (INIT_ARRAYSZ)       184 (bytes)\r\n 0x000000000000001a (FINI_ARRAY)         0x2f2d6d8\r\n 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes)\r\n 0x000000006ffffef5 (GNU_HASH)           0x228\r\n 0x0000000000000005 (STRTAB)             0x2ff24c8\r\n 0x0000000000000006 (SYMTAB)             0x6998\r\n 0x000000000000000a (STRSZ)              370297 (bytes)\r\n 0x000000000000000b (SYMENT)             24 (bytes)\r\n 0x0000000000000003 (PLTGOT)             0x2f35000\r\n 0x0000000000000002 (PLTRELSZ)           48000 (bytes)\r\n 0x0000000000000014 (PLTREL)             RELA\r\n 0x0000000000000017 (JMPREL)             0x8b560\r\n 0x0000000000000007 (RELA)               0x7a9b8\r\n 0x0000000000000008 (RELASZ)             68520 (bytes)\r\n 0x0000000000000009 (RELAENT)            24 (bytes)\r\n 0x000000006ffffffe (VERNEED)            0x7a7c8\r\n 0x000000006fffffff (VERNEEDNUM)         9\r\n 0x000000006ffffff0 (VERSYM)             0x78864\r\n 0x000000006ffffff9 (RELACOUNT)          661\r\n 0x0000000000000000 (NULL)               0x0\r\n```\r\nPaths and names seems to be correct.\r\nI've noticed that there's no `SONAME` in the python extension library  but there is a `SONAME` in the patched external libraries, not quite sure this is expected though.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/219", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/219/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/219/events", "html_url": "https://github.com/pypa/auditwheel/issues/219", "id": 553353503, "node_id": "MDU6SXNzdWU1NTMzNTM1MDM=", "number": 219, "title": "Repaired wheels with py3-none wheel tag cannot be installed with pip 20", "user": {"login": "lkollar", "id": 791741, "node_id": "MDQ6VXNlcjc5MTc0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/791741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkollar", "html_url": "https://github.com/lkollar", "followers_url": "https://api.github.com/users/lkollar/followers", "following_url": "https://api.github.com/users/lkollar/following{/other_user}", "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions", "organizations_url": "https://api.github.com/users/lkollar/orgs", "repos_url": "https://api.github.com/users/lkollar/repos", "events_url": "https://api.github.com/users/lkollar/events{/privacy}", "received_events_url": "https://api.github.com/users/lkollar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "lkollar", "id": 791741, "node_id": "MDQ6VXNlcjc5MTc0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/791741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkollar", "html_url": "https://github.com/lkollar", "followers_url": "https://api.github.com/users/lkollar/followers", "following_url": "https://api.github.com/users/lkollar/following{/other_user}", "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions", "organizations_url": "https://api.github.com/users/lkollar/orgs", "repos_url": "https://api.github.com/users/lkollar/repos", "events_url": "https://api.github.com/users/lkollar/events{/privacy}", "received_events_url": "https://api.github.com/users/lkollar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lkollar", "id": 791741, "node_id": "MDQ6VXNlcjc5MTc0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/791741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkollar", "html_url": "https://github.com/lkollar", "followers_url": "https://api.github.com/users/lkollar/followers", "following_url": "https://api.github.com/users/lkollar/following{/other_user}", "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions", "organizations_url": "https://api.github.com/users/lkollar/orgs", "repos_url": "https://api.github.com/users/lkollar/repos", "events_url": "https://api.github.com/users/lkollar/events{/privacy}", "received_events_url": "https://api.github.com/users/lkollar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-01-22T07:15:10Z", "updated_at": "2020-01-28T23:16:42Z", "closed_at": "2020-01-28T23:16:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Version 20 of `pip` does not consider the wheel tags `py3-none-manylinux1_x86_64` installable. `auditwheel repair` creates such wheels when the input tags are `py3-none-manylinux*`. \r\n\r\nThis change in `pip` causes the `test_build_wheel_with_binary_executable` test to fail:\r\n\r\n```\r\nINFO     test_manylinux:test_manylinux.py:107 docker exec febbfca47ce7: 'auditwheel repair --plat manylinux1_x86_64 -w /io /io/testpackage-0.0.1-py3-none-an\r\ny.whl'\r\nINFO     test_manylinux:test_manylinux.py:107 docker exec febbfca47ce7: 'auditwheel show /io/testpackage-0.0.1-py3-none-manylinux1_x86_64.whl'\r\nINFO     test_manylinux:test_manylinux.py:107 docker exec 2b7fde869770: 'pip install /io/testpackage-0.0.1-py3-none-manylinux1_x86_64.whl'\r\nERROR: testpackage-0.0.1-py3-none-manylinux1_x86_64.whl is not a supported wheel on this platform.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/218", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/218/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/218/events", "html_url": "https://github.com/pypa/auditwheel/issues/218", "id": 552838437, "node_id": "MDU6SXNzdWU1NTI4Mzg0Mzc=", "number": 218, "title": "Auditwheel addtag returns stack trace when given a none-any wheel", "user": {"login": "jvanstraten", "id": 6670622, "node_id": "MDQ6VXNlcjY2NzA2MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6670622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvanstraten", "html_url": "https://github.com/jvanstraten", "followers_url": "https://api.github.com/users/jvanstraten/followers", "following_url": "https://api.github.com/users/jvanstraten/following{/other_user}", "gists_url": "https://api.github.com/users/jvanstraten/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvanstraten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvanstraten/subscriptions", "organizations_url": "https://api.github.com/users/jvanstraten/orgs", "repos_url": "https://api.github.com/users/jvanstraten/repos", "events_url": "https://api.github.com/users/jvanstraten/events{/privacy}", "received_events_url": "https://api.github.com/users/jvanstraten/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-21T12:11:55Z", "updated_at": "2020-02-27T18:06:03Z", "closed_at": "2020-02-27T18:06:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce:\r\n\r\n```text\r\n# Download any none-any wheel (just chose one randomly here)\r\n$ curl -L https://files.pythonhosted.org/packages/a7/1e/2d18651bb48933b6089833df8d1e44182b2899784e26072f94860440ae8c/plumbum-1.6.8-py2.py3-none-any.whl > plumbum-1.6.8-py2.py3-none-any.whl\r\n# Run auditwheel, receive stack trace\r\n$ auditwheel addtag plumbum-1.6.8-py2.py3-none-any.whl\r\nINFO:auditwheel.main_addtag:plumbum-1.6.8-py2.py3-none-any.whl receives the following tag: \"manylinux1_x86_64\".\r\nINFO:auditwheel.main_addtag:Use ``auditwheel show`` for more details\r\nINFO:auditwheel.wheeltools:Previous filename tags: any\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/auditwheel\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/opt/_internal/cpython-3.7.5/lib/python3.7/site-packages/auditwheel/main.py\", line 50, in main\r\n    rval = args.func(args, p)\r\n  File \"/opt/_internal/cpython-3.7.5/lib/python3.7/site-packages/auditwheel/main_addtag.py\", line 48, in execute\r\n    out_wheel = add_platforms(ctx, [wheel_abi.overall_tag])\r\n  File \"/opt/_internal/cpython-3.7.5/lib/python3.7/site-packages/auditwheel/wheeltools.py\", line 215, in add_platforms\r\n    remove_platforms.append('any')\r\nAttributeError: 'tuple' object has no attribute 'append'\r\n```\r\n\r\n[The offending line](https://github.com/pypa/auditwheel/blame/d5cd0f670eecf9a94be67911e18d3c2dea8ffc55/auditwheel/wheeltools.py#L215) calls `append()` on something that, according to the function's docs, can be any iterable, and by default is `()`. That obviously doesn't work. I fixed this locally by adding the obvious\r\n\r\n```python\r\nremove_platforms = list(remove_platforms)\r\n```\r\n\r\nwhich seems to work, but honestly I don't know much about how wheels work internally, so I'm not sure what I'm doing. That's why we're using manylinux/auditwheel, after all. I do understand that running auditwheel on a none-any wheel is not usually a sane thing to do in the first place, but at the very least I wouldn't expect a stack trace.\r\n\r\nThis was run on the manylinux 2010 container with Python 3.6, but I'm fairly certain it doesn't matter. According to the blame that code has been there for a while.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/217", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/217/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/217/events", "html_url": "https://github.com/pypa/auditwheel/issues/217", "id": 551098571, "node_id": "MDU6SXNzdWU1NTEwOTg1NzE=", "number": 217, "title": "Auditwheel for manylinux2014 struggles with libcrypto / libssl", "user": {"login": "hroest", "id": 464014, "node_id": "MDQ6VXNlcjQ2NDAxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/464014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroest", "html_url": "https://github.com/hroest", "followers_url": "https://api.github.com/users/hroest/followers", "following_url": "https://api.github.com/users/hroest/following{/other_user}", "gists_url": "https://api.github.com/users/hroest/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroest/subscriptions", "organizations_url": "https://api.github.com/users/hroest/orgs", "repos_url": "https://api.github.com/users/hroest/repos", "events_url": "https://api.github.com/users/hroest/events{/privacy}", "received_events_url": "https://api.github.com/users/hroest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-16T22:44:09Z", "updated_at": "2020-05-08T11:29:40Z", "closed_at": "2020-05-08T11:29:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are building a C++ extension using the manylinux2014 container and we are running into some problems when using `auditwheel repair`. Currently we are using\r\n\r\n```\r\n# auditwheel --version\r\nauditwheel 3.0.0 installed at /opt/_internal/cpython-3.7.6/lib/python3.7/site-\r\npackages (python 3.7)\r\n```\r\n\r\nThe error we get is the following\r\n\r\n\r\n```\r\n$ pip install pyopenms-2.4.0-cp38-cp38-manylinux2014_x86_64.whl \r\nProcessing ./pyopenms-2.4.0-cp38-cp38-manylinux2014_x86_64.whl\r\nRequirement already satisfied: numpy in /media/doc/pyenv/py38_bleeding/lib/python3.8/site-packages (from pyopenms==2.4.0) (1.18.1)\r\nInstalling collected packages: pyopenms\r\nSuccessfully installed pyopenms-2.4.0\r\n$ python -c \"import pyopenms\"\r\n[...]\r\nImportError: /media/doc/pyenv/py38_bleeding/lib/python3.8/site-packages/pyopenms/.libs/libcrypto-957ef781.so.1.0.2k: version `libcrypto.so.10' not found (required by /media/doc/pyenv/py38_bleeding/lib/python3.8/site-packages/pyopenms/.libs/libQt5Network-98a68770.so.5.9.7)\r\n```\r\n\r\nso basically: ImportError: /media/doc/pyenv/py38_bleeding/lib/python3.8/site-packages/pyopenms/.libs/libcrypto-957ef781.so.1.0.2k: version `libcrypto.so.10' not found (required by /media/doc/pyenv/py38_bleeding/lib/python3.8/site-packages/pyopenms/.libs/libQt5Network-98a68770.so.5.9.7)\r\n\r\nthe dependency comes from `libQt5Network` which requires these libraries\r\n\r\n```\r\n[root@44961218c8af fix]# ldd /lib64/libQt5Network.so.5 | grep crypto\r\n        libcrypto.so.10 => /lib64/libcrypto.so.10 (0x00007f66dfe89000)\r\n        libk5crypto.so.3 => /lib64/libk5crypto.so.3 (0x00007f66dc02b000)\r\n```\r\n\r\nI am not sure about this but what I noticed is that the SONAME is different in the file that is packaged by audithweel:\r\n\r\n```\r\n# objdump -p /lib64/libcrypto.so.10 | grep SONAME\r\n  SONAME               libcrypto.so.10\r\n# objdump -p /lib64/libcrypto.so.1.0.2k | grep SONAME\r\n  SONAME               libcrypto.so.10\r\n# objdump -p pyopenms/.libs/libcrypto-957ef781.so.1.0.2k | grep SONAME\r\n  SONAME               libcrypto-957ef781.so.1.0.2k\r\n# ls -tlrh /lib64/libcrypto.so.10\r\nlrwxrwxrwx 1 root root 19 Oct  1 01:15 /lib64/libcrypto.so.10 -> libcrypto.so.1.0.2k\r\n```\r\n\r\nNote that `/lib64/libcrypto.so.10` is a symlink to `libcrypto.so.1.0.2k` which seems to be the version that is packaged by auditwheel. \r\n\r\nI dont have a great understanding of what is going on here, but is it possible that `libQt5Network` is looking for `libcrypto` with version 10 (eg `libcrypto.so.10`) while this cannot be found anywhere in the Python package since the name and SONAME are different? \r\n\r\nAlso, the same thing seems to be happening for libssl.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/214", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/214/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/214/events", "html_url": "https://github.com/pypa/auditwheel/issues/214", "id": 545233517, "node_id": "MDU6SXNzdWU1NDUyMzM1MTc=", "number": 214, "title": "manylinux auditwheel installation errors", "user": {"login": "Longbowman", "id": 4450907, "node_id": "MDQ6VXNlcjQ0NTA5MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4450907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Longbowman", "html_url": "https://github.com/Longbowman", "followers_url": "https://api.github.com/users/Longbowman/followers", "following_url": "https://api.github.com/users/Longbowman/following{/other_user}", "gists_url": "https://api.github.com/users/Longbowman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Longbowman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Longbowman/subscriptions", "organizations_url": "https://api.github.com/users/Longbowman/orgs", "repos_url": "https://api.github.com/users/Longbowman/repos", "events_url": "https://api.github.com/users/Longbowman/events{/privacy}", "received_events_url": "https://api.github.com/users/Longbowman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-04T03:10:05Z", "updated_at": "2020-01-05T11:32:05Z", "closed_at": "2020-01-05T11:32:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanted to build auditwheel and run a command \r\n`auditwheel repair dist/*.whl`\r\nI get this two kind of errors on multiple versions of auditwheel installation\r\n`ImportError: cannot import name 'open_for_csv' from 'wheel.util' (/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7`\r\nand \r\n`auditwheel: error: cannot find the 'patchelf' tool, which is required`\r\nI've tried almost every version of auditwheel installation. could you help correct way to install? \r\n\r\n-------------\r\nOS: Ubuntu 18.04 \r\nPython: 3.6/3.7\r\ninstallation commands: \r\n```\r\npython -m pip install --upgrade pip\r\npip install numpy cython mdtraj\r\npip install cffi setuptools wheel twine auditwheel\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/212", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/212/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/212/events", "html_url": "https://github.com/pypa/auditwheel/issues/212", "id": 537247079, "node_id": "MDU6SXNzdWU1MzcyNDcwNzk=", "number": 212, "title": "auditwheel repair marked internal so files as shared library dependencies", "user": {"login": "wdirons", "id": 22967383, "node_id": "MDQ6VXNlcjIyOTY3Mzgz", "avatar_url": "https://avatars3.githubusercontent.com/u/22967383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wdirons", "html_url": "https://github.com/wdirons", "followers_url": "https://api.github.com/users/wdirons/followers", "following_url": "https://api.github.com/users/wdirons/following{/other_user}", "gists_url": "https://api.github.com/users/wdirons/gists{/gist_id}", "starred_url": "https://api.github.com/users/wdirons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wdirons/subscriptions", "organizations_url": "https://api.github.com/users/wdirons/orgs", "repos_url": "https://api.github.com/users/wdirons/repos", "events_url": "https://api.github.com/users/wdirons/events{/privacy}", "received_events_url": "https://api.github.com/users/wdirons/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-12-12T22:27:12Z", "updated_at": "2020-04-20T22:18:58Z", "closed_at": "2020-04-20T22:18:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks to everyone that worked on adding manylinux 2014 support to auditwheel.\r\n\r\nI'm trying to get build a manylinux 2014 whl file of TensorFlow for ppc64le, using the docker image `quay.io/pypa/manylinux2014_ppc64le`\r\n\r\nThis image contains auditwheel 3.0.0.0rc1\r\n\r\nauditwheel show says I'm close to being compliant, I just have one external dependency to resolve:\r\n\r\n```\r\n# auditwheel show tf_nightly-2.1.0.dev20191210-cp36-cp36m-linux_ppc64le.whl\r\n\r\ntf_nightly-2.1.0.dev20191210-cp36-cp36m-linux_ppc64le.whl is\r\nconsistent with the following platform tag: \"linux_ppc64le\".\r\n\r\nThe wheel references external versioned symbols in these system-\r\nprovided shared libraries: libc.so.6 with versions {'GLIBC_2.17'},\r\nlibpthread.so.0 with versions {'GLIBC_2.17'}, libgcc_s.so.1 with\r\nversions {'GCC_4.2.0', 'GCC_3.0', 'GCC_3.3', 'GLIBC_2.0'}, libm.so.6\r\nwith versions {'GLIBC_2.17'}, ld64.so.2 with versions {'GLIBC_2.17'},\r\nlibdl.so.2 with versions {'GLIBC_2.17'}, librt.so.1 with versions\r\n{'GLIBC_2.17'}, _pywrap_tensorflow_internal.so with versions\r\n{'tensorflow'}\r\n\r\nThe following external shared libraries are required by the wheel:\r\n{\r\n    \"ld64.so.2\": \"/lib64/ld-2.17.so\",\r\n    \"libc.so.6\": \"/lib64/libc-2.17.so\",\r\n    \"libdl.so.2\": \"/lib64/libdl-2.17.so\",\r\n    \"libgcc_s.so.1\": \"/lib64/libgcc_s-4.8.5-20150702.so.1\",\r\n    \"libm.so.6\": \"/lib64/libm-2.17.so\",\r\n    \"libpthread.so.0\": \"/lib64/libpthread-2.17.so\",\r\n    \"librt.so.1\": \"/lib64/librt-2.17.so\"\r\n}\r\n\r\nIn order to achieve the tag platform tag \"manylinux2014_ppc64le\" the\r\nfollowing shared library dependencies will need to be eliminated:\r\n\r\nld64.so.2\r\n```\r\n\r\nauditwheel repair appears to resolve the issue:\r\n```\r\n# auditwheel repair tf_nightly-2.1.0.dev20191210-cp36-cp36m-linux_ppc64le.whl\r\nINFO:auditwheel.main_repair:Repairing tf_nightly-2.1.0.dev20191210-cp36-cp36m-linux_ppc64le.whl\r\nINFO:auditwheel.wheeltools:Previous filename tags: linux_ppc64le\r\nINFO:auditwheel.wheeltools:New filename tags: manylinux2014_ppc64le\r\nINFO:auditwheel.wheeltools:Previous WHEEL info tags: cp36-cp36m-linux_ppc64le\r\nINFO:auditwheel.wheeltools:New WHEEL info tags: cp36-cp36m-manylinux2014_ppc64le\r\nINFO:auditwheel.main_repair:\r\nFixed-up wheel written to /root/tensorflow/tensorflow_pkg/wheelhouse/tf_nightly-2.1.0.dev20191210-cp36-cp36m-manylinux2014_ppc64le.whl\r\n```\r\n\r\nHowever when I run auditwheel show on the generated file, it list two internal so files as library dependencies:\r\n\r\n```\r\n# auditwheel show wheelhouse/tf_nightly-2.1.0.dev20191210-cp36-cp36m-manylinux2014_ppc64le.whl\r\n\r\ntf_nightly-2.1.0.dev20191210-cp36-cp36m-manylinux2014_ppc64le.whl is\r\nconsistent with the following platform tag: \"linux_ppc64le\".\r\n\r\nThe wheel references external versioned symbols in these system-\r\nprovided shared libraries: libc.so.6 with versions {'GLIBC_2.17'},\r\nlibpthread.so.0 with versions {'GLIBC_2.17'}, libgcc_s.so.1 with\r\nversions {'GCC_4.2.0', 'GLIBC_2.0', 'GCC_3.0', 'GCC_3.3'}, libm.so.6\r\nwith versions {'GLIBC_2.17'}, ld64.so.2 with versions {'GLIBC_2.17'},\r\nlibdl.so.2 with versions {'GLIBC_2.17'}, ld-2-cc40d7b0.17.so with\r\nversions {'GLIBC_2.17'}, librt.so.1 with versions {'GLIBC_2.17'},\r\n_pywrap_tensorflow_internal.so with versions {'tensorflow'}\r\n\r\nThe following external shared libraries are required by the wheel:\r\n{\r\n    \"_pywrap_tensorflow_internal.so\": null,\r\n    \"ld64.so.2\": \"/lib64/ld-2.17.so\",\r\n    \"libc.so.6\": \"/lib64/libc-2.17.so\",\r\n    \"libdl.so.2\": \"/lib64/libdl-2.17.so\",\r\n    \"libgcc_s.so.1\": \"/lib64/libgcc_s-4.8.5-20150702.so.1\",\r\n    \"libm.so.6\": \"/lib64/libm-2.17.so\",\r\n    \"libpthread.so.0\": \"/lib64/libpthread-2.17.so\",\r\n    \"librt.so.1\": \"/lib64/librt-2.17.so\",\r\n    \"libtensorflow_framework.so.2\": null\r\n}\r\n\r\nIn order to achieve the tag platform tag \"manylinux2014_ppc64le\" the\r\nfollowing shared library dependencies will need to be eliminated:\r\n\r\n_pywrap_tensorflow_internal.so, libtensorflow_framework.so.2\r\n```\r\n\r\nAny idea what might be wrong in this case? Thank you\r\n\r\ngist with debug (-vv) enabled:\r\n\r\nauditwheel show of original wheel: https://gist.github.com/wdirons/2ee22c009890e3436caf1c982ab5e81d\r\nauditwheel repair: https://gist.github.com/wdirons/550039b96f9fe8ddbccea5cbec228c3f\r\nauditwheel show of repaired wheel: https://gist.github.com/wdirons/7bb37290e722ede677cd13a8bac0b6a1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/206", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/206/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/206/events", "html_url": "https://github.com/pypa/auditwheel/issues/206", "id": 518408541, "node_id": "MDU6SXNzdWU1MTg0MDg1NDE=", "number": 206, "title": "ImportError: cannot import name 'open_for_csv' from 'wheel.util' (/opt/_internal/cpython-3.7.5/lib/python3.7/site-packages/wheel/util.py)", "user": {"login": "mgedmin", "id": 159967, "node_id": "MDQ6VXNlcjE1OTk2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/159967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgedmin", "html_url": "https://github.com/mgedmin", "followers_url": "https://api.github.com/users/mgedmin/followers", "following_url": "https://api.github.com/users/mgedmin/following{/other_user}", "gists_url": "https://api.github.com/users/mgedmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgedmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgedmin/subscriptions", "organizations_url": "https://api.github.com/users/mgedmin/orgs", "repos_url": "https://api.github.com/users/mgedmin/repos", "events_url": "https://api.github.com/users/mgedmin/events{/privacy}", "received_events_url": "https://api.github.com/users/mgedmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-06T11:21:15Z", "updated_at": "2019-11-06T17:50:48Z", "closed_at": "2019-11-06T17:45:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is a problem with auditwheel, or if (more likely) it's a problem with the pypa/manylinux1_x86_64 Docker image published on quay.io, but `auditwheel repair` fails for us with the following error:\r\n\r\n```\r\n+ auditwheel repair wheelhouse/persistent-4.5.1-cp27-cp27m-linux_x86_64.whl -w /io/wheelhouse/\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/auditwheel\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/opt/_internal/cpython-3.7.5/lib/python3.7/site-packages/auditwheel/main.py\", line 50, in main\r\n    rval = args.func(args, p)\r\n  File \"/opt/_internal/cpython-3.7.5/lib/python3.7/site-packages/auditwheel/main_repair.py\", line 49, in execute\r\n    from .repair import repair_wheel\r\n  File \"/opt/_internal/cpython-3.7.5/lib/python3.7/site-packages/auditwheel/repair.py\", line 14, in <module>\r\n    from .wheeltools import InWheelCtx, add_platforms\r\n  File \"/opt/_internal/cpython-3.7.5/lib/python3.7/site-packages/auditwheel/wheeltools.py\", line 15, in <module>\r\n    from wheel.util import urlsafe_b64encode, open_for_csv, native  # type: ignore\r\nImportError: cannot import name 'open_for_csv' from 'wheel.util' (/opt/_internal/cpython-3.7.5/lib/python3.7/site-packages/wheel/util.py)\r\n```\r\n\r\nFull travis build log is available at https://travis-ci.org/zopefoundation/persistent/jobs/608123705", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/205", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/205/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/205/events", "html_url": "https://github.com/pypa/auditwheel/issues/205", "id": 518071000, "node_id": "MDU6SXNzdWU1MTgwNzEwMDA=", "number": 205, "title": "Release 3.0.0", "user": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-05T21:58:07Z", "updated_at": "2020-01-11T18:30:31Z", "closed_at": "2020-01-11T17:31:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Is there anything blocking a 3.0.0 release? Any open PRs that should be included? Currently a new release would include:\r\n\r\n### User-facing changes\r\n- [FEATURE] manylinux2014 policy ([#192](https://github.com/pypa/auditwheel/pull/192), [#202](https://github.com/pypa/auditwheel/pull/202))\r\n- [FEATURE] Update machine detection ([#201](https://github.com/pypa/auditwheel/pull/201))\r\n- [FEATURE] Advertise python 3.8 support and run python 3.8 in CI ([#203](https://github.com/pypa/auditwheel/pull/203))\r\n\r\n### Housekeeping\r\n- Run manylinux tests using current python version ([#199](https://github.com/pypa/auditwheel/pull/199))\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/198", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/198/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/198/events", "html_url": "https://github.com/pypa/auditwheel/issues/198", "id": 502266515, "node_id": "MDU6SXNzdWU1MDIyNjY1MTU=", "number": 198, "title": "New release with manylinux2010-i686 support", "user": {"login": "veblush", "id": 2793282, "node_id": "MDQ6VXNlcjI3OTMyODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2793282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veblush", "html_url": "https://github.com/veblush", "followers_url": "https://api.github.com/users/veblush/followers", "following_url": "https://api.github.com/users/veblush/following{/other_user}", "gists_url": "https://api.github.com/users/veblush/gists{/gist_id}", "starred_url": "https://api.github.com/users/veblush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veblush/subscriptions", "organizations_url": "https://api.github.com/users/veblush/orgs", "repos_url": "https://api.github.com/users/veblush/repos", "events_url": "https://api.github.com/users/veblush/events{/privacy}", "received_events_url": "https://api.github.com/users/veblush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-03T19:57:12Z", "updated_at": "2019-10-08T16:26:13Z", "closed_at": "2019-10-08T06:39:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Can we get a new release with recent PRs (#141, #194) to fix manylinux2010-i686 missing versions? Without this, i686 is not properly recognized by `auditwheel`. Also having new `auditwheel` is a prerequisite to have official `manylinux2010-i686` docker image. (https://github.com/pypa/manylinux/pull/355)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/196", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/196/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/196/events", "html_url": "https://github.com/pypa/auditwheel/issues/196", "id": 499910850, "node_id": "MDU6SXNzdWU0OTk5MTA4NTA=", "number": 196, "title": "Duplicate libraries within repaired wheel", "user": {"login": "Dekken", "id": 30491, "node_id": "MDQ6VXNlcjMwNDkx", "avatar_url": "https://avatars0.githubusercontent.com/u/30491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dekken", "html_url": "https://github.com/Dekken", "followers_url": "https://api.github.com/users/Dekken/followers", "following_url": "https://api.github.com/users/Dekken/following{/other_user}", "gists_url": "https://api.github.com/users/Dekken/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dekken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dekken/subscriptions", "organizations_url": "https://api.github.com/users/Dekken/orgs", "repos_url": "https://api.github.com/users/Dekken/repos", "events_url": "https://api.github.com/users/Dekken/events{/privacy}", "received_events_url": "https://api.github.com/users/Dekken/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087097, "node_id": "MDU6TGFiZWwzMTEwODcwOTc=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-29T12:32:21Z", "updated_at": "2019-09-29T16:37:55Z", "closed_at": "2019-09-29T16:37:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nIs this a feature or a bug? or possibly a usage issue?\r\nexample: https://github.com/X-DataInitiative/tick/releases/download/v0.6/tick-0.6.0.0-cp36-cp36m-manylinux2010_x86_64.whl\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/191", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/191/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/191/events", "html_url": "https://github.com/pypa/auditwheel/issues/191", "id": 496779148, "node_id": "MDU6SXNzdWU0OTY3NzkxNDg=", "number": 191, "title": "Vendor-in wheel 0.31.1", "user": {"login": "mayeut", "id": 9768336, "node_id": "MDQ6VXNlcjk3NjgzMzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9768336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mayeut", "html_url": "https://github.com/mayeut", "followers_url": "https://api.github.com/users/mayeut/followers", "following_url": "https://api.github.com/users/mayeut/following{/other_user}", "gists_url": "https://api.github.com/users/mayeut/gists{/gist_id}", "starred_url": "https://api.github.com/users/mayeut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mayeut/subscriptions", "organizations_url": "https://api.github.com/users/mayeut/orgs", "repos_url": "https://api.github.com/users/mayeut/repos", "events_url": "https://api.github.com/users/mayeut/events{/privacy}", "received_events_url": "https://api.github.com/users/mayeut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087098, "node_id": "MDU6TGFiZWwzMTEwODcwOTg=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 311087101, "node_id": "MDU6TGFiZWwzMTEwODcxMDE=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-22T13:28:25Z", "updated_at": "2020-03-02T21:43:02Z", "closed_at": "2020-03-02T21:43:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While waiting for a public API to the wheel package, it might be a good idea to vendor-in wheel 0.31.1\r\n\r\nRelates to #102", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/186", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/186/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/186/events", "html_url": "https://github.com/pypa/auditwheel/issues/186", "id": 477552877, "node_id": "MDU6SXNzdWU0Nzc1NTI4Nzc=", "number": 186, "title": "Make the wheel file manylinux2010 compliant", "user": {"login": "harshad16", "id": 14028058, "node_id": "MDQ6VXNlcjE0MDI4MDU4", "avatar_url": "https://avatars0.githubusercontent.com/u/14028058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshad16", "html_url": "https://github.com/harshad16", "followers_url": "https://api.github.com/users/harshad16/followers", "following_url": "https://api.github.com/users/harshad16/following{/other_user}", "gists_url": "https://api.github.com/users/harshad16/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshad16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshad16/subscriptions", "organizations_url": "https://api.github.com/users/harshad16/orgs", "repos_url": "https://api.github.com/users/harshad16/repos", "events_url": "https://api.github.com/users/harshad16/events{/privacy}", "received_events_url": "https://api.github.com/users/harshad16/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-06T19:23:17Z", "updated_at": "2019-08-08T07:26:55Z", "closed_at": "2019-08-07T20:11:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I make this [wheel](https://github.com/AICoE/tensorflow-wheels/releases/download/tensorflow_serving_api-r1.12-cpu-2019-08-05_191907/tensorflow_serving_api-1.12.3-py2.py3-none-any.whl) file manylinux2010 compliant? It a pure python package. \r\nI tried with `auditwheel repair` but didn't get any result in the `wheelhouse` directory.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/185", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/185/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/185/events", "html_url": "https://github.com/pypa/auditwheel/issues/185", "id": 477464537, "node_id": "MDU6SXNzdWU0Nzc0NjQ1Mzc=", "number": 185, "title": "Add manylinux2014 policy", "user": {"login": "lkollar", "id": 791741, "node_id": "MDQ6VXNlcjc5MTc0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/791741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkollar", "html_url": "https://github.com/lkollar", "followers_url": "https://api.github.com/users/lkollar/followers", "following_url": "https://api.github.com/users/lkollar/following{/other_user}", "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions", "organizations_url": "https://api.github.com/users/lkollar/orgs", "repos_url": "https://api.github.com/users/lkollar/repos", "events_url": "https://api.github.com/users/lkollar/events{/privacy}", "received_events_url": "https://api.github.com/users/lkollar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087098, "node_id": "MDU6TGFiZWwzMTEwODcwOTg=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1106715118, "node_id": "MDU6TGFiZWwxMTA2NzE1MTE4", "url": "https://api.github.com/repos/pypa/auditwheel/labels/has%20PR", "name": "has PR", "color": "f9b766", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-06T15:58:29Z", "updated_at": "2020-02-26T21:38:40Z", "closed_at": "2020-02-26T21:38:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As per https://www.python.org/dev/peps/pep-0599/.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/183", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/183/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/183/events", "html_url": "https://github.com/pypa/auditwheel/issues/183", "id": 473446428, "node_id": "MDU6SXNzdWU0NzM0NDY0Mjg=", "number": 183, "title": "Missing `__version__`", "user": {"login": "lkollar", "id": 791741, "node_id": "MDQ6VXNlcjc5MTc0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/791741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkollar", "html_url": "https://github.com/lkollar", "followers_url": "https://api.github.com/users/lkollar/followers", "following_url": "https://api.github.com/users/lkollar/following{/other_user}", "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions", "organizations_url": "https://api.github.com/users/lkollar/orgs", "repos_url": "https://api.github.com/users/lkollar/repos", "events_url": "https://api.github.com/users/lkollar/events{/privacy}", "received_events_url": "https://api.github.com/users/lkollar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "lkollar", "id": 791741, "node_id": "MDQ6VXNlcjc5MTc0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/791741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkollar", "html_url": "https://github.com/lkollar", "followers_url": "https://api.github.com/users/lkollar/followers", "following_url": "https://api.github.com/users/lkollar/following{/other_user}", "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions", "organizations_url": "https://api.github.com/users/lkollar/orgs", "repos_url": "https://api.github.com/users/lkollar/repos", "events_url": "https://api.github.com/users/lkollar/events{/privacy}", "received_events_url": "https://api.github.com/users/lkollar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lkollar", "id": 791741, "node_id": "MDQ6VXNlcjc5MTc0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/791741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkollar", "html_url": "https://github.com/lkollar", "followers_url": "https://api.github.com/users/lkollar/followers", "following_url": "https://api.github.com/users/lkollar/following{/other_user}", "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions", "organizations_url": "https://api.github.com/users/lkollar/orgs", "repos_url": "https://api.github.com/users/lkollar/repos", "events_url": "https://api.github.com/users/lkollar/events{/privacy}", "received_events_url": "https://api.github.com/users/lkollar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-07-26T16:46:01Z", "updated_at": "2020-03-02T22:04:24Z", "closed_at": "2020-03-02T22:04:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Auditwheel does not have a version specifier on the package. This makes it difficult to determine the installed version from Python.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/181", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/181/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/181/events", "html_url": "https://github.com/pypa/auditwheel/issues/181", "id": 469962505, "node_id": "MDU6SXNzdWU0Njk5NjI1MDU=", "number": 181, "title": "New release?", "user": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-18T20:00:10Z", "updated_at": "2019-07-29T08:17:38Z", "closed_at": "2019-07-28T19:46:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Should we aim towards a new release? I think most of our changes have been to the test suite, but there are some functional changes like the AUDITWHEEL_PLAT environment variable (#151), and people are missing those in the released version (e.g. https://github.com/pypa/manylinux/issues/323).\r\n\r\nWhat do we want to get in before making a release?\r\n\r\nIt seems that libcrypt.so.1 should probably be dropped from the library whitelist: https://github.com/pypa/manylinux/issues/305", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/160", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/160/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/160/events", "html_url": "https://github.com/pypa/auditwheel/issues/160", "id": 443761776, "node_id": "MDU6SXNzdWU0NDM3NjE3NzY=", "number": 160, "title": "cython project cannot open shared object file for third party .so", "user": {"login": "levyfan", "id": 1595487, "node_id": "MDQ6VXNlcjE1OTU0ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1595487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/levyfan", "html_url": "https://github.com/levyfan", "followers_url": "https://api.github.com/users/levyfan/followers", "following_url": "https://api.github.com/users/levyfan/following{/other_user}", "gists_url": "https://api.github.com/users/levyfan/gists{/gist_id}", "starred_url": "https://api.github.com/users/levyfan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/levyfan/subscriptions", "organizations_url": "https://api.github.com/users/levyfan/orgs", "repos_url": "https://api.github.com/users/levyfan/repos", "events_url": "https://api.github.com/users/levyfan/events{/privacy}", "received_events_url": "https://api.github.com/users/levyfan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-14T07:50:15Z", "updated_at": "2019-05-14T10:14:42Z", "closed_at": "2019-05-14T10:14:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have a third party .so named libcuBERT.so and write cython project to wrap it. I successfully build and auditwheel it as:\r\n\r\n```shell\r\n% unzip -l wheelhouse/cuBERT-0.0.1-cp27-cp27mu-manylinux1_x86_64.whl\r\nArchive:  wheelhouse/cuBERT-0.0.1-cp27-cp27mu-manylinux1_x86_64.whl\r\n  Length      Date    Time    Name\r\n---------  ---------- -----   ----\r\n   302160  2019-05-14 14:06   cuBERT.so\r\n  5329968  2019-05-14 14:06   .libscuBERT/libcuBERT-d011984c.so\r\n 61277072  2019-05-14 14:06   .libscuBERT/libcublas-b9871408.so.9.0.480\r\n    95040  2019-05-14 14:06   .libscuBERT/libgomp-91278daa.so.1.0.0\r\n      319  2019-05-13 09:37   cuBERT-0.0.1.dist-info/metadata.json\r\n       10  2019-05-13 09:37   cuBERT-0.0.1.dist-info/DESCRIPTION.rst\r\n      846  2019-05-14 14:06   cuBERT-0.0.1.dist-info/RECORD\r\n      110  2019-05-14 14:06   cuBERT-0.0.1.dist-info/WHEEL\r\n      202  2019-05-13 09:37   cuBERT-0.0.1.dist-info/METADATA\r\n        7  2019-05-13 09:37   cuBERT-0.0.1.dist-info/top_level.txt\r\n---------                     -------\r\n 67005734                     10 files\r\n```\r\n\r\nBut after I install the wheel as `pip install`, and import it from python, the `libcuBERT.so` still can not be found:\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"cuBERT_test.py\", line 3, in <module>\r\n    import cuBERT\r\nImportError: libcuBERT.so: cannot open shared object file: No such file or directory\r\n```\r\n\r\nI have checked the audited `cuBERT.so`, and it seems nothing wrong:\r\n\r\n```shell\r\nreadelf --dynamic wheelhouse/cuBERT.so \r\n\r\nDynamic section at offset 0x491c0 contains 31 entries:\r\n  Tag        Type                         Name/Value\r\n 0x000000000000000f (RPATH)              Library rpath: [$ORIGIN/.libscuBERT]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libcuBERT-d011984c.so]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libpython2.7.so.1.0]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libstdc++.so.6]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libm.so.6]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libgcc_s.so.1]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libpthread.so.0]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]\r\n 0x000000000000000c (INIT)               0x3070\r\n 0x000000000000000d (FINI)               0x11124\r\n 0x0000000000000019 (INIT_ARRAY)         0x214000\r\n 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes)\r\n 0x000000000000001a (FINI_ARRAY)         0x214008\r\n 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes)\r\n 0x000000006ffffef5 (GNU_HASH)           0x1b8\r\n 0x0000000000000005 (STRTAB)             0x2173f0\r\n 0x0000000000000006 (SYMTAB)             0x1f8\r\n 0x000000000000000a (STRSZ)              2138 (bytes)\r\n 0x000000000000000b (SYMENT)             24 (bytes)\r\n 0x0000000000000003 (PLTGOT)             0x214350\r\n 0x0000000000000002 (PLTRELSZ)           1920 (bytes)\r\n 0x0000000000000014 (PLTREL)             RELA\r\n 0x0000000000000017 (JMPREL)             0x28f0\r\n 0x0000000000000007 (RELA)               0x1678\r\n 0x0000000000000008 (RELASZ)             4728 (bytes)\r\n 0x0000000000000009 (RELAENT)            24 (bytes)\r\n 0x000000006ffffffe (VERNEED)            0x1658\r\n 0x000000006fffffff (VERNEEDNUM)         1\r\n 0x000000006ffffff0 (VERSYM)             0x1568\r\n 0x000000006ffffff9 (RELACOUNT)          162\r\n 0x0000000000000000 (NULL)               0x0\r\n```\r\n\r\nThe cython `setup.py` looks like:\r\n\r\n```python\r\nimport setuptools\r\nfrom distutils.core import setup\r\nfrom distutils.extension import Extension\r\nfrom Cython.Build import cythonize\r\n\r\nimport numpy as np\r\nimport platform\r\n\r\nsetup(\r\n    name='cuBERT',\r\n    ext_modules = cythonize([Extension(\"cuBERT\", \r\n                                       sources=[\"cuBERT.pyx\"], \r\n                                       libraries=[\"cuBERT\"],\r\n                                       library_dirs=[\"path/to/libcuBERT.so\"],\r\n                                       include_dirs=[np.get_include()],\r\n                                       language=\"c++\")])\r\n)\r\n```\r\n\r\nAnd the original wheel package before auditwheel is like:\r\n\r\n```shell\r\nunzip -l dist/cuBERT-0.0.1-cp27-cp27mu-linux_x86_64.whl \r\nArchive:  dist/cuBERT-0.0.1-cp27-cp27mu-linux_x86_64.whl\r\n  Length      Date    Time    Name\r\n---------  ---------- -----   ----\r\n   291608  2019-05-13 09:37   cuBERT.so\r\n        7  2019-05-14 06:36   cuBERT-0.0.1.dist-info/top_level.txt\r\n      105  2019-05-14 06:36   cuBERT-0.0.1.dist-info/WHEEL\r\n      202  2019-05-14 06:36   cuBERT-0.0.1.dist-info/METADATA\r\n      366  2019-05-14 06:36   cuBERT-0.0.1.dist-info/RECORD\r\n---------                     -------\r\n   292288                     5 files\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/159", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/159/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/159/events", "html_url": "https://github.com/pypa/auditwheel/issues/159", "id": 440317553, "node_id": "MDU6SXNzdWU0NDAzMTc1NTM=", "number": 159, "title": "Python C++ module not properly repaired, retains dependency on symlink to bundled library", "user": {"login": "madig", "id": 380829, "node_id": "MDQ6VXNlcjM4MDgyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/380829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madig", "html_url": "https://github.com/madig", "followers_url": "https://api.github.com/users/madig/followers", "following_url": "https://api.github.com/users/madig/following{/other_user}", "gists_url": "https://api.github.com/users/madig/gists{/gist_id}", "starred_url": "https://api.github.com/users/madig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madig/subscriptions", "organizations_url": "https://api.github.com/users/madig/orgs", "repos_url": "https://api.github.com/users/madig/repos", "events_url": "https://api.github.com/users/madig/events{/privacy}", "received_events_url": "https://api.github.com/users/madig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2019-05-04T12:21:50Z", "updated_at": "2020-04-28T15:18:53Z", "closed_at": "2020-04-24T10:16:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Python C++ module that links to libcrypto from OpenSSL and libcurl. I build the package on the manylinux2010 container (`python3 setup.py bdist_wheel`) and run `auditwheel repair` on the .whl. The library shared objects (libcrypto, libz and libcurl) are correctly packed in and ldd-ing the Python module shared object correctly finds and shows them as dependencies, yet it retains a dependency on \"libcrypto.so.10\", which is named differently on e.g. Debian-based containers, making import fail. What am I missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/154", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/154/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/154/events", "html_url": "https://github.com/pypa/auditwheel/issues/154", "id": 439106393, "node_id": "MDU6SXNzdWU0MzkxMDYzOTM=", "number": 154, "title": "Remove non-Linux platform restriction", "user": {"login": "lkollar", "id": 791741, "node_id": "MDQ6VXNlcjc5MTc0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/791741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkollar", "html_url": "https://github.com/lkollar", "followers_url": "https://api.github.com/users/lkollar/followers", "following_url": "https://api.github.com/users/lkollar/following{/other_user}", "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions", "organizations_url": "https://api.github.com/users/lkollar/orgs", "repos_url": "https://api.github.com/users/lkollar/repos", "events_url": "https://api.github.com/users/lkollar/events{/privacy}", "received_events_url": "https://api.github.com/users/lkollar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087098, "node_id": "MDU6TGFiZWwzMTEwODcwOTg=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1106715118, "node_id": "MDU6TGFiZWwxMTA2NzE1MTE4", "url": "https://api.github.com/repos/pypa/auditwheel/labels/has%20PR", "name": "has PR", "color": "f9b766", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-01T09:01:02Z", "updated_at": "2019-05-08T15:23:28Z", "closed_at": "2019-05-08T15:23:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": " Right now auditwheel exits on startup on non-Linux systems. There is probably little use in running it on other systems, but this also makes it difficult to develop on these platforms as it causes all test cases to fail. Given that all platform-specific tests run in Docker, development on non-Linux platforms should be perfectly doable.\r\n\r\nI think this would be useful to make it easier to contribute to the project.\r\n\r\nAfter removing the check I can run the test suite successfully on macOS.\r\n\r\nhttps://github.com/pypa/auditwheel/blob/b0fde3d6a365aa3f942c9e04ef5bca9014c788ed/auditwheel/policy/__init__.py#L29-L34", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/149", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/149/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/149/events", "html_url": "https://github.com/pypa/auditwheel/issues/149", "id": 432305270, "node_id": "MDU6SXNzdWU0MzIzMDUyNzA=", "number": 149, "title": "Auditwheel needs a new maintainer or maintainers", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-04-11T22:50:33Z", "updated_at": "2019-05-19T08:46:15Z", "closed_at": "2019-05-17T10:28:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@ehashman is stepping down as auditwheel maintainer: https://hashman.ca/leaving-pypa/\r\n\r\nThank you Elana!\r\n\r\nNow we need a new maintainer (or better yet: maintainers). Anyone interested?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/146", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/146/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/146/events", "html_url": "https://github.com/pypa/auditwheel/issues/146", "id": 432014140, "node_id": "MDU6SXNzdWU0MzIwMTQxNDA=", "number": 146, "title": "Repair can produce an invalid manylinux1 wheel", "user": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-11T13:08:51Z", "updated_at": "2019-05-27T16:28:22Z", "closed_at": "2019-05-27T16:28:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm experimenting with building manylinux2010 wheels for pygame, to test the toolchain. `auditwheel repair` (with no `--plat`) argument tags the wheel `manylinux1`. But then re-running auditwheel on that wheel, it is not valid for manylinux1:\r\n\r\n- `auditwheel show` says \"This constrains the platform tag to \"manylinux2010_x86_64\". In order\r\nto achieve a more compatible tag, you would need...\"\r\n- `auditwheel repair` on the already-repaired wheel says:\r\n\r\n> cannot repair \"wheelhouse/pygame-2.0.0.dev0-cp37-cp37m-manylinux1_x86_64.whl\" to \"manylinux1_x86_64\" ABI because of the presence of too-recent versioned symbols. You'll need to compile the wheel on an older toolchain.\r\n\r\nI understand that it's necessary to specify the tag manually at the command line, but it shouldn't successfully apply the `manylinux1` tag if the wheel is not `manylinux1` compatible.\r\n\r\nEducated guesswork: I think it checks the validity of the tag based on the files already in the wheel. These are presumably valid for manylinux1. But then it grafts some libraries into the wheel, and these make it invalid.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/145", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/145/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/145/events", "html_url": "https://github.com/pypa/auditwheel/issues/145", "id": 428989600, "node_id": "MDU6SXNzdWU0Mjg5ODk2MDA=", "number": 145, "title": "Able to install manylinux wheel but not auditwheel repair it", "user": {"login": "riddell-stan", "id": 39928022, "node_id": "MDQ6VXNlcjM5OTI4MDIy", "avatar_url": "https://avatars3.githubusercontent.com/u/39928022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riddell-stan", "html_url": "https://github.com/riddell-stan", "followers_url": "https://api.github.com/users/riddell-stan/followers", "following_url": "https://api.github.com/users/riddell-stan/following{/other_user}", "gists_url": "https://api.github.com/users/riddell-stan/gists{/gist_id}", "starred_url": "https://api.github.com/users/riddell-stan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riddell-stan/subscriptions", "organizations_url": "https://api.github.com/users/riddell-stan/orgs", "repos_url": "https://api.github.com/users/riddell-stan/repos", "events_url": "https://api.github.com/users/riddell-stan/events{/privacy}", "received_events_url": "https://api.github.com/users/riddell-stan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-03T21:47:06Z", "updated_at": "2019-04-05T13:09:59Z", "closed_at": "2019-04-05T12:31:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting a strange error when I run `auditwheel` on a wheel I built in a manylinux docker image:\r\n\r\n```\r\n$ docker run --rm -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD auditwheel repair /io/wheelhouse/pystan-2.19.0.0-cp36-cp36m-linux_x86_64.whl -w /io/wheelhouse2/\r\nwarning [/io/wheelhouse/pystan-2.19.0.0-cp36-cp36m-linux_x86_64.whl]:  76 extra bytes at beginning or within zipfile\r\n  (attempting to process anyway)\r\nerror [/io/wheelhouse/pystan-2.19.0.0-cp36-cp36m-linux_x86_64.whl]:  reported length of central directory is\r\n  -76 bytes too long (Atari STZip zipfile?  J.H.Holm ZIPSPLIT 1.1\r\n  zipfile?).  Compensating...\r\nerror:  expected central file header signature not found (file #67320).\r\n  (please check that you have transferred or created the zipfile in the\r\n  appropriate BINARY mode and that you have compiled UnZip properly)\r\nRepairing pystan-2.19.0.0-cp36-cp36m-linux_x86_64.whl\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/auditwheel\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/opt/_internal/cpython-3.6.8/lib/python3.6/site-packages/auditwheel/main.py\", line 49, in main\r\n    rval = args.func(args, p)\r\n  File \"/opt/_internal/cpython-3.6.8/lib/python3.6/site-packages/auditwheel/main_repair.py\", line 56, in execute\r\n    wheel_abi = analyze_wheel_abi(args.WHEEL_FILE)\r\n  File \"/opt/_internal/cpython-3.6.8/lib/python3.6/site-packages/auditwheel/wheel_abi.py\", line 101, in analyze_wheel_abi\r\n    get_wheel_elfdata(wheel_fn)\r\n  File \"/opt/_internal/cpython-3.6.8/lib/python3.6/site-packages/auditwheel/wheel_abi.py\", line 35, in get_wheel_elfdata\r\n    with InGenericPkgCtx(wheel_fn) as ctx:\r\n  File \"/opt/_internal/cpython-3.6.8/lib/python3.6/site-packages/auditwheel/wheeltools.py\", line 155, in __enter__\r\n    self.path = super(InWheelCtx, self).__enter__()\r\n  File \"/opt/_internal/cpython-3.6.8/lib/python3.6/site-packages/auditwheel/wheeltools.py\", line 114, in __enter__\r\n    zip2dir(self.in_wheel, self.name)\r\n  File \"/opt/_internal/cpython-3.6.8/lib/python3.6/site-packages/auditwheel/tools.py\", line 42, in zip2dir\r\n    subprocess.check_output(['unzip', '-o', '-d', out_dir, zip_fname])\r\n  File \"/opt/_internal/cpython-3.6.8/lib/python3.6/subprocess.py\", line 356, in check_output\r\n    **kwargs).stdout\r\n  File \"/opt/_internal/cpython-3.6.8/lib/python3.6/subprocess.py\", line 438, in run\r\n    output=stdout, stderr=stderr)\r\nsubprocess.CalledProcessError: Command '['unzip', '-o', '-d', '/tmp/tmp5yrvpbxz', '/io/wheelhouse/pystan-2.19.0.0-cp36-cp36m-linux_x86_64.whl']' returned non-zero exit status 3.\r\n```\r\n\r\nI can unzip this file without issue and even install it (without error) on linux.\r\n\r\nThe wheel is large (196M). The wheel was built using TkTech's verison of ``quay.io/pypa/manylinux1_x86_64`` https://github.com/pypa/manylinux/issues/118#issuecomment-472380364 .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/142", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/142/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/142/events", "html_url": "https://github.com/pypa/auditwheel/issues/142", "id": 423873620, "node_id": "MDU6SXNzdWU0MjM4NzM2MjA=", "number": 142, "title": "Wheelhouse is 404", "user": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-21T18:14:07Z", "updated_at": "2019-07-12T09:38:46Z", "closed_at": "2019-07-12T09:38:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `WHEELHOUSE=1` Travis test currently tries to fetch wheelhouse from https://github.com/getnikola/wheelhouse/archive/v2.7.zip, however this link is 404 and the repo is missing as well: https://github.com/getnikola/wheelhouse\r\n\r\nThis test is currently an allowed failure, do we need it? Do we need to update the URL for wheelhouse?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/137", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/137/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/137/events", "html_url": "https://github.com/pypa/auditwheel/issues/137", "id": 402487378, "node_id": "MDU6SXNzdWU0MDI0ODczNzg=", "number": 137, "title": "RPATH is being incorrectly overwritten", "user": {"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1106715118, "node_id": "MDU6TGFiZWwxMTA2NzE1MTE4", "url": "https://api.github.com/repos/pypa/auditwheel/labels/has%20PR", "name": "has PR", "color": "f9b766", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-24T00:16:49Z", "updated_at": "2020-06-22T21:36:08Z", "closed_at": "2020-06-22T21:36:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As originally reported by @thomaslima:\r\n\r\nOur wheel has a complicated dependency structure. But the gist of it is the following:\r\n\r\ndbcore.so (py_ext) -> lib_tl.so (non-py_ext) -> libcurl.so (external library to be grafted)\r\n\r\ndbcore already had an `RPATH` set to `$ORIGIN`. So because of its dependency to libcurl.so, `patchelf_set_rpath` *replaced* it to `$ORIGIN/.libs` in `repair.py`, even though it was not necessary. This way, it could no longer find `lib_tl.so`.\r\n\r\nSee also #134.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/125", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/125/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/125/events", "html_url": "https://github.com/pypa/auditwheel/issues/125", "id": 379560144, "node_id": "MDU6SXNzdWUzNzk1NjAxNDQ=", "number": 125, "title": "C++14", "user": {"login": "alexhsamuel", "id": 5896679, "node_id": "MDQ6VXNlcjU4OTY2Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5896679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexhsamuel", "html_url": "https://github.com/alexhsamuel", "followers_url": "https://api.github.com/users/alexhsamuel/followers", "following_url": "https://api.github.com/users/alexhsamuel/following{/other_user}", "gists_url": "https://api.github.com/users/alexhsamuel/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexhsamuel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexhsamuel/subscriptions", "organizations_url": "https://api.github.com/users/alexhsamuel/orgs", "repos_url": "https://api.github.com/users/alexhsamuel/repos", "events_url": "https://api.github.com/users/alexhsamuel/events{/privacy}", "received_events_url": "https://api.github.com/users/alexhsamuel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087101, "node_id": "MDU6TGFiZWwzMTEwODcxMDE=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-11-11T20:31:46Z", "updated_at": "2020-03-31T17:45:16Z", "closed_at": "2018-11-14T01:42:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to build a Python 3.6 manylinux1 wheel of a [package](https://github.com/alexhsamuel/ora) implemented in C++14.  I perused #39, and also recent traffic on wheel-builders as suggested in that issue, but didn't find too much to guide me.\r\n\r\nAfter some trial and error, I managed to get a [working wheel](https://pypi.org/project/ora/#files) (I think!) via the following process:\r\n1. Scrounge around for a CentOS 5.11 docker image with GCC 5.  I ended up using continuumio/conda_builder_linux.\r\n2. Hack up my setup.py to link `-static-libstdc++ -static-libgcc`.\r\n3. Build the wheel.\r\n4. `auditwheel repair`.\r\n\r\nI was wondering,\r\n1. Is this the current recommended practice?  `-static-libstdc++` or bundling libstdc++.so seems unavoidable for C++14 given the CXXABI version restriction.\r\n2. Where can I find out what's up with manylinux2?  And what CXXABI will this allow?\r\n3. Is there any documentation I might have missed?  If not, is there somewhere I could contribute some for posterity or myself in six months when I've forgotten?  It would be wonderful if there were an PyPA-approved method for distributing binary C++14 (or newer) Linux extension modules.  Conda works but I'd like to support non-conda environments too.\r\n4. Any other suggestions?\r\n\r\nFWIW I'm not particularly interested in supporting CentOS 5 with my package.  I'm just looking to create a binary Linux wheel that works on reasonably modern systems that I can actually upload to PyPI.\r\n\r\nThanks much in advance.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/115", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/115/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/115/events", "html_url": "https://github.com/pypa/auditwheel/issues/115", "id": 374769843, "node_id": "MDU6SXNzdWUzNzQ3Njk4NDM=", "number": 115, "title": "Add flake8 to CI", "user": {"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087098, "node_id": "MDU6TGFiZWwzMTEwODcwOTg=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1106706140, "node_id": "MDU6TGFiZWwxMTA2NzA2MTQw", "url": "https://api.github.com/repos/pypa/auditwheel/labels/good%20first%20issue", "name": "good first issue", "color": "823cc9", "default": true, "description": ""}, {"id": 1106715118, "node_id": "MDU6TGFiZWwxMTA2NzE1MTE4", "url": "https://api.github.com/repos/pypa/auditwheel/labels/has%20PR", "name": "has PR", "color": "f9b766", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-28T16:09:08Z", "updated_at": "2019-05-07T18:42:48Z", "closed_at": "2019-05-07T18:42:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "And fix any errors we currently have...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/114", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/114/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/114/events", "html_url": "https://github.com/pypa/auditwheel/issues/114", "id": 374686689, "node_id": "MDU6SXNzdWUzNzQ2ODY2ODk=", "number": 114, "title": "Fix continuous deployment", "user": {"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-27T20:39:20Z", "updated_at": "2018-11-18T21:06:57Z", "closed_at": "2018-11-18T21:06:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It appears the credentials in the `.travis.yml` secure section don't work, we got a 403 error in the latest attempt at deployment: https://travis-ci.org/pypa/auditwheel/jobs/447196655\r\n\r\nI'll deploy 1.10rc1 manually.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/111", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/111/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/111/events", "html_url": "https://github.com/pypa/auditwheel/issues/111", "id": 374659124, "node_id": "MDU6SXNzdWUzNzQ2NTkxMjQ=", "number": 111, "title": "Drop the dot when invoking pytest", "user": {"login": "jaraco", "id": 308610, "node_id": "MDQ6VXNlcjMwODYxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/308610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaraco", "html_url": "https://github.com/jaraco", "followers_url": "https://api.github.com/users/jaraco/followers", "following_url": "https://api.github.com/users/jaraco/following{/other_user}", "gists_url": "https://api.github.com/users/jaraco/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaraco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaraco/subscriptions", "organizations_url": "https://api.github.com/users/jaraco/orgs", "repos_url": "https://api.github.com/users/jaraco/repos", "events_url": "https://api.github.com/users/jaraco/events{/privacy}", "received_events_url": "https://api.github.com/users/jaraco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087098, "node_id": "MDU6TGFiZWwzMTEwODcwOTg=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1106706140, "node_id": "MDU6TGFiZWwxMTA2NzA2MTQw", "url": "https://api.github.com/repos/pypa/auditwheel/labels/good%20first%20issue", "name": "good first issue", "color": "823cc9", "default": true, "description": ""}, {"id": 311087099, "node_id": "MDU6TGFiZWwzMTEwODcwOTk=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/help%20wanted", "name": "help wanted", "color": "20a323", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-27T15:48:40Z", "updated_at": "2018-11-05T23:17:21Z", "closed_at": "2018-10-27T17:42:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PyTest [recommends](https://github.com/pytest-dev/pytest/issues/1629) using `pytest` instead of `py.test`. This project should adopt that pattern in its test invocations [such as here](https://github.com/pypa/auditwheel/blob/5a56bca4f416bd069ecc03c418311c488b494f2f/tox.ini#L9).\r\n\r\nI'm at the Bloomberg PyPA sprint and overheard 'py dot test', so thought I'd capture this trivial issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/109", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/109/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/109/events", "html_url": "https://github.com/pypa/auditwheel/issues/109", "id": 372163126, "node_id": "MDU6SXNzdWUzNzIxNjMxMjY=", "number": 109, "title": "Replace `print` statements with logger", "user": {"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087098, "node_id": "MDU6TGFiZWwzMTEwODcwOTg=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1106706140, "node_id": "MDU6TGFiZWwxMTA2NzA2MTQw", "url": "https://api.github.com/repos/pypa/auditwheel/labels/good%20first%20issue", "name": "good first issue", "color": "823cc9", "default": true, "description": ""}, {"id": 1106715118, "node_id": "MDU6TGFiZWwxMTA2NzE1MTE4", "url": "https://api.github.com/repos/pypa/auditwheel/labels/has%20PR", "name": "has PR", "color": "f9b766", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-20T02:18:58Z", "updated_at": "2018-11-13T02:02:09Z", "closed_at": "2018-11-13T02:02:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Self-explanatory.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/107", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/107/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/107/events", "html_url": "https://github.com/pypa/auditwheel/issues/107", "id": 371323231, "node_id": "MDU6SXNzdWUzNzEzMjMyMzE=", "number": 107, "title": "Regression in tests from #95 - numpy 1.11.0 is no longer matched to manylinux", "user": {"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1106715118, "node_id": "MDU6TGFiZWwxMTA2NzE1MTE4", "url": "https://api.github.com/repos/pypa/auditwheel/labels/has%20PR", "name": "has PR", "color": "f9b766", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-10-18T01:10:32Z", "updated_at": "2018-10-27T20:07:34Z", "closed_at": "2018-10-27T20:07:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The external libraries [showing up in this map with \"null\" keypairs](https://travis-ci.org/pypa/auditwheel/jobs/399795091#L691-L712) is causing legitimate wheels to be misidentified as non-manylinux. We missed this because the tests appeared to be passing, due to #105.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/105", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/105/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/105/events", "html_url": "https://github.com/pypa/auditwheel/issues/105", "id": 371316012, "node_id": "MDU6SXNzdWUzNzEzMTYwMTI=", "number": 105, "title": "Failing tests in Travis have incorrect exit status", "user": {"login": "safijari", "id": 5191844, "node_id": "MDQ6VXNlcjUxOTE4NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5191844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/safijari", "html_url": "https://github.com/safijari", "followers_url": "https://api.github.com/users/safijari/followers", "following_url": "https://api.github.com/users/safijari/following{/other_user}", "gists_url": "https://api.github.com/users/safijari/gists{/gist_id}", "starred_url": "https://api.github.com/users/safijari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/safijari/subscriptions", "organizations_url": "https://api.github.com/users/safijari/orgs", "repos_url": "https://api.github.com/users/safijari/repos", "events_url": "https://api.github.com/users/safijari/events{/privacy}", "received_events_url": "https://api.github.com/users/safijari/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1106715118, "node_id": "MDU6TGFiZWwxMTA2NzE1MTE4", "url": "https://api.github.com/repos/pypa/auditwheel/labels/has%20PR", "name": "has PR", "color": "f9b766", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-10-18T00:28:31Z", "updated_at": "2018-10-27T17:54:46Z", "closed_at": "2018-10-27T17:54:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "See any of the logs here https://travis-ci.org/pypa/auditwheel/builds/442957798\r\n\r\nThe build says it passed but the log shows 3 failed tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/103", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/103/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/103/events", "html_url": "https://github.com/pypa/auditwheel/issues/103", "id": 368490613, "node_id": "MDU6SXNzdWUzNjg0OTA2MTM=", "number": 103, "title": "Inconsistency detected by ld.so: dl-version.c: 205: _dl_check_map_versions: Assertion `needed != NULL' failed!", "user": {"login": "safijari", "id": 5191844, "node_id": "MDQ6VXNlcjUxOTE4NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5191844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/safijari", "html_url": "https://github.com/safijari", "followers_url": "https://api.github.com/users/safijari/followers", "following_url": "https://api.github.com/users/safijari/following{/other_user}", "gists_url": "https://api.github.com/users/safijari/gists{/gist_id}", "starred_url": "https://api.github.com/users/safijari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/safijari/subscriptions", "organizations_url": "https://api.github.com/users/safijari/orgs", "repos_url": "https://api.github.com/users/safijari/repos", "events_url": "https://api.github.com/users/safijari/events{/privacy}", "received_events_url": "https://api.github.com/users/safijari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-10T04:34:08Z", "updated_at": "2018-10-12T07:31:20Z", "closed_at": "2018-10-12T07:31:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Update for the weary traveler**: You may be using a too old version of `patchelf`, try compiling it from source and using that instead.\r\n\r\nI'm getting this error when I try to import the module after install my repaired wheel in a fresh VM (or trying to import it directly from the .so on the machine where it was built). \r\n```\r\nInconsistency detected by ld.so: dl-version.c: 205: _dl_check_map_versions: Assertion `needed != NULL' failed!\r\n```\r\n\r\nThe wheel is build for this package (https://github.com/safijari/pyOpenKarto/blob/python-devel/setup.py) in python2.7. I run auditwheel and get:\r\n\r\n```\r\n(auditwheel_pipenv-zl3561H8) > $ auditwheel repair py_openkarto-0.0.1-cp27-cp27mu-linux_x86_64.whl --plat linux_x86_64\r\nRepairing py_openkarto-0.0.1-cp27-cp27mu-linux_x86_64.whl\r\nGrafting: /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 -> .libsopenkarto/libstdc++-637c843a.so.6.0.25\r\nGrafting: /usr/lib/x86_64-linux-gnu/libboost_system.so.1.65.1 -> .libsopenkarto/libboost_system-ca31776d.so.1.65.1\r\nGrafting: /lib/x86_64-linux-gnu/libm-2.27.so -> .libsopenkarto/libm-2-24310d2a.27.so\r\nGrafting: /usr/lib/x86_64-linux-gnu/libboost_thread.so.1.65.1 -> .libsopenkarto/libboost_thread-4e4bd896.so.1.65.1\r\nGrafting: /lib/x86_64-linux-gnu/libc-2.27.so -> .libsopenkarto/libc-2-cd7c1a03.27.so\r\nwarning: working around a Linux kernel bug by creating a hole of 2101248 bytes in \u2018.libsopenkarto/libc-2-cd7c1a03.27.so\u2019\r\nGrafting: /lib/x86_64-linux-gnu/libpthread-2.27.so -> .libsopenkarto/libpthread-2-1032040b.27.so\r\nwarning: working around a Linux kernel bug by creating a hole of 2076672 bytes in \u2018.libsopenkarto/libpthread-2-1032040b.27.so\u2019\r\nGrafting: /lib/x86_64-linux-gnu/libgcc_s.so.1 -> .libsopenkarto/libgcc_s-b10d5179.so.1\r\nGrafting: /lib/x86_64-linux-gnu/librt-2.27.so -> .libsopenkarto/librt-2-110b6497.27.so\r\nSetting RPATH: openkarto.so to \"$ORIGIN/.libsopenkarto\"\r\nPrevious filename tags: linux_x86_64\r\nNo filename tags change needed.\r\nPrevious WHEEL info tags: cp27-cp27mu-linux_x86_64\r\nNo WHEEL info change needed.\r\n\r\nFixed-up wheel written to /home/jari/Pipenvs/karto/pyOpenKarto/dist/wheelhouse/py_openkarto-0.0.1-cp27-cp27mu-linux_x86_64.whl\r\n```\r\n\r\nNothing seems wrong with that output as far as I can tell. Pls halp :(\r\n\r\n**Update**: Hmm, I moved all the .so files elsewhere and moved them back one by one, once I moved back this file...\r\n```\r\nGrafting: /usr/lib/x86_64-linux-gnu/libboost_system.so.1.65.1 -> .libsopenkarto/libboost_system-ca31776d.so.1.65.1\r\n```\r\nthat's when I get the crash... hmm. Unsure if this is to blame as I have another package like this which doesn't use boost and gives the same crash after auditwheel.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/102", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/102/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/102/events", "html_url": "https://github.com/pypa/auditwheel/issues/102", "id": 365330224, "node_id": "MDU6SXNzdWUzNjUzMzAyMjQ=", "number": 102, "title": "Latest wheel==0.32.0 breaks auditwheel/wheeltools.py", "user": {"login": "hugovk", "id": 1324225, "node_id": "MDQ6VXNlcjEzMjQyMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1324225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugovk", "html_url": "https://github.com/hugovk", "followers_url": "https://api.github.com/users/hugovk/followers", "following_url": "https://api.github.com/users/hugovk/following{/other_user}", "gists_url": "https://api.github.com/users/hugovk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugovk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugovk/subscriptions", "organizations_url": "https://api.github.com/users/hugovk/orgs", "repos_url": "https://api.github.com/users/hugovk/repos", "events_url": "https://api.github.com/users/hugovk/events{/privacy}", "received_events_url": "https://api.github.com/users/hugovk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 311087099, "node_id": "MDU6TGFiZWwzMTEwODcwOTk=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/help%20wanted", "name": "help wanted", "color": "20a323", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2018-10-01T06:55:23Z", "updated_at": "2020-03-02T21:42:13Z", "closed_at": "2020-03-02T21:42:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Wheel 0.32.0 was released two days ago and has refactored its (private) API, breaking `auditwheel`:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/auditwheel\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/opt/_internal/cpython-3.6.6/lib/python3.6/site-packages/auditwheel/main.py\", line 49, in main\r\n    rval = args.func(args, p)\r\n  File \"/opt/_internal/cpython-3.6.6/lib/python3.6/site-packages/auditwheel/main_repair.py\", line 43, in execute\r\n    from .repair import repair_wheel\r\n  File \"/opt/_internal/cpython-3.6.6/lib/python3.6/site-packages/auditwheel/repair.py\", line 13, in <module>\r\n    from .wheeltools import InWheelCtx, add_platforms\r\n  File \"/opt/_internal/cpython-3.6.6/lib/python3.6/site-packages/auditwheel/wheeltools.py\", line 14, in <module>\r\n    from wheel.util import urlsafe_b64encode, open_for_csv, native  # type: ignore\r\nImportError: cannot import name 'open_for_csv'\r\n```\r\nhttps://travis-ci.org/python-pillow/pillow-wheels/jobs/435427307#L4860\r\n\r\nThe same thing hit multibuild and delocate: https://github.com/pypa/wheel/issues/255.\r\n\r\nNote that wheel officially has no public API:\r\n\r\n> It should be noted that wheel is not intended to be used as a library, and as such there is no stable, public API.\r\n\r\nhttps://github.com/pypa/wheel/issues/255\r\n\r\n(We're working around the issue by pinning to the previous wheel==0.31.1.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/100", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/100/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/100/events", "html_url": "https://github.com/pypa/auditwheel/issues/100", "id": 354877119, "node_id": "MDU6SXNzdWUzNTQ4NzcxMTk=", "number": 100, "title": "Feature Request: Configurable policy document for self-hosted PyPI repositories", "user": {"login": "mkhattab", "id": 642612, "node_id": "MDQ6VXNlcjY0MjYxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/642612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkhattab", "html_url": "https://github.com/mkhattab", "followers_url": "https://api.github.com/users/mkhattab/followers", "following_url": "https://api.github.com/users/mkhattab/following{/other_user}", "gists_url": "https://api.github.com/users/mkhattab/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkhattab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkhattab/subscriptions", "organizations_url": "https://api.github.com/users/mkhattab/orgs", "repos_url": "https://api.github.com/users/mkhattab/repos", "events_url": "https://api.github.com/users/mkhattab/events{/privacy}", "received_events_url": "https://api.github.com/users/mkhattab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-28T19:46:57Z", "updated_at": "2018-10-17T22:36:06Z", "closed_at": "2018-09-27T20:24:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to have a configurable policy document, perhaps a command line option to specify a different policy document that would bundle only the libraries specified in this user-specified policy doc.\r\n\r\nUse case:\r\n\r\nFor organizations with self-hosted PyPI repositories, the process for bundling shared libraries can conform to a standard set by the organization itself. For instance, for orgs that run Alpine Linux, `auditwheel repair` can omit shared libraries common to Alpine Linux, e.g. musl c. \r\n\r\nBy allowing a user to specify their own policy for determining what to dependencies bundle they can reduce wheel sizes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/93", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/93/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/93/events", "html_url": "https://github.com/pypa/auditwheel/issues/93", "id": 325261683, "node_id": "MDU6SXNzdWUzMjUyNjE2ODM=", "number": 93, "title": "Support repairing cffi PyPy extensions", "user": {"login": "daa", "id": 167235, "node_id": "MDQ6VXNlcjE2NzIzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/167235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daa", "html_url": "https://github.com/daa", "followers_url": "https://api.github.com/users/daa/followers", "following_url": "https://api.github.com/users/daa/following{/other_user}", "gists_url": "https://api.github.com/users/daa/gists{/gist_id}", "starred_url": "https://api.github.com/users/daa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daa/subscriptions", "organizations_url": "https://api.github.com/users/daa/orgs", "repos_url": "https://api.github.com/users/daa/repos", "events_url": "https://api.github.com/users/daa/events{/privacy}", "received_events_url": "https://api.github.com/users/daa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-22T11:58:30Z", "updated_at": "2018-07-03T23:17:09Z", "closed_at": "2018-07-03T23:17:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "CFFI extensions compiled for PyPy do not export ``'init' + modname`` nor ``'PyInit_' + modname`` symbols but instead they export ``'_cffi_pypyinit_' + modname`` and thus they are skipped by ``auditwheel``. However actually ``auditwheel`` can repair them. As an example one may take a look at ``python-snappy`` - it uses cffi for PyPy. And proof for using ``_cffi_pypyinit_`` prefix may be found at ``cffi/recompiler.py``.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/91", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/91/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/91/events", "html_url": "https://github.com/pypa/auditwheel/issues/91", "id": 311107822, "node_id": "MDU6SXNzdWUzMTExMDc4MjI=", "number": 91, "title": "Undefined name 'src_name' in auditwheel/repair.py", "user": {"login": "cclauss", "id": 3709715, "node_id": "MDQ6VXNlcjM3MDk3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cclauss", "html_url": "https://github.com/cclauss", "followers_url": "https://api.github.com/users/cclauss/followers", "following_url": "https://api.github.com/users/cclauss/following{/other_user}", "gists_url": "https://api.github.com/users/cclauss/gists{/gist_id}", "starred_url": "https://api.github.com/users/cclauss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cclauss/subscriptions", "organizations_url": "https://api.github.com/users/cclauss/orgs", "repos_url": "https://api.github.com/users/cclauss/repos", "events_url": "https://api.github.com/users/cclauss/events{/privacy}", "received_events_url": "https://api.github.com/users/cclauss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-04T07:00:47Z", "updated_at": "2018-07-16T12:26:30Z", "closed_at": "2018-07-16T12:26:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Should this be __src_path__ instead of __src_name__?\r\n\r\nflake8 testing of https://github.com/pypa/auditwheel on Python 3.6.3\r\n\r\n$ __flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics__\r\n```\r\n./auditwheel/repair.py:120:22: F821 undefined name 'src_name'\r\n        new_soname = src_name\r\n                     ^\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/89", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/89/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/89/events", "html_url": "https://github.com/pypa/auditwheel/issues/89", "id": 295017010, "node_id": "MDU6SXNzdWUyOTUwMTcwMTA=", "number": 89, "title": "When a single wheel contains multiple top-level packages, auditwheel creates separate .libs dirs for each of them", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087098, "node_id": "MDU6TGFiZWwzMTEwODcwOTg=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1106715118, "node_id": "MDU6TGFiZWwxMTA2NzE1MTE4", "url": "https://api.github.com/repos/pypa/auditwheel/labels/has%20PR", "name": "has PR", "color": "f9b766", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-07T06:02:28Z", "updated_at": "2020-01-23T22:26:38Z", "closed_at": "2020-01-23T22:26:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Bug originally filed by @lpsinger at https://github.com/pypa/manylinux/issues/156:\r\n\r\n------\r\n\r\nIf you have a package that contains multiple C extensions that depend on the same shared libraries, then `auditwheel repair` saves duplicate copies of all of the shared libraries. An example is shown below.\r\n\r\nThis makes for packages that are several times larger than necessary. Could `auditwheel repair` sweep up all of the dependencies and put them in a single `.libs` directory, rather than creating duplicates?\r\n\r\n## Example\r\n\r\n```\r\n$ tar -tf lalsuite-6.48-cp27-cp27m-manylinux1_x86_64.whl \r\nlalxml/git_version.py\r\nlalxml/_lalxml.so\r\nlalxml/__init__.py\r\nlalxml/lalxml.py\r\nlalxml/.libs/libgsl-b885fd68.so.0.14.0\r\nlalxml/.libs/libhdf5_hl-04af5206.so.100.0.1\r\nlalxml/.libs/libhdf5-db4e48f9.so.101.0.0\r\nlalxml/.libs/liblalsupport-bd9338fc.so.11.0.0\r\nlalxml/.libs/liblalxml-a864f854.so.2.0.1\r\nlalxml/.libs/libxml2-8ed442f7.so.2.6.26\r\nlalxml/.libs/libz-a147dcb0.so.1.2.3\r\nlalxml/.libs/libfftw3-c8dcb815.so.3.2.4\r\nlalxml/.libs/liblal-8b0d5843.so.14.0.0\r\nlalxml/.libs/libgslcblas-15b2d0fe.so.0.0.0\r\nlalxml/.libs/libfftw3f-044fdcc5.so.3.2.4\r\nlalmetaio/git_version.py\r\nlalmetaio/lalmetaio.py\r\nlalmetaio/_lalmetaio.so\r\nlalmetaio/__init__.py\r\nlalmetaio/.libs/libgsl-b885fd68.so.0.14.0\r\nlalmetaio/.libs/libhdf5_hl-04af5206.so.100.0.1\r\nlalmetaio/.libs/libhdf5-db4e48f9.so.101.0.0\r\nlalmetaio/.libs/liblalsupport-bd9338fc.so.11.0.0\r\nlalmetaio/.libs/liblalmetaio-f4e58690.so.5.0.1\r\nlalmetaio/.libs/libz-a147dcb0.so.1.2.3\r\nlalmetaio/.libs/libfftw3-c8dcb815.so.3.2.4\r\nlalmetaio/.libs/liblal-8b0d5843.so.14.0.0\r\nlalmetaio/.libs/libmetaio-c02fec4d.so.1.1.0\r\nlalmetaio/.libs/libgslcblas-15b2d0fe.so.0.0.0\r\nlalmetaio/.libs/libfftw3f-044fdcc5.so.3.2.4\r\nlal/_lal.so\r\nlal/gpstime.py\r\nlal/lal.py\r\nlal/git_version.py\r\nlal/__init__.py\r\nlal/rate.py\r\nlal/series.py\r\nlal/.libs/libgsl-b885fd68.so.0.14.0\r\nlal/.libs/libhdf5_hl-04af5206.so.100.0.1\r\nlal/.libs/libhdf5-db4e48f9.so.101.0.0\r\nlal/.libs/liblalsupport-bd9338fc.so.11.0.0\r\nlal/.libs/libz-a147dcb0.so.1.2.3\r\nlal/.libs/libfftw3-c8dcb815.so.3.2.4\r\nlal/.libs/liblal-8b0d5843.so.14.0.0\r\nlal/.libs/libgslcblas-15b2d0fe.so.0.0.0\r\nlal/.libs/libfftw3f-044fdcc5.so.3.2.4\r\nlal/utils/cache.py\r\nlal/utils/__init__.py\r\nlal/utils/series.py\r\nlal/spectrum/distributions.py\r\nlal/spectrum/averagespectrum.py\r\nlal/spectrum/__init__.py\r\nlalsuite-6.48.dist-info/WHEEL\r\nlalsuite-6.48.dist-info/METADATA\r\nlalsuite-6.48.dist-info/DESCRIPTION.rst\r\nlalsuite-6.48.dist-info/metadata.json\r\nlalsuite-6.48.dist-info/RECORD\r\nlalsuite-6.48.dist-info/top_level.txt\r\nlalsimulation/git_version.py\r\nlalsimulation/__init__.py\r\nlalsimulation/_lalsimulation.so\r\nlalsimulation/lalsimulation.py\r\nlalsimulation/.libs/libgsl-b885fd68.so.0.14.0\r\nlalsimulation/.libs/libhdf5_hl-04af5206.so.100.0.1\r\nlalsimulation/.libs/liblalsimulation-f35d2299.so.16.0.3\r\nlalsimulation/.libs/libhdf5-db4e48f9.so.101.0.0\r\nlalsimulation/.libs/liblalsupport-bd9338fc.so.11.0.0\r\nlalsimulation/.libs/libz-a147dcb0.so.1.2.3\r\nlalsimulation/.libs/libfftw3-c8dcb815.so.3.2.4\r\nlalsimulation/.libs/liblal-8b0d5843.so.14.0.0\r\nlalsimulation/.libs/libgslcblas-15b2d0fe.so.0.0.0\r\nlalsimulation/.libs/libfftw3f-044fdcc5.so.3.2.4\r\nlalframe/git_version.py\r\nlalframe/frread.py\r\nlalframe/__init__.py\r\nlalframe/lalframe.py\r\nlalframe/_lalframe.so\r\nlalframe/.libs/libgsl-b885fd68.so.0.14.0\r\nlalframe/.libs/libhdf5_hl-04af5206.so.100.0.1\r\nlalframe/.libs/libhdf5-db4e48f9.so.101.0.0\r\nlalframe/.libs/liblalsupport-bd9338fc.so.11.0.0\r\nlalframe/.libs/libFrame-0c783110.so.1.5.0\r\nlalframe/.libs/liblalframe-2600de1c.so.10.0.2\r\nlalframe/.libs/libz-a147dcb0.so.1.2.3\r\nlalframe/.libs/libfftw3-c8dcb815.so.3.2.4\r\nlalframe/.libs/liblal-8b0d5843.so.14.0.0\r\nlalframe/.libs/libgslcblas-15b2d0fe.so.0.0.0\r\nlalframe/.libs/libfftw3f-044fdcc5.so.3.2.4\r\nlalframe/utils/frtools.py\r\nlalframe/utils/__init__.py\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/80", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/80/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/80/events", "html_url": "https://github.com/pypa/auditwheel/issues/80", "id": 252678580, "node_id": "MDU6SXNzdWUyNTI2Nzg1ODA=", "number": 80, "title": "Whitelist libresolv?", "user": {"login": "bluetech", "id": 1223550, "node_id": "MDQ6VXNlcjEyMjM1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1223550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluetech", "html_url": "https://github.com/bluetech", "followers_url": "https://api.github.com/users/bluetech/followers", "following_url": "https://api.github.com/users/bluetech/following{/other_user}", "gists_url": "https://api.github.com/users/bluetech/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluetech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluetech/subscriptions", "organizations_url": "https://api.github.com/users/bluetech/orgs", "repos_url": "https://api.github.com/users/bluetech/repos", "events_url": "https://api.github.com/users/bluetech/events{/privacy}", "received_events_url": "https://api.github.com/users/bluetech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-24T17:45:41Z", "updated_at": "2017-11-17T20:48:13Z", "closed_at": "2017-11-17T20:48:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "This library is part of glibc (similarly to libc, libm, librt, libpthread etc which are already whitelisted) and uses the same symbol versioning. I wonder if perhaps it is better not to bundle it?\r\n\r\nContext: I ran into some trouble with the psycopg2 wheel, please see the details here: https://github.com/psycopg/psycopg2-wheels/issues/2. If I replace the bundled version with the system version it works fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/78", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/78/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/78/events", "html_url": "https://github.com/pypa/auditwheel/issues/78", "id": 243242601, "node_id": "MDU6SXNzdWUyNDMyNDI2MDE=", "number": 78, "title": "policy.json: Add libXt.so.6 to whilelist", "user": {"login": "jcfr", "id": 219043, "node_id": "MDQ6VXNlcjIxOTA0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/219043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcfr", "html_url": "https://github.com/jcfr", "followers_url": "https://api.github.com/users/jcfr/followers", "following_url": "https://api.github.com/users/jcfr/following{/other_user}", "gists_url": "https://api.github.com/users/jcfr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcfr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcfr/subscriptions", "organizations_url": "https://api.github.com/users/jcfr/orgs", "repos_url": "https://api.github.com/users/jcfr/repos", "events_url": "https://api.github.com/users/jcfr/events{/privacy}", "received_events_url": "https://api.github.com/users/jcfr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-16T14:15:58Z", "updated_at": "2017-07-17T20:25:41Z", "closed_at": "2017-07-17T20:25:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Working on creating wheels for VTK, I found out that `libXt.so.6` wasn't specified in [policy.json](https://github.com/pypa/auditwheel/blob/3163c09849c4f71a571e182a6fe3eb6edf4f471a/auditwheel/policy/policy.json#L19-L27) and was copied in `.libs` directory.\r\n\r\nWould it make sense to add it ?\r\n\r\nWhat could I do to check that is it reasonable to add this library to the whitelist ? Is it mater of having a consistent API/API across all versions of linux we support ?\r\n\r\nSee https://en.wikipedia.org/wiki/X_Toolkit_Intrinsics \r\n\r\nCc: @matthew-brett @thewtex", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/77", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/77/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/77/events", "html_url": "https://github.com/pypa/auditwheel/issues/77", "id": 240794520, "node_id": "MDU6SXNzdWUyNDA3OTQ1MjA=", "number": 77, "title": "RecursionError in auditwheel show", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-05T22:31:06Z", "updated_at": "2018-09-02T02:36:22Z", "closed_at": "2018-09-02T02:36:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running auditwheel show on a wheel of https://github.com/anntzer/mpl_cairo compiled with gcc7.1 (which is definitely not manylinux1-compatible, I was just doing some tests) gives the following traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/antony/.local/bin/auditwheel\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/antony/.local/lib/python3.6/site-packages/auditwheel/main.py\", line 49, in main\r\n    rval = args.func(args, p)\r\n  File \"/home/antony/.local/lib/python3.6/site-packages/auditwheel/main_show.py\", line 28, in execute\r\n    winfo = analyze_wheel_abi(args.WHEEL_FILE)\r\n  File \"/home/antony/.local/lib/python3.6/site-packages/auditwheel/wheel_abi.py\", line 73, in analyze_wheel_abi\r\n    get_wheel_elfdata(wheel_fn)\r\n  File \"/home/antony/.local/lib/python3.6/site-packages/auditwheel/wheel_abi.py\", line 56, in get_wheel_elfdata\r\n    ctx.path)\r\n  File \"/home/antony/.local/lib/python3.6/site-packages/auditwheel/policy/external_references.py\", line 53, in lddtree_external_references\r\n    whitelist)  # type: List[str]\r\n  File \"/home/antony/.local/lib/python3.6/site-packages/auditwheel/policy/external_references.py\", line 39, in get_req_external\r\n    whitelist) for lib in libs), libs)\r\n  File \"/home/antony/.local/lib/python3.6/site-packages/auditwheel/policy/external_references.py\", line 39, in <genexpr>\r\n    whitelist) for lib in libs), libs)\r\n\r\n<elided>\r\n\r\n  File \"/home/antony/.local/lib/python3.6/site-packages/auditwheel/policy/external_references.py\", line 39, in <genexpr>\r\n    whitelist) for lib in libs), libs)\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n```\r\n\r\n(Python 3.6.1 ArchLinux, auditwheel from pypi).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/75", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/75/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/75/events", "html_url": "https://github.com/pypa/auditwheel/issues/75", "id": 230868446, "node_id": "MDU6SXNzdWUyMzA4Njg0NDY=", "number": 75, "title": "Commit bit for @ehashman?", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-23T22:32:26Z", "updated_at": "2017-05-24T02:40:45Z", "closed_at": "2017-05-24T02:40:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI'd like to propose @ehashman for a commit bit. See #43, #73 for some previous contributions, and she's interested in getting more involved with auditwheel maintenance.\r\n\r\nAny objections? @rmcgibbo?\r\n\r\nAnd mechanically, I think we would need someone with admin rights to the pypa organization to invite her to the manylinux team? @dstufft?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/72", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/72/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/72/events", "html_url": "https://github.com/pypa/auditwheel/issues/72", "id": 230815815, "node_id": "MDU6SXNzdWUyMzA4MTU4MTU=", "number": 72, "title": "ValueError in versioned symbols", "user": {"login": "reaperhulk", "id": 161495, "node_id": "MDQ6VXNlcjE2MTQ5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/161495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reaperhulk", "html_url": "https://github.com/reaperhulk", "followers_url": "https://api.github.com/users/reaperhulk/followers", "following_url": "https://api.github.com/users/reaperhulk/following{/other_user}", "gists_url": "https://api.github.com/users/reaperhulk/gists{/gist_id}", "starred_url": "https://api.github.com/users/reaperhulk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reaperhulk/subscriptions", "organizations_url": "https://api.github.com/users/reaperhulk/orgs", "repos_url": "https://api.github.com/users/reaperhulk/repos", "events_url": "https://api.github.com/users/reaperhulk/events{/privacy}", "received_events_url": "https://api.github.com/users/reaperhulk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-23T19:20:53Z", "updated_at": "2017-05-24T03:38:56Z", "closed_at": "2017-05-24T03:38:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When compiling a manylinux1 wheel against OpenSSL 1.1.0 the following exception is raised:\r\n\r\n```\r\n  File \"/usr/local/bin/auditwheel\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/opt/_internal/cpython-3.6.0/lib/python3.6/site-packages/auditwheel/main.py\", line 49, in main\r\n    rval = args.func(args, p)\r\n  File \"/opt/_internal/cpython-3.6.0/lib/python3.6/site-packages/auditwheel/main_repair.py\", line 60, in execute\r\n    wheel_abi = analyze_wheel_abi(args.WHEEL_FILE)\r\n  File \"/opt/_internal/cpython-3.6.0/lib/python3.6/site-packages/auditwheel/wheel_abi.py\", line 82, in analyze_wheel_abi\r\n    symbol_policy = versioned_symbols_policy(versioned_symbols)\r\n  File \"/opt/_internal/cpython-3.6.0/lib/python3.6/site-packages/auditwheel/policy/versioned_symbols.py\", line 28, in versioned_symbols_policy\r\n    sym_name, _ = symbol.split(\"_\", 2)\r\nValueError: too many values to unpack (expected 2)\r\n```\r\n\r\nLooking in PDB the issue is that the `symbol` is expected to look something like `GLIBC_2.2.5`, but OpenSSL 1.1.0 is `OPENSSL_1_1_0`, which results in too many values.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/69", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/69/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/69/events", "html_url": "https://github.com/pypa/auditwheel/issues/69", "id": 225727943, "node_id": "MDU6SXNzdWUyMjU3Mjc5NDM=", "number": 69, "title": "Auditwheel stripping rpath for relative paths", "user": {"login": "vinther", "id": 573145, "node_id": "MDQ6VXNlcjU3MzE0NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/573145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinther", "html_url": "https://github.com/vinther", "followers_url": "https://api.github.com/users/vinther/followers", "following_url": "https://api.github.com/users/vinther/following{/other_user}", "gists_url": "https://api.github.com/users/vinther/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinther/subscriptions", "organizations_url": "https://api.github.com/users/vinther/orgs", "repos_url": "https://api.github.com/users/vinther/repos", "events_url": "https://api.github.com/users/vinther/events{/privacy}", "received_events_url": "https://api.github.com/users/vinther/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087098, "node_id": "MDU6TGFiZWwzMTEwODcwOTg=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 311087099, "node_id": "MDU6TGFiZWwzMTEwODcwOTk=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/help%20wanted", "name": "help wanted", "color": "20a323", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-02T15:15:25Z", "updated_at": "2020-06-22T21:36:08Z", "closed_at": "2020-06-22T21:36:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI'm developing a library that has several C++ extensions, some of which are linked internally. For each extension library that has a dependency, I add the relative path (with $ORIGIN) to the linked library, as such:\r\n\r\n    runtime_library_dirs.append(\"\\$ORIGIN/%s\" % <rel-path-between modA.so and modB.so>)\r\n\r\nThis gives me .so files with dependencies:\r\n\r\n```\r\n 0x0000000000000001 (NEEDED)             Shared library: [libptf77blas.so.3]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libptcblas.so.3]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libatlas.so.3]\r\n 0x0000000000000001 (NEEDED)             Shared library: [modA.so]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libstdc++.so.6]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libm.so.6]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libgcc_s.so.1]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libpthread.so.0]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]\r\n 0x000000000000000e (SONAME)             Library soname: [modB.so]\r\n 0x000000000000001d (RUNPATH)            Library runpath: [$ORIGIN/relpath/to/modA]\r\n```\r\n\r\n\r\nHowever, when using the auditwheel tool, the runpath is stripped and replaced with $ORIGIN/../../../.libs. As such, my library (here modA.so) can no longer be found:\r\n\r\n```\r\n 0x0000000000000001 (NEEDED)             Shared library: [libptf77blas-536e8f3e.so.3.0]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libptcblas-f940d3f1.so.3.0]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libatlas-dd66cbe8.so.3.0]\r\n 0x0000000000000001 (NEEDED)             Shared library: [modA.so]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libstdc++.so.6]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libm.so.6]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libgcc_s.so.1]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libpthread.so.0]\r\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]\r\n 0x000000000000000e (SONAME)             Library soname: [modB.so]\r\n 0x000000000000001d (RUNPATH)            Library runpath: [$ORIGIN/../../.libs]\r\n```\r\n\r\nIt would be really nice if there was a way to have the runpath appended with the path to the grafted libraries, and not replaced. Is there some solution to this? Or, am I missing something?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/68", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/68/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/68/events", "html_url": "https://github.com/pypa/auditwheel/issues/68", "id": 225720958, "node_id": "MDU6SXNzdWUyMjU3MjA5NTg=", "number": 68, "title": "Auditwheel 1.6 breaks numpy / matplotlib wheel builds", "user": {"login": "matthew-brett", "id": 67612, "node_id": "MDQ6VXNlcjY3NjEy", "avatar_url": "https://avatars2.githubusercontent.com/u/67612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-brett", "html_url": "https://github.com/matthew-brett", "followers_url": "https://api.github.com/users/matthew-brett/followers", "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions", "organizations_url": "https://api.github.com/users/matthew-brett/orgs", "repos_url": "https://api.github.com/users/matthew-brett/repos", "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-brett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rmcgibbo", "id": 641278, "node_id": "MDQ6VXNlcjY0MTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmcgibbo", "html_url": "https://github.com/rmcgibbo", "followers_url": "https://api.github.com/users/rmcgibbo/followers", "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}", "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions", "organizations_url": "https://api.github.com/users/rmcgibbo/orgs", "repos_url": "https://api.github.com/users/rmcgibbo/repos", "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}", "received_events_url": "https://api.github.com/users/rmcgibbo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmcgibbo", "id": 641278, "node_id": "MDQ6VXNlcjY0MTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmcgibbo", "html_url": "https://github.com/rmcgibbo", "followers_url": "https://api.github.com/users/rmcgibbo/followers", "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}", "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions", "organizations_url": "https://api.github.com/users/rmcgibbo/orgs", "repos_url": "https://api.github.com/users/rmcgibbo/repos", "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}", "received_events_url": "https://api.github.com/users/rmcgibbo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 22, "created_at": "2017-05-02T14:54:05Z", "updated_at": "2017-07-26T09:40:32Z", "closed_at": "2017-07-26T09:40:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Auditwheel 1.6 seems to be failing to detect and graft the dependencies of the wheels.\r\n\r\nFor new failure example see:  \r\n\r\nhttps://api.travis-ci.org/jobs/227872764/log.txt?deansi=true\r\n\r\nFor failure fixed by downgrading auditwheel to 1.5:\r\n\r\nhttps://api.travis-ci.org/jobs/227948047/log.txt?deansi=true\r\n\r\nWith the downgrade, I see this in the log (second link, just above):\r\n\r\n```\r\nGrafting: /usr/local/lib/libopenblasp-r0.2.18.so -> numpy/.libs/libopenblasp-r0-39a31c03.2.18.so\r\nGrafting: /usr/lib64/libgfortran.so.3.0.0 -> numpy/.libs/libgfortran-ed201abd.so.3.0.0\r\nSetting RPATH: numpy/core/multiarray.so to \"$ORIGIN/../.libs\"\r\nSetting RPATH: numpy/linalg/_umath_linalg.so to \"$ORIGIN/../.libs\"\r\nSetting RPATH: numpy/linalg/lapack_lite.so to \"$ORIGIN/../.libs\"\r\n```\r\n\r\nThese are missing in the run with new auditwheel 1.6 (first link above).\r\n\r\nSeems to be the same problem for matplotlib:\r\n\r\nhttps://api.travis-ci.org/jobs/227868822/log.txt?deansi=true\r\n\r\nHere it looks like the libpng library was not grafted into the matplotlib wheel.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/67", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/67/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/67/events", "html_url": "https://github.com/pypa/auditwheel/issues/67", "id": 221240866, "node_id": "MDU6SXNzdWUyMjEyNDA4NjY=", "number": 67, "title": "does `auditwheel` check whether referenced versions of `glibc` comply to PEP 513?", "user": {"login": "johnyf", "id": 3135273, "node_id": "MDQ6VXNlcjMxMzUyNzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3135273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnyf", "html_url": "https://github.com/johnyf", "followers_url": "https://api.github.com/users/johnyf/followers", "following_url": "https://api.github.com/users/johnyf/following{/other_user}", "gists_url": "https://api.github.com/users/johnyf/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnyf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnyf/subscriptions", "organizations_url": "https://api.github.com/users/johnyf/orgs", "repos_url": "https://api.github.com/users/johnyf/repos", "events_url": "https://api.github.com/users/johnyf/events{/privacy}", "received_events_url": "https://api.github.com/users/johnyf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-04-12T12:07:05Z", "updated_at": "2017-04-30T21:17:05Z", "closed_at": "2017-04-28T17:03:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using `auditwheel` on a wheel that:\r\n\r\n- contains a compiled Cython extension\r\n- is linked dynamically to CPython\r\n- contains a statically linked third-party library\r\n- was built on a Debian Stretch (`Linux dhcp-7-187 4.9.0-1-amd64 #1 SMP Debian 4.9.6-3 (2017-01-28) x86_64 GNU/Linux`)\r\n\r\nthe output is:\r\n\r\n```\r\nauditwheel show dist/dd-0.5.2.dev0+f9ea13bad6ef42cccbe0df9dafd66bea265a490d-cp35-cp35m-linux_x86_64.whl \r\n\r\ndd-0.5.2.dev0+f9ea13bad6ef42cccbe0df9dafd66bea265a490d-cp35-cp35m-linu\r\nx_x86_64.whl is consistent with the following platform tag:\r\n\"manylinux1_x86_64\".\r\n\r\nThe wheel references external versioned symbols in these system-\r\nprovided shared libraries: libc.so.6 with versions {'GLIBC_2.14',\r\n'GLIBC_2.7', 'GLIBC_2.2.5'}\r\n\r\nThe following external shared libraries are required by the wheel:\r\n{\r\n    \"libc.so.6\": \"/lib/x86_64-linux-gnu/libc-2.24.so\",\r\n    \"libpthread.so.0\": \"/lib/x86_64-linux-gnu/libpthread-2.24.so\"\r\n}\r\n```\r\n\r\nI am confused by the fact that GLIBC 2.14 and 2.7 are listed, but [PEP 513](https://www.python.org/dev/peps/pep-0513/#the-manylinux1-policy) requires that `GLIBC <= 2.5` (which agrees with [`policy.json`](https://github.com/pypa/auditwheel/blob/7a8bc5efc5f81af83da5752b67a00471d8d075cd/auditwheel/policy/policy.json)). Looking closer at the extension module:\r\n\r\n```\r\nldd -r -v build/lib.linux-x86_64-3.5/dd/cudd.cpython-35m-x86_64-linux-gnu.so \r\n\tlinux-vdso.so.1 (0x00007ffe1328e000)\r\n\tlibpython3.5m.so.1.0 => /some/path/python35/lib/libpython3.5m.so.1.0 (0x00007f3d50ed5000)\r\n\tlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f3d50c75000)\r\n\tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f3d508d7000)\r\n\tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f3d506d3000)\r\n\tlibutil.so.1 => /lib/x86_64-linux-gnu/libutil.so.1 (0x00007f3d504d0000)\r\n\tlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f3d501ca000)\r\n\t/lib64/ld-linux-x86-64.so.2 (0x00005580a0e8a000)\r\n\r\n\tVersion information:\r\n\tbuild/lib.linux-x86_64-3.5/dd/cudd.cpython-35m-x86_64-linux-gnu.so:\r\n\t\tlibc.so.6 (GLIBC_2.14) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.7) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.2.5) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t/some/path/python35/lib/libpython3.5m.so.1.0:\r\n\t\tlibdl.so.2 (GLIBC_2.2.5) => /lib/x86_64-linux-gnu/libdl.so.2\r\n\t\tlibutil.so.1 (GLIBC_2.2.5) => /lib/x86_64-linux-gnu/libutil.so.1\r\n\t\tlibm.so.6 (GLIBC_2.2.5) => /lib/x86_64-linux-gnu/libm.so.6\r\n\t\tlibpthread.so.0 (GLIBC_2.3.2) => /lib/x86_64-linux-gnu/libpthread.so.0\r\n\t\tlibpthread.so.0 (GLIBC_2.2.5) => /lib/x86_64-linux-gnu/libpthread.so.0\r\n\t\tlibc.so.6 (GLIBC_2.7) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.14) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.3.4) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.9) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.17) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.6) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.4) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.2.5) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.3) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t/lib/x86_64-linux-gnu/libpthread.so.0:\r\n\t\tld-linux-x86-64.so.2 (GLIBC_2.2.5) => /lib64/ld-linux-x86-64.so.2\r\n\t\tld-linux-x86-64.so.2 (GLIBC_PRIVATE) => /lib64/ld-linux-x86-64.so.2\r\n\t\tlibc.so.6 (GLIBC_2.14) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.3.2) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.2.5) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_PRIVATE) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t/lib/x86_64-linux-gnu/libc.so.6:\r\n\t\tld-linux-x86-64.so.2 (GLIBC_2.3) => /lib64/ld-linux-x86-64.so.2\r\n\t\tld-linux-x86-64.so.2 (GLIBC_PRIVATE) => /lib64/ld-linux-x86-64.so.2\r\n\t/lib/x86_64-linux-gnu/libdl.so.2:\r\n\t\tld-linux-x86-64.so.2 (GLIBC_PRIVATE) => /lib64/ld-linux-x86-64.so.2\r\n\t\tlibc.so.6 (GLIBC_PRIVATE) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.2.5) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t/lib/x86_64-linux-gnu/libutil.so.1:\r\n\t\tlibc.so.6 (GLIBC_PRIVATE) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_2.2.5) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t/lib/x86_64-linux-gnu/libm.so.6:\r\n\t\tld-linux-x86-64.so.2 (GLIBC_PRIVATE) => /lib64/ld-linux-x86-64.so.2\r\n\t\tlibc.so.6 (GLIBC_2.2.5) => /lib/x86_64-linux-gnu/libc.so.6\r\n\t\tlibc.so.6 (GLIBC_PRIVATE) => /lib/x86_64-linux-gnu/libc.so.6\r\n```\r\n\r\nThe various GLIBC dependencies are on `/lib/x86_64-linux-gnu/libc.so.6`. Running the library says:\r\n\r\n```\r\n/lib/x86_64-linux-gnu/libc.so.6\r\nGNU C Library (Debian GLIBC 2.24-9) stable release version 2.24, by Roland McGrath et al.\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\n...\r\n```\r\n\r\nSo, does `auditwheel` not check for the referenced versions?\r\n\r\nThe source code suggests that the version sets [are checked](https://github.com/pypa/auditwheel/blob/7a8bc5efc5f81af83da5752b67a00471d8d075cd/auditwheel/policy/versioned_symbols.py#L16), but there is also a [whitelist](https://github.com/pypa/auditwheel/blob/7a8bc5efc5f81af83da5752b67a00471d8d075cd/auditwheel/policy/policy.json#L24) that seems to be [processed](https://github.com/pypa/auditwheel/blob/05afbdf81ad14687bd3abb469a1ecc127c5ccf0b/auditwheel/policy/external_references.py#L50) in parallel with versioned symbols, inside [`wheel_abi`](https://github.com/pypa/auditwheel/blob/05afbdf81ad14687bd3abb469a1ecc127c5ccf0b/auditwheel/wheel_abi.py#L42).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/66", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/66/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/66/events", "html_url": "https://github.com/pypa/auditwheel/issues/66", "id": 218044225, "node_id": "MDU6SXNzdWUyMTgwNDQyMjU=", "number": 66, "title": "auditwheel repair does not graft shared library dependencies", "user": {"login": "kozo2", "id": 12192, "node_id": "MDQ6VXNlcjEyMTky", "avatar_url": "https://avatars0.githubusercontent.com/u/12192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kozo2", "html_url": "https://github.com/kozo2", "followers_url": "https://api.github.com/users/kozo2/followers", "following_url": "https://api.github.com/users/kozo2/following{/other_user}", "gists_url": "https://api.github.com/users/kozo2/gists{/gist_id}", "starred_url": "https://api.github.com/users/kozo2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kozo2/subscriptions", "organizations_url": "https://api.github.com/users/kozo2/orgs", "repos_url": "https://api.github.com/users/kozo2/repos", "events_url": "https://api.github.com/users/kozo2/events{/privacy}", "received_events_url": "https://api.github.com/users/kozo2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-30T00:02:36Z", "updated_at": "2017-03-30T02:07:20Z", "closed_at": "2017-03-30T02:07:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know why, auditwheel does not graft the shared library dependencies to my manylinux wheel.\r\nBelow is the screen output.\r\n\r\n```\r\n[root@d52c3a246527 dist]# auditwheel -v show ecell-4.1.0-cp35-cp35m-linux_x86_64.whl\r\nINFO:auditwheel.wheel_abi:processing: ecell4/bd.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.lddtree:linker ldpaths: {'conf': ['/lib', '/lib64/', '/usr/lib', '/usr/lib64'], 'env': ['/opt/rh/devtoolset-2/root/usr/lib64', '/opt/rh/devtoolset-2/root/usr/lib', '/usr/local/lib64', '/usr/local/lib'], 'interp': []}\r\nINFO:auditwheel.wheel_abi:processing: ecell4/core.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/egfrd.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/gillespie.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/meso.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/ode.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/spatiocyte.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:{\r\n    \"linux_x86_64\": {\r\n        \"libs\": {\r\n            \"libm.so.6\": \"/lib64/libm-2.5.so\",\r\n            \"libgcc_s.so.1\": \"/lib64/libgcc_s-4.1.2-20080825.so.1\",\r\n            \"libhdf5_cpp.so.11\": \"/usr/local/lib/libhdf5_cpp.so.11.0.0\",\r\n            \"libc.so.6\": \"/lib64/libc-2.5.so\",\r\n            \"libhdf5.so.10\": \"/usr/local/lib/libhdf5.so.10.1.0\",\r\n            \"librt.so.1\": \"/lib64/librt-2.5.so\",\r\n            \"libgsl.so.0\": \"/usr/lib64/libgsl.so.0.14.0\",\r\n            \"libpthread.so.0\": \"/lib64/libpthread-2.5.so\",\r\n            \"libgslcblas.so.0\": \"/usr/lib64/libgslcblas.so.0.0.0\",\r\n            \"libdl.so.2\": \"/lib64/libdl-2.5.so\",\r\n            \"libstdc++.so.6\": \"/usr/lib64/libstdc++.so.6.0.8\"\r\n        },\r\n        \"priority\": 0\r\n    },\r\n    \"manylinux1_x86_64\": {\r\n        \"libs\": {\r\n            \"libgsl.so.0\": \"/usr/lib64/libgsl.so.0.14.0\",\r\n            \"libhdf5_cpp.so.11\": \"/usr/local/lib/libhdf5_cpp.so.11.0.0\",\r\n            \"libgslcblas.so.0\": \"/usr/lib64/libgslcblas.so.0.0.0\",\r\n            \"libhdf5.so.10\": \"/usr/local/lib/libhdf5.so.10.1.0\"\r\n        },\r\n        \"priority\": 100\r\n    }\r\n}\r\n\r\necell-4.1.0-cp35-cp35m-linux_x86_64.whl is consistent with the\r\nfollowing platform tag: \"linux_x86_64\".\r\n\r\nThe wheel references external versioned symbols in these system-\r\nprovided shared libraries: libgcc_s.so.1 with versions {'GCC_3.0'},\r\nlibpthread.so.0 with versions {'GLIBC_2.2.5'}, libc.so.6 with versions\r\n{'GLIBC_2.2.5', 'GLIBC_2.4', 'GLIBC_2.3.4'}, libm.so.6 with versions\r\n{'GLIBC_2.2.5'}, libstdc++.so.6 with versions {'GLIBCXX_3.4',\r\n'CXXABI_1.3.1', 'CXXABI_1.3'}\r\n\r\nThe following external shared libraries are required by the wheel:\r\n{\r\n    \"libc.so.6\": \"/lib64/libc-2.5.so\",\r\n    \"libdl.so.2\": \"/lib64/libdl-2.5.so\",\r\n    \"libgcc_s.so.1\": \"/lib64/libgcc_s-4.1.2-20080825.so.1\",\r\n    \"libgsl.so.0\": \"/usr/lib64/libgsl.so.0.14.0\",\r\n    \"libgslcblas.so.0\": \"/usr/lib64/libgslcblas.so.0.0.0\",\r\n    \"libhdf5.so.10\": \"/usr/local/lib/libhdf5.so.10.1.0\",\r\n    \"libhdf5_cpp.so.11\": \"/usr/local/lib/libhdf5_cpp.so.11.0.0\",\r\n    \"libm.so.6\": \"/lib64/libm-2.5.so\",\r\n    \"libpthread.so.0\": \"/lib64/libpthread-2.5.so\",\r\n    \"librt.so.1\": \"/lib64/librt-2.5.so\",\r\n    \"libstdc++.so.6\": \"/usr/lib64/libstdc++.so.6.0.8\"\r\n}\r\n\r\nIn order to achieve the tag platform tag \"manylinux1_x86_64\" the\r\nfollowing shared library dependencies will need to be eliminated:\r\n\r\nlibgsl.so.0, libgslcblas.so.0, libhdf5.so.10, libhdf5_cpp.so.11\r\n[root@d52c3a246527 dist]# auditwheel -v repair ecell-4.1.0-cp35-cp35m-linux_x86_64.whl\r\nRepairing ecell-4.1.0-cp35-cp35m-linux_x86_64.whl\r\nINFO:auditwheel.wheel_abi:processing: ecell4/bd.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.lddtree:linker ldpaths: {'conf': ['/lib', '/lib64/', '/usr/lib', '/usr/lib64'], 'env': ['/opt/rh/devtoolset-2/root/usr/lib64', '/opt/rh/devtoolset-2/root/usr/lib', '/usr/local/lib64', '/usr/local/lib'], 'interp': []}\r\nINFO:auditwheel.wheel_abi:processing: ecell4/core.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/egfrd.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/gillespie.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/meso.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/ode.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/spatiocyte.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:{\r\n    \"linux_x86_64\": {\r\n        \"libs\": {\r\n            \"libhdf5.so.10\": \"/usr/local/lib/libhdf5.so.10.1.0\",\r\n            \"libpthread.so.0\": \"/lib64/libpthread-2.5.so\",\r\n            \"libc.so.6\": \"/lib64/libc-2.5.so\",\r\n            \"libstdc++.so.6\": \"/usr/lib64/libstdc++.so.6.0.8\",\r\n            \"libgsl.so.0\": \"/usr/lib64/libgsl.so.0.14.0\",\r\n            \"libm.so.6\": \"/lib64/libm-2.5.so\",\r\n            \"libdl.so.2\": \"/lib64/libdl-2.5.so\",\r\n            \"librt.so.1\": \"/lib64/librt-2.5.so\",\r\n            \"libhdf5_cpp.so.11\": \"/usr/local/lib/libhdf5_cpp.so.11.0.0\",\r\n            \"libgcc_s.so.1\": \"/lib64/libgcc_s-4.1.2-20080825.so.1\",\r\n            \"libgslcblas.so.0\": \"/usr/lib64/libgslcblas.so.0.0.0\"\r\n        },\r\n        \"priority\": 0\r\n    },\r\n    \"manylinux1_x86_64\": {\r\n        \"libs\": {\r\n            \"libhdf5_cpp.so.11\": \"/usr/local/lib/libhdf5_cpp.so.11.0.0\",\r\n            \"libgsl.so.0\": \"/usr/lib64/libgsl.so.0.14.0\",\r\n            \"libgslcblas.so.0\": \"/usr/lib64/libgslcblas.so.0.0.0\",\r\n            \"libhdf5.so.10\": \"/usr/local/lib/libhdf5.so.10.1.0\"\r\n        },\r\n        \"priority\": 100\r\n    }\r\n}\r\nGrafting: /usr/local/lib/libhdf5_cpp.so.11.0.0 -> ecell4/.libs/libhdf5_cpp-44aff6ad.so.11.0.0\r\nSetting RPATH: ecell4/.libs/libhdf5_cpp-44aff6ad.so.11.0.0 to \"$ORIGIN/.\"\r\nGrafting: /usr/lib64/libgsl.so.0.14.0 -> ecell4/.libs/libgsl-b885fd68.so.0.14.0\r\nGrafting: /usr/lib64/libgslcblas.so.0.0.0 -> ecell4/.libs/libgslcblas-15b2d0fe.so.0.0.0\r\nGrafting: /usr/local/lib/libhdf5.so.10.1.0 -> ecell4/.libs/libhdf5-669db1ee.so.10.1.0\r\nSetting RPATH: ecell4/bd.cpython-35m-x86_64-linux-gnu.so to \"$ORIGIN/.libs\"\r\nSetting RPATH: ecell4/core.cpython-35m-x86_64-linux-gnu.so to \"$ORIGIN/.libs\"\r\nSetting RPATH: ecell4/egfrd.cpython-35m-x86_64-linux-gnu.so to \"$ORIGIN/.libs\"\r\nSetting RPATH: ecell4/gillespie.cpython-35m-x86_64-linux-gnu.so to \"$ORIGIN/.libs\"\r\nSetting RPATH: ecell4/meso.cpython-35m-x86_64-linux-gnu.so to \"$ORIGIN/.libs\"\r\nSetting RPATH: ecell4/ode.cpython-35m-x86_64-linux-gnu.so to \"$ORIGIN/.libs\"\r\nSetting RPATH: ecell4/spatiocyte.cpython-35m-x86_64-linux-gnu.so to \"$ORIGIN/.libs\"\r\nPrevious filename tags: linux_x86_64\r\nNew filename tags: manylinux1_x86_64\r\nPrevious WHEEL info tags: cp35-cp35m-linux_x86_64\r\nNew WHEEL info tags: cp35-cp35m-manylinux1_x86_64\r\n\r\nFixed-up wheel written to /root/ecell4/python/dist/wheelhouse/ecell-4.1.0-cp35-cp35m-manylinux1_x86_64.whl\r\n[root@d52c3a246527 dist]# auditwheel -v show wheelhouse/ecell-4.1.0-cp35-cp35m-manylinux1_x86_64.whl\r\nINFO:auditwheel.wheel_abi:processing: ecell4/core.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.lddtree:linker ldpaths: {'conf': ['/lib', '/lib64/', '/usr/lib', '/usr/lib64'], 'env': ['/opt/rh/devtoolset-2/root/usr/lib64', '/opt/rh/devtoolset-2/root/usr/lib', '/usr/local/lib64', '/usr/local/lib'], 'interp': []}\r\nINFO:auditwheel.wheel_abi:processing: ecell4/gillespie.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/bd.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/ode.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/spatiocyte.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/meso.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:processing: ecell4/egfrd.cpython-35m-x86_64-linux-gnu.so\r\nINFO:auditwheel.wheel_abi:{\r\n    \"linux_x86_64\": {\r\n        \"libs\": {\r\n            \"libstdc++.so.6\": \"/usr/lib64/libstdc++.so.6.0.8\",\r\n            \"libgcc_s.so.1\": \"/lib64/libgcc_s-4.1.2-20080825.so.1\",\r\n            \"libpthread.so.0\": \"/lib64/libpthread-2.5.so\",\r\n            \"libm.so.6\": \"/lib64/libm-2.5.so\",\r\n            \"libdl.so.2\": \"/lib64/libdl-2.5.so\",\r\n            \"librt.so.1\": \"/lib64/librt-2.5.so\",\r\n            \"libc.so.6\": \"/lib64/libc-2.5.so\"\r\n        },\r\n        \"priority\": 0\r\n    },\r\n    \"manylinux1_x86_64\": {\r\n        \"libs\": {},\r\n        \"priority\": 100\r\n    }\r\n}\r\n\r\necell-4.1.0-cp35-cp35m-manylinux1_x86_64.whl is consistent with the\r\nfollowing platform tag: \"manylinux1_x86_64\".\r\n\r\nThe wheel references external versioned symbols in these system-\r\nprovided shared libraries: libgcc_s.so.1 with versions {'GCC_3.0'},\r\nlibpthread.so.0 with versions {'GLIBC_2.2.5'}, libc.so.6 with versions\r\n{'GLIBC_2.2.5', 'GLIBC_2.3.4', 'GLIBC_2.4'}, libm.so.6 with versions\r\n{'GLIBC_2.2.5'}, libstdc++.so.6 with versions {'CXXABI_1.3.1',\r\n'CXXABI_1.3', 'GLIBCXX_3.4'}\r\n\r\nThe following external shared libraries are required by the wheel:\r\n{\r\n    \"libc.so.6\": \"/lib64/libc-2.5.so\",\r\n    \"libdl.so.2\": \"/lib64/libdl-2.5.so\",\r\n    \"libgcc_s.so.1\": \"/lib64/libgcc_s-4.1.2-20080825.so.1\",\r\n    \"libm.so.6\": \"/lib64/libm-2.5.so\",\r\n    \"libpthread.so.0\": \"/lib64/libpthread-2.5.so\",\r\n    \"librt.so.1\": \"/lib64/librt-2.5.so\",\r\n    \"libstdc++.so.6\": \"/usr/lib64/libstdc++.so.6.0.8\"\r\n}\r\n```\r\n\r\nIn my manylinux wheel, it seems that hdf5 and gsl are not grafted by auditwheel.\r\nI would be grateful if you could give me some clues on this.\r\n\r\nThis can be reproduced with https://github.com/ecell/ecell4-manylinux/blob/v4.1.0/.travis.yml\r\nI used the latest `quay.io/pypa/manylinux1_x86_64` image to build my wheel.\r\nThe auditwheel version is \r\n```\r\n[root@d52c3a246527 ~]# auditwheel -V\r\nauditwheel 1.5.0 installed at /opt/_internal/cpython-3.6.0/lib/python3.6/site-\r\npackages (python 3.6)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/64", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/64/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/64/events", "html_url": "https://github.com/pypa/auditwheel/issues/64", "id": 217053166, "node_id": "MDU6SXNzdWUyMTcwNTMxNjY=", "number": 64, "title": "auditwhell missing import print_function in python2", "user": {"login": "austinzh", "id": 8947557, "node_id": "MDQ6VXNlcjg5NDc1NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8947557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austinzh", "html_url": "https://github.com/austinzh", "followers_url": "https://api.github.com/users/austinzh/followers", "following_url": "https://api.github.com/users/austinzh/following{/other_user}", "gists_url": "https://api.github.com/users/austinzh/gists{/gist_id}", "starred_url": "https://api.github.com/users/austinzh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austinzh/subscriptions", "organizations_url": "https://api.github.com/users/austinzh/orgs", "repos_url": "https://api.github.com/users/austinzh/repos", "events_url": "https://api.github.com/users/austinzh/events{/privacy}", "received_events_url": "https://api.github.com/users/austinzh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-26T13:45:05Z", "updated_at": "2017-03-26T13:49:23Z", "closed_at": "2017-03-26T13:49:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$pip show auditwheel\r\nName: auditwheel\r\nVersion: 1.5.0\r\nSummary: Cross-distribution Linux wheels\r\nHome-page: https://github.com/pypa/auditwheel\r\nAuthor: Robert T. McGibbon\r\nAuthor-email: rmcgibbo@gmail.com\r\nLicense: MIT\r\nLocation: /usr/local/lib/python2.7/dist-packages\r\nRequires: setuptools, wheel, typing, pyelftools\r\n```\r\n\r\n```\r\n $auditwheel\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/auditwheel\", line 6, in <module>\r\n    from auditwheel.main import main\r\n  File \"/usr/local/lib/python2.7/dist-packages/auditwheel/main.py\", line 8, in <module>\r\n    from . import main_addtag\r\n  File \"/usr/local/lib/python2.7/dist-packages/auditwheel/main_addtag.py\", line 3, in <module>\r\n    from .policy import (load_policies, get_policy_name, get_priority_by_name,\r\n  File \"/usr/local/lib/python2.7/dist-packages/auditwheel/policy/__init__.py\", line 26\r\n    print('Error: This tool only supports Linux', file=sys.stderr)\r\n                                                      ^\r\nSyntaxError: invalid syntax\r\n```\r\n```\r\n$uname -a\r\nLinux A10092495U 4.4.0-57-generic #78-Ubuntu SMP Fri Dec 9 23:50:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/63", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/63/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/63/events", "html_url": "https://github.com/pypa/auditwheel/issues/63", "id": 215938036, "node_id": "MDU6SXNzdWUyMTU5MzgwMzY=", "number": 63, "title": "Option to strip binaries generated by auditwheel", "user": {"login": "EvenOldridge", "id": 25941453, "node_id": "MDQ6VXNlcjI1OTQxNDUz", "avatar_url": "https://avatars1.githubusercontent.com/u/25941453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EvenOldridge", "html_url": "https://github.com/EvenOldridge", "followers_url": "https://api.github.com/users/EvenOldridge/followers", "following_url": "https://api.github.com/users/EvenOldridge/following{/other_user}", "gists_url": "https://api.github.com/users/EvenOldridge/gists{/gist_id}", "starred_url": "https://api.github.com/users/EvenOldridge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EvenOldridge/subscriptions", "organizations_url": "https://api.github.com/users/EvenOldridge/orgs", "repos_url": "https://api.github.com/users/EvenOldridge/repos", "events_url": "https://api.github.com/users/EvenOldridge/events{/privacy}", "received_events_url": "https://api.github.com/users/EvenOldridge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087098, "node_id": "MDU6TGFiZWwzMTEwODcwOTg=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 311087099, "node_id": "MDU6TGFiZWwzMTEwODcwOTk=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/help%20wanted", "name": "help wanted", "color": "20a323", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "lkollar", "id": 791741, "node_id": "MDQ6VXNlcjc5MTc0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/791741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkollar", "html_url": "https://github.com/lkollar", "followers_url": "https://api.github.com/users/lkollar/followers", "following_url": "https://api.github.com/users/lkollar/following{/other_user}", "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions", "organizations_url": "https://api.github.com/users/lkollar/orgs", "repos_url": "https://api.github.com/users/lkollar/repos", "events_url": "https://api.github.com/users/lkollar/events{/privacy}", "received_events_url": "https://api.github.com/users/lkollar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lkollar", "id": 791741, "node_id": "MDQ6VXNlcjc5MTc0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/791741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkollar", "html_url": "https://github.com/lkollar", "followers_url": "https://api.github.com/users/lkollar/followers", "following_url": "https://api.github.com/users/lkollar/following{/other_user}", "gists_url": "https://api.github.com/users/lkollar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkollar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkollar/subscriptions", "organizations_url": "https://api.github.com/users/lkollar/orgs", "repos_url": "https://api.github.com/users/lkollar/repos", "events_url": "https://api.github.com/users/lkollar/events{/privacy}", "received_events_url": "https://api.github.com/users/lkollar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-03-22T02:53:01Z", "updated_at": "2020-07-21T19:34:22Z", "closed_at": "2020-07-21T19:34:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Auditwheel is a great tool and is used by a lot of common libraries to build their wheel packages.  I'm most interested in numpy and [they mentioned](https://github.com/numpy/numpy/issues/7570#issuecomment-288260162) that they use this library to package their wheels.  Unfortunately somewhere in their build process the binaries are [modified by patchelf such that strip doesn't work](https://github.com/NixOS/patchelf/issues/10).  \r\n\r\nIs it possible to add the option to strip binaries directly within the auditwheel process?  \r\n\r\nStripped binaries are critical for deployment, particularly of lambda functions and I'm unable to do the strip myself once installed.\r\n\r\nA lot of people would benefit from this change in terms of saved space in deployment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/60", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/60/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/60/events", "html_url": "https://github.com/pypa/auditwheel/issues/60", "id": 205437022, "node_id": "MDU6SXNzdWUyMDU0MzcwMjI=", "number": 60, "title": "Full example; from building the initial wheel to repairing it using auditwheel", "user": {"login": "mtrienis", "id": 1813821, "node_id": "MDQ6VXNlcjE4MTM4MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1813821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtrienis", "html_url": "https://github.com/mtrienis", "followers_url": "https://api.github.com/users/mtrienis/followers", "following_url": "https://api.github.com/users/mtrienis/following{/other_user}", "gists_url": "https://api.github.com/users/mtrienis/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtrienis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtrienis/subscriptions", "organizations_url": "https://api.github.com/users/mtrienis/orgs", "repos_url": "https://api.github.com/users/mtrienis/repos", "events_url": "https://api.github.com/users/mtrienis/events{/privacy}", "received_events_url": "https://api.github.com/users/mtrienis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-05T16:50:31Z", "updated_at": "2017-02-06T04:15:26Z", "closed_at": "2017-02-06T04:15:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was hoping to get a full blown example using the `setup.py` that built \r\n\r\n```cffi-1.5.0-cp35-cp35m-linux_x86_64.whl```\r\n\r\nI'm not sure how to include the `.so` files as dependencies when building the initial wheel i.e: \r\n```\r\n{\r\n    \"libc.so.6\": \"/lib64/libc-2.5.so\",\r\n    \"libffi.so.5\": \"/usr/lib64/libffi.so.5.0.6\",\r\n    \"libpthread.so.0\": \"/lib64/libpthread-2.5.so\"\r\n}\r\n```\r\n\r\nThanks, Mike. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/56", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/56/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/56/events", "html_url": "https://github.com/pypa/auditwheel/issues/56", "id": 197480935, "node_id": "MDU6SXNzdWUxOTc0ODA5MzU=", "number": 56, "title": "Auditwheel should check for references to PyFPE_jbuf, and error out if present", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-24T23:24:37Z", "updated_at": "2017-01-06T18:25:48Z", "closed_at": "2017-01-06T18:25:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See:\r\nhttps://github.com/python/peps/pull/166\r\nhttps://github.com/numpy/numpy/issues/8415#issuecomment-269103493", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/52", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/52/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/52/events", "html_url": "https://github.com/pypa/auditwheel/issues/52", "id": 184524352, "node_id": "MDU6SXNzdWUxODQ1MjQzNTI=", "number": 52, "title": "auditwheel not finding shared libraries", "user": {"login": "youngpm", "id": 1379667, "node_id": "MDQ6VXNlcjEzNzk2Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1379667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/youngpm", "html_url": "https://github.com/youngpm", "followers_url": "https://api.github.com/users/youngpm/followers", "following_url": "https://api.github.com/users/youngpm/following{/other_user}", "gists_url": "https://api.github.com/users/youngpm/gists{/gist_id}", "starred_url": "https://api.github.com/users/youngpm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/youngpm/subscriptions", "organizations_url": "https://api.github.com/users/youngpm/orgs", "repos_url": "https://api.github.com/users/youngpm/repos", "events_url": "https://api.github.com/users/youngpm/events{/privacy}", "received_events_url": "https://api.github.com/users/youngpm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-21T16:12:48Z", "updated_at": "2016-10-24T14:38:05Z", "closed_at": "2016-10-24T14:38:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been playing with manylinux builds and can't seem to get auditwheel to ever find shared libraries and fix them.\n\nFor example, I've tried the following by cloning `https://github.com/pypa/python-manylinux-demo` , navigating to its root directory and running\n\n```\ndocker run -v `pwd`:/io -it --rm quay.io/pypa/manylinux1_x86_64 /bin/bash\n```\n\nFrom inside the container, I then build the wheels via\n\n```\n/io/travis/build-wheels.sh\n```\n\nEverything completes successfully, but the `auditwheel repair` doesn't seem to have packaged anything up and the wheels have no `.libs` directory containing atlas.  \n\nFrom inside the container, running `auditwheel -vv show python_manylinux_demo-1.0-cp27-cp27mu-linux_x86_64.whl` gives the following:\n\n```\nDEBUG:auditwheel.wheel_abi:{}\nDEBUG:auditwheel.policy.versioned_symbols:Required symbol versions: {}\nINFO:auditwheel.wheel_abi:{\n    \"manylinux1_x86_64\": {\n        \"priority\": 100,\n        \"libs\": {}\n    },\n    \"linux_x86_64\": {\n        \"priority\": 0,\n        \"libs\": {}\n    }\n}\nDEBUG:auditwheel.wheel_abi:external referene info\nDEBUG:auditwheel.wheel_abi:{\n    \"manylinux1_x86_64\": {\n        \"priority\": 100,\n        \"libs\": {}\n    },\n    \"linux_x86_64\": {\n        \"priority\": 0,\n        \"libs\": {}\n    }\n}\n\npython_manylinux_demo-1.0-cp27-cp27mu-linux_x86_64.whl is consistent\nwith the following platform tag: \"manylinux1_x86_64\".\n\nThe wheel references no external versioned symbols from system-\nprovided shared libraries.\n\nThe wheel requires no external shared libraries! :)\n```\n\nbut unzipping that wheel and runnning `ldd` tells a different story\n\n```\n[root@1965501e43ea pymanylinuxdemo]# ldd extension.so\n        linux-vdso.so.1 =>  (0x00007ffc52bd8000)\n        libcblas.so.3 => /usr/lib64/atlas/libcblas.so.3 (0x00007fdcd467e000)\n        libpthread.so.0 => /lib64/libpthread.so.0 (0x00007fdcd4461000)\n        libc.so.6 => /lib64/libc.so.6 (0x00007fdcd4108000)\n        libatlas.so.3 => /usr/lib64/atlas/libatlas.so.3 (0x00007fdcd3813000)\n        libm.so.6 => /lib64/libm.so.6 (0x00007fdcd358f000)\n        /lib64/ld-linux-x86-64.so.2 (0x00005619467b3000)\n```\n\nAny help would be greatly appreciated!   I'm experiencing the same thing across the board with other builds I've been trying to manylinuxize.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/50", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/50/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/50/events", "html_url": "https://github.com/pypa/auditwheel/issues/50", "id": 175889243, "node_id": "MDU6SXNzdWUxNzU4ODkyNDM=", "number": 50, "title": "Support checking whole virtualenv path for dynamic linking closure?", "user": {"login": "daa", "id": 167235, "node_id": "MDQ6VXNlcjE2NzIzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/167235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daa", "html_url": "https://github.com/daa", "followers_url": "https://api.github.com/users/daa/followers", "following_url": "https://api.github.com/users/daa/following{/other_user}", "gists_url": "https://api.github.com/users/daa/gists{/gist_id}", "starred_url": "https://api.github.com/users/daa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daa/subscriptions", "organizations_url": "https://api.github.com/users/daa/orgs", "repos_url": "https://api.github.com/users/daa/repos", "events_url": "https://api.github.com/users/daa/events{/privacy}", "received_events_url": "https://api.github.com/users/daa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-08T23:21:59Z", "updated_at": "2018-06-28T16:25:58Z", "closed_at": "2018-06-28T16:25:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice if auditwheel will support checking if path is closed against dynamic linking. What do you think? I know of https://github.com/matthew-brett/delocate but it's for MacOS and I'd like to have similar tool for Linux.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/49", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/49/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/49/events", "html_url": "https://github.com/pypa/auditwheel/issues/49", "id": 174593581, "node_id": "MDU6SXNzdWUxNzQ1OTM1ODE=", "number": 49, "title": "auditwheel incorrectly does not determine if shared object is python extension with pyelftools 0.24", "user": {"login": "daa", "id": 167235, "node_id": "MDQ6VXNlcjE2NzIzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/167235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daa", "html_url": "https://github.com/daa", "followers_url": "https://api.github.com/users/daa/followers", "following_url": "https://api.github.com/users/daa/following{/other_user}", "gists_url": "https://api.github.com/users/daa/gists{/gist_id}", "starred_url": "https://api.github.com/users/daa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daa/subscriptions", "organizations_url": "https://api.github.com/users/daa/orgs", "repos_url": "https://api.github.com/users/daa/repos", "events_url": "https://api.github.com/users/daa/events{/privacy}", "received_events_url": "https://api.github.com/users/daa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-01T18:30:42Z", "updated_at": "2016-10-23T21:55:16Z", "closed_at": "2016-10-23T21:55:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Because since that version symbol and section names are strings in elftools and it mentioned in CHANGES.\n\nHere is commit changed behaviour - https://github.com/eliben/pyelftools/commit/108eaea9e75a8b5a1bef46b8ec6224145ac6668d\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/48", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/48/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/48/events", "html_url": "https://github.com/pypa/auditwheel/issues/48", "id": 173774909, "node_id": "MDU6SXNzdWUxNzM3NzQ5MDk=", "number": 48, "title": "Repair does not handle recursive libraries correctly", "user": {"login": "xhochy", "id": 70274, "node_id": "MDQ6VXNlcjcwMjc0", "avatar_url": "https://avatars2.githubusercontent.com/u/70274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xhochy", "html_url": "https://github.com/xhochy", "followers_url": "https://api.github.com/users/xhochy/followers", "following_url": "https://api.github.com/users/xhochy/following{/other_user}", "gists_url": "https://api.github.com/users/xhochy/gists{/gist_id}", "starred_url": "https://api.github.com/users/xhochy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xhochy/subscriptions", "organizations_url": "https://api.github.com/users/xhochy/orgs", "repos_url": "https://api.github.com/users/xhochy/repos", "events_url": "https://api.github.com/users/xhochy/events{/privacy}", "received_events_url": "https://api.github.com/users/xhochy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 311087099, "node_id": "MDU6TGFiZWwzMTEwODcwOTk=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/help%20wanted", "name": "help wanted", "color": "20a323", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-08-29T13:30:38Z", "updated_at": "2018-12-24T17:15:36Z", "closed_at": "2018-10-27T18:19:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the latest manylinux image (and so hopefully the latest auditwheel version) I have the problem that `repair` does not correctly relink all libraries. The dependency hierarchy is as follows:\n- `parquet.so` is a Python module (Cython generated) that depends on the C++ libraries `libpyarrow.so` and `libarrow.so` directly.\n- `libpyarrow.so` is a pure C++ helper library but also depends on `libarrow.so` directly.\n\n`parquet.so` has the correct links after the repair but `libpyarrow.so` does not. \n\nBoth libs `parquet.so` and `libpyarrow.so` are part of the wheel, `libarrow.so` is in this case an external one).\n\nConsole output: \n\n```\nRepairing pyarrow-0.1.0.dev0-cp27-cp27mu-linux_x86_64.whl\nGrafting: /usr/lib/libarrow.so -> pyarrow/./libarrow-17b4bbba.so\nGrafting: /usr/lib/libboost_filesystem.so.1.60.0 -> pyarrow/./libboost_filesystem-d4710d70.so.1.60.0\nGrafting: /usr/lib/libarrow_parquet.so -> pyarrow/./libarrow_parquet-745cd113.so\nGrafting: /usr/lib/libparquet.so -> pyarrow/./libparquet-3ec6b6fd.so\nGrafting: /usr/lib/libboost_system.so.1.60.0 -> pyarrow/./libboost_system-17a2ee5a.so.1.60.0\nGrafting: /usr/lib/libarrow_io.so -> pyarrow/./libarrow_io-f94b9eae.so\nSetting RPATH: pyarrow/schema.so to \"$ORIGIN/.\"\nSetting RPATH: pyarrow/scalar.so to \"$ORIGIN/.\"\nSetting RPATH: pyarrow/config.so to \"$ORIGIN/.\"\nSetting RPATH: pyarrow/table.so to \"$ORIGIN/.\"\nSetting RPATH: pyarrow/array.so to \"$ORIGIN/.\"\nSetting RPATH: pyarrow/error.so to \"$ORIGIN/.\"\nSetting RPATH: pyarrow/io.so to \"$ORIGIN/.\"\nSetting RPATH: pyarrow/parquet.so to \"$ORIGIN/.\"\nPrevious filename tags: linux_x86_64\nNew filename tags: manylinux1_x86_64\nPrevious WHEEL info tags: cp27-cp27mu-linux_x86_64\nNew WHEEL info tags: cp27-cp27mu-manylinux1_x86_64\n```\n\nLibrary linkages:\n\n```\n% readelf --dynamic pyarrow/parquet.so | grep NEEDED\n 0x0000000000000001 (NEEDED)             Shared library: [libpyarrow.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libarrow-17b4bbba.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libarrow_io-f94b9eae.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libarrow_parquet-745cd113.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libstdc++.so.6]\n 0x0000000000000001 (NEEDED)             Shared library: [libm.so.6]\n 0x0000000000000001 (NEEDED)             Shared library: [libgcc_s.so.1]\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]\n\n% readelf --dynamic pyarrow/libpyarrow.so | grep NEEDED\n 0x0000000000000001 (NEEDED)             Shared library: [libarrow.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libarrow_io.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libarrow_parquet.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libstdc++.so.6]\n 0x0000000000000001 (NEEDED)             Shared library: [libm.so.6]\n 0x0000000000000001 (NEEDED)             Shared library: [libgcc_s.so.1]\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]\n```\n\nHappy to fix this on my own but I would need some pointers where I should start to investigate!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/47", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/47/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/47/events", "html_url": "https://github.com/pypa/auditwheel/issues/47", "id": 171511292, "node_id": "MDU6SXNzdWUxNzE1MTEyOTI=", "number": 47, "title": "auditwheel repair should not fail on pure Python wheels", "user": {"login": "pombredanne", "id": 675997, "node_id": "MDQ6VXNlcjY3NTk5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/675997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pombredanne", "html_url": "https://github.com/pombredanne", "followers_url": "https://api.github.com/users/pombredanne/followers", "following_url": "https://api.github.com/users/pombredanne/following{/other_user}", "gists_url": "https://api.github.com/users/pombredanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/pombredanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pombredanne/subscriptions", "organizations_url": "https://api.github.com/users/pombredanne/orgs", "repos_url": "https://api.github.com/users/pombredanne/repos", "events_url": "https://api.github.com/users/pombredanne/events{/privacy}", "received_events_url": "https://api.github.com/users/pombredanne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1106706140, "node_id": "MDU6TGFiZWwxMTA2NzA2MTQw", "url": "https://api.github.com/repos/pypa/auditwheel/labels/good%20first%20issue", "name": "good first issue", "color": "823cc9", "default": true, "description": ""}, {"id": 311087099, "node_id": "MDU6TGFiZWwzMTEwODcwOTk=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/help%20wanted", "name": "help wanted", "color": "20a323", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-08-16T20:36:43Z", "updated_at": "2018-10-27T20:07:36Z", "closed_at": "2018-10-27T20:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "... IMHO it should just do nothing in this case.\nI experienced this while using the manylinux docker images on Travis  here https://travis-ci.org/pombreda/thirdparty-manylinux/jobs/152792412#L697\nThe auditwheel step fails because a six wheels had been pulled in\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/46", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/46/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/46/events", "html_url": "https://github.com/pypa/auditwheel/issues/46", "id": 165842398, "node_id": "MDU6SXNzdWUxNjU4NDIzOTg=", "number": 46, "title": "Compatibility with Python 2.7 (feature request)", "user": {"login": "flo-compbio", "id": 4722149, "node_id": "MDQ6VXNlcjQ3MjIxNDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4722149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flo-compbio", "html_url": "https://github.com/flo-compbio", "followers_url": "https://api.github.com/users/flo-compbio/followers", "following_url": "https://api.github.com/users/flo-compbio/following{/other_user}", "gists_url": "https://api.github.com/users/flo-compbio/gists{/gist_id}", "starred_url": "https://api.github.com/users/flo-compbio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flo-compbio/subscriptions", "organizations_url": "https://api.github.com/users/flo-compbio/orgs", "repos_url": "https://api.github.com/users/flo-compbio/repos", "events_url": "https://api.github.com/users/flo-compbio/events{/privacy}", "received_events_url": "https://api.github.com/users/flo-compbio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-07-15T17:50:08Z", "updated_at": "2017-01-09T14:40:21Z", "closed_at": "2017-01-09T14:40:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a specific reason why `auditwheel` does not support Python 2.7 (besides it requiring more work to make the code Python2/3 portable)?\n\nI got a simple error from a print call in main_addtag.py, line 49.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/44", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/44/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/44/events", "html_url": "https://github.com/pypa/auditwheel/issues/44", "id": 158485214, "node_id": "MDU6SXNzdWUxNTg0ODUyMTQ=", "number": 44, "title": "Tests are throwing version exception for patchelf but not failing", "user": {"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1106708164, "node_id": "MDU6TGFiZWwxMTA2NzA4MTY0", "url": "https://api.github.com/repos/pypa/auditwheel/labels/needs%20verification", "name": "needs verification", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-04T03:35:15Z", "updated_at": "2018-10-27T17:52:33Z", "closed_at": "2018-10-27T17:52:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The tests are full of the following traceback\n\n```\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.4.3/bin/auditwheel\", line 10, in <module>\n    sys.exit(main())\n  File \"/home/travis/virtualenv/python3.4.3/lib/python3.4/site-packages/auditwheel/main.py\", line 49, in main\n    rval = args.func(args, p)\n  File \"/home/travis/virtualenv/python3.4.3/lib/python3.4/site-packages/auditwheel/main_repair.py\", line 81, in execute\n    update_tags=args.UPDATE_TAGS)\n  File \"/home/travis/virtualenv/python3.4.3/lib/python3.4/site-packages/auditwheel/repair.py\", line 81, in repair_wheel\n    new_soname, new_path = copylib(src_path, dest_dir)\n  File \"/home/travis/virtualenv/python3.4.3/lib/python3.4/site-packages/auditwheel/repair.py\", line 132, in copylib\n    verify_patchelf()\n  File \"/home/travis/virtualenv/python3.4.3/lib/python3.4/functools.py\", line 472, in wrapper\n    result = user_function(*args, **kwds)\n  File \"/home/travis/virtualenv/python3.4.3/lib/python3.4/site-packages/auditwheel/repair.py\", line 37, in verify_patchelf\n    version)\nValueError: patchelf  found. auditwheel repair requirespatchelf >= 0.9.\n```\n\nInterestingly, the auditwheel tests are not failing, despite the tracebacks thrown.\n\nThe problem is that `patchelf --version` doesn't output anything on version 0.9. I've heard @geofft has [submitted a patch to fix this upstream](https://github.com/rmcgibbo/pypatchelf/pull/1), and I've tested & confirmed the patch fixes the bug.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/42", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/42/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/42/events", "html_url": "https://github.com/pypa/auditwheel/issues/42", "id": 158478944, "node_id": "MDU6SXNzdWUxNTg0Nzg5NDQ=", "number": 42, "title": "CXXABI symbol version in policy for manylinux is wrong", "user": {"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-04T00:55:40Z", "updated_at": "2016-06-04T03:39:01Z", "closed_at": "2016-06-04T03:39:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I believe there is a typo in the policy for the CXXABI symbol version. [While the file lists \"3.4.8\"](https://github.com/pypa/auditwheel/blob/72f7b94488eb7ac52ffd21ebb223922284752864/auditwheel/policy/policy.json#L11) as the max permissible version, I dumped all the `.gnu.version_d` info from all the whitelisted libs inside the manylinux docker image and found that the max version was actually \"1.3.1\".\n\nEven on a Debian jessie image (much more recent than the CentOS 5 manylinux image), I cannot find a CXXABI symbol with a version greater than 1.3.8.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/41", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/41/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/41/events", "html_url": "https://github.com/pypa/auditwheel/issues/41", "id": 158430456, "node_id": "MDU6SXNzdWUxNTg0MzA0NTY=", "number": 41, "title": "max_versioned_symbol breaks when looking at symbols it doesn't need to", "user": {"login": "ehashman", "id": 4706131, "node_id": "MDQ6VXNlcjQ3MDYxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4706131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehashman", "html_url": "https://github.com/ehashman", "followers_url": "https://api.github.com/users/ehashman/followers", "following_url": "https://api.github.com/users/ehashman/following{/other_user}", "gists_url": "https://api.github.com/users/ehashman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehashman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehashman/subscriptions", "organizations_url": "https://api.github.com/users/ehashman/orgs", "repos_url": "https://api.github.com/users/ehashman/repos", "events_url": "https://api.github.com/users/ehashman/events{/privacy}", "received_events_url": "https://api.github.com/users/ehashman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-03T18:49:30Z", "updated_at": "2016-06-04T03:38:33Z", "closed_at": "2016-06-04T03:38:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "After building some python-kadmin wheels on the manylinux docker image, I encountered an exception when running auditwheel on the wheels:\n\n```\n$ auditwheel -vv repair wheelhouse/python_kadmin-0.1.1-cp26-cp26m-linux_x86_64.whl -w /io/wheelhouse\n...<snip>\nTraceback (most recent call last):\n  File \"/usr/local/bin/auditwheel\", line 11, in <module>\n    sys.exit(main())\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/auditwheel/main.py\", line 49, in main\n    rval = args.func(args, p)\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/auditwheel/main_repair.py\", line 60, in execute\n    wheel_abi = analyze_wheel_abi(args.WHEEL_FILE)\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/auditwheel/wheel_abi.py\", line 59, in analyze_wheel_abi\n    get_wheel_elfdata(wheel_fn)\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/auditwheel/wheel_abi.py\", line 48, in get_wheel_elfdata\n    max_versioned_symbol(versioned_symbols), uses_ucs2_symbols)\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/auditwheel/policy/versioned_symbols.py\", line 22, in max_versioned_symbol\n    set_if_greater(max_required_ver, name, Version(ver))\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/pip/_vendor/distlib/version.py\", line 32, in __init__\n    self._parts = parts = self.parse(s)\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/pip/_vendor/distlib/version.py\", line 273, in parse\n    result = _normalized_key(s)\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/pip/_vendor/distlib/version.py\", line 194, in _pep_440_key\n    raise UnsupportedVersionError('Not a valid version: %s' % s)\n\npip._vendor.distlib.version.UnsupportedVersionError: Not a valid version: MIT\n```\n\n[(full Travis log)](https://travis-ci.org/ehashman/python-kadmin/jobs/134905830)\n\nTaking a look at the version symbols inside krb5, we find:\n\n```\n$ readelf -V ./lib/krb5/libkrb5.so\n...<snip>\nVersion definition section '.gnu.version_d' contains 3 entries:\n  Addr: 0x000000000000bcc0  Offset: 0x00bcc0  Link: 4 (.dynstr)  000000: Rev: 1  Flags: BASE   Index: 1  Cnt: 1  Name: libkrb5.so.3\n  0x001c: Rev: 1  Flags: none  Index: 2  Cnt: 1  Name: krb5_3_MIT\n  0x0038: Rev: 1  Flags: none  Index: 3  Cnt: 1  Name: HIDDEN\n\nVersion needs section '.gnu.version_r' contains 5 entries:\n Addr: 0x000000000000bd18  Offset: 0x00bd18  Link: 4 (.dynstr)\n  000000: Version: 1  File: libcom_err.so.3  Cnt: 1\n  0x0010:   Name: com_err_3_MIT  Flags: none  Version: 10\n  0x0020: Version: 1  File: libresolv.so.2  Cnt: 2\n  0x0030:   Name: GLIBC_2.2.5  Flags: none  Version: 13\n  0x0040:   Name: GLIBC_2.9  Flags: none  Version: 9\n  0x0050: Version: 1  File: libk5crypto.so.3  Cnt: 1\n  0x0060:   Name: k5crypto_3_MIT  Flags: none  Version: 7\n  0x0070: Version: 1  File: libkrb5support.so.0  Cnt: 1\n  0x0080:   Name: krb5support_0_MIT  Flags: none  Version: 6\n  0x0090: Version: 1  File: libc.so.6  Cnt: 7\n  0x00a0:   Name: GLIBC_2.14  Flags: none  Version: 15\n  0x00b0:   Name: GLIBC_2.8  Flags: none  Version: 14\n  0x00c0:   Name: GLIBC_2.16  Flags: none  Version: 12\n  0x00d0:   Name: GLIBC_2.4  Flags: none  Version: 11\n  0x00e0:   Name: GLIBC_2.3.4  Flags: none  Version: 8\n  0x00f0:   Name: GLIBC_2.2.5  Flags: none  Version: 5\n  0x0100:   Name: GLIBC_2.3  Flags: none  Version: 4\n```\n\nSo I believe the issue here is that we are attempting to determine the max symbol version on all included version symbols, even though we only care about the ones in policy.json (GLIBC, CXXABI, etc.). While there are conventions for the numeric versioning for the GLIBC etc. symbols, this is not generally true, which is why we're running into the issue with e.g. k5crypto_3_MIT having a version read as MIT. A fix would be to filter out any symbols we don't care about per policy before running `max_versioned_symbol` on them?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/39", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/39/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/39/events", "html_url": "https://github.com/pypa/auditwheel/issues/39", "id": 154391737, "node_id": "MDU6SXNzdWUxNTQzOTE3Mzc=", "number": 39, "title": "How to handle C++?", "user": {"login": "gqmelo", "id": 12578273, "node_id": "MDQ6VXNlcjEyNTc4Mjcz", "avatar_url": "https://avatars3.githubusercontent.com/u/12578273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gqmelo", "html_url": "https://github.com/gqmelo", "followers_url": "https://api.github.com/users/gqmelo/followers", "following_url": "https://api.github.com/users/gqmelo/following{/other_user}", "gists_url": "https://api.github.com/users/gqmelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/gqmelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gqmelo/subscriptions", "organizations_url": "https://api.github.com/users/gqmelo/orgs", "repos_url": "https://api.github.com/users/gqmelo/repos", "events_url": "https://api.github.com/users/gqmelo/events{/privacy}", "received_events_url": "https://api.github.com/users/gqmelo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-12T03:54:36Z", "updated_at": "2016-05-12T23:35:28Z", "closed_at": "2016-05-12T13:38:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all I think this initiative is amazing and really hope this will make portable Linux binaries trivial.\n\nI've had some experience with this on the company I work for. Basically we came up with the same solution, except that we compile under a CentOS 5 chroot.\n\nBut one of the problems we faced was **libstdc++**. We also use **gcc 4.8.5**, which means the libstdc++ version is 3.4.19.\n\nCentOS default libstdc++ is 3.4.12, therefore if you are compiling C++ code using this approach, you might have to run the executable only on CentOS 7 and earlier.\n\nSo the most obvious solution would be to just ship `libstdc++`. This is what we did, but then we got missing symbols on recent Linux distributions because they have a libstdc++ newer than 3.4.19, and some crucial system libraries (specially OpenGL implementations) were linked against it.\n\nNot the most beautiful solution, but we ended up having to create an initialization script that would check which version is newer (the shipped or system one), and set LD_LIBRARY_PATH to the shipped one if necessary.\n\nI know that most of base libraries are written in C, but even though I think this is an important issue, specially if someone is using OpenGL (I know that at least Mesa and Nvidia proprietary implementation use C++).\n\nSo have anyone else thought about this problem?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/37", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/37/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/37/events", "html_url": "https://github.com/pypa/auditwheel/issues/37", "id": 153847679, "node_id": "MDU6SXNzdWUxNTM4NDc2Nzk=", "number": 37, "title": "Namespace packages cause unexpected errors in `repair`", "user": {"login": "soltanmm", "id": 4889063, "node_id": "MDQ6VXNlcjQ4ODkwNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soltanmm", "html_url": "https://github.com/soltanmm", "followers_url": "https://api.github.com/users/soltanmm/followers", "following_url": "https://api.github.com/users/soltanmm/following{/other_user}", "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}", "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions", "organizations_url": "https://api.github.com/users/soltanmm/orgs", "repos_url": "https://api.github.com/users/soltanmm/repos", "events_url": "https://api.github.com/users/soltanmm/events{/privacy}", "received_events_url": "https://api.github.com/users/soltanmm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 311087099, "node_id": "MDU6TGFiZWwzMTEwODcwOTk=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/help%20wanted", "name": "help wanted", "color": "20a323", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-05-09T19:12:11Z", "updated_at": "2017-05-24T05:04:07Z", "closed_at": "2017-05-24T05:04:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In a project that `auditwheel show` reports is `manylinux1` compatible and that `auditwheel repair` successfully repairs, adding the `namespace_packages` argument to the `setuptools.setup` call results in `auditwheel show` still reporting that the project is `manylinux1` compatible, _however_, `auditwheel repair` breaks:\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/bin/auditwheel\", line 11, in <module>\n    sys.exit(main())\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/auditwheel/main.py\", line 49, in main\n    rval = args.func(args, p)\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/auditwheel/main_repair.py\", line 81, in execute\n    update_tags=args.UPDATE_TAGS)\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/auditwheel/repair.py\", line 68, in repair_wheel\n    raise RuntimeError('Is this wheel malformatted? Or a bug?')\nRuntimeError: Is this wheel malformatted? Or a bug?\n```\n\nThis is with auditwheel 1.3.0 within the manylinux1 x64 docker image.\n\nHere is a [minimal testcase](https://github.com/pypa/auditwheel/files/255697/asdf.zip) (n.b. requires cython).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/32", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/32/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/32/events", "html_url": "https://github.com/pypa/auditwheel/issues/32", "id": 148676564, "node_id": "MDU6SXNzdWUxNDg2NzY1NjQ=", "number": 32, "title": "check for binaries in purelib", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087098, "node_id": "MDU6TGFiZWwzMTEwODcwOTg=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1106715118, "node_id": "MDU6TGFiZWwxMTA2NzE1MTE4", "url": "https://api.github.com/repos/pypa/auditwheel/labels/has%20PR", "name": "has PR", "color": "f9b766", "default": false, "description": ""}, {"id": 311087099, "node_id": "MDU6TGFiZWwzMTEwODcwOTk=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/help%20wanted", "name": "help wanted", "color": "20a323", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-15T14:32:38Z", "updated_at": "2018-10-27T20:07:34Z", "closed_at": "2018-10-27T20:07:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "To help in situations like #28, it would be nice if auditwheel could check for impure files in purelib and complain if they're found.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/30", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/30/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/30/events", "html_url": "https://github.com/pypa/auditwheel/issues/30", "id": 148664716, "node_id": "MDU6SXNzdWUxNDg2NjQ3MTY=", "number": 30, "title": "NameError: name 'libname' is not defined", "user": {"login": "kozo2", "id": 12192, "node_id": "MDQ6VXNlcjEyMTky", "avatar_url": "https://avatars0.githubusercontent.com/u/12192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kozo2", "html_url": "https://github.com/kozo2", "followers_url": "https://api.github.com/users/kozo2/followers", "following_url": "https://api.github.com/users/kozo2/following{/other_user}", "gists_url": "https://api.github.com/users/kozo2/gists{/gist_id}", "starred_url": "https://api.github.com/users/kozo2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kozo2/subscriptions", "organizations_url": "https://api.github.com/users/kozo2/orgs", "repos_url": "https://api.github.com/users/kozo2/repos", "events_url": "https://api.github.com/users/kozo2/events{/privacy}", "received_events_url": "https://api.github.com/users/kozo2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-15T13:43:46Z", "updated_at": "2016-04-15T14:18:48Z", "closed_at": "2016-04-15T14:09:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I applied auditwheel to a project named E-Cell.\nBut there was NameError for this.\nIf you have any suggestions in this regard, please let me know.\n\n```\n[root@db4ffc7bd536 python]# auditwheel show dist/ecell-4.0.0-cp27-cp27mu-linux_x86_64.whl \n\necell-4.0.0-cp27-cp27mu-linux_x86_64.whl is consistent with the\nfollowing platform tag: \"linux_x86_64\".\n\nThe wheel references the following external versioned symbols in\nsystem-provided shared libraries: CXXABI_1.3.1, GLIBC_2.4,\nGLIBCXX_3.4, GCC_3.0.\n\nThe following external shared libraries are required by the wheel:\n{\n    \"libc.so.6\": \"/lib64/libc-2.5.so\",\n    \"libgcc_s.so.1\": \"/lib64/libgcc_s-4.1.2-20080825.so.1\",\n    \"libgsl.so.0\": \"/usr/lib64/libgsl.so.0.14.0\",\n    \"libgslcblas.so.0\": \"/usr/lib64/libgslcblas.so.0.0.0\",\n    \"libhdf5.so.9\": null,\n    \"libhdf5_cpp.so.9\": null,\n    \"libm.so.6\": \"/lib64/libm-2.5.so\",\n    \"libpthread.so.0\": \"/lib64/libpthread-2.5.so\",\n    \"libstdc++.so.6\": \"/usr/lib64/libstdc++.so.6.0.8\"\n}\n\nIn order to achieve the tag platform tag \"manylinux1_x86_64\" the\nfollowing shared library dependencies will need to be eliminated:\n\nlibgsl.so.0, libgslcblas.so.0, libhdf5.so.9, libhdf5_cpp.so.9\n[root@db4ffc7bd536 python]# auditwheel repair dist/ecell-4.0.0-cp27-cp27mu-linux_x86_64.whl \nRepairing ecell-4.0.0-cp27-cp27mu-linux_x86_64.whl\nTraceback (most recent call last):\n  File \"/usr/local/bin/auditwheel\", line 11, in <module>\n    sys.exit(main())\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/auditwheel/main.py\", line 49, in main\n    rval = args.func(args, p)\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/auditwheel/main_repair.py\", line 81, in execute\n    update_tags=args.UPDATE_TAGS)\n  File \"/opt/_internal/cpython-3.5.1/lib/python3.5/site-packages/auditwheel/repair.py\", line 79, in repair_wheel\n    libname)\nNameError: name 'libname' is not defined\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/29", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/29/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/29/events", "html_url": "https://github.com/pypa/auditwheel/issues/29", "id": 148511089, "node_id": "MDU6SXNzdWUxNDg1MTEwODk=", "number": 29, "title": "Vendored library cannot be loaded", "user": {"login": "stefanv", "id": 45071, "node_id": "MDQ6VXNlcjQ1MDcx", "avatar_url": "https://avatars2.githubusercontent.com/u/45071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanv", "html_url": "https://github.com/stefanv", "followers_url": "https://api.github.com/users/stefanv/followers", "following_url": "https://api.github.com/users/stefanv/following{/other_user}", "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions", "organizations_url": "https://api.github.com/users/stefanv/orgs", "repos_url": "https://api.github.com/users/stefanv/repos", "events_url": "https://api.github.com/users/stefanv/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311087096, "node_id": "MDU6TGFiZWwzMTEwODcwOTY=", "url": "https://api.github.com/repos/pypa/auditwheel/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1106715118, "node_id": "MDU6TGFiZWwxMTA2NzE1MTE4", "url": "https://api.github.com/repos/pypa/auditwheel/labels/has%20PR", "name": "has PR", "color": "f9b766", "default": false, "description": ""}, {"id": 1106708164, "node_id": "MDU6TGFiZWwxMTA2NzA4MTY0", "url": "https://api.github.com/repos/pypa/auditwheel/labels/needs%20verification", "name": "needs verification", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-04-14T23:28:24Z", "updated_at": "2019-06-29T05:42:10Z", "closed_at": "2019-06-29T05:42:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used the manylinux docker infrastructure to build:\n\nhttp://travis-wheels.scikit-image.org/netCDF4-1.2.3.1-cp34-cp34m-manylinux1_x86_64.whl\n\nUpon import, I see:\n\n```\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/stefan/envs/py3/lib/python3.4/site-packages/netCDF4/__init__.py\", line 3, in <module>\n    from ._netCDF4 import *\nImportError: libhdf5_hl-9c7ba457.so.10.0.2: cannot open shared object file: No such file or directory\n```\n\nLooking at the vendored libraries, the RPATH is invalid for libnetcdf (not for libhdf5)--possibly has something to do with original libnetcdf library already having an RPATH entry.\n\nBuild recipe can be found here:\n\nhttps://github.com/stefanv/manylinux-builds/blob/build_netcdf/build_netcdfs.sh\n\nIt was run on yesterday's version of the manylinux docker image.\n\n/cc @njsmith @matthew-brett\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/24", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/24/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/24/events", "html_url": "https://github.com/pypa/auditwheel/issues/24", "id": 144399926, "node_id": "MDU6SXNzdWUxNDQzOTk5MjY=", "number": 24, "title": "rename vendored libraries", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-03-29T21:51:52Z", "updated_at": "2016-04-03T04:49:03Z", "closed_at": "2016-04-03T04:49:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "as per here:\nhttps://mail.python.org/pipermail/wheel-builders/2016-March/000082.html\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/19", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/19/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/19/events", "html_url": "https://github.com/pypa/auditwheel/issues/19", "id": 139922892, "node_id": "MDU6SXNzdWUxMzk5MjI4OTI=", "number": 19, "title": "auditwheel should replace the linux tag with a manylinux1 tag instead of adding a new tag", "user": {"login": "ogrisel", "id": 89061, "node_id": "MDQ6VXNlcjg5MDYx", "avatar_url": "https://avatars0.githubusercontent.com/u/89061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogrisel", "html_url": "https://github.com/ogrisel", "followers_url": "https://api.github.com/users/ogrisel/followers", "following_url": "https://api.github.com/users/ogrisel/following{/other_user}", "gists_url": "https://api.github.com/users/ogrisel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogrisel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogrisel/subscriptions", "organizations_url": "https://api.github.com/users/ogrisel/orgs", "repos_url": "https://api.github.com/users/ogrisel/repos", "events_url": "https://api.github.com/users/ogrisel/events{/privacy}", "received_events_url": "https://api.github.com/users/ogrisel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-10T15:32:38Z", "updated_at": "2016-03-23T09:44:54Z", "closed_at": "2016-03-23T09:44:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`auditwheel` has a command named `addtag` to rename a wheel file to insert the `manylinux1_x86_64` platform tag into its filename (in addition to the existing `linux_x86_64`) and similarly for `manylinux1_i686` / `linux_i686`.\n\nThis is an issue because uploading wheel files with the `linux_x86_64` / `linux_i686` platform tags to warehouse or PyPI is forbidden (while  `manylinux1_x86_64`/ `manylinux1_i686` are authorized or will soon be).\n\nInstead `auditwheel repair` should probably replace the `linux` based tags by `manylinux1` tags whenever the `repair` operation succeeds.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/18", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/18/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/18/events", "html_url": "https://github.com/pypa/auditwheel/issues/18", "id": 138573644, "node_id": "MDU6SXNzdWUxMzg1NzM2NDQ=", "number": 18, "title": "auditwheel show also works on conda packages", "user": {"login": "jjhelmus", "id": 1050278, "node_id": "MDQ6VXNlcjEwNTAyNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1050278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjhelmus", "html_url": "https://github.com/jjhelmus", "followers_url": "https://api.github.com/users/jjhelmus/followers", "following_url": "https://api.github.com/users/jjhelmus/following{/other_user}", "gists_url": "https://api.github.com/users/jjhelmus/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjhelmus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjhelmus/subscriptions", "organizations_url": "https://api.github.com/users/jjhelmus/orgs", "repos_url": "https://api.github.com/users/jjhelmus/repos", "events_url": "https://api.github.com/users/jjhelmus/events{/privacy}", "received_events_url": "https://api.github.com/users/jjhelmus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-04T20:07:24Z", "updated_at": "2016-03-23T12:46:53Z", "closed_at": "2016-03-23T12:46:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not a bug report, rather a note on a nice feature.  I found that auditwheel can also be used to audit a conda package for external shared libraries.  I have not tested if any of the other sub-commands work.  Thanks for this tool, it is really helpful.\n\n```\n$ auditwheel show linux-64-tensorflow-0.7.1-py35_1.tar.bz2\n\nlinux-64-tensorflow-0.7.1-py35_1.tar.bz2 is consistent with the\nfollowing platform tag: \"linux_x86_64\".\n\nThe wheel references the following external versioned symbols in\nsystem-provided shared libraries: GLIBC_2.14, CXXABI_1.3.5, GCC_3.0,\nGLIBCXX_3.4.19.\n\nThis constrains the platform tag to \"linux_x86_64\". In order to\nachieve a more compatible tag, you would to recompile a new wheel from\nsource on a system with earlier versions of these libraries, such as\nCentOS 5.\n\nThe following external shared libraries are required by the wheel:\n{\n    \"libc.so.6\": \"/lib64/libc-2.5.so\",\n    \"libdl.so.2\": \"/lib64/libdl-2.5.so\",\n    \"libgcc_s.so.1\": \"/lib64/libgcc_s-4.1.2-20080825.so.1\",\n    \"libm.so.6\": \"/lib64/libm-2.5.so\",\n    \"libpthread.so.0\": \"/lib64/libpthread-2.5.so\",\n    \"libstdc++.so.6\": \"/usr/lib64/libstdc++.so.6.0.8\",\n    \"libz.so.1\": \"/lib64/libz.so.1.2.3\"\n}\n\nIn order to achieve the tag platform tag \"manylinux1_x86_64\" the\nfollowing shared library dependencies will need to be eliminated:\n\nlibz.so.1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/14", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/14/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/14/events", "html_url": "https://github.com/pypa/auditwheel/issues/14", "id": 131904832, "node_id": "MDU6SXNzdWUxMzE5MDQ4MzI=", "number": 14, "title": "Missing library error from repaired wheel", "user": {"login": "matthew-brett", "id": 67612, "node_id": "MDQ6VXNlcjY3NjEy", "avatar_url": "https://avatars2.githubusercontent.com/u/67612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-brett", "html_url": "https://github.com/matthew-brett", "followers_url": "https://api.github.com/users/matthew-brett/followers", "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions", "organizations_url": "https://api.github.com/users/matthew-brett/orgs", "repos_url": "https://api.github.com/users/matthew-brett/repos", "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-brett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-06T22:16:13Z", "updated_at": "2016-02-07T06:08:37Z", "closed_at": "2016-02-07T06:08:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm sorry not to have done a better job of debugging this but ..\n\nI'm trying to build h5py wheels.\n\nI think I correctly built and repaired the wheel, and it installs and tests OK on a Debian sid machine I have.\n\nHowever, when I test the wheel on the docker image itself, I get:\n\n```\npython -c 'import h5py; h5py.run_tests()'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/opt/3.4.4/lib/python3.4/site-packages/h5py/__init__.py\", line 24, in <module>\n    from . import _errors\nImportError: libsz.so.2: cannot open shared object file: No such file or directory\n```\n\nScript to generate hdf5 and libsz libraries:  https://gist.github.com/9279c5c368d61118cf1c\nScript to build h5py wheel : https://gist.github.com/matthew-brett/0dbd3747cbd76ea8ca49\nUnfixed wheel : http://nipy.bic.berkeley.edu/scipy_installers/tmp/unfixed/h5py-2.4.0-cp34-cp34m-linux_x86_64.whl\nFixed wheel : http://nipy.bic.berkeley.edu/scipy_installers/tmp/fixed/h5py-2.4.0-cp34-cp34m-linux_x86_64.whl\nScript to run wheel test : https://gist.github.com/41eaad61fbf02072b2ba\n\n`libsz.so.2` is in the `.libs` directory of the h5py install, and rpath for the `_errors` extension does contain `$ORIGIN/.libs`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/10", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/10/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/10/events", "html_url": "https://github.com/pypa/auditwheel/issues/10", "id": 130456013, "node_id": "MDU6SXNzdWUxMzA0NTYwMTM=", "number": 10, "title": "README here and on PyPI points to the old docker images", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-01T19:19:31Z", "updated_at": "2016-02-01T21:02:48Z", "closed_at": "2016-02-01T21:02:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/8", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/8/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/8/events", "html_url": "https://github.com/pypa/auditwheel/issues/8", "id": 130034552, "node_id": "MDU6SXNzdWUxMzAwMzQ1NTI=", "number": 8, "title": "Check UCS2 vs UCS4", "user": {"login": "rmcgibbo", "id": 641278, "node_id": "MDQ6VXNlcjY0MTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmcgibbo", "html_url": "https://github.com/rmcgibbo", "followers_url": "https://api.github.com/users/rmcgibbo/followers", "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}", "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions", "organizations_url": "https://api.github.com/users/rmcgibbo/orgs", "repos_url": "https://api.github.com/users/rmcgibbo/repos", "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}", "received_events_url": "https://api.github.com/users/rmcgibbo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-01-30T20:47:44Z", "updated_at": "2016-01-31T01:18:21Z", "closed_at": "2016-01-31T01:18:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For Py < 3.2, the manylinux1 policy requires building against UCS4 Python, so we have to check for this in extensions modules by looking through the symbol table for the use of any `PyUnicodeUCS2_*` functions, and give a helpful error message.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pypa/auditwheel/issues/5", "repository_url": "https://api.github.com/repos/pypa/auditwheel", "labels_url": "https://api.github.com/repos/pypa/auditwheel/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/pypa/auditwheel/issues/5/comments", "events_url": "https://api.github.com/repos/pypa/auditwheel/issues/5/events", "html_url": "https://github.com/pypa/auditwheel/issues/5", "id": 128053108, "node_id": "MDU6SXNzdWUxMjgwNTMxMDg=", "number": 5, "title": "bugs with cffi", "user": {"login": "rmcgibbo", "id": 641278, "node_id": "MDQ6VXNlcjY0MTI3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/641278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmcgibbo", "html_url": "https://github.com/rmcgibbo", "followers_url": "https://api.github.com/users/rmcgibbo/followers", "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}", "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions", "organizations_url": "https://api.github.com/users/rmcgibbo/orgs", "repos_url": "https://api.github.com/users/rmcgibbo/repos", "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}", "received_events_url": "https://api.github.com/users/rmcgibbo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-22T00:21:47Z", "updated_at": "2016-01-22T00:43:21Z", "closed_at": "2016-01-22T00:43:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I found some bugs trying to build and repair `cffi`. fixes in the works.\n", "performed_via_github_app": null, "score": 1.0}]}