{"total_count": 389, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/marcotcr/lime/issues/499", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/499/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/499/events", "html_url": "https://github.com/marcotcr/lime/issues/499", "id": 677156092, "node_id": "MDU6SXNzdWU2NzcxNTYwOTI=", "number": 499, "title": "Maximum feasable features in LimeTabularExplainer", "user": {"login": "AlexCrosby", "id": 54353909, "node_id": "MDQ6VXNlcjU0MzUzOTA5", "avatar_url": "https://avatars3.githubusercontent.com/u/54353909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexCrosby", "html_url": "https://github.com/AlexCrosby", "followers_url": "https://api.github.com/users/AlexCrosby/followers", "following_url": "https://api.github.com/users/AlexCrosby/following{/other_user}", "gists_url": "https://api.github.com/users/AlexCrosby/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexCrosby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexCrosby/subscriptions", "organizations_url": "https://api.github.com/users/AlexCrosby/orgs", "repos_url": "https://api.github.com/users/AlexCrosby/repos", "events_url": "https://api.github.com/users/AlexCrosby/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexCrosby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-11T19:56:08Z", "updated_at": "2020-08-17T10:39:24Z", "closed_at": "2020-08-17T10:39:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a set of 25k datapoints, each with 20k features.\r\nIn essence, training takes a long time to complete and explain_instance, as far as I can tell, takes even longer. I don't actually know because it has yet to finish a single datapoint after half a day.\r\n\r\nI just wanted to check that this is likely due to my data being large. And if so, what size array is the upper limit of reasonable?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/497", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/497/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/497/events", "html_url": "https://github.com/marcotcr/lime/issues/497", "id": 674421294, "node_id": "MDU6SXNzdWU2NzQ0MjEyOTQ=", "number": 497, "title": "TabularExplainer Explanations", "user": {"login": "Dola47", "id": 45386621, "node_id": "MDQ6VXNlcjQ1Mzg2NjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/45386621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dola47", "html_url": "https://github.com/Dola47", "followers_url": "https://api.github.com/users/Dola47/followers", "following_url": "https://api.github.com/users/Dola47/following{/other_user}", "gists_url": "https://api.github.com/users/Dola47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dola47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dola47/subscriptions", "organizations_url": "https://api.github.com/users/Dola47/orgs", "repos_url": "https://api.github.com/users/Dola47/repos", "events_url": "https://api.github.com/users/Dola47/events{/privacy}", "received_events_url": "https://api.github.com/users/Dola47/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-06T15:56:28Z", "updated_at": "2020-08-06T18:52:08Z", "closed_at": "2020-08-06T18:52:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear All,\r\n \r\n1- By default, the TabularExplainer uses ridge regression to explain the black-box model.  We submit to this ridge regression the perturbed instances, their predictions, their weights. Then this ridge regression is optimized until it minimizes the loss between it and the black-box model. If all of these are correct, I would like to be sure that what we mean by the weights of the ridge regression model represent our explanations, that the explanations are the betas or the coefficients of the ridge regression model after it has been optimized? [ And the betas is related to K the number of features I needed to be returned in the explanations objects, K=10 features, means we will have 10 betas in our ridge regression, is that correct?]\r\n\r\n2- In the case of numerical features, they are perturbed by sampling from a parameterized normal distribution for each feature. As a consequence, we lack the covariance between the features, and our whole space distribution function represents merely the product of several normal distributions. Therefore, we can have certain samples out of our original dataset, is that correct?\r\n\r\n3- For the categorical features, sampling is perturbed by the frequency of the appearance of each category in the training distribution. The worst scenario that might come out of this method is that if one of the categories is very rare and is not selected because of bad luck, and since after the sampling phase is finished, we no longer have the original dataset. Consequently, there is no information on this category for the fitting of the interpretable model, is that also correct?\r\n\r\n4- If the perturbation depends merely on our dataset statistics, how can we say that our perturbation is usually random for the same dataset?\r\n\r\nMany thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/496", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/496/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/496/events", "html_url": "https://github.com/marcotcr/lime/issues/496", "id": 672548280, "node_id": "MDU6SXNzdWU2NzI1NDgyODA=", "number": 496, "title": "Lime on Time Series Models?", "user": {"login": "shbhmpndy", "id": 12584249, "node_id": "MDQ6VXNlcjEyNTg0MjQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/12584249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shbhmpndy", "html_url": "https://github.com/shbhmpndy", "followers_url": "https://api.github.com/users/shbhmpndy/followers", "following_url": "https://api.github.com/users/shbhmpndy/following{/other_user}", "gists_url": "https://api.github.com/users/shbhmpndy/gists{/gist_id}", "starred_url": "https://api.github.com/users/shbhmpndy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shbhmpndy/subscriptions", "organizations_url": "https://api.github.com/users/shbhmpndy/orgs", "repos_url": "https://api.github.com/users/shbhmpndy/repos", "events_url": "https://api.github.com/users/shbhmpndy/events{/privacy}", "received_events_url": "https://api.github.com/users/shbhmpndy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-04T06:46:15Z", "updated_at": "2020-08-06T18:46:02Z", "closed_at": "2020-08-06T18:46:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking into explaining a variety of models, but when I came across Time Series I was puzzled.\r\n\r\nI have 2 questions/concerns.\r\n1. Is there a way to explain models built on time series data by taking time component as a feature? as in which time period/historical data impacted the current result the most? Models like ARIMA, SARIMAX, fbprophet?\r\n\r\n2. I tried ignoring the time component and by treating a time series data as a regression with exogenous features, the explanation explained the impact of the features on the forecasted value of next timestamp, my question being is that the right way to explain?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/494", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/494/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/494/events", "html_url": "https://github.com/marcotcr/lime/issues/494", "id": 667069720, "node_id": "MDU6SXNzdWU2NjcwNjk3MjA=", "number": 494, "title": "num_features for Image explanation", "user": {"login": "bharat-patidar", "id": 34475219, "node_id": "MDQ6VXNlcjM0NDc1MjE5", "avatar_url": "https://avatars0.githubusercontent.com/u/34475219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bharat-patidar", "html_url": "https://github.com/bharat-patidar", "followers_url": "https://api.github.com/users/bharat-patidar/followers", "following_url": "https://api.github.com/users/bharat-patidar/following{/other_user}", "gists_url": "https://api.github.com/users/bharat-patidar/gists{/gist_id}", "starred_url": "https://api.github.com/users/bharat-patidar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bharat-patidar/subscriptions", "organizations_url": "https://api.github.com/users/bharat-patidar/orgs", "repos_url": "https://api.github.com/users/bharat-patidar/repos", "events_url": "https://api.github.com/users/bharat-patidar/events{/privacy}", "received_events_url": "https://api.github.com/users/bharat-patidar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-28T13:23:13Z", "updated_at": "2020-07-31T22:54:19Z", "closed_at": "2020-07-31T22:54:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI just want to know, the meaning of _num_features_ parameter for _explain_instance_ method of _LimeImageExplainer_.\r\nWhat should be the maximum value for this parameter, Is it the number of pixels for a given image?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/493", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/493/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/493/events", "html_url": "https://github.com/marcotcr/lime/issues/493", "id": 664743475, "node_id": "MDU6SXNzdWU2NjQ3NDM0NzU=", "number": 493, "title": "LIME for traffic lane detection", "user": {"login": "M-I-Dx", "id": 52869386, "node_id": "MDQ6VXNlcjUyODY5Mzg2", "avatar_url": "https://avatars0.githubusercontent.com/u/52869386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M-I-Dx", "html_url": "https://github.com/M-I-Dx", "followers_url": "https://api.github.com/users/M-I-Dx/followers", "following_url": "https://api.github.com/users/M-I-Dx/following{/other_user}", "gists_url": "https://api.github.com/users/M-I-Dx/gists{/gist_id}", "starred_url": "https://api.github.com/users/M-I-Dx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M-I-Dx/subscriptions", "organizations_url": "https://api.github.com/users/M-I-Dx/orgs", "repos_url": "https://api.github.com/users/M-I-Dx/repos", "events_url": "https://api.github.com/users/M-I-Dx/events{/privacy}", "received_events_url": "https://api.github.com/users/M-I-Dx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T20:25:17Z", "updated_at": "2020-07-24T22:45:26Z", "closed_at": "2020-07-24T22:45:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to use LIME on a lane detection model? The input of my model is\r\n\r\n![image](https://user-images.githubusercontent.com/52869386/88334516-883c8700-cd4f-11ea-8a5e-dfdc71837910.png)\r\n\r\nand the output is \r\n![image](https://user-images.githubusercontent.com/52869386/88334561-99859380-cd4f-11ea-8d1d-6a06257eefee.png)\r\n\r\nIf yes, how should I go about doing it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/492", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/492/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/492/events", "html_url": "https://github.com/marcotcr/lime/issues/492", "id": 663216018, "node_id": "MDU6SXNzdWU2NjMyMTYwMTg=", "number": 492, "title": "Mismatch between highest contribution of features and class prediction", "user": {"login": "mike1130694", "id": 15694432, "node_id": "MDQ6VXNlcjE1Njk0NDMy", "avatar_url": "https://avatars2.githubusercontent.com/u/15694432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mike1130694", "html_url": "https://github.com/mike1130694", "followers_url": "https://api.github.com/users/mike1130694/followers", "following_url": "https://api.github.com/users/mike1130694/following{/other_user}", "gists_url": "https://api.github.com/users/mike1130694/gists{/gist_id}", "starred_url": "https://api.github.com/users/mike1130694/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mike1130694/subscriptions", "organizations_url": "https://api.github.com/users/mike1130694/orgs", "repos_url": "https://api.github.com/users/mike1130694/repos", "events_url": "https://api.github.com/users/mike1130694/events{/privacy}", "received_events_url": "https://api.github.com/users/mike1130694/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T18:19:56Z", "updated_at": "2020-07-24T22:53:49Z", "closed_at": "2020-07-24T22:53:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nI've been reviewing the open and closed issues and documentation to try to find out if the situation I've found is an issue or if I am interpreting something wrong.\r\n\r\nMy problem is related to these two issues\r\nIssue 438 [https://github.com/marcotcr/lime/issues/438](url)\r\nIssue 343 [https://github.com/marcotcr/lime/issues/343](url)\r\n\r\nI am doing a binary classification with two target classes \r\n0 = Rejected\r\n1 = Approved\r\n\r\nThe random forest classifier predicts class \"Approved\" with a probability of 0.79.\r\nthe explanation obtained using lime displays the same probabilities\r\n\r\n```\r\nrfc.predict(x.loc[[51]])\r\nOut[15]: array([1], dtype=int64)\r\n\r\nrfc.predict_proba(x.loc[[51]])\r\nOut[16]: array([[0.2024701, 0.7975299]])\r\n\r\nexp.predict_proba\r\nOut[13]: array([0.2024701, 0.7975299])\r\n```\r\n\r\nHowever, as you can see in the image below, most of the feature contributions are negative which would contribute to the prediction being \"Rejected\" instead of \"Approved\".\r\n\r\nI've been trying to interpret this explanations but I am having problems. According to one of your tutorials\r\n\r\n\"For categorical features, the feature contribution is always the same as the linear model weight.\"\r\n\r\nI wonder how does the contribution for numerical features is calculated. \r\nAccording to this book [https://christophm.github.io/interpretable-ml-book/lime.html](url), \"The effect on the prediction is the weight times the actual feature value\". Is this information correct?\r\n\r\nI am having a problem when limiting the number of features that are display. If I select the top 5 contributions most of them would be negative which is somehow contradictory of the predicted class and the probability.\r\n\r\nCould you please give me your thoughts on this situation or clarify me if I am understanding something wrong?\r\n\r\n![image](https://user-images.githubusercontent.com/15694432/88090390-ce49ed00-cb8d-11ea-9ed5-be9028e8086a.png)\r\n\r\nThanks in advance\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/491", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/491/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/491/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/491/events", "html_url": "https://github.com/marcotcr/lime/issues/491", "id": 662235668, "node_id": "MDU6SXNzdWU2NjIyMzU2Njg=", "number": 491, "title": "Get feature weights", "user": {"login": "bharat-patidar", "id": 34475219, "node_id": "MDQ6VXNlcjM0NDc1MjE5", "avatar_url": "https://avatars0.githubusercontent.com/u/34475219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bharat-patidar", "html_url": "https://github.com/bharat-patidar", "followers_url": "https://api.github.com/users/bharat-patidar/followers", "following_url": "https://api.github.com/users/bharat-patidar/following{/other_user}", "gists_url": "https://api.github.com/users/bharat-patidar/gists{/gist_id}", "starred_url": "https://api.github.com/users/bharat-patidar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bharat-patidar/subscriptions", "organizations_url": "https://api.github.com/users/bharat-patidar/orgs", "repos_url": "https://api.github.com/users/bharat-patidar/repos", "events_url": "https://api.github.com/users/bharat-patidar/events{/privacy}", "received_events_url": "https://api.github.com/users/bharat-patidar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-20T20:33:23Z", "updated_at": "2020-07-24T21:24:16Z", "closed_at": "2020-07-24T21:16:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThanks for sharing this wonderful repository.\r\n\r\nI was just wondering if there exists any API or function call which can give me coefficients/importance of features generated by LIME for the local surrogate model.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/490", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/490/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/490/events", "html_url": "https://github.com/marcotcr/lime/issues/490", "id": 657601524, "node_id": "MDU6SXNzdWU2NTc2MDE1MjQ=", "number": 490, "title": "Visualization is not displayed correctly", "user": {"login": "opostavnicha", "id": 58147438, "node_id": "MDQ6VXNlcjU4MTQ3NDM4", "avatar_url": "https://avatars2.githubusercontent.com/u/58147438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opostavnicha", "html_url": "https://github.com/opostavnicha", "followers_url": "https://api.github.com/users/opostavnicha/followers", "following_url": "https://api.github.com/users/opostavnicha/following{/other_user}", "gists_url": "https://api.github.com/users/opostavnicha/gists{/gist_id}", "starred_url": "https://api.github.com/users/opostavnicha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opostavnicha/subscriptions", "organizations_url": "https://api.github.com/users/opostavnicha/orgs", "repos_url": "https://api.github.com/users/opostavnicha/repos", "events_url": "https://api.github.com/users/opostavnicha/events{/privacy}", "received_events_url": "https://api.github.com/users/opostavnicha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-15T19:36:47Z", "updated_at": "2020-07-19T20:33:45Z", "closed_at": "2020-07-19T20:33:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "<img width=\"412\" alt=\"Screen Shot 2020-07-15 at 3 35 00 PM\" src=\"https://user-images.githubusercontent.com/58147438/87587957-db0fa200-c6b0-11ea-8db8-5eea1ac68644.png\">\r\n\r\nGreetings! I have been trying to implement explanations for my BERT model and I couldn't get them displayed nicely (letters are overlapping). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/489", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/489/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/489/events", "html_url": "https://github.com/marcotcr/lime/issues/489", "id": 656813703, "node_id": "MDU6SXNzdWU2NTY4MTM3MDM=", "number": 489, "title": "Mutiple Training Attributes Error for Multi-Class Classification Task with Tabular Explainer", "user": {"login": "safieurrahman", "id": 14291375, "node_id": "MDQ6VXNlcjE0MjkxMzc1", "avatar_url": "https://avatars0.githubusercontent.com/u/14291375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/safieurrahman", "html_url": "https://github.com/safieurrahman", "followers_url": "https://api.github.com/users/safieurrahman/followers", "following_url": "https://api.github.com/users/safieurrahman/following{/other_user}", "gists_url": "https://api.github.com/users/safieurrahman/gists{/gist_id}", "starred_url": "https://api.github.com/users/safieurrahman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/safieurrahman/subscriptions", "organizations_url": "https://api.github.com/users/safieurrahman/orgs", "repos_url": "https://api.github.com/users/safieurrahman/repos", "events_url": "https://api.github.com/users/safieurrahman/events{/privacy}", "received_events_url": "https://api.github.com/users/safieurrahman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-07-14T18:31:27Z", "updated_at": "2020-08-07T21:12:29Z", "closed_at": "2020-07-24T21:12:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I am trying to use the LIME recurrent tabular Explainer with a modified CNN model for a multi-class classification task. The said implementation passes the training attributes as [X_a_train, X_t_train] to the model (first layer is embedded layer). The explainer works fine but the 'explain instance' gives the following error when i am stacking the arrays i.e X_a_test[0], X_t_test[0] and passing it to the explainer. \r\n\r\nAlternatively, i can't pass the above arrays as a list as i conventionally do to get predictions from the model as the implementation can't take the transpose of Lists. \r\n\r\nI am new in this area and I'll be very thankful for your guidance. Here is the code,\r\n\r\ninput1 = X_a_train\r\ninput2 = X_t_train\r\n\r\nmerged_array = np.stack([input1,input2], axis=1)\r\nmerged_array= merged_array.transpose(0, 2, 1) //to match the required shape\r\n\r\nexplainer = lime.lime_tabular.RecurrentTabularExplainer(training_data=merged_array, training_labels=y_a_train, mode='classification',feature_names = features_name)\r\n\r\nmerged_array_test = np.stack([X_a_test[0], X_t_test[0]], axis=1)\r\n\r\nexp = explainer.explain_instance(merged_array_test, classifier_fn = best_model.predict , num_features=2)\r\nexp.show_in_notebook(show_all=True)\r\n\r\n![image](https://user-images.githubusercontent.com/14291375/87725510-b7864d80-c7bd-11ea-9c54-2383d6f63fad.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/488", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/488/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/488/events", "html_url": "https://github.com/marcotcr/lime/issues/488", "id": 655319498, "node_id": "MDU6SXNzdWU2NTUzMTk0OTg=", "number": 488, "title": "Lime image explainer with yolov3 keras (or darknet)", "user": {"login": "wyzrxrs", "id": 56182534, "node_id": "MDQ6VXNlcjU2MTgyNTM0", "avatar_url": "https://avatars1.githubusercontent.com/u/56182534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wyzrxrs", "html_url": "https://github.com/wyzrxrs", "followers_url": "https://api.github.com/users/wyzrxrs/followers", "following_url": "https://api.github.com/users/wyzrxrs/following{/other_user}", "gists_url": "https://api.github.com/users/wyzrxrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/wyzrxrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wyzrxrs/subscriptions", "organizations_url": "https://api.github.com/users/wyzrxrs/orgs", "repos_url": "https://api.github.com/users/wyzrxrs/repos", "events_url": "https://api.github.com/users/wyzrxrs/events{/privacy}", "received_events_url": "https://api.github.com/users/wyzrxrs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-12T02:54:33Z", "updated_at": "2020-07-18T01:46:19Z", "closed_at": "2020-07-17T22:07:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI would like to use Lime to explain the predictions from the yolov3 keras model. I have issues on the following explanation line.\r\n\r\nexplanation = explainer.explain_instance(image_to_explain, predict_function, hide_color=0, top_labels=5,  num_samples=1000)\r\n\r\nMy first question:  the image_to_explain as the first parameter, what is the shape of this image, is it 3-dimension or 4-dimension? \r\n\r\nSecond, for the predict_function, the pretrained model 'model.h5' does not seem to provide a predict function directly.  Is there a way to produce the output array with prediction of all labels and all probabilities ?\r\n\r\nDo you have a sample use case for yolov3 keras? It could also be examples using Lime with models from Yolov3 Darknet, I have the similar issues regarding the predict function. So, having examples would be of great help.\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/487", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/487/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/487/events", "html_url": "https://github.com/marcotcr/lime/issues/487", "id": 655156118, "node_id": "MDU6SXNzdWU2NTUxNTYxMTg=", "number": 487, "title": "Fidelity metric", "user": {"login": "twi09", "id": 42271285, "node_id": "MDQ6VXNlcjQyMjcxMjg1", "avatar_url": "https://avatars0.githubusercontent.com/u/42271285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twi09", "html_url": "https://github.com/twi09", "followers_url": "https://api.github.com/users/twi09/followers", "following_url": "https://api.github.com/users/twi09/following{/other_user}", "gists_url": "https://api.github.com/users/twi09/gists{/gist_id}", "starred_url": "https://api.github.com/users/twi09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twi09/subscriptions", "organizations_url": "https://api.github.com/users/twi09/orgs", "repos_url": "https://api.github.com/users/twi09/repos", "events_url": "https://api.github.com/users/twi09/events{/privacy}", "received_events_url": "https://api.github.com/users/twi09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-11T07:30:48Z", "updated_at": "2020-07-17T22:03:58Z", "closed_at": "2020-07-17T22:03:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi !\r\nI want to compute a fidelity metric with LIME for numerical features. \r\nThe prediction of the local model for an example to explain is define as the sum of the coefficient plus the intercept, so I deduce that the example to explain is a vector of 1. \r\nHow to calculate the prediction of the local model for other points of my dataset ?\r\n(I choose discretization_continuous=True) \r\nThank you !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/486", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/486/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/486/events", "html_url": "https://github.com/marcotcr/lime/issues/486", "id": 654805937, "node_id": "MDU6SXNzdWU2NTQ4MDU5Mzc=", "number": 486, "title": "Reproducibility", "user": {"login": "Dola47", "id": 45386621, "node_id": "MDQ6VXNlcjQ1Mzg2NjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/45386621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dola47", "html_url": "https://github.com/Dola47", "followers_url": "https://api.github.com/users/Dola47/followers", "following_url": "https://api.github.com/users/Dola47/following{/other_user}", "gists_url": "https://api.github.com/users/Dola47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dola47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dola47/subscriptions", "organizations_url": "https://api.github.com/users/Dola47/orgs", "repos_url": "https://api.github.com/users/Dola47/repos", "events_url": "https://api.github.com/users/Dola47/events{/privacy}", "received_events_url": "https://api.github.com/users/Dola47/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-10T14:04:10Z", "updated_at": "2020-07-24T22:42:16Z", "closed_at": "2020-07-17T21:59:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\n\r\nI wonder why a lot of people mentioned that LIME has randomness in its explainability as in #67.\r\n\r\nI see that for example in LimeTabularExplainer random seed is internally used even if it is not defined by the user. Accordingly, given that also random seed is used in the model and the prediction function yield every call the same probability we will always get the same explanation out of LIME for the same instance for, even if we called it more than once, Am I right? \r\n\r\nI see that the only way to get a different explanation for the same instance is to pass different random_state to the explainer in different calls.\r\n\r\nPlease, inform me if I am getting this point correctly or not?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/485", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/485/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/485/events", "html_url": "https://github.com/marcotcr/lime/issues/485", "id": 653346723, "node_id": "MDU6SXNzdWU2NTMzNDY3MjM=", "number": 485, "title": "Discretization and Categorical features", "user": {"login": "Dola47", "id": 45386621, "node_id": "MDQ6VXNlcjQ1Mzg2NjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/45386621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dola47", "html_url": "https://github.com/Dola47", "followers_url": "https://api.github.com/users/Dola47/followers", "following_url": "https://api.github.com/users/Dola47/following{/other_user}", "gists_url": "https://api.github.com/users/Dola47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dola47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dola47/subscriptions", "organizations_url": "https://api.github.com/users/Dola47/orgs", "repos_url": "https://api.github.com/users/Dola47/repos", "events_url": "https://api.github.com/users/Dola47/events{/privacy}", "received_events_url": "https://api.github.com/users/Dola47/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-07-08T14:31:26Z", "updated_at": "2020-07-24T23:47:21Z", "closed_at": "2020-07-17T21:40:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have some questions that I will be glad to have some precise answers to them:\r\n\r\n1- What are the benefits of applying discretization in the case of LimeTabularExplainer, and what are the disadvantages? In other words, what I will gain if I applied the discretization and what I will lose if I have not applied it?\r\n\r\n2- I tried to implement all of the discretizers in LIME, each one result in different explanations. Accordingly, I need to know what is the best discretizer out of them, and why the quartile discretizer has been chosen to be the default one?\r\n\r\n3- Why the categorical features have to be LabelEncoded? \r\n\r\n>  Finally, we use a One-hot encoder, so that the classifier does not take our categorical features as continuous features. We will use this encoder only for the classifier, not for the explainer - and the reason is that the explainer must make sure that a categorical feature only has one value.\r\n\r\nWhat does it mean that the explainer must make sure that a categorical feature only has one value? Does LIME sum back the different categories from the same categorical feature in case of OneHotEncoding, or it treats them as if each one is a  new separate feature?\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/484", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/484/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/484/events", "html_url": "https://github.com/marcotcr/lime/issues/484", "id": 651661581, "node_id": "MDU6SXNzdWU2NTE2NjE1ODE=", "number": 484, "title": "the meaning of fun get_image_and_mask' param min_weight?? ", "user": {"login": "MrChenA", "id": 19612068, "node_id": "MDQ6VXNlcjE5NjEyMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/19612068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrChenA", "html_url": "https://github.com/MrChenA", "followers_url": "https://api.github.com/users/MrChenA/followers", "following_url": "https://api.github.com/users/MrChenA/following{/other_user}", "gists_url": "https://api.github.com/users/MrChenA/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrChenA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrChenA/subscriptions", "organizations_url": "https://api.github.com/users/MrChenA/orgs", "repos_url": "https://api.github.com/users/MrChenA/repos", "events_url": "https://api.github.com/users/MrChenA/events{/privacy}", "received_events_url": "https://api.github.com/users/MrChenA/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-06T16:17:08Z", "updated_at": "2020-07-18T13:52:49Z", "closed_at": "2020-07-17T21:33:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "in fun `get_image_and_mask`, what's the meaning of the param `min_weight`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/483", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/483/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/483/events", "html_url": "https://github.com/marcotcr/lime/issues/483", "id": 651655706, "node_id": "MDU6SXNzdWU2NTE2NTU3MDY=", "number": 483, "title": "lime_image.py import error", "user": {"login": "MrChenA", "id": 19612068, "node_id": "MDQ6VXNlcjE5NjEyMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/19612068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrChenA", "html_url": "https://github.com/MrChenA", "followers_url": "https://api.github.com/users/MrChenA/followers", "following_url": "https://api.github.com/users/MrChenA/following{/other_user}", "gists_url": "https://api.github.com/users/MrChenA/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrChenA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrChenA/subscriptions", "organizations_url": "https://api.github.com/users/MrChenA/orgs", "repos_url": "https://api.github.com/users/MrChenA/repos", "events_url": "https://api.github.com/users/MrChenA/events{/privacy}", "received_events_url": "https://api.github.com/users/MrChenA/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-06T16:07:48Z", "updated_at": "2020-07-17T21:32:02Z", "closed_at": "2020-07-17T21:32:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "`from tqdm.auto import tqdm` is not correct,there is no tqdm.auto in tqdm,so I used` from tqdm import tqdm` to replace it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/481", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/481/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/481/events", "html_url": "https://github.com/marcotcr/lime/issues/481", "id": 648878525, "node_id": "MDU6SXNzdWU2NDg4Nzg1MjU=", "number": 481, "title": "plot", "user": {"login": "kaixiyang", "id": 30328923, "node_id": "MDQ6VXNlcjMwMzI4OTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/30328923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaixiyang", "html_url": "https://github.com/kaixiyang", "followers_url": "https://api.github.com/users/kaixiyang/followers", "following_url": "https://api.github.com/users/kaixiyang/following{/other_user}", "gists_url": "https://api.github.com/users/kaixiyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaixiyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaixiyang/subscriptions", "organizations_url": "https://api.github.com/users/kaixiyang/orgs", "repos_url": "https://api.github.com/users/kaixiyang/repos", "events_url": "https://api.github.com/users/kaixiyang/events{/privacy}", "received_events_url": "https://api.github.com/users/kaixiyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-01T10:43:55Z", "updated_at": "2020-07-02T21:06:10Z", "closed_at": "2020-07-02T21:06:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Marco,\r\n\r\nCould I get some advice on the plot of LIME ? I got the explanation plot for individual instances by using exp.as_pyplot_figure(), I am wondering if there is any other way to get the plots of predicted value from HTML by using python? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/480", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/480/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/480/events", "html_url": "https://github.com/marcotcr/lime/issues/480", "id": 648605723, "node_id": "MDU6SXNzdWU2NDg2MDU3MjM=", "number": 480, "title": "Undesirable progress bar", "user": {"login": "palatos", "id": 49554605, "node_id": "MDQ6VXNlcjQ5NTU0NjA1", "avatar_url": "https://avatars1.githubusercontent.com/u/49554605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palatos", "html_url": "https://github.com/palatos", "followers_url": "https://api.github.com/users/palatos/followers", "following_url": "https://api.github.com/users/palatos/following{/other_user}", "gists_url": "https://api.github.com/users/palatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/palatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palatos/subscriptions", "organizations_url": "https://api.github.com/users/palatos/orgs", "repos_url": "https://api.github.com/users/palatos/repos", "events_url": "https://api.github.com/users/palatos/events{/privacy}", "received_events_url": "https://api.github.com/users/palatos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-01T01:34:42Z", "updated_at": "2020-07-02T22:12:26Z", "closed_at": "2020-07-02T21:00:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Recently I started getting this progress bar when using explain_instance() for image explanations.\r\n![image](https://user-images.githubusercontent.com/49554605/86193169-a5e84900-bb21-11ea-8012-e2dc995e98d5.png)\r\nI have a code that runs this function many times, so these progress bars are generating a lot of unnecessary output and this also seems like it might be slowing the code down a bit.\r\n\r\nIs there any way to turn this off? It seems to be a relatively recent behavior. I've been using this particular code for the past 2 years without this happening.\r\n\r\nThanks in advance for any clarification.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/477", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/477/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/477/events", "html_url": "https://github.com/marcotcr/lime/issues/477", "id": 642737762, "node_id": "MDU6SXNzdWU2NDI3Mzc3NjI=", "number": 477, "title": "Consistency issue in lime image explanation", "user": {"login": "Abdulk084", "id": 31172014, "node_id": "MDQ6VXNlcjMxMTcyMDE0", "avatar_url": "https://avatars3.githubusercontent.com/u/31172014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Abdulk084", "html_url": "https://github.com/Abdulk084", "followers_url": "https://api.github.com/users/Abdulk084/followers", "following_url": "https://api.github.com/users/Abdulk084/following{/other_user}", "gists_url": "https://api.github.com/users/Abdulk084/gists{/gist_id}", "starred_url": "https://api.github.com/users/Abdulk084/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Abdulk084/subscriptions", "organizations_url": "https://api.github.com/users/Abdulk084/orgs", "repos_url": "https://api.github.com/users/Abdulk084/repos", "events_url": "https://api.github.com/users/Abdulk084/events{/privacy}", "received_events_url": "https://api.github.com/users/Abdulk084/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-22T04:17:59Z", "updated_at": "2020-06-26T18:58:27Z", "closed_at": "2020-06-26T18:58:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Every time I run `explanation.get_image_and_mask`, I get different regions of the image highlighted as green and red. I keep all the parameters even after providing same seed value in `explainer.explain_instance  `.\r\n\r\nSome of the results are as under.\r\n\r\n**Run_1:**\r\n![run_1](https://user-images.githubusercontent.com/31172014/85247899-a4b87b80-b492-11ea-9ed8-94e5b39cce11.png)\r\n\r\n**Run_2:**\r\n![Run_2](https://user-images.githubusercontent.com/31172014/85247924-bdc12c80-b492-11ea-9c62-34800735379a.png)\r\n\r\n**Run_3:**\r\n![run_3](https://user-images.githubusercontent.com/31172014/85247957-d03b6600-b492-11ea-8841-f9a402f3f1dc.png)\r\n\r\n\r\nI used the following parameters for the above explanation.\r\n```\r\n%%time\r\n# Hide color is the color for a superpixel turned OFF. Alternatively, if it is NONE, the superpixel will be replaced by the average of its pixels\r\nexplanation = explainer.explain_instance(X_train_0, new_predict_fn, top_labels=2, hide_color=0, num_samples=10, random_seed=10)\r\n\r\ntemp, mask = explanation.get_image_and_mask(explanation.top_labels[0], positive_only=False, num_features=10, hide_rest=False)\r\nplt.imshow(mark_boundaries(temp / 2 + 0.5, mask))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/476", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/476/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/476/events", "html_url": "https://github.com/marcotcr/lime/issues/476", "id": 642573181, "node_id": "MDU6SXNzdWU2NDI1NzMxODE=", "number": 476, "title": "Right value for top_labels in lime interpretability module for binary image classification", "user": {"login": "Abdulk084", "id": 31172014, "node_id": "MDQ6VXNlcjMxMTcyMDE0", "avatar_url": "https://avatars3.githubusercontent.com/u/31172014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Abdulk084", "html_url": "https://github.com/Abdulk084", "followers_url": "https://api.github.com/users/Abdulk084/followers", "following_url": "https://api.github.com/users/Abdulk084/following{/other_user}", "gists_url": "https://api.github.com/users/Abdulk084/gists{/gist_id}", "starred_url": "https://api.github.com/users/Abdulk084/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Abdulk084/subscriptions", "organizations_url": "https://api.github.com/users/Abdulk084/orgs", "repos_url": "https://api.github.com/users/Abdulk084/repos", "events_url": "https://api.github.com/users/Abdulk084/events{/privacy}", "received_events_url": "https://api.github.com/users/Abdulk084/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-21T14:25:02Z", "updated_at": "2020-06-26T18:54:46Z", "closed_at": "2020-06-26T18:54:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using [lime][1] for explaining binary classification images. The output of the prediction is as follows.\r\n\r\n    pred_train =array([[0.8700583 ],\r\n           [0.05999151],\r\n           [0.92959476],\r\n           [0.07004735],\r\n           [0.07470205],\r\n           [0.2557885 ]], dtype=float32)\r\nWhen `pred_train>0.5` then it is classified as `class_1_image` and if `pred_train<0.5` then it is classified as `class_2_image`\r\n\r\nAs we can see that `pred_train[0]` belongs to `class_1_image`. \r\n\r\nNow I want to explain this prediction, i.e `pred_train[0]` for which I used corresponding `X_train_0` as follows in lime.\r\n\r\n    explanation = explainer.explain_instance(X_train_0, new_predict_fn, top_labels=2, hide_color=0, num_samples=10)\r\n\r\nMy first question is **What should be the value of `top_labels` in binary image classification when the prediction output is a single probability and why?**\r\n\r\nThe image I want to explain is `X_train_0` which belongs to `class_1_image` as `pred_train[0]>0.5`. The `X_train_0` image is shown below.\r\n\r\n![download](https://user-images.githubusercontent.com/31172014/85226998-bc095180-b41d-11ea-9060-9cba6b973c51.png)\r\n\r\nThen I used the following code to explain my image.\r\n\r\n```\r\ntemp, mask = explanation.get_image_and_mask(explanation.top_labels[0], positive_only=True, num_features=5, hide_rest=True)\r\nplt.imshow(mark_boundaries(temp / 2 + 0.5, mask))\r\n```\r\nAnd obtained the following image as an explanation.\r\n![download (1)](https://user-images.githubusercontent.com/31172014/85227046-0ee30900-b41e-11ea-8280-5123ba24b91d.png)\r\n\r\nHere I used `num_features=5`, which means 5 superpixels should be found. **How can I spot these 5 features in my image?**\r\n\r\nIn case, I spot these 5 features in the image explained, **does that mean that these five features are positively correlated with the probability prediction of this class for this specific image?**\r\n\r\n**Can I also find out what is the value of that positive correlation?**\r\n\r\n\r\n  [1]: https://github.com/marcotcr/lime", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/475", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/475/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/475/events", "html_url": "https://github.com/marcotcr/lime/issues/475", "id": 639595964, "node_id": "MDU6SXNzdWU2Mzk1OTU5NjQ=", "number": 475, "title": "Use the original un-scaled data or a scaled dataset?", "user": {"login": "kaixiyang", "id": 30328923, "node_id": "MDQ6VXNlcjMwMzI4OTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/30328923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaixiyang", "html_url": "https://github.com/kaixiyang", "followers_url": "https://api.github.com/users/kaixiyang/followers", "following_url": "https://api.github.com/users/kaixiyang/following{/other_user}", "gists_url": "https://api.github.com/users/kaixiyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaixiyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaixiyang/subscriptions", "organizations_url": "https://api.github.com/users/kaixiyang/orgs", "repos_url": "https://api.github.com/users/kaixiyang/repos", "events_url": "https://api.github.com/users/kaixiyang/events{/privacy}", "received_events_url": "https://api.github.com/users/kaixiyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-16T11:40:15Z", "updated_at": "2020-06-16T22:56:05Z", "closed_at": "2020-06-16T22:56:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Marco, \r\n\r\nCould I get some advice on the application of LIME and the use of data scaling? I am using LIME to explain predictions from a classification model that was built using a dataset that was firstly scaled. For LIME, is it recommended to use the original un-scaled data or can a scaled dataset be used?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/474", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/474/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/474/events", "html_url": "https://github.com/marcotcr/lime/issues/474", "id": 638531327, "node_id": "MDU6SXNzdWU2Mzg1MzEzMjc=", "number": 474, "title": "\u064a\u0636\u0647\u0631 \u0644\u064a \u0647\u0630\u0627 \u0627\u0644\u062e\u0637\u0621 \u0639\u0646\u062f \u0627\u0644\u0636\u063a\u0637 \u0639\u0649 \u0627\u0644\u0632\u0631 \u0644\u064a\u0628\u062f\u0621 \u0627\u0644\u062a\u0633\u062c\u064a\u0644         TypeError: 'numpy.ndarray' object is not callable", "user": {"login": "hanirida", "id": 49533037, "node_id": "MDQ6VXNlcjQ5NTMzMDM3", "avatar_url": "https://avatars2.githubusercontent.com/u/49533037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanirida", "html_url": "https://github.com/hanirida", "followers_url": "https://api.github.com/users/hanirida/followers", "following_url": "https://api.github.com/users/hanirida/following{/other_user}", "gists_url": "https://api.github.com/users/hanirida/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanirida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanirida/subscriptions", "organizations_url": "https://api.github.com/users/hanirida/orgs", "repos_url": "https://api.github.com/users/hanirida/repos", "events_url": "https://api.github.com/users/hanirida/events{/privacy}", "received_events_url": "https://api.github.com/users/hanirida/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-15T04:25:55Z", "updated_at": "2020-06-15T21:05:54Z", "closed_at": "2020-06-15T20:54:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "def predict(audio):\r\n    prob=model.predict(audio.reshape(1,8000,1))\r\n    index=np.argmax(prob[0])\r\n    return classes[index]\r\nsamplerate = 16000\r\nduration = 1 #seconds\r\nfilename = 'testing.wav'\r\nprint(\"start\")\r\nmydata = sd.rec(int(samplerate * duration), samplerate=samplerate,\r\n                channels=1, blocking= False)\r\nprint(\"end\")\r\nsd.wait()\r\nsf.write(filename, mydata, samplerate)\r\n#reading the voice commands\r\nsamples, sample_rate = librosa.load(filename, sr = 16000)\r\nsamples = librosa.resample(samples, sample_rate, 8000)\r\nipd.Audio(samples, rate=8000)\r\nprint(predict(samples))\r\n\r\nsample = str(predict(samples))\r\nmy_label = tk.Label(window, width=15, height=5, bg='white', \r\n                    fg='black', text=\"%s\" %(sample))\r\nmy_label.grid(row=2, column=1,padx=2,pady=5)\r\n\r\nmy_button = tk.Button(window, text=\"\u0627\u0628\u062f\u0621\", width=15, height=3,\r\n                      bg='red', fg='black', command=lambda:mydata(sd.rec)) \r\nmy_button.grid(row=2, column=3,padx=2,pady=5)\r\n\r\nwindow.mainloop()", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/473", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/473/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/473/events", "html_url": "https://github.com/marcotcr/lime/issues/473", "id": 637341325, "node_id": "MDU6SXNzdWU2MzczNDEzMjU=", "number": 473, "title": "Not Installing on Python 3.8", "user": {"login": "benjaminkaplanphd", "id": 29105317, "node_id": "MDQ6VXNlcjI5MTA1MzE3", "avatar_url": "https://avatars0.githubusercontent.com/u/29105317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaminkaplanphd", "html_url": "https://github.com/benjaminkaplanphd", "followers_url": "https://api.github.com/users/benjaminkaplanphd/followers", "following_url": "https://api.github.com/users/benjaminkaplanphd/following{/other_user}", "gists_url": "https://api.github.com/users/benjaminkaplanphd/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaminkaplanphd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaminkaplanphd/subscriptions", "organizations_url": "https://api.github.com/users/benjaminkaplanphd/orgs", "repos_url": "https://api.github.com/users/benjaminkaplanphd/repos", "events_url": "https://api.github.com/users/benjaminkaplanphd/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaminkaplanphd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-11T21:45:12Z", "updated_at": "2020-06-26T21:38:58Z", "closed_at": "2020-06-26T21:38:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a hardcoded version in the setup.py file for Pillow, which is incompatible with Python 3.8.\r\n\r\nAccording to [this](https://pillow.readthedocs.io/en/latest/installation.html#notes) compatibility for version 5.4.1 (hard coded [here](https://github.com/marcotcr/lime/blob/master/setup.py#L17)) ended in 3.7\r\n\r\nPlease confirm this is a correct diagnosis, and supply a timeline for a fix.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/472", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/472/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/472/events", "html_url": "https://github.com/marcotcr/lime/issues/472", "id": 636658638, "node_id": "MDU6SXNzdWU2MzY2NTg2Mzg=", "number": 472, "title": "Whether explainer returns the plot for highest probability prediction only?", "user": {"login": "hanzigs", "id": 30790120, "node_id": "MDQ6VXNlcjMwNzkwMTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/30790120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanzigs", "html_url": "https://github.com/hanzigs", "followers_url": "https://api.github.com/users/hanzigs/followers", "following_url": "https://api.github.com/users/hanzigs/following{/other_user}", "gists_url": "https://api.github.com/users/hanzigs/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanzigs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanzigs/subscriptions", "organizations_url": "https://api.github.com/users/hanzigs/orgs", "repos_url": "https://api.github.com/users/hanzigs/repos", "events_url": "https://api.github.com/users/hanzigs/events{/privacy}", "received_events_url": "https://api.github.com/users/hanzigs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-11T01:55:00Z", "updated_at": "2020-06-12T06:01:31Z", "closed_at": "2020-06-12T06:01:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I do a anomaly detection from a model and returns the probability for a record, the actual value for the feature is not an outlier, so I get probabilities \r\n\"Inlier\" = 89.84% and \"outlier\" = 10.16%\r\nand explanation weights given as -0.06724317172140935\r\n![image](https://user-images.githubusercontent.com/30790120/84336084-df402f80-abd9-11ea-9994-8c828f4e1624.png)\r\nand the plot as\r\n![image](https://user-images.githubusercontent.com/30790120/84336125-f252ff80-abd9-11ea-8502-798465a13de8.png)\r\n\r\nNext, i do a prediction for another data, actual value for the feature is a outlier, so i get \r\n\"Inlier\" = 2.65% and \"outlier\" = 97.34%\r\nand explanation weights given as -0.0711641914761484\r\n![image](https://user-images.githubusercontent.com/30790120/84336200-20384400-abda-11ea-9483-9297be8afa84.png)\r\nand the plot as\r\n![image](https://user-images.githubusercontent.com/30790120/84336222-2a5a4280-abda-11ea-928a-2437b56b3b94.png)\r\n\r\nOnly seeing the explanation plot i couldn't differentiate the two, \r\nexplainer returns for highest probability value\r\nmay i know how to revert for the first one to show as a not a outlier.\r\n\r\nI tried top_labels=1 for the first case, throws error\r\n![image](https://user-images.githubusercontent.com/30790120/84338303-0baa7a80-abdf-11ea-921b-8a5589fceb9a.png)\r\n\r\n````\r\nfig = exp.as_pyplot_figure()\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-100-0715b5937d23>\", line 1, in <module>\r\n    fig = exp.as_pyplot_figure()\r\n\r\n  File \"C:\\Users\\PremGeorgeAlphonse\\Anaconda3\\lib\\site-packages\\lime\\explanation.py\", line 169, in as_pyplot_figure\r\n    exp = self.as_list(label=label, **kwargs)\r\n\r\n  File \"C:\\Users\\PremGeorgeAlphonse\\Anaconda3\\lib\\site-packages\\lime\\explanation.py\", line 143, in as_list\r\n    ans = self.domain_mapper.map_exp_ids(self.local_exp[label_to_use], **kwargs)\r\n\r\nKeyError: 1\r\n````\r\nFor second case it is working\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/471", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/471/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/471/events", "html_url": "https://github.com/marcotcr/lime/issues/471", "id": 634781195, "node_id": "MDU6SXNzdWU2MzQ3ODExOTU=", "number": 471, "title": "Explainer not working properly with ktrain", "user": {"login": "rcmcabral", "id": 28853530, "node_id": "MDQ6VXNlcjI4ODUzNTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/28853530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcmcabral", "html_url": "https://github.com/rcmcabral", "followers_url": "https://api.github.com/users/rcmcabral/followers", "following_url": "https://api.github.com/users/rcmcabral/following{/other_user}", "gists_url": "https://api.github.com/users/rcmcabral/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcmcabral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcmcabral/subscriptions", "organizations_url": "https://api.github.com/users/rcmcabral/orgs", "repos_url": "https://api.github.com/users/rcmcabral/repos", "events_url": "https://api.github.com/users/rcmcabral/events{/privacy}", "received_events_url": "https://api.github.com/users/rcmcabral/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-08T16:55:28Z", "updated_at": "2020-06-09T15:01:40Z", "closed_at": "2020-06-08T23:10:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I was hoping to use Lime to explain a BERT model trained through ktrain. I am basically following the sample they have on [20 newsgroups](https://colab.research.google.com/drive/1ixOZTKLz4aAa-MtC6dy_sAvc9HujQmHN). The library has a function called `predictor.predict_proba()` that accepts a string or a list/array of strings and outputs probabilities (1 dim if single string, 2 dim if multiple). I thought this would work seamlessly with LIME but my code below (which can be appended directly to the ktrain example) just runs endlessly without any error/warning even if my input is only one sample.\r\n\r\n```\r\nimport lime\r\nfrom lime import lime_text\r\nfrom lime.lime_text import LimeTextExplainer\r\n\r\nexplainer = LimeTextExplainer(class_names=reloaded_predictor.get_classes())\r\n\r\nexp = explainer.explain_instance(test_b.data[0], reloaded_predictor.predict_proba, num_features=10)\r\nexp.show_in_notebook(text = test_b.data[0])\r\n```\r\n\r\nThe predictor function works well when ran these ways:\r\n```\r\nreloaded_predictor.predict_proba(test_b.data[0])\r\nreloaded_predictor.predict_proba(test_b.data[0:1])\r\nreloaded_predictor.predict_proba(test_b.data[0:1000])\r\n```\r\n\r\nOne thing I noticed when using it with the explainer is that for one sample, the predict_proba function seems to receive more samples to make predictions on. ktrain shows a progress bar when there are a lot of samples to process. Giving it 1000 samples usually shows \"xx/1000\" as it processes these. One sample is usually too quick to see. When used with the explainer as in the code above, \"xx/5000\" shows up. Attached an image below that shows this. Top is a normal `predict_proba` use; bottom was used with the explainer. \r\n\r\n![image](https://user-images.githubusercontent.com/28853530/84057955-143a5f80-a9eb-11ea-9bdc-8cab4bddc1fa.png)\r\n\r\nI thought is was being split up into a character array but when I use `explainer.explain_instance(test_b.data[0:1]...` instead, the explainer throws an error of it expecting strings not bytes.\r\n\r\nI was just wondering what could have gone wrong between the input and it being passed to the `predict_proba` function and if I'm missing something since it technically should work based on the documentation.\r\n\r\n> classifier_fn: classifier prediction probability function, which\r\n>                 takes a list of d strings and outputs a (d, k) numpy array with\r\n>                 prediction probabilities, where k is the number of classes.\r\n>                 For ScikitClassifiers , this is classifier.predict_proba.\r\n\r\nWould love to have both libraries work with each other so I'd love any feedback specially if I got something wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/470", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/470/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/470/events", "html_url": "https://github.com/marcotcr/lime/issues/470", "id": 630840619, "node_id": "MDU6SXNzdWU2MzA4NDA2MTk=", "number": 470, "title": "Distance function computation on LimeImageExplainer", "user": {"login": "CrohnEngineer", "id": 16773532, "node_id": "MDQ6VXNlcjE2NzczNTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/16773532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrohnEngineer", "html_url": "https://github.com/CrohnEngineer", "followers_url": "https://api.github.com/users/CrohnEngineer/followers", "following_url": "https://api.github.com/users/CrohnEngineer/following{/other_user}", "gists_url": "https://api.github.com/users/CrohnEngineer/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrohnEngineer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrohnEngineer/subscriptions", "organizations_url": "https://api.github.com/users/CrohnEngineer/orgs", "repos_url": "https://api.github.com/users/CrohnEngineer/repos", "events_url": "https://api.github.com/users/CrohnEngineer/events{/privacy}", "received_events_url": "https://api.github.com/users/CrohnEngineer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-04T13:47:08Z", "updated_at": "2020-06-05T20:48:37Z", "closed_at": "2020-06-05T20:48:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\n\r\nI have been experimenting with Lime in some image classification tasks, and I would like to start by thanking you for providing this library.\r\n\r\nLike somebody else noticed here #403 , the distance function computed in the `explain_instance` method of the LimeExplainer is not equal to the one provided in the original paper.\r\nWhile I have understood the reason behind this implementation choice in the `LimeTextExplainer`, I have noticed that even in the `LimeImageExplainer` the distance computation is calculated over the interpretable (or binary) representations `x'` and `z'` in `{0,1}^d'`.\r\n\r\nWouldn't be more meaningful in the context of image explanation if the distances were computed over the original representations `x` and `z` in `R^d`? Or am I missing some reason behind this code?\r\n\r\nThank you in advance for your reply.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/469", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/469/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/469/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/469/events", "html_url": "https://github.com/marcotcr/lime/issues/469", "id": 629213711, "node_id": "MDU6SXNzdWU2MjkyMTM3MTE=", "number": 469, "title": "Warning and suboptimal outputs", "user": {"login": "SelComputas", "id": 54527390, "node_id": "MDQ6VXNlcjU0NTI3Mzkw", "avatar_url": "https://avatars0.githubusercontent.com/u/54527390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SelComputas", "html_url": "https://github.com/SelComputas", "followers_url": "https://api.github.com/users/SelComputas/followers", "following_url": "https://api.github.com/users/SelComputas/following{/other_user}", "gists_url": "https://api.github.com/users/SelComputas/gists{/gist_id}", "starred_url": "https://api.github.com/users/SelComputas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SelComputas/subscriptions", "organizations_url": "https://api.github.com/users/SelComputas/orgs", "repos_url": "https://api.github.com/users/SelComputas/repos", "events_url": "https://api.github.com/users/SelComputas/events{/privacy}", "received_events_url": "https://api.github.com/users/SelComputas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-02T13:41:47Z", "updated_at": "2020-06-02T14:47:22Z", "closed_at": "2020-06-02T14:47:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am trying to use the *lime_image.LimeImageExplainer()* for my saved Tensorflow model (.pb). \r\n\r\nI have implemented a predict method:\r\n`    def test(self, data, output_node = 'model_outputs'):\r\n\r\n        # Know your output node name (model_output:0)\r\n        output_tensor = self.graph.get_tensor_by_name(\"{}:0\".format(output_node))\r\n        x = self.graph.get_tensor_by_name('Placeholder:0')\r\n        output = self.sess.run(output_tensor, feed_dict = {x: data})\r\n\r\n        return output`\r\n\r\nwhich returns a numpy array with probabilities for the three different classes\r\n`array([[0.1936104 , 0.03274325, 0.77364635]], dtype=float32)`\r\n\r\nThen when I try to use the aforementioned Explainer:\r\n`explanation = explainer.explain_instance(image_test.squeeze(), model_obj.test, top_labels=5, num_samples=1)`\r\n\r\nI get the following warning: \r\n`AppData\\Local\\Continuum\\anaconda3\\envs\\elvia\\lib\\site-packages\\sklearn\\metrics\\_regression.py:582: UndefinedMetricWarning: R^2 score is not well-defined with less than two samples.\r\n  warnings.warn(msg, UndefinedMetricWarning) `\r\n\r\nWhich is my understanding stems from the fact that I only have 1 example (num_samples=1), but when I try to increase this I get an error message saying\r\n`ValueError: Found input variables with inconsistent numbers of samples: `\r\n\r\nBut when I look at the example in *lime/doc/notebooks/Tutorial - Image Classification Keras.ipynb* I think you only input 1 image in the cell\r\n\r\n` %%time\r\nexplanation = explainer.explain_instance(images[0], inet_model.predict, top_labels=5, hide_color=0, num_samples=1000)`\r\n\r\nCould you please assist me with this? \r\n\r\nFor the record, when I use the same parameters as you:\r\n`temp, mask = explanation.get_image_and_mask(explanation.top_labels[0], positive_only=True, num_features=5, hide_rest=True)`\r\n\r\nI get totally black images back. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/468", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/468/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/468/events", "html_url": "https://github.com/marcotcr/lime/issues/468", "id": 627763849, "node_id": "MDU6SXNzdWU2Mjc3NjM4NDk=", "number": 468, "title": "Random State parameter in LimeTabularExplainer", "user": {"login": "Dola47", "id": 45386621, "node_id": "MDQ6VXNlcjQ1Mzg2NjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/45386621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dola47", "html_url": "https://github.com/Dola47", "followers_url": "https://api.github.com/users/Dola47/followers", "following_url": "https://api.github.com/users/Dola47/following{/other_user}", "gists_url": "https://api.github.com/users/Dola47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dola47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dola47/subscriptions", "organizations_url": "https://api.github.com/users/Dola47/orgs", "repos_url": "https://api.github.com/users/Dola47/repos", "events_url": "https://api.github.com/users/Dola47/events{/privacy}", "received_events_url": "https://api.github.com/users/Dola47/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-30T16:07:05Z", "updated_at": "2020-06-02T13:03:04Z", "closed_at": "2020-06-02T13:03:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear All,\r\n\r\nI just noticed that I am currently getting an error when I try to set the random_state parameter in LimeTabularExplainer to any value, it seems that the parameter has been removed? I am using LIME 0.2.0.0.  The error is exactly `TypeError: __init__() got an unexpected keyword argument 'random_state'`\r\n\r\nMoreover, the class_names parameter as well cannot accept integer list as before, and always require now to be submitted with a list of strings?\r\n\r\nBy removing the random state parameter I lost the reproducibility and for every call of the explainer and the explain instance, I get different results even for the same instance?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/467", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/467/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/467/events", "html_url": "https://github.com/marcotcr/lime/issues/467", "id": 627669414, "node_id": "MDU6SXNzdWU2Mjc2Njk0MTQ=", "number": 467, "title": "NotImplementedError: LIME does not currently support classifier models without probability scores", "user": {"login": "KiteFlyKid", "id": 45324156, "node_id": "MDQ6VXNlcjQ1MzI0MTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/45324156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KiteFlyKid", "html_url": "https://github.com/KiteFlyKid", "followers_url": "https://api.github.com/users/KiteFlyKid/followers", "following_url": "https://api.github.com/users/KiteFlyKid/following{/other_user}", "gists_url": "https://api.github.com/users/KiteFlyKid/gists{/gist_id}", "starred_url": "https://api.github.com/users/KiteFlyKid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KiteFlyKid/subscriptions", "organizations_url": "https://api.github.com/users/KiteFlyKid/orgs", "repos_url": "https://api.github.com/users/KiteFlyKid/repos", "events_url": "https://api.github.com/users/KiteFlyKid/events{/privacy}", "received_events_url": "https://api.github.com/users/KiteFlyKid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-30T07:12:19Z", "updated_at": "2020-06-02T06:13:39Z", "closed_at": "2020-06-02T06:13:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I tried to use sklearn Isolation Forest to explain my result , I got an error as the title.\r\n```python\r\nexplainer = lime.lime_tabular.LimeTabularExplainer(Xtrain,mode='classification',training_labels=train_label,feature_names=columns,discretize_continuous=True)\r\nexp = explainer.explain_instance(Xtrain[10], predict_fn=IsolationForest.score_samples, num_features=5)\r\n```\r\nI have replaced ' IsolationForest.score_samples' with  ' IsolationForest.decision_function'\r\nor ' IsolationForest.predict', it remains the same.\r\nI wonder if lime can only be applied on supervised learning or I just have a wrong code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/466", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/466/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/466/events", "html_url": "https://github.com/marcotcr/lime/issues/466", "id": 624796452, "node_id": "MDU6SXNzdWU2MjQ3OTY0NTI=", "number": 466, "title": "Should discretize_continuous affect the explanation?", "user": {"login": "Zhunaidm", "id": 27765395, "node_id": "MDQ6VXNlcjI3NzY1Mzk1", "avatar_url": "https://avatars2.githubusercontent.com/u/27765395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zhunaidm", "html_url": "https://github.com/Zhunaidm", "followers_url": "https://api.github.com/users/Zhunaidm/followers", "following_url": "https://api.github.com/users/Zhunaidm/following{/other_user}", "gists_url": "https://api.github.com/users/Zhunaidm/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zhunaidm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zhunaidm/subscriptions", "organizations_url": "https://api.github.com/users/Zhunaidm/orgs", "repos_url": "https://api.github.com/users/Zhunaidm/repos", "events_url": "https://api.github.com/users/Zhunaidm/events{/privacy}", "received_events_url": "https://api.github.com/users/Zhunaidm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-26T11:01:36Z", "updated_at": "2020-05-29T00:20:44Z", "closed_at": "2020-05-29T00:20:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm currently running an experiment and I have a model where I know weights 1, 2, 3 add to class 1 and weights 4 and 5 add to class 2.\r\n\r\nI'm using the tabular explainer since the features are generated integers between 0 and 10. The problem is that for some reason the explanation shows that weight 3 positively attributes to class 2 which is incorrect. If I set discretize_continuous to false, then the explanation is correct.\r\n\r\nIs there a reason this happens?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/465", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/465/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/465/events", "html_url": "https://github.com/marcotcr/lime/issues/465", "id": 624702675, "node_id": "MDU6SXNzdWU2MjQ3MDI2NzU=", "number": 465, "title": "Getting LIME does not currently support classifier models without scores for LinearSVC", "user": {"login": "deveshcode", "id": 37287532, "node_id": "MDQ6VXNlcjM3Mjg3NTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/37287532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deveshcode", "html_url": "https://github.com/deveshcode", "followers_url": "https://api.github.com/users/deveshcode/followers", "following_url": "https://api.github.com/users/deveshcode/following{/other_user}", "gists_url": "https://api.github.com/users/deveshcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/deveshcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deveshcode/subscriptions", "organizations_url": "https://api.github.com/users/deveshcode/orgs", "repos_url": "https://api.github.com/users/deveshcode/repos", "events_url": "https://api.github.com/users/deveshcode/events{/privacy}", "received_events_url": "https://api.github.com/users/deveshcode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-26T08:37:30Z", "updated_at": "2020-07-17T22:17:25Z", "closed_at": "2020-05-29T00:19:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "`from mosaicml import expai\r\nfrom sklearn.ensemble import RandomForestClassifier\r\nfrom sklearn import datasets\r\nfrom mosaicml import *\r\nfrom mosaicml.constants import MLModelFlavours\r\nimport numpy as np\r\nfrom sklearn.svm import LinearSVC\r\nfrom sklearn.pipeline import make_pipeline\r\nfrom sklearn.preprocessing import StandardScaler\r\n\r\n\r\niris = datasets.load_iris()\r\nX = iris.data\r\ny = iris.target\r\nclf = make_pipeline(StandardScaler(),\r\n                    LinearSVC(random_state=0, tol=1e-5))\r\nclf = clf.fit(X, y)\r\n\r\n@scoring_func\r\ndef score(model, request):\r\n    payload = request.json[\"payload\"]\r\n    data_list = payload\r\n    data_array = np.asarray(data_list)\r\n    try:\r\n        prediction = model.predict(data_array)\r\n    except:\r\n        prediction = model.predict(data_array.reshape(1, -1))\r\n    return prediction.tolist()\r\n\r\nimport requests\r\nreq = requests.Request()\r\nreq.json = {\"payload\":X[135]}\r\n\r\nscore(clf,req)\r\nimport lime\r\nimport lime.lime_tabular\r\n\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\nexplainer = lime.lime_tabular.LimeTabularExplainer(X,  \r\nmode='classification',training_labels=y,feature_names=iris.feature_names)\r\n\r\ni = 1\r\nexp = explainer.explain_instance(X[0], clf.predict, num_features=4)`\r\n\r\nHere's my sample code for creating a LIME graph. Am I doing something wrong or is there a workaround for the same ?\r\nThanks in advance for the help\r\n\r\nHere's the error I get\r\nNotImplementedError: LIME does not currently support classifier models without probability scores. If this conflicts with your use case, please let us know: https://github.com/datascienceinc/lime/issues/16\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/464", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/464/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/464/events", "html_url": "https://github.com/marcotcr/lime/issues/464", "id": 623843277, "node_id": "MDU6SXNzdWU2MjM4NDMyNzc=", "number": 464, "title": "Intances with very different Prediction_local value", "user": {"login": "Abdulk084", "id": 31172014, "node_id": "MDQ6VXNlcjMxMTcyMDE0", "avatar_url": "https://avatars3.githubusercontent.com/u/31172014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Abdulk084", "html_url": "https://github.com/Abdulk084", "followers_url": "https://api.github.com/users/Abdulk084/followers", "following_url": "https://api.github.com/users/Abdulk084/following{/other_user}", "gists_url": "https://api.github.com/users/Abdulk084/gists{/gist_id}", "starred_url": "https://api.github.com/users/Abdulk084/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Abdulk084/subscriptions", "organizations_url": "https://api.github.com/users/Abdulk084/orgs", "repos_url": "https://api.github.com/users/Abdulk084/repos", "events_url": "https://api.github.com/users/Abdulk084/events{/privacy}", "received_events_url": "https://api.github.com/users/Abdulk084/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-24T11:12:32Z", "updated_at": "2020-06-02T00:12:45Z", "closed_at": "2020-06-02T00:12:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some instances, the Prediction_local value (in case of regression problems) generated by lime is very different than the output of the complex model as shown below.\r\n```\r\n\r\nIntercept 2.8149082782686934\r\nPrediction_local [3.20650489]\r\nRight: 5.2020693\r\n```\r\nDo you think it is useful for interpretability as the interpretability parameters are derived from the local model but in this case, the local model is wrong? How can we trust the importance features values generated by a local model which is wrong locally? Or we need to choose such an instance where the local model output is not very different than the complex model output? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/463", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/463/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/463/events", "html_url": "https://github.com/marcotcr/lime/issues/463", "id": 622053998, "node_id": "MDU6SXNzdWU2MjIwNTM5OTg=", "number": 463, "title": "Why does LIME sample from synthetic data?", "user": {"login": "aeftimia", "id": 4635614, "node_id": "MDQ6VXNlcjQ2MzU2MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4635614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeftimia", "html_url": "https://github.com/aeftimia", "followers_url": "https://api.github.com/users/aeftimia/followers", "following_url": "https://api.github.com/users/aeftimia/following{/other_user}", "gists_url": "https://api.github.com/users/aeftimia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeftimia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeftimia/subscriptions", "organizations_url": "https://api.github.com/users/aeftimia/orgs", "repos_url": "https://api.github.com/users/aeftimia/repos", "events_url": "https://api.github.com/users/aeftimia/events{/privacy}", "received_events_url": "https://api.github.com/users/aeftimia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-20T20:11:40Z", "updated_at": "2020-05-29T00:26:00Z", "closed_at": "2020-05-22T21:03:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "# My Understanding\r\n\r\nFrom the [original paper](https://arxiv.org/abs/1602.04938), it seems to objective of LIME is to train a simple model (such as a ridge regressor) with a loss function that places higher weight on data drawn closer to the reference sample. This makes a lot of sense to me, and reminds me of building a first order Taylor series approximation to the original model about the reference instance.\r\n\r\nHowever, when I [peak under the hood](https://github.com/marcotcr/lime/blob/2ba75c188dcffe3e926c093efc5d03a0d51692b6/lime/lime_tabular.py#L517), it seems that by default, samples used to train this ridge regressor are drawn from a normal distribution with a diagonal covariance matrix that is fit to the raw data. It seems there is an option to shift the mean of this normal distribution to be centered on the sample of interest, but at that point your scale may no longer make sense.\r\n\r\nIf I understand correctly, you're training a ridge regressor on \r\n\r\n<img src=\"https://render.githubusercontent.com/render/math?math=\\mathbb{E}_{x \\sim \\mathrm{synthetic}}\\left(\\mathrm{model}(x)-\\mathrm{lime}(x)\\right)^2 \\mathrm{weight}_{\\mathrm{ref}}(x)-\\Omega\\left(\\mathrm{lime}\\right)\">\r\n\r\n, where <img src=\"https://render.githubusercontent.com/render/math?math=\\mathrm{model}\"> is the original model, <img src=\"https://render.githubusercontent.com/render/math?math=\\mathrm{lime}\"> is by default a linear model, and <img src=\"https://render.githubusercontent.com/render/math?math=\\Omega\\left(\\mathrm{lime}\\right)\"> is your ridge regularizer. Meanwhile, <img src=\"https://render.githubusercontent.com/render/math?math=\\mathrm{synthetic}\"> is your synthetic data distribution--namely your Gaussian with a diagonal covariance matrix (plus what appears to be multinomial distributions for categorical variables). <img src=\"https://render.githubusercontent.com/render/math?math=\\mathrm{weight}_\\mathrm{ref}\"> is the weight a corresponding entry within the `sample_weight` array passed to, say, [Sklearn's Ridge regressor](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html). It would be derived from a distance function to a particular reference instance, <img src=\"https://render.githubusercontent.com/render/math?math=\\mathrm{ref}\">.\r\n\r\n# My Question\r\n\r\nIf you're already weighing your loss function using some distance function, why draw synthetic samples in the first place? Why not just train on the original dataset?\r\n\r\n<img src=\"https://render.githubusercontent.com/render/math?math=\\mathbb{E}_{x \\sim \\mathrm{raw data}}\\left(\\mathrm{model}(x)-\\mathrm{lime}(x)\\right)^2 \\mathrm{weight}_\\mathrm{ref}(x)-\\Omega\\left(\\mathrm{lime}\\right)\">\r\n\r\nI apologize if I'm missing something very obvious. However, understanding the motivation for the synthetic data would greatly help me interpret the output of LIME in practice.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/461", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/461/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/461/events", "html_url": "https://github.com/marcotcr/lime/issues/461", "id": 618685351, "node_id": "MDU6SXNzdWU2MTg2ODUzNTE=", "number": 461, "title": "Is it possible to do incremental training on LimeTabularExplainer?", "user": {"login": "hanzigs", "id": 30790120, "node_id": "MDQ6VXNlcjMwNzkwMTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/30790120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanzigs", "html_url": "https://github.com/hanzigs", "followers_url": "https://api.github.com/users/hanzigs/followers", "following_url": "https://api.github.com/users/hanzigs/following{/other_user}", "gists_url": "https://api.github.com/users/hanzigs/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanzigs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanzigs/subscriptions", "organizations_url": "https://api.github.com/users/hanzigs/orgs", "repos_url": "https://api.github.com/users/hanzigs/repos", "events_url": "https://api.github.com/users/hanzigs/events{/privacy}", "received_events_url": "https://api.github.com/users/hanzigs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-05-15T04:16:22Z", "updated_at": "2020-08-09T23:56:20Z", "closed_at": "2020-05-22T20:20:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have a data, I fit a model, store the model, later I get new data, I don't want to retrain with full data, so I fit the new data, may I know is it possible to create explainer as a incremental fit for the new data. \r\n```\r\ndata = [[1, 2], [0.5, 6], [0, 10], [1, 18]]\r\nscaler = MinMaxScaler()\r\nscaler.partial_fit(data)\r\nsc_data = scaler.transform(data)\r\nmodel1 = IForest(contamination=0.1).fit(sc_data)\r\nexplainer = lime.lime_tabular.LimeTabularExplainer(sc_data, \r\n                                                      mode='classification',\r\n                                                      feature_names=feature_names,\r\n                                                      kernel_width=5,\r\n                                                      random_state=42,\r\n                                                      discretize_continuous=False)\r\n```\r\nI store the model, scaler, explainer for serving purpose, \r\nafter some time i get more data, so fit the new data to the same model,\r\nis it possible for explainer as well? \r\n```\r\ndata2 = [[15, 12], [15, 16], [0, 11], [1, 18]]\r\nscaler = load(scaler)\r\nloaded_model = load(model1)\r\n\r\nscaler.partial_fit(data2)\r\nsc_data2 = scaler.transform(data2)\r\nmodel2 = loaded_model.fit(sc_data2)\r\nexplainer = lime.lime_tabular.LimeTabularExplainer(????????????????)\r\n```\r\nThanks in advance for the inputs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/460", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/460/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/460/events", "html_url": "https://github.com/marcotcr/lime/issues/460", "id": 617566807, "node_id": "MDU6SXNzdWU2MTc1NjY4MDc=", "number": 460, "title": "Dealing with Categorical Features", "user": {"login": "Dola47", "id": 45386621, "node_id": "MDQ6VXNlcjQ1Mzg2NjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/45386621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dola47", "html_url": "https://github.com/Dola47", "followers_url": "https://api.github.com/users/Dola47/followers", "following_url": "https://api.github.com/users/Dola47/following{/other_user}", "gists_url": "https://api.github.com/users/Dola47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dola47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dola47/subscriptions", "organizations_url": "https://api.github.com/users/Dola47/orgs", "repos_url": "https://api.github.com/users/Dola47/repos", "events_url": "https://api.github.com/users/Dola47/events{/privacy}", "received_events_url": "https://api.github.com/users/Dola47/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-13T15:57:52Z", "updated_at": "2020-05-22T20:17:35Z", "closed_at": "2020-05-22T20:17:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @marcotcr ,\r\n\r\nI would like you to confirm if I am working correctly or not with the categorical features in my dataset. normally, I OneHotEncode the categorical features in my dataset.\r\n\r\nFirst of all, as far as I know the data submitted to the LimeTabularExplainer and explain_instance should be label encoded version of my dataset, however, the predict_fn should take in consideration the OnehotEncoded version of my dataset so I revert back the label encoded dataset to OneHotEncoded dataset inside the predict_fn.\r\n\r\nMoreover, for the categorical_features and categorical_names parameters, since, I submit the Explainer with LabelEncoded version of the dataset I return back the indices of the features incase of the label encoded dataset. Of course, the categories are returned as they are supposed to be returned\r\n\r\nIs my implementation correct?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/459", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/459/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/459/events", "html_url": "https://github.com/marcotcr/lime/issues/459", "id": 617295377, "node_id": "MDU6SXNzdWU2MTcyOTUzNzc=", "number": 459, "title": "Explainable of Siamese Network", "user": {"login": "skuehn1988", "id": 18124600, "node_id": "MDQ6VXNlcjE4MTI0NjAw", "avatar_url": "https://avatars2.githubusercontent.com/u/18124600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skuehn1988", "html_url": "https://github.com/skuehn1988", "followers_url": "https://api.github.com/users/skuehn1988/followers", "following_url": "https://api.github.com/users/skuehn1988/following{/other_user}", "gists_url": "https://api.github.com/users/skuehn1988/gists{/gist_id}", "starred_url": "https://api.github.com/users/skuehn1988/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skuehn1988/subscriptions", "organizations_url": "https://api.github.com/users/skuehn1988/orgs", "repos_url": "https://api.github.com/users/skuehn1988/repos", "events_url": "https://api.github.com/users/skuehn1988/events{/privacy}", "received_events_url": "https://api.github.com/users/skuehn1988/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-13T09:30:41Z", "updated_at": "2020-05-22T20:31:58Z", "closed_at": "2020-05-22T20:31:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to have two inputs and to have a explainable of a Siamese Network?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/458", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/458/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/458/events", "html_url": "https://github.com/marcotcr/lime/issues/458", "id": 616802801, "node_id": "MDU6SXNzdWU2MTY4MDI4MDE=", "number": 458, "title": "Does surrogate model use binary features?", "user": {"login": "pmavrodiev", "id": 1107931, "node_id": "MDQ6VXNlcjExMDc5MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1107931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmavrodiev", "html_url": "https://github.com/pmavrodiev", "followers_url": "https://api.github.com/users/pmavrodiev/followers", "following_url": "https://api.github.com/users/pmavrodiev/following{/other_user}", "gists_url": "https://api.github.com/users/pmavrodiev/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmavrodiev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmavrodiev/subscriptions", "organizations_url": "https://api.github.com/users/pmavrodiev/orgs", "repos_url": "https://api.github.com/users/pmavrodiev/repos", "events_url": "https://api.github.com/users/pmavrodiev/events{/privacy}", "received_events_url": "https://api.github.com/users/pmavrodiev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-12T16:43:18Z", "updated_at": "2020-05-12T16:57:38Z", "closed_at": "2020-05-12T16:57:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is more of a question about the implementation and not really a functional problem. I hope it's not out of place and I appologize in advance if it is.\r\n\r\nMy question is why isn't the surrogate model trained on the binary features of the interpretable space? This is at least what I read in every academic paper on Lime - surrogate model is trained on binary features. True, targets come from the black-box model, but the features are simply 0's and 1's. \r\n\r\nInstead it seems to be that the surrogate is trained on features in the original features space.\r\n\r\nWhat am I missing? \r\n\r\nThanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/457", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/457/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/457/events", "html_url": "https://github.com/marcotcr/lime/issues/457", "id": 616798420, "node_id": "MDU6SXNzdWU2MTY3OTg0MjA=", "number": 457, "title": "Explaining the lstm based classification problem got all weights 0  ", "user": {"login": "LIUZHENGYU2019", "id": 51242003, "node_id": "MDQ6VXNlcjUxMjQyMDAz", "avatar_url": "https://avatars0.githubusercontent.com/u/51242003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LIUZHENGYU2019", "html_url": "https://github.com/LIUZHENGYU2019", "followers_url": "https://api.github.com/users/LIUZHENGYU2019/followers", "following_url": "https://api.github.com/users/LIUZHENGYU2019/following{/other_user}", "gists_url": "https://api.github.com/users/LIUZHENGYU2019/gists{/gist_id}", "starred_url": "https://api.github.com/users/LIUZHENGYU2019/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LIUZHENGYU2019/subscriptions", "organizations_url": "https://api.github.com/users/LIUZHENGYU2019/orgs", "repos_url": "https://api.github.com/users/LIUZHENGYU2019/repos", "events_url": "https://api.github.com/users/LIUZHENGYU2019/events{/privacy}", "received_events_url": "https://api.github.com/users/LIUZHENGYU2019/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T16:36:27Z", "updated_at": "2020-05-18T01:20:59Z", "closed_at": "2020-05-18T01:20:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to LIME. I'm trying to explain a LSTM model and my purpose is try to classify a sentence in url form like \"http://webcenters.netscape.compuserve.com/weather/find.jsp?f=\\\"><script>alert(1)</script>\".  Because it is not like natural language that LimeTextExplainer can easy handle with. I decide to tokenlize with GeneSeg() first and splice with '+' then. And set parameter split_expression in LimeTextExplainer as '\\+'. The code are as following.\r\n\r\n```\r\ndef lime_explain():\r\n    example = \"http://webcenters.netscape.compuserve.com/weather/find.jsp?f=\\\"><script>alert(1)</script>\"\r\n    example = GeneSeg(example)\r\n    example_length = len(example)\r\n    str = \"+\"\r\n    example = str.join(example)\r\n    class_name = ['normal', 'xss']\r\n    explainer = LimeTextExplainer(class_names=class_name, split_expression='\\+')\r\n    exp = explainer.explain_instance(example, predict_lime, \r\n    num_samples=example_length, num_features=example_length)\r\n    print(exp.as_list())\r\n```\r\n\r\n```\r\ndef predict_lime(example_token):\r\n    \"it is a wrapper\"\r\n    example_index = to_index(example_token)\r\n    example_index = [example_index]\r\n    example_index = tf.keras.preprocessing.sequence.pad_sequences(example_index, padding='post', maxlen=532)\r\n    model = tf.keras.models.load_model(model_dir)\r\n    length = len(example_token)\r\n    pred = model.predict(example_index)\r\n    return np.tile(np.array(pred), (length, 1))\r\n```\r\nI changed the return of predict_lime function as \r\n```\r\n[[0.00875685 0.9912431 ]\r\n [0.00875685 0.9912431 ]\r\n [0.00875685 0.9912431 ]\r\n [0.00875685 0.9912431 ]\r\n [0.00875685 0.9912431 ]\r\n [0.00875685 0.9912431 ]\r\n [0.00875685 0.9912431 ]] \r\n```\r\nOtherwise I would got a Error like:\r\n`ValueError: Found input variables with inconsistent numbers of samples: [7, 1]`\r\nBut after I changed return shape of predict function, I got nothing from the explainer :\r\n`[('http://u', 0.0), ('>', 0.0), ('<script>', 0.0), ('alert(', 0.0), ('0', 0.0), (')', 0.0), ('</script>', 0.0)]` \r\nCould anybody tell me why this happened! Help me out please!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/455", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/455/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/455/events", "html_url": "https://github.com/marcotcr/lime/issues/455", "id": 607454926, "node_id": "MDU6SXNzdWU2MDc0NTQ5MjY=", "number": 455, "title": "Is LIME suitable for dataset with more than 100 features and multiclass with RandonForestClassifier Model?", "user": {"login": "lavendercmt", "id": 52583754, "node_id": "MDQ6VXNlcjUyNTgzNzU0", "avatar_url": "https://avatars3.githubusercontent.com/u/52583754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavendercmt", "html_url": "https://github.com/lavendercmt", "followers_url": "https://api.github.com/users/lavendercmt/followers", "following_url": "https://api.github.com/users/lavendercmt/following{/other_user}", "gists_url": "https://api.github.com/users/lavendercmt/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavendercmt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavendercmt/subscriptions", "organizations_url": "https://api.github.com/users/lavendercmt/orgs", "repos_url": "https://api.github.com/users/lavendercmt/repos", "events_url": "https://api.github.com/users/lavendercmt/events{/privacy}", "received_events_url": "https://api.github.com/users/lavendercmt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-27T11:06:03Z", "updated_at": "2020-05-08T23:07:30Z", "closed_at": "2020-05-08T23:07:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is LIME suitable for dataset with more than 100 features and multiclass with RandonForestClassifier Model?\r\nI have used lime_tabular.LimeTabularExplainer \r\nalthough it has results but how to explain it?\r\n\r\n![image](https://user-images.githubusercontent.com/52583754/80365520-0809a100-8888-11ea-9a21-29a71c07820c.png)\r\n\r\n\r\n(just hid the real feature names..)\r\n\r\nThe predicition about probabilty is correct! But how about the features in right side...why all the value so strange...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/453", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/453/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/453/events", "html_url": "https://github.com/marcotcr/lime/issues/453", "id": 606386974, "node_id": "MDU6SXNzdWU2MDYzODY5NzQ=", "number": 453, "title": "Explaining Grey-Images with Lime", "user": {"login": "LukeValley", "id": 39881489, "node_id": "MDQ6VXNlcjM5ODgxNDg5", "avatar_url": "https://avatars0.githubusercontent.com/u/39881489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeValley", "html_url": "https://github.com/LukeValley", "followers_url": "https://api.github.com/users/LukeValley/followers", "following_url": "https://api.github.com/users/LukeValley/following{/other_user}", "gists_url": "https://api.github.com/users/LukeValley/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeValley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeValley/subscriptions", "organizations_url": "https://api.github.com/users/LukeValley/orgs", "repos_url": "https://api.github.com/users/LukeValley/repos", "events_url": "https://api.github.com/users/LukeValley/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeValley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-24T15:12:18Z", "updated_at": "2020-04-24T15:37:46Z", "closed_at": "2020-04-24T15:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have an existing CNN model that needs to be explained. This looks like the following:\r\n\r\n```\r\nmodel = tf.keras.models.Sequential()\r\n\r\nwidth, height = 1024,1024\r\n\r\nmodel.add(tf.keras.layers.Conv2D(8, 3, activation='relu', input_shape=(width, height, 1)))  \r\nmodel.add(tf.keras.layers.MaxPooling2D())\r\nmodel.add(tf.keras.layers.BatchNormalization())\r\nmodel.add(tf.keras.layers.Conv2D(6, 1, activation='relu', input_shape=(width, height, 1)))  \r\nmodel.add(tf.keras.layers.MaxPooling2D())\r\nmodel.add(tf.keras.layers.BatchNormalization())\r\nmodel.add(tf.keras.layers.Conv2D(4, 3, activation='relu', input_shape=(width, height, 1)))\r\nmodel.add(tf.keras.layers.MaxPooling2D())\r\nmodel.add(tf.keras.layers.BatchNormalization())\r\nmodel.add(tf.keras.layers.Conv2D(8, 1, activation='relu', input_shape=(width, height, 1)))\r\nmodel.add(tf.keras.layers.MaxPooling2D())\r\nmodel.add(tf.keras.layers.BatchNormalization())\r\nmodel.add(tf.keras.layers.Conv2D(8, 1, activation='relu', input_shape=(width, height, 1)))\r\nmodel.add(tf.keras.layers.MaxPooling2D())\r\nmodel.add(tf.keras.layers.BatchNormalization())\r\nmodel.add(tf.keras.layers.Conv2D(4, 1, activation='relu', input_shape=(width, height, 1)))\r\nmodel.add(tf.keras.layers.MaxPooling2D())\r\nmodel.add(tf.keras.layers.BatchNormalization())\r\nmodel.add(tf.keras.layers.Dropout(0.3))\r\nmodel.add(tf.keras.layers.Flatten())\r\nmodel.add(tf.keras.layers.Dense(4, activation='relu',kernel_regularizer=keras.regularizers.l2(l=0.1)))\r\nmodel.add(tf.keras.layers.Dense(2))\r\nmodel.add(tf.keras.layers.BatchNormalization())\r\nmodel.add(tf.keras.layers.Dense(1, activation='sigmoid'))    \r\n\r\nmodel.summary()\r\n```\r\n\r\nAnd a test data set with the shape (1,1024,1024,1). If I now want to have this record explained with the following code:\r\n`explanation = explainer.explain_instance(testing[1].reshape(1,1024,1024,1),\r\n                                         model.predict,\r\n                                         top_labels=5,\r\n                                         hide_color=0,\r\n                                         num_samples=100)`\r\nI get this error:\r\n> ValueError                                Traceback (most recent call last)\r\n> <ipython-input-77-9a0cb43df74a> in <module>\r\n>       5                                          top_labels=5,\r\n>       6                                          hide_color=0,\r\n> ----> 7                                          num_samples=10)\r\n> \r\n> ~/.local/lib/python3.6/site-packages/lime/lime_image.py in explain_instance(self, image, classifier_fn, labels, hide_color, top_labels, num_features, num_samples, batch_size, segmentation_fn, distance_metric, model_regressor, random_seed)\r\n>     182             segments = segmentation_fn(image)\r\n>     183         except ValueError as e:\r\n> --> 184             raise e\r\n>     185 \r\n>     186         fudged_image = image.copy()\r\n> \r\n> ~/.local/lib/python3.6/site-packages/lime/lime_image.py in explain_instance(self, image, classifier_fn, labels, hide_color, top_labels, num_features, num_samples, batch_size, segmentation_fn, distance_metric, model_regressor, random_seed)\r\n>     180                                                     random_seed=random_seed)\r\n>     181         try:\r\n> --> 182             segments = segmentation_fn(image)\r\n>     183         except ValueError as e:\r\n>     184             raise e\r\n> \r\n> ~/.local/lib/python3.6/site-packages/lime/wrappers/scikit_image.py in __call__(self, *args)\r\n>     115 \r\n>     116     def __call__(self, *args):\r\n> --> 117         return self.target_fn(args[0], **self.target_params)\r\n> \r\n> ~/.local/lib/python3.6/site-packages/skimage/segmentation/_quickshift.py in quickshift(image, ratio, kernel_size, max_dist, return_tree, sigma, convert2lab, random_seed)\r\n>      61         if image.shape[2] != 3:\r\n>      62             ValueError(\"Only RGB images can be converted to Lab space.\")\r\n> ---> 63         image = rgb2lab(image)\r\n>      64 \r\n>      65     if kernel_size < 1:\r\n> \r\n> ~/.local/lib/python3.6/site-packages/skimage/color/colorconv.py in rgb2lab(rgb, illuminant, observer)\r\n>    1030     a list of supported illuminants.\r\n>    1031     \"\"\"\r\n> -> 1032     return xyz2lab(rgb2xyz(rgb), illuminant, observer)\r\n>    1033 \r\n>    1034 \r\n> \r\n> ~/.local/lib/python3.6/site-packages/skimage/color/colorconv.py in rgb2xyz(rgb)\r\n>     672     # Follow the algorithm from http://www.easyrgb.com/index.php\r\n>     673     # except we don't multiply/divide by 100 in the conversion\r\n> --> 674     arr = _prepare_colorarray(rgb).copy()\r\n>     675     mask = arr > 0.04045\r\n>     676     arr[mask] = np.power((arr[mask] + 0.055) / 1.055, 2.4)\r\n> \r\n> ~/.local/lib/python3.6/site-packages/skimage/color/colorconv.py in _prepare_colorarray(arr)\r\n>     143         msg = (\"the input array must be have a shape == (.., ..,[ ..,] 3)), \" +\r\n>     144                \"got (\" + (\", \".join(map(str, arr.shape))) + \")\")\r\n> --> 145         raise ValueError(msg)\r\n>     146 \r\n>     147     return dtype.img_as_float(arr)\r\n> \r\n> ValueError: the input array must be have a shape == (.., ..,[ ..,] 3)), got (1, 1024, 1024, 1)\r\n\r\nIt seems that LIME is not able to explain images which are not in RGB format?\r\nOn the other hand a transformation to RGB (1,1024,1024,3) would not fit to my CNN.\r\n\r\nAnyone familiar with this?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/452", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/452/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/452/events", "html_url": "https://github.com/marcotcr/lime/issues/452", "id": 603556256, "node_id": "MDU6SXNzdWU2MDM1NTYyNTY=", "number": 452, "title": "How can I validate LIME's outputs?", "user": {"login": "mh2t", "id": 15271406, "node_id": "MDQ6VXNlcjE1MjcxNDA2", "avatar_url": "https://avatars0.githubusercontent.com/u/15271406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mh2t", "html_url": "https://github.com/mh2t", "followers_url": "https://api.github.com/users/mh2t/followers", "following_url": "https://api.github.com/users/mh2t/following{/other_user}", "gists_url": "https://api.github.com/users/mh2t/gists{/gist_id}", "starred_url": "https://api.github.com/users/mh2t/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mh2t/subscriptions", "organizations_url": "https://api.github.com/users/mh2t/orgs", "repos_url": "https://api.github.com/users/mh2t/repos", "events_url": "https://api.github.com/users/mh2t/events{/privacy}", "received_events_url": "https://api.github.com/users/mh2t/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-20T21:46:26Z", "updated_at": "2020-04-21T19:05:54Z", "closed_at": "2020-04-21T13:41:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I simulated a data set with pre-correlation matrix, and known true trajectory function (equation). I simulated target y with continuous and binary variables. I wanted to train a classifier like GBM, and interpret the model by LIME. I was wondering how I can validate the outputs I get from LIME based on the true weights I have specified on my simulated data. Your help would be deeply appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/451", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/451/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/451/events", "html_url": "https://github.com/marcotcr/lime/issues/451", "id": 603411269, "node_id": "MDU6SXNzdWU2MDM0MTEyNjk=", "number": 451, "title": "Multithreading with Python", "user": {"login": "khawkhaa", "id": 37381346, "node_id": "MDQ6VXNlcjM3MzgxMzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/37381346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khawkhaa", "html_url": "https://github.com/khawkhaa", "followers_url": "https://api.github.com/users/khawkhaa/followers", "following_url": "https://api.github.com/users/khawkhaa/following{/other_user}", "gists_url": "https://api.github.com/users/khawkhaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/khawkhaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khawkhaa/subscriptions", "organizations_url": "https://api.github.com/users/khawkhaa/orgs", "repos_url": "https://api.github.com/users/khawkhaa/repos", "events_url": "https://api.github.com/users/khawkhaa/events{/privacy}", "received_events_url": "https://api.github.com/users/khawkhaa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-20T17:34:33Z", "updated_at": "2020-04-20T20:21:35Z", "closed_at": "2020-04-20T20:21:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am asking the same question https://github.com/marcotcr/lime/issues/82.\r\nIs Lime package still not suitable for Multithreading with Python?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/450", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/450/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/450/events", "html_url": "https://github.com/marcotcr/lime/issues/450", "id": 602668649, "node_id": "MDU6SXNzdWU2MDI2Njg2NDk=", "number": 450, "title": "How to remove unwanted columns for explanations?", "user": {"login": "jkrabbenbos", "id": 1815110, "node_id": "MDQ6VXNlcjE4MTUxMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1815110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkrabbenbos", "html_url": "https://github.com/jkrabbenbos", "followers_url": "https://api.github.com/users/jkrabbenbos/followers", "following_url": "https://api.github.com/users/jkrabbenbos/following{/other_user}", "gists_url": "https://api.github.com/users/jkrabbenbos/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkrabbenbos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkrabbenbos/subscriptions", "organizations_url": "https://api.github.com/users/jkrabbenbos/orgs", "repos_url": "https://api.github.com/users/jkrabbenbos/repos", "events_url": "https://api.github.com/users/jkrabbenbos/events{/privacy}", "received_events_url": "https://api.github.com/users/jkrabbenbos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-19T09:33:20Z", "updated_at": "2020-04-20T15:10:00Z", "closed_at": "2020-04-20T15:09:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "For my research I have created my own explainer by copying and adapting the tabular implementation. However, I get explanations on data in columns in my data which are not relevant for the explanation but are necessary to create the perturbations. \r\n\r\nShould I remove these unwanted columns from the data set I feed into the explanation.Explanation function to get only explanations on the real features? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/449", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/449/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/449/events", "html_url": "https://github.com/marcotcr/lime/issues/449", "id": 598603397, "node_id": "MDU6SXNzdWU1OTg2MDMzOTc=", "number": 449, "title": "TypeError: 'numpy.ndarray' object is not callable", "user": {"login": "rsingh2083", "id": 5371252, "node_id": "MDQ6VXNlcjUzNzEyNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5371252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsingh2083", "html_url": "https://github.com/rsingh2083", "followers_url": "https://api.github.com/users/rsingh2083/followers", "following_url": "https://api.github.com/users/rsingh2083/following{/other_user}", "gists_url": "https://api.github.com/users/rsingh2083/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsingh2083/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsingh2083/subscriptions", "organizations_url": "https://api.github.com/users/rsingh2083/orgs", "repos_url": "https://api.github.com/users/rsingh2083/repos", "events_url": "https://api.github.com/users/rsingh2083/events{/privacy}", "received_events_url": "https://api.github.com/users/rsingh2083/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-13T00:26:47Z", "updated_at": "2020-04-13T01:11:37Z", "closed_at": "2020-04-13T01:11:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "My partial code is runing but fails at LIME\r\n\r\n\r\n```\r\nimport numpy as np\r\nimport tensorflow as tf\r\nimport os,sys\r\nimport cv2\r\nimport matplotlib.image as mpimg\r\nimport lime\r\nfrom lime import lime_image\r\n\r\nmapping = {'ABS': 0, 'ALL': 1, 'BZM': 2}\r\ninv_mapping = {0: 'ABS', 1: 'ALL', 2: 'BZM'}\r\nsess = tf.compat.v1.Session()\r\ntf.compat.v1.get_default_graph()\r\n#tf.compat.v1.reset_default_graph()\r\ntf.compat.v1.disable_eager_execution()\r\n\r\nsaver = tf.compat.v1.train.import_meta_graph(os.path.join('models/BZMNetv2/', 'model.meta_eval'))\r\nsaver.restore(sess, os.path.join('models/BZMNetv2/', 'model-2069'))\r\ngraph = tf.compat.v1.get_default_graph()\r\n\r\n\r\nimage_tensor = graph.get_tensor_by_name(\"input_1:0\")\r\npred_tensor = graph.get_tensor_by_name(\"dense_3/Softmax:0\")\r\n\r\nx = cv2.imread('assets/test.jpeg')\r\nx = cv2.resize(x, (224, 224))\r\nx = x.astype('float32') / 255.0\r\n\r\n\r\npred = sess.run(pred_tensor, feed_dict={image_tensor: np.expand_dims(x, axis=0)})\r\nprint('Prediction: {}'.format(inv_mapping[pred.argmax(axis=1)[0]]))\r\nprint('Confidence')\r\nprint('ABS: {:.3f}, ALL: {:.3f}, BZM: {:.3f}'.format(pred[0][0], pred[0][1], pred[0][2]))\r\n\r\n#LIME\r\nexplainer = lime_image.LimeImageExplainer()\r\nexplanation = explainer.explain_instance(mpimg.imread('assets/test.jpeg'),pred.argmax(axis=1)[0], top_labels=1, hide_color=0)\r\n\r\n```\r\n**ERROR**\r\nPrediction: BZM\r\nConfidence\r\nABS: 0.036, ALL: 0.398, BZM: 0.566\r\n\r\n  1%|\u2588                                                                                                                      | 9/1000 [00:00<00:27, 35.86it/s]\r\nTraceback (most recent call last):\r\n  File \"temp.py\", line 57, in <module>\r\n    explanation = explainer.explain_instance(mpimg.imread('assets/ex-covid.jpeg'),pred.argmax(axis=1)[0], top_labels=1, hide_color=0)\r\n  File \"/home/buddy/anaconda3/lib/python3.7/site-packages/lime/lime_image.py\", line 200, in explain_instance\r\n    batch_size=batch_size)\r\n  File \"/home/buddy/anaconda3/lib/python3.7/site-packages/lime/lime_image.py\", line 261, in data_labels\r\n    preds = classifier_fn(np.array(imgs))\r\nTypeError: 'numpy.int64' object is not callable\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/447", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/447/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/447/events", "html_url": "https://github.com/marcotcr/lime/issues/447", "id": 597525450, "node_id": "MDU6SXNzdWU1OTc1MjU0NTA=", "number": 447, "title": "CNN explainability on images with more than 3 images.", "user": {"login": "Spiruel", "id": 3259632, "node_id": "MDQ6VXNlcjMyNTk2MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3259632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spiruel", "html_url": "https://github.com/Spiruel", "followers_url": "https://api.github.com/users/Spiruel/followers", "following_url": "https://api.github.com/users/Spiruel/following{/other_user}", "gists_url": "https://api.github.com/users/Spiruel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spiruel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spiruel/subscriptions", "organizations_url": "https://api.github.com/users/Spiruel/orgs", "repos_url": "https://api.github.com/users/Spiruel/repos", "events_url": "https://api.github.com/users/Spiruel/events{/privacy}", "received_events_url": "https://api.github.com/users/Spiruel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T20:12:31Z", "updated_at": "2020-04-09T20:55:55Z", "closed_at": "2020-04-09T20:55:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have inputs of dimensions (250,250,13), representing multispectral imagery. \r\n\r\nAs Lime describes itself as able to explain the predictions of any machine learning classifier - is there a possible way to explain predictions using Lime on such images?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/446", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/446/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/446/events", "html_url": "https://github.com/marcotcr/lime/issues/446", "id": 596526403, "node_id": "MDU6SXNzdWU1OTY1MjY0MDM=", "number": 446, "title": "ignore 1st column in lime tabular explainer", "user": {"login": "Mrinal-Mahajan", "id": 19223901, "node_id": "MDQ6VXNlcjE5MjIzOTAx", "avatar_url": "https://avatars1.githubusercontent.com/u/19223901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mrinal-Mahajan", "html_url": "https://github.com/Mrinal-Mahajan", "followers_url": "https://api.github.com/users/Mrinal-Mahajan/followers", "following_url": "https://api.github.com/users/Mrinal-Mahajan/following{/other_user}", "gists_url": "https://api.github.com/users/Mrinal-Mahajan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mrinal-Mahajan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mrinal-Mahajan/subscriptions", "organizations_url": "https://api.github.com/users/Mrinal-Mahajan/orgs", "repos_url": "https://api.github.com/users/Mrinal-Mahajan/repos", "events_url": "https://api.github.com/users/Mrinal-Mahajan/events{/privacy}", "received_events_url": "https://api.github.com/users/Mrinal-Mahajan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-08T12:04:09Z", "updated_at": "2020-04-08T15:39:18Z", "closed_at": "2020-04-08T15:39:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way i can ignore the 1st column without dropping it from data from lime tabular explainer and use just remaining columns in analysis.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/445", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/445/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/445/events", "html_url": "https://github.com/marcotcr/lime/issues/445", "id": 594910624, "node_id": "MDU6SXNzdWU1OTQ5MTA2MjQ=", "number": 445, "title": "No module named 'tqdm.auto'", "user": {"login": "Andreasksalk", "id": 43984412, "node_id": "MDQ6VXNlcjQzOTg0NDEy", "avatar_url": "https://avatars0.githubusercontent.com/u/43984412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreasksalk", "html_url": "https://github.com/Andreasksalk", "followers_url": "https://api.github.com/users/Andreasksalk/followers", "following_url": "https://api.github.com/users/Andreasksalk/following{/other_user}", "gists_url": "https://api.github.com/users/Andreasksalk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreasksalk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreasksalk/subscriptions", "organizations_url": "https://api.github.com/users/Andreasksalk/orgs", "repos_url": "https://api.github.com/users/Andreasksalk/repos", "events_url": "https://api.github.com/users/Andreasksalk/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreasksalk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-06T08:31:34Z", "updated_at": "2020-04-17T08:14:27Z", "closed_at": "2020-04-07T17:06:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "As i can see you have updated the latest release to use tqdm. However this bug occurs when using the image explainer.\r\n\r\ntqdm==4.45.0\r\nlime==2.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/444", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/444/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/444/events", "html_url": "https://github.com/marcotcr/lime/issues/444", "id": 593324450, "node_id": "MDU6SXNzdWU1OTMzMjQ0NTA=", "number": 444, "title": "show_in_notebook pure rendering when class names are long", "user": {"login": "adendek", "id": 5308413, "node_id": "MDQ6VXNlcjUzMDg0MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5308413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adendek", "html_url": "https://github.com/adendek", "followers_url": "https://api.github.com/users/adendek/followers", "following_url": "https://api.github.com/users/adendek/following{/other_user}", "gists_url": "https://api.github.com/users/adendek/gists{/gist_id}", "starred_url": "https://api.github.com/users/adendek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adendek/subscriptions", "organizations_url": "https://api.github.com/users/adendek/orgs", "repos_url": "https://api.github.com/users/adendek/repos", "events_url": "https://api.github.com/users/adendek/events{/privacy}", "received_events_url": "https://api.github.com/users/adendek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-03T11:45:50Z", "updated_at": "2020-04-03T18:38:53Z", "closed_at": "2020-04-03T18:38:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working on text classification and I would like to analyze the prediction using Lime. \r\nThe problem is that the names of the class are long for instance, \"ELECTRONIC CIGARETTES CIGARS PIPES VAPORIZERS\", and the lime explanation generated using code below is not readable, see attached image.\r\n``` python\r\ntext = \"BRILLO SOAP\"\r\nexp = explainer.explain_instance(text, batch_predict, num_features=4, top_labels=5)\r\nexp.show_in_notebook(text=False)\r\n```\r\n![Capture](https://user-images.githubusercontent.com/5308413/78357200-4e355280-75b1-11ea-8bc9-c0fb7cd25bef.PNG)\r\n\r\n \r\nHow can I improve the result? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/443", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/443/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/443/events", "html_url": "https://github.com/marcotcr/lime/issues/443", "id": 592737216, "node_id": "MDU6SXNzdWU1OTI3MzcyMTY=", "number": 443, "title": "option/trick to change the backgroud color of show_in_notebook (Jupyter Lab with Dark theme) ?", "user": {"login": "tarrade", "id": 12021701, "node_id": "MDQ6VXNlcjEyMDIxNzAx", "avatar_url": "https://avatars0.githubusercontent.com/u/12021701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tarrade", "html_url": "https://github.com/tarrade", "followers_url": "https://api.github.com/users/tarrade/followers", "following_url": "https://api.github.com/users/tarrade/following{/other_user}", "gists_url": "https://api.github.com/users/tarrade/gists{/gist_id}", "starred_url": "https://api.github.com/users/tarrade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tarrade/subscriptions", "organizations_url": "https://api.github.com/users/tarrade/orgs", "repos_url": "https://api.github.com/users/tarrade/repos", "events_url": "https://api.github.com/users/tarrade/events{/privacy}", "received_events_url": "https://api.github.com/users/tarrade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-02T15:50:54Z", "updated_at": "2020-06-06T00:02:43Z", "closed_at": "2020-04-03T18:24:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nIs there a option/trick to display the output of `show_in_notebook` with a different background color ? With Jupyter Lab in Dark theme we don't see anything (it seems that the background is transparent).\r\n\r\nThe poor solution I found is to save it as a html file and use iframe to change the backgroud color.\r\n![image](https://user-images.githubusercontent.com/12021701/78269441-df50ee80-7509-11ea-950c-c4d410a0c21b.png)\r\n\r\nThanks\r\nCheers\r\nFabien", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/442", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/442/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/442/events", "html_url": "https://github.com/marcotcr/lime/issues/442", "id": 591242973, "node_id": "MDU6SXNzdWU1OTEyNDI5NzM=", "number": 442, "title": "What is the relation between the test dataset size and the num_samples parameter?", "user": {"login": "Dola47", "id": 45386621, "node_id": "MDQ6VXNlcjQ1Mzg2NjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/45386621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dola47", "html_url": "https://github.com/Dola47", "followers_url": "https://api.github.com/users/Dola47/followers", "following_url": "https://api.github.com/users/Dola47/following{/other_user}", "gists_url": "https://api.github.com/users/Dola47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dola47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dola47/subscriptions", "organizations_url": "https://api.github.com/users/Dola47/orgs", "repos_url": "https://api.github.com/users/Dola47/repos", "events_url": "https://api.github.com/users/Dola47/events{/privacy}", "received_events_url": "https://api.github.com/users/Dola47/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-31T16:22:44Z", "updated_at": "2020-04-03T20:18:03Z", "closed_at": "2020-04-03T18:22:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear All,\r\n\r\nI know that the num_samples parameter of the explain_instance of LIME, present the neighbourhood to learn the linear model. \r\n\r\nHowever, I would like to know if the number set to this parameter has any consideration with the size of the data test submitted to the explain instance, or I am totally free to try out several values for this parameter and check if the scores is getting better or not?\r\n\r\nDoes it has anything also with having outliers in my neighbourhood?  So if I increased it a lot to for examples 30,000 then does this means that I will have then a lot of outliers in my neighbourhood as well, or it does not necessarily mean that because according to the kernel width most of this samples will have neglected weight if the kernel width is not that great?\r\n\r\nMoreover, is there is a recommended numbers to be set for the Kernel width, and the num_of samples parameters?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/441", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/441/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/441/events", "html_url": "https://github.com/marcotcr/lime/issues/441", "id": 590123792, "node_id": "MDU6SXNzdWU1OTAxMjM3OTI=", "number": 441, "title": "show_in_notebook not displaying the left \"Prediction Probabilities\" portion figure", "user": {"login": "rabitwhte", "id": 43826606, "node_id": "MDQ6VXNlcjQzODI2NjA2", "avatar_url": "https://avatars1.githubusercontent.com/u/43826606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rabitwhte", "html_url": "https://github.com/rabitwhte", "followers_url": "https://api.github.com/users/rabitwhte/followers", "following_url": "https://api.github.com/users/rabitwhte/following{/other_user}", "gists_url": "https://api.github.com/users/rabitwhte/gists{/gist_id}", "starred_url": "https://api.github.com/users/rabitwhte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rabitwhte/subscriptions", "organizations_url": "https://api.github.com/users/rabitwhte/orgs", "repos_url": "https://api.github.com/users/rabitwhte/repos", "events_url": "https://api.github.com/users/rabitwhte/events{/privacy}", "received_events_url": "https://api.github.com/users/rabitwhte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-30T09:12:10Z", "updated_at": "2020-04-04T05:32:25Z", "closed_at": "2020-04-03T21:41:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Issues with show_in_notebook for regression\r\n![image](https://user-images.githubusercontent.com/43826606/77895576-46a34000-7277-11ea-86a1-5f50f1769212.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/439", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/439/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/439/events", "html_url": "https://github.com/marcotcr/lime/issues/439", "id": 587465846, "node_id": "MDU6SXNzdWU1ODc0NjU4NDY=", "number": 439, "title": "How to Get LIME training data?", "user": {"login": "adityalahiri", "id": 21020094, "node_id": "MDQ6VXNlcjIxMDIwMDk0", "avatar_url": "https://avatars1.githubusercontent.com/u/21020094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adityalahiri", "html_url": "https://github.com/adityalahiri", "followers_url": "https://api.github.com/users/adityalahiri/followers", "following_url": "https://api.github.com/users/adityalahiri/following{/other_user}", "gists_url": "https://api.github.com/users/adityalahiri/gists{/gist_id}", "starred_url": "https://api.github.com/users/adityalahiri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adityalahiri/subscriptions", "organizations_url": "https://api.github.com/users/adityalahiri/orgs", "repos_url": "https://api.github.com/users/adityalahiri/repos", "events_url": "https://api.github.com/users/adityalahiri/events{/privacy}", "received_events_url": "https://api.github.com/users/adityalahiri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-25T06:09:15Z", "updated_at": "2020-04-03T20:52:03Z", "closed_at": "2020-04-03T18:18:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nHow do I get the perturbed training data that was generated by LIME internally to train the local surrogate linear model? According to my understanding, this should give it-\r\n\r\n\r\nlime_data = explainer.scaler.inverse_transform(exp.scaled_data)\r\n\r\nHere explainer is LimeTabularExplainer object and exp is explainer.explain_instance object\r\n\r\n\r\n\r\nIs this correct?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/438", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/438/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/438/events", "html_url": "https://github.com/marcotcr/lime/issues/438", "id": 584212149, "node_id": "MDU6SXNzdWU1ODQyMTIxNDk=", "number": 438, "title": "total probability is greater than  1. and weights are not adding to the class probability values.", "user": {"login": "raammishra", "id": 56956579, "node_id": "MDQ6VXNlcjU2OTU2NTc5", "avatar_url": "https://avatars3.githubusercontent.com/u/56956579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raammishra", "html_url": "https://github.com/raammishra", "followers_url": "https://api.github.com/users/raammishra/followers", "following_url": "https://api.github.com/users/raammishra/following{/other_user}", "gists_url": "https://api.github.com/users/raammishra/gists{/gist_id}", "starred_url": "https://api.github.com/users/raammishra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raammishra/subscriptions", "organizations_url": "https://api.github.com/users/raammishra/orgs", "repos_url": "https://api.github.com/users/raammishra/repos", "events_url": "https://api.github.com/users/raammishra/events{/privacy}", "received_events_url": "https://api.github.com/users/raammishra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T07:20:42Z", "updated_at": "2020-04-03T18:13:16Z", "closed_at": "2020-04-03T18:13:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone,\r\n\r\nI am getting an issue with Lime Text Explainer.\r\nI am testing lime on Multilabel classification model . I know that the probabilities  will not converge to 1. But how to interpret the results. \r\n below is the o/p i am getting.\r\n\r\n![image](https://user-images.githubusercontent.com/56956579/77041601-35894200-69e0-11ea-8c3a-677a96222523.png)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/437", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/437/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/437/events", "html_url": "https://github.com/marcotcr/lime/issues/437", "id": 582463078, "node_id": "MDU6SXNzdWU1ODI0NjMwNzg=", "number": 437, "title": "IndexError: index 1 is out of bounds for axis 1 with size 1 - TextClassification 0 or 1 ", "user": {"login": "raed19", "id": 42433868, "node_id": "MDQ6VXNlcjQyNDMzODY4", "avatar_url": "https://avatars1.githubusercontent.com/u/42433868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raed19", "html_url": "https://github.com/raed19", "followers_url": "https://api.github.com/users/raed19/followers", "following_url": "https://api.github.com/users/raed19/following{/other_user}", "gists_url": "https://api.github.com/users/raed19/gists{/gist_id}", "starred_url": "https://api.github.com/users/raed19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raed19/subscriptions", "organizations_url": "https://api.github.com/users/raed19/orgs", "repos_url": "https://api.github.com/users/raed19/repos", "events_url": "https://api.github.com/users/raed19/events{/privacy}", "received_events_url": "https://api.github.com/users/raed19/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-16T17:06:24Z", "updated_at": "2020-04-03T18:05:53Z", "closed_at": "2020-04-03T18:05:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using LIME to explain binary classification 0 or 1 as follows : \r\n`from keras.preprocessing.text import Tokenizer\r\nfrom keras.preprocessing import sequence\r\n\r\n\r\ndef new_predict(texts):\r\n    seq = token.texts_to_sequences(texts)\r\n    text_data = sequence.pad_sequences( seq, maxlen= 60)\r\n    # it has to be predict the whole string not single one\r\n    return model.predict_proba(text_data)\r\n\r\n# This here for Lime :\r\nUNI_labels = data['Label']\r\n# just zero and 1 which is class name, that is it\r\nclass_names= np.array(list(UNI_labels.unique()))\r\nprint(class_names)\r\nclass_names \r\nexplainer = LimeTextExplainer(class_names=class_names)\r\n\r\n\r\nx_test_data = np.array(x_test_data)\r\ny_test_data = np.array(y_test_data)\r\nidx = 550\r\nexp = explainer.explain_instance(x_test_data[idx], new_predict , num_features=3, labels = [0,1] )\r\nprint('Document id: %d' % idx)\r\n# print('Predicted class =', class_names[pre])\r\nprint('True class: %s' % class_names[y_test_data[idx]])`\r\n\r\nbut I got this error : \r\nIndexError: index 1 is out of bounds for axis 1 with size 1\r\n\r\nI tried another thins which is modified this line \r\n`\r\nexp = explainer.explain_instance(x_test_data[idx], new_predict ,top_labels = 2, num_features=3, labels = [0,1] )\r\n`\r\nit will work, but it will give me an error always when I use the following with label 1\r\n`\r\nprint ('\\n'.join(map(str, exp.as_list(label = 1  ))))\r\n`\r\nThe error is  : KeyError: 1\r\n\r\nif I used label 0, it will work \r\n\r\nCould you please help me with that ? \r\n\r\nI appreciate your effort and time\r\n\r\nThanks in advance ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/436", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/436/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/436/events", "html_url": "https://github.com/marcotcr/lime/issues/436", "id": 579792933, "node_id": "MDU6SXNzdWU1Nzk3OTI5MzM=", "number": 436, "title": "The most important features used in LIME explanations", "user": {"login": "Dola47", "id": 45386621, "node_id": "MDQ6VXNlcjQ1Mzg2NjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/45386621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dola47", "html_url": "https://github.com/Dola47", "followers_url": "https://api.github.com/users/Dola47/followers", "following_url": "https://api.github.com/users/Dola47/following{/other_user}", "gists_url": "https://api.github.com/users/Dola47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dola47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dola47/subscriptions", "organizations_url": "https://api.github.com/users/Dola47/orgs", "repos_url": "https://api.github.com/users/Dola47/repos", "events_url": "https://api.github.com/users/Dola47/events{/privacy}", "received_events_url": "https://api.github.com/users/Dola47/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-12T09:10:08Z", "updated_at": "2020-04-07T09:04:32Z", "closed_at": "2020-04-03T17:52:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello All,\r\n\r\nI am working on Tabular data, I gather my data in a single batch, after doing some preprocessing on my data. I get the explanation of each single instance. I have more than 40k instance. I am asking if there is way to know which features are the most important ones, and used frequently in the explanation of each single instance? I want to find out which features are the most important ones in the explanations over the whole instances?\r\n\r\nIs there is a way to generate a graph or a plot the represent the most important features used in the explanations of the whole explained instances?\r\n\r\nIs that possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/434", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/434/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/434/events", "html_url": "https://github.com/marcotcr/lime/issues/434", "id": 575875504, "node_id": "MDU6SXNzdWU1NzU4NzU1MDQ=", "number": 434, "title": "Dealing with numerical integer feature", "user": {"login": "xuyangela", "id": 3347480, "node_id": "MDQ6VXNlcjMzNDc0ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3347480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xuyangela", "html_url": "https://github.com/xuyangela", "followers_url": "https://api.github.com/users/xuyangela/followers", "following_url": "https://api.github.com/users/xuyangela/following{/other_user}", "gists_url": "https://api.github.com/users/xuyangela/gists{/gist_id}", "starred_url": "https://api.github.com/users/xuyangela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xuyangela/subscriptions", "organizations_url": "https://api.github.com/users/xuyangela/orgs", "repos_url": "https://api.github.com/users/xuyangela/repos", "events_url": "https://api.github.com/users/xuyangela/events{/privacy}", "received_events_url": "https://api.github.com/users/xuyangela/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-04T23:27:52Z", "updated_at": "2020-04-03T17:48:17Z", "closed_at": "2020-04-03T17:48:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my data set, I have integer features, such as week of year. I want to use it numerical and at the same time, it is integer. In LIME sampling, it generates float numbers for all numerical features (if I understand it correctly). Can I limit it to sample from existing integers?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/433", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/433/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/433/events", "html_url": "https://github.com/marcotcr/lime/issues/433", "id": 572323575, "node_id": "MDU6SXNzdWU1NzIzMjM1NzU=", "number": 433, "title": "Hide color", "user": {"login": "palatos", "id": 49554605, "node_id": "MDQ6VXNlcjQ5NTU0NjA1", "avatar_url": "https://avatars1.githubusercontent.com/u/49554605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palatos", "html_url": "https://github.com/palatos", "followers_url": "https://api.github.com/users/palatos/followers", "following_url": "https://api.github.com/users/palatos/following{/other_user}", "gists_url": "https://api.github.com/users/palatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/palatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palatos/subscriptions", "organizations_url": "https://api.github.com/users/palatos/orgs", "repos_url": "https://api.github.com/users/palatos/repos", "events_url": "https://api.github.com/users/palatos/events{/privacy}", "received_events_url": "https://api.github.com/users/palatos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-27T20:00:15Z", "updated_at": "2020-04-03T17:46:22Z", "closed_at": "2020-04-03T17:46:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was wondering if there is a methodical way of choosing the hide_color option for Image explanations.\r\nI noticed changing it can influence the results of the explanation a bit, so I was wondering if there is a specific way of knowing the best color.\r\n\r\nAlso when an image is pre-processed to some weird color scale (as is the case with some models that use the average or standard deviation of the data as references), I'm not sure how to choose the color.\r\n\r\nLet's say I have an image mapped to values between [-120,113] instead of the usual [0,255], [0,1], [-1,1] scales. Could I reasonably pass hide_color = -120 for instance, expecting that to be the equivalent of \"black\" in this color space, for the purposes of generating explanations?\r\n\r\nThanks for any clarifications, and once again for this great resource you're maintaining.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/432", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/432/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/432/events", "html_url": "https://github.com/marcotcr/lime/issues/432", "id": 567346738, "node_id": "MDU6SXNzdWU1NjczNDY3Mzg=", "number": 432, "title": "what is the use of model in lime explain_instance?", "user": {"login": "sathya-ramasamy", "id": 35392763, "node_id": "MDQ6VXNlcjM1MzkyNzYz", "avatar_url": "https://avatars0.githubusercontent.com/u/35392763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sathya-ramasamy", "html_url": "https://github.com/sathya-ramasamy", "followers_url": "https://api.github.com/users/sathya-ramasamy/followers", "following_url": "https://api.github.com/users/sathya-ramasamy/following{/other_user}", "gists_url": "https://api.github.com/users/sathya-ramasamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/sathya-ramasamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sathya-ramasamy/subscriptions", "organizations_url": "https://api.github.com/users/sathya-ramasamy/orgs", "repos_url": "https://api.github.com/users/sathya-ramasamy/repos", "events_url": "https://api.github.com/users/sathya-ramasamy/events{/privacy}", "received_events_url": "https://api.github.com/users/sathya-ramasamy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-19T06:31:34Z", "updated_at": "2020-02-21T09:55:13Z", "closed_at": "2020-02-21T09:55:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "i cannot understand what is the use of model in lime explain instance.and i cannot find where we are passing model to lime explain instance.we are only passing predict function.but we can calculate it for that nearest neighbours also?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/431", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/431/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/431/events", "html_url": "https://github.com/marcotcr/lime/issues/431", "id": 566480089, "node_id": "MDU6SXNzdWU1NjY0ODAwODk=", "number": 431, "title": "explain_instance_with_data", "user": {"login": "elsharifali", "id": 46041168, "node_id": "MDQ6VXNlcjQ2MDQxMTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/46041168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elsharifali", "html_url": "https://github.com/elsharifali", "followers_url": "https://api.github.com/users/elsharifali/followers", "following_url": "https://api.github.com/users/elsharifali/following{/other_user}", "gists_url": "https://api.github.com/users/elsharifali/gists{/gist_id}", "starred_url": "https://api.github.com/users/elsharifali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elsharifali/subscriptions", "organizations_url": "https://api.github.com/users/elsharifali/orgs", "repos_url": "https://api.github.com/users/elsharifali/repos", "events_url": "https://api.github.com/users/elsharifali/events{/privacy}", "received_events_url": "https://api.github.com/users/elsharifali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-17T19:24:19Z", "updated_at": "2020-02-18T01:54:23Z", "closed_at": "2020-02-18T01:54:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do you have a working example that demonstrates the use of **explain_instance_with_data** to generate the R^2 score?\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/430", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/430/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/430/events", "html_url": "https://github.com/marcotcr/lime/issues/430", "id": 563448876, "node_id": "MDU6SXNzdWU1NjM0NDg4NzY=", "number": 430, "title": "explain_instance - issue with predict_proba", "user": {"login": "sreeja-guha", "id": 55720548, "node_id": "MDQ6VXNlcjU1NzIwNTQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/55720548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sreeja-guha", "html_url": "https://github.com/sreeja-guha", "followers_url": "https://api.github.com/users/sreeja-guha/followers", "following_url": "https://api.github.com/users/sreeja-guha/following{/other_user}", "gists_url": "https://api.github.com/users/sreeja-guha/gists{/gist_id}", "starred_url": "https://api.github.com/users/sreeja-guha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sreeja-guha/subscriptions", "organizations_url": "https://api.github.com/users/sreeja-guha/orgs", "repos_url": "https://api.github.com/users/sreeja-guha/repos", "events_url": "https://api.github.com/users/sreeja-guha/events{/privacy}", "received_events_url": "https://api.github.com/users/sreeja-guha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-11T20:11:40Z", "updated_at": "2020-04-03T17:04:12Z", "closed_at": "2020-04-03T17:04:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nThank you for the LIME codes. I have been trying to use them to explain the predictions of my xgBoost model. The model is trained on Xtrain, which is a dataframe, and predict_proba() too accepts dataframes (I had to transform series, arrays to dataframe for it to work). But explain_instance gives error, and I am unable to fix it. \r\n\r\nMy code below (including some of the modeling code for reference and the full error in the end):\r\n\r\nxgb_v3 = XGBClassifier(learning_rate=0.3, max_depth=1, n_estimators=300, random_state=100, scale_pos_weight=152, nthread=-1)\r\n%time xgb_v3.fit(Xtrain,Ytrain) # Xtrain is the dataframe of features, Ytrain is a series with 1/0 values\r\n\r\nproba_train =  xgb_v3.predict_proba(Xtrain)[:, 1] # gives prob(Y=1)\r\n\r\nfeatures = list(Xtrain.columns)\r\n\r\nexplainer = lime.lime_tabular.LimeTabularExplainer(training_data=Xtrain.values,mode='classification', training_labels=Ytrain, feature_names=features)\r\n\r\nIf I try the following, error says training data did not have the following fields: f256, f83, f22, ...\r\n\r\nexp = explainer.explain_instance(Xtrain.iloc[0], predict_fn=xgb_v3.predict_proba, num_features=10)\r\n\r\nI realized predict_proba is not accepting the series Xtrain.iloc[0], so I converted to a dataframe and checked that this works:\r\n\r\nxgb_v3.predict_proba(pd.DataFrame(Xtrain.iloc[0]).transpose())\r\n\r\nso i changed my explain_instance code to:\r\n\r\nexp = explainer.explain_instance(pd.DataFrame(Xtrain.iloc[0]).transpose(), predict_fn=xgb_v3.predict_proba, num_features=10)\r\n\r\nabove gives the error:  TypeError: unhashable type: 'slice'. Full error message below:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-100-a7668fd8dbf2> in <module>\r\n----> 1 exp = explainer.explain_instance(pd.DataFrame(Xtrain.iloc[0]).transpose(), predict_fn=xgb_v3.predict_proba, num_features=10)\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\lime\\lime_tabular.py in explain_instance(self, data_row, predict_fn, labels, top_labels, num_features, num_samples, distance_metric, model_regressor)\r\n    338             # Preventative code: if sparse, convert to csr format if not in csr format already\r\n    339             data_row = data_row.tocsr()\r\n--> 340         data, inverse = self.__data_inverse(data_row, num_samples)\r\n    341         if sp.sparse.issparse(data):\r\n    342             # Note in sparse case we don't subtract mean since data would become dense\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\lime\\lime_tabular.py in __data_inverse(self, data_row, num_samples)\r\n    535             first_row = data_row\r\n    536         else:\r\n--> 537             first_row = self.discretizer.discretize(data_row)\r\n    538         data[0] = data_row.copy()\r\n    539         inverse = data.copy()\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\lime\\discretize.py in discretize(self, data)\r\n    111             else:\r\n    112                 ret[:, feature] = self.lambdas[feature](\r\n--> 113                     ret[:, feature]).astype(int)\r\n    114         return ret\r\n    115 \r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\pandas\\core\\frame.py in __getitem__(self, key)\r\n   2686             return self._getitem_multilevel(key)\r\n   2687         else:\r\n-> 2688             return self._getitem_column(key)\r\n   2689 \r\n   2690     def _getitem_column(self, key):\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\pandas\\core\\frame.py in _getitem_column(self, key)\r\n   2693         # get column\r\n   2694         if self.columns.is_unique:\r\n-> 2695             return self._get_item_cache(key)\r\n   2696 \r\n   2697         # duplicate columns & possible reduce dimensionality\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\pandas\\core\\generic.py in _get_item_cache(self, item)\r\n   2485         \"\"\"Return the cached item, item represents a label indexer.\"\"\"\r\n   2486         cache = self._item_cache\r\n-> 2487         res = cache.get(item)\r\n   2488         if res is None:\r\n   2489             values = self._data.get(item)\r\n\r\nTypeError: unhashable type: 'slice'\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/428", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/428/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/428/events", "html_url": "https://github.com/marcotcr/lime/issues/428", "id": 559847739, "node_id": "MDU6SXNzdWU1NTk4NDc3Mzk=", "number": 428, "title": "IndexError: index 1 is out of bounds for axis 1 with size 1", "user": {"login": "simplezhang57", "id": 43463813, "node_id": "MDQ6VXNlcjQzNDYzODEz", "avatar_url": "https://avatars3.githubusercontent.com/u/43463813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simplezhang57", "html_url": "https://github.com/simplezhang57", "followers_url": "https://api.github.com/users/simplezhang57/followers", "following_url": "https://api.github.com/users/simplezhang57/following{/other_user}", "gists_url": "https://api.github.com/users/simplezhang57/gists{/gist_id}", "starred_url": "https://api.github.com/users/simplezhang57/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simplezhang57/subscriptions", "organizations_url": "https://api.github.com/users/simplezhang57/orgs", "repos_url": "https://api.github.com/users/simplezhang57/repos", "events_url": "https://api.github.com/users/simplezhang57/events{/privacy}", "received_events_url": "https://api.github.com/users/simplezhang57/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-04T16:51:10Z", "updated_at": "2020-04-03T17:08:38Z", "closed_at": "2020-04-03T17:08:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "explainer = lime_tabular.RecurrentTabularExplainer(x_train, training_labels=y_train, feature_names=['close'],\r\n                                                   discretize_continuous=True,\r\n                                                   class_names=['Falling', 'Rising'],\r\n                                                   )\r\n\r\nexp = explainer.explain_instance(x_cv[1], model.predict, num_features=1 ,labels=(1,))\r\nexp.show_in_notebook()\r\n\r\nx_train.shape = (444, 9, 1)\r\ny_train.shape = (444, 1)\r\nx_cv.shape = (151, 9, 1)\r\ny_cv.shape = (151, 1)\r\nc:\\users\\psdz\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\lime\\lime_base.py in explain_instance_with_data(self, neighborhood_data, neighborhood_labels, distances, label, num_features, feature_selection, model_regressor)\r\n    181 \r\n    182         weights = self.kernel_fn(distances)\r\n--> 183         labels_column = neighborhood_labels[:, label]\r\n    184         used_features = self.feature_selection(neighborhood_data,\r\n    185                                                labels_column,\r\n\r\nIndexError: index 1 is out of bounds for axis 1 with size 1\r\n\r\nanyone help me out,thx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/427", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/427/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/427/events", "html_url": "https://github.com/marcotcr/lime/issues/427", "id": 558745940, "node_id": "MDU6SXNzdWU1NTg3NDU5NDA=", "number": 427, "title": "Explain a linear regression model", "user": {"login": "titecher", "id": 40323207, "node_id": "MDQ6VXNlcjQwMzIzMjA3", "avatar_url": "https://avatars0.githubusercontent.com/u/40323207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/titecher", "html_url": "https://github.com/titecher", "followers_url": "https://api.github.com/users/titecher/followers", "following_url": "https://api.github.com/users/titecher/following{/other_user}", "gists_url": "https://api.github.com/users/titecher/gists{/gist_id}", "starred_url": "https://api.github.com/users/titecher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/titecher/subscriptions", "organizations_url": "https://api.github.com/users/titecher/orgs", "repos_url": "https://api.github.com/users/titecher/repos", "events_url": "https://api.github.com/users/titecher/events{/privacy}", "received_events_url": "https://api.github.com/users/titecher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-02T19:41:09Z", "updated_at": "2020-04-03T16:50:30Z", "closed_at": "2020-04-03T16:50:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "To understand how LIME explains the model, I tried to apply this to a simple linear regression model.\r\nThe artificial data is as follows,\r\n x_i =np.random.random(1000);\r\n y_i = -3*x_1-1.5*x_2+0*x_3+1.5*x_4+4*x_5+6*x_6+ 1*(np.random.random(1000)-0.5)\r\n\r\nthen I fitted this by LightGBM and used LIME to explain the model. LightGBM is well-fitted on this data, R^2=0.97. Then, LIME says the following output.\r\nIntercept 3.3205477174765647\r\nPrediction_local [2.11415409]\r\nRight: 1.9567157008087541\r\n![image](https://user-images.githubusercontent.com/40323207/73613900-764e1700-463d-11ea-93f8-86556cfa5c0d.png)\r\n\r\nWhy are not the values of feature contribution the same values of the coefficient of the artificial data? The ratio seems same as them.   ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/426", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/426/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/426/events", "html_url": "https://github.com/marcotcr/lime/issues/426", "id": 557808608, "node_id": "MDU6SXNzdWU1NTc4MDg2MDg=", "number": 426, "title": "How to use a 1D-CNN model in Lime?", "user": {"login": "khawkhaa", "id": 37381346, "node_id": "MDQ6VXNlcjM3MzgxMzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/37381346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khawkhaa", "html_url": "https://github.com/khawkhaa", "followers_url": "https://api.github.com/users/khawkhaa/followers", "following_url": "https://api.github.com/users/khawkhaa/following{/other_user}", "gists_url": "https://api.github.com/users/khawkhaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/khawkhaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khawkhaa/subscriptions", "organizations_url": "https://api.github.com/users/khawkhaa/orgs", "repos_url": "https://api.github.com/users/khawkhaa/repos", "events_url": "https://api.github.com/users/khawkhaa/events{/privacy}", "received_events_url": "https://api.github.com/users/khawkhaa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-30T23:01:11Z", "updated_at": "2020-04-03T16:46:46Z", "closed_at": "2020-04-03T16:46:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a numeric health record dataset. I used a 1D CNN keras model for the classification step.\r\n\r\nI am giving a reproductible example in Python:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport keras\r\nfrom keras.models import Sequential\r\nfrom keras.layers import Conv1D, Activation, Flatten, Dense\r\nimport numpy as np\r\n\r\na = np.array([[0,1,2,9,3], [0,5,1,33,6], [1, 12,1,8,9]])\r\ntrain = np.reshape(a[:,1:],(a[:,1:].shape[0], a[:,1:].shape[1],1))\r\ny_train = keras.utils.to_categorical(a[:,:1])\r\n\r\nmodel = Sequential()\r\nmodel.add(Conv1D(filters=2, kernel_size=2, strides=1, activation='relu', padding=\"same\",\r\n                    input_shape=(train.shape[1], 1), kernel_initializer='he_normal'))\r\n\r\nmodel.add(Flatten())\r\nmodel.add(Dense(2, activation='sigmoid'))\r\n\r\nmodel.compile(loss=keras.losses.binary_crossentropy,\r\n                 optimizer=keras.optimizers.Adam(lr=0.001, beta_1=0.9, beta_2=0.999, amsgrad=False),\r\n                 metrics=['accuracy'])\r\n\r\nmodel.fit(train, y_train, epochs=3, verbose=1)\r\n```\r\n\r\nI am getting this error when I apply lime to my 1D CNN model\r\n\r\n```\r\nimport lime\r\nimport lime.lime_tabular\r\nexplainer = lime.lime_tabular.LimeTabularExplainer(train)\r\n\r\nIndexError: boolean index did not match indexed array along dimension 1; dimension is 4 but corresponding boolean dimension is 1\r\n```\r\n\r\nIs there a solution ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/425", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/425/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/425/events", "html_url": "https://github.com/marcotcr/lime/issues/425", "id": 555636469, "node_id": "MDU6SXNzdWU1NTU2MzY0Njk=", "number": 425, "title": "Multi-value categorical variables", "user": {"login": "bvanberl", "id": 19732310, "node_id": "MDQ6VXNlcjE5NzMyMzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/19732310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanberl", "html_url": "https://github.com/bvanberl", "followers_url": "https://api.github.com/users/bvanberl/followers", "following_url": "https://api.github.com/users/bvanberl/following{/other_user}", "gists_url": "https://api.github.com/users/bvanberl/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanberl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanberl/subscriptions", "organizations_url": "https://api.github.com/users/bvanberl/orgs", "repos_url": "https://api.github.com/users/bvanberl/repos", "events_url": "https://api.github.com/users/bvanberl/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanberl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-27T15:06:50Z", "updated_at": "2020-04-03T17:56:02Z", "closed_at": "2020-04-03T16:43:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am working with the LIME tabular explainer API, as I have a mixture of numerical and categorical features in my dataset. How would I represent categorical features that may take on \u2265 0 values in a single example? I understand that the API requires categorical features to be converted \r\n to an integer representation, but how would I represent combinations of values for one categorical feature? To illustrate the circumstance, see the example dataset below and consider the \"Comorbidities\" feature:\r\n\r\n|  |SmokingStatus  | DrinksPerWeek         |         Comorbidities|\r\n| ------------- |-------------| -----|------------|\r\n|0 |       Smoker  |            0        |         [Hypertension]|\r\n|1     |   Smoker      |        0 | [Hypertension, Heart Failure]|\r\n|2   |  Nonsmoker  |            6        |        [Liver Failure]|\r\n|3     |     Quit        |      9 | [Hypertension, Liver Failure]|\r\n|4    | Nonsmoker | 2        |    []  |\r\n\r\nOne approach I investigated was to consider the presence of each value as its own binary categorical feature; however, the number of features scales up fast since I have multiple features with examples taking on many combinations of values. I am concerned that my approach does not enable efficient sampling around an example to be explained. I understand that LimeTabularExplainer requires that values in categorical columns be integers, but how would I encode these \"multi-valued\" categorical features as integers?\r\n\r\nThanks for considering my question and for maintaining this well-documented implementation of LIME!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/424", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/424/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/424/events", "html_url": "https://github.com/marcotcr/lime/issues/424", "id": 555428897, "node_id": "MDU6SXNzdWU1NTU0Mjg4OTc=", "number": 424, "title": "Right input for explain_instance", "user": {"login": "intelliGait", "id": 47107686, "node_id": "MDQ6VXNlcjQ3MTA3Njg2", "avatar_url": "https://avatars0.githubusercontent.com/u/47107686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/intelliGait", "html_url": "https://github.com/intelliGait", "followers_url": "https://api.github.com/users/intelliGait/followers", "following_url": "https://api.github.com/users/intelliGait/following{/other_user}", "gists_url": "https://api.github.com/users/intelliGait/gists{/gist_id}", "starred_url": "https://api.github.com/users/intelliGait/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/intelliGait/subscriptions", "organizations_url": "https://api.github.com/users/intelliGait/orgs", "repos_url": "https://api.github.com/users/intelliGait/repos", "events_url": "https://api.github.com/users/intelliGait/events{/privacy}", "received_events_url": "https://api.github.com/users/intelliGait/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-27T08:37:56Z", "updated_at": "2020-04-03T16:36:31Z", "closed_at": "2020-04-03T16:36:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Marco,\r\n\r\nI experimented with your [Keras tutorial](https://github.com/marcotcr/lime/blob/master/doc/notebooks/Tutorial%20-%20Image%20Classification%20Keras.ipynb) but instead of using the InceptionV3 I used a VGG16 model. \r\n\r\nIn order to read the image, which should be used for explanations i ran follwing lines:\r\n\r\n\r\n```\r\nIMAGE_PATH = '../cat.jpg'\r\nimg_org = image.load_img(IMAGE_PATH, target_size=(224, 224))\r\nimg = image.img_to_array(img_org.copy())\r\nimg = np.expand_dims(img, axis=0)\r\nimg = preprocess_input(img)\r\n\r\n```\r\nFurthermore I wanted to test different Segmentation algorithms and started with your default approach and settings for quickshift:\r\n\r\n```\r\nfrom lime.wrappers.scikit_image import SegmentationAlgorithm\r\nsegmentation_quick = SegmentationAlgorithm('quickshift', kernel_size=4, max_dist=200, ratio=0.2, random_seed=42)\r\n```\r\n\r\nThe segmentation results for the original image and the VGG preprocessed image are significantly different:\r\n![LIME](https://user-images.githubusercontent.com/47107686/73160591-b49d8080-40e9-11ea-8897-1ed654e26792.png)\r\n \r\nThere is of course also a difference in the explanations when i call the explanaition function _explain_instance_ with the original and the preprocessed image.\r\n\r\n`explanation = explainer.explain_instance(img[0], model.predict, top_labels=3, hide_color=0, num_samples=10000, segmentation_fn=segmentation_quick)`\r\n\r\nvs\r\n\r\n`explanation = explainer.explain_instance(img_org, model.predict, top_labels=3, hide_color=0, num_samples=10000, segmentation_fn=segmentation_quick)`\r\n\r\nIn your tutorial you provided the preprocessed image as parameter for _explain_instance_ which is reasonable because you need the predictions from model.predict on that one. I think there is a problem regarding the VGG preprocessed image and the segmentation algorithms. Could you describe the correct workflow?\r\n\r\nKind regards\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/423", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/423/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/423/events", "html_url": "https://github.com/marcotcr/lime/issues/423", "id": 554235913, "node_id": "MDU6SXNzdWU1NTQyMzU5MTM=", "number": 423, "title": "'Numpy.ndarray' object is not callable", "user": {"login": "arindam44", "id": 43511733, "node_id": "MDQ6VXNlcjQzNTExNzMz", "avatar_url": "https://avatars3.githubusercontent.com/u/43511733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arindam44", "html_url": "https://github.com/arindam44", "followers_url": "https://api.github.com/users/arindam44/followers", "following_url": "https://api.github.com/users/arindam44/following{/other_user}", "gists_url": "https://api.github.com/users/arindam44/gists{/gist_id}", "starred_url": "https://api.github.com/users/arindam44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arindam44/subscriptions", "organizations_url": "https://api.github.com/users/arindam44/orgs", "repos_url": "https://api.github.com/users/arindam44/repos", "events_url": "https://api.github.com/users/arindam44/events{/privacy}", "received_events_url": "https://api.github.com/users/arindam44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-23T15:38:29Z", "updated_at": "2020-01-27T09:58:33Z", "closed_at": "2020-01-27T09:58:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to initiate an explainer like\r\nexplanation = explainer.explain_instance(df_test.iloc[i], mlp.predict_proba(df_test))\r\nHere df_test is a dataframe of shape (49, 687)\r\nPlease help!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/422", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/422/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/422/events", "html_url": "https://github.com/marcotcr/lime/issues/422", "id": 554074752, "node_id": "MDU6SXNzdWU1NTQwNzQ3NTI=", "number": 422, "title": "TypeError: <method-wrapper '__call__' of builtin_function_or_method object> is not a Python function", "user": {"login": "plannapus", "id": 2563344, "node_id": "MDQ6VXNlcjI1NjMzNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2563344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plannapus", "html_url": "https://github.com/plannapus", "followers_url": "https://api.github.com/users/plannapus/followers", "following_url": "https://api.github.com/users/plannapus/following{/other_user}", "gists_url": "https://api.github.com/users/plannapus/gists{/gist_id}", "starred_url": "https://api.github.com/users/plannapus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plannapus/subscriptions", "organizations_url": "https://api.github.com/users/plannapus/orgs", "repos_url": "https://api.github.com/users/plannapus/repos", "events_url": "https://api.github.com/users/plannapus/events{/privacy}", "received_events_url": "https://api.github.com/users/plannapus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-23T10:39:17Z", "updated_at": "2020-04-03T16:22:38Z", "closed_at": "2020-04-03T16:22:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm trying to apply `explain_instance` to the results of a CNN using MobileNet (via tensorflow) but keep getting the following error, no matter which parameter I modify:\r\n\r\n```\r\n>>> img.shape\r\n(1, 224, 224, 3)\r\n>>> predict_fn(img)\r\narray([[4.77335675e-07, 6.21444087e-06, 2.32887596e-01, 2.64239721e-02,\r\n        2.07287865e-03, 3.09167881e-05, 4.25639749e-01, 1.51046415e-05,\r\n        3.96482610e-05, 2.32012717e-05, 1.31119194e-03, 1.00831080e-07,\r\n        6.23450136e-09, 1.17117527e-03, 2.71290030e-08, 3.10377657e-01]],\r\n      dtype=float32)\r\n>>> explainer = lime_image.LimeImageExplainer()\r\n>>> explainer.explain_instance(img, predict_fn)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/lime/lime_image.py\", line 179, in explain_instance\r\n    random_seed=random_seed)\r\n  File \"/usr/local/lib/python2.7/site-packages/lime/wrappers/scikit_image.py\", line 105, in __init__\r\n    kwargs = self.filter_params(quickshift)\r\n  File \"/usr/local/lib/python2.7/site-packages/lime/wrappers/scikit_image.py\", line 84, in filter_params\r\n    if has_arg(fn, name):\r\n  File \"/usr/local/lib/python2.7/site-packages/lime/utils/generic_utils.py\", line 21, in has_arg\r\n    arg_spec = inspect.getargspec(fn.__call__)\r\n  File \"/usr/local/Cellar/python@2/2.7.17/Frameworks/Python.framework/Versions/2.7/lib/python2.7/inspect.py\", line 825, in getargspec\r\n    raise TypeError('{!r} is not a Python function'.format(func))\r\nTypeError: <method-wrapper '__call__' of builtin_function_or_method object at 0x1241d4c80> is not a Python function\r\n```\r\n\r\nAny idea of how to debug this?  \r\nThanks in advances!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/421", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/421/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/421/events", "html_url": "https://github.com/marcotcr/lime/issues/421", "id": 548437537, "node_id": "MDU6SXNzdWU1NDg0Mzc1Mzc=", "number": 421, "title": "Clarification: What does the number mean in explanations?", "user": {"login": "joschjava", "id": 35228356, "node_id": "MDQ6VXNlcjM1MjI4MzU2", "avatar_url": "https://avatars2.githubusercontent.com/u/35228356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joschjava", "html_url": "https://github.com/joschjava", "followers_url": "https://api.github.com/users/joschjava/followers", "following_url": "https://api.github.com/users/joschjava/following{/other_user}", "gists_url": "https://api.github.com/users/joschjava/gists{/gist_id}", "starred_url": "https://api.github.com/users/joschjava/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joschjava/subscriptions", "organizations_url": "https://api.github.com/users/joschjava/orgs", "repos_url": "https://api.github.com/users/joschjava/repos", "events_url": "https://api.github.com/users/joschjava/events{/privacy}", "received_events_url": "https://api.github.com/users/joschjava/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-11T14:40:53Z", "updated_at": "2020-04-03T16:20:02Z", "closed_at": "2020-04-03T16:20:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "![grafik](https://user-images.githubusercontent.com/35228356/72205882-32c21c00-3488-11ea-8aea-be784f0dc9c7.png)\r\nIn this graphic what does the 0.26 actually mean in odor=foul? I assume it's a probability. How do the individual values contribute to the final explanation? If edible is 0.00, how can there be gill-size=broad of 0.13 which should increase the probability of edible?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/420", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/420/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/420/events", "html_url": "https://github.com/marcotcr/lime/issues/420", "id": 548370809, "node_id": "MDU6SXNzdWU1NDgzNzA4MDk=", "number": 420, "title": "AttributeError: 'ProgressBar' object has no attribute 'currval'", "user": {"login": "WHG555", "id": 26180549, "node_id": "MDQ6VXNlcjI2MTgwNTQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/26180549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WHG555", "html_url": "https://github.com/WHG555", "followers_url": "https://api.github.com/users/WHG555/followers", "following_url": "https://api.github.com/users/WHG555/following{/other_user}", "gists_url": "https://api.github.com/users/WHG555/gists{/gist_id}", "starred_url": "https://api.github.com/users/WHG555/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WHG555/subscriptions", "organizations_url": "https://api.github.com/users/WHG555/orgs", "repos_url": "https://api.github.com/users/WHG555/repos", "events_url": "https://api.github.com/users/WHG555/events{/privacy}", "received_events_url": "https://api.github.com/users/WHG555/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-11T02:53:30Z", "updated_at": "2020-04-03T21:41:07Z", "closed_at": "2020-04-03T21:41:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "error code \r\n```\r\nE:\\Soft\\anaconda\\envs\\retinanet\\lib\\site-packages\\lime\\lime_image.py in data_labels(self, image, fudged_image, segments, classifier_fn, num_samples, batch_size)\r\n    263                 labels.extend(preds)\r\n    264                 imgs = []\r\n--> 265             pbar.currval += 1\r\n    266             pbar.update()\r\n    267         pbar.finish()\r\n\r\nAttributeError: 'ProgressBar' object has no attribute 'currval'\r\n```\r\n\r\nPackage version\r\n```\r\nlime:  0.1.1.37\r\nprogressbar:  2.5\r\nprogressbar2:  3.42.0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/419", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/419/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/419/events", "html_url": "https://github.com/marcotcr/lime/issues/419", "id": 547237717, "node_id": "MDU6SXNzdWU1NDcyMzc3MTc=", "number": 419, "title": "How does LIME choose it local ?", "user": {"login": "thuybt", "id": 59462501, "node_id": "MDQ6VXNlcjU5NDYyNTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/59462501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thuybt", "html_url": "https://github.com/thuybt", "followers_url": "https://api.github.com/users/thuybt/followers", "following_url": "https://api.github.com/users/thuybt/following{/other_user}", "gists_url": "https://api.github.com/users/thuybt/gists{/gist_id}", "starred_url": "https://api.github.com/users/thuybt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thuybt/subscriptions", "organizations_url": "https://api.github.com/users/thuybt/orgs", "repos_url": "https://api.github.com/users/thuybt/repos", "events_url": "https://api.github.com/users/thuybt/events{/privacy}", "received_events_url": "https://api.github.com/users/thuybt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-09T04:17:12Z", "updated_at": "2020-04-03T16:17:16Z", "closed_at": "2020-04-03T16:17:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Marco, \r\nI have read your paper and use LIME to explain my model in Kaggle Default Risk competion data, and encounter some struggle as following: \r\n1. How can LIME choose or calculate  \u03c0x(z)? Please refer your source code that is related to this part?\r\n2. How can LIME divide group of each variables in its explanation?\r\nPlease help me address these issue, thank you in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/417", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/417/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/417/events", "html_url": "https://github.com/marcotcr/lime/issues/417", "id": 546408552, "node_id": "MDU6SXNzdWU1NDY0MDg1NTI=", "number": 417, "title": "Size of lime installation", "user": {"login": "PawelFaron", "id": 42373772, "node_id": "MDQ6VXNlcjQyMzczNzcy", "avatar_url": "https://avatars1.githubusercontent.com/u/42373772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PawelFaron", "html_url": "https://github.com/PawelFaron", "followers_url": "https://api.github.com/users/PawelFaron/followers", "following_url": "https://api.github.com/users/PawelFaron/following{/other_user}", "gists_url": "https://api.github.com/users/PawelFaron/gists{/gist_id}", "starred_url": "https://api.github.com/users/PawelFaron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PawelFaron/subscriptions", "organizations_url": "https://api.github.com/users/PawelFaron/orgs", "repos_url": "https://api.github.com/users/PawelFaron/repos", "events_url": "https://api.github.com/users/PawelFaron/events{/privacy}", "received_events_url": "https://api.github.com/users/PawelFaron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-07T17:22:48Z", "updated_at": "2020-04-03T15:47:47Z", "closed_at": "2020-04-03T15:47:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nThe only class I'm using from lime is LimeTextExplainer. I'm trying to fit it into AWS lambda limitation which is 250 mb. Lime alone with all dependencies has this size. Do you know maybe a way how to shrink it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/416", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/416/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/416/events", "html_url": "https://github.com/marcotcr/lime/issues/416", "id": 546347765, "node_id": "MDU6SXNzdWU1NDYzNDc3NjU=", "number": 416, "title": "textClassification - inconsistency with  softmax temperature", "user": {"login": "carmelShor", "id": 58820263, "node_id": "MDQ6VXNlcjU4ODIwMjYz", "avatar_url": "https://avatars3.githubusercontent.com/u/58820263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmelShor", "html_url": "https://github.com/carmelShor", "followers_url": "https://api.github.com/users/carmelShor/followers", "following_url": "https://api.github.com/users/carmelShor/following{/other_user}", "gists_url": "https://api.github.com/users/carmelShor/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmelShor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmelShor/subscriptions", "organizations_url": "https://api.github.com/users/carmelShor/orgs", "repos_url": "https://api.github.com/users/carmelShor/repos", "events_url": "https://api.github.com/users/carmelShor/events{/privacy}", "received_events_url": "https://api.github.com/users/carmelShor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-07T15:30:00Z", "updated_at": "2020-04-13T15:21:04Z", "closed_at": "2020-04-13T15:21:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nFirst I would like to thank you for a very nice tool and for very efficient support and issues handling. \r\nI am trying to use LimeTextExplainer with a bert  model fine-tuned for YelpReviewsPolarity.\r\nI was using the structure i found on https://github.com/ThilinaRajapakse/pytorch-transformers-classification .\r\nThe thing is, that when evaluating a transformer-based classifier (or any DNN for that matter), the last layer is not softmaxed, but rather argmaxed by default.  \r\nin-order to use LimeTextExplainer, I wrote an additional method called predict_proba(str_list)--> np.array , that return the desired np array of \"probabilities\".\r\nHowever, since softmax is a rather arbitrary way to normalize the logits into the [0 1] interval, I played a little with the softmax temperature. \r\nthe result was a bit surprising - first of all, the \"word importance\" order seems to change, while i was assuming it should be invariant to monotonous transformation.\r\nsecond, for some of the temperatures, the \"values\" each word got became very small, making it hard to display on default settings.  (see attached screenshots)\r\nIn order to check this issue, I also ran LimeTextExplainer on a default params RandomForest, with an additional softmax-temperature at the end, and got similar behavior. \r\n\r\ncan you explain these results? \r\ncould you elaborate on the best practices to implement the necessary predict_proba method? is there a better way to normalize (aside from softmax?)\r\nwhat causes the word coefficients to vanish? \r\n\r\nthanks a lot,\r\n\r\nCarmel\r\n\r\ncode:\r\n       `\r\n\r\n    def predict_proba(self, str_list):\r\n        \"\"\" This function is fed to LimeTextExplainer.explain_instance() as the\r\n        'classifier_fn'. it gets a list of strings, and gives back an np.array\r\n        of 'probabilities', that LIME needs to fit the explanation's decision\r\n        boundery.\r\n        \r\n        Arguments:\r\n            str_list {list(str)} -- list of strings; if a single text is given,\r\n                it should be wrapped in len=1 list.\r\n\r\n        Returns:\r\n            [np.array] -- an array of dim=(str_list.len, num_of_labels) of\r\n                        the 'probabilities' for each label\r\n        \"\"\"\r\n\r\n        dataset = self.convert_str_list_to_dataset(str_list)\r\n        eval_sampler = SequentialSampler(dataset)\r\n        dataloader = DataLoader(\r\n            dataset, sampler=eval_sampler, batch_size=self.batch_size)\r\n\r\n        preds = None\r\n        out_label_ids = None    # might be important for other transformers\r\n\r\n        for batch in dataloader:\r\n            self.model.eval()\r\n            batch = tuple(t.to(self.device) for t in batch)\r\n\r\n            with torch.no_grad():\r\n                inputs = {'input_ids':      batch[0],\r\n                          'attention_mask': batch[1]\r\n                          if self.model_type in self.transformers_models else None,\r\n                          'token_type_ids': batch[2]\r\n                          # XLM don't use segment_ids\r\n                          if self.model_type in ['bert', 'xlnet'] else None}\r\n\r\n                outputs = self.model(**inputs)\r\n                logits = outputs[0]\r\n                # in case model.forward gives more than one output then logits\r\n                # should be the first\r\n                logits = logits.detach().cpu().numpy()\r\n                # Lime collects the logits from ALL examples, so it needs to\r\n                # detach each batch's logits form device back to cpu.\r\n                if preds is None:\r\n                    preds = logits\r\n                    # out_label_ids = inputs[\"labels\"].detach().cpu().numpy()\r\n                else:\r\n                    preds = np.append(preds, logits, axis=0)\r\n                    # out_label_ids = np.append(out_label_ids,\r\n                    # inputs[\"labels\"].detach().cpu().numpy(),\r\n                    # axis=0)\r\n\r\n        if self.softmax_T is not None:\r\n            proba = softmaxT(preds, theta=self.softmax_T, axis=1)\r\n            return proba\r\n        else:\r\n            return preds\r\n`\r\nscreenshots:\r\n\r\n![image](https://user-images.githubusercontent.com/58820263/71905249-71966000-3170-11ea-8fcb-96ce8f6f4ab9.png)\r\n![image](https://user-images.githubusercontent.com/58820263/71905443-d0f47000-3170-11ea-9810-8b654ae322c9.png)\r\n![image](https://user-images.githubusercontent.com/58820263/71905552-0c8f3a00-3171-11ea-8565-52b452f9e35c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/58820263/71906396-aacfcf80-3172-11ea-9f8f-4fd4a1cf9537.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/415", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/415/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/415/events", "html_url": "https://github.com/marcotcr/lime/issues/415", "id": 545655982, "node_id": "MDU6SXNzdWU1NDU2NTU5ODI=", "number": 415, "title": "Lime Not Capturing Categorical Features Well", "user": {"login": "hiyamgh", "id": 35295550, "node_id": "MDQ6VXNlcjM1Mjk1NTUw", "avatar_url": "https://avatars0.githubusercontent.com/u/35295550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hiyamgh", "html_url": "https://github.com/hiyamgh", "followers_url": "https://api.github.com/users/hiyamgh/followers", "following_url": "https://api.github.com/users/hiyamgh/following{/other_user}", "gists_url": "https://api.github.com/users/hiyamgh/gists{/gist_id}", "starred_url": "https://api.github.com/users/hiyamgh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hiyamgh/subscriptions", "organizations_url": "https://api.github.com/users/hiyamgh/orgs", "repos_url": "https://api.github.com/users/hiyamgh/repos", "events_url": "https://api.github.com/users/hiyamgh/events{/privacy}", "received_events_url": "https://api.github.com/users/hiyamgh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-06T10:32:43Z", "updated_at": "2020-01-08T14:32:10Z", "closed_at": "2020-01-08T14:32:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, in my dataset, I have a mix of categorical and nuremerical features, and I'm tackling a regression problem.\r\n\r\nI specified through the explainer the indices corresponding to the ```categorical_features```, as well as the ```categorical_names``` as follows:\r\n\r\n```\r\nexplainer = lime.lime_tabular.LimeTabularExplainer(X_train, feature_names=columns_names, \r\n                                                   categorical_features=[14,15,16,17,18,19,20],\r\n                                                   categorical_names=['mohafaza_B', 'mohafaza_N', 'mohafaza_NE',\r\n                                                                        'service_General Medicine', 'service_Pediatrics',\r\n                                                                        'service_Gynaecology', 'service_Pharmacy'],\r\n                                                   verbose=True, mode='regression')\r\ni = 20\r\nmodel = Ridge()\r\nmodel.fit(X_train, y_train)\r\nnp.random.seed(21)\r\nexp = explainer.explain_instance(X_test[i], model.predict, num_features=21)\r\nexp.show_in_notebook(show_table=True)\r\n```\r\n\r\nHowever, in the tabular representation, the categorical column of the particular instance that is labeled 0 as well as the one labeled 1 are both being considered ```True```. Please find the image below:\r\n![Screenshot (389)](https://user-images.githubusercontent.com/35295550/71812705-901d2e00-3080-11ea-9072-a31311434f94.png)\r\n\r\nAm I doing anything wrong ?\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/414", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/414/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/414/events", "html_url": "https://github.com/marcotcr/lime/issues/414", "id": 542320134, "node_id": "MDU6SXNzdWU1NDIzMjAxMzQ=", "number": 414, "title": "Is there any way to get explanation for a few selected features?", "user": {"login": "xueyyyy", "id": 44226218, "node_id": "MDQ6VXNlcjQ0MjI2MjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/44226218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xueyyyy", "html_url": "https://github.com/xueyyyy", "followers_url": "https://api.github.com/users/xueyyyy/followers", "following_url": "https://api.github.com/users/xueyyyy/following{/other_user}", "gists_url": "https://api.github.com/users/xueyyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/xueyyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xueyyyy/subscriptions", "organizations_url": "https://api.github.com/users/xueyyyy/orgs", "repos_url": "https://api.github.com/users/xueyyyy/repos", "events_url": "https://api.github.com/users/xueyyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/xueyyyy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-25T10:51:51Z", "updated_at": "2020-01-03T17:29:44Z", "closed_at": "2020-01-03T17:29:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently working to make explanation for a multiple classifiers. The API I used is\r\nlime.lime_tabular.LimeTabularExplainer.\r\nThe prediction model contains over 100 features, and the problem is that It takes too much time to run the explainer. Therefore I wonder is there any way to select some of the specific features for the explainer, and just ignore the others features?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/413", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/413/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/413/events", "html_url": "https://github.com/marcotcr/lime/issues/413", "id": 542317280, "node_id": "MDU6SXNzdWU1NDIzMTcyODA=", "number": 413, "title": "Is there any way to get explanation for specific fea", "user": {"login": "xueyyyy", "id": 44226218, "node_id": "MDQ6VXNlcjQ0MjI2MjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/44226218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xueyyyy", "html_url": "https://github.com/xueyyyy", "followers_url": "https://api.github.com/users/xueyyyy/followers", "following_url": "https://api.github.com/users/xueyyyy/following{/other_user}", "gists_url": "https://api.github.com/users/xueyyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/xueyyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xueyyyy/subscriptions", "organizations_url": "https://api.github.com/users/xueyyyy/orgs", "repos_url": "https://api.github.com/users/xueyyyy/repos", "events_url": "https://api.github.com/users/xueyyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/xueyyyy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-25T10:35:31Z", "updated_at": "2019-12-25T10:54:09Z", "closed_at": "2019-12-25T10:54:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/411", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/411/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/411/events", "html_url": "https://github.com/marcotcr/lime/issues/411", "id": 535888052, "node_id": "MDU6SXNzdWU1MzU4ODgwNTI=", "number": 411, "title": "Intercept and lower bounds for Image Explanation", "user": {"login": "palatos", "id": 49554605, "node_id": "MDQ6VXNlcjQ5NTU0NjA1", "avatar_url": "https://avatars1.githubusercontent.com/u/49554605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palatos", "html_url": "https://github.com/palatos", "followers_url": "https://api.github.com/users/palatos/followers", "following_url": "https://api.github.com/users/palatos/following{/other_user}", "gists_url": "https://api.github.com/users/palatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/palatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palatos/subscriptions", "organizations_url": "https://api.github.com/users/palatos/orgs", "repos_url": "https://api.github.com/users/palatos/repos", "events_url": "https://api.github.com/users/palatos/events{/privacy}", "received_events_url": "https://api.github.com/users/palatos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-10T17:50:07Z", "updated_at": "2019-12-20T01:24:14Z", "closed_at": "2019-12-20T01:24:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So this is actually two technical questions about the Image explanations and the ridge regression for that case.\r\nSay that we have only two classes of images (0 and 1).\r\n\r\nThe first question is: Is there an upper/lower bound on the explanation weights for each segment in an image? I notice they frequently lay in the (-1,1) range, but I'm not sure if that is just a coincidence or intended. Could one get a segment in an image with a explanation/ridge coefficient of 5.0 for instance?\r\n\r\nThe second question is: How does the ridge regression intercept affect the explanations and their interpretation? For instance, can the user always assume that positive weights mean a segment contributes towards that given classification, and negative weights against it, or should one also check the intercept value for each class? Is there any case where a segment could have negative explanation weights but still be contributing positively towards a classification due to the intercept value, and vice versa?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/410", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/410/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/410/events", "html_url": "https://github.com/marcotcr/lime/issues/410", "id": 535003161, "node_id": "MDU6SXNzdWU1MzUwMDMxNjE=", "number": 410, "title": "Printing data instance for which the prediction is made in simple txt format.", "user": {"login": "srijanc", "id": 43124192, "node_id": "MDQ6VXNlcjQzMTI0MTky", "avatar_url": "https://avatars0.githubusercontent.com/u/43124192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srijanc", "html_url": "https://github.com/srijanc", "followers_url": "https://api.github.com/users/srijanc/followers", "following_url": "https://api.github.com/users/srijanc/following{/other_user}", "gists_url": "https://api.github.com/users/srijanc/gists{/gist_id}", "starred_url": "https://api.github.com/users/srijanc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srijanc/subscriptions", "organizations_url": "https://api.github.com/users/srijanc/orgs", "repos_url": "https://api.github.com/users/srijanc/repos", "events_url": "https://api.github.com/users/srijanc/events{/privacy}", "received_events_url": "https://api.github.com/users/srijanc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-09T15:24:03Z", "updated_at": "2019-12-24T00:24:02Z", "closed_at": "2019-12-20T01:19:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am unable to get the data instance output in a simple format for which the prediction is done.\r\nI see that the html file generated by save_to_file contains the desired output.\r\n\r\n\r\n```\r\nexp_div = top_div.append('div').classed('lime explanation', true);\r\n--\r\n\u00a0 | exp.show([[\"Capital Gain <= 0.00\", -0.6988713302192259], [\"Age <= 28.00\", -0.10341048820226414], [\"Hours per week <= 40.00\", -0.09778069895349602], [\"Marital Status=Never-married\", -0.09644688889745717], [\"Education-Num <= 9.00\", -0.09460883490060283], [\"Occupation=Other-service\", -0.03812212203159269], [\"Capital Loss <= 0.00\", -0.03757078697144384], [\"Sex=Male\", 0.03494924726046984], [\"Relationship=Other-relative\", -0.024712102230666267], [\"Race=White\", 0.020325648985441164], [\"Workclass=Private\", 0.007045297401002338], [\"Country=United-States\", 0.006050764450323902], [\"Education=11th\", -0.003516358172806853], [\"178587.00 < fnlwgt <= 237549.25\", 0.0031683848402579524]], 1, exp_div);\r\n\r\n```\r\nIs there a way to get this specific output ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/409", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/409/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/409/events", "html_url": "https://github.com/marcotcr/lime/issues/409", "id": 530425107, "node_id": "MDU6SXNzdWU1MzA0MjUxMDc=", "number": 409, "title": "Interpreting Fine-tuned Bert model using LIME", "user": {"login": "rameshjes", "id": 25647309, "node_id": "MDQ6VXNlcjI1NjQ3MzA5", "avatar_url": "https://avatars3.githubusercontent.com/u/25647309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rameshjes", "html_url": "https://github.com/rameshjes", "followers_url": "https://api.github.com/users/rameshjes/followers", "following_url": "https://api.github.com/users/rameshjes/following{/other_user}", "gists_url": "https://api.github.com/users/rameshjes/gists{/gist_id}", "starred_url": "https://api.github.com/users/rameshjes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rameshjes/subscriptions", "organizations_url": "https://api.github.com/users/rameshjes/orgs", "repos_url": "https://api.github.com/users/rameshjes/repos", "events_url": "https://api.github.com/users/rameshjes/events{/privacy}", "received_events_url": "https://api.github.com/users/rameshjes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-29T16:30:32Z", "updated_at": "2020-08-22T04:48:02Z", "closed_at": "2019-12-20T01:15:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this amazing work. I am trying to interpret Fine-tuned BERT model using [Transformer](https://github.com/huggingface/transformers) framework. It seems there is tokenization issue, when I try to use LIME with BERT. Here is the error that i am getting:\r\n```\r\nTraceback (most recent call last):\r\n  File \"src/predict.py\", line 351, in <module>\r\n    exp = explainer.explain_instance(s, prediction.predictor, num_features=6)\r\n  File \"/home/ramesh/.virtualenvs/transformer-env/lib/python3.6/site-packages/lime/lime_text.py\", line 417, in explain_instance\r\n    distance_metric=distance_metric)\r\n  File \"/home/ramesh/.virtualenvs/transformer-env/lib/python3.6/site-packages/lime/lime_text.py\", line 484, in __data_labels_distances\r\n    labels = classifier_fn(inverse_data)\r\n  File \"src/predict.py\", line 297, in predictor\r\n    input_ids, input_mask, segment_ids = self.convert_text_to_features(text)\r\n  File \"src/predict.py\", line 135, in convert_text_to_features\r\n    tokens_a = self.tokenizer.tokenize(text_a)\r\n  File \"/home/ramesh/.virtualenvs/transformer-env/lib/python3.6/site-packages/transformers/tokenization_utils.py\", line 649, in tokenize\r\n    tokenized_text = split_on_tokens(added_tokens, text)\r\n  File \"/home/ramesh/.virtualenvs/transformer-env/lib/python3.6/site-packages/transformers/tokenization_utils.py\", line 637, in split_on_tokens\r\n    if sub_text not in self.added_tokens_encoder \\\r\nTypeError: unhashable type: 'list'\r\n```\r\n\r\nHere is my code: \r\n```\r\ndef predictor(self, text):\r\n\r\n        max_seq_length=128\r\n        input_ids, input_mask, segment_ids = self.convert_text_to_features(text)\r\n        self.model.to(self.device)\r\n\r\n        with torch.no_grad():\r\n            outputs = self.model(input_ids, input_mask, segment_ids)\r\n\r\n        logits = outputs[0]\r\n        logits = F.softmax(logits, dim=1)\r\n\r\n        return logits.numpy()\r\n\r\ndef convert_text_to_features(self, text_a, text_b=None):\r\n\r\n        features = []\r\n        cls_token = self.tokenizer.cls_token\r\n        sep_token = self.tokenizer.sep_token\r\n        cls_token_at_end = False\r\n        sequence_a_segment_id = 0\r\n        sequence_b_segment_id = 1\r\n        cls_token_segment_id = 1\r\n        pad_token_segment_id = 0\r\n        mask_padding_with_zero = True\r\n        pad_token = 0\r\n        tokens_a = self.tokenizer.tokenize(text_a)\r\n        tokens_b = None\r\n\r\n        self._truncate_seq_pair(tokens_a, self.max_seq_length - 2)\r\n\r\n        tokens = tokens_a + [sep_token]\r\n        segment_ids = [sequence_a_segment_id] * len(tokens)\r\n\r\n        if tokens_b:\r\n            tokens += tokens_b + [sep_token]\r\n            segment_ids += [sequence_b_segment_id] * (len(tokens_b) + 1)\r\n\r\n\r\n        tokens = [cls_token] + tokens\r\n        segment_ids = [cls_token_segment_id] + segment_ids\r\n\r\n        input_ids = self.tokenizer.convert_tokens_to_ids(tokens)\r\n\r\n        input_mask = [1 if mask_padding_with_zero else 0] * len(input_ids)\r\n        padding_length = self.max_seq_length - len(input_ids)\r\n\r\n\r\n        input_ids = input_ids + ([pad_token] * padding_length)\r\n        input_mask = input_mask + ([0 if mask_padding_with_zero else 1] * padding_length)\r\n        segment_ids = segment_ids + ([pad_token_segment_id] * padding_length)\r\n\r\n        assert len(input_ids) == self.max_seq_length\r\n        assert len(input_mask) == self.max_seq_length\r\n        assert len(segment_ids) == self.max_seq_length\r\n\r\n        input_ids = torch.tensor([input_ids], dtype=torch.long).to(self.device)\r\n        input_mask = torch.tensor([input_mask], dtype=torch.long).to(self.device)\r\n        segment_ids = torch.tensor([segment_ids], dtype=torch.long).to(self.device)\r\n        return input_ids, input_mask, segment_ids\r\n\r\n\r\nif __name__ == '__main__':\r\n\r\n    model_path = \"models/mrpc\"\r\n    bert_model_class = \"bert\"\r\n    prediction = Prediction(bert_model_class, model_path, lower_case=True, seq_length=128)\r\n    label_names = [0, 1]\r\n    explainer = LimeTextExplainer(class_names=label_names)\r\n    train_df = pd.read_csv(\"data/train.tsv\", sep = '\\t')\r\n\r\n    for example in train_df[\"string\"]:\r\n        exp = explainer.explain_instance(example, prediction.predictor, num_features=6)\r\n        print(exp.as_list())\r\n```\r\nI have checked this [issue356](https://github.com/marcotcr/lime/issues/356),  but still i cannot figure out my problem.\r\n\r\nAny leads will be appreciated. \r\n\r\nThank you :) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/408", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/408/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/408/events", "html_url": "https://github.com/marcotcr/lime/issues/408", "id": 527920226, "node_id": "MDU6SXNzdWU1Mjc5MjAyMjY=", "number": 408, "title": "Is not compatible with the output of Keras models for regression", "user": {"login": "vd1371", "id": 39760422, "node_id": "MDQ6VXNlcjM5NzYwNDIy", "avatar_url": "https://avatars2.githubusercontent.com/u/39760422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vd1371", "html_url": "https://github.com/vd1371", "followers_url": "https://api.github.com/users/vd1371/followers", "following_url": "https://api.github.com/users/vd1371/following{/other_user}", "gists_url": "https://api.github.com/users/vd1371/gists{/gist_id}", "starred_url": "https://api.github.com/users/vd1371/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vd1371/subscriptions", "organizations_url": "https://api.github.com/users/vd1371/orgs", "repos_url": "https://api.github.com/users/vd1371/repos", "events_url": "https://api.github.com/users/vd1371/events{/privacy}", "received_events_url": "https://api.github.com/users/vd1371/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-25T08:12:35Z", "updated_at": "2019-12-20T01:11:18Z", "closed_at": "2019-12-20T01:11:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nLine 351, if the predict_fn is a keras model for regression, the output shape would be (5000, 1). Then this will raise an error in line 381.\r\n\r\nMy suggestion:\r\n\r\n           try:\r\n                 if len(yss.shape) != 1 and len(yss[0].shape) == 1:\r\n                        yss = np.array([val[0] for val in yss])\r\n                 assert isinstance(yss, np.ndarray) and len(yss.shape) == 1\r\n            except AssertionError:\r\n                raise ValueError(\"Your model needs to output single-dimensional \\\r\n                    numpyarrays, not arrays of {} dimensions\".format(yss.shape))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/407", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/407/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/407/events", "html_url": "https://github.com/marcotcr/lime/issues/407", "id": 526984176, "node_id": "MDU6SXNzdWU1MjY5ODQxNzY=", "number": 407, "title": "Lime not detecting classification xgboost model - R", "user": {"login": "ankhnesmerira", "id": 28076602, "node_id": "MDQ6VXNlcjI4MDc2NjAy", "avatar_url": "https://avatars2.githubusercontent.com/u/28076602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankhnesmerira", "html_url": "https://github.com/ankhnesmerira", "followers_url": "https://api.github.com/users/ankhnesmerira/followers", "following_url": "https://api.github.com/users/ankhnesmerira/following{/other_user}", "gists_url": "https://api.github.com/users/ankhnesmerira/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankhnesmerira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankhnesmerira/subscriptions", "organizations_url": "https://api.github.com/users/ankhnesmerira/orgs", "repos_url": "https://api.github.com/users/ankhnesmerira/repos", "events_url": "https://api.github.com/users/ankhnesmerira/events{/privacy}", "received_events_url": "https://api.github.com/users/ankhnesmerira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-22T04:43:54Z", "updated_at": "2019-12-20T01:01:33Z", "closed_at": "2019-12-20T01:01:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\nI'm using Lime on an xgboost classification model (binary:logistic) but the explanation output model is detected as regression, not classification. The actual model-predicted values match, but the lime-predicted values can be absurd (like negative, which should not be the case for classification.) I am running out of ideas how to fix this issue.\r\nhere is a pseudo code of myprocess:\r\n\r\n```\r\n#XGBOOST model\r\nrequire(xgboost)\r\nxgboost_model <- xgboost(data = gbm_train_x\r\n                               , label = gbm_train_y\r\n                               , max.depth = 5 \r\n                               , eta = 1\r\n                               , nthread = 2\r\n                               , nrounds = 20\r\n                               , objective = \"binary:logistic\"\r\n                               , verbose = 1)\r\n\r\n```\r\n```\r\n# LIME\r\nrequire(lime)\r\nGBM_model_explainer <- lime(   gbm_churn_train_x\r\n                             , xgboost_model \r\n                             , preprocess = NULL\r\n                             , bin_continuous = TRUE\r\n                             , n_bins = 10\r\n                             , quantile_bins = TRUE)\r\n\r\nGBM_model_explanation <- explain(gbm_pred_x\r\n                                                , GBM_model_explainer\r\n                                                , n_permutations = 1000\r\n                                                , dist_fun = 'gower'\r\n                                                #, kernel_width = 0.75\r\n                                                , n_features = 10\r\n                                                , feature_select = \"highest_weights\"\r\n                                                #, labels = 'p1' \r\n                                                , n_labels = 1 \r\n                                                ) \r\n```\r\n\r\nModel type  in GBM_model_explanation comes up as regression instead of classification! I don't have this issue with h2O Random Forest model.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/406", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/406/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/406/events", "html_url": "https://github.com/marcotcr/lime/issues/406", "id": 526487482, "node_id": "MDU6SXNzdWU1MjY0ODc0ODI=", "number": 406, "title": "TypeError: 'NoneType' object is not callable", "user": {"login": "emtropyml", "id": 53178223, "node_id": "MDQ6VXNlcjUzMTc4MjIz", "avatar_url": "https://avatars1.githubusercontent.com/u/53178223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emtropyml", "html_url": "https://github.com/emtropyml", "followers_url": "https://api.github.com/users/emtropyml/followers", "following_url": "https://api.github.com/users/emtropyml/following{/other_user}", "gists_url": "https://api.github.com/users/emtropyml/gists{/gist_id}", "starred_url": "https://api.github.com/users/emtropyml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emtropyml/subscriptions", "organizations_url": "https://api.github.com/users/emtropyml/orgs", "repos_url": "https://api.github.com/users/emtropyml/repos", "events_url": "https://api.github.com/users/emtropyml/events{/privacy}", "received_events_url": "https://api.github.com/users/emtropyml/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-21T10:02:56Z", "updated_at": "2019-12-20T00:55:44Z", "closed_at": "2019-12-20T00:55:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Error installing LIME in Python 2 on Google Cloud Platform:**\r\n \r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/pip\", line 6, in <module>\r\n    from pip._internal import main\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_internal/__init__.py\", line 40, in <module>\r\n    from pip._internal.cli.autocompletion import autocomplete\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_internal/cli/autocompletion.py\", line 8, in <module>\r\n    from pip._internal.cli.main_parser import create_main_parser\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_internal/cli/main_parser.py\", line 8, in <module>\r\n    from pip._internal.cli import cmdoptions\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_internal/cli/cmdoptions.py\", line 22, in <module>\r\n    from pip._internal.utils.hashes import STRONG_HASHES\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_internal/utils/hashes.py\", line 10, in <module>\r\n    from pip._internal.utils.misc import read_chunks\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_internal/utils/misc.py\", line 20, in <module>\r\n    from pip._vendor import pkg_resources\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3241, in <module>\r\n    @_call_aside\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3225, in _call_aside\r\n    f(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3269, in _initialize_master_working_set\r\n    for dist in working_set\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3269, in <genexpr>\r\n    for dist in working_set\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 2776, in activate\r\n    declare_namespace(pkg)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 2275, in declare_namespace\r\n    _handle_ns(packageName, path_item)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 2208, in _handle_ns\r\n    loader.load_module(packageName)\r\n  File \"/usr/lib/python2.7/pkgutil.py\", line 246, in load_module\r\n    mod = imp.load_module(fullname, self.file, self.filename, self.etc)\r\n  File \"/usr/local/lib/python2.7/dist-packages/google/cloud/pubsub.py\", line 19, in <module>\r\n    from google.cloud.pubsub_v1 import PublisherClient\r\n  File \"/usr/local/lib/python2.7/dist-packages/google/cloud/pubsub_v1/__init__.py\", line 17, in <module>\r\n    from google.cloud.pubsub_v1 import types\r\n  File \"/usr/local/lib/python2.7/dist-packages/google/cloud/pubsub_v1/types.py\", line 19, in <module>\r\n    from google.api import http_pb2\r\n  File \"/home/jupyter/.local/lib/python2.7/site-packages/google/api/http_pb2.py\", line 6, in <module>\r\n    from google.protobuf import descriptor as _descriptor\r\n  File \"/home/jupyter/.local/lib/python2.7/site-packages/google/protobuf/__init__.py\", line 37, in <module>\r\n    __import__('pkg_resources').declare_namespace(__name__)\r\n  File \"/home/jupyter/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 3241, in <module>\r\n    @_call_aside\r\n  File \"/home/jupyter/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 3225, in _call_aside\r\n    f(*args, **kwargs)\r\n  File \"/home/jupyter/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 3269, in _initialize_master_working_set\r\n    for dist in working_set\r\n  File \"/home/jupyter/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 3269, in <genexpr>\r\n    for dist in working_set\r\n  File \"/home/jupyter/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2776, in activate\r\n    declare_namespace(pkg)\r\n  File \"/home/jupyter/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2275, in declare_namespace\r\n    _handle_ns(packageName, path_item)\r\n  File \"/home/jupyter/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2208, in _handle_ns\r\n    loader.load_module(packageName)\r\n  File \"/usr/lib/python2.7/pkgutil.py\", line 246, in load_module\r\n    mod = imp.load_module(fullname, self.file, self.filename, self.etc)\r\n  File \"/usr/local/lib/python2.7/dist-packages/google/cloud/logging/__init__.py\", line 22, in <module>\r\n    from google.cloud.logging.client import Client\r\n  File \"/usr/local/lib/python2.7/dist-packages/google/cloud/logging/client.py\", line 28, in <module>\r\n    from google.cloud.client import ClientWithProject\r\n  File \"/usr/local/lib/python2.7/dist-packages/google/cloud/client.py\", line 27, in <module>\r\n    from google.oauth2 import service_account\r\n  File \"/usr/local/lib/python2.7/dist-packages/google/oauth2/service_account.py\", line 77, in <module>\r\n    from google.auth import _service_account_info\r\n  File \"/usr/local/lib/python2.7/dist-packages/google/auth/_service_account_info.py\", line 22, in <module>\r\n    from google.auth import crypt\r\n  File \"/usr/local/lib/python2.7/dist-packages/google/auth/crypt/__init__.py\", line 39, in <module>\r\n    from google.auth.crypt import rsa\r\n  File \"/usr/local/lib/python2.7/dist-packages/google/auth/crypt/rsa.py\", line 20, in <module>\r\n    from google.auth.crypt import _cryptography_rsa\r\n  File \"/usr/local/lib/python2.7/dist-packages/google/auth/crypt/_cryptography_rsa.py\", line 46, in <module>\r\n    _BACKEND = backends.default_backend()\r\n  File \"/usr/lib/python2.7/dist-packages/cryptography/hazmat/backends/__init__.py\", line 71, in default_backend\r\n    _default_backend = MultiBackend(_available_backends())\r\n  File \"/usr/lib/python2.7/dist-packages/cryptography/hazmat/backends/__init__.py\", line 28, in _available_backends\r\n    \"cryptography.backends\"\r\n**TypeError: 'NoneType' object is not callable**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/405", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/405/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/405/events", "html_url": "https://github.com/marcotcr/lime/issues/405", "id": 526367996, "node_id": "MDU6SXNzdWU1MjYzNjc5OTY=", "number": 405, "title": "pretrained pickled models", "user": {"login": "alexlaurence", "id": 39573687, "node_id": "MDQ6VXNlcjM5NTczNjg3", "avatar_url": "https://avatars0.githubusercontent.com/u/39573687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexlaurence", "html_url": "https://github.com/alexlaurence", "followers_url": "https://api.github.com/users/alexlaurence/followers", "following_url": "https://api.github.com/users/alexlaurence/following{/other_user}", "gists_url": "https://api.github.com/users/alexlaurence/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexlaurence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexlaurence/subscriptions", "organizations_url": "https://api.github.com/users/alexlaurence/orgs", "repos_url": "https://api.github.com/users/alexlaurence/repos", "events_url": "https://api.github.com/users/alexlaurence/events{/privacy}", "received_events_url": "https://api.github.com/users/alexlaurence/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-21T05:07:34Z", "updated_at": "2019-12-20T00:53:04Z", "closed_at": "2019-12-20T00:53:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry for the incredibly stupid question, but does LIME / Anchors work on pretrained (i.e. pickled) models?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/404", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/404/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/404/events", "html_url": "https://github.com/marcotcr/lime/issues/404", "id": 525875900, "node_id": "MDU6SXNzdWU1MjU4NzU5MDA=", "number": 404, "title": "Features not displayed correctly when using explain_in_notebook", "user": {"login": "mortenoosvik", "id": 33130876, "node_id": "MDQ6VXNlcjMzMTMwODc2", "avatar_url": "https://avatars1.githubusercontent.com/u/33130876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mortenoosvik", "html_url": "https://github.com/mortenoosvik", "followers_url": "https://api.github.com/users/mortenoosvik/followers", "following_url": "https://api.github.com/users/mortenoosvik/following{/other_user}", "gists_url": "https://api.github.com/users/mortenoosvik/gists{/gist_id}", "starred_url": "https://api.github.com/users/mortenoosvik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mortenoosvik/subscriptions", "organizations_url": "https://api.github.com/users/mortenoosvik/orgs", "repos_url": "https://api.github.com/users/mortenoosvik/repos", "events_url": "https://api.github.com/users/mortenoosvik/events{/privacy}", "received_events_url": "https://api.github.com/users/mortenoosvik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-20T15:28:15Z", "updated_at": "2019-12-20T00:52:08Z", "closed_at": "2019-12-20T00:52:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, Marco Tulio Ribeiro!\r\n\r\nI've implemented your LIME framework but the output does not look right. \r\n\r\n![Screenshot 2019-11-20 at 16 08 32](https://user-images.githubusercontent.com/33130876/69250518-16a0ad80-0bb0-11ea-84ff-e3d78e20e356.png)\r\n\r\nI've tried running it in both Chrome and Safari with the same result. LIME was installed using `pip install lime`.\r\n\r\nThere was a similar issue: [Issue 88](https://github.com/marcotcr/lime/issues/88). I tried the proposed solution without any luck. I've also tried `save_to_fig` but it produces the same plot. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/403", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/403/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/403/events", "html_url": "https://github.com/marcotcr/lime/issues/403", "id": 524144580, "node_id": "MDU6SXNzdWU1MjQxNDQ1ODA=", "number": 403, "title": "Difference between paper and code in calculating distance function", "user": {"login": "tomohikoabe-gvatech", "id": 54268938, "node_id": "MDQ6VXNlcjU0MjY4OTM4", "avatar_url": "https://avatars0.githubusercontent.com/u/54268938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomohikoabe-gvatech", "html_url": "https://github.com/tomohikoabe-gvatech", "followers_url": "https://api.github.com/users/tomohikoabe-gvatech/followers", "following_url": "https://api.github.com/users/tomohikoabe-gvatech/following{/other_user}", "gists_url": "https://api.github.com/users/tomohikoabe-gvatech/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomohikoabe-gvatech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomohikoabe-gvatech/subscriptions", "organizations_url": "https://api.github.com/users/tomohikoabe-gvatech/orgs", "repos_url": "https://api.github.com/users/tomohikoabe-gvatech/repos", "events_url": "https://api.github.com/users/tomohikoabe-gvatech/events{/privacy}", "received_events_url": "https://api.github.com/users/tomohikoabe-gvatech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-18T05:29:25Z", "updated_at": "2019-12-20T00:50:52Z", "closed_at": "2019-12-20T00:50:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently working on text classification tasks with LSTM and would like to use LIME to help to explain the results.\r\n\r\nI have two questions.\r\n\r\n(1) I think there's difference between [paper](https://www.kdd.org/kdd2016/papers/files/rfp0573-ribeiroA.pdf) and code in calculating distance function `D(x,z)` (Eq.2 in the paper).\r\nSpecifically, in the paper, the distance function is calculated over original representations `x` and `z` in `R^d`, on the other hand, in the code (`lime/lime/lime_text.py`), it is calculated over interpretable (or binary) representations `x'` and `z'` in `{0,1}^d'` as follows:\r\n\r\n```lime_text.py\r\nclass LimeTextExplainer(object):\r\n    ...\r\n    def __data_labels_distances(self,\r\n                                indexed_string,\r\n                                classifier_fn,\r\n                                num_samples,\r\n                                distance_metric='cosine'):\r\n        ...\r\n        data = np.ones((num_samples, doc_size))\r\n        ...\r\n        distances = distance_fn(sp.sparse.csr_matrix(data))\r\n        ...\r\n```\r\n\r\n(2) If the calculation method in the paper is correct, i couldn't figure out how i could calculate the distance function `D(x,z)`  as an input of a sequence of token vectors `{x1, ..., xn}`. \r\n\r\nI would really appreciate it if you could respond to the questions.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/401", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/401/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/401/events", "html_url": "https://github.com/marcotcr/lime/issues/401", "id": 523342357, "node_id": "MDU6SXNzdWU1MjMzNDIzNTc=", "number": 401, "title": "Cannot open HTML file created by Explain Instance in Python", "user": {"login": "LuckyRathod", "id": 21126196, "node_id": "MDQ6VXNlcjIxMTI2MTk2", "avatar_url": "https://avatars0.githubusercontent.com/u/21126196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LuckyRathod", "html_url": "https://github.com/LuckyRathod", "followers_url": "https://api.github.com/users/LuckyRathod/followers", "following_url": "https://api.github.com/users/LuckyRathod/following{/other_user}", "gists_url": "https://api.github.com/users/LuckyRathod/gists{/gist_id}", "starred_url": "https://api.github.com/users/LuckyRathod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LuckyRathod/subscriptions", "organizations_url": "https://api.github.com/users/LuckyRathod/orgs", "repos_url": "https://api.github.com/users/LuckyRathod/repos", "events_url": "https://api.github.com/users/LuckyRathod/events{/privacy}", "received_events_url": "https://api.github.com/users/LuckyRathod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-15T09:02:04Z", "updated_at": "2019-12-20T00:41:35Z", "closed_at": "2019-12-20T00:41:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a created a model and used Lime Explanation and Created HTML File\r\n`res = exp.save_to_file('Output.html')`\r\nNow in Django i want to render these HTML File\r\nBut Below error is shown\r\n`Could not parse the remainder: '([\\s\\S]+?)' from '([\\s\\S]+?)'\r\nError on Line No 24811 in Html ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/399", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/399/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/399/events", "html_url": "https://github.com/marcotcr/lime/issues/399", "id": 518758051, "node_id": "MDU6SXNzdWU1MTg3NTgwNTE=", "number": 399, "title": "lime_image not consistent with lime_tabular classification", "user": {"login": "rafikg", "id": 13174842, "node_id": "MDQ6VXNlcjEzMTc0ODQy", "avatar_url": "https://avatars2.githubusercontent.com/u/13174842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafikg", "html_url": "https://github.com/rafikg", "followers_url": "https://api.github.com/users/rafikg/followers", "following_url": "https://api.github.com/users/rafikg/following{/other_user}", "gists_url": "https://api.github.com/users/rafikg/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafikg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafikg/subscriptions", "organizations_url": "https://api.github.com/users/rafikg/orgs", "repos_url": "https://api.github.com/users/rafikg/repos", "events_url": "https://api.github.com/users/rafikg/events{/privacy}", "received_events_url": "https://api.github.com/users/rafikg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-06T20:58:10Z", "updated_at": "2019-12-20T23:22:18Z", "closed_at": "2019-12-20T23:22:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "@marcotcr I see that in lime_tabular classification mode the explanation return a `exp.predict_prob`. However, in the case of lime_image, the explanation does not have predict_prob! I think to be consistent, we should add this to lime_image. Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/397", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/397/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/397/events", "html_url": "https://github.com/marcotcr/lime/issues/397", "id": 517195263, "node_id": "MDU6SXNzdWU1MTcxOTUyNjM=", "number": 397, "title": "Implementation with KerasClassifier", "user": {"login": "fredylg", "id": 1256524, "node_id": "MDQ6VXNlcjEyNTY1MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1256524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fredylg", "html_url": "https://github.com/fredylg", "followers_url": "https://api.github.com/users/fredylg/followers", "following_url": "https://api.github.com/users/fredylg/following{/other_user}", "gists_url": "https://api.github.com/users/fredylg/gists{/gist_id}", "starred_url": "https://api.github.com/users/fredylg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fredylg/subscriptions", "organizations_url": "https://api.github.com/users/fredylg/orgs", "repos_url": "https://api.github.com/users/fredylg/repos", "events_url": "https://api.github.com/users/fredylg/events{/privacy}", "received_events_url": "https://api.github.com/users/fredylg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-04T14:39:01Z", "updated_at": "2019-11-14T03:17:42Z", "closed_at": "2019-11-14T03:17:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n I am trying to run a explainer on a Classifier and I am getting the error \r\n\r\n File \"/usr/local/lib/python3.7/site-packages/keras/wrappers/scikit_learn.py\", line 228, in predict\r\n    proba = self.model.predict(x, **kwargs)\r\nAttributeError: 'KerasClassifier' object has no attribute 'model'\r\n\r\nIs it even possible??  my code below\r\n\r\nPS thanks for any help\r\n\r\n`\r\nimport numpy\r\nimport pandas\r\nimport tensorflow\r\nfrom keras.models import Sequential\r\nfrom keras.layers import Dense\r\nfrom keras.wrappers.scikit_learn import KerasClassifier\r\nfrom keras.utils import np_utils\r\nfrom sklearn.model_selection import cross_val_score\r\nfrom sklearn.model_selection import KFold\r\nfrom sklearn.preprocessing import LabelEncoder\r\nfrom sklearn import preprocessing\r\n\r\nimport lime\r\nimport lime.lime_tabular\r\n\r\nmin_max_scaler = preprocessing.MinMaxScaler()\r\n\r\nseed = 7\r\nnumpy.random.seed(seed)\r\n\r\n#Read data\r\ndf = pandas.read_csv(\"./canada.csv\", sep=\",\", header='infer')\r\ndf.head()\r\n\r\ndataset = df.values\r\nX = dataset[:, 0:-1] ##ALL DATA\r\nY = dataset[:, -1]\t#choice\r\nX = min_max_scaler.fit_transform(X)\r\n\r\nexplainer = lime.lime_tabular.LimeTabularExplainer(dataset, feature_names=df.columns, class_names='choice', discretize_continuous=True)\r\n\r\n#Convert categories to one hot encoded\r\ncateg_Y = np_utils.to_categorical(Y)\r\n\r\ndef baseline_model():\r\n\t#Create model\r\n\tmodel = Sequential()\r\n\tmodel.add(Dense(10, input_dim=X.shape[1], activation='relu'))\r\n\tmodel.add(Dense(8, activation='relu'))\r\n\tmodel.add(Dense(6, activation='relu'))\r\n\r\n\tmodel.add(Dense(8, activation='relu'))\r\n\tmodel.add(Dense(categ_Y.shape[1], activation='softmax'))\r\n\t#Compile model\r\n\tmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\r\n\treturn model\r\n\r\nestimator = KerasClassifier(build_fn=baseline_model, epochs=13, batch_size=10, verbose=1)\r\nkfold = KFold(n_splits=10, shuffle=True, random_state=seed)\r\nresults = cross_val_score(estimator, X, categ_Y, cv=kfold)\r\nprint(\"Accuracy: %.2f%% (%.2f%%)\" % (results.mean()*100, results.std()*100))\r\n\r\n\r\ni = 25\r\nexp = explainer.explain_instance(dataset[i], estimator.predict, num_features=5)\r\n\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/396", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/396/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/396/events", "html_url": "https://github.com/marcotcr/lime/issues/396", "id": 515574647, "node_id": "MDU6SXNzdWU1MTU1NzQ2NDc=", "number": 396, "title": "SVM explain_instance predict_proba sklearn alternative", "user": {"login": "amir0r", "id": 24477374, "node_id": "MDQ6VXNlcjI0NDc3Mzc0", "avatar_url": "https://avatars2.githubusercontent.com/u/24477374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amir0r", "html_url": "https://github.com/amir0r", "followers_url": "https://api.github.com/users/amir0r/followers", "following_url": "https://api.github.com/users/amir0r/following{/other_user}", "gists_url": "https://api.github.com/users/amir0r/gists{/gist_id}", "starred_url": "https://api.github.com/users/amir0r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amir0r/subscriptions", "organizations_url": "https://api.github.com/users/amir0r/orgs", "repos_url": "https://api.github.com/users/amir0r/repos", "events_url": "https://api.github.com/users/amir0r/events{/privacy}", "received_events_url": "https://api.github.com/users/amir0r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-31T16:31:30Z", "updated_at": "2019-12-20T00:22:58Z", "closed_at": "2019-12-20T00:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nFirst, thank you for your amazing job.\r\n\r\nI would like to know if you can recommand a way to explain prediction on text data without using `predict_proba`.\r\n\r\nIndeed, [SVC](https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html) and [OneClassSVM](https://scikit-learn.org/stable/modules/generated/sklearn.svm.OneClassSVM.html) are `scikit-learn` models than can be used to perform classification.  \r\n\r\nBut both doesn't implement `predict_proba` method.\r\n\r\n> Not a native speaker, please forgive me If I did english mistakes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/395", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/395/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/395/events", "html_url": "https://github.com/marcotcr/lime/issues/395", "id": 515525744, "node_id": "MDU6SXNzdWU1MTU1MjU3NDQ=", "number": 395, "title": "submodular pick with ImageExplainer", "user": {"login": "rafikg", "id": 13174842, "node_id": "MDQ6VXNlcjEzMTc0ODQy", "avatar_url": "https://avatars2.githubusercontent.com/u/13174842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafikg", "html_url": "https://github.com/rafikg", "followers_url": "https://api.github.com/users/rafikg/followers", "following_url": "https://api.github.com/users/rafikg/following{/other_user}", "gists_url": "https://api.github.com/users/rafikg/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafikg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafikg/subscriptions", "organizations_url": "https://api.github.com/users/rafikg/orgs", "repos_url": "https://api.github.com/users/rafikg/repos", "events_url": "https://api.github.com/users/rafikg/events{/privacy}", "received_events_url": "https://api.github.com/users/rafikg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-31T15:29:40Z", "updated_at": "2019-11-01T23:21:19Z", "closed_at": "2019-11-01T23:21:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Submodular_pick cannot run on LimeImageExplainer() because it does not have a mode attribute\r\n\r\n `AttributeError: 'ImageExplanation' object has no attribute 'mode'` by running the  `submodular_pick.SubmodularPick` on `explainer = lime_image.LimeImageExplainer()`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/392", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/392/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/392/events", "html_url": "https://github.com/marcotcr/lime/issues/392", "id": 510651512, "node_id": "MDU6SXNzdWU1MTA2NTE1MTI=", "number": 392, "title": "Same Input, Different Explanation", "user": {"login": "rahimentezari", "id": 10376041, "node_id": "MDQ6VXNlcjEwMzc2MDQx", "avatar_url": "https://avatars0.githubusercontent.com/u/10376041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahimentezari", "html_url": "https://github.com/rahimentezari", "followers_url": "https://api.github.com/users/rahimentezari/followers", "following_url": "https://api.github.com/users/rahimentezari/following{/other_user}", "gists_url": "https://api.github.com/users/rahimentezari/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahimentezari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahimentezari/subscriptions", "organizations_url": "https://api.github.com/users/rahimentezari/orgs", "repos_url": "https://api.github.com/users/rahimentezari/repos", "events_url": "https://api.github.com/users/rahimentezari/events{/privacy}", "received_events_url": "https://api.github.com/users/rahimentezari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-22T13:21:02Z", "updated_at": "2019-12-20T23:59:43Z", "closed_at": "2019-12-20T23:59:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for your code.\r\nI used LIME in Tensorflow for MNIST. Why the same input for explanation e.g. \"7\" has different explained outputs? I run this code several times, and each time the image from explanation has minor differences with others. Is this because each time we have different num_samples=1000 ? If yes how can we fix these samples? I also tried this solution https://github.com/marcotcr/lime/issues/67 , but still get different outputs for the same input.\r\n\r\n    explainer = LimeImageExplainer()\r\n    explanation = explainer.explain_instance(test_d['features'][0].astype('float32'), predict_proba,\r\n                                             top_labels=10, num_samples=1000,\r\n                                             random_seed=42)\r\n    temp, mask = explanation.get_image_and_mask(explanation.top_labels[0], positive_only=True, num_features=5, hide_rest=True)\r\n    plt.imsave('MNIST_LIME.png', mark_boundaries(temp / 255, mask))\r\n\r\n\r\n    explainer = LimeImageExplainer()\r\n    def explain(instance, predict_fn, top_labels, num_samples):\r\n        np.random.seed(16)\r\n        return explainer.explain_instance(instance, predict_fn, top_labels, num_samples)\r\n\r\n    explanation = explain(test['features'][0].astype('float32'), predict_proba, top_labels=1, num_samples=1000)\r\n    temp, mask = explanation.get_image_and_mask(explanation.top_labels[0], positive_only=True, num_features=5, hide_rest=True)\r\n    plt.imsave('MNIST_LIME.png', mark_boundaries(temp / 255, mask))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/391", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/391/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/391/events", "html_url": "https://github.com/marcotcr/lime/issues/391", "id": 509071150, "node_id": "MDU6SXNzdWU1MDkwNzExNTA=", "number": 391, "title": "LIME Tabular is not able to generate explanations", "user": {"login": "prempiyush", "id": 6153724, "node_id": "MDQ6VXNlcjYxNTM3MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6153724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prempiyush", "html_url": "https://github.com/prempiyush", "followers_url": "https://api.github.com/users/prempiyush/followers", "following_url": "https://api.github.com/users/prempiyush/following{/other_user}", "gists_url": "https://api.github.com/users/prempiyush/gists{/gist_id}", "starred_url": "https://api.github.com/users/prempiyush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prempiyush/subscriptions", "organizations_url": "https://api.github.com/users/prempiyush/orgs", "repos_url": "https://api.github.com/users/prempiyush/repos", "events_url": "https://api.github.com/users/prempiyush/events{/privacy}", "received_events_url": "https://api.github.com/users/prempiyush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-18T13:11:36Z", "updated_at": "2019-12-20T23:15:29Z", "closed_at": "2019-12-20T23:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "LIME tabular is failing to generate explanation for a regression problem on our dataset.  For any data point, it just generates an explanation where all feature weights are zero.. the local prediction is equal to local intercept in the range of ~5.45\r\n\r\nDataset Used: \r\n[ProblemDataset.csv.zip](https://github.com/marcotcr/lime/files/3743384/ProblemDataset.csv.zip)\r\n\r\nNotebook Used: \r\n[Lime Explanation Issue.ipynb.zip](https://github.com/marcotcr/lime/files/3744007/Lime.Explanation.Issue.ipynb.zip)\r\n\r\nObservations:\r\n\r\n1. The problem is likely in feature_selection `highest_weights` method which is the auto method when num_features > 6. I tried using this feature_selection for num_features < 6, and still got the same result\r\n\r\n2. The feature_selection `forward_selection` method which is the auto method when num_features <=6 works well. It also works well for num_features > 6. \r\n\r\n3. The attached notebook shows a simple RandomRegressor model. However, the model is most likely of no consequence. I saw the same issue in an XGBoost Regressor too.\r\n\r\n4. This issue looks similar to the one mentioned here \r\nhttps://github.com/marcotcr/lime/issues/243#issuecomment-509499641\r\n> Thanks for the reply,\r\n> Actually i cant share the dataset, sorry for that,\r\n> Also if i go for 10 features i get zeros.., it works upto 6 features.\r\n\r\n\r\n@marcotcr Do let me know if you need anything else to recreate the issue. Thanks. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/390", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/390/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/390/events", "html_url": "https://github.com/marcotcr/lime/issues/390", "id": 508723740, "node_id": "MDU6SXNzdWU1MDg3MjM3NDA=", "number": 390, "title": "Lime integration with Plotly Dash", "user": {"login": "logisticregress", "id": 43940666, "node_id": "MDQ6VXNlcjQzOTQwNjY2", "avatar_url": "https://avatars3.githubusercontent.com/u/43940666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/logisticregress", "html_url": "https://github.com/logisticregress", "followers_url": "https://api.github.com/users/logisticregress/followers", "following_url": "https://api.github.com/users/logisticregress/following{/other_user}", "gists_url": "https://api.github.com/users/logisticregress/gists{/gist_id}", "starred_url": "https://api.github.com/users/logisticregress/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/logisticregress/subscriptions", "organizations_url": "https://api.github.com/users/logisticregress/orgs", "repos_url": "https://api.github.com/users/logisticregress/repos", "events_url": "https://api.github.com/users/logisticregress/events{/privacy}", "received_events_url": "https://api.github.com/users/logisticregress/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-17T21:13:05Z", "updated_at": "2019-11-01T23:18:37Z", "closed_at": "2019-11-01T23:18:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "If there is a way, I'd like to know how.  If the functionality doesn't exist yet, can we add it somehow?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/389", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/389/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/389/events", "html_url": "https://github.com/marcotcr/lime/issues/389", "id": 508245269, "node_id": "MDU6SXNzdWU1MDgyNDUyNjk=", "number": 389, "title": "LimeTabularExplainer is not consistent. Does not set random_state in discretizer. ", "user": {"login": "prempiyush", "id": 6153724, "node_id": "MDQ6VXNlcjYxNTM3MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6153724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prempiyush", "html_url": "https://github.com/prempiyush", "followers_url": "https://api.github.com/users/prempiyush/followers", "following_url": "https://api.github.com/users/prempiyush/following{/other_user}", "gists_url": "https://api.github.com/users/prempiyush/gists{/gist_id}", "starred_url": "https://api.github.com/users/prempiyush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prempiyush/subscriptions", "organizations_url": "https://api.github.com/users/prempiyush/orgs", "repos_url": "https://api.github.com/users/prempiyush/repos", "events_url": "https://api.github.com/users/prempiyush/events{/privacy}", "received_events_url": "https://api.github.com/users/prempiyush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-17T05:36:13Z", "updated_at": "2019-12-20T23:55:45Z", "closed_at": "2019-12-20T23:55:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know there are issues like #67 et al that focus on LIME being consistent and repeatable. \r\n\r\nHowever, this is different.\r\n\r\nThis snippet when called multiple times, setting random_state in class, does not guarantee same results.\r\n\r\n```\r\nexplainer = lime.lime_tabular.LimeTabularExplainer(X_train, feature_names=feature_names, random_state=10, mode='regression')\r\nexp = explainer.explain_instance(X_test[10], final_model.predict)\r\n``` \r\n\r\nThis is because LimeTabularExplainer is not setting this `random_state` in any of the discretizers. Resulting in the perturbed samples to be different every time. \r\n\r\n@marcotcr If you agree with the solution of passing `random_state` to the discretizers, I can quickly raise a PR. \r\n\r\nThanks. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/388", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/388/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/388/events", "html_url": "https://github.com/marcotcr/lime/issues/388", "id": 505551181, "node_id": "MDU6SXNzdWU1MDU1NTExODE=", "number": 388, "title": "UserWarning: Singular matrix in solving dual problem. Using least-squares solution instead.", "user": {"login": "whyisyoung", "id": 38938257, "node_id": "MDQ6VXNlcjM4OTM4MjU3", "avatar_url": "https://avatars1.githubusercontent.com/u/38938257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whyisyoung", "html_url": "https://github.com/whyisyoung", "followers_url": "https://api.github.com/users/whyisyoung/followers", "following_url": "https://api.github.com/users/whyisyoung/following{/other_user}", "gists_url": "https://api.github.com/users/whyisyoung/gists{/gist_id}", "starred_url": "https://api.github.com/users/whyisyoung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whyisyoung/subscriptions", "organizations_url": "https://api.github.com/users/whyisyoung/orgs", "repos_url": "https://api.github.com/users/whyisyoung/repos", "events_url": "https://api.github.com/users/whyisyoung/events{/privacy}", "received_events_url": "https://api.github.com/users/whyisyoung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-10T22:56:49Z", "updated_at": "2019-11-01T23:12:22Z", "closed_at": "2019-11-01T23:12:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using LIME to explain a dataset with about 645 categorical features. I used ~2600 samples for training and ~1300 samples for testing. I used LimeTabularExplainer to explain a single instance.\r\n\r\n**I guess the default `num_samples=5000` is too big for my case, is it right?**\r\nSo I changed it to 32 or 500, then I got either one of the following warning:\r\n\r\n```\r\n1. /python3.6/site-packages/sklearn/linear_model/ridge.py:189: UserWarning: \r\nSingular matrix in solving dual problem. Using least-squares solution instead.\r\n2. /python3.6/site-packages/sklearn/linear_model/ridge.py:187: \r\nLinAlgWarning: Ill-conditioned matrix (rcond=2.15906e-18): result may not be accurate.\r\n  overwrite_a=False)\r\n```\r\n\r\nI'm using OS X 10.14.6, Python 3.6.5, sklearn 0.21.3, LIME 0.1.1.36.\r\n\r\nAny suggestions would be appreciated : )\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/387", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/387/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/387/events", "html_url": "https://github.com/marcotcr/lime/issues/387", "id": 500755138, "node_id": "MDU6SXNzdWU1MDA3NTUxMzg=", "number": 387, "title": "ValueError: too many values to unpack (expected 3)", "user": {"login": "sumanjumaths", "id": 56021674, "node_id": "MDQ6VXNlcjU2MDIxNjc0", "avatar_url": "https://avatars1.githubusercontent.com/u/56021674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumanjumaths", "html_url": "https://github.com/sumanjumaths", "followers_url": "https://api.github.com/users/sumanjumaths/followers", "following_url": "https://api.github.com/users/sumanjumaths/following{/other_user}", "gists_url": "https://api.github.com/users/sumanjumaths/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumanjumaths/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumanjumaths/subscriptions", "organizations_url": "https://api.github.com/users/sumanjumaths/orgs", "repos_url": "https://api.github.com/users/sumanjumaths/repos", "events_url": "https://api.github.com/users/sumanjumaths/events{/privacy}", "received_events_url": "https://api.github.com/users/sumanjumaths/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-01T08:53:36Z", "updated_at": "2019-11-01T23:10:56Z", "closed_at": "2019-11-01T23:10:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "from matplotlib.patches import Rectangle\r\n\r\ndef sentences_chart(lda_model=lda_model, corpus=doc_term_matrix, start = 0, end = 7):\r\n    corp = corpus[start:end]\r\n    mycolors = [color for name, color in mcolors.TABLEAU_COLORS.items()]\r\n\r\n    fig, axes = plt.subplots(end-start, 1, figsize=(20, (end-start)*0.95), dpi=160)       \r\n    axes[0].axis('off')\r\n    for i, ax in enumerate(axes):\r\n        if i > 0:\r\n            corp_cur = corp[i-1] \r\n            topic_percs, wordid_topics, wordid_phivalues = lda_model[corp_cur]\r\n            word_dominanttopic = [(lda_model.id2word[wd], topic[0]) for wd, topic in wordid_topics]\r\n            ax.text(0.01, 0.5, \"Doc \" + str(i-1) + \": \", verticalalignment='center',\r\n                    fontsize=16, color='black', transform=ax.transAxes, fontweight=700)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/385", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/385/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/385/events", "html_url": "https://github.com/marcotcr/lime/issues/385", "id": 495996001, "node_id": "MDU6SXNzdWU0OTU5OTYwMDE=", "number": 385, "title": "binary classification? (and grayscale images)", "user": {"login": "bradshawuw", "id": 54326249, "node_id": "MDQ6VXNlcjU0MzI2MjQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/54326249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradshawuw", "html_url": "https://github.com/bradshawuw", "followers_url": "https://api.github.com/users/bradshawuw/followers", "following_url": "https://api.github.com/users/bradshawuw/following{/other_user}", "gists_url": "https://api.github.com/users/bradshawuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradshawuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradshawuw/subscriptions", "organizations_url": "https://api.github.com/users/bradshawuw/orgs", "repos_url": "https://api.github.com/users/bradshawuw/repos", "events_url": "https://api.github.com/users/bradshawuw/events{/privacy}", "received_events_url": "https://api.github.com/users/bradshawuw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-19T19:53:36Z", "updated_at": "2019-12-20T00:09:13Z", "closed_at": "2019-12-20T00:09:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "What should be the input to explain_instance() for the labels parameter for a binary classification problem? I tried labels=(0,) and it worked, but the results were nonsense.\r\n\r\nAlso, for those working with grayscale images, I found that if your model expects input dimensions of (Nbatch, Nx, Ny, 1), you need to pass explain_instance() images of shape (Nx, Ny, 3) which can be done using gray2rgb. You also need to pass it a custom function (instead of model.predict):\r\n\r\ndef predict(images):\r\n    images = images[:,:,:,1]\r\n    images = images[...,np.newaxis]\r\n    return model.predict(images)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/384", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/384/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/384/events", "html_url": "https://github.com/marcotcr/lime/issues/384", "id": 495850587, "node_id": "MDU6SXNzdWU0OTU4NTA1ODc=", "number": 384, "title": "How to improve our model given diagnosis", "user": {"login": "marcwww", "id": 10141302, "node_id": "MDQ6VXNlcjEwMTQxMzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/10141302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcwww", "html_url": "https://github.com/marcwww", "followers_url": "https://api.github.com/users/marcwww/followers", "following_url": "https://api.github.com/users/marcwww/following{/other_user}", "gists_url": "https://api.github.com/users/marcwww/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcwww/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcwww/subscriptions", "organizations_url": "https://api.github.com/users/marcwww/orgs", "repos_url": "https://api.github.com/users/marcwww/repos", "events_url": "https://api.github.com/users/marcwww/events{/privacy}", "received_events_url": "https://api.github.com/users/marcwww/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-19T14:50:34Z", "updated_at": "2019-09-22T02:03:10Z", "closed_at": "2019-09-20T17:59:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Marcotcr, really appreciate it for your excellent work.\r\n\r\nI am doing some tests with the [text-classification example](https://marcotcr.github.io/lime/tutorials/Lime%20-%20basic%20usage%2C%20two%20class%20case.html). And I am interested in utilizing the diagnosis given by SP-LIME to improve the model.\r\n\r\nThe screenshot is as follows:\r\n![image](https://user-images.githubusercontent.com/10141302/65253175-c6b05680-db2c-11e9-8f86-0100d8d2f6b5.png)\r\n\r\nAs you can see, this improvement procedure is referred to the LIME paper. I don't understand why the performance decreases after removing the overfitted tokens. \r\n\r\nCould you please guide me on this? Thanks a lot.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/383", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/383/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/383/events", "html_url": "https://github.com/marcotcr/lime/issues/383", "id": 492889208, "node_id": "MDU6SXNzdWU0OTI4ODkyMDg=", "number": 383, "title": "Error when explaining text classifier", "user": {"login": "attibalazs", "id": 1638454, "node_id": "MDQ6VXNlcjE2Mzg0NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1638454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/attibalazs", "html_url": "https://github.com/attibalazs", "followers_url": "https://api.github.com/users/attibalazs/followers", "following_url": "https://api.github.com/users/attibalazs/following{/other_user}", "gists_url": "https://api.github.com/users/attibalazs/gists{/gist_id}", "starred_url": "https://api.github.com/users/attibalazs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/attibalazs/subscriptions", "organizations_url": "https://api.github.com/users/attibalazs/orgs", "repos_url": "https://api.github.com/users/attibalazs/repos", "events_url": "https://api.github.com/users/attibalazs/events{/privacy}", "received_events_url": "https://api.github.com/users/attibalazs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-12T15:47:21Z", "updated_at": "2019-09-13T20:11:05Z", "closed_at": "2019-09-13T20:11:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is anyone else getting this error ?\r\n\r\n```\r\nfrom lime.lime_text import LimeTextExplainer\r\nclass_names= rf_clf.classes_.tolist()\r\nexplainer = LimeTextExplainer(class_names)\r\nexplainer\r\n\r\nexp = explainer.explain_instance(str(X_val[idx]), rf_clf.predict_proba, num_features=6, labels=[0, 5])\r\n\r\n```\r\n\r\n/usr/local/lib/python3.6/dist-packages/lime/lime_text.py:116: FutureWarning: split() requires a non-empty pattern match.\r\n  self.as_list = [s for s in splitter.split(self.raw) if s]\r\n\r\n---------------------------------------------------------------------------\r\n\r\n> TypeError                                 Traceback (most recent call last)\r\n> \r\n> <ipython-input-81-2cd00f303565> in <module>()\r\n> ----> 1 exp = explainer.explain_instance(str(X_val[idx]), rf_clf.predict_proba, num_features=6)\r\n> \r\n> 2 frames\r\n> \r\n> /usr/local/lib/python3.6/dist-packages/lime/lime_text.py in kernel(d, kernel_width)\r\n>     353         if kernel is None:\r\n>     354             def kernel(d, kernel_width):\r\n> --> 355                 return np.sqrt(np.exp(-(d ** 2) / kernel_width ** 2))\r\n>     356 \r\n>     357         kernel_fn = partial(kernel, kernel_width=kernel_width)\r\n> \r\n> TypeError: unsupported operand type(s) for ** or pow(): 'list' and 'int'\r\n\r\n\r\nhere is the classifier:\r\n\r\n```\r\nrf_clf = Pipeline([('vect', CountVectorizer(token_pattern=token_pattern,\r\n                                              max_features=None,\r\n                                              max_df=0.5,\r\n                                              ngram_range=(1, 2))),\r\n                     ('tfidf', TfidfTransformer(norm='l2')),\r\n                     ('clf', RandomForestClassifier(50))])\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/381", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/381/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/381/events", "html_url": "https://github.com/marcotcr/lime/issues/381", "id": 491259212, "node_id": "MDU6SXNzdWU0OTEyNTkyMTI=", "number": 381, "title": "TypeError: unhashable type: 'numpy.ndarray'", "user": {"login": "Hemangii", "id": 50984179, "node_id": "MDQ6VXNlcjUwOTg0MTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/50984179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hemangii", "html_url": "https://github.com/Hemangii", "followers_url": "https://api.github.com/users/Hemangii/followers", "following_url": "https://api.github.com/users/Hemangii/following{/other_user}", "gists_url": "https://api.github.com/users/Hemangii/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hemangii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hemangii/subscriptions", "organizations_url": "https://api.github.com/users/Hemangii/orgs", "repos_url": "https://api.github.com/users/Hemangii/repos", "events_url": "https://api.github.com/users/Hemangii/events{/privacy}", "received_events_url": "https://api.github.com/users/Hemangii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-09T18:38:50Z", "updated_at": "2019-09-12T15:34:55Z", "closed_at": "2019-09-12T15:34:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can someone point out the exact problem?\r\n\r\nimport numpy as np\r\nimport pickle\r\nimport cv2\r\nfrom os import listdir\r\nfrom sklearn.preprocessing import LabelBinarizer\r\nfrom keras.models import Sequential\r\nfrom keras.layers.normalization import BatchNormalization\r\nfrom keras.layers.convolutional import Conv2D\r\nfrom keras.layers.convolutional import MaxPooling2D\r\nfrom keras.layers.core import Activation, Flatten, Dropout, Dense\r\nfrom keras import backend as K\r\nfrom keras.preprocessing.image import ImageDataGenerator\r\nfrom keras.optimizers import Adam\r\nfrom keras.preprocessing import image\r\nfrom keras.preprocessing.image import img_to_array\r\nfrom sklearn.preprocessing import MultiLabelBinarizer\r\nfrom sklearn.model_selection import train_test_split\r\nimport matplotlib.pyplot as plt\r\nfrom tensorflow.keras import datasets, layers, models\r\nimport lime\r\nfrom lime import lime_image\r\n\r\n\r\nEPOCHS = 25\r\nINIT_LR = 1e-3\r\nBS = 32\r\ndefault_image_size = tuple((256, 256))\r\nimage_size = 0\r\ndirectory_root = 'C:/Users/owner/Desktop/PlantVillage'\r\nwidth=256\r\nheight=256\r\ndepth=3\r\n\r\ndef convert_image_to_array(image_dir):\r\n    try:\r\n        image = cv2.imread(image_dir)\r\n        if image is not None :\r\n            image = cv2.resize(image, default_image_size)   \r\n            return img_to_array(image)\r\n        else :\r\n            return np.array([])\r\n    except Exception as e:\r\n        print(f\"Error : {e}\")\r\n        return None\r\n    \r\n    \r\n    \r\nimage_list, label_list = [], []\r\ntry:\r\n    print(\"[INFO] Loading images ...\")\r\n    root_dir = listdir(directory_root)\r\n    for directory in root_dir :\r\n        # remove .DS_Store from list\r\n        if directory == \".DS_Store\" :\r\n            root_dir.remove(directory)\r\n            \r\n    \r\n    for plant_folder in root_dir :\r\n        plant_disease_folder_list = listdir(f\"{directory_root}/{plant_folder}\")\r\n        \r\n        for disease_folder in plant_disease_folder_list :\r\n            # remove .DS_Store from list\r\n            if disease_folder == \".DS_Store\" :\r\n                plant_disease_folder_list.remove(disease_folder)\r\n                \r\n                \r\n       \r\n                \r\n            \r\n\r\n        for image in plant_disease_folder_list[:10]:\r\n            image_directory = f\"{directory_root}/{plant_folder}/{image}\"\r\n#             print(image_directory)\r\n            if image_directory.endswith(\".jpg\") or image_directory.endswith(\".JPG\"):\r\n                    \r\n                    image_list.append(convert_image_to_array(image_directory))\r\n                    label_list.append(plant_folder)\r\n    print(\"[INFO] Image loading completed\") \r\n    image_size = len(image_list)\r\n\r\n   \r\n                \r\n        \r\nexcept Exception as e:\r\n    print(f\"Error : {e}\")\r\n    \r\n    \r\n    \r\n    \r\n    \r\nlabel_binarizer = LabelBinarizer()\r\nimage_labels = label_binarizer.fit_transform(label_list)\r\n\r\n# print(image_labels,\"Image Labelssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\")\r\nn_classes = len(label_binarizer.classes_)\r\n# print(n_classes,\"classesssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\")\r\n# print(image_list,\"ImageListttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\")\r\nnp_image_list = np.array(image_list, dtype=np.float16) / 225.0\r\nx_train, x_test, y_train, y_test = train_test_split(np_image_list, image_labels, test_size=0.2, random_state = 42) \r\n\r\nmodel = models.Sequential()\r\nmodel.add(layers.Conv2D(32, (3, 3),padding=\"same\", activation='relu', input_shape=(256, 256, 3)))\r\n\r\n\r\nmodel.add(layers.MaxPooling2D((3, 3)))\r\nmodel.add(layers.Dropout(0.25))\r\nmodel.add(layers.Conv2D(64, (3, 3),padding=\"same\", activation='relu'))\r\n\r\nmodel.add(layers.Conv2D(64, (3, 3),padding=\"same\", activation='relu'))\r\n\r\nmodel.add(layers.MaxPooling2D((2, 2)))\r\nmodel.add(layers.Dropout(0.25))\r\nmodel.add(layers.Conv2D(128, (3, 3),padding=\"same\", activation='relu'))\r\n\r\nmodel.add(layers.Conv2D(128, (3, 3),padding=\"same\", activation='relu'))\r\n\r\nmodel.add(layers.MaxPooling2D((2, 2)))\r\nmodel.add(layers.Dropout(0.25))\r\nmodel.add(layers.Flatten())\r\nmodel.add(layers.Dense(1024))\r\n\r\nmodel.add(layers.Dropout(0.5))\r\nmodel.add(layers.Dense(n_classes))\r\nmodel.add(layers.Activation(\"softmax\"))\r\n\r\n\r\n        \r\n\r\n\r\n\r\nmodel.summary()\r\n\r\nmodel.compile(optimizer='adam',\r\n              loss='binary_crossentropy',\r\n              metrics=['accuracy'])\r\n\r\n\r\nmodel.fit(x_train, y_train, epochs=1)\r\ntest_loss, test_acc = model.evaluate(x_test, y_test)\r\n\r\nx=model.predict(np.array(x_train[4]).reshape(-1,256,256,3))\r\n\r\n\r\n\r\nexplainer = lime_image.LimeImageExplainer()\r\nexplanation = explainer.explain_instance(np.array(x_train[2]), model.predict, num_features=15, num_samples=10)\r\nfrom skimage.segmentation import mark_boundaries\r\ntemp, mask = explanation.get_image_and_mask(np.array(x_train[2]), positive_only=True, num_features=15, hide_rest=True)\r\nplt.imshow(mark_boundaries(temp / 2 + 0.5, mask))\r\n\r\n\r\n\r\n--Error--\r\n\r\n\r\n\r\n**TypeError                                 Traceback (most recent call last)\r\n<ipython-input-11-17845ba6522f> in <module>()\r\n    147 explanation = explainer.explain_instance(np.array(x_train[2]), model.predict, num_features=15, num_samples=10)\r\n    148 from skimage.segmentation import mark_boundaries\r\n--> 149 temp, mask = explanation.get_image_and_mask(np.array(x_train[2]), positive_only=True, num_features=15, hide_rest=True)\r\n    150 plt.imshow(mark_boundaries(temp / 2 + 0.5, mask))\r\n\r\n~\\Anaconda3\\lib\\site-packages\\lime\\lime_image.py in get_image_and_mask(self, label, positive_only, hide_rest, num_features, min_weight)\r\n     49             skimage.segmentation.mark_boundaries\r\n     50         \"\"\"\r\n---> 51         if label not in self.local_exp:\r\n     52             raise KeyError('Label not in explanation')\r\n     53         segments = self.segments\r\n\r\nTypeError: unhashable type: 'numpy.ndarray'**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/380", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/380/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/380/events", "html_url": "https://github.com/marcotcr/lime/issues/380", "id": 490111773, "node_id": "MDU6SXNzdWU0OTAxMTE3NzM=", "number": 380, "title": "Does LIME support  recommender system?", "user": {"login": "joshvemula", "id": 18656833, "node_id": "MDQ6VXNlcjE4NjU2ODMz", "avatar_url": "https://avatars0.githubusercontent.com/u/18656833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshvemula", "html_url": "https://github.com/joshvemula", "followers_url": "https://api.github.com/users/joshvemula/followers", "following_url": "https://api.github.com/users/joshvemula/following{/other_user}", "gists_url": "https://api.github.com/users/joshvemula/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshvemula/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshvemula/subscriptions", "organizations_url": "https://api.github.com/users/joshvemula/orgs", "repos_url": "https://api.github.com/users/joshvemula/repos", "events_url": "https://api.github.com/users/joshvemula/events{/privacy}", "received_events_url": "https://api.github.com/users/joshvemula/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-06T03:38:50Z", "updated_at": "2019-09-06T15:39:06Z", "closed_at": "2019-09-06T15:39:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can LIME be used for recommendation system to give explanations why the particular recommendation is provided? If yes, could you provide an example?. If no, kindly provide the reason for not supporting.\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marcotcr/lime/issues/379", "repository_url": "https://api.github.com/repos/marcotcr/lime", "labels_url": "https://api.github.com/repos/marcotcr/lime/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/marcotcr/lime/issues/379/comments", "events_url": "https://api.github.com/repos/marcotcr/lime/issues/379/events", "html_url": "https://github.com/marcotcr/lime/issues/379", "id": 488639602, "node_id": "MDU6SXNzdWU0ODg2Mzk2MDI=", "number": 379, "title": "Duplicating Jupyter Notebook with LIME explanation freezes Jupyter Lab", "user": {"login": "dillonm", "id": 7747599, "node_id": "MDQ6VXNlcjc3NDc1OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7747599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dillonm", "html_url": "https://github.com/dillonm", "followers_url": "https://api.github.com/users/dillonm/followers", "following_url": "https://api.github.com/users/dillonm/following{/other_user}", "gists_url": "https://api.github.com/users/dillonm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dillonm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dillonm/subscriptions", "organizations_url": "https://api.github.com/users/dillonm/orgs", "repos_url": "https://api.github.com/users/dillonm/repos", "events_url": "https://api.github.com/users/dillonm/events{/privacy}", "received_events_url": "https://api.github.com/users/dillonm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-03T14:27:18Z", "updated_at": "2019-12-20T23:37:49Z", "closed_at": "2019-12-20T23:37:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever I try and copy/paste or duplicate a jupyter notebook that has the output from `show_in_notebook()`, jupyter labs will freeze upon trying to open the new file.  It will remain frozen even after restarting jupyter lab via the terminal, due to the file attempting to be brought up immediately.  Deleting the file and then starting jupyter lab from a different directory fixes the freezing issue.  Clearing the output from the cell containing the `show_in_notebook()` call allows the file to be copied again like normal.\r\n", "performed_via_github_app": null, "score": 1.0}]}