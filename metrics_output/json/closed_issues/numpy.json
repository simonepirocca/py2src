{"total_count": 6920, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/numpy/numpy/issues/17090", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17090/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17090/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17090/events", "html_url": "https://github.com/numpy/numpy/issues/17090", "id": 679555459, "node_id": "MDU6SXNzdWU2Nzk1NTU0NTk=", "number": 17090, "title": "Why is np.append so slow?", "user": {"login": "Rubix982", "id": 41635766, "node_id": "MDQ6VXNlcjQxNjM1NzY2", "avatar_url": "https://avatars2.githubusercontent.com/u/41635766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rubix982", "html_url": "https://github.com/Rubix982", "followers_url": "https://api.github.com/users/Rubix982/followers", "following_url": "https://api.github.com/users/Rubix982/following{/other_user}", "gists_url": "https://api.github.com/users/Rubix982/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rubix982/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rubix982/subscriptions", "organizations_url": "https://api.github.com/users/Rubix982/orgs", "repos_url": "https://api.github.com/users/Rubix982/repos", "events_url": "https://api.github.com/users/Rubix982/events{/privacy}", "received_events_url": "https://api.github.com/users/Rubix982/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-15T12:22:34Z", "updated_at": "2020-08-16T04:53:24Z", "closed_at": "2020-08-16T04:53:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n### Reproducing code example:\r\n\r\n`np.append` is extremely slow, why is that the case? [The docs](https://numpy.org/doc/stable/reference/generated/numpy.append.html) don't have anything on the performance part. \r\n\r\nWith the below given code example, it took me more than 10 minutes to have some result. Does it not work like the regular list.append()?\r\n\r\n```python\r\ndef get_data(filename):\r\n\r\n    labels = np.array()\r\n    images = np.array()\r\n    \r\n    with open(filename) as training_file:\r\n        next(training_file)\r\n        csv_file_contents = csv.reader(training_file)\r\n        for row in csv_file_contents:\r\n            labels = np.append(labels, float(row[0]))\r\n            pixel_values = [float(value) for value in row[1:]]\r\n            pixel_values = np.array(pixel_values)\r\n            pixel_values_split = np.array(np.split(pixel_values, 28))\r\n            images = np.append(images, pixel_values_split)\r\n    return images, labels\r\n```\r\n\r\nAs compared to the list version of this, it took me less than a minute.\r\n\r\n```python\r\ndef get_data(filename):\r\n    labels = list()\r\n    images = list()\r\n    \r\n    with open(filename) as training_file:\r\n        next(training_file)\r\n        csv_file_contents = csv.reader(training_file)\r\n        for row in csv_file_contents:\r\n            labels.append(float(row[0]))\r\n            pixel_values = [float(value) for value in row[1:]]\r\n            pixel_values_split = np.split(np.array(pixel_values), 28)\r\n            images.append(pixel_values_split)\r\n\r\n    return (np.array(images)).astype(float), (np.array(labels)).astype(float)\r\n```\r\n\r\nFor reference, I'm reading in a file with 32,627 rows, each with 785 columns and extracting the labels from the first place ( row[0] ), and the rest of values are the pixels ( row[1:] = 784 values, which is split between 28 arrays ).\r\n\r\nThe files can be found here. [One](https://ycozcamcoqgpaezjoywdtv.coursera-apps.org/edit/tmp2/sign_mnist_test.csv) is test file, the [second](https://ycozcamcoqgpaezjoywdtv.coursera-apps.org/edit/tmp2/sign_mnist_train.csv) is the training file. The total rows is the sum of rows from both the files. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17080", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17080/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17080/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17080/events", "html_url": "https://github.com/numpy/numpy/issues/17080", "id": 679072485, "node_id": "MDU6SXNzdWU2NzkwNzI0ODU=", "number": 17080, "title": "np.resize crashes when the product of the array dimensions overflows an int32", "user": {"login": "adamreeve", "id": 626438, "node_id": "MDQ6VXNlcjYyNjQzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/626438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamreeve", "html_url": "https://github.com/adamreeve", "followers_url": "https://api.github.com/users/adamreeve/followers", "following_url": "https://api.github.com/users/adamreeve/following{/other_user}", "gists_url": "https://api.github.com/users/adamreeve/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamreeve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamreeve/subscriptions", "organizations_url": "https://api.github.com/users/adamreeve/orgs", "repos_url": "https://api.github.com/users/adamreeve/repos", "events_url": "https://api.github.com/users/adamreeve/events{/privacy}", "received_events_url": "https://api.github.com/users/adamreeve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-14T10:45:01Z", "updated_at": "2020-08-14T12:37:49Z", "closed_at": "2020-08-14T12:37:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This looks to be related to #12664 which was closed because numpy.core.umath.multiply is expected to overflow, but I would expect that resize should work without the data shape array having to be int64.\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\n\r\narray_length = 2 ** 31 + 4\r\ndata_shape = (array_length // 4, 2, 2)\r\nassert np.product(data_shape, dtype=np.dtype('int64')) == array_length\r\ndata = np.zeros(array_length, dtype=np.dtype('int8'))\r\n\r\nresized = np.resize(data, data_shape)  # exception thrown here\r\n```\r\n\r\nIf I change the data shape so that it is an array with dtype of int64 (eg. add `data_shape = np.array(data_shape, dtype=np.int64)` before the call to resize) then this does work as expected.\r\n\r\n### Error message:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \".\\repro.py\", line 12, in <module>\r\n    resized = np.resize(data, data_shape)\r\n  File \"<__array_function__ internals>\", line 5, in resize\r\n  File \"C:\\Python38\\lib\\site-packages\\numpy\\core\\fromnumeric.py\", line 1421, in resize\r\n    return reshape(a, new_shape)\r\n  File \"<__array_function__ internals>\", line 5, in reshape\r\n  File \"C:\\Python38\\lib\\site-packages\\numpy\\core\\fromnumeric.py\", line 299, in reshape\r\n    return _wrapfunc(a, 'reshape', newshape, order=order)\r\n  File \"C:\\Python38\\lib\\site-packages\\numpy\\core\\fromnumeric.py\", line 58, in _wrapfunc\r\n    return bound(*args, **kwds)\r\nValueError: cannot reshape array of size 8 into shape (536870913,2,2)\r\n```\r\n\r\n### Numpy/Python version information:\r\n\r\n1.19.1 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]\r\n\r\nI can reproduce this on Windows but not on Linux.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17079", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17079/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17079/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17079/events", "html_url": "https://github.com/numpy/numpy/issues/17079", "id": 678953503, "node_id": "MDU6SXNzdWU2Nzg5NTM1MDM=", "number": 17079, "title": "ValueError: Seed must be between 0 and 2**32 - 1", "user": {"login": "anasalzuvix", "id": 40093902, "node_id": "MDQ6VXNlcjQwMDkzOTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/40093902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anasalzuvix", "html_url": "https://github.com/anasalzuvix", "followers_url": "https://api.github.com/users/anasalzuvix/followers", "following_url": "https://api.github.com/users/anasalzuvix/following{/other_user}", "gists_url": "https://api.github.com/users/anasalzuvix/gists{/gist_id}", "starred_url": "https://api.github.com/users/anasalzuvix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anasalzuvix/subscriptions", "organizations_url": "https://api.github.com/users/anasalzuvix/orgs", "repos_url": "https://api.github.com/users/anasalzuvix/repos", "events_url": "https://api.github.com/users/anasalzuvix/events{/privacy}", "received_events_url": "https://api.github.com/users/anasalzuvix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-14T07:12:50Z", "updated_at": "2020-08-14T08:25:39Z", "closed_at": "2020-08-14T08:25:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i set \r\nnumpy.random.seed(4294967296) in my program and try to Generate an Array then i get this error \r\n```\r\n  File \"mtrand.pyx\", line 244, in numpy.random.mtrand.RandomState.seed\r\n  File \"_mt19937.pyx\", line 166, in numpy.random._mt19937.MT19937._legacy_seeding\r\n  File \"_mt19937.pyx\", line 180, in numpy.random._mt19937.MT19937._legacy_seeding\r\nValueError: Seed must be between 0 and 2**32 - 1\r\n```\r\nis it possible to Generate a numpy array with seed(4294967296) or more?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17077", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17077/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17077/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17077/events", "html_url": "https://github.com/numpy/numpy/issues/17077", "id": 678534311, "node_id": "MDU6SXNzdWU2Nzg1MzQzMTE=", "number": 17077, "title": "user/index and user/tutorials_index toctrees overlap", "user": {"login": "eric-wieser", "id": 425260, "node_id": "MDQ6VXNlcjQyNTI2MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/425260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric-wieser", "html_url": "https://github.com/eric-wieser", "followers_url": "https://api.github.com/users/eric-wieser/followers", "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}", "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions", "organizations_url": "https://api.github.com/users/eric-wieser/orgs", "repos_url": "https://api.github.com/users/eric-wieser/repos", "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}", "received_events_url": "https://api.github.com/users/eric-wieser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359214, "node_id": "MDU6TGFiZWw2MzU5MjE0", "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug", "name": "00 - Bug", "color": "fef2c0", "default": false, "description": null}, {"id": 16917437, "node_id": "MDU6TGFiZWwxNjkxNzQzNw==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20Documentation", "name": "component: Documentation", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-13T15:36:21Z", "updated_at": "2020-08-14T05:47:21Z", "closed_at": "2020-08-14T05:47:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `user/index` toctree:\r\n\r\nhttps://github.com/numpy/numpy/blob/0311c93c8c43cd913303c529673d69575901475e/doc/source/user/index.rst#L14-L26\r\n\r\nInlcudes `user/tutorials_index`, which includes many of the same pages\r\n\r\nhttps://github.com/numpy/numpy/blob/0311c93c8c43cd913303c529673d69575901475e/doc/source/user/tutorials_index.rst#L11-L20\r\n\r\nPages should have only one toctree parent, not two. We need to decide just one place to put:\r\n\r\n* basics \r\n*    misc \r\n*    numpy-for-matlab-users \r\n*    building \r\n*    c-info ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17076", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17076/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17076/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17076/events", "html_url": "https://github.com/numpy/numpy/issues/17076", "id": 678361124, "node_id": "MDU6SXNzdWU2NzgzNjExMjQ=", "number": 17076, "title": "BUG: Typo in `numpy.polydiv`", "user": {"login": "Dahlia-Chehata", "id": 25224178, "node_id": "MDQ6VXNlcjI1MjI0MTc4", "avatar_url": "https://avatars1.githubusercontent.com/u/25224178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dahlia-Chehata", "html_url": "https://github.com/Dahlia-Chehata", "followers_url": "https://api.github.com/users/Dahlia-Chehata/followers", "following_url": "https://api.github.com/users/Dahlia-Chehata/following{/other_user}", "gists_url": "https://api.github.com/users/Dahlia-Chehata/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dahlia-Chehata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dahlia-Chehata/subscriptions", "organizations_url": "https://api.github.com/users/Dahlia-Chehata/orgs", "repos_url": "https://api.github.com/users/Dahlia-Chehata/repos", "events_url": "https://api.github.com/users/Dahlia-Chehata/events{/privacy}", "received_events_url": "https://api.github.com/users/Dahlia-Chehata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-13T11:23:08Z", "updated_at": "2020-08-18T04:29:03Z", "closed_at": "2020-08-18T04:29:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/numpy/numpy/blob/92ebe1e9a6aeb47a881a1226b08218175776f9ea/numpy/lib/polynomial.py#L959\r\n\r\nThe typo in this line causes wrong return types in cases when `v` is `poly1d`\r\n\r\nfix to be: `truepoly = (isinstance(u, poly1d) or isinstance(v, poly1d))`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17072", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17072/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17072/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17072/events", "html_url": "https://github.com/numpy/numpy/issues/17072", "id": 677548205, "node_id": "MDU6SXNzdWU2Nzc1NDgyMDU=", "number": 17072, "title": "Feature request: Give dimension(s) (optionally) a name", "user": {"login": "sebhahn", "id": 5929935, "node_id": "MDQ6VXNlcjU5Mjk5MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5929935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhahn", "html_url": "https://github.com/sebhahn", "followers_url": "https://api.github.com/users/sebhahn/followers", "following_url": "https://api.github.com/users/sebhahn/following{/other_user}", "gists_url": "https://api.github.com/users/sebhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhahn/subscriptions", "organizations_url": "https://api.github.com/users/sebhahn/orgs", "repos_url": "https://api.github.com/users/sebhahn/repos", "events_url": "https://api.github.com/users/sebhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhahn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-08-12T09:37:43Z", "updated_at": "2020-08-12T13:51:50Z", "closed_at": "2020-08-12T13:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to add a feature to optionally give dimension in numpy arrays a name (or create a array subclass)?\r\n\r\nA use case is [creating NetCDF variables](https://unidata.github.io/netcdf4-python/netCDF4/index.html#netCDF4.Group.createVariable) which requires a dimension name (and dtype which is known). I'm using the undocumented `.metadata` field in `np.dtype` for this kind of information at the moment, which is kind of awkward. BTW xarray could benefit also from this feature as well, because creating an xarray data structure (e.g. [a DataArray](http://xarray.pydata.org/en/stable/data-structures.html#creating-a-dataarray)) also requires to define/know dimension name(s).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17071", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17071/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17071/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17071/events", "html_url": "https://github.com/numpy/numpy/issues/17071", "id": 677520500, "node_id": "MDU6SXNzdWU2Nzc1MjA1MDA=", "number": 17071, "title": "difference between vectorize and frompyfunc", "user": {"login": "FrankHui", "id": 14036578, "node_id": "MDQ6VXNlcjE0MDM2NTc4", "avatar_url": "https://avatars1.githubusercontent.com/u/14036578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrankHui", "html_url": "https://github.com/FrankHui", "followers_url": "https://api.github.com/users/FrankHui/followers", "following_url": "https://api.github.com/users/FrankHui/following{/other_user}", "gists_url": "https://api.github.com/users/FrankHui/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrankHui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrankHui/subscriptions", "organizations_url": "https://api.github.com/users/FrankHui/orgs", "repos_url": "https://api.github.com/users/FrankHui/repos", "events_url": "https://api.github.com/users/FrankHui/events{/privacy}", "received_events_url": "https://api.github.com/users/FrankHui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-12T08:54:56Z", "updated_at": "2020-08-12T11:26:36Z", "closed_at": "2020-08-12T11:26:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\n\r\nclass T:\r\n    def __init__(self, val):\r\n        self.val = val\r\n\r\n    def add(self):\r\n        self.val += 1\r\n\r\n\r\ndef add(instance):\r\n    instance.add()\r\n    return instance\r\n\r\n\r\ndf = pd.DataFrame(data=[T(1), T(2)], columns=['t'])\r\ndf['t'] = np.vectorize(add)(df['t'])\r\nprint(df['t'].apply(lambda x: x.val).values)  # [3, 3], T(1) adds twice\r\n\r\ndf = pd.DataFrame(data=[T(2), T(1)], columns=['t'])\r\ndf['t'] = np.vectorize(add)(df['t'])\r\nprint(df['t'].apply(lambda x: x.val).values)  # [4, 2], T(2) adds twice\r\n\r\ndf = pd.DataFrame(data=[T(1), T(2)], columns=['t'])\r\ndf['t'] = np.frompyfunc(add, 1, 1)(df['t'])\r\nprint(df['t'].apply(lambda x: x.val).values)  # [2, 3] which is expected\r\n\r\n```\r\n\r\nnp.vectorize(add) makes first instance of the series adds twice, while np.frompyfunc(add, 1, 1) works.\r\nIt's really interesting...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17060", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17060/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17060/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17060/events", "html_url": "https://github.com/numpy/numpy/issues/17060", "id": 676988631, "node_id": "MDU6SXNzdWU2NzY5ODg2MzE=", "number": 17060, "title": "BUG: Modified bessel function i0 broken for complex inputs", "user": {"login": "peterbell10", "id": 13238737, "node_id": "MDQ6VXNlcjEzMjM4NzM3", "avatar_url": "https://avatars3.githubusercontent.com/u/13238737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterbell10", "html_url": "https://github.com/peterbell10", "followers_url": "https://api.github.com/users/peterbell10/followers", "following_url": "https://api.github.com/users/peterbell10/following{/other_user}", "gists_url": "https://api.github.com/users/peterbell10/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterbell10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterbell10/subscriptions", "organizations_url": "https://api.github.com/users/peterbell10/orgs", "repos_url": "https://api.github.com/users/peterbell10/repos", "events_url": "https://api.github.com/users/peterbell10/events{/privacy}", "received_events_url": "https://api.github.com/users/peterbell10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T15:47:47Z", "updated_at": "2020-08-12T06:36:09Z", "closed_at": "2020-08-12T06:36:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\nFrom the [docstring](https://numpy.org/doc/stable/reference/generated/numpy.i0.html):\r\n\r\n```python\r\n>>> np.i0([0., 1. + 2j])\r\n```\r\n\r\nThe expected result should be complex:\r\n```python\r\narray([ 1.00000000+0.j        ,  0.18785373+0.64616944j])  # may vary\r\n```\r\n\r\nWhereas the actual result is real:\r\n```python\r\narray([1.       , 2.6993365])\r\n```\r\n\r\nFrom the history, this was broken by gh-11233 which changed `x[x < 0] = -x[x < 0]` into `x = np.abs(x)`.\r\n\r\n### Numpy/Python version information:\r\n\r\n```\r\n1.19.1 3.7.7 (default, May  7 2020, 21:25:33) \r\n[GCC 7.3.0]\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17057", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17057/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17057/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17057/events", "html_url": "https://github.com/numpy/numpy/issues/17057", "id": 676903905, "node_id": "MDU6SXNzdWU2NzY5MDM5MDU=", "number": 17057, "title": "Array assignment memory leak", "user": {"login": "akkes", "id": 1679348, "node_id": "MDQ6VXNlcjE2NzkzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1679348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akkes", "html_url": "https://github.com/akkes", "followers_url": "https://api.github.com/users/akkes/followers", "following_url": "https://api.github.com/users/akkes/following{/other_user}", "gists_url": "https://api.github.com/users/akkes/gists{/gist_id}", "starred_url": "https://api.github.com/users/akkes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akkes/subscriptions", "organizations_url": "https://api.github.com/users/akkes/orgs", "repos_url": "https://api.github.com/users/akkes/repos", "events_url": "https://api.github.com/users/akkes/events{/privacy}", "received_events_url": "https://api.github.com/users/akkes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-11T14:02:24Z", "updated_at": "2020-08-11T14:55:55Z", "closed_at": "2020-08-11T14:25:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "When assigning enough elements of a numpy array a memory leak of 270-290kB happen. The leak happens in regular bursts. It happens too when assigning an array `storage[n] = np.ones(item_size)` with a 2D storage `storage = np.zeros(item_nb, item_size)`\r\n\r\n![ram_usage](https://user-images.githubusercontent.com/1679348/89904441-3b7afc00-dbe9-11ea-8b1f-3135e59bfaac.png)\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\n\"\"\"Minimal leak example\"\"\"\r\nimport numpy as np\r\nimport psutil\r\nimport os\r\n\r\n# may need to add a zero to reproduce in \r\nitem_nb = 30000\r\n# allocate space for items\r\nstorage = np.zeros(item_nb)\r\nprocess = psutil.Process(os.getpid())\r\nold_mem_usage = process.memory_info().rss\r\nfor n in range(item_nb):\r\n    storage[n] = 1.0\r\n\r\nmem_usage = process.memory_info().rss\r\nprint(\"{}B leaked\".format(mem_usage - old_mem_usage))\r\n```\r\n\r\n### Error message:\r\n\r\nNone\r\n\r\n### Numpy/Python version information:\r\n\r\nConfirmed on versions:\r\n1.19.1 3.8.5 (default, Aug 10 2020, 14:21:14) \r\n[GCC 9.3.0]\r\n1.18.1 3.7.6 (default, Jan  8 2020, 19:59:22) \r\n[GCC 7.3.0]\r\n1.19.1 3.7.3 (default, Mar 27 2019, 22:11:17) \r\n[GCC 7.3.0]\r\n\r\nIf you have more questions i would be happy to answer them :-)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17045", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17045/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17045/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17045/events", "html_url": "https://github.com/numpy/numpy/issues/17045", "id": 676244494, "node_id": "MDU6SXNzdWU2NzYyNDQ0OTQ=", "number": 17045, "title": "Segfault when pickling array >2G size", "user": {"login": "stphnlyd", "id": 20906652, "node_id": "MDQ6VXNlcjIwOTA2NjUy", "avatar_url": "https://avatars3.githubusercontent.com/u/20906652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stphnlyd", "html_url": "https://github.com/stphnlyd", "followers_url": "https://api.github.com/users/stphnlyd/followers", "following_url": "https://api.github.com/users/stphnlyd/following{/other_user}", "gists_url": "https://api.github.com/users/stphnlyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/stphnlyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stphnlyd/subscriptions", "organizations_url": "https://api.github.com/users/stphnlyd/orgs", "repos_url": "https://api.github.com/users/stphnlyd/repos", "events_url": "https://api.github.com/users/stphnlyd/events{/privacy}", "received_events_url": "https://api.github.com/users/stphnlyd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359214, "node_id": "MDU6TGFiZWw2MzU5MjE0", "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug", "name": "00 - Bug", "color": "fef2c0", "default": false, "description": null}, {"id": 546378754, "node_id": "MDU6TGFiZWw1NDYzNzg3NTQ=", "url": "https://api.github.com/repos/numpy/numpy/labels/09%20-%20Backport-Candidate", "name": "09 - Backport-Candidate", "color": "fef2c0", "default": false, "description": ""}, {"id": 16917029, "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core", "name": "component: numpy.core", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-10T15:58:58Z", "updated_at": "2020-08-11T16:03:25Z", "closed_at": "2020-08-11T16:03:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See below for reproducing code. I studied it a little bit and found it caused by this line You see it converts iter->index to int which is 4 bytes\r\nhttps://github.com/numpy/numpy/blob/00a45b4dca164105b50ba29e1735e96b573b639c/numpy/core/src/multiarray/methods.c#L1619 \r\n\r\nbtw seems this (int) conversion is used at multiple places like https://github.com/numpy/numpy/blob/00a45b4dca164105b50ba29e1735e96b573b639c/numpy/core/src/multiarray/methods.c#L1639\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\nTo try this you probably need a machine of large memory. Mine is 64GB and I believe 32GB is not enough.\r\n\r\n```python\r\nimport numpy as np\r\nx = np.empty(2**31+1, dtype='object')\r\nx.__reduce__()\r\n```\r\n\r\n### Numpy/Python version information:\r\n\r\n1.19.1 3.8.2 (default, Jul 16 2020, 14:00:26) \r\n[GCC 9.3.0]\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17043", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17043/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17043/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17043/events", "html_url": "https://github.com/numpy/numpy/issues/17043", "id": 676083811, "node_id": "MDU6SXNzdWU2NzYwODM4MTE=", "number": 17043, "title": "Rotation Matrix ", "user": {"login": "Yukti-09", "id": 44090430, "node_id": "MDQ6VXNlcjQ0MDkwNDMw", "avatar_url": "https://avatars3.githubusercontent.com/u/44090430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yukti-09", "html_url": "https://github.com/Yukti-09", "followers_url": "https://api.github.com/users/Yukti-09/followers", "following_url": "https://api.github.com/users/Yukti-09/following{/other_user}", "gists_url": "https://api.github.com/users/Yukti-09/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yukti-09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yukti-09/subscriptions", "organizations_url": "https://api.github.com/users/Yukti-09/orgs", "repos_url": "https://api.github.com/users/Yukti-09/repos", "events_url": "https://api.github.com/users/Yukti-09/events{/privacy}", "received_events_url": "https://api.github.com/users/Yukti-09/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359239, "node_id": "MDU6TGFiZWw2MzU5MjM5", "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement", "name": "01 - Enhancement", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-10T12:03:54Z", "updated_at": "2020-08-10T15:31:54Z", "closed_at": "2020-08-10T13:11:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code creates a rotation matrix in 2D taking the angle as 30 degrees.\r\n```\r\nimport numpy as np\r\n\r\ntheta = np.radians(30)\r\n\r\nr = np.array(( (np.cos(theta), -np.sin(theta)),\r\n               (np.sin(theta),  np.cos(theta)) ))\r\n\r\nprint('rotation matrix:')\r\nprint(r)\r\n```\r\nOutput:\r\n```\r\nrotation matrix:\r\n[[ 0.8660254 -0.5      ]\r\n [ 0.5        0.8660254]]\r\n```\r\nWe can add a single function that takes the angle and dimension as the input and returns a rotation matrix. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17038", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17038/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17038/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17038/events", "html_url": "https://github.com/numpy/numpy/issues/17038", "id": 675847345, "node_id": "MDU6SXNzdWU2NzU4NDczNDU=", "number": 17038, "title": "np.random.randint fails with large integers with default dtype on Windows", "user": {"login": "asishm", "id": 1978117, "node_id": "MDQ6VXNlcjE5NzgxMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1978117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asishm", "html_url": "https://github.com/asishm", "followers_url": "https://api.github.com/users/asishm/followers", "following_url": "https://api.github.com/users/asishm/following{/other_user}", "gists_url": "https://api.github.com/users/asishm/gists{/gist_id}", "starred_url": "https://api.github.com/users/asishm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asishm/subscriptions", "organizations_url": "https://api.github.com/users/asishm/orgs", "repos_url": "https://api.github.com/users/asishm/repos", "events_url": "https://api.github.com/users/asishm/events{/privacy}", "received_events_url": "https://api.github.com/users/asishm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}, {"id": 16917445, "node_id": "MDU6TGFiZWwxNjkxNzQ0NQ==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.random", "name": "component: numpy.random", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-10T03:57:15Z", "updated_at": "2020-08-11T14:59:35Z", "closed_at": "2020-08-11T14:59:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "np.random.randint results in ValueError when specifying arguments that overflow int32 on Windows. I've seen some related discussions around the platform dependent default int behavior (#9464, #12332, #16535). If this classifies as a duplicate of the issues I've referenced, feel free to close this. (similar issue happens when creating an arrays of small integers which defaults to a dtype of int32, but you run into np.prod returning 0 if it overflows, but that's a separate discussion.)\r\n\r\nRight now code written on Linux won't work on Windows platforms (assuming both are 64 bit).\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\nnp.random.randint(34353543525, 5465445754, size=5)\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-38-47b726322196> in <module>\r\n----> 1 np.random.randint(34353543525, 5465445754, size=5)\r\n\r\nmtrand.pyx in numpy.random.mtrand.RandomState.randint()\r\n\r\n_bounded_integers.pyx in numpy.random._bounded_integers._rand_int32()\r\n\r\nValueError: high is out of bounds for int32\r\n```\r\n\r\n### Numpy/Python version information:\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n1.18.1 3.7.7 (default, May  6 2020, 11:45:54) [MSC v.1916 64 bit (AMD64)]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17035", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17035/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17035/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17035/events", "html_url": "https://github.com/numpy/numpy/issues/17035", "id": 675717797, "node_id": "MDU6SXNzdWU2NzU3MTc3OTc=", "number": 17035, "title": "numpy.full_like returning array of integers even with floating-point fill values", "user": {"login": "liuyonghao156", "id": 20895768, "node_id": "MDQ6VXNlcjIwODk1NzY4", "avatar_url": "https://avatars2.githubusercontent.com/u/20895768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liuyonghao156", "html_url": "https://github.com/liuyonghao156", "followers_url": "https://api.github.com/users/liuyonghao156/followers", "following_url": "https://api.github.com/users/liuyonghao156/following{/other_user}", "gists_url": "https://api.github.com/users/liuyonghao156/gists{/gist_id}", "starred_url": "https://api.github.com/users/liuyonghao156/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liuyonghao156/subscriptions", "organizations_url": "https://api.github.com/users/liuyonghao156/orgs", "repos_url": "https://api.github.com/users/liuyonghao156/repos", "events_url": "https://api.github.com/users/liuyonghao156/events{/privacy}", "received_events_url": "https://api.github.com/users/liuyonghao156/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81818822, "node_id": "MDU6TGFiZWw4MTgxODgyMg==", "url": "https://api.github.com/repos/numpy/numpy/labels/57%20-%20Close?", "name": "57 - Close?", "color": "207de5", "default": false, "description": "Issues which may be closable unless discussion continued"}, {"id": 16917029, "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core", "name": "component: numpy.core", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-09T15:18:38Z", "updated_at": "2020-08-11T03:07:00Z", "closed_at": "2020-08-11T03:06:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport numpy\r\nnumpy.full_like([0,0,0], 0.1)\r\n```\r\n\r\nreturns `array([0,0,0])`, whereas,\r\n\r\n```python\r\nnumpy.full(3,0.1)\r\n```\r\n\r\nreturns `array([0.1,0.1,0.1])`\r\n\r\nAlthough this behaviour is mentioned in the official document, I don't think this should be as it is now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17034", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17034/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17034/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17034/events", "html_url": "https://github.com/numpy/numpy/issues/17034", "id": 675701704, "node_id": "MDU6SXNzdWU2NzU3MDE3MDQ=", "number": 17034, "title": "Sigmoid Function in Numpy", "user": {"login": "Srikeshram", "id": 63420229, "node_id": "MDQ6VXNlcjYzNDIwMjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/63420229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Srikeshram", "html_url": "https://github.com/Srikeshram", "followers_url": "https://api.github.com/users/Srikeshram/followers", "following_url": "https://api.github.com/users/Srikeshram/following{/other_user}", "gists_url": "https://api.github.com/users/Srikeshram/gists{/gist_id}", "starred_url": "https://api.github.com/users/Srikeshram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Srikeshram/subscriptions", "organizations_url": "https://api.github.com/users/Srikeshram/orgs", "repos_url": "https://api.github.com/users/Srikeshram/repos", "events_url": "https://api.github.com/users/Srikeshram/events{/privacy}", "received_events_url": "https://api.github.com/users/Srikeshram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-09T13:39:26Z", "updated_at": "2020-08-09T14:13:54Z", "closed_at": "2020-08-09T14:13:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Sigmoid** activation plays a vital role in the Machine Learning....But the **numpy** library does not have the in-built function to calculate the sigmoid function of a number.So I want to contribute the code for the sigmoid to the numpy library.Please Assign this issue to me.... ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17021", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17021/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17021/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17021/events", "html_url": "https://github.com/numpy/numpy/issues/17021", "id": 674208766, "node_id": "MDU6SXNzdWU2NzQyMDg3NjY=", "number": 17021, "title": "Feature request: Make numpy.reciprocal equivalent to 1/a", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122746135, "node_id": "MDU6TGFiZWwxMjI3NDYxMzU=", "url": "https://api.github.com/repos/numpy/numpy/labels/50%20-%20Duplicate", "name": "50 - Duplicate", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-06T10:32:08Z", "updated_at": "2020-08-06T12:01:11Z", "closed_at": "2020-08-06T12:01:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to suggest updating `numpy.reciprocal` to be consistent with `numpy.divide` and Python 3's division operator by having it promote integer inputs to double. Currently, the [docs for reciprocal](https://numpy.org/doc/stable/reference/generated/numpy.reciprocal.html?highlight=reciprocal#numpy.reciprocal) say it \"is not designed to work with integers... because of the way Python handles integer division.\" This statement refers to Python 2, not 3, however. \r\n\r\n### Today:\r\n```\r\nimport numpy as np\r\na = np.array((1, 2, 3))\r\nnp.reciprocal(a)\r\n: array([1, 0, 0])\r\n```\r\n\r\n### Proposed result:\r\n\r\n```\r\narray([1., 0.5, 0.33333333])\r\n```\r\n\r\nThis would make `numpy.reciprocal(a)` equivalent to `(1 / a)`.\r\n\r\ncc @rgommers \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17019", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17019/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17019/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17019/events", "html_url": "https://github.com/numpy/numpy/issues/17019", "id": 674053034, "node_id": "MDU6SXNzdWU2NzQwNTMwMzQ=", "number": 17019, "title": "BUG: 32-bit builds are emitting a warning that is not causing the builds to fail", "user": {"login": "mattip", "id": 823911, "node_id": "MDQ6VXNlcjgyMzkxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/823911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattip", "html_url": "https://github.com/mattip", "followers_url": "https://api.github.com/users/mattip/followers", "following_url": "https://api.github.com/users/mattip/following{/other_user}", "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattip/subscriptions", "organizations_url": "https://api.github.com/users/mattip/orgs", "repos_url": "https://api.github.com/users/mattip/repos", "events_url": "https://api.github.com/users/mattip/events{/privacy}", "received_events_url": "https://api.github.com/users/mattip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359214, "node_id": "MDU6TGFiZWw2MzU5MjE0", "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug", "name": "00 - Bug", "color": "fef2c0", "default": false, "description": null}, {"id": 16917445, "node_id": "MDU6TGFiZWwxNjkxNzQ0NQ==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.random", "name": "component: numpy.random", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-06T06:27:25Z", "updated_at": "2020-08-09T19:08:42Z", "closed_at": "2020-08-09T19:08:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We build 32-bit linux inside a manylinux2010 docker. Randomly checking the build log, I see a [warning](https://dev.azure.com/numpy/numpy/_build/results?buildId=11884&view=logs&j=c4fbb33d-b115-53c9-54fa-705790f154ff&t=1437d177-db37-57b8-1516-a6c596dd8a61&l=4241) from `SeedSequence_get_assembled_entropy`\r\n```\r\nwarning: comparison of integer expressions of different signedness: \\\r\n    \u2018Py_ssize_t\u2019 {aka \u2018int\u2019} and \u2018uint32_t\u2019 {aka \u2018unsigned int\u2019} [-Wsign-compare]\r\n     __pyx_t_6 = ((__pyx_t_5 < __pyx_v_self->pool_size) != 0);\r\n```\r\n\r\nTwo problems: why did the build pass, and why are we using two different types", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17018", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17018/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17018/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17018/events", "html_url": "https://github.com/numpy/numpy/issues/17018", "id": 673967006, "node_id": "MDU6SXNzdWU2NzM5NjcwMDY=", "number": 17018, "title": "TypeError: list indices must be integers or slices, not tuple", "user": {"login": "atharvgrg", "id": 69238547, "node_id": "MDQ6VXNlcjY5MjM4NTQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/69238547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atharvgrg", "html_url": "https://github.com/atharvgrg", "followers_url": "https://api.github.com/users/atharvgrg/followers", "following_url": "https://api.github.com/users/atharvgrg/following{/other_user}", "gists_url": "https://api.github.com/users/atharvgrg/gists{/gist_id}", "starred_url": "https://api.github.com/users/atharvgrg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atharvgrg/subscriptions", "organizations_url": "https://api.github.com/users/atharvgrg/orgs", "repos_url": "https://api.github.com/users/atharvgrg/repos", "events_url": "https://api.github.com/users/atharvgrg/events{/privacy}", "received_events_url": "https://api.github.com/users/atharvgrg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}, {"id": 128165425, "node_id": "MDU6TGFiZWwxMjgxNjU0MjU=", "url": "https://api.github.com/repos/numpy/numpy/labels/53%20-%20Invalid", "name": "53 - Invalid", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-06T02:29:12Z", "updated_at": "2020-08-06T09:47:06Z", "closed_at": "2020-08-06T07:29:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport math\r\nimport random\r\nimport pygame\r\nimport tkinter as tk\r\nfrom tkinter import messagebox\r\n\r\n\r\nclass cube(object):\r\n    rows = 20\r\n    w = 500\r\n\r\n    def __init__(self, start, dirnx=1, dirny=0, color=(255, 0, 0)):\r\n        self.pos = start\r\n        self.dirnx = 1\r\n        self.dirny = 0\r\n        self.color = color\r\n    def move(self, dirnx, dirny):\r\n        self.dirnx = dirnx\r\n        self.dirny = dirny\r\n        self.pos = (self.pos[0] + self.dirnx, self.pos[1] + self.dirny)\r\n\r\n    def draw(self, surface, eyes=False):\r\n        dis = self.w // self.rows\r\n        i = self.pos[0]\r\n        j = self.pos[1]\r\n\r\n        pygame.draw.rect(surface, self.color, (i*dis+1, j*dis+1, dis-2, dis-2))\r\n\r\n\r\nclass snake(object):\r\n    body = []\r\n    turns = []\r\n\r\n    def __init__(self, color, pos):\r\n        self.color = color\r\n        self.head = cube(pos)\r\n        self.body.append(self.head)\r\n        self.dirnx = 0\r\n        self.dirny = 1\r\n\r\n    def move(self):\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n\r\n            keys = pygame.key.get_pressed()\r\n\r\n            for key in keys:\r\n                if keys[pygame.K_LEFT]:\r\n                    self.dirnx = -1\r\n                    self.dirny = 0\r\n                    self.turns[self.head.pos[:]] = [self.dirnx, self.dirny]\r\n\r\n                elif keys[pygame.K_RIGHT]:\r\n                    self.dirnx = 1\r\n                    self.dirny = 0\r\n                    self.turns[self.head.pos[:]] = [self.dirnx, self.dirny]\r\n\r\n                elif keys[pygame.K_UP]:\r\n                    self.dirnx = 0\r\n                    self.dirny = -1\r\n                    self.turns[self.head.pos[:]] = [self.dirnx, self.dirny]\r\n\r\n                elif keys[pygame.K_DOWN]:\r\n                    self.dirnx = 0\r\n                    self.dirny = 1\r\n                    self.turns[self.head.pos[:]] = [self.dirnx, self.dirny]\r\n\r\n        for i, c in enumerate(self.body):\r\n            p = c.pos[:]\r\n            if p in self.turns:\r\n                turn = self.turns[p]\r\n                c.move(turn[0],turn[1])\r\n                if i == len(self.body)-1:\r\n                    self.turns.pop(p)\r\n            else:\r\n                if c.dirnx == -1 and c.pos[0] <=0: c.pos = (c.rows-1, c.pos[1])\r\n                elif c.dirnx == 1 and c.pos[0] >= c.rows-1: c.pos = (0, c.pos[1])\r\n                elif c.dirny == 1 and c.pos[1] >= c.rows-1: c.pos = (c.pos[0], c.rows-1)\r\n                elif c.dirny == -1 and c.pos[1] <=0: c.pos = (c.pos[0], c.rows-1)\r\n                else: c.move(c.dirnx, c.dirny)\r\n    def reset(self, pos):\r\n        pass\r\n\r\n    def addCube(self):\r\n        pass\r\n\r\n    def draw(self, surface):\r\n        for i, c in enumerate(self.body):\r\n            if i == 0:\r\n                c.draw(surface, True)\r\n            else:\r\n                c.draw(surface)\r\n\r\ndef drawGrid(w, rows, surface):\r\n    sizeBtwn = w // rows\r\n\r\n    x = 0\r\n    y = 0\r\n    for l in range(rows):\r\n        x = x + sizeBtwn\r\n        y = y + sizeBtwn\r\n\r\n        pygame.draw.line(surface, (255, 255, 255), (x, 0), (x, w))\r\n        pygame.draw.line(surface, (255, 255, 255), (0, y), (w, y))\r\n\r\n\r\ndef redrawWindow(surface):\r\n    global rows, width, s\r\n    surface.fill((0, 0, 0))\r\n    s.draw(surface)\r\n    drawGrid(width, rows, surface)\r\n    pygame.display.update()\r\n    pass\r\n\r\n\r\ndef randomSnack(rows, items):\r\n    pass\r\n\r\n\r\ndef message_box(subject, content):\r\n    pass\r\n\r\n\r\ndef main():\r\n    global width, rows, s\r\n    width = 500\r\n    height = 500\r\n    rows = 20\r\n    s = snake((255,  0, 0), (10, 10))\r\n    win = pygame.display.set_mode((width, height))\r\n    flag = True\r\n\r\n    clock = pygame.time.Clock()\r\n\r\n    while flag:\r\n        pygame.time.delay(50)\r\n        clock.tick(10)\r\n        s.move()\r\n        redrawWindow(win)\r\n    pass\r\n\r\n\r\nmain()\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17016", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17016/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17016/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17016/events", "html_url": "https://github.com/numpy/numpy/issues/17016", "id": 673841413, "node_id": "MDU6SXNzdWU2NzM4NDE0MTM=", "number": 17016, "title": "Building documentation in a conda environment (Arch Linux)", "user": {"login": "cooperrc", "id": 11371428, "node_id": "MDQ6VXNlcjExMzcxNDI4", "avatar_url": "https://avatars2.githubusercontent.com/u/11371428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperrc", "html_url": "https://github.com/cooperrc", "followers_url": "https://api.github.com/users/cooperrc/followers", "following_url": "https://api.github.com/users/cooperrc/following{/other_user}", "gists_url": "https://api.github.com/users/cooperrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperrc/subscriptions", "organizations_url": "https://api.github.com/users/cooperrc/orgs", "repos_url": "https://api.github.com/users/cooperrc/repos", "events_url": "https://api.github.com/users/cooperrc/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperrc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501057526, "node_id": "MDU6TGFiZWwxNTAxMDU3NTI2", "url": "https://api.github.com/repos/numpy/numpy/labels/32%20-%20Installation", "name": "32 - Installation", "color": "fef2c0", "default": false, "description": "Problems installing or compiling NumPy"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-05T20:55:21Z", "updated_at": "2020-08-06T14:50:03Z", "closed_at": "2020-08-06T14:50:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n<!-- Please describe the issue in detail here, and fill in the fields below -->\r\nI'm trying to build NumPy and its documentation in a conda environment. So far I have created a fresh 3.8.0 Python environment and installed Cython with conda. When I try to run  `runtests.py` or \r\n\r\ndo a `pip install .`, I receive the following error:\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```bash\r\npython runtests.py -v\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n```\r\nBuilding, see build.log...\r\nnumpy/random/_bounded_integers.pxd.in has not changed\r\nnumpy/random/_mt19937.pyx has not changed\r\nnumpy/random/_philox.pyx has not changed\r\nnumpy/random/_common.pyx has not changed\r\nnumpy/random/mtrand.pyx has not changed\r\nnumpy/random/bit_generator.pyx has not changed\r\nnumpy/random/_bounded_integers.pyx.in has not changed\r\nnumpy/random/_bounded_integers.pyx has not changed\r\nnumpy/random/_sfc64.pyx has not changed\r\nnumpy/random/_pcg64.pyx has not changed\r\nnumpy/random/_generator.pyx has not changed\r\nCythonizing sources\r\nblas_opt_info:\r\nblas_mkl_info:\r\ncustomize UnixCCompiler\r\n  libraries mkl_rt not found in ['/home/ryan/.conda/envs/doc-build-38/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/']\r\n  NOT AVAILABLE\r\n\r\nblis_info:\r\n  libraries blis not found in ['/home/ryan/.conda/envs/doc-build-38/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/']\r\n  NOT AVAILABLE\r\n\r\nopenblas_info:\r\n  libraries openblas not found in ['/home/ryan/.conda/envs/doc-build-38/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/']\r\n  NOT AVAILABLE\r\n\r\natlas_3_10_blas_threads_info:\r\nSetting PTATLAS=ATLAS\r\n  libraries tatlas not found in ['/home/ryan/.conda/envs/doc-build-38/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/']\r\n  NOT AVAILABLE\r\n\r\natlas_3_10_blas_info:\r\n  libraries satlas not found in ['/home/ryan/.conda/envs/doc-build-38/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/']\r\n  NOT AVAILABLE\r\n\r\natlas_blas_threads_info:\r\nSetting PTATLAS=ATLAS\r\n  libraries ptf77blas,ptcblas,atlas not found in ['/home/ryan/.conda/envs/doc-build-38/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/']\r\n  NOT AVAILABLE\r\n\r\natlas_blas_info:\r\n  libraries f77blas,cblas,atlas not found in ['/home/ryan/.conda/envs/doc-build-38/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/']\r\n  NOT AVAILABLE\r\n\r\nblas_info:\r\nC compiler: gcc -pthread -B /home/ryan/.conda/envs/doc-build-38/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -Werror=vla -Werror=nonnull -Werror=pointer-arith -Wlogical-op -Werror=unused-function -fPIC\r\n\r\ncreating /tmp/tmpkzbmwzne/tmp\r\ncreating /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne\r\ncompile options: '-I/usr/local/include -I/usr/include -I/home/ryan/.conda/envs/doc-build-38/include -c'\r\ngcc: /tmp/tmpkzbmwzne/source.c\r\ngcc -pthread -B /home/ryan/.conda/envs/doc-build-38/compiler_compat -Wl,--sysroot=/ /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o -L/usr/lib64 -lblas -o /tmp/tmpkzbmwzne/a.out\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: file not recognized: file format not recognized\r\ncollect2: error: ld returned 1 exit status\r\ngcc -pthread -B /home/ryan/.conda/envs/doc-build-38/compiler_compat -Wl,--sysroot=/ /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o -L/usr/lib64 -lcblas -lblas -o /tmp/tmpkzbmwzne/a.out\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: file not recognized: file format not recognized\r\ncollect2: error: ld returned 1 exit status\r\ngcc -pthread -B /home/ryan/.conda/envs/doc-build-38/compiler_compat -Wl,--sysroot=/ /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o -L/usr/lib64 -lblas -lblas -o /tmp/tmpkzbmwzne/a.out\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: file not recognized: file format not recognized\r\ncollect2: error: ld returned 1 exit status\r\ngcc -pthread -B /home/ryan/.conda/envs/doc-build-38/compiler_compat -Wl,--sysroot=/ /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o -L/usr/lib64 -lcblas -o /tmp/tmpkzbmwzne/a.out\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: file not recognized: file format not recognized\r\ncollect2: error: ld returned 1 exit status\r\ngcc -pthread -B /home/ryan/.conda/envs/doc-build-38/compiler_compat -Wl,--sysroot=/ /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o -L/usr/lib64 -lblas -o /tmp/tmpkzbmwzne/a.out\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: /tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: unable to initialize decompress status for section .debug_info\r\n/tmp/tmpkzbmwzne/tmp/tmpkzbmwzne/source.o: file not recognized: file format not recognized\r\ncollect2: error: ld returned 1 exit status\r\n  FOUND:\r\n    libraries = ['blas', 'blas']\r\n    library_dirs = ['/usr/lib64']\r\n    include_dirs = ['/usr/local/include', '/usr/include', '/home/ryan/.conda/envs/doc-build-38/include']\r\n\r\n  FOUND:\r\n    define_macros = [('NO_ATLAS_INFO', 1)]\r\n    libraries = ['blas', 'blas']\r\n    library_dirs = ['/usr/lib64']\r\n    include_dirs = ['/usr/local/include', '/usr/include', '/home/ryan/.conda/envs/doc-build-38/include']\r\n\r\nnon-existing path in 'numpy/distutils': 'site.cfg'\r\nlapack_opt_info:\r\nlapack_mkl_info:\r\n  libraries mkl_rt not found in ['/home/ryan/.conda/envs/doc-build-38/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/']\r\n  NOT AVAILABLE\r\n\r\nopenblas_lapack_info:\r\n  libraries openblas not found in ['/home/ryan/.conda/envs/doc-build-38/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/']\r\n  NOT AVAILABLE\r\n\r\nopenblas_clapack_info:\r\n  libraries openblas,lapack not found in ['/home/ryan/.conda/envs/doc-build-38/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/']\r\n  NOT AVAILABLE\r\n\r\nflame_info:\r\n  libraries flame not found in ['/home/ryan/.conda/envs/doc-build-38/lib', '/usr/local/lib', '/usr/lib64', '/usr/lib', '/usr/lib/']\r\n  NOT AVAILABLE\r\n\r\natlas_3_10_threads_info:\r\nSetting PTATLAS=ATLAS\r\n  libraries lapack_atlas not found in /home/ryan/.conda/envs/doc-build-38/lib\r\n  libraries tatlas,tatlas not found in /home/ryan/.conda/envs/doc-build-38/lib\r\n  libraries lapack_atlas not found in /usr/local/lib\r\n  libraries tatlas,tatlas not found in /usr/local/lib\r\n  libraries lapack_atlas not found in /usr/lib64\r\n  libraries tatlas,tatlas not found in /usr/lib64\r\n  libraries lapack_atlas not found in /usr/lib\r\n  libraries tatlas,tatlas not found in /usr/lib\r\n  libraries lapack_atlas not found in /usr/lib/\r\n  libraries tatlas,tatlas not found in /usr/lib/\r\n<class 'numpy.distutils.system_info.atlas_3_10_threads_info'>\r\n  NOT AVAILABLE\r\n\r\natlas_3_10_info:\r\n  libraries lapack_atlas not found in /home/ryan/.conda/envs/doc-build-38/lib\r\n  libraries satlas,satlas not found in /home/ryan/.conda/envs/doc-build-38/lib\r\n  libraries lapack_atlas not found in /usr/local/lib\r\n  libraries satlas,satlas not found in /usr/local/lib\r\n  libraries lapack_atlas not found in /usr/lib64\r\n  libraries satlas,satlas not found in /usr/lib64\r\n  libraries lapack_atlas not found in /usr/lib\r\n  libraries satlas,satlas not found in /usr/lib\r\n  libraries lapack_atlas not found in /usr/lib/\r\n  libraries satlas,satlas not found in /usr/lib/\r\n<class 'numpy.distutils.system_info.atlas_3_10_info'>\r\n  NOT AVAILABLE\r\n\r\natlas_threads_info:\r\nSetting PTATLAS=ATLAS\r\n  libraries lapack_atlas not found in /home/ryan/.conda/envs/doc-build-38/lib\r\n  libraries ptf77blas,ptcblas,atlas not found in /home/ryan/.conda/envs/doc-build-38/lib\r\n  libraries lapack_atlas not found in /usr/local/lib\r\n  libraries ptf77blas,ptcblas,atlas not found in /usr/local/lib\r\n  libraries lapack_atlas not found in /usr/lib64\r\n  libraries ptf77blas,ptcblas,atlas not found in /usr/lib64\r\n  libraries lapack_atlas not found in /usr/lib\r\n  libraries ptf77blas,ptcblas,atlas not found in /usr/lib\r\n  libraries lapack_atlas not found in /usr/lib/\r\n  libraries ptf77blas,ptcblas,atlas not found in /usr/lib/\r\n<class 'numpy.distutils.system_info.atlas_threads_info'>\r\n  NOT AVAILABLE\r\n\r\natlas_info:\r\n  libraries lapack_atlas not found in /home/ryan/.conda/envs/doc-build-38/lib\r\n  libraries f77blas,cblas,atlas not found in /home/ryan/.conda/envs/doc-build-38/lib\r\n  libraries lapack_atlas not found in /usr/local/lib\r\n  libraries f77blas,cblas,atlas not found in /usr/local/lib\r\n  libraries lapack_atlas not found in /usr/lib64\r\n  libraries f77blas,cblas,atlas not found in /usr/lib64\r\n  libraries lapack_atlas not found in /usr/lib\r\n  libraries f77blas,cblas,atlas not found in /usr/lib\r\n  libraries lapack_atlas not found in /usr/lib/\r\n  libraries f77blas,cblas,atlas not found in /usr/lib/\r\n<class 'numpy.distutils.system_info.atlas_info'>\r\n  NOT AVAILABLE\r\n\r\nlapack_info:\r\n  FOUND:\r\n    libraries = ['lapack', 'lapack']\r\n    library_dirs = ['/usr/lib64']\r\n    language = f77\r\n\r\n  FOUND:\r\n    libraries = ['lapack', 'lapack', 'blas', 'blas']\r\n    library_dirs = ['/usr/lib64']\r\n    language = f77\r\n    define_macros = [('NO_ATLAS_INFO', 1)]\r\n    include_dirs = ['/usr/local/include', '/usr/include', '/home/ryan/.conda/envs/doc-build-38/include']\r\n\r\nrunning build\r\nrunning config_cc\r\nunifing config_cc, config, build_clib, build_ext, build commands --compiler options\r\nrunning config_fc\r\nunifing config_fc, config, build_clib, build_ext, build commands --fcompiler options\r\nrunning build_src\r\nbuild_src\r\nbuilding py_modules sources\r\nbuilding library \"npymath\" sources\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: _configtest.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: _configtest.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: _configtest.o: unable to initialize decompress status for section .debug_info\r\n/home/ryan/.conda/envs/doc-build-38/compiler_compat/ld: _configtest.o: unable to initialize decompress status for section .debug_info\r\n_configtest.o: file not recognized: file format not recognized\r\ncollect2: error: ld returned 1 exit status\r\n/home/ryan/.conda/envs/doc-build-38/lib/python3.8/site-packages/setuptools/distutils_patch.py:25: UserWarning: Distutils was imported before Setuptools. This usage is discouraged and may exhibit undesirable behaviors or errors. Please use Setuptools' objects directly or at least import Setuptools first.\r\n  warnings.warn(\r\nRunning from numpy source directory.\r\n/home/ryan/projects/numpy/numpy/numpy/distutils/system_info.py:1932: UserWarning: \r\n    Optimized (vendor) Blas libraries are not found.\r\n    Falls back to netlib Blas library which has worse performance.\r\n    A better performance should be easily gained by switching\r\n    Blas library.\r\n  if self._calc_info(blas):\r\n/home/ryan/.conda/envs/doc-build-38/lib/python3.8/distutils/dist.py:274: UserWarning: Unknown distribution option: 'define_macros'\r\n  warnings.warn(msg)\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 499, in <module>\r\n    setup_package()\r\n  File \"setup.py\", line 491, in setup_package\r\n    setup(**metadata)\r\n  File \"/home/ryan/projects/numpy/numpy/numpy/distutils/core.py\", line 169, in setup\r\n    return old_setup(**new_attr)\r\n  File \"/home/ryan/.conda/envs/doc-build-38/lib/python3.8/site-packages/setuptools/__init__.py\", line 165, in setup\r\n    return distutils.core.setup(**attrs)\r\n  File \"/home/ryan/.conda/envs/doc-build-38/lib/python3.8/distutils/core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"/home/ryan/.conda/envs/doc-build-38/lib/python3.8/distutils/dist.py\", line 966, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/home/ryan/.conda/envs/doc-build-38/lib/python3.8/distutils/dist.py\", line 985, in run_command\r\n    cmd_obj.run()\r\n  File \"/home/ryan/projects/numpy/numpy/numpy/distutils/command/build.py\", line 49, in run\r\n    old_build.run(self)\r\n  File \"/home/ryan/.conda/envs/doc-build-38/lib/python3.8/distutils/command/build.py\", line 135, in run\r\n    self.run_command(cmd_name)\r\n  File \"/home/ryan/.conda/envs/doc-build-38/lib/python3.8/distutils/cmd.py\", line 313, in run_command\r\n    self.distribution.run_command(command)\r\n  File \"/home/ryan/.conda/envs/doc-build-38/lib/python3.8/distutils/dist.py\", line 985, in run_command\r\n    cmd_obj.run()\r\n  File \"/home/ryan/projects/numpy/numpy/numpy/distutils/command/build_src.py\", line 144, in run\r\n    self.build_sources()\r\n  File \"/home/ryan/projects/numpy/numpy/numpy/distutils/command/build_src.py\", line 155, in build_sources\r\n    self.build_library_sources(*libname_info)\r\n  File \"/home/ryan/projects/numpy/numpy/numpy/distutils/command/build_src.py\", line 288, in build_library_sources\r\n    sources = self.generate_sources(sources, (lib_name, build_info))\r\n  File \"/home/ryan/projects/numpy/numpy/numpy/distutils/command/build_src.py\", line 378, in generate_sources\r\n    source = func(extension, build_dir)\r\n  File \"numpy/core/setup.py\", line 658, in get_mathlib_info\r\n    raise RuntimeError(\"Broken toolchain: cannot link a simple C program\")\r\n\r\nRuntimeError: Broken toolchain: cannot link a simple C program\r\n\r\nBuild failed!\r\n```\r\n</details>\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\n### Numpy/Python version information:\r\n\r\nPython 3.8.0 installed from conda only install in the environment so far is Cython v0.29.21\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17005", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17005/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17005/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17005/events", "html_url": "https://github.com/numpy/numpy/issues/17005", "id": 672875261, "node_id": "MDU6SXNzdWU2NzI4NzUyNjE=", "number": 17005, "title": "Numpy", "user": {"login": "algotradeady", "id": 69087077, "node_id": "MDQ6VXNlcjY5MDg3MDc3", "avatar_url": "https://avatars0.githubusercontent.com/u/69087077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algotradeady", "html_url": "https://github.com/algotradeady", "followers_url": "https://api.github.com/users/algotradeady/followers", "following_url": "https://api.github.com/users/algotradeady/following{/other_user}", "gists_url": "https://api.github.com/users/algotradeady/gists{/gist_id}", "starred_url": "https://api.github.com/users/algotradeady/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algotradeady/subscriptions", "organizations_url": "https://api.github.com/users/algotradeady/orgs", "repos_url": "https://api.github.com/users/algotradeady/repos", "events_url": "https://api.github.com/users/algotradeady/events{/privacy}", "received_events_url": "https://api.github.com/users/algotradeady/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-04T15:19:41Z", "updated_at": "2020-08-04T15:27:57Z", "closed_at": "2020-08-04T15:27:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17003", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17003/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17003/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17003/events", "html_url": "https://github.com/numpy/numpy/issues/17003", "id": 672753547, "node_id": "MDU6SXNzdWU2NzI3NTM1NDc=", "number": 17003, "title": "Typo in tutorial-ma.rst", "user": {"login": "NikosAlexandris", "id": 7046639, "node_id": "MDQ6VXNlcjcwNDY2Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7046639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NikosAlexandris", "html_url": "https://github.com/NikosAlexandris", "followers_url": "https://api.github.com/users/NikosAlexandris/followers", "following_url": "https://api.github.com/users/NikosAlexandris/following{/other_user}", "gists_url": "https://api.github.com/users/NikosAlexandris/gists{/gist_id}", "starred_url": "https://api.github.com/users/NikosAlexandris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NikosAlexandris/subscriptions", "organizations_url": "https://api.github.com/users/NikosAlexandris/orgs", "repos_url": "https://api.github.com/users/NikosAlexandris/repos", "events_url": "https://api.github.com/users/NikosAlexandris/events{/privacy}", "received_events_url": "https://api.github.com/users/NikosAlexandris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-04T12:27:44Z", "updated_at": "2020-08-05T18:23:27Z", "closed_at": "2020-08-04T18:31:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the https://github.com/numpy/numpy/blob/99010006fabea949d13aae8caea10abf97cbaed9/doc/source/user/tutorial-ma.rst tutorial, [line 135](https://github.com/numpy/numpy/blame/99010006fabea949d13aae8caea10abf97cbaed9/doc/source/user/tutorial-ma.rst#L135), the `usecols=(0, 1)` is wrong.\r\n\r\nThe complete command there is:\r\n```\r\nlocations = np.genfromtxt(filename, dtype=np.unicode_, delimiter=\",\",\r\n                              skip_header=7, usecols=(0, 1),\r\n                              encoding=\"utf-8-sig\")\r\n```\r\nIt should be instead `usecols=(0, 2)`, i.e..\r\n```python\r\nlocations = numpy.genfromtxt(filename, dtype=numpy.unicode_, delimiter=',',\r\n                              skip_header=7, usecols=range(0,2),\r\n                              encoding=\"utf-8-sig\")\r\n```\r\nso that the following instruction will work as expected:\r\n```python\r\nchina_total = nbcases[locations[:, 1] == 'China'].sum(axis=0)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/17001", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17001/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17001/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/17001/events", "html_url": "https://github.com/numpy/numpy/issues/17001", "id": 672577972, "node_id": "MDU6SXNzdWU2NzI1Nzc5NzI=", "number": 17001, "title": "Ambiguous documentation example for `array_split`", "user": {"login": "ZeliTheZealot", "id": 19900255, "node_id": "MDQ6VXNlcjE5OTAwMjU1", "avatar_url": "https://avatars2.githubusercontent.com/u/19900255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZeliTheZealot", "html_url": "https://github.com/ZeliTheZealot", "followers_url": "https://api.github.com/users/ZeliTheZealot/followers", "following_url": "https://api.github.com/users/ZeliTheZealot/following{/other_user}", "gists_url": "https://api.github.com/users/ZeliTheZealot/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZeliTheZealot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZeliTheZealot/subscriptions", "organizations_url": "https://api.github.com/users/ZeliTheZealot/orgs", "repos_url": "https://api.github.com/users/ZeliTheZealot/repos", "events_url": "https://api.github.com/users/ZeliTheZealot/events{/privacy}", "received_events_url": "https://api.github.com/users/ZeliTheZealot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-04T07:38:58Z", "updated_at": "2020-08-10T09:26:54Z", "closed_at": "2020-08-10T09:26:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\nThe examples make it unclear as to whether `array_split`, with arguments `ary` and `n`, splits `ary` into\r\n\r\n1. `n` arrays of near equal size, or\r\n2.  a few arrays of near equal size, with the maximum array length capped at `n`.\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\nThe existing code examples are:\r\n```python\r\nimport numpy as np\r\nx = np.arange(8.0)\r\nnp.array_split(x, 3)\r\n #   [array([0.,  1.,  2.]), array([3.,  4.,  5.]), array([6.,  7.])]\r\nx = np.arange(7.0)\r\nnp.array_split(x, 3)\r\n #   [array([0.,  1.,  2.]), array([3.,  4.]), array([5.,  6.])]\r\n```\r\nA better code example is \r\n```python\r\nimport numpy as np\r\nc = np.arange(9)\r\nnp.array_split(c, 4)\r\n# [array([0, 1, 2]), array([3, 4]), array([5, 6]), array([7, 8])]\r\n```\r\n### Link:\r\nhttps://numpy.org/doc/stable/reference/generated/numpy.array_split.html\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16997", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16997/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16997/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16997/events", "html_url": "https://github.com/numpy/numpy/issues/16997", "id": 672403784, "node_id": "MDU6SXNzdWU2NzI0MDM3ODQ=", "number": 16997, "title": "\"ValueError: operands could not be broadcast together with shapes\" error on invalid boolean array index", "user": {"login": "asmeurer", "id": 71486, "node_id": "MDQ6VXNlcjcxNDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asmeurer", "html_url": "https://github.com/asmeurer", "followers_url": "https://api.github.com/users/asmeurer/followers", "following_url": "https://api.github.com/users/asmeurer/following{/other_user}", "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}", "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions", "organizations_url": "https://api.github.com/users/asmeurer/orgs", "repos_url": "https://api.github.com/users/asmeurer/repos", "events_url": "https://api.github.com/users/asmeurer/events{/privacy}", "received_events_url": "https://api.github.com/users/asmeurer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-08-03T23:35:23Z", "updated_at": "2020-08-06T23:20:25Z", "closed_at": "2020-08-06T23:20:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\nIn some instances, when indexing an array with a boolean array index, instead of getting an `IndexError`, you instead get a `ValueError: operands could not be broadcast together with shapes ...` error.  It seems to happen when the product of the array and index shapes are the same (but the shapes to not match).\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\n>>> import numpy as np\r\n>>> a = np.empty((3, 3))\r\n>>> a[np.empty((1, 9), dtype=bool)]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nValueError: operands could not be broadcast together with shapes (3,3) (1,9)\r\n```\r\n\r\nCompare the usual case:\r\n\r\n```py\r\n>>> a = np.empty((3, 4))\r\n>>> a[np.empty((1, 9), dtype=bool)]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nIndexError: boolean index did not match indexed array along dimension 0; dimension is 3 but corresponding boolean dimension is 1\r\n```\r\n\r\nAnother example to back my theory that this only happens when the array sizes match\r\n\r\n```py\r\n>>> a = np.empty((2, 2, 4))\r\n>>> a[np.empty((1, 4, 4), dtype=bool)]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nValueError: operands could not be broadcast together with shapes (2,2,4) (1,4,4)\r\n>>> a[np.empty((1, 2, 4), dtype=bool)]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nIndexError: boolean index did not match indexed array along dimension 0; dimension is 2 but corresponding boolean dimension is 1\r\n```\r\n\r\nObviously, `ValueError` is the incorrect error for an invalid index, but aside from this, an error mentioning broadcasting of the array shape and the index shape is very confusing since (unless I am mistaken), this never actually happens.\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Numpy/Python version information:\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\nNumPy master:\r\n\r\n```py\r\n>>> import sys, numpy; print(numpy.__version__, sys.version)\r\n1.20.0.dev0+8f60522 3.7.6 | packaged by conda-forge | (default, Mar 23 2020, 22:45:16)\r\n[Clang 9.0.1 ]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16994", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16994/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16994/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16994/events", "html_url": "https://github.com/numpy/numpy/issues/16994", "id": 672160169, "node_id": "MDU6SXNzdWU2NzIxNjAxNjk=", "number": 16994, "title": "np.lib.stride_tricks.as_strided raises `ValueError: array is too big`", "user": {"login": "FirefoxMetzger", "id": 4402489, "node_id": "MDQ6VXNlcjQ0MDI0ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4402489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FirefoxMetzger", "html_url": "https://github.com/FirefoxMetzger", "followers_url": "https://api.github.com/users/FirefoxMetzger/followers", "following_url": "https://api.github.com/users/FirefoxMetzger/following{/other_user}", "gists_url": "https://api.github.com/users/FirefoxMetzger/gists{/gist_id}", "starred_url": "https://api.github.com/users/FirefoxMetzger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FirefoxMetzger/subscriptions", "organizations_url": "https://api.github.com/users/FirefoxMetzger/orgs", "repos_url": "https://api.github.com/users/FirefoxMetzger/repos", "events_url": "https://api.github.com/users/FirefoxMetzger/events{/privacy}", "received_events_url": "https://api.github.com/users/FirefoxMetzger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}, {"id": 81818822, "node_id": "MDU6TGFiZWw4MTgxODgyMg==", "url": "https://api.github.com/repos/numpy/numpy/labels/57%20-%20Close?", "name": "57 - Close?", "color": "207de5", "default": false, "description": "Issues which may be closable unless discussion continued"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-03T15:31:29Z", "updated_at": "2020-08-03T18:28:14Z", "closed_at": "2020-08-03T17:07:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating (very) large arrays via `as_strided` numpy raises an exception as soon as the array would consume more memory than would fit on the machine. I find this behavior strange since the new array shares memory with an already existing array that does fit into memory.\r\n\r\nIs there any particular reason behind this behavior? If not, would it be worthwhile (moreso possible) to not perform this check here?\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\n\r\nbase = 100\r\nfoo = np.ones(100)\r\n\r\n# to reproduce this bug, you need less than 100 000 petabytes of memory\r\n# if you have more, please add a 0 below (or as many as you may need)\r\ndims = 10\r\n\r\nbar = np.lib.stride_tricks.as_strided(\r\n    foo, [base] * dims, [0] * (dims - 1) + [8])\r\n```\r\n\r\n### Error message:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"numpy_bug_mwe.py\", line 7, in <module>\r\n    bar = np.lib.stride_tricks.as_strided(foo, [base] * dims, [0] * (dims - 1) + [8])\r\n  File \"C:\\Users\\Sebastian\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\numpy\\lib\\stride_tricks.py\", line 103, in as_strided\r\n    array = np.asarray(DummyArray(interface, base=x))\r\n  File \"C:\\Users\\Sebastian\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\numpy\\core\\_asarray.py\", line 85, in asarray\r\n    return array(a, dtype, copy=False, order=order)\r\nValueError: array is too big; `arr.size * arr.dtype.itemsize` is larger than the maximum possible size.\r\n```\r\n\r\n### Numpy/Python version information:\r\n\r\n1.18.2 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:59:51) [MSC v.1914 64 bit (AMD64)]\r\n\r\nSimilar code also fails in python3.6, 3.7, and 3.8 (all 32-bit) (AzureDevOps CI). I can look up the respective numpy version if necessary.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16990", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16990/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16990/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16990/events", "html_url": "https://github.com/numpy/numpy/issues/16990", "id": 671878142, "node_id": "MDU6SXNzdWU2NzE4NzgxNDI=", "number": 16990, "title": "Multi-threading aware multi-threading", "user": {"login": "orenbenkiki", "id": 68190, "node_id": "MDQ6VXNlcjY4MTkw", "avatar_url": "https://avatars1.githubusercontent.com/u/68190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orenbenkiki", "html_url": "https://github.com/orenbenkiki", "followers_url": "https://api.github.com/users/orenbenkiki/followers", "following_url": "https://api.github.com/users/orenbenkiki/following{/other_user}", "gists_url": "https://api.github.com/users/orenbenkiki/gists{/gist_id}", "starred_url": "https://api.github.com/users/orenbenkiki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orenbenkiki/subscriptions", "organizations_url": "https://api.github.com/users/orenbenkiki/orgs", "repos_url": "https://api.github.com/users/orenbenkiki/repos", "events_url": "https://api.github.com/users/orenbenkiki/events{/privacy}", "received_events_url": "https://api.github.com/users/orenbenkiki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-08-03T07:50:43Z", "updated_at": "2020-08-04T09:32:37Z", "closed_at": "2020-08-03T09:23:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I invoke `np.corrcoef` on a large enough matrix, it uses multiple threads to speed up the computation. In fact, it uses all the CPUs (`nproc`). On my server, this is a lot (56 threads).\r\n\r\nHowever, if I am using multiple threads myself, and invoke `np.corrcoef` in each one (again, on a large enough matrix), then each invocation uses its own set of `nproc` threads.\r\n\r\nThe result is the OS can see up to `nproc`^2 threads (in my case, I over 3000 threads!), with all the memory and scheduling overheads this entails (most likely just getting killed due to out-of-memory issues).\r\n\r\nOne would expect that, when using internal Numpy threads, then Numpy should be itself multi-threading aware, and only use up to `nproc` total such additional internal threads, regardless of the number of application threads that invoke Numpy.\r\n\r\nOne could say this isn't Numpy's issue, but an issue of the underlying parallel framework (OpenMP, TBB). That said, TBB is supposed to solve this problem in theory, but I still see it when running Intel's python distribution with `python -m tbb`. Either \"using TBB doesn't mean what you think it means\" or there's some deeper issue here.\r\n\r\n### Reproducing the problem:\r\n\r\nRun `np.corrcoeff` on a large matrix from `nproc` different Python threads, and watch the system's load average soar up to `nproc`^2 (most likely the program will be killed before it gets to that point).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16984", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16984/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16984/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16984/events", "html_url": "https://github.com/numpy/numpy/issues/16984", "id": 670103668, "node_id": "MDU6SXNzdWU2NzAxMDM2Njg=", "number": 16984, "title": "Datetime substraction conversion error", "user": {"login": "jochengietzen", "id": 17901042, "node_id": "MDQ6VXNlcjE3OTAxMDQy", "avatar_url": "https://avatars2.githubusercontent.com/u/17901042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jochengietzen", "html_url": "https://github.com/jochengietzen", "followers_url": "https://api.github.com/users/jochengietzen/followers", "following_url": "https://api.github.com/users/jochengietzen/following{/other_user}", "gists_url": "https://api.github.com/users/jochengietzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jochengietzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jochengietzen/subscriptions", "organizations_url": "https://api.github.com/users/jochengietzen/orgs", "repos_url": "https://api.github.com/users/jochengietzen/repos", "events_url": "https://api.github.com/users/jochengietzen/events{/privacy}", "received_events_url": "https://api.github.com/users/jochengietzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T18:42:02Z", "updated_at": "2020-07-31T18:57:50Z", "closed_at": "2020-07-31T18:47:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\nWhen substracting two datetime64 objects, the result in microseconds is off. Minimal example shows that instead of expected 1123.456 microseconds the timedelta is 1123456 microseconds.\r\n\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\nprint(np.datetime64('2020-10-10T20:00:01.123456') - np.datetime64('2020-10-10T20:00:00.0'))\r\n>> 1123456 microseconds\r\n```\r\n\r\n### Numpy/Python version information:\r\n\r\n1.19.1 3.7.4 (default, Aug 13 2019, 15:17:50) \r\n[Clang 4.0.1 (tags/RELEASE_401/final)]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16981", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16981/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16981/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16981/events", "html_url": "https://github.com/numpy/numpy/issues/16981", "id": 669555047, "node_id": "MDU6SXNzdWU2Njk1NTUwNDc=", "number": 16981, "title": "Checking for elements in a list raises ValueError if an array is present", "user": {"login": "onnoeberhard", "id": 21868012, "node_id": "MDQ6VXNlcjIxODY4MDEy", "avatar_url": "https://avatars1.githubusercontent.com/u/21868012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onnoeberhard", "html_url": "https://github.com/onnoeberhard", "followers_url": "https://api.github.com/users/onnoeberhard/followers", "following_url": "https://api.github.com/users/onnoeberhard/following{/other_user}", "gists_url": "https://api.github.com/users/onnoeberhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/onnoeberhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onnoeberhard/subscriptions", "organizations_url": "https://api.github.com/users/onnoeberhard/orgs", "repos_url": "https://api.github.com/users/onnoeberhard/repos", "events_url": "https://api.github.com/users/onnoeberhard/events{/privacy}", "received_events_url": "https://api.github.com/users/onnoeberhard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T08:22:46Z", "updated_at": "2020-08-03T15:58:53Z", "closed_at": "2020-08-03T15:58:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\nI am sorry if this has been mentioned before or is the intended behaviour, it is difficult to search for the operator `in`. In the code snippet below, I would expect the result `check = False`, because 3 is not an element of the list. Instead, I get a `ValueError`.\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\ncheck = 3 in [1, np.array([1, 2, 3, 4, 5])]\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n`ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()`\r\n\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\n### Numpy/Python version information:\r\n1.19.0 3.8.3 (default, Jun  9 2020, 17:49:41) \r\n[GCC 8.3.0]\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16979", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16979/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16979/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16979/events", "html_url": "https://github.com/numpy/numpy/issues/16979", "id": 669348258, "node_id": "MDU6SXNzdWU2NjkzNDgyNTg=", "number": 16979, "title": "Feature request: Specifying destination of np.load, like `np.load(... out=)`", "user": {"login": "JiaRu2016", "id": 17561508, "node_id": "MDQ6VXNlcjE3NTYxNTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/17561508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiaRu2016", "html_url": "https://github.com/JiaRu2016", "followers_url": "https://api.github.com/users/JiaRu2016/followers", "following_url": "https://api.github.com/users/JiaRu2016/following{/other_user}", "gists_url": "https://api.github.com/users/JiaRu2016/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiaRu2016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiaRu2016/subscriptions", "organizations_url": "https://api.github.com/users/JiaRu2016/orgs", "repos_url": "https://api.github.com/users/JiaRu2016/repos", "events_url": "https://api.github.com/users/JiaRu2016/events{/privacy}", "received_events_url": "https://api.github.com/users/JiaRu2016/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-31T02:31:27Z", "updated_at": "2020-08-03T19:06:22Z", "closed_at": "2020-08-03T19:06:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way we can specifying destination of `np.load()` ?  Maybe looks like\r\n\r\n```python\r\nnp.load('path/to/small_array.npy', out=large_array[some_slice])\r\n```\r\n\r\nIt seems \r\n```\r\nlarge_array[some_slice] = np.load('path/to/small_array')\r\n```\r\nwill \"copy\" the array two times.  Can we make it just one copy ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16978", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16978/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16978/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16978/events", "html_url": "https://github.com/numpy/numpy/issues/16978", "id": 669253805, "node_id": "MDU6SXNzdWU2NjkyNTM4MDU=", "number": 16978, "title": "consistent advanced slicing", "user": {"login": "2sn", "id": 1273110, "node_id": "MDQ6VXNlcjEyNzMxMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1273110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/2sn", "html_url": "https://github.com/2sn", "followers_url": "https://api.github.com/users/2sn/followers", "following_url": "https://api.github.com/users/2sn/following{/other_user}", "gists_url": "https://api.github.com/users/2sn/gists{/gist_id}", "starred_url": "https://api.github.com/users/2sn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/2sn/subscriptions", "organizations_url": "https://api.github.com/users/2sn/orgs", "repos_url": "https://api.github.com/users/2sn/repos", "events_url": "https://api.github.com/users/2sn/events{/privacy}", "received_events_url": "https://api.github.com/users/2sn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-30T22:37:09Z", "updated_at": "2020-08-04T13:56:12Z", "closed_at": "2020-08-03T14:25:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\n>>> import numpy as np\r\n>>> a = np.ndarray((5,6,7))\r\n>>> a.shape\r\n(5, 6, 7)\r\n>>> a[[[0,1]],[[0],[1],[2]],:].shape\r\n(3, 2, 7)\r\n>>> a[:,[[0,1]],[[0],[1],[2]]].shape\r\n(5, 3, 2)\r\n>>> a[[[0,1]],:,[[0],[1],[2]]].shape\r\n(3, 2, 6)\r\n```\r\nI think the outcome of the third example is unexpected and inconsistent having seen the first two.  I it would be more consistent either have the index dimensions `(3,2)` always be first, or preserve location of the \"free\" coordinate `:` to obtain a shape of `(3,6,2)`.\r\n\r\n### Numpy/Python version information:\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\n1.19.1 3.8.4 (default, Jul 14 2020, 11:50:51) \r\n[GCC 10.1.1 20200507 (Red Hat 10.1.1-1)]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16970", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16970/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16970/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16970/events", "html_url": "https://github.com/numpy/numpy/issues/16970", "id": 667179038, "node_id": "MDU6SXNzdWU2NjcxNzkwMzg=", "number": 16970, "title": "PyArray_Descr API is not compatible with the Python Limited API", "user": {"login": "lpsinger", "id": 728407, "node_id": "MDQ6VXNlcjcyODQwNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/728407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpsinger", "html_url": "https://github.com/lpsinger", "followers_url": "https://api.github.com/users/lpsinger/followers", "following_url": "https://api.github.com/users/lpsinger/following{/other_user}", "gists_url": "https://api.github.com/users/lpsinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpsinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpsinger/subscriptions", "organizations_url": "https://api.github.com/users/lpsinger/orgs", "repos_url": "https://api.github.com/users/lpsinger/repos", "events_url": "https://api.github.com/users/lpsinger/events{/privacy}", "received_events_url": "https://api.github.com/users/lpsinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-28T15:45:43Z", "updated_at": "2020-08-03T17:14:51Z", "closed_at": "2020-08-03T17:14:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Functions to create a new array using a `PyArray_Descr *` do not support the [PEP 384](https://www.python.org/dev/peps/pep-0384/) Python Limited API.\r\n\r\n### Reproducing code example:\r\n\r\n#### foo.c\r\n\r\n```c\r\n#include <Python.h>\r\n#include <numpy/arrayobject.h>\r\n\r\nstatic PyObject *bar(PyObject *NPY_UNUSED(module), PyObject *NPY_UNUSED(args))\r\n{\r\n    PyObject *dtype;\r\n    PyArray_Descr *descr;\r\n    npy_intp dims[] = {10};\r\n    int result;\r\n\r\n    dtype = Py_BuildValue(\"[(ss)(ss)]\", \"bat\", \"f8\", \"baz\", \"i8\");\r\n    if (!dtype)\r\n        return NULL;\r\n\r\n    result = PyArray_DescrConverter(dtype, &descr);\r\n    Py_DECREF(dtype);\r\n    if (result != NPY_SUCCEED)\r\n        return NULL;\r\n    \r\n    return PyArray_SimpleNewFromDescr(1, dims, descr);\r\n}\r\n\r\nstatic PyMethodDef methods[] = {\r\n    {\"bar\", bar, METH_NOARGS, \"fill me in\"},\r\n    {NULL, NULL, 0, NULL}\r\n};\r\n\r\nstatic PyModuleDef module = {\r\n    .m_base = PyModuleDef_HEAD_INIT,\r\n    .m_name = \"foo\",\r\n    .m_methods = methods,\r\n    .m_size = -1\r\n};\r\n\r\nPyMODINIT_FUNC PyInit_foo(void); /* Silence -Wmissing-prototypes */\r\nPyMODINIT_FUNC PyInit_foo(void)\r\n{\r\n    import_array();\r\n    return PyModule_Create(&module);\r\n}\r\n```\r\n\r\n#### setup.py\r\n\r\n```py\r\nfrom setuptools import setup, Extension\r\nimport numpy as np\r\n\r\next = Extension('foo', ['foo.c'], include_dirs=[np.get_include()])\r\nsetup(name='numpy-descr-limited-api-example', ext_modules=[ext])\r\n```\r\n\r\n### Error message:\r\n\r\n#### Failed output with limited Python API\r\n\r\n```\r\n$ env CC=gcc CFLAGS=\"-DPy_LIMITED_API=0x03060000\" pip install . && python -c 'import foo; print(repr(foo.bar()))'\r\nProcessing /Users/lpsinger/Desktop/numpy-descr-limited-api-example\r\nUsing legacy setup.py install for numpy-descr-limited-api-example, since package 'wheel' is not installed.\r\nInstalling collected packages: numpy-descr-limited-api-example\r\n  Attempting uninstall: numpy-descr-limited-api-example\r\n    Found existing installation: numpy-descr-limited-api-example 0.0.0\r\n    Uninstalling numpy-descr-limited-api-example-0.0.0:\r\n      Successfully uninstalled numpy-descr-limited-api-example-0.0.0\r\n    Running setup.py install for numpy-descr-limited-api-example ... error\r\n    ERROR: Command errored out with exit status 1:\r\n     command: /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/bin/python3 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/private/var/folders/cs/pwq97bws17d2p8qcp410gs7c84mbdz/T/pip-req-build-_dx9jmw9/setup.py'\"'\"'; __file__='\"'\"'/private/var/folders/cs/pwq97bws17d2p8qcp410gs7c84mbdz/T/pip-req-build-_dx9jmw9/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /private/var/folders/cs/pwq97bws17d2p8qcp410gs7c84mbdz/T/pip-record-8ur13b4e/install-record.txt --single-version-externally-managed --compile --install-headers /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/include/site/python3.8/numpy-descr-limited-api-example\r\n         cwd: /private/var/folders/cs/pwq97bws17d2p8qcp410gs7c84mbdz/T/pip-req-build-_dx9jmw9/\r\n    Complete output (29 lines):\r\n    running install\r\n    running build\r\n    running build_ext\r\n    building 'foo' extension\r\n    gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -pipe -Os -isysroot/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk -DPy_LIMITED_API=0x03060000 -I/Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/numpy/core/include -I/Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/include -I/opt/local/Library/Frameworks/Python.framework/Versions/3.8/include/python3.8 -c foo.c -o build/temp.macosx-10.15-x86_64-3.8/foo.o\r\n    In file included from /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/numpy/core/include/numpy/ndarraytypes.h:1822,\r\n                     from /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,\r\n                     from /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/numpy/core/include/numpy/arrayobject.h:4,\r\n                     from foo.c:2:\r\n    /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: #warning \"Using deprecated NumPy API, disable it with \" \"#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION\" [-Wcpp]\r\n       17 | #warning \"Using deprecated NumPy API, disable it with \" \\\r\n          |  ^~~~~~~\r\n    In file included from /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/numpy/core/include/numpy/ndarrayobject.h:21,\r\n                     from /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/numpy/core/include/numpy/arrayobject.h:4,\r\n                     from foo.c:2:\r\n    foo.c: In function 'bar':\r\n    /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/numpy/core/include/numpy/__multiarray_api.h:642:23: error: dereferencing pointer to incomplete type 'PyTypeObject' {aka 'struct _typeobject'}\r\n      642 | #define PyArray_Type (*(PyTypeObject *)PyArray_API[2])\r\n          |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/numpy/core/include/numpy/ndarrayobject.h:125:31: note: in expansion of macro 'PyArray_Type'\r\n      125 |         PyArray_NewFromDescr(&PyArray_Type, descr, nd, dims, \\\r\n          |                               ^~~~~~~~~~~~\r\n    foo.c:19:12: note: in expansion of macro 'PyArray_SimpleNewFromDescr'\r\n       19 |     return PyArray_SimpleNewFromDescr(1, dims, descr);\r\n          |            ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    foo.c:20:1: warning: control reaches end of non-void function [-Wreturn-type]\r\n       20 | }\r\n          | ^\r\n    error: command 'gcc' failed with exit status 1\r\n    ----------------------------------------\r\n  Rolling back uninstall of numpy-descr-limited-api-example\r\n  Moving to /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/foo.cpython-38-darwin.so\r\n   from /private/var/folders/cs/pwq97bws17d2p8qcp410gs7c84mbdz/T/pip-uninstall-78_wo8n6/foo.cpython-38-darwin.so\r\n  Moving to /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/numpy_descr_limited_api_example-0.0.0-py3.8.egg-info\r\n   from /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/lib/python3.8/site-packages/~umpy_descr_limited_api_example-0.0.0-py3.8.egg-info\r\nERROR: Command errored out with exit status 1: /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/bin/python3 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/private/var/folders/cs/pwq97bws17d2p8qcp410gs7c84mbdz/T/pip-req-build-_dx9jmw9/setup.py'\"'\"'; __file__='\"'\"'/private/var/folders/cs/pwq97bws17d2p8qcp410gs7c84mbdz/T/pip-req-build-_dx9jmw9/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /private/var/folders/cs/pwq97bws17d2p8qcp410gs7c84mbdz/T/pip-record-8ur13b4e/install-record.txt --single-version-externally-managed --compile --install-headers /Users/lpsinger/Desktop/numpy-descr-limited-api-example/env/include/site/python3.8/numpy-descr-limited-api-example Check the logs for full command output.\r\n```\r\n\r\n#### Successful output with full Python API\r\n\r\n```\r\n$ env CC=gcc pip install . && python -c 'import foo; print(repr(foo.bar()))'\r\nProcessing /Users/lpsinger/Desktop/numpy-descr-limited-api-example\r\nUsing legacy setup.py install for numpy-descr-limited-api-example, since package 'wheel' is not installed.\r\nInstalling collected packages: numpy-descr-limited-api-example\r\n  Attempting uninstall: numpy-descr-limited-api-example\r\n    Found existing installation: numpy-descr-limited-api-example 0.0.0\r\n    Uninstalling numpy-descr-limited-api-example-0.0.0:\r\n      Successfully uninstalled numpy-descr-limited-api-example-0.0.0\r\n    Running setup.py install for numpy-descr-limited-api-example ... done\r\nSuccessfully installed numpy-descr-limited-api-example-0.0.0\r\narray([(3.10503618e+231, 8070450532247928832),\r\n       (4.70372193e+000, 4613349226564724111),\r\n       (2.73861279e+000, 4613349226564724111),\r\n       (2.23606798e+000, 4612217596255138984),\r\n       (2.23606798e+000,    1608428438346624),\r\n       (4.70372193e+000, 4613349226564724111),\r\n       (2.23606798e+000, 4616981938510815294),\r\n       (2.73861279e+000, 4612217596255138984),\r\n       (4.70372193e+000, 4613349226564724111),\r\n       (2.23606798e+000,    2814754097651120)],\r\n      dtype=[('bat', '<f8'), ('baz', '<i8')])\r\n```\r\n\r\n### Numpy/Python version information:\r\n\r\n```pycon\r\n>>> import sys, numpy; print(numpy.__version__, sys.version)\r\n1.19.1 3.8.5 (default, Jul 21 2020, 18:31:18) \r\n[Clang 11.0.3 (clang-1103.0.32.62)]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16958", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16958/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16958/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16958/events", "html_url": "https://github.com/numpy/numpy/issues/16958", "id": 666564801, "node_id": "MDU6SXNzdWU2NjY1NjQ4MDE=", "number": 16958, "title": "histogramdd: maximum supported dimension for an ndarray is 32", "user": {"login": "sumanthratna", "id": 31281983, "node_id": "MDQ6VXNlcjMxMjgxOTgz", "avatar_url": "https://avatars1.githubusercontent.com/u/31281983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumanthratna", "html_url": "https://github.com/sumanthratna", "followers_url": "https://api.github.com/users/sumanthratna/followers", "following_url": "https://api.github.com/users/sumanthratna/following{/other_user}", "gists_url": "https://api.github.com/users/sumanthratna/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumanthratna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumanthratna/subscriptions", "organizations_url": "https://api.github.com/users/sumanthratna/orgs", "repos_url": "https://api.github.com/users/sumanthratna/repos", "events_url": "https://api.github.com/users/sumanthratna/events{/privacy}", "received_events_url": "https://api.github.com/users/sumanthratna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-27T20:29:43Z", "updated_at": "2020-07-29T19:19:25Z", "closed_at": "2020-07-28T22:07:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a 2-D matrix with 64 columns and 12 rows. Each row represents a coordinate in a 64-dimension space. I'd like to histogram this data using `np.histogramdd`, but I'm unable to due to `ValueError: maximum supported dimension for an ndarray is 32, found 64`. \r\n\r\n### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\n\r\n\r\nmydata = np.random.randn(12, 64)\r\nhist, edges = np.histogramdd(mydata)\r\n```\r\n\r\n### Error message:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"myproblem.py\", line 4, in <module>\r\n    hist, edges = np.histogramdd(mydata, bins=2)\r\n  File \"<__array_function__ internals>\", line 5, in histogramdd\r\n  File \"/private/tmp/venv/lib/python3.8/site-packages/numpy/lib/histograms.py\", line 1090, in histogramdd\r\n    xy = np.ravel_multi_index(Ncount, nbin)\r\n  File \"<__array_function__ internals>\", line 5, in ravel_multi_index\r\nValueError: maximum supported dimension for an ndarray is 32, found 64\r\n```\r\n\r\n### Numpy/Python version information:\r\n```\r\n1.19.1 3.8.2 (v3.8.2:7b3ab5921f, Feb 24 2020, 17:52:18) \r\n[Clang 6.0 (clang-600.0.57)]\r\n```\r\n\r\nCC @sagarg22\r\n\r\nedit:\r\n\r\nit looks like this is known\r\nhttps://github.com/numpy/numpy/blob/92ebe1e9a6aeb47a881a1226b08218175776f9ea/numpy/lib/histograms.py#L1088-L1090\r\n\r\nI'm still unsure of how to solve this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16954", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16954/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16954/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16954/events", "html_url": "https://github.com/numpy/numpy/issues/16954", "id": 666303741, "node_id": "MDU6SXNzdWU2NjYzMDM3NDE=", "number": 16954, "title": "New(?) test fails in 1.19", "user": {"login": "mboisson", "id": 7515242, "node_id": "MDQ6VXNlcjc1MTUyNDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7515242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mboisson", "html_url": "https://github.com/mboisson", "followers_url": "https://api.github.com/users/mboisson/followers", "following_url": "https://api.github.com/users/mboisson/following{/other_user}", "gists_url": "https://api.github.com/users/mboisson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mboisson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mboisson/subscriptions", "organizations_url": "https://api.github.com/users/mboisson/orgs", "repos_url": "https://api.github.com/users/mboisson/repos", "events_url": "https://api.github.com/users/mboisson/events{/privacy}", "received_events_url": "https://api.github.com/users/mboisson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-27T13:39:35Z", "updated_at": "2020-07-27T14:03:48Z", "closed_at": "2020-07-27T14:03:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are building a Numpy python wheel from source, and binding it to a version of MKL that is installed on our cluster. Since Numpy 1.19, a single test fails when running `numpy.test()` : \r\n\r\n```\r\n>           assert info.get_lib_dirs() == lib_dirs\r\nE           AssertionError: assert ['/cvmfs/soft.../lib/intel64'] == ['/tmp/tmpwmv.../tmprf9ssim6']\r\nE             At index 0 diff: '/cvmfs/soft.computecanada.ca/easybuild/software/2017/Core/imkl/2019.2.187/mkl/lib/intel64' != '/tmp/tmpwmvc9p10'\r\nE             Right contains one more item: '/tmp/tmprf9ssim6'\r\nE             Full diff:\r\nE             - ['/tmp/tmpwmvc9p10', '/tmp/tmprf9ssim6']\r\nE             + ['/cvmfs/soft.computecanada.ca/easybuild/software/2017/Core/imkl/2019.2.187/mkl/lib/intel64']\r\n``` \r\n\r\nNow, obviously, the path returned by `info.get_lib_dirs()` is the correct one, it should not find libraries in `/tmp/...`. \r\n\r\nWhy is this test failing ?\r\n\r\nNote that 10895 other tests pass correctly. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16947", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16947/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16947/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16947/events", "html_url": "https://github.com/numpy/numpy/issues/16947", "id": 665827843, "node_id": "MDU6SXNzdWU2NjU4Mjc4NDM=", "number": 16947, "title": "TravisCI aarch64 job is testing x86_64 not arm64", "user": {"login": "rth", "id": 630936, "node_id": "MDQ6VXNlcjYzMDkzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/630936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rth", "html_url": "https://github.com/rth", "followers_url": "https://api.github.com/users/rth/followers", "following_url": "https://api.github.com/users/rth/following{/other_user}", "gists_url": "https://api.github.com/users/rth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rth/subscriptions", "organizations_url": "https://api.github.com/users/rth/orgs", "repos_url": "https://api.github.com/users/rth/repos", "events_url": "https://api.github.com/users/rth/events{/privacy}", "received_events_url": "https://api.github.com/users/rth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-26T17:43:15Z", "updated_at": "2020-07-28T13:25:02Z", "closed_at": "2020-07-28T13:25:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Unless I'm missing something the [aarch64 TravisCI job](https://github.com/numpy/numpy/blob/1ce54575b17071d40e4c1519007b2ec7d9a1b6d3/.travis.yml#L114) is actually running a x86_64/amd64 VM, not an ARM one. \r\n\r\nThis can be seen for instance by the wheels names that are downloaded to run tests in CI,\r\n```\r\n Using cached mypy-0.782-cp37-cp37m-manylinux1_x86_64.whl (20.8 MB)\r\n```\r\n(unlike for e.g. s390x or ppc64le jobs).\r\n\r\nThe fix would be to specify \"arm64\" instead of \"aarch64\" in `.travis.yml`. \r\n\r\nThis is due to an unfortunate approach by TravisCI to fall back to amd64 for unsupported architectures, instead of failing (as documented in their docs). The \"aarch64\" shown in the UI does not seem reliable either, but one can use `$TRAVIS_CPU_ARCH` environment variable to  double check.\r\n\r\nMaybe they renamed this arch at some point, not sure.\r\n\r\nDiscovered while trying to add a similar setup in https://github.com/scikit-learn/scikit-learn/pull/17996\r\n\r\ncc @mattip \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16932", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16932/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16932/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16932/events", "html_url": "https://github.com/numpy/numpy/issues/16932", "id": 664373292, "node_id": "MDU6SXNzdWU2NjQzNzMyOTI=", "number": 16932, "title": "pylint thinks that `log1p` doesn't return", "user": {"login": "tom-programming", "id": 29755050, "node_id": "MDQ6VXNlcjI5NzU1MDUw", "avatar_url": "https://avatars3.githubusercontent.com/u/29755050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tom-programming", "html_url": "https://github.com/tom-programming", "followers_url": "https://api.github.com/users/tom-programming/followers", "following_url": "https://api.github.com/users/tom-programming/following{/other_user}", "gists_url": "https://api.github.com/users/tom-programming/gists{/gist_id}", "starred_url": "https://api.github.com/users/tom-programming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tom-programming/subscriptions", "organizations_url": "https://api.github.com/users/tom-programming/orgs", "repos_url": "https://api.github.com/users/tom-programming/repos", "events_url": "https://api.github.com/users/tom-programming/events{/privacy}", "received_events_url": "https://api.github.com/users/tom-programming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-23T10:41:48Z", "updated_at": "2020-07-23T14:52:34Z", "closed_at": "2020-07-23T14:52:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "When linting the code any assignment from  `log1p` will produce a linter warning that the function call does not return. Nothing happens with other functions such as `log10`.\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\ntest = np.log1p(9.5)\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\nAssigning to function call which doesn't return\r\npylint(assignment-from-no-return)\r\n\r\n### Numpy/Python version information:\r\n\r\n1.18.5 3.6.10 (default, Mar  5 2020, 10:17:47) [MSC v.1900 64 bit (AMD64)]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16929", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16929/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16929/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16929/events", "html_url": "https://github.com/numpy/numpy/issues/16929", "id": 664159890, "node_id": "MDU6SXNzdWU2NjQxNTk4OTA=", "number": 16929, "title": "ENH : Handle trignometry identities in norm", "user": {"login": "Yukti-09", "id": 44090430, "node_id": "MDQ6VXNlcjQ0MDkwNDMw", "avatar_url": "https://avatars3.githubusercontent.com/u/44090430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yukti-09", "html_url": "https://github.com/Yukti-09", "followers_url": "https://api.github.com/users/Yukti-09/followers", "following_url": "https://api.github.com/users/Yukti-09/following{/other_user}", "gists_url": "https://api.github.com/users/Yukti-09/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yukti-09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yukti-09/subscriptions", "organizations_url": "https://api.github.com/users/Yukti-09/orgs", "repos_url": "https://api.github.com/users/Yukti-09/repos", "events_url": "https://api.github.com/users/Yukti-09/events{/privacy}", "received_events_url": "https://api.github.com/users/Yukti-09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T02:21:30Z", "updated_at": "2020-07-23T05:35:28Z", "closed_at": "2020-07-23T05:19:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "import numpy as np\r\nfrom sympy import *\r\na = symbols('a')\r\nb = symbols('b')\r\nc = symbols('c')\r\nx = Matrix([a*cos(b),a*sin(b),c])\r\nprint(x.norm())\r\n\r\nGives an output \r\nsqrt(Abs(c)**2 + Abs(a*sin(b))**2 + Abs(a*cos(b))**2)\r\nOutput we are supposed to get sqrt(Abs(c)**2+Abs(a)**2)\r\n\r\n@mattip @eric-wieser ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16928", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16928/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16928/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16928/events", "html_url": "https://github.com/numpy/numpy/issues/16928", "id": 663893618, "node_id": "MDU6SXNzdWU2NjM4OTM2MTg=", "number": 16928, "title": "Error in visual studio code related to numpy", "user": {"login": "deep3125", "id": 57722368, "node_id": "MDQ6VXNlcjU3NzIyMzY4", "avatar_url": "https://avatars0.githubusercontent.com/u/57722368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deep3125", "html_url": "https://github.com/deep3125", "followers_url": "https://api.github.com/users/deep3125/followers", "following_url": "https://api.github.com/users/deep3125/following{/other_user}", "gists_url": "https://api.github.com/users/deep3125/gists{/gist_id}", "starred_url": "https://api.github.com/users/deep3125/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deep3125/subscriptions", "organizations_url": "https://api.github.com/users/deep3125/orgs", "repos_url": "https://api.github.com/users/deep3125/repos", "events_url": "https://api.github.com/users/deep3125/events{/privacy}", "received_events_url": "https://api.github.com/users/deep3125/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-22T16:29:29Z", "updated_at": "2020-08-01T14:56:54Z", "closed_at": "2020-07-22T16:38:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "While importing matplotlib in visual studio code(if I open visual studio directly) may be related to NumPy however if I open it through anaconda or any other ide then it works fine.\r\n\r\n### Reproducing code example:\r\n```python\r\nimport numpy as np\r\n<< import matplotlib.pyplot as plt>>\r\n```\r\n\r\n### Error message:\r\n UserWarning: mkl-service package failed to import, therefore Intel(R) MKL initialization ensuring its correct out-of-the box operation under condition when Gnu OpenMP had already been loaded by Python process is not assured. Please install mkl-service package, see http://github.com/IntelPython/mkl-service\r\n  from . import _distributor_init\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\deepk\\anaconda3\\lib\\site-packages\\numpy\\core\\__init__.py\", line 24, in <module>\r\n    from . import multiarray\r\n  File \"C:\\Users\\deepk\\anaconda3\\lib\\site-packages\\numpy\\core\\multiarray.py\", line 14, in <module>\r\n    from . import overrides\r\n  File \"C:\\Users\\deepk\\anaconda3\\lib\\site-packages\\numpy\\core\\overrides.py\", line 7, in <module>\r\n    from numpy.core._multiarray_umath import (\r\nImportError: DLL load failed: The specified module could not be found.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:/Users/deepk/OneDrive/Documents/Python Scripts/imp/my work/python/projects/random_walk.py\", line 1, in <module>\r\n    import matplotlib.pyplot as plt\r\n  File \"C:\\Users\\deepk\\anaconda3\\lib\\site-packages\\matplotlib\\__init__.py\", line 139, in <module>\r\n    from . import cbook, rcsetup\r\n  File \"C:\\Users\\deepk\\anaconda3\\lib\\site-packages\\matplotlib\\cbook\\__init__.py\", line 32, in <module>\r\n    import numpy as np\r\n  File \"C:\\Users\\deepk\\anaconda3\\lib\\site-packages\\numpy\\__init__.py\", line 142, in <module>\r\n    from . import core\r\n  File \"C:\\Users\\deepk\\anaconda3\\lib\\site-packages\\numpy\\core\\__init__.py\", line 54, in <module>\r\n    raise ImportError(msg)\r\nImportError:\r\n\r\nIMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!\r\n\r\nImporting the numpy c-extensions failed.\r\n- Try uninstalling and reinstalling numpy.\r\n- If you have already done that, then:\r\n  1. Check that you expected to use Python3.7 from \"C:\\Users\\deepk\\anaconda3\\python.exe\",\r\n     and that you have no directories in your PATH or PYTHONPATH that can\r\n     interfere with the Python and numpy version \"1.18.1\" you're trying to use.\r\n  2. If (1) looks fine, you can open a new issue at\r\n     https://github.com/numpy/numpy/issues.  Please include details on:\r\n     - how you installed Python\r\n     - how you installed numpy\r\n     - your operating system\r\n     - whether or not you have multiple versions of Python installed\r\n     - if you built from source, your compiler versions and ideally a build log\r\n\r\n- If you're working with a numpy git repository, try `git clean -xdf`\r\n  (removes all files not under version control) and rebuild numpy.\r\n\r\nNote: this error has many possible causes, so please don't comment on\r\nan existing issue about this - open a new one instead.\r\n\r\nOriginal error was: DLL load failed: The specified module could not be found.\r\n\r\n\r\n### Numpy/Python version information:Using anaconda\r\n\r\nnumpy version: 1.18.1\r\nPython version:3.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16927", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16927/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16927/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16927/events", "html_url": "https://github.com/numpy/numpy/issues/16927", "id": 663490288, "node_id": "MDU6SXNzdWU2NjM0OTAyODg=", "number": 16927, "title": "ENH: handle SymPy objects in NumPy", "user": {"login": "Yukti-09", "id": 44090430, "node_id": "MDQ6VXNlcjQ0MDkwNDMw", "avatar_url": "https://avatars3.githubusercontent.com/u/44090430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yukti-09", "html_url": "https://github.com/Yukti-09", "followers_url": "https://api.github.com/users/Yukti-09/followers", "following_url": "https://api.github.com/users/Yukti-09/following{/other_user}", "gists_url": "https://api.github.com/users/Yukti-09/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yukti-09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yukti-09/subscriptions", "organizations_url": "https://api.github.com/users/Yukti-09/orgs", "repos_url": "https://api.github.com/users/Yukti-09/repos", "events_url": "https://api.github.com/users/Yukti-09/events{/privacy}", "received_events_url": "https://api.github.com/users/Yukti-09/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359239, "node_id": "MDU6TGFiZWw2MzU5MjM5", "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement", "name": "01 - Enhancement", "color": "fef2c0", "default": false, "description": null}, {"id": 6359352, "node_id": "MDU6TGFiZWw2MzU5MzUy", "url": "https://api.github.com/repos/numpy/numpy/labels/23%20-%20Wish%20List", "name": "23 - Wish List", "color": "fef2c0", "default": false, "description": null}, {"id": 81818822, "node_id": "MDU6TGFiZWw4MTgxODgyMg==", "url": "https://api.github.com/repos/numpy/numpy/labels/57%20-%20Close?", "name": "57 - Close?", "color": "207de5", "default": false, "description": "Issues which may be closable unless discussion continued"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-22T05:42:13Z", "updated_at": "2020-07-22T09:57:09Z", "closed_at": "2020-07-22T09:54:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "import numpy as np\r\nfrom sympy import *\r\na = symbols(a)\r\nb = symbols(b)\r\nc = symbols(c)\r\nx = [a b c]\r\nprint(np.linalg.norm(x))\r\n\r\nI should get something like sqrt(a^2+b^2+c^2)\r\nInstead, I get SyntaxError: invalid syntax.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16926", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16926/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16926/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16926/events", "html_url": "https://github.com/numpy/numpy/issues/16926", "id": 663415463, "node_id": "MDU6SXNzdWU2NjM0MTU0NjM=", "number": 16926, "title": "Funky vstack", "user": {"login": "Atcold", "id": 2119355, "node_id": "MDQ6VXNlcjIxMTkzNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2119355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Atcold", "html_url": "https://github.com/Atcold", "followers_url": "https://api.github.com/users/Atcold/followers", "following_url": "https://api.github.com/users/Atcold/following{/other_user}", "gists_url": "https://api.github.com/users/Atcold/gists{/gist_id}", "starred_url": "https://api.github.com/users/Atcold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Atcold/subscriptions", "organizations_url": "https://api.github.com/users/Atcold/orgs", "repos_url": "https://api.github.com/users/Atcold/repos", "events_url": "https://api.github.com/users/Atcold/events{/privacy}", "received_events_url": "https://api.github.com/users/Atcold/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-22T01:57:15Z", "updated_at": "2020-07-24T15:13:53Z", "closed_at": "2020-07-22T18:32:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "From `vstack` docs:\r\n\r\n> Signature: `hstack(tup)`\r\n> Docstring:\r\n> Stack arrays in sequence horizontally (column wise).\r\n>\r\n>This is equivalent to concatenation along the second axis, except for 1-D\r\n> arrays where it concatenates along the first axis.\r\n\r\nMy question is *why the exception*???\r\nWe already have `concatenate()`.\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nv = rand(5)\r\nconcatenate((v, v)).shape\r\n(10,)\r\n\r\nhstack((v, v)).shape\r\n(10,)\r\n\r\nstack((v, v), axis=1).shape\r\n(5, 2)\r\n\r\nvstack((v, v)).shape\r\n(2, 5)\r\n\r\nstack((v, v), axis=0).shape\r\n(2, 5)\r\n```\r\n\r\nIt would make much more sense to have `vstack = stack(axis=1)`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16918", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16918/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16918/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16918/events", "html_url": "https://github.com/numpy/numpy/issues/16918", "id": 662395903, "node_id": "MDU6SXNzdWU2NjIzOTU5MDM=", "number": 16918, "title": "Invalid Statement in Documentation", "user": {"login": "spaceofmiah", "id": 37231237, "node_id": "MDQ6VXNlcjM3MjMxMjM3", "avatar_url": "https://avatars2.githubusercontent.com/u/37231237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spaceofmiah", "html_url": "https://github.com/spaceofmiah", "followers_url": "https://api.github.com/users/spaceofmiah/followers", "following_url": "https://api.github.com/users/spaceofmiah/following{/other_user}", "gists_url": "https://api.github.com/users/spaceofmiah/gists{/gist_id}", "starred_url": "https://api.github.com/users/spaceofmiah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spaceofmiah/subscriptions", "organizations_url": "https://api.github.com/users/spaceofmiah/orgs", "repos_url": "https://api.github.com/users/spaceofmiah/repos", "events_url": "https://api.github.com/users/spaceofmiah/events{/privacy}", "received_events_url": "https://api.github.com/users/spaceofmiah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T00:03:36Z", "updated_at": "2020-07-21T00:31:57Z", "closed_at": "2020-07-21T00:11:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm just starting out with numpy. Going through the documentation's [The Basic Quickstart Section](https://numpy.org/devdocs/user/quickstart.html#the-basics) . From the explanation there, i'm not quite sure if what is said is correct.\r\n\r\n*Incorrect Statement*\r\n\r\nIn the example pictured below, the array has 2 axes. The first axis has a length of 2, the second axis has a length of 3.\r\n\r\n*What i think should be the Correct Statement (i'm open to correction if i'm wrong)*\r\n\r\nIn the example pictured below, the array has 2 axes. The first axis has a length of 3, the second axis has a length of 3.\r\n\r\n```\r\n[[ 1., 0., 0.],\r\n [ 0., 1., 2.]]\r\n```\r\n\r\nBut why do i have this doubt ?\r\n\r\n```\r\nimport numpy as np\r\ndoc_array = np.array(\r\n    [[ 1., 0., 0.],\r\n    [ 0., 1., 2.]]\r\n)\r\n\r\n# According to documentation ndarray.ndim\r\n# returns the number of axes (dimensions) of the array.\r\n\r\ndoc_array.ndim                               // output : 2 ( which is correct )\r\n\r\n# According to documentation ndarray.size\r\n# returns the total number of elements of the array. This is equal to the product of the elements of shape.\r\n\r\ndoc_array[0].size                             // output: 3  (which negates the statement on the documentation)\r\ndoc_array[1].size                             // output: 3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16915", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16915/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16915/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16915/events", "html_url": "https://github.com/numpy/numpy/issues/16915", "id": 662193548, "node_id": "MDU6SXNzdWU2NjIxOTM1NDg=", "number": 16915, "title": "BUG: loadtxt with dtype=np.complex64 fails.", "user": {"login": "WarrenWeckesser", "id": 321463, "node_id": "MDQ6VXNlcjMyMTQ2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/321463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WarrenWeckesser", "html_url": "https://github.com/WarrenWeckesser", "followers_url": "https://api.github.com/users/WarrenWeckesser/followers", "following_url": "https://api.github.com/users/WarrenWeckesser/following{/other_user}", "gists_url": "https://api.github.com/users/WarrenWeckesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/WarrenWeckesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WarrenWeckesser/subscriptions", "organizations_url": "https://api.github.com/users/WarrenWeckesser/orgs", "repos_url": "https://api.github.com/users/WarrenWeckesser/repos", "events_url": "https://api.github.com/users/WarrenWeckesser/events{/privacy}", "received_events_url": "https://api.github.com/users/WarrenWeckesser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359214, "node_id": "MDU6TGFiZWw2MzU5MjE0", "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug", "name": "00 - Bug", "color": "fef2c0", "default": false, "description": null}, {"id": 16917082, "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib", "name": "component: numpy.lib", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-20T19:44:58Z", "updated_at": "2020-07-21T05:52:06Z", "closed_at": "2020-07-21T05:52:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`numpy.loadtxt` can read complex values if the given dtype is `complex`  or `numpy.complex128`:\r\n\r\n```\r\nIn [16]: from io import StringIO                                                \r\n\r\nIn [17]: import numpy as np                                                     \r\n\r\nIn [18]: np.loadtxt(StringIO('1+1j 2-3j'), dtype=complex)                       \r\nOut[18]: array([1.+1.j, 2.-3.j])\r\n\r\nIn [19]: np.loadtxt(StringIO('1+1j 2-3j'), dtype=np.complex128)                 \r\nOut[19]: array([1.+1.j, 2.-3.j])\r\n```\r\nBut it raises an exception with `dtype=np.complex64`:\r\n```\r\nIn [20]: np.loadtxt(StringIO('1+1j 2-3j'), dtype=np.complex64)                  \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-20-2a6a07b02034> in <module>\r\n----> 1 np.loadtxt(StringIO('1+1j 2-3j'), dtype=np.complex64)\r\n\r\n~/mc37npdev/lib/python3.7/site-packages/numpy-1.20.0.dev0+bed8574-py3.7-macosx-10.9-x86_64.egg/numpy/lib/npyio.py in loadtxt(fname, dtype, comments, delimiter, converters, skiprows, usecols, unpack, ndmin, encoding, max_rows)\r\n   1160         for x in read_data(_loadtxt_chunksize):\r\n   1161             if X is None:\r\n-> 1162                 X = np.array(x, dtype)\r\n   1163             else:\r\n   1164                 nshape = list(X.shape)\r\n\r\nTypeError: must be real number, not str\r\n```\r\nVersion info:\r\n```\r\nIn [21]: np.__version__                                                         \r\nOut[21]: '1.20.0.dev0+bed8574'\r\n\r\nIn [22]: import sys                                                             \r\n\r\nIn [23]: sys.version                                                            \r\nOut[23]: '3.7.7 (default, May  6 2020, 04:59:01) \\n[Clang 4.0.1 (tags/RELEASE_401/final)]'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16913", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16913/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16913/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16913/events", "html_url": "https://github.com/numpy/numpy/issues/16913", "id": 662048296, "node_id": "MDU6SXNzdWU2NjIwNDgyOTY=", "number": 16913, "title": "Error on Azure CI (Windows instance) with numpy 1.19.0", "user": {"login": "mrava87", "id": 22675848, "node_id": "MDQ6VXNlcjIyNjc1ODQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/22675848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrava87", "html_url": "https://github.com/mrava87", "followers_url": "https://api.github.com/users/mrava87/followers", "following_url": "https://api.github.com/users/mrava87/following{/other_user}", "gists_url": "https://api.github.com/users/mrava87/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrava87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrava87/subscriptions", "organizations_url": "https://api.github.com/users/mrava87/orgs", "repos_url": "https://api.github.com/users/mrava87/repos", "events_url": "https://api.github.com/users/mrava87/events{/privacy}", "received_events_url": "https://api.github.com/users/mrava87/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 546378754, "node_id": "MDU6TGFiZWw1NDYzNzg3NTQ=", "url": "https://api.github.com/repos/numpy/numpy/labels/09%20-%20Backport-Candidate", "name": "09 - Backport-Candidate", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/numpy/numpy/milestones/85", "html_url": "https://github.com/numpy/numpy/milestone/85", "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/85/labels", "id": 5672124, "node_id": "MDk6TWlsZXN0b25lNTY3MjEyNA==", "number": 85, "title": "1.19.2 release", "description": "", "creator": {"login": "charris", "id": 77272, "node_id": "MDQ6VXNlcjc3Mjcy", "avatar_url": "https://avatars3.githubusercontent.com/u/77272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charris", "html_url": "https://github.com/charris", "followers_url": "https://api.github.com/users/charris/followers", "following_url": "https://api.github.com/users/charris/following{/other_user}", "gists_url": "https://api.github.com/users/charris/gists{/gist_id}", "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charris/subscriptions", "organizations_url": "https://api.github.com/users/charris/orgs", "repos_url": "https://api.github.com/users/charris/repos", "events_url": "https://api.github.com/users/charris/events{/privacy}", "received_events_url": "https://api.github.com/users/charris/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 4, "state": "open", "created_at": "2020-07-19T17:18:34Z", "updated_at": "2020-08-05T22:58:47Z", "due_on": null, "closed_at": null}, "comments": 51, "created_at": "2020-07-20T17:04:13Z", "updated_at": "2020-07-24T15:14:53Z", "closed_at": "2020-07-24T11:06:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\nHello,\r\nI have recently started experiencing problems when running tests for my project on Azure Pipelines with a Windows instance (``vmImage: 'windows-2019'``). Digging a little bit deeper (see this conversation https://developercommunity.visualstudio.com/content/problem/1102472/azure-pipeline-error-with-windows-vm.html?childToView=1119179#comment-1119179) we realised that the problem originated when we install ``numpy 1.19.0`` instead of ``numpy 1.8.5`` - I can see that  ``numpy 1.19.0`` was put on PyPI on June 20 and this is around the time when our tests started to fail. Forcing the environment to install ``numpy 1.8.5`` as in previously successful builds seem to solve the problem. \r\n\r\nI just wanted to report this as I assume this is something others may have started observing (but it is quite hard to pin-point that numpy is the issue... or at least looks like it is). \r\n\r\nLooking forward to hearing from you,\r\nand happy to do any change to my azure pipeline setup if that can help troubleshooting the problem. \r\n\r\n\r\n### Error message:\r\n\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\nThis build works fine with numpy 1.18.5: https://dev.azure.com/matteoravasi/PyLops/_build/results?buildId=46&view=logs&j=011e1ec8-6569-5e69-4f06-baf193d1351e\r\nA build on the same commit with numpy 1.19.0 fails: https://dev.azure.com/matteoravasi/PyLops/_build/results?buildId=43&view=results\r\n\r\nThe error is very cryptic, what I explained above is more relevant I think. Here it is anyways:\r\n```\r\n2020-07-06T13:56:01.6879900Z Windows fatal exception: Current thread 0xaccess violation00001798\r\n2020-07-06T13:56:01.6880280Z \r\n2020-07-06T13:56:01.6880589Z  (most recent call first):\r\n2020-07-06T13:56:01.6880973Z   File \"<__array_function__ internals>\", line 6 in vdot\r\n2020-07-06T13:56:05.3412520Z ##[debug]Exit code: -1073741819\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16912", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16912/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16912/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16912/events", "html_url": "https://github.com/numpy/numpy/issues/16912", "id": 661921270, "node_id": "MDU6SXNzdWU2NjE5MjEyNzA=", "number": 16912, "title": "How to create node class for a tree structure with jitclass", "user": {"login": "rashid1844", "id": 47132147, "node_id": "MDQ6VXNlcjQ3MTMyMTQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/47132147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rashid1844", "html_url": "https://github.com/rashid1844", "followers_url": "https://api.github.com/users/rashid1844/followers", "following_url": "https://api.github.com/users/rashid1844/following{/other_user}", "gists_url": "https://api.github.com/users/rashid1844/gists{/gist_id}", "starred_url": "https://api.github.com/users/rashid1844/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rashid1844/subscriptions", "organizations_url": "https://api.github.com/users/rashid1844/orgs", "repos_url": "https://api.github.com/users/rashid1844/repos", "events_url": "https://api.github.com/users/rashid1844/events{/privacy}", "received_events_url": "https://api.github.com/users/rashid1844/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T14:57:54Z", "updated_at": "2020-07-20T22:53:49Z", "closed_at": "2020-07-20T15:30:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16909", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16909/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16909/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16909/events", "html_url": "https://github.com/numpy/numpy/issues/16909", "id": 661475247, "node_id": "MDU6SXNzdWU2NjE0NzUyNDc=", "number": 16909, "title": "1.19.0 cannot convert string into complex number", "user": {"login": "mhh0318", "id": 42776955, "node_id": "MDQ6VXNlcjQyNzc2OTU1", "avatar_url": "https://avatars1.githubusercontent.com/u/42776955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhh0318", "html_url": "https://github.com/mhh0318", "followers_url": "https://api.github.com/users/mhh0318/followers", "following_url": "https://api.github.com/users/mhh0318/following{/other_user}", "gists_url": "https://api.github.com/users/mhh0318/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhh0318/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhh0318/subscriptions", "organizations_url": "https://api.github.com/users/mhh0318/orgs", "repos_url": "https://api.github.com/users/mhh0318/repos", "events_url": "https://api.github.com/users/mhh0318/events{/privacy}", "received_events_url": "https://api.github.com/users/mhh0318/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359214, "node_id": "MDU6TGFiZWw2MzU5MjE0", "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug", "name": "00 - Bug", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/numpy/numpy/milestones/84", "html_url": "https://github.com/numpy/numpy/milestone/84", "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/84/labels", "id": 5431122, "node_id": "MDk6TWlsZXN0b25lNTQzMTEyMg==", "number": 84, "title": "1.19.1 release", "description": "", "creator": {"login": "charris", "id": 77272, "node_id": "MDQ6VXNlcjc3Mjcy", "avatar_url": "https://avatars3.githubusercontent.com/u/77272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charris", "html_url": "https://github.com/charris", "followers_url": "https://api.github.com/users/charris/followers", "following_url": "https://api.github.com/users/charris/following{/other_user}", "gists_url": "https://api.github.com/users/charris/gists{/gist_id}", "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charris/subscriptions", "organizations_url": "https://api.github.com/users/charris/orgs", "repos_url": "https://api.github.com/users/charris/repos", "events_url": "https://api.github.com/users/charris/events{/privacy}", "received_events_url": "https://api.github.com/users/charris/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 22, "state": "open", "created_at": "2020-05-16T23:22:58Z", "updated_at": "2020-07-21T17:53:52Z", "due_on": null, "closed_at": null}, "comments": 13, "created_at": "2020-07-20T07:22:51Z", "updated_at": "2020-07-20T21:49:47Z", "closed_at": "2020-07-20T21:49:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\nnumpy 1.19.0 cannot convert string to complex number.\r\nHowever, numpy 1.18.1 can perform the codes below correctly\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\nlist = ['3+4j', '1.23+4.56j', '0.123-1.234j', '0.234+0.456j', '1.123+0.432j']\r\nnp.array(list).astype(np.complex)\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\nTraceback (most recent call last):\r\n  File \"\\<stdin\\>\", line 1, in \\<module\\>\r\nTypeError: must be real number, not numpy.str_\r\n\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\n### Numpy/Python version information:\r\nnumpy version: 1.19.0\r\npython version: 3.7.6\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16902", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16902/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16902/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16902/events", "html_url": "https://github.com/numpy/numpy/issues/16902", "id": 660588887, "node_id": "MDU6SXNzdWU2NjA1ODg4ODc=", "number": 16902, "title": "Error in np.partition", "user": {"login": "cauchy7203", "id": 9944333, "node_id": "MDQ6VXNlcjk5NDQzMzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9944333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cauchy7203", "html_url": "https://github.com/cauchy7203", "followers_url": "https://api.github.com/users/cauchy7203/followers", "following_url": "https://api.github.com/users/cauchy7203/following{/other_user}", "gists_url": "https://api.github.com/users/cauchy7203/gists{/gist_id}", "starred_url": "https://api.github.com/users/cauchy7203/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cauchy7203/subscriptions", "organizations_url": "https://api.github.com/users/cauchy7203/orgs", "repos_url": "https://api.github.com/users/cauchy7203/repos", "events_url": "https://api.github.com/users/cauchy7203/events{/privacy}", "received_events_url": "https://api.github.com/users/cauchy7203/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-19T04:45:01Z", "updated_at": "2020-07-19T16:50:04Z", "closed_at": "2020-07-19T16:50:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\n<< your code here >>\r\na = np.array([46, 57, 23, 39, 1, 10, 0, 120])\r\nnp.partition(a,2)\r\n# result\r\narray([  0,   1,  10,  39,  57,  23,  46, 120])\r\n```\r\n\r\nAccording to the documentation *The k-th value of the element will be in its final sorted position.*\r\n\r\nBut notice that the `k` in this code is 2, *i. e.* the 3rd value `23` should be in its final sorted position, but the final sorted array is \r\n\r\n```python\r\nnp.sort(a)\r\n# result\r\narray([  0,   1,  10,  23,  39,  46,  57, 120])\r\n```\r\nThe original 3rd value is located in the **4-th** position in the sorted array, but the method `partition` put it in the **6-th** position.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16901", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16901/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16901/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16901/events", "html_url": "https://github.com/numpy/numpy/issues/16901", "id": 660486698, "node_id": "MDU6SXNzdWU2NjA0ODY2OTg=", "number": 16901, "title": "DOC: Update fill_diagonal docstring", "user": {"login": "rossbar", "id": 1268991, "node_id": "MDQ6VXNlcjEyNjg5OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1268991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rossbar", "html_url": "https://github.com/rossbar", "followers_url": "https://api.github.com/users/rossbar/followers", "following_url": "https://api.github.com/users/rossbar/following{/other_user}", "gists_url": "https://api.github.com/users/rossbar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rossbar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rossbar/subscriptions", "organizations_url": "https://api.github.com/users/rossbar/orgs", "repos_url": "https://api.github.com/users/rossbar/repos", "events_url": "https://api.github.com/users/rossbar/events{/privacy}", "received_events_url": "https://api.github.com/users/rossbar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-19T00:56:31Z", "updated_at": "2020-07-31T05:46:57Z", "closed_at": "2020-07-31T05:46:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current parameter description for `fill_diagonal` states that the fill value `val` must be a scalar. However, no input-checking is done on `val` and it turns out that array-likes with the same first dimension as `a` will also work, for example::\r\n\r\n```python\r\n>>> a = np.zeros((4, 5))\r\narray([[0., 0., 0., 0., 0.],\r\n       [0., 0., 0., 0., 0.],\r\n       [0., 0., 0., 0., 0.],\r\n       [0., 0., 0., 0., 0.]])\r\n>>> np.fill_diagonal(a, np.arange(a.shape[0]))\r\n>>> a\r\narray([[0., 0., 0., 0., 0.],\r\n       [0., 1., 0., 0., 0.],\r\n       [0., 0., 2., 0., 0.],\r\n       [0., 0., 0., 3., 0.]])\r\n```\r\n\r\nThere are also already some examples in the docstring that use lists to fill the diagonal.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16898", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16898/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16898/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16898/events", "html_url": "https://github.com/numpy/numpy/issues/16898", "id": 660299465, "node_id": "MDU6SXNzdWU2NjAyOTk0NjU=", "number": 16898, "title": "Implement GitHub actions `take` command as in pandas for assigning issues", "user": {"login": "leeyspaul", "id": 16315857, "node_id": "MDQ6VXNlcjE2MzE1ODU3", "avatar_url": "https://avatars0.githubusercontent.com/u/16315857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leeyspaul", "html_url": "https://github.com/leeyspaul", "followers_url": "https://api.github.com/users/leeyspaul/followers", "following_url": "https://api.github.com/users/leeyspaul/following{/other_user}", "gists_url": "https://api.github.com/users/leeyspaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/leeyspaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leeyspaul/subscriptions", "organizations_url": "https://api.github.com/users/leeyspaul/orgs", "repos_url": "https://api.github.com/users/leeyspaul/repos", "events_url": "https://api.github.com/users/leeyspaul/events{/privacy}", "received_events_url": "https://api.github.com/users/leeyspaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-18T18:22:59Z", "updated_at": "2020-07-18T19:07:52Z", "closed_at": "2020-07-18T18:56:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that [pandas](https://github.com/pandas-dev/pandas/issues/32301) uses GitHub Actions to assign issues automatically to contributors who want to take on issues instead of the original \"can I take this?\" flow.\r\n\r\nI wanted to raise an issue here for community feedback/thoughts on implementing the same workflow here! \r\n\r\nThank you :)!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16893", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16893/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16893/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16893/events", "html_url": "https://github.com/numpy/numpy/issues/16893", "id": 659996867, "node_id": "MDU6SXNzdWU2NTk5OTY4Njc=", "number": 16893, "title": "ENH: A very fast algorithm for computing matrix rank", "user": {"login": "touqir14", "id": 6683928, "node_id": "MDQ6VXNlcjY2ODM5Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6683928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/touqir14", "html_url": "https://github.com/touqir14", "followers_url": "https://api.github.com/users/touqir14/followers", "following_url": "https://api.github.com/users/touqir14/following{/other_user}", "gists_url": "https://api.github.com/users/touqir14/gists{/gist_id}", "starred_url": "https://api.github.com/users/touqir14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/touqir14/subscriptions", "organizations_url": "https://api.github.com/users/touqir14/orgs", "repos_url": "https://api.github.com/users/touqir14/repos", "events_url": "https://api.github.com/users/touqir14/events{/privacy}", "received_events_url": "https://api.github.com/users/touqir14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-18T08:11:17Z", "updated_at": "2020-07-18T09:42:48Z", "closed_at": "2020-07-18T09:42:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\ude80 Feature\r\nI have devised an LUP based [matrix rank computing algorithm](https://github.com/touqir14/LUP-rank-computer) that outperforms significantly the standard Numpy's [matrix_rank](https://numpy.org/doc/stable/reference/generated/numpy.linalg.matrix_rank.html) function and PyTorch's GPU accelerated [matrix_rank](https://pytorch.org/docs/master/generated/torch.matrix_rank.html) algorithm for most cases. For instance, for UAR generated 15000 x 15000 matrices, it offers a speedup of about 25 times over Numpy's matrix_rank. See the [benchmarks](https://github.com/touqir14/LUP-rank-computer/blob/master/README.md). Unlike the LU factorization, LUP is stable in practice and I have thoroughly tested the correctness of my implementation.\r\n## Motivation\r\n\r\nComputing the matrix rank using Numpy's matrix_rank function can be rather slow, particularly if one deals with large matrices and needs to run multiple times for at least tens of times. This motivated me to come up with a much faster approach than the SVD method used in Numpy's matrix_rank.\r\n## Pitch\r\n\r\nI would like to consider the prospect of implementing this as a Numpy function. My implementation uses scipy's [LUP](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.lu.html) function and a couple of Cython optimized functions along with the standard Numpy matrix operations. \r\n\r\nLet me know if you need to know more about the algorithm's specifics and testing/benchmarks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16892", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16892/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16892/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16892/events", "html_url": "https://github.com/numpy/numpy/issues/16892", "id": 659708365, "node_id": "MDU6SXNzdWU2NTk3MDgzNjU=", "number": 16892, "title": "DOC: Testing Guidelines focuses on SciPy", "user": {"login": "melissawm", "id": 3949932, "node_id": "MDQ6VXNlcjM5NDk5MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3949932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/melissawm", "html_url": "https://github.com/melissawm", "followers_url": "https://api.github.com/users/melissawm/followers", "following_url": "https://api.github.com/users/melissawm/following{/other_user}", "gists_url": "https://api.github.com/users/melissawm/gists{/gist_id}", "starred_url": "https://api.github.com/users/melissawm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/melissawm/subscriptions", "organizations_url": "https://api.github.com/users/melissawm/orgs", "repos_url": "https://api.github.com/users/melissawm/repos", "events_url": "https://api.github.com/users/melissawm/events{/privacy}", "received_events_url": "https://api.github.com/users/melissawm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}, {"id": 6359945, "node_id": "MDU6TGFiZWw2MzU5OTQ1", "url": "https://api.github.com/repos/numpy/numpy/labels/05%20-%20Testing", "name": "05 - Testing", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-17T22:50:59Z", "updated_at": "2020-07-18T12:07:29Z", "closed_at": "2020-07-18T12:07:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the current (NumPy v1.19) [Testing Guidelines](https://numpy.org/doc/stable/reference/testing.html) document, the focus of examples and some explanations is SciPy. \r\n\r\n[This document](https://github.com/numpy/numpy/blob/master/doc/TESTS.rst.txt), however, seems to have the content we need in our docs. I propose replacing the first document with the second one, eliminating the SciPy examples from our documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16891", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16891/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16891/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16891/events", "html_url": "https://github.com/numpy/numpy/issues/16891", "id": 659523714, "node_id": "MDU6SXNzdWU2NTk1MjM3MTQ=", "number": 16891, "title": "Should we error on \"not-recommended\" behavior in static typing tests ?", "user": {"login": "anirudh2290", "id": 1522319, "node_id": "MDQ6VXNlcjE1MjIzMTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1522319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anirudh2290", "html_url": "https://github.com/anirudh2290", "followers_url": "https://api.github.com/users/anirudh2290/followers", "following_url": "https://api.github.com/users/anirudh2290/following{/other_user}", "gists_url": "https://api.github.com/users/anirudh2290/gists{/gist_id}", "starred_url": "https://api.github.com/users/anirudh2290/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anirudh2290/subscriptions", "organizations_url": "https://api.github.com/users/anirudh2290/orgs", "repos_url": "https://api.github.com/users/anirudh2290/repos", "events_url": "https://api.github.com/users/anirudh2290/events{/privacy}", "received_events_url": "https://api.github.com/users/anirudh2290/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2124388074, "node_id": "MDU6TGFiZWwyMTI0Mzg4MDc0", "url": "https://api.github.com/repos/numpy/numpy/labels/static%20typing", "name": "static typing", "color": "fcff6b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-17T18:46:09Z", "updated_at": "2020-08-03T13:49:59Z", "closed_at": "2020-08-03T13:49:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This discussion stems from here : https://github.com/numpy/numpy/pull/16622#discussion_r455438073\r\n\r\nThe numpy documentation says the following about instantiating the dtype object using \"{'field1': ..., 'field2': ..., ...}\": \r\n\r\n\"This usage is discouraged, because it is ambiguous with the other dict-based construction method. If you have a field called \u2018names\u2019 and a field called \u2018formats\u2019 there will be a conflict.\"\r\n\r\nI think static typing is a good place to catch not just \"wrong\" types used, but also to catch early such discouraged usage in numpy. So, IMO we should have the type checker error on such behavior. WDYT ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16889", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16889/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16889/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16889/events", "html_url": "https://github.com/numpy/numpy/issues/16889", "id": 659269186, "node_id": "MDU6SXNzdWU2NTkyNjkxODY=", "number": 16889, "title": "test_large_zip fails in i586 after #15893", "user": {"login": "antlarr-suse", "id": 33935697, "node_id": "MDQ6VXNlcjMzOTM1Njk3", "avatar_url": "https://avatars0.githubusercontent.com/u/33935697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antlarr-suse", "html_url": "https://github.com/antlarr-suse", "followers_url": "https://api.github.com/users/antlarr-suse/followers", "following_url": "https://api.github.com/users/antlarr-suse/following{/other_user}", "gists_url": "https://api.github.com/users/antlarr-suse/gists{/gist_id}", "starred_url": "https://api.github.com/users/antlarr-suse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antlarr-suse/subscriptions", "organizations_url": "https://api.github.com/users/antlarr-suse/orgs", "repos_url": "https://api.github.com/users/antlarr-suse/repos", "events_url": "https://api.github.com/users/antlarr-suse/events{/privacy}", "received_events_url": "https://api.github.com/users/antlarr-suse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359214, "node_id": "MDU6TGFiZWw2MzU5MjE0", "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug", "name": "00 - Bug", "color": "fef2c0", "default": false, "description": null}, {"id": 6359945, "node_id": "MDU6TGFiZWw2MzU5OTQ1", "url": "https://api.github.com/repos/numpy/numpy/labels/05%20-%20Testing", "name": "05 - Testing", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-07-17T13:44:31Z", "updated_at": "2020-07-19T17:19:49Z", "closed_at": "2020-07-18T20:20:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, it seems #15893 is making the test_large_zip test fail in openSUSE's build service for the i586 architecture with openSUSE Tumbleweed. The test output is:\r\n\r\n```\r\n______________________________________________________________________________________ TestSaveTxt.test_large_zip ______________________________________________________________________________________\r\n[gw1] linux -- Python 3.8.3 /usr/bin/python3\r\n\r\nself = <numpy.lib.tests.test_io.TestSaveTxt object at 0xe935e610>\r\n\r\n    @pytest.mark.skipif(sys.platform=='win32', reason=\"files>4GB may not work\")\r\n    @pytest.mark.slow\r\n    @requires_memory(free_bytes=7e9)\r\n    def test_large_zip(self):\r\n        def check_large_zip():\r\n            # The test takes at least 6GB of memory, writes a file larger than 4GB\r\n            test_data = np.asarray([np.random.rand(np.random.randint(50,100),4)\r\n                                   for i in range(800000)], dtype=object)\r\n            with tempdir() as tmpdir:\r\n                np.savez(os.path.join(tmpdir, 'test.npz'), test_data=test_data)\r\n        # run in a subprocess to ensure memory is released on PyPy, see gh-15775\r\n        p = Process(target=check_large_zip)\r\n        p.start()\r\n        p.join()\r\n>       assert p.exitcode == 0\r\nE       assert 1 == 0\r\nE         +1\r\nE         -0\r\n\r\n../../../BUILDROOT/python-numpy-1.19.0-0.i386/usr/lib/python3.8/site-packages/numpy/lib/tests/test_io.py:587: AssertionError\r\n----------------------------------------------------------------------------------------- Captured stderr call -----------------------------------------------------------------------------------------\r\nProcess Process-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/multiprocessing/process.py\", line 315, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib/python3.8/multiprocessing/process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/abuild/rpmbuild/BUILDROOT/python-numpy-1.19.0-0.i386/usr/lib/python3.8/site-packages/numpy/lib/tests/test_io.py\", line 582, in check_large_zip\r\n    np.savez(os.path.join(tmpdir, 'test.npz'), test_data=test_data)\r\n  File \"<__array_function__ internals>\", line 5, in savez\r\n  File \"/home/abuild/rpmbuild/BUILDROOT/python-numpy-1.19.0-0.i386/usr/lib/python3.8/site-packages/numpy/lib/npyio.py\", line 616, in savez\r\n    _savez(file, args, kwds, False)\r\n  File \"/home/abuild/rpmbuild/BUILDROOT/python-numpy-1.19.0-0.i386/usr/lib/python3.8/site-packages/numpy/lib/npyio.py\", line 721, in _savez\r\n    format.write_array(fid, val,\r\n  File \"/home/abuild/rpmbuild/BUILDROOT/python-numpy-1.19.0-0.i386/usr/lib/python3.8/site-packages/numpy/lib/format.py\", line 664, in write_array\r\n    pickle.dump(array, fp, protocol=3, **pickle_kwargs)\r\nMemoryError\r\n======================================================================================= short test summary info ========================================================================================\r\nFAILED ../../../BUILDROOT/python-numpy-1.19.0-0.i386/usr/lib/python3.8/site-packages/numpy/lib/tests/test_io.py::TestSaveTxt::test_large_zip - assert 1 == 0\r\n```\r\n\r\nIt seems other architectures aren't affected. I tried calling the test without using a separate process and that works fine for i586.\r\n\r\nSo applying [this patch](https://build.opensuse.org/package/view_file/home:alarrosa:branches:devel:languages:python:numeric/python-numpy/fix-test_large_zip-in-i586.patch?expand=1) _fixes_ it, but I didn't submit it as a PR because I understand that that would be basically reverting #15893 for i586 and that would bring #15775 back.\r\n\r\n### Reproducing code example:\r\n\r\nJust running the tests in a i586 architecture should show the error.\r\n\r\nI understand that setting up such a system might not be quick, so since I can reproduce it easily, if there's any test that would help, please, tell me.\r\n\r\nAlso, I can provide help to set up a local checkout to test running the tests exactly as they're ran on the obs servers. It's basically a matter of creating an account at https://build.opensuse.org, installing the osc tool and running something like:\r\n\r\n```\r\nosc branch devel:languages:python:numeric python-numpy\r\nosc checkout home:<your_obs_username>:branches:devel:languages:python:numeric python-numpy\r\ncd home:<your_obs_username>:branches:devel:languages:python:numeric/python-numpy\r\nosc build openSUSE_Tumbleweed i586\r\n```\r\n\r\n\r\n### Numpy/Python version information:\r\n\r\n1.19.0 3.8.3 (default, May 17 2020, 14:48:56) [GCC]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16885", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16885/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16885/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16885/events", "html_url": "https://github.com/numpy/numpy/issues/16885", "id": 658945546, "node_id": "MDU6SXNzdWU2NTg5NDU1NDY=", "number": 16885, "title": "documentation for boolean indexing for both axes is not clear", "user": {"login": "gokhalen", "id": 4105227, "node_id": "MDQ6VXNlcjQxMDUyMjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4105227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gokhalen", "html_url": "https://github.com/gokhalen", "followers_url": "https://api.github.com/users/gokhalen/followers", "following_url": "https://api.github.com/users/gokhalen/following{/other_user}", "gists_url": "https://api.github.com/users/gokhalen/gists{/gist_id}", "starred_url": "https://api.github.com/users/gokhalen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gokhalen/subscriptions", "organizations_url": "https://api.github.com/users/gokhalen/orgs", "repos_url": "https://api.github.com/users/gokhalen/repos", "events_url": "https://api.github.com/users/gokhalen/events{/privacy}", "received_events_url": "https://api.github.com/users/gokhalen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}, {"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-17T07:07:14Z", "updated_at": "2020-07-18T05:40:54Z", "closed_at": "2020-07-18T05:40:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking at boolean indexing in the Quickstart Tutorial [here](https://numpy.org/devdocs/user/quickstart.html#indexing-with-boolean-arrays). I'm looking at the section which follows the Mandelbrot example, which you can get to by searching \"The second way of indexing with booleans is more similar to integer indexing\".\r\n\r\nThe last code snippet is problematic.\r\n\r\n```\r\na[b1,b2]                                  # a weird thing to do\r\narray([ 4, 10])\r\n```\r\n\r\nBased on the previous code examples in the Quickstart Tutorial, I would have expected this to construct the outer-product of `b1,b2` and return the entries in `a` corresponding to the `True `values in the outer-product.  That is, I would have expected the following output\r\n\r\n`array([ 4,  6,  8, 10])\r\n`\r\nBut clearly this is not what is happening. \r\n Based on the previous code examples, I also expected the following behavior\r\n\r\n```\r\na[[True,True,True],[True,True,True,True]]=array([[ 0,  1,  2,  3],\r\n                                                                          [ 4,  5,  6,  7],\r\n                                                                         [ 8,  9, 10, 11]])\r\n\r\n```\r\nHowever, what I get is a broadcasting error\r\n\r\n`IndexError: shape mismatch: indexing arrays could not be broadcast together with shapes (3,) (4,) \r\n`\r\nIs it possible to explain more clearly what is happening in boolean indexing especially when both axes use boolean indexing?  \r\n\r\nThis problem has been noticed [elsewhere ](https://scipy-cookbook.readthedocs.io/items/Indexing.html) too. Search \"Finally, if you want to apply boolean conditions to the rows and columns simultaneously, beware:\" to get to the right place.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16880", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16880/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16880/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16880/events", "html_url": "https://github.com/numpy/numpy/issues/16880", "id": 658025831, "node_id": "MDU6SXNzdWU2NTgwMjU4MzE=", "number": 16880, "title": "Error in documentation of numpy.ufunc.outer", "user": {"login": "avivhu", "id": 13599030, "node_id": "MDQ6VXNlcjEzNTk5MDMw", "avatar_url": "https://avatars0.githubusercontent.com/u/13599030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avivhu", "html_url": "https://github.com/avivhu", "followers_url": "https://api.github.com/users/avivhu/followers", "following_url": "https://api.github.com/users/avivhu/following{/other_user}", "gists_url": "https://api.github.com/users/avivhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/avivhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avivhu/subscriptions", "organizations_url": "https://api.github.com/users/avivhu/orgs", "repos_url": "https://api.github.com/users/avivhu/repos", "events_url": "https://api.github.com/users/avivhu/events{/privacy}", "received_events_url": "https://api.github.com/users/avivhu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-16T09:31:57Z", "updated_at": "2020-07-16T13:08:08Z", "closed_at": "2020-07-16T09:46:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\nThe documentation says:\r\n\r\n> ... the result, C, of op.outer(A, B) is an array of dimension M + N such that ...\r\n\r\nSee:\r\nhttps://numpy.org/doc/stable/reference/generated/numpy.ufunc.outer.html\r\n\r\n\r\nI think it should say:\r\n\r\n> ... the result ... is an array of dimension M x N such that ...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16877", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16877/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16877/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16877/events", "html_url": "https://github.com/numpy/numpy/issues/16877", "id": 657474907, "node_id": "MDU6SXNzdWU2NTc0NzQ5MDc=", "number": 16877, "title": "Strange behaviour when mixing basic and advanced indexing", "user": {"login": "ucyo", "id": 591458, "node_id": "MDQ6VXNlcjU5MTQ1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/591458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ucyo", "html_url": "https://github.com/ucyo", "followers_url": "https://api.github.com/users/ucyo/followers", "following_url": "https://api.github.com/users/ucyo/following{/other_user}", "gists_url": "https://api.github.com/users/ucyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ucyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ucyo/subscriptions", "organizations_url": "https://api.github.com/users/ucyo/orgs", "repos_url": "https://api.github.com/users/ucyo/repos", "events_url": "https://api.github.com/users/ucyo/events{/privacy}", "received_events_url": "https://api.github.com/users/ucyo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-15T16:10:37Z", "updated_at": "2020-07-22T09:13:17Z", "closed_at": "2020-07-16T16:05:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is unexpected behaviour if a user mixes basic and advanced indexing strategies.\r\nThe results of two indexing operations are different if they are executed back to back or in one go.\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\nd = np.zeros((10,20,3))  # random data\r\n\r\n# indexing via two operations\r\ne = d[5,:,:]  # e.shape is (20,3), as expected \r\ne = e[:,[0,2]]  # e.shape is now (20,2) as expected\r\n\r\n# same indexing in one go\r\ng = d[5,:,[0,2]]  # g.shape is now (2,20)  ??? \r\n\r\n# this returns false\r\nprint(g.shape == e.shape)\r\n```\r\n\r\n### Error message:\r\n\r\nNo error message\r\n\r\n### Numpy/Python version information:\r\n\r\n```\r\n1.18.5 3.8.3 (default, Jul  2 2020, 16:21:59)\r\n[GCC 7.3.0]\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16869", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16869/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16869/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16869/events", "html_url": "https://github.com/numpy/numpy/issues/16869", "id": 656788095, "node_id": "MDU6SXNzdWU2NTY3ODgwOTU=", "number": 16869, "title": "API: Review public functionality in arrayprint", "user": {"login": "rossbar", "id": 1268991, "node_id": "MDQ6VXNlcjEyNjg5OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1268991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rossbar", "html_url": "https://github.com/rossbar", "followers_url": "https://api.github.com/users/rossbar/followers", "following_url": "https://api.github.com/users/rossbar/following{/other_user}", "gists_url": "https://api.github.com/users/rossbar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rossbar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rossbar/subscriptions", "organizations_url": "https://api.github.com/users/rossbar/orgs", "repos_url": "https://api.github.com/users/rossbar/repos", "events_url": "https://api.github.com/users/rossbar/events{/privacy}", "received_events_url": "https://api.github.com/users/rossbar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36825825, "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==", "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance", "name": "03 - Maintenance", "color": "fef2c0", "default": false, "description": null}, {"id": 1232205734, "node_id": "MDU6TGFiZWwxMjMyMjA1NzM0", "url": "https://api.github.com/repos/numpy/numpy/labels/30%20-%20API", "name": "30 - API", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-14T17:46:56Z", "updated_at": "2020-07-14T19:37:19Z", "closed_at": "2020-07-14T19:37:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#16036 reports downstream issues due to backwards-incompatible changes to classes in `numpy.core.arrayprint`. Based on the lack of docstrings etc. it seems that some functionality in arrayprint was not necessarily intended to be public. It would be good to review this and perhaps provide some more concrete guidance to users.\r\n\r\nIncompatible changes introduced in e.g. #9941\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16865", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16865/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16865/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16865/events", "html_url": "https://github.com/numpy/numpy/issues/16865", "id": 656607858, "node_id": "MDU6SXNzdWU2NTY2MDc4NTg=", "number": 16865, "title": "[help wanted] how to norm the features?", "user": {"login": "ucasiggcas", "id": 35590066, "node_id": "MDQ6VXNlcjM1NTkwMDY2", "avatar_url": "https://avatars0.githubusercontent.com/u/35590066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ucasiggcas", "html_url": "https://github.com/ucasiggcas", "followers_url": "https://api.github.com/users/ucasiggcas/followers", "following_url": "https://api.github.com/users/ucasiggcas/following{/other_user}", "gists_url": "https://api.github.com/users/ucasiggcas/gists{/gist_id}", "starred_url": "https://api.github.com/users/ucasiggcas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ucasiggcas/subscriptions", "organizations_url": "https://api.github.com/users/ucasiggcas/orgs", "repos_url": "https://api.github.com/users/ucasiggcas/repos", "events_url": "https://api.github.com/users/ucasiggcas/events{/privacy}", "received_events_url": "https://api.github.com/users/ucasiggcas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-14T13:22:04Z", "updated_at": "2020-07-14T17:30:47Z", "closed_at": "2020-07-14T17:30:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,dear\r\nI have a features' matrix which shape is (3,4) as follows, and every column is one feature \r\nnow I just want to norm the features, \r\n```\r\n>>> xx=np.random.randn(3,4)\r\n>>> xx\r\narray([[ 0.18874834,  0.37971162,  0.8287003 , -0.95896989],\r\n       [-0.07977954,  0.04206023, -0.23647192, -0.36731412],\r\n       [ 1.77722951,  0.68746666, -1.77812892,  0.54136854]])\r\n```\r\nshould I do as the down?\r\n```\r\n>>> xx/np.linalg.norm(xx, axis=1, keepdims=True)\r\narray([[ 0.14122813,  0.28411357,  0.62006266, -0.71753494],\r\n       [-0.17885252,  0.09429206, -0.53013085, -0.82345738],\r\n       [ 0.66764197,  0.25825679, -0.66797985,  0.20337292]])\r\n```\r\nor this one\r\n```\r\n>>> xx/np.linalg.norm(xx, axis=0, keepdims=True)\r\narray([[ 0.1055047 ,  0.48279508,  0.41939189, -0.8260775 ],\r\n       [-0.04459439,  0.05347867, -0.11967464, -0.31641236],\r\n       [ 0.99341839,  0.87409893, -0.89988245,  0.46634662]])\r\n```\r\ncould you pls help me ?\r\nthx\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16864", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16864/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16864/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16864/events", "html_url": "https://github.com/numpy/numpy/issues/16864", "id": 656606089, "node_id": "MDU6SXNzdWU2NTY2MDYwODk=", "number": 16864, "title": "numpy.core._multiarray_umath' error when trying to access numpy from a Windows app.", "user": {"login": "caprianil-fsc", "id": 47414254, "node_id": "MDQ6VXNlcjQ3NDE0MjU0", "avatar_url": "https://avatars1.githubusercontent.com/u/47414254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caprianil-fsc", "html_url": "https://github.com/caprianil-fsc", "followers_url": "https://api.github.com/users/caprianil-fsc/followers", "following_url": "https://api.github.com/users/caprianil-fsc/following{/other_user}", "gists_url": "https://api.github.com/users/caprianil-fsc/gists{/gist_id}", "starred_url": "https://api.github.com/users/caprianil-fsc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caprianil-fsc/subscriptions", "organizations_url": "https://api.github.com/users/caprianil-fsc/orgs", "repos_url": "https://api.github.com/users/caprianil-fsc/repos", "events_url": "https://api.github.com/users/caprianil-fsc/events{/privacy}", "received_events_url": "https://api.github.com/users/caprianil-fsc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501057526, "node_id": "MDU6TGFiZWwxNTAxMDU3NTI2", "url": "https://api.github.com/repos/numpy/numpy/labels/32%20-%20Installation", "name": "32 - Installation", "color": "fef2c0", "default": false, "description": "Problems installing or compiling NumPy"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-14T13:19:26Z", "updated_at": "2020-08-05T19:51:35Z", "closed_at": "2020-08-05T19:51:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying build a Windows application to run skyfield python code. Later on I wanted to make it a DLL to interface with skyfield python code. But I am getting the below error. Looks like numpy is not getting imported by skyfield.\r\n\r\n```\r\nC:\\Users\\Anil\\source\\repos\\ConsoleApplication3\\Debug>ConsoleApplication3.exe multiply multiply 1 2\r\nTraceback (most recent call last):\r\n  File \"C:\\Python\\Python38-32\\lib\\site-packages\\numpy\\core\\__init__.py\", line 22, in <module>\r\n    from . import multiarray\r\n  File \"C:\\Python\\Python38-32\\lib\\site-packages\\numpy\\core\\multiarray.py\", line 12, in <module>\r\n    from . import overrides\r\n  File \"C:\\Python\\Python38-32\\lib\\site-packages\\numpy\\core\\overrides.py\", line 7, in <module>\r\n    from numpy.core._multiarray_umath import (\r\nModuleNotFoundError: No module named 'numpy.core._multiarray_umath' \r\nJust importing the skyfield api gives the error in windows console app.\r\n```\r\n\r\nThe python code using skyfield package. Below is just a snippet but enough to reproduce the issue.\r\n\r\n```\r\nfrom skyfield.api import utc\r\nfrom skyfield.api import load\r\n\r\ndef multiply(a,b):\r\n    print(\"Will compute\", a, \"times\", b)\r\n    c = 0\r\n    for i in range(0, a):\r\n        c = c + b\r\n    return c\r\n```\r\n\r\nThe embedding C code for Windows is taken from here. It is a basic windows console application and runs with proper include/library paths.\r\n\r\n```\r\nhttps://docs.python.org/3/extending/embedding.html#pure-embedding``````\r\n```\r\n\r\nOne the console I just run the following windows app.\r\n\r\n```\r\nConsoleApplication3.exe multiply multiply 1 2\r\n```\r\nIn windows console app we need to add the include/lib paths.\r\n\r\n```\r\n$(VC_IncludePath);$(WindowsSDK_IncludePath);C:\\Python\\Python38-32\\include;$(IncludePath)\r\nC:\\Python\\Python38-32\\libs;$(VC_LibraryPath_x86);$(WindowsSDK_LibraryPath_x86);$(LibraryPath)\r\n```\r\n\r\nWhat might be causing this error ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16863", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16863/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16863/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16863/events", "html_url": "https://github.com/numpy/numpy/issues/16863", "id": 656589123, "node_id": "MDU6SXNzdWU2NTY1ODkxMjM=", "number": 16863, "title": "ImportError: DLL load failed for scipy/numpy- python interpreter inside Autodesk VRED", "user": {"login": "hajduke", "id": 68282540, "node_id": "MDQ6VXNlcjY4MjgyNTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/68282540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hajduke", "html_url": "https://github.com/hajduke", "followers_url": "https://api.github.com/users/hajduke/followers", "following_url": "https://api.github.com/users/hajduke/following{/other_user}", "gists_url": "https://api.github.com/users/hajduke/gists{/gist_id}", "starred_url": "https://api.github.com/users/hajduke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hajduke/subscriptions", "organizations_url": "https://api.github.com/users/hajduke/orgs", "repos_url": "https://api.github.com/users/hajduke/repos", "events_url": "https://api.github.com/users/hajduke/events{/privacy}", "received_events_url": "https://api.github.com/users/hajduke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501057526, "node_id": "MDU6TGFiZWwxNTAxMDU3NTI2", "url": "https://api.github.com/repos/numpy/numpy/labels/32%20-%20Installation", "name": "32 - Installation", "color": "fef2c0", "default": false, "description": "Problems installing or compiling NumPy"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-14T12:53:15Z", "updated_at": "2020-08-05T19:52:26Z", "closed_at": "2020-08-05T19:52:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Autodesk VRED comes with python 2.7.6 in `C:\\Program Files\\Autodesk\\VREDPro-12.0\\lib\\python`. When going to this directory and installing pip and scipy (+numpy 1.16.6, a version pip chooses)\r\n\r\n\r\n`C:\\Program Files\\Autodesk\\VREDPro-12.0\\lib\\python>python ensurepip`\r\n`C:\\Program Files\\Autodesk\\VREDPro-12.0\\lib\\python>python -m pip install scipy`\r\n\r\nthe following error message appears when importing scipy/numpy after invoking the interpreter in this directory\r\n```\r\nC:\\Program Files\\Autodesk\\VREDPro-12.0\\lib\\python>python\r\nPython 2.7.10 (default, Aug  7 2015, 13:03:04) [MSC v.1900 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import numpy\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Program Files\\Autodesk\\VREDPro-12.0\\lib\\python\\lib\\site-packages\\numpy\\__init__.py\", line 142, in <module>\r\n    from . import core\r\n  File \"C:\\Program Files\\Autodesk\\VREDPro-12.0\\lib\\python\\lib\\site-packages\\numpy\\core\\__init__.py\", line 71, in <module>\r\n    raise ImportError(msg)\r\nImportError:\r\n\r\nIMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!\r\n\r\nImporting the multiarray numpy extension module failed.  Most\r\nlikely you are trying to import a failed build of numpy.\r\nHere is how to proceed:\r\n- If you're working with a numpy git repository, try `git clean -xdf`\r\n  (removes all files not under version control) and rebuild numpy.\r\n- If you are simply trying to use the numpy version that you have installed:\r\n  your installation is broken - please reinstall numpy.\r\n- If you have already reinstalled and that did not fix the problem, then:\r\n  1. Check that you are using the Python you expect (you're using C:\\Program Files\\Autodesk\\VREDPro-12.0\\lib\\python\\python.exe),\r\n     and that you have no directories in your PATH or PYTHONPATH that can\r\n     interfere with the Python and numpy versions you're trying to use.\r\n  2. If (1) looks fine, you can open a new issue at\r\n     https://github.com/numpy/numpy/issues.  Please include details on:\r\n     - how you installed Python\r\n     - how you installed numpy\r\n     - your operating system\r\n     - whether or not you have multiple versions of Python installed\r\n     - if you built from source, your compiler versions and ideally a build log\r\n\r\n     Note: this error has many possible causes, so please don't comment on\r\n     an existing issue about this - open a new one instead.\r\n\r\nOriginal error was: DLL load failed: Das angegebene Modul wurde nicht gefunden.\r\n```\r\n\r\nLogically, scipy/numpy also do not work inside the VRED environment.\r\n\r\nI already tried reinstalling it. And since I also have python 2.7.10 installed in `C:\\Python27` including numpy, I also tried removing this directory from `PATH` in order to avoid conflicts. Both steps did not help.\r\nMy OS: Windows 10 Pro, 10.0.18363\r\n\r\nThank you.\r\n\r\nBR, VL\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16856", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16856/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16856/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16856/events", "html_url": "https://github.com/numpy/numpy/issues/16856", "id": 656390778, "node_id": "MDU6SXNzdWU2NTYzOTA3Nzg=", "number": 16856, "title": "Possible wrong on TestQuantile", "user": {"login": "iii-org-tw", "id": 67881762, "node_id": "MDQ6VXNlcjY3ODgxNzYy", "avatar_url": "https://avatars2.githubusercontent.com/u/67881762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-org-tw", "html_url": "https://github.com/iii-org-tw", "followers_url": "https://api.github.com/users/iii-org-tw/followers", "following_url": "https://api.github.com/users/iii-org-tw/following{/other_user}", "gists_url": "https://api.github.com/users/iii-org-tw/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-org-tw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-org-tw/subscriptions", "organizations_url": "https://api.github.com/users/iii-org-tw/orgs", "repos_url": "https://api.github.com/users/iii-org-tw/repos", "events_url": "https://api.github.com/users/iii-org-tw/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-org-tw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-14T07:23:37Z", "updated_at": "2020-07-14T07:50:56Z", "closed_at": "2020-07-14T07:50:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\nWe are adding features on np.quantile(). \r\nWhen we ran runtest.py, we got two errors on the methods TestQuantile.test_quantile_monotonic and TestQuantile.test_quantile_monotonic_hypo in numpy/lib/tests/test_function_base.py.\r\n\r\n    def test_quantile_monotonic(self):\r\n        # GH 14685\r\n        # test that the return value of quantile is monotonic if p0 is ordered\r\n        p0 = np.arange(0, 1, 0.01)\r\n        quantile = np.quantile(np.array([0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 1, 1, 9, 9, 9,\r\n                                         8, 8, 7]) * 0.1, p0)\r\n        assert_equal(np.sort(quantile), quantile)\r\n\r\n    @hypothesis.given(\r\n            arr=arrays(dtype=np.float64,\r\n                       shape=st.integers(min_value=3, max_value=1000),\r\n                       elements=st.floats(allow_infinity=False, allow_nan=False,\r\n                                          min_value=-1e300, max_value=1e300)))\r\n    def test_quantile_monotonic_hypo(self, arr):\r\n        p0 = np.arange(0, 1, 0.01)\r\n        quantile = np.quantile(arr, p0)\r\n        assert_equal(np.sort(quantile), quantile)\r\n\r\nAnd I found that it would fail even keeping numpy source code unchanged.\r\n\r\n### Reproducing code example:\r\n\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\np0 = np.arange(0, 1, 0.01)\r\nquantile = np.quantile(np.array([0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 1, 1, 9, 9, 9,\r\n                                 8, 8, 7]) * 0.1, p0)\r\nnp.testing.assert_equal(np.sort(quantile), quantile)\r\n```\r\n```python\r\narr=array([2.22044605e+284, 2.22044605e+284, 2.22044605e+284]),\r\np0 = np.arange(0, 1, 0.01)\r\nquantile = np.quantile(arr, p0)\r\nnp.testing.assert_equal(np.sort(quantile), quantile)\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n```python\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\n<ipython-input-31-6281563fae61> in <module>\r\n      2 quantile = np.quantile(np.array([0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 1, 1, 9, 9, 9,\r\n      3                                  8, 8, 7]) * 0.1, p0)\r\n----> 4 np.testing.assert_equal(np.sort(quantile), quantile)\r\n\r\n~/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/utils.py in assert_equal(actual, desired, err_msg, verbose)\r\n    347     from numpy.lib import iscomplexobj, real, imag\r\n    348     if isinstance(actual, ndarray) or isinstance(desired, ndarray):\r\n--> 349         return assert_array_equal(actual, desired, err_msg, verbose)\r\n    350     msg = build_err_msg([actual, desired], err_msg, verbose=verbose)\r\n    351 \r\n\r\n~/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/utils.py in assert_array_equal(x, y, err_msg, verbose)\r\n    934     __tracebackhide__ = True  # Hide traceback for py.test\r\n    935     assert_array_compare(operator.__eq__, x, y, err_msg=err_msg,\r\n--> 936                          verbose=verbose, header='Arrays are not equal')\r\n    937 \r\n    938 \r\n\r\n~/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/utils.py in assert_array_compare(comparison, x, y, err_msg, verbose, header, precision, equal_nan, equal_inf)\r\n    844                                 verbose=verbose, header=header,\r\n    845                                 names=('x', 'y'), precision=precision)\r\n--> 846             raise AssertionError(msg)\r\n    847     except ValueError:\r\n    848         import traceback\r\n\r\nAssertionError: \r\nArrays are not equal\r\n\r\nMismatched elements: 4 / 100 (4%)\r\nMax absolute difference: 1.11022302e-16\r\nMax relative difference: 1.23358114e-16\r\n x: array([0.   , 0.017, 0.034, 0.051, 0.068, 0.085, 0.1  , 0.1  , 0.1  ,\r\n       0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  ,\r\n       0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.108, 0.125, 0.142,...\r\n y: array([0.   , 0.017, 0.034, 0.051, 0.068, 0.085, 0.1  , 0.1  , 0.1  ,\r\n       0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  ,\r\n       0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.108, 0.125, 0.142,...\r\n```\r\n```python\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\n<ipython-input-31-6281563fae61> in <module>\r\n      2 quantile = np.quantile(np.array([0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 1, 1, 9, 9, 9,\r\n      3                                  8, 8, 7]) * 0.1, p0)\r\n----> 4 np.testing.assert_equal(np.sort(quantile), quantile)\r\n\r\n~/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/utils.py in assert_equal(actual, desired, err_msg, verbose)\r\n    347     from numpy.lib import iscomplexobj, real, imag\r\n    348     if isinstance(actual, ndarray) or isinstance(desired, ndarray):\r\n--> 349         return assert_array_equal(actual, desired, err_msg, verbose)\r\n    350     msg = build_err_msg([actual, desired], err_msg, verbose=verbose)\r\n    351 \r\n\r\n~/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/utils.py in assert_array_equal(x, y, err_msg, verbose)\r\n    934     __tracebackhide__ = True  # Hide traceback for py.test\r\n    935     assert_array_compare(operator.__eq__, x, y, err_msg=err_msg,\r\n--> 936                          verbose=verbose, header='Arrays are not equal')\r\n    937 \r\n    938 \r\n\r\n~/anaconda3/lib/python3.7/site-packages/numpy/testing/_private/utils.py in assert_array_compare(comparison, x, y, err_msg, verbose, header, precision, equal_nan, equal_inf)\r\n    844                                 verbose=verbose, header=header,\r\n    845                                 names=('x', 'y'), precision=precision)\r\n--> 846             raise AssertionError(msg)\r\n    847     except ValueError:\r\n    848         import traceback\r\n\r\nAssertionError: \r\nArrays are not equal\r\n\r\nMismatched elements: 4 / 100 (4%)\r\nMax absolute difference: 1.11022302e-16\r\nMax relative difference: 1.23358114e-16\r\n x: array([0.   , 0.017, 0.034, 0.051, 0.068, 0.085, 0.1  , 0.1  , 0.1  ,\r\n       0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  ,\r\n       0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.108, 0.125, 0.142,...\r\n y: array([0.   , 0.017, 0.034, 0.051, 0.068, 0.085, 0.1  , 0.1  , 0.1  ,\r\n       0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  ,\r\n       0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.1  , 0.108, 0.125, 0.142,...\r\n```\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\nThey may be caused by linear interpolation.\r\nShould these functions test the samples by assert_allclose()?\r\n### Numpy/Python version information:\r\nnumpy: '1.19.0'\r\npython: 3.7\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16853", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16853/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16853/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16853/events", "html_url": "https://github.com/numpy/numpy/issues/16853", "id": 656265543, "node_id": "MDU6SXNzdWU2NTYyNjU1NDM=", "number": 16853, "title": "Iterate through the data address of numpy, always the address of the first data.", "user": {"login": "wqcsim", "id": 38421486, "node_id": "MDQ6VXNlcjM4NDIxNDg2", "avatar_url": "https://avatars1.githubusercontent.com/u/38421486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wqcsim", "html_url": "https://github.com/wqcsim", "followers_url": "https://api.github.com/users/wqcsim/followers", "following_url": "https://api.github.com/users/wqcsim/following{/other_user}", "gists_url": "https://api.github.com/users/wqcsim/gists{/gist_id}", "starred_url": "https://api.github.com/users/wqcsim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wqcsim/subscriptions", "organizations_url": "https://api.github.com/users/wqcsim/orgs", "repos_url": "https://api.github.com/users/wqcsim/repos", "events_url": "https://api.github.com/users/wqcsim/events{/privacy}", "received_events_url": "https://api.github.com/users/wqcsim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 128165425, "node_id": "MDU6TGFiZWwxMjgxNjU0MjU=", "url": "https://api.github.com/repos/numpy/numpy/labels/53%20-%20Invalid", "name": "53 - Invalid", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-14T01:58:37Z", "updated_at": "2020-07-14T02:45:29Z", "closed_at": "2020-07-14T02:45:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n### Reproducing code example:\r\n```python\r\ns1 = np.arange(12).reshape(3,4)\r\ns2 = np.arange(24,36).reshape(3,4)\r\nprint(s1.data, s2.data)\r\nss = [s1,s2]\r\nfor i, s in enumerate(ss):\r\n    print(s.data)\r\n    print(ss[i].data, i)     # bug here: The address printed twice is the same!\r\n    print(ss[0].data, ss[1].data, \"#####\")\r\n    print(s)\r\n```\r\n### Python 3.6.9  result:\r\n```python\r\n<memory at 0x7f148fdf7480> <memory at 0x7f148eedc558>\r\n<memory at 0x7f148fdf7480>\r\n<memory at 0x7f148fdf7480> 0\r\n<memory at 0x7f148fdf7480> <memory at 0x7f148eedc558> #####\r\n[[ 0  1  2  3]\r\n [ 4  5  6  7]\r\n [ 8  9 10 11]]\r\n<memory at 0x7f148fdf7480>\r\n<memory at 0x7f148fdf7480> 1\r\n<memory at 0x7f148fdf7480> <memory at 0x7f148eedc558> #####\r\n[[24 25 26 27]\r\n [28 29 30 31]\r\n [32 33 34 35]]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16842", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16842/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16842/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16842/events", "html_url": "https://github.com/numpy/numpy/issues/16842", "id": 655732952, "node_id": "MDU6SXNzdWU2NTU3MzI5NTI=", "number": 16842, "title": "Possible wrong polyfit documentation ", "user": {"login": "davidedalbosco", "id": 62077652, "node_id": "MDQ6VXNlcjYyMDc3NjUy", "avatar_url": "https://avatars0.githubusercontent.com/u/62077652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidedalbosco", "html_url": "https://github.com/davidedalbosco", "followers_url": "https://api.github.com/users/davidedalbosco/followers", "following_url": "https://api.github.com/users/davidedalbosco/following{/other_user}", "gists_url": "https://api.github.com/users/davidedalbosco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidedalbosco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidedalbosco/subscriptions", "organizations_url": "https://api.github.com/users/davidedalbosco/orgs", "repos_url": "https://api.github.com/users/davidedalbosco/repos", "events_url": "https://api.github.com/users/davidedalbosco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidedalbosco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}, {"id": 16917082, "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib", "name": "component: numpy.lib", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-13T10:19:07Z", "updated_at": "2020-07-16T01:21:06Z", "closed_at": "2020-07-16T01:21:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\nHi! I think that the documentation of numpy polyfit could be misleading/wrong when describing the scaling factor for the covariance matrix. \r\n\r\nIndeed with the option ``cov=True``,  the covariance matrix is scaled so to return a unit value for reduced chi2 of the fit.\r\nI, therefore, expect that the scaling factor should be chi2/(M-N) = chi2/dof, where M is the number of data points and N the parameters of the fit. \r\n\r\nHowever, the documentation reports that the scaling factor is chi2/sqrt(N-dof), where I guess N is the number of data points.\r\n\r\nI did a test and actually the scaling factor I found is consistent with chi2/dof, rather than the expression reported in the documentation.\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\n# Generate synthetically the data\r\n# True parameters\r\nimport numpy as np\r\n\r\ntrue_slope = 3\r\ntrue_intercept = 7\r\n\r\nx_data = np.linspace(-5, 5, 30)\r\n\r\n# The y-data will have a noise term, to simulate imperfect observations\r\nsigma = 1\r\ny_data = true_slope * np.linspace(-5, 5, 30) + true_intercept\r\ny_obs = y_data + np.random.normal(loc=0.0, scale=sigma, size=x_data.size)\r\n\r\n# Here I generate artificially some unequal uncertainties \r\n# (even if there is no reason for them to be so)\r\ny_uncertainties = sigma * np.random.normal(loc=1.0, scale=0.5*sigma, size=x_data.size)\r\n\r\n# Make the fit\r\npopt, pcov = np.polyfit(x_data, y_obs, 1, w=1/y_uncertainties, cov='unscaled')\r\npopt, pcov_scaled = np.polyfit(x_data, y_obs, 1, w=1/y_uncertainties, cov=True)\r\n\r\nmy_scale_factor = np.sum((y_obs - popt[0] * x_data  - popt[1])**2 / y_uncertainties**2)\\\r\n                         / (len(y_obs)-2)\r\n\r\nscale_factor =  pcov_scaled[0,0] / pcov[0,0]\r\n```\r\n\r\nAs you can see the real scaling factor is equal to \"my_scale_factor\", i.e. chi2/dof.\r\n\r\n### Numpy/Python version information:\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n1.18.5 3.7.7 (default, May  6 2020, 11:45:54) [MSC v.1916 64 bit (AMD64)]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16833", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16833/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16833/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16833/events", "html_url": "https://github.com/numpy/numpy/issues/16833", "id": 655512088, "node_id": "MDU6SXNzdWU2NTU1MTIwODg=", "number": 16833, "title": "binomial can return unitialized integers when `size` is passed with array values for `a` or `p`", "user": {"login": "rwalk", "id": 8158888, "node_id": "MDQ6VXNlcjgxNTg4ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8158888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwalk", "html_url": "https://github.com/rwalk", "followers_url": "https://api.github.com/users/rwalk/followers", "following_url": "https://api.github.com/users/rwalk/following{/other_user}", "gists_url": "https://api.github.com/users/rwalk/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwalk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwalk/subscriptions", "organizations_url": "https://api.github.com/users/rwalk/orgs", "repos_url": "https://api.github.com/users/rwalk/repos", "events_url": "https://api.github.com/users/rwalk/events{/privacy}", "received_events_url": "https://api.github.com/users/rwalk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359214, "node_id": "MDU6TGFiZWw2MzU5MjE0", "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug", "name": "00 - Bug", "color": "fef2c0", "default": false, "description": null}, {"id": 16917445, "node_id": "MDU6TGFiZWwxNjkxNzQ0NQ==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.random", "name": "component: numpy.random", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-13T00:47:27Z", "updated_at": "2020-07-14T19:41:49Z", "closed_at": "2020-07-14T19:41:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Array values for `a` and for `p` can give strange results when combined with `size`. In particular, it seems like `binomial` can return uninitialized integers (indeterminate values based on what's sitting in memory at the time).\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\nimport gc\r\nfrom numpy.random import binomial, seed\r\n\r\nseed(2)\r\nfor i in range(3):\r\n    print(\"Run number: {}\".format(i) )\r\n    print(binomial(1, [0.3, 0.7], size=(2,1)))\r\n    \r\n# Run number: 0\r\n# [[              1]\r\n#  [139987954384792]]\r\n# Run number: 1\r\n# [[                  1]\r\n#  [4604480259023595110]]\r\n# Run number: 2\r\n# [[                  1]\r\n#  [4604480259023595110]]\r\n```\r\n### Numpy/Python version information:\r\nI'm running python 3.8.2 on ubuntu 20.20 \r\n```\r\n1.19.0 3.8.2 (default, Apr 27 2020, 15:53:34) \r\n[GCC 9.3.0]\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16813", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16813/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16813/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16813/events", "html_url": "https://github.com/numpy/numpy/issues/16813", "id": 655332832, "node_id": "MDU6SXNzdWU2NTUzMzI4MzI=", "number": 16813, "title": "linspace should round towards -infinity", "user": {"login": "skoehler", "id": 568090, "node_id": "MDQ6VXNlcjU2ODA5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/568090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skoehler", "html_url": "https://github.com/skoehler", "followers_url": "https://api.github.com/users/skoehler/followers", "following_url": "https://api.github.com/users/skoehler/following{/other_user}", "gists_url": "https://api.github.com/users/skoehler/gists{/gist_id}", "starred_url": "https://api.github.com/users/skoehler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skoehler/subscriptions", "organizations_url": "https://api.github.com/users/skoehler/orgs", "repos_url": "https://api.github.com/users/skoehler/repos", "events_url": "https://api.github.com/users/skoehler/events{/privacy}", "received_events_url": "https://api.github.com/users/skoehler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16917082, "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib", "name": "component: numpy.lib", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-12T05:11:27Z", "updated_at": "2020-08-17T14:06:15Z", "closed_at": "2020-08-17T14:06:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Take a look at the following:\r\n\r\n````\r\n>>> np.linspace(0,10,num=50,endpoint=False,dtype=np.int32)\r\narray([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4,\r\n       4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8,\r\n       8, 9, 9, 9, 9, 9], dtype=int32)\r\n>>> np.linspace(-1,9,num=50,endpoint=False,dtype=np.int32)\r\narray([-1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  2,  2,\r\n        2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,\r\n        5,  6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8],\r\n      dtype=int32)\r\n````\r\n\r\nAs you can see, linspace creates a nice linear integer case in the first case. Note so much if the starting point is negative. IMHO, linspace should round towards -infinity when negative numbers are involved.\r\n\r\nAs a workaround, one can use the following which has the desired output:\r\n````\r\n>>> np.linspace(0,10,num=50,endpoint=False,dtype=np.int32)-1\r\narray([-1, -1, -1, -1, -1,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  2,  2,\r\n        2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,  5,\r\n        5,  6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8],\r\n      dtype=int32)\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16799", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16799/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16799/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16799/events", "html_url": "https://github.com/numpy/numpy/issues/16799", "id": 655059176, "node_id": "MDU6SXNzdWU2NTUwNTkxNzY=", "number": 16799, "title": "Importing the numpy c-extensions failed in Jupyter Notebook", "user": {"login": "JohnsonWhitney", "id": 42505006, "node_id": "MDQ6VXNlcjQyNTA1MDA2", "avatar_url": "https://avatars2.githubusercontent.com/u/42505006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnsonWhitney", "html_url": "https://github.com/JohnsonWhitney", "followers_url": "https://api.github.com/users/JohnsonWhitney/followers", "following_url": "https://api.github.com/users/JohnsonWhitney/following{/other_user}", "gists_url": "https://api.github.com/users/JohnsonWhitney/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnsonWhitney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnsonWhitney/subscriptions", "organizations_url": "https://api.github.com/users/JohnsonWhitney/orgs", "repos_url": "https://api.github.com/users/JohnsonWhitney/repos", "events_url": "https://api.github.com/users/JohnsonWhitney/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnsonWhitney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-10T22:01:58Z", "updated_at": "2020-07-11T16:35:36Z", "closed_at": "2020-07-11T06:06:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run the code below in Jupyter Notebook and got this error message below. I've already uninstall and reinstalled numpy. It says to look at PATH and PYTHONPATH, and after that says to make an Issue here, so that's what I've done.\r\n\r\nIt's my first time asking about an Issue here so thank you for your patience and let me know if I should have done something differently.\r\n\r\nThank you in advance for your help. \r\nSincerely,\r\nMatt\r\nmatt.johnson@abcusd.us\r\n\r\nNow though, let me make clear what I saw with that path step in case I'm not understanding something:\r\n\r\nCode to check PATH:\r\n import sys\r\n for p in sys.path:\r\n      print(p)\r\n\r\nGives me this:\r\nC:\\Users\\matha\\anaconda3\\envs\\genCPU\\python36.zip\r\nC:\\Users\\matha\\anaconda3\\envs\\genCPU\\DLLs\r\nC:\\Users\\matha\\anaconda3\\envs\\genCPU\\lib\r\nC:\\Users\\matha\\anaconda3\\envs\\genCPU\r\nC:\\Users\\matha\\anaconda3\\envs\\genCPU\\lib\\site-packages\r\nC:\\Users\\matha\\anaconda3\\envs\\genCPU\\lib\\site-packages\\win32\r\nC:\\Users\\matha\\anaconda3\\envs\\genCPU\\lib\\site-packages\\win32\\lib\r\nC:\\Users\\matha\\anaconda3\\envs\\genCPU\\lib\\site-packages\\Pythonwin\r\n\r\nI'm expecting to use 3.6 in this environment so it looks fine to me:\r\n\r\nCode to check PYTHONPATH (which I don't think I have):\r\n\r\nimport os\r\ntry:\r\n    user_paths = os.environ['PYTHONPATH'].split(os.pathsep)\r\nexcept KeyError:\r\n    user_paths = []\r\n\r\n\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\nfrom tensorflow.keras.layers import Input, Flatten, Dense, Conv2D\r\nfrom tensorflow.keras.models import Model\r\nfrom tensorflow.keras.optimizers import Adam\r\nfrom tensorflow.keras.utils import to_categorical\r\n\r\nfrom tensorflow.keras.datasets import cifar10\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n~\\anaconda3\\envs\\genCPU\\lib\\site-packages\\numpy\\core\\__init__.py in <module>\r\n     16 try:\r\n---> 17     from . import multiarray\r\n     18 except ImportError as exc:\r\n\r\n~\\anaconda3\\envs\\genCPU\\lib\\site-packages\\numpy\\core\\multiarray.py in <module>\r\n     13 \r\n---> 14 from . import overrides\r\n     15 from . import _multiarray_umath\r\n\r\n~\\anaconda3\\envs\\genCPU\\lib\\site-packages\\numpy\\core\\overrides.py in <module>\r\n      6 \r\n----> 7 from numpy.core._multiarray_umath import (\r\n      8     add_docstring, implement_array_function, _get_implementing_args)\r\n\r\nImportError: DLL load failed: The specified module could not be found.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-1-168b3dcea40e> in <module>\r\n----> 1 import numpy as np\r\n      2 import matplotlib.pyplot as plt\r\n      3 \r\n      4 from tensorflow.keras.layers import Input, Flatten, Dense, Conv2D\r\n      5 from tensorflow.keras.models import Model\r\n\r\n~\\anaconda3\\envs\\genCPU\\lib\\site-packages\\numpy\\__init__.py in <module>\r\n    140     from . import _distributor_init\r\n    141 \r\n--> 142     from . import core\r\n    143     from .core import *\r\n    144     from . import compat\r\n\r\n~\\anaconda3\\envs\\genCPU\\lib\\site-packages\\numpy\\core\\__init__.py in <module>\r\n     45 \"\"\" % (sys.version_info[0], sys.version_info[1], sys.executable,\r\n     46         __version__, exc)\r\n---> 47     raise ImportError(msg)\r\n     48 finally:\r\n     49     for envkey in env_added:\r\n\r\nImportError: \r\n\r\nIMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!\r\n\r\nImporting the numpy c-extensions failed.\r\n- Try uninstalling and reinstalling numpy.\r\n- If you have already done that, then:\r\n  1. Check that you expected to use Python3.6 from \"C:\\Users\\matha\\anaconda3\\envs\\genCPU\\python.exe\",\r\n     and that you have no directories in your PATH or PYTHONPATH that can\r\n     interfere with the Python and numpy version \"1.17.2\" you're trying to use.\r\n  2. If (1) looks fine, you can open a new issue at\r\n     https://github.com/numpy/numpy/issues.  Please include details on:\r\n     - how you installed Python\r\n     - how you installed numpy\r\n     - your operating system\r\n     - whether or not you have multiple versions of Python installed\r\n     - if you built from source, your compiler versions and ideally a build log\r\n\r\n- If you're working with a numpy git repository, try `git clean -xdf`\r\n  (removes all files not under version control) and rebuild numpy.\r\n\r\nNote: this error has many possible causes, so please don't comment on\r\nan existing issue about this - open a new one instead.\r\n\r\nOriginal error was: DLL load failed: The specified module could not be found.\r\n### Numpy/Python version information:\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n1.17.2 3.6.10 |Anaconda, Inc.| (default, May  7 2020, 19:46:08) [MSC v.1916 64 bit (AMD64)]\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16791", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16791/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16791/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16791/events", "html_url": "https://github.com/numpy/numpy/issues/16791", "id": 654409636, "node_id": "MDU6SXNzdWU2NTQ0MDk2MzY=", "number": 16791, "title": "ufunc doc not in html build ? ", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-09T23:31:41Z", "updated_at": "2020-07-21T18:39:19Z", "closed_at": "2020-07-21T18:39:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seem the docstring of \"ufunc\" is not in the html build of the docs:\r\n\r\n```\r\nIn [5]: from numpy import ufunc\r\n\r\nIn [6]: 'whole array' in ufunc.__doc__\r\nOut[6]: True\r\n```\r\n\r\nIf I grep the html build for \"whole array\" there is no results...\r\n\r\nufunc doc is set in `numpy/core/_add_newdocs.py`, like other things so there is no reason for it not to be built, it likely miss a entry in generated API ? Am I really bad at searching ? Or maybe that's on purpose.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16790", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16790/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16790/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16790/events", "html_url": "https://github.com/numpy/numpy/issues/16790", "id": 654318561, "node_id": "MDU6SXNzdWU2NTQzMTg1NjE=", "number": 16790, "title": "+= Operator on list of indices - unexpected behaviour", "user": {"login": "mishana", "id": 5438682, "node_id": "MDQ6VXNlcjU0Mzg2ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5438682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mishana", "html_url": "https://github.com/mishana", "followers_url": "https://api.github.com/users/mishana/followers", "following_url": "https://api.github.com/users/mishana/following{/other_user}", "gists_url": "https://api.github.com/users/mishana/gists{/gist_id}", "starred_url": "https://api.github.com/users/mishana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mishana/subscriptions", "organizations_url": "https://api.github.com/users/mishana/orgs", "repos_url": "https://api.github.com/users/mishana/repos", "events_url": "https://api.github.com/users/mishana/events{/privacy}", "received_events_url": "https://api.github.com/users/mishana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-07-09T20:10:51Z", "updated_at": "2020-07-09T23:14:37Z", "closed_at": "2020-07-09T23:14:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I stumbled upon an interesting and unexpected (to me) behaviour when using the `+=` operator on a `np.ndarray`:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\n\r\na = np.zeros(3)\r\n\r\nindices = [0, 0, 1, 1, 2]\r\na[indices] += 1\r\n```\r\nThe thing is, knowing that `+=` avoids creating copies and that slicing also creates views and not copies, I would expect this to add 2 to `a[0]`, 2 to `a[1]` and 1 to `a[2]`. Instead I witness the following:\r\n\r\n```python\r\n>>> a\r\narray([1., 1., 1.])\r\n```\r\n\r\nIs this a bug? If not, can you please explain this?\r\n\r\nThanks,\r\nMichael", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16785", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16785/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16785/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16785/events", "html_url": "https://github.com/numpy/numpy/issues/16785", "id": 653533258, "node_id": "MDU6SXNzdWU2NTM1MzMyNTg=", "number": 16785, "title": "Concatenation issue during array transformation ", "user": {"login": "kroppian", "id": 2205535, "node_id": "MDQ6VXNlcjIyMDU1MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2205535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kroppian", "html_url": "https://github.com/kroppian", "followers_url": "https://api.github.com/users/kroppian/followers", "following_url": "https://api.github.com/users/kroppian/following{/other_user}", "gists_url": "https://api.github.com/users/kroppian/gists{/gist_id}", "starred_url": "https://api.github.com/users/kroppian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kroppian/subscriptions", "organizations_url": "https://api.github.com/users/kroppian/orgs", "repos_url": "https://api.github.com/users/kroppian/repos", "events_url": "https://api.github.com/users/kroppian/events{/privacy}", "received_events_url": "https://api.github.com/users/kroppian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-08T19:14:22Z", "updated_at": "2020-07-08T19:19:13Z", "closed_at": "2020-07-08T19:19:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\nI'm getting this weird concatenating issue when trying to transform a numpy array. When I filter by the 2nd column of the array, I get correct results, but when I filter by the third, the dtype is changed to U1, and the text is truncated. \r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\n\r\ndat = np.array([[2.017298e+06, 7.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00], \r\n                [2.017299e+06, 7.000000e+00, 0.000000e+00, 0.000000e+00, 0.000000e+00], \r\n                [2.017199e+06, 0.000000e+00, 2.000000e+02, 0.000000e+00, 0.000000e+00], \r\n                [2.017135e+06, 0.000000e+00, 7.000000e+01, 1.000000e+01, 4.000000e+00]])\r\n\r\nresA = np.apply_along_axis( (lambda a : \"foo\" if (a[1] != 0) else \"\" ), 1, dat)\r\n\r\nresB = np.apply_along_axis( (lambda a : \"foo\" if (a[2] != 0) else \"\" ), 1, dat)\r\n\r\nprint(\"Res A\")\r\nprint(resA)\r\nprint(\"Res B\")\r\nprint(resB)\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Output message:\r\nI expected: \r\n```\r\nResults\r\nRes A\r\n['foo' 'foo' '' '']\r\nRes B\r\n['' '' 'foo' 'foo']\r\n```\r\nBut got: \r\n```\r\nResults\r\nRes A\r\n['foo' 'foo' '' '']\r\nRes B\r\n['' '' 'f' 'f']\r\n```\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\n### Numpy/Python version information:\r\n\r\n1.18.1 3.7.6 (default, Jan  8 2020, 19:59:22) \r\n[GCC 7.3.0]\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16783", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16783/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16783/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16783/events", "html_url": "https://github.com/numpy/numpy/issues/16783", "id": 653289450, "node_id": "MDU6SXNzdWU2NTMyODk0NTA=", "number": 16783, "title": "Speed up trim_zeros", "user": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359239, "node_id": "MDU6TGFiZWw2MzU5MjM5", "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement", "name": "01 - Enhancement", "color": "fef2c0", "default": false, "description": null}, {"id": 1086491601, "node_id": "MDU6TGFiZWwxMDg2NDkxNjAx", "url": "https://api.github.com/repos/numpy/numpy/labels/28%20-%20Benchmark", "name": "28 - Benchmark", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-08T13:16:38Z", "updated_at": "2020-08-04T04:00:37Z", "closed_at": "2020-08-04T04:00:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```py\r\na = np.hstack([\r\n    np.zeros((100_000,)),\r\n    np.random.uniform(size=(100_000,)),\r\n    np.zeros((100_000,)),\r\n])\r\ntrim_zeros(a)\r\n```\r\n\r\nHere the call to `trim_zeros` takes about 50ms.\r\n\r\nLooking at the implementation of `trim_zeros`, it is implemented in the most obvious and unoptimized way imaginable (a for loop looking at each item separately).\r\n\r\nI think there should be a warning in the documentation about the fact that it's entirely unoptimized and may be horrendously slow, or we should strive to improve performance.\r\n\r\nAs an implementation idea to improve performance, I prototyped a \"block-wise\" trim function to be used before `trim_zeros`:\r\n\r\n```py\r\ndef fast_trim_zeros(filt, trim='fb'):\r\n    filt = trim_zeros_block(filt, trim)\r\n    return np.trim_zeros(filt, trim)\r\n\r\n\r\ndef trim_zeros_block(filt, trim='fb', block_size=1024):\r\n    \"\"\"Trim blocks of zeros\"\"\"\r\n    trim = trim.upper()\r\n    first = 0\r\n    if 'F' in trim:\r\n        for i in range(0, len(filt), block_size):\r\n            if np.any(filt[i:i+block_size] != 0.):\r\n                first = i\r\n                break\r\n    last = len(filt)\r\n    if 'B' in trim:\r\n        for i in range(len(filt)-1, block_size - 1, -block_size):\r\n            if np.any(filt[i-block_size:i] != 0.):\r\n                last = i\r\n                break\r\n    return filt[first:last]\r\n```\r\n\r\nSpeed of a call to `fast_trim_zeros` is about 2ms, so roughly 25x as fast.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16781", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16781/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16781/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16781/events", "html_url": "https://github.com/numpy/numpy/issues/16781", "id": 653078056, "node_id": "MDU6SXNzdWU2NTMwNzgwNTY=", "number": 16781, "title": " Importing the multiarray numpy extension module failed", "user": {"login": "idodidodi", "id": 13060924, "node_id": "MDQ6VXNlcjEzMDYwOTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/13060924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idodidodi", "html_url": "https://github.com/idodidodi", "followers_url": "https://api.github.com/users/idodidodi/followers", "following_url": "https://api.github.com/users/idodidodi/following{/other_user}", "gists_url": "https://api.github.com/users/idodidodi/gists{/gist_id}", "starred_url": "https://api.github.com/users/idodidodi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idodidodi/subscriptions", "organizations_url": "https://api.github.com/users/idodidodi/orgs", "repos_url": "https://api.github.com/users/idodidodi/repos", "events_url": "https://api.github.com/users/idodidodi/events{/privacy}", "received_events_url": "https://api.github.com/users/idodidodi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501057526, "node_id": "MDU6TGFiZWwxNTAxMDU3NTI2", "url": "https://api.github.com/repos/numpy/numpy/labels/32%20-%20Installation", "name": "32 - Installation", "color": "fef2c0", "default": false, "description": "Problems installing or compiling NumPy"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-08T07:57:11Z", "updated_at": "2020-08-05T21:51:16Z", "closed_at": "2020-08-05T21:51:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n### Reproducing code example:\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\n<< your code here >>\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n\r\ndlopen(../numpy/core/_multiarray_umath.cpython-36m-darwin.so, 2): Library not loaded: @loader_path/../.dylibs/libopenblasp-r0.3.5.dev.dylib\\n  Referenced from: ../numpy/core/_multiarray_umath.cpython-36m-darwin.so\\n  Reason: image not found\r\n\r\n\r\nFile \"numpy/core/__init__.py\", line 16, in <module>\r\nFile \"../pythonVirtualEnv/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 627, in exec_module\r\n    exec(bytecode, module.__dict__)\r\nFile \"numpy/core/multiarray.py\", line 12, in <module>\r\nFile \"../pythonVirtualEnv/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 627, in exec_module\r\n    exec(bytecode, module.__dict__)\r\nFile \"numpy/core/overrides.py\", line 6, in <module>\r\nImportError: dlopen(../numpy/core/_multiarray_umath.cpython-36m-darwin.so, 2): Library not loaded: @loader_path/../.dylibs/libopenblasp-r0.3.5.dev.dylib\r\n  Referenced from: ../numpy/core/_multiarray_umath.cpython-36m-darwin.so\r\n  Reason: image not found\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n\r\nTraceback (most recent call last):\r\n File \"wpivot-client\", line 16, in <module>\r\n    import utils\r\n\r\nFile \"../pythonVirtualEnv/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 627, in exec_module\r\nexec(bytecode, module.__dict__)\r\n  File \"utils/__init__.py\", line 1, in <module>\r\n    from .files import *\r\n  File \"../pythonVirtualEnv/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 627, in exec_module\r\nexec(bytecode, module.__dict__)\r\nFile \"utils/files.py\", line 18, in <module>\r\nimport numpy as np\r\nFile \"../pythonVirtualEnv/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 627, in exec_module\r\nexec(bytecode, module.__dict__)\r\nImportError: \r\n\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\n### Numpy/Python version information:\r\nPython installation > standard installation + modules \r\n Numpy installation - standard installation\r\n\r\n OS: Catalina\r\nPython versions:   2.7, 3.6.4\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16774", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16774/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16774/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16774/events", "html_url": "https://github.com/numpy/numpy/issues/16774", "id": 651940597, "node_id": "MDU6SXNzdWU2NTE5NDA1OTc=", "number": 16774, "title": "A mishandling of the Python/C API exception?", "user": {"login": "Elaphurus", "id": 16870808, "node_id": "MDQ6VXNlcjE2ODcwODA4", "avatar_url": "https://avatars3.githubusercontent.com/u/16870808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elaphurus", "html_url": "https://github.com/Elaphurus", "followers_url": "https://api.github.com/users/Elaphurus/followers", "following_url": "https://api.github.com/users/Elaphurus/following{/other_user}", "gists_url": "https://api.github.com/users/Elaphurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elaphurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elaphurus/subscriptions", "organizations_url": "https://api.github.com/users/Elaphurus/orgs", "repos_url": "https://api.github.com/users/Elaphurus/repos", "events_url": "https://api.github.com/users/Elaphurus/events{/privacy}", "received_events_url": "https://api.github.com/users/Elaphurus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-07T02:23:30Z", "updated_at": "2020-07-07T03:16:10Z", "closed_at": "2020-07-07T03:16:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Exceptions threw using the Python/C API like `PyErr_SetString` should be followed by a `return` statement, NumPy follows this almost everywhere, but is the following one I found a carelessness? \r\n([numpy/numpy/core/src/multiarray/methods.c#L736](https://github.com/numpy/numpy/blob/master/numpy/core/src/multiarray/methods.c#L736))\r\n\r\n```python\r\nif (n == 0) {\r\n    if (PyArray_SIZE(self) == 1) {\r\n        for (idim = 0; idim < ndim; ++idim) {\r\n            multi_index[idim] = 0;\r\n        }\r\n    }\r\n    else {\r\n        PyErr_SetString(PyExc_ValueError,\r\n                \"can only convert an array of size 1 to a Python scalar\");\r\n        // should have a `return NULL;` here?\r\n    }\r\n}\r\n```\r\n\r\nIf this is a wrong issue for my limited understanding, please give me some hints, I will appreciate that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16773", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16773/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16773/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16773/events", "html_url": "https://github.com/numpy/numpy/issues/16773", "id": 651935463, "node_id": "MDU6SXNzdWU2NTE5MzU0NjM=", "number": 16773, "title": "A mishandling of the Python/C API exception?", "user": {"login": "Elaphurus", "id": 16870808, "node_id": "MDQ6VXNlcjE2ODcwODA4", "avatar_url": "https://avatars3.githubusercontent.com/u/16870808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elaphurus", "html_url": "https://github.com/Elaphurus", "followers_url": "https://api.github.com/users/Elaphurus/followers", "following_url": "https://api.github.com/users/Elaphurus/following{/other_user}", "gists_url": "https://api.github.com/users/Elaphurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elaphurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elaphurus/subscriptions", "organizations_url": "https://api.github.com/users/Elaphurus/orgs", "repos_url": "https://api.github.com/users/Elaphurus/repos", "events_url": "https://api.github.com/users/Elaphurus/events{/privacy}", "received_events_url": "https://api.github.com/users/Elaphurus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T02:10:21Z", "updated_at": "2020-07-19T17:20:34Z", "closed_at": "2020-07-08T16:22:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Exceptions threw using the Python/C API like `PyErr_SetString` should be followed by a `return` statement, NumPy follows this almost everywhere, but is the following one I found a carelessness? \r\n([numpy/numpy/core/src/multiarray/methods.c#L736](https://github.com/numpy/numpy/blob/master/numpy/core/src/multiarray/methods.c#L736))\r\n\r\n```python\r\nif (n == 0) {\r\n    if (PyArray_SIZE(self) == 1) {\r\n        for (idim = 0; idim < ndim; ++idim) {\r\n            multi_index[idim] = 0;\r\n        }\r\n    }\r\n    else {\r\n        PyErr_SetString(PyExc_ValueError,\r\n                \"can only convert an array of size 1 to a Python scalar\");\r\n        // should have a `return NULL;` here?\r\n    }\r\n}\r\n```\r\n\r\nIf this is a wrong issue for my limited understanding, please give me some hints, I will appreciate that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16766", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16766/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16766/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16766/events", "html_url": "https://github.com/numpy/numpy/issues/16766", "id": 651510664, "node_id": "MDU6SXNzdWU2NTE1MTA2NjQ=", "number": 16766, "title": "numpy.random.RandomState.choice produces different results when p is None versus p given equal proabilities ", "user": {"login": "hermidalc", "id": 461066, "node_id": "MDQ6VXNlcjQ2MTA2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/461066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hermidalc", "html_url": "https://github.com/hermidalc", "followers_url": "https://api.github.com/users/hermidalc/followers", "following_url": "https://api.github.com/users/hermidalc/following{/other_user}", "gists_url": "https://api.github.com/users/hermidalc/gists{/gist_id}", "starred_url": "https://api.github.com/users/hermidalc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hermidalc/subscriptions", "organizations_url": "https://api.github.com/users/hermidalc/orgs", "repos_url": "https://api.github.com/users/hermidalc/repos", "events_url": "https://api.github.com/users/hermidalc/events{/privacy}", "received_events_url": "https://api.github.com/users/hermidalc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-06T12:48:10Z", "updated_at": "2020-07-06T16:08:50Z", "closed_at": "2020-07-06T16:08:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "`numpy.random.RandomState.choice`, which e.g. pandas and other major libraries still use, unexpectedly produces different results when `p=None` versus setting p to a list of equal probabilities, is this intentional?\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\n\r\naa_milne_arr = ['pooh', 'rabbit', 'piglet', 'Christopher']\r\n\r\nrng = np.random.RandomState(777)\r\nfor _ in range(10):\r\n    print(rng.choice(aa_milne_arr))\r\n```\r\n```\r\nChristopher\r\nChristopher\r\nChristopher\r\npiglet\r\nChristopher\r\nrabbit\r\nChristopher\r\nrabbit\r\nChristopher\r\npooh\r\n```\r\n```python\r\nrng = np.random.RandomState(777)\r\nfor _ in range(10):\r\n    print(rng.choice(aa_milne_arr, p=[0.25] * 4))\r\n```\r\n```\r\npooh\r\nrabbit\r\npooh\r\nrabbit\r\nChristopher\r\nChristopher\r\npiglet\r\nChristopher\r\nrabbit\r\npiglet\r\n```\r\n\r\n### Numpy/Python version information:\r\n\r\n1.18.5 3.8.3 | packaged by conda-forge | (default, Jun  1 2020, 17:43:00) [GCC 7.5.0]\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16754", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16754/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16754/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16754/events", "html_url": "https://github.com/numpy/numpy/issues/16754", "id": 651048049, "node_id": "MDU6SXNzdWU2NTEwNDgwNDk=", "number": 16754, "title": "md5sum of numpy-1.19.0.tar.gz does not match the reality", "user": {"login": "dimpase", "id": 1276956, "node_id": "MDQ6VXNlcjEyNzY5NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1276956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimpase", "html_url": "https://github.com/dimpase", "followers_url": "https://api.github.com/users/dimpase/followers", "following_url": "https://api.github.com/users/dimpase/following{/other_user}", "gists_url": "https://api.github.com/users/dimpase/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimpase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimpase/subscriptions", "organizations_url": "https://api.github.com/users/dimpase/orgs", "repos_url": "https://api.github.com/users/dimpase/repos", "events_url": "https://api.github.com/users/dimpase/events{/privacy}", "received_events_url": "https://api.github.com/users/dimpase/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-05T11:01:32Z", "updated_at": "2020-07-13T21:29:04Z", "closed_at": "2020-07-13T20:14:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n### Reproducing code example:\r\n\r\nDownload  https://github.com/numpy/numpy/archive/v1.19.0.tar.gz and check that its md5sum has changed.\r\nNamely, it is `e3baa59da67348c2d6596803514129db`\r\nand not what the release page says, d59aadf47354bd10c7b9996032ba4da0\r\n\r\nProbably it's another instance of unstable GitHub-generated tarballs. The usual fix would be to manually (or otherwise) edit the release and upload a tarball as a \"binary asset\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16753", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16753/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16753/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16753/events", "html_url": "https://github.com/numpy/numpy/issues/16753", "id": 650950678, "node_id": "MDU6SXNzdWU2NTA5NTA2Nzg=", "number": 16753, "title": "Importing numpy fails if there is a file named `random.py` in the current directory.", "user": {"login": "luciotorre", "id": 469561, "node_id": "MDQ6VXNlcjQ2OTU2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/469561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luciotorre", "html_url": "https://github.com/luciotorre", "followers_url": "https://api.github.com/users/luciotorre/followers", "following_url": "https://api.github.com/users/luciotorre/following{/other_user}", "gists_url": "https://api.github.com/users/luciotorre/gists{/gist_id}", "starred_url": "https://api.github.com/users/luciotorre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luciotorre/subscriptions", "organizations_url": "https://api.github.com/users/luciotorre/orgs", "repos_url": "https://api.github.com/users/luciotorre/repos", "events_url": "https://api.github.com/users/luciotorre/events{/privacy}", "received_events_url": "https://api.github.com/users/luciotorre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-04T20:22:47Z", "updated_at": "2020-07-04T20:38:18Z", "closed_at": "2020-07-04T20:38:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Importing numpy fails if there is a file named `random.py` in the current directory.\r\n\r\n### Reproducing code example:\r\n```\r\nlucio@solenoid:~/tmp/stest$ ls -la\r\ntotal 8\r\ndrwxrwxr-x 2 lucio lucio 4096 jul  4 21:20 .\r\ndrwxrwxr-x 7 lucio lucio 4096 jul  4 20:47 ..\r\nlucio@solenoid:~/tmp/stest$ python3 --version\r\nPython 3.8.2\r\nlucio@solenoid:~/tmp/stest$ python3 -c \"import numpy; print(numpy.__version__)\"\r\n1.17.4\r\nlucio@solenoid:~/tmp/stest$ touch random.py\r\nlucio@solenoid:~/tmp/stest$ python3 -c \"import numpy; print(numpy.__version__)\"\r\nTraceback (most recent call last):\r\n  File \"bit_generator.pyx\", line 40, in numpy.random.bit_generator\r\n  File \"/usr/lib/python3.8/secrets.py\", line 20, in <module>\r\n    from random import SystemRandom\r\nImportError: cannot import name 'SystemRandom' from 'random' (/home/lucio/tmp/stest/random.py)\r\n<traceback clipped>\r\n```\r\n\r\n```\r\n$ python3 -c \"import sys, numpy; print(numpy.__version__, sys.version)\"\r\n1.17.4 3.8.2 (default, Apr 27 2020, 15:53:34) \r\n[GCC 9.3.0]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16749", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16749/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16749/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16749/events", "html_url": "https://github.com/numpy/numpy/issues/16749", "id": 650891033, "node_id": "MDU6SXNzdWU2NTA4OTEwMzM=", "number": 16749, "title": "Is numpy safe to use with overlapping inputs and output?", "user": {"login": "skoehler", "id": 568090, "node_id": "MDQ6VXNlcjU2ODA5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/568090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skoehler", "html_url": "https://github.com/skoehler", "followers_url": "https://api.github.com/users/skoehler/followers", "following_url": "https://api.github.com/users/skoehler/following{/other_user}", "gists_url": "https://api.github.com/users/skoehler/gists{/gist_id}", "starred_url": "https://api.github.com/users/skoehler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skoehler/subscriptions", "organizations_url": "https://api.github.com/users/skoehler/orgs", "repos_url": "https://api.github.com/users/skoehler/repos", "events_url": "https://api.github.com/users/skoehler/events{/privacy}", "received_events_url": "https://api.github.com/users/skoehler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-04T13:23:58Z", "updated_at": "2020-07-16T23:16:31Z", "closed_at": "2020-07-16T23:16:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I fail to find the part of the documentation that would state that numpy is always safe to use with overlapping inputs and outputs. In particular, I cannot be sure right now,  whether I'm using numpy in a safe way. For example, `numpy.subtract` does not even mention the overlapping issue.\r\n\r\nConsider the following code (which assumes that `d` is a numpy array).\r\n```python\r\nd[1:] -= d[:-1]\r\nnp.subtract(d[1:], d[:-1], out=d[1:])\r\n```\r\nMy hope would be that both is equivalent to\r\n```python\r\n...\r\nd[9] -= d[8]\r\nd[8] -= d[7]\r\nd[7] -= d[6]\r\nd[6] -= d[5]\r\n...\r\n```\r\n\r\nAs you can see, this only works if the subtraction is done from back to front for two reasons:\r\n- the value of d[i-1] must not be changed before d[i-1] is subtracted from d[i]\r\n- the result is written back to d[i]\r\n\r\nOne can imagine where the subtraction can only be done front to back, for example.\r\n```python\r\nnp.subtract(d[1:], d[:-1], out=d[:-1])\r\n```\r\n\r\nIs numpy safe to use in such situations? Is the subtraction performed in-place?\r\nWhere is the documentation of that issue?\r\n\r\nMaybe there is even a combination of overlapping inputs and outputs that cannot work, no matter the direction?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16745", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16745/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16745/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16745/events", "html_url": "https://github.com/numpy/numpy/issues/16745", "id": 650777182, "node_id": "MDU6SXNzdWU2NTA3NzcxODI=", "number": 16745, "title": "Document ndindex(shape)", "user": {"login": "inducer", "id": 352067, "node_id": "MDQ6VXNlcjM1MjA2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/352067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inducer", "html_url": "https://github.com/inducer", "followers_url": "https://api.github.com/users/inducer/followers", "following_url": "https://api.github.com/users/inducer/following{/other_user}", "gists_url": "https://api.github.com/users/inducer/gists{/gist_id}", "starred_url": "https://api.github.com/users/inducer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inducer/subscriptions", "organizations_url": "https://api.github.com/users/inducer/orgs", "repos_url": "https://api.github.com/users/inducer/repos", "events_url": "https://api.github.com/users/inducer/events{/privacy}", "received_events_url": "https://api.github.com/users/inducer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-03T21:57:55Z", "updated_at": "2020-07-12T20:37:27Z", "closed_at": "2020-07-12T20:37:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This usage of `ndindex`:\r\n```\r\n>>> list(np.ndindex((3,2)))\r\n[(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1)]\r\n```\r\nseems to work with \r\n```\r\n>>> np.__version__\r\n'1.18.4'\r\n```\r\nbut it's not [documented](https://numpy.org/doc/stable/reference/generated/numpy.ndindex.html). Is this usage intended to be allowed? (I'd like it to be, because if `shape == 5` then `np.index(shape)` works while `np.ndindex(*shape)` does not.) If it is, could it be added to the docs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16737", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16737/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16737/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16737/events", "html_url": "https://github.com/numpy/numpy/issues/16737", "id": 650298844, "node_id": "MDU6SXNzdWU2NTAyOTg4NDQ=", "number": 16737, "title": "BUG: np.matmul segfaults on PyPy, perhaps related to BLAS SKX", "user": {"login": "Qiyu8", "id": 15245051, "node_id": "MDQ6VXNlcjE1MjQ1MDUx", "avatar_url": "https://avatars3.githubusercontent.com/u/15245051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qiyu8", "html_url": "https://github.com/Qiyu8", "followers_url": "https://api.github.com/users/Qiyu8/followers", "following_url": "https://api.github.com/users/Qiyu8/following{/other_user}", "gists_url": "https://api.github.com/users/Qiyu8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qiyu8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qiyu8/subscriptions", "organizations_url": "https://api.github.com/users/Qiyu8/orgs", "repos_url": "https://api.github.com/users/Qiyu8/repos", "events_url": "https://api.github.com/users/Qiyu8/events{/privacy}", "received_events_url": "https://api.github.com/users/Qiyu8/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359945, "node_id": "MDU6TGFiZWw2MzU5OTQ1", "url": "https://api.github.com/repos/numpy/numpy/labels/05%20-%20Testing", "name": "05 - Testing", "color": "fef2c0", "default": false, "description": ""}, {"id": 535402461, "node_id": "MDU6TGFiZWw1MzU0MDI0NjE=", "url": "https://api.github.com/repos/numpy/numpy/labels/24%20-%20PyPy", "name": "24 - PyPy", "color": "fef2c0", "default": false, "description": null}, {"id": 16915566, "node_id": "MDU6TGFiZWwxNjkxNTU2Ng==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.linalg", "name": "component: numpy.linalg", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2020-07-03T02:25:37Z", "updated_at": "2020-08-17T05:05:45Z", "closed_at": "2020-08-17T05:05:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm trying to solve the CI failure of #16482 , It's seems like a strange stuck occurred which causes the failure of TestCholesky.test_basic_property.\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\nshape = (50, 50)\r\na = np.random.randn(*shape)\r\na = np.matmul(a.T, a) #stucked\r\n```\r\nThe stuck disappeared when shape is under(40, 40) or change a.T to a.\r\n### Error message:\r\n\r\nno response, Into an infinite loop\r\n\r\n### Numpy/Python version information:\r\n\r\n1.20.0.dev0+3cf4c28 3.7.0 (default, Mar 16 2020, 00:02:15)\r\n[GCC 7.3.0]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16728", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16728/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16728/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16728/events", "html_url": "https://github.com/numpy/numpy/issues/16728", "id": 649700601, "node_id": "MDU6SXNzdWU2NDk3MDA2MDE=", "number": 16728, "title": "genfromtxt fails in latest 1.19.0 with some parameters", "user": {"login": "FedeMiorelli", "id": 7534987, "node_id": "MDQ6VXNlcjc1MzQ5ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7534987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedeMiorelli", "html_url": "https://github.com/FedeMiorelli", "followers_url": "https://api.github.com/users/FedeMiorelli/followers", "following_url": "https://api.github.com/users/FedeMiorelli/following{/other_user}", "gists_url": "https://api.github.com/users/FedeMiorelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedeMiorelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedeMiorelli/subscriptions", "organizations_url": "https://api.github.com/users/FedeMiorelli/orgs", "repos_url": "https://api.github.com/users/FedeMiorelli/repos", "events_url": "https://api.github.com/users/FedeMiorelli/events{/privacy}", "received_events_url": "https://api.github.com/users/FedeMiorelli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359214, "node_id": "MDU6TGFiZWw2MzU5MjE0", "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug", "name": "00 - Bug", "color": "fef2c0", "default": false, "description": null}, {"id": 6394859, "node_id": "MDU6TGFiZWw2Mzk0ODU5", "url": "https://api.github.com/repos/numpy/numpy/labels/06%20-%20Regression", "name": "06 - Regression", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-02T07:24:13Z", "updated_at": "2020-07-08T15:18:55Z", "closed_at": "2020-07-08T14:49:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since updating to numpy 1.19.0, the function genfromtxt fails in some cases, parsing floating point numbers as complex values (with 0 imaginary part) and failing trying to convert them later to float.\r\n\r\nThis occurs only with some combination of parameters. In this example, it fails if the user specifies the field names but succeeds otherwise.\r\n\r\nBelow is a short code to reproduce and a small data file to test.\r\n**[test.txt](https://github.com/numpy/numpy/files/4862568/test.txt)**\r\n\r\n<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\nfilename = 'test.txt' # link to the file is above\r\ndata1 = np.genfromtxt(filename, usecols=(3,))  # This works\r\ndata2 = np.genfromtxt(filename, usecols=(3,), names=['a'])  # This doesn't\r\n\r\n```\r\n\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\WinPython-64bit-3.8.3.0\\python-3.8.3.amd64\\lib\\site-packages\\numpy\\lib\\npyio.py\", line 2210, in genfromtxt\r\n    output = np.array(data, dtype)\r\nTypeError: can't convert complex to float\r\n```\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\n### Output with numpy 1.17.2\r\n```\r\n>>> np.genfromtxt('test.txt', usecols=(3,))\r\narray([2.73, 2.73, 2.59, 2.59, 2.65, 2.65])\r\n>>> np.genfromtxt('test.txt', usecols=(3,), names=['a'])\r\narray([(2.73,), (2.73,), (2.59,), (2.59,), (2.65,), (2.65,)],\r\n      dtype=[('a', '<f8')])\r\n```\r\n\r\n### Output with numpy 1.19.0\r\n```\r\n>>> np.genfromtxt('test.txt', usecols=(3,))\r\narray([2.73, 2.73, 2.59, 2.59, 2.65, 2.65])\r\n>>> np.genfromtxt('test.txt', usecols=(3,), names=['a'])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\WinPython-64bit-3.8.3.0\\python-3.8.3.amd64\\lib\\site-packages\\numpy\\lib\\npyio.py\", line 2210, in genfromtxt\r\n    output = np.array(data, dtype)\r\nTypeError: can't convert complex to float\r\n>>>                                                  \r\n```\r\n\r\n\r\n### Numpy/Python version information:\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n`1.19.0 3.8.3 (tags/v3.8.3:6f8c832, May 13 2020, 22:37:02) [MSC v.1924 64 bit (AMD64)]`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16727", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16727/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16727/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16727/events", "html_url": "https://github.com/numpy/numpy/issues/16727", "id": 649700508, "node_id": "MDU6SXNzdWU2NDk3MDA1MDg=", "number": 16727, "title": "how numpy support slice ND array  efficiently?", "user": {"login": "littleDrew", "id": 29976824, "node_id": "MDQ6VXNlcjI5OTc2ODI0", "avatar_url": "https://avatars2.githubusercontent.com/u/29976824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/littleDrew", "html_url": "https://github.com/littleDrew", "followers_url": "https://api.github.com/users/littleDrew/followers", "following_url": "https://api.github.com/users/littleDrew/following{/other_user}", "gists_url": "https://api.github.com/users/littleDrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/littleDrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/littleDrew/subscriptions", "organizations_url": "https://api.github.com/users/littleDrew/orgs", "repos_url": "https://api.github.com/users/littleDrew/repos", "events_url": "https://api.github.com/users/littleDrew/events{/privacy}", "received_events_url": "https://api.github.com/users/littleDrew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-02T07:24:03Z", "updated_at": "2020-07-05T18:42:05Z", "closed_at": "2020-07-05T18:42:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n### Reproducing code example:\r\n- here i thought numpy do good with flexiable index operation, like slice etc\r\n```python\r\na = [[1,2,3],[4, 5, 6]]\r\na = np.array(a)\r\n\r\n#do slice operation:\r\nb = a[0:2, 0:2]\r\n\r\n# obtain b = [[1, 2], [4, 5]]\r\n# here how it do data value copy efficently in c++ layer? it must not copy element by element\r\n# copy row by row? and caculate the begin address of each row element ?\r\n\r\n```\r\n- And want how this is supported in numpy source code\r\n- which part of code can i refer? hope help to explain and figure out.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16722", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16722/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16722/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16722/events", "html_url": "https://github.com/numpy/numpy/issues/16722", "id": 649093428, "node_id": "MDU6SXNzdWU2NDkwOTM0Mjg=", "number": 16722, "title": "Add clause to license prohibiting use by oil and gas extraction companies", "user": {"login": "wcerfgba", "id": 1129959, "node_id": "MDQ6VXNlcjExMjk5NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1129959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wcerfgba", "html_url": "https://github.com/wcerfgba", "followers_url": "https://api.github.com/users/wcerfgba/followers", "following_url": "https://api.github.com/users/wcerfgba/following{/other_user}", "gists_url": "https://api.github.com/users/wcerfgba/gists{/gist_id}", "starred_url": "https://api.github.com/users/wcerfgba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wcerfgba/subscriptions", "organizations_url": "https://api.github.com/users/wcerfgba/orgs", "repos_url": "https://api.github.com/users/wcerfgba/repos", "events_url": "https://api.github.com/users/wcerfgba/events{/privacy}", "received_events_url": "https://api.github.com/users/wcerfgba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-01T15:56:20Z", "updated_at": "2020-07-01T18:47:15Z", "closed_at": "2020-07-01T17:39:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "\"NumPy is the fundamental package needed for scientific computing with Python.\"\r\n\r\nI am asking the NumPy project to leverage its position as a core dependency among statistical, numerical, and ML projects, in the pursuit of climate justice. It is easy to identify open-source software used by the oil and gas industry which relies on NumPy [1] [2] , and it is highly likely that NumPy is used in closed-source and in-house software at oil and gas extraction companies such as Aramco, ExxonMobil, BP, Shell, and others. I believe it is possible to use software licensing to discourage the use of NumPy and dependent packages by companies such as these, and that doing so would frustrate the ability of these companies to identify and extract new oil and gas reserves.\r\n\r\nI propose NumPy's current BSD 3-Clause license be extended to include the following conditions, in line with the Climate Strike License [3] :\r\n\r\n```\r\n    * The Software may not be used in applications and services that are used for or\r\n       aid in the exploration, extraction, refinement, processing, or transportation\r\n       of fossil fuels.\r\n\r\n    * The Software may not be used by companies that rely on fossil fuel extraction\r\n       as their primary means of revenue. This includes but is not limited to the\r\n       companies listed at https://climatestrike.software/blocklist\r\n```\r\n\r\nI accept that there are issues around adopting such a proposal, including that:\r\n\r\n* addition of such clauses violates the Open Source Initiative's canonical Open Source Definition, which explicitly excludes licenses that limit re-use \"in a specific field of endeavor\", and therefore if these clauses were adopted NumPy would no longer \"be open-source\" by this definition;\r\n* there may be collateral damage among the wider user base and project sponsorship, due to the vague nature of the first clause, and this may affect the longevity of the project and its standing within the Python, numerical, statistical, and ML communities.\r\n\r\nMy intention with the opening of this issue is to promote constructive discussion of the use of software licensing -- and other measures -- for working towards climate justice -- and other forms of justice -- in the context of NumPy and other popular open-source libraries. Some people will say that NumPy is \"just a tool\" and that it sits independent of how it is used, but due to its utility and its influence as a major open-source library, I think it is essential that we consider the position of the Climate Strike License authors, that \"as tech workers, we should take responsibility in how our software is used\".\r\n\r\nMany thanks to all of the contributors who have put so much time and energy into NumPy. :sparkles: :heart: :smiley:  \r\n\r\n[1] https://github.com/gazprom-neft/petroflow\r\n[2] https://github.com/climate-strike/analysis\r\n[3] https://github.com/climate-strike/license", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16721", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16721/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16721/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16721/events", "html_url": "https://github.com/numpy/numpy/issues/16721", "id": 649088074, "node_id": "MDU6SXNzdWU2NDkwODgwNzQ=", "number": 16721, "title": "Python int too large to convert to C long", "user": {"login": "amsinha9", "id": 40860467, "node_id": "MDQ6VXNlcjQwODYwNDY3", "avatar_url": "https://avatars3.githubusercontent.com/u/40860467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amsinha9", "html_url": "https://github.com/amsinha9", "followers_url": "https://api.github.com/users/amsinha9/followers", "following_url": "https://api.github.com/users/amsinha9/following{/other_user}", "gists_url": "https://api.github.com/users/amsinha9/gists{/gist_id}", "starred_url": "https://api.github.com/users/amsinha9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amsinha9/subscriptions", "organizations_url": "https://api.github.com/users/amsinha9/orgs", "repos_url": "https://api.github.com/users/amsinha9/repos", "events_url": "https://api.github.com/users/amsinha9/events{/privacy}", "received_events_url": "https://api.github.com/users/amsinha9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-01T15:48:55Z", "updated_at": "2020-07-01T16:37:49Z", "closed_at": "2020-07-01T16:37:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\nI have 2 numpy arrays, a.shape = (897840, 382) and b.shape = (908160, 382), in which all of the elements in the matrix are decimals, such as 0.065096239001539. I am able to vertically stack the arrays using np.vstack((a, b)), however, when I try to save the numpy array out as a matlab array, I get the error, \"OverflowError: Python int too large to convert to C long\". How can I resolve this?\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\nimport scipy.io as sio\r\n\r\na = np.random.rand(897840, 382)\r\nb = np.random.rand(908160, 382)\r\n\r\ncombined = np.vstack((a, b))\r\n\r\ndict = {}\r\ndict['test'] = combined\r\n\r\nsio.savemat('test.mat', dict)\r\n\r\n```\r\n### Error message:\r\n\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\nOverflowError                             Traceback (most recent call last)\r\n<ipython-input-16-f389eeb65f8f> in <module>()\r\n      2 dict['test'] = combined\r\n      3 \r\n----> 4 sio.savemat('test.mat', dict)\r\n\r\n~\\AppData\\Roaming\\Python\\Python36\\site-packages\\scipy\\io\\matlab\\mio.py in savemat(file_name, mdict, appendmat, format, long_field_names, do_compression, oned_as)\r\n    217     else:\r\n    218         raise ValueError(\"Format should be '4' or '5'\")\r\n--> 219     MW.put_variables(mdict)\r\n    220     if file_opened:\r\n    221         file_stream.close()\r\n\r\n~\\AppData\\Roaming\\Python\\Python36\\site-packages\\scipy\\io\\matlab\\mio5.py in put_variables(self, mdict, write_header)\r\n    847                 self.file_stream.write(out_str)\r\n    848             else:  # not compressing\r\n--> 849                 self._matrix_writer.write_top(var, asbytes(name), is_global)\r\n\r\n~\\AppData\\Roaming\\Python\\Python36\\site-packages\\scipy\\io\\matlab\\mio5.py in write_top(self, arr, name, is_global)\r\n    588         self._var_name = name\r\n    589         # write the header and data\r\n--> 590         self.write(arr)\r\n    591 \r\n    592     def write(self, arr):\r\n\r\n~\\AppData\\Roaming\\Python\\Python36\\site-packages\\scipy\\io\\matlab\\mio5.py in write(self, arr)\r\n    627             self.write_char(narr, codec)\r\n    628         else:\r\n--> 629             self.write_numeric(narr)\r\n    630         self.update_matrix_tag(mat_tag_pos)\r\n    631 \r\n\r\n~\\AppData\\Roaming\\Python\\Python36\\site-packages\\scipy\\io\\matlab\\mio5.py in write_numeric(self, arr)\r\n    653             self.write_element(arr.imag)\r\n    654         else:\r\n--> 655             self.write_element(arr)\r\n    656 \r\n    657     def write_char(self, arr, codec='ascii'):\r\n\r\n~\\AppData\\Roaming\\Python\\Python36\\site-packages\\scipy\\io\\matlab\\mio5.py in write_element(self, arr, mdtype)\r\n    494             self.write_smalldata_element(arr, mdtype, byte_count)\r\n    495         else:\r\n--> 496             self.write_regular_element(arr, mdtype, byte_count)\r\n    497 \r\n    498     def write_smalldata_element(self, arr, mdtype, byte_count):\r\n\r\n~\\AppData\\Roaming\\Python\\Python36\\site-packages\\scipy\\io\\matlab\\mio5.py in write_regular_element(self, arr, mdtype, byte_count)\r\n    508         tag = np.zeros((), NDT_TAG_FULL)\r\n    509         tag['mdtype'] = mdtype\r\n--> 510         tag['byte_count'] = byte_count\r\n    511         self.write_bytes(tag)\r\n    512         self.write_bytes(arr)\r\n\r\nOverflowError: Python int too large to convert to C long\r\n\r\n### Numpy/Python version information:\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\nNumpy 1.14.3\r\n1.14.3 3.6.5 |Anaconda, Inc.| (default, Mar 29 2018, 13:32:41) [MSC v.1900 64 bit (AMD64)]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16719", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16719/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16719/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16719/events", "html_url": "https://github.com/numpy/numpy/issues/16719", "id": 649024133, "node_id": "MDU6SXNzdWU2NDkwMjQxMzM=", "number": 16719, "title": "Original error was: No module named 'numpy.core._multiarray_umath'", "user": {"login": "aweng126", "id": 13829182, "node_id": "MDQ6VXNlcjEzODI5MTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/13829182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aweng126", "html_url": "https://github.com/aweng126", "followers_url": "https://api.github.com/users/aweng126/followers", "following_url": "https://api.github.com/users/aweng126/following{/other_user}", "gists_url": "https://api.github.com/users/aweng126/gists{/gist_id}", "starred_url": "https://api.github.com/users/aweng126/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aweng126/subscriptions", "organizations_url": "https://api.github.com/users/aweng126/orgs", "repos_url": "https://api.github.com/users/aweng126/repos", "events_url": "https://api.github.com/users/aweng126/events{/privacy}", "received_events_url": "https://api.github.com/users/aweng126/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-01T14:23:05Z", "updated_at": "2020-07-19T09:56:55Z", "closed_at": "2020-07-10T19:41:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n### problem description\r\n\r\nI was trying to learn lambda function of AWS,  I packaged library and source code to a deployment package and upload thme, so I can invoke it  .however ,when it comes to the matmul function ,it didn't work, I had try third version of numpy, none of them works,  python version is python3.7, numpy version is 1.16,1.18,1.19. the lambda code is very esay,[matmul function](https://github.com/kmu-bigdata/serverless-faas-workbench/blob/master/aws/cpu-memory/matmul/lambda_function.py)\r\n```\r\nimport numpy as np\r\nfrom time import time\r\n\r\n\r\ndef matmul(n):\r\n    A = np.random.rand(n, n)\r\n    B = np.random.rand(n, n)\r\n\r\n    start = time()\r\n    C = np.matmul(A, B)\r\n    latency = time() - start\r\n    return latency\r\n\r\n\r\ndef lambda_handler(event, context):\r\n    n = int(event['n'])\r\n    result = matmul(n)\r\n    print(result)\r\n    return result\r\n```\r\nand this is the log cotent\r\n```\r\n[ERROR] Runtime.ImportModuleError: Unable to import module 'lambda_function': \r\n\r\nIMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!\r\n\r\nImporting the numpy c-extensions failed.\r\n- Try uninstalling and reinstalling numpy.\r\n- If you have already done that, then:\r\n  1. Check that you expected to use Python3.7 from \"/var/lang/bin/python3.7\",\r\n     and that you have no directories in your PATH or PYTHONPATH that can\r\n     interfere with the Python and numpy version \"1.18.0\" you're trying to use.\r\n  2. If (1) looks fine, you can open a new issue at\r\n     https://github.com/numpy/numpy/issues.  Please include details on:\r\n     - how you installed Python\r\n     - how you installed numpy\r\n     - your operating system\r\n     - whether or not you have multiple versions of Python installed\r\n     - if you built from source, your compiler versions and ideally a build log\r\n\r\n- If you're working with a numpy git repository, try `git clean -xdf`\r\n  (removes all files not under version control) and rebuild numpy.\r\n\r\nNote: this error has many possible causes, so please don't comment on\r\nan existing issue about this - open a new one instead.\r\n\r\nOriginal error was: No module named 'numpy.core._multiarray_umath'\r\n\r\nEND RequestId: c4fc9fea-2802-4ff0-b41c-ec014cad474b\r\nREPORT RequestId: c4fc9fea-2802-4ff0-b41c-ec014cad474b\tDuration: 1.57 ms\tBilled Duration: 100 ms\tMemory Size: 128 MB\tMax Memory Used: 50 MB\t\r\n```\r\n\r\nis there anybody has idea?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16717", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16717/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16717/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16717/events", "html_url": "https://github.com/numpy/numpy/issues/16717", "id": 648826797, "node_id": "MDU6SXNzdWU2NDg4MjY3OTc=", "number": 16717, "title": "issue with documentation", "user": {"login": "gokhalen", "id": 4105227, "node_id": "MDQ6VXNlcjQxMDUyMjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4105227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gokhalen", "html_url": "https://github.com/gokhalen", "followers_url": "https://api.github.com/users/gokhalen/followers", "following_url": "https://api.github.com/users/gokhalen/following{/other_user}", "gists_url": "https://api.github.com/users/gokhalen/gists{/gist_id}", "starred_url": "https://api.github.com/users/gokhalen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gokhalen/subscriptions", "organizations_url": "https://api.github.com/users/gokhalen/orgs", "repos_url": "https://api.github.com/users/gokhalen/repos", "events_url": "https://api.github.com/users/gokhalen/events{/privacy}", "received_events_url": "https://api.github.com/users/gokhalen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359214, "node_id": "MDU6TGFiZWw2MzU5MjE0", "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug", "name": "00 - Bug", "color": "fef2c0", "default": false, "description": null}, {"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-01T09:30:22Z", "updated_at": "2020-07-01T10:27:40Z", "closed_at": "2020-07-01T10:13:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\nI have a small issue with the quickstart documentation here. \r\n\r\nhttps://numpy.org/devdocs/user/quickstart.html#view-or-shallow-copy\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\na=np.arange(16).reshape(4,4)\r\nc=a.view()\r\n```\r\nThe documentation says` c.base is a` evaluates to `True` but it seems to evaluate to `False`  on my machine. Perhaps the documentation is supposed to be `c.base is a.base`?\r\n\r\nThanks,\r\n\r\nNachiket", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16715", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16715/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16715/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16715/events", "html_url": "https://github.com/numpy/numpy/issues/16715", "id": 648422995, "node_id": "MDU6SXNzdWU2NDg0MjI5OTU=", "number": 16715, "title": "Slight differences of randn output ", "user": {"login": "oXwvdrbbj8S4wo9k8lSN", "id": 60423936, "node_id": "MDQ6VXNlcjYwNDIzOTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/60423936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oXwvdrbbj8S4wo9k8lSN", "html_url": "https://github.com/oXwvdrbbj8S4wo9k8lSN", "followers_url": "https://api.github.com/users/oXwvdrbbj8S4wo9k8lSN/followers", "following_url": "https://api.github.com/users/oXwvdrbbj8S4wo9k8lSN/following{/other_user}", "gists_url": "https://api.github.com/users/oXwvdrbbj8S4wo9k8lSN/gists{/gist_id}", "starred_url": "https://api.github.com/users/oXwvdrbbj8S4wo9k8lSN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oXwvdrbbj8S4wo9k8lSN/subscriptions", "organizations_url": "https://api.github.com/users/oXwvdrbbj8S4wo9k8lSN/orgs", "repos_url": "https://api.github.com/users/oXwvdrbbj8S4wo9k8lSN/repos", "events_url": "https://api.github.com/users/oXwvdrbbj8S4wo9k8lSN/events{/privacy}", "received_events_url": "https://api.github.com/users/oXwvdrbbj8S4wo9k8lSN/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}, {"id": 16917445, "node_id": "MDU6TGFiZWwxNjkxNzQ0NQ==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.random", "name": "component: numpy.random", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-30T19:04:19Z", "updated_at": "2020-07-07T09:54:42Z", "closed_at": "2020-07-02T13:35:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use unit tests to ensure that my machine learning pipelines always produce the same output if they receive the same input. As input I use artificial data created via sklearn's _make\\_classification_ function, which internally uses numpy's _randn_. To save disk space, I cannot save the complete output but instead only save hash values. This strategy worked fine for over a year, but now, suddenly, the output of _randn_ changed slightly so it is not reproducible across different installations. As test systems, I use _scipy-notebook_ docker containers. I am fairly certain that this change is not due to a code change of numpy but must be related to some other library. However, I have no clue which library that might be.\r\n\r\n### Reproducing code example:\r\nI ran the following command with the _scipy-notebook_ docker containers tagged as \"04f7f60d34a6\" and \"dd2087c75645\":\r\n```\r\ndocker run -it jupyter/scipy-notebook:04f7f60d34a6 python -c \"import numpy as np; import hashlib; generator = np.random.RandomState(969); X = generator.randn(96, 15); print( hashlib.sha256(X).hexdigest()); print(X.sum()); print((X**2).sum())\"\r\n```\r\nreturns \r\n```\r\nhash: 7bfbf39406588f590580d592d0ac9f6ffb8b16127b465f42edbd1c629678880c\r\nsum: 23.204969031109513\r\nsquared sum: 1424.408266916314\r\nversion: 1.18.5\r\n```\r\nAnd\r\n```\r\ndocker run -it jupyter/scipy-notebook:dd2087c75645 python -c \"import numpy as np; import hashlib; generator = np.random.RandomState(969); X = generator.randn(96, 15); print('hash:', hashlib.sha256(X).hexdigest()); print('sum:', X.sum()); print('squared sum:', (X**2).sum()); print('version:', np.__version__)\"\r\n```\r\nreturns \r\n```\r\nhash: 3bca3416367b6bf24037240a1905d84f09152cea5c6c8e69d60e0a51060703f4\r\nsum: 23.204969031109513\r\nsquared sum: 1424.408266916314\r\nversion: 1.18.5\r\n```\r\nAs you can see, the sums and squared sums are equal or they differ at less than 10^-12, but the hash values differ.  The numpy versions in both containers are equal. Therefore, which external library might cause this difference?\r\n\r\n### Numpy/Python version information:\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\nBoth containers give the following output:\r\n```\r\n1.18.5 3.7.6 | packaged by conda-forge | (default, Jun  1 2020, 18:57:50)\r\n[GCC 7.5.0]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16713", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16713/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16713/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16713/events", "html_url": "https://github.com/numpy/numpy/issues/16713", "id": 648414658, "node_id": "MDU6SXNzdWU2NDg0MTQ2NTg=", "number": 16713, "title": "__array_interface__ does not maintain persistance of memory location for numpy arrays", "user": {"login": "lhfriedman", "id": 47364348, "node_id": "MDQ6VXNlcjQ3MzY0MzQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/47364348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lhfriedman", "html_url": "https://github.com/lhfriedman", "followers_url": "https://api.github.com/users/lhfriedman/followers", "following_url": "https://api.github.com/users/lhfriedman/following{/other_user}", "gists_url": "https://api.github.com/users/lhfriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/lhfriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lhfriedman/subscriptions", "organizations_url": "https://api.github.com/users/lhfriedman/orgs", "repos_url": "https://api.github.com/users/lhfriedman/repos", "events_url": "https://api.github.com/users/lhfriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/lhfriedman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-30T18:49:49Z", "updated_at": "2020-07-01T19:34:15Z", "closed_at": "2020-07-01T19:34:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given that `__array_interface__` is primarily to enable use of things such as np.asarray([USER_CLASS_INSTANCE]), I am guessing the following code is unintended behavior related to timing of garbage collection. I ran across it while trying to enable \r\n`np.asarray([A_DATACLASS_OBJECT_WITH_FLOAT_ARRAY_MEMBERS])`\r\n\r\n\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\n\r\nclass MyClass:\r\n    \"\"\"\r\n    Precursor to numpy array with first element, a_0, and second element, a_1.\r\n    \"\"\"\r\n\r\n    def __init__(self, n, retain_array):\r\n        self.a_0 = np.arange(n)\r\n        self.a_1 = np.arange(n)\r\n        self.retain_array=retain_array\r\n\r\n    @property\r\n    def __array_interface__(self):\r\n        arr_0 = np.array([self.a_0, self.a_1])\r\n        if self.retain_array:\r\n            self.temp = arr_0\r\n        return arr_0.__array_interface__\r\n\r\n    def __str__(self):\r\n        out = f\"\"\"\r\n        MyClass(a_0={self.a_0[:5].tolist()}...{self.a_0[-5:].tolist()},\r\n                a_1={self.a_1[:5].tolist()}...{self.a_0[-5:].tolist()})\r\n        \"\"\"\r\n        return out\r\n\r\nprint('\\nnumpy version: ', np.version.full_version)\r\n\r\nprint(80*'=')\r\nprint('No problem with small arrays.')\r\nmc_0 = MyClass(10, False)\r\nprint('\\nmc_0:\\n', mc_0)\r\nmc_1 = np.asarray(mc_0)\r\nprint('\\nmc_1[:, :5]:\\n', mc_1)\r\n\r\nprint(80*'=')\r\nprint('Large arrays have problems')\r\nmc_0 = MyClass(1000, False)\r\nprint('\\nmc_0:\\n', mc_0)\r\nnpa_0 = np.asarray(mc_0)\r\nprint('\\nnpa0:\\n',\r\n      f\"\"\"\r\n      [{npa_0[0, :5].tolist()}...{npa_0[0, -5:].tolist()},\r\n       {npa_0[1, :5].tolist()}...{npa_0[1, -5:].tolist()}]\r\n      \"\"\"\r\n      )\r\n\r\nprint(80*'=')\r\nprint(\r\n      \"\"\"Problem appears to come from peristance of array. With\r\n      retain_array=True, no problem.\r\n      \"\"\")\r\nmc_0 = MyClass(1000, True)\r\nprint('\\nmc_0:\\n', mc_0)\r\nnpa_0 = np.asarray(mc_0)\r\nprint('\\nnpa0:\\n',\r\n      f\"\"\"\r\n      [{npa_0[0, :5].tolist()}...{npa_0[0, -5:].tolist()},\r\n       {npa_0[1, :5].tolist()}...{npa_0[1, -5:].tolist()}]\r\n      \"\"\"\r\n      )\r\n```\r\n\r\n### Output\r\n```\r\n\r\nnumpy version:  1.18.1\r\n================================================================================\r\nNo problem with small arrays.\r\n\r\nmc_0:\r\n \r\n        MyClass(a_0=[0, 1, 2, 3, 4]...[5, 6, 7, 8, 9],\r\n                a_1=[0, 1, 2, 3, 4]...[5, 6, 7, 8, 9])\r\n        \r\n\r\nmc_1[:, :5]:\r\n [[0 1 2 3 4 5 6 7 8 9]\r\n [0 1 2 3 4 5 6 7 8 9]]\r\n================================================================================\r\nLarge arrays have problems\r\n\r\nmc_0:\r\n \r\n        MyClass(a_0=[0, 1, 2, 3, 4]...[995, 996, 997, 998, 999],\r\n                a_1=[0, 1, 2, 3, 4]...[995, 996, 997, 998, 999])\r\n        \r\n\r\nnpa0:\r\n \r\n      [[-172283504, 528, -172825152, 528, 4]...[995, 996, 997, 998, 999],\r\n       [0, 1, 2, 3, 4]...[995, 996, 997, 998, 999]]\r\n      \r\n================================================================================\r\nProblem appears to come from peristance of array. With\r\n      retain_array=True, no problem.\r\n      \r\n\r\nmc_0:\r\n \r\n        MyClass(a_0=[0, 1, 2, 3, 4]...[995, 996, 997, 998, 999],\r\n                a_1=[0, 1, 2, 3, 4]...[995, 996, 997, 998, 999])\r\n        \r\n\r\nnpa0:\r\n \r\n      [[0, 1, 2, 3, 4]...[995, 996, 997, 998, 999],\r\n       [0, 1, 2, 3, 4]...[995, 996, 997, 998, 999]]\r\n      \r\n```\r\n\r\n### Numpy/Python version information:\r\n\r\n1.18.1 3.7.7 (default, May  6 2020, 11:45:54) [MSC v.1916 64 bit (AMD64)]\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16712", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16712/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16712/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16712/events", "html_url": "https://github.com/numpy/numpy/issues/16712", "id": 648242383, "node_id": "MDU6SXNzdWU2NDgyNDIzODM=", "number": 16712, "title": "Callback on write?", "user": {"login": "Korijn", "id": 1882046, "node_id": "MDQ6VXNlcjE4ODIwNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1882046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Korijn", "html_url": "https://github.com/Korijn", "followers_url": "https://api.github.com/users/Korijn/followers", "following_url": "https://api.github.com/users/Korijn/following{/other_user}", "gists_url": "https://api.github.com/users/Korijn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Korijn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Korijn/subscriptions", "organizations_url": "https://api.github.com/users/Korijn/orgs", "repos_url": "https://api.github.com/users/Korijn/repos", "events_url": "https://api.github.com/users/Korijn/events{/privacy}", "received_events_url": "https://api.github.com/users/Korijn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-30T14:51:16Z", "updated_at": "2020-07-10T14:35:12Z", "closed_at": "2020-07-10T14:34:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just have a question: since there is a writeable flag, Numpy must have a mechanism to _detect_ writes. I'd be interested to see if there is also a way to configure a callback when a write is detected? It would make ndarray's observable!\r\n\r\nIf there is no such system, how hard do you think it would be to implement it? Is there a central piece of code that processes write operations and checks against the writeable flag?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16711", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16711/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16711/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16711/events", "html_url": "https://github.com/numpy/numpy/issues/16711", "id": 648236558, "node_id": "MDU6SXNzdWU2NDgyMzY1NTg=", "number": 16711, "title": "Which numpy version to install?", "user": {"login": "bergen288", "id": 65607761, "node_id": "MDQ6VXNlcjY1NjA3NzYx", "avatar_url": "https://avatars3.githubusercontent.com/u/65607761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bergen288", "html_url": "https://github.com/bergen288", "followers_url": "https://api.github.com/users/bergen288/followers", "following_url": "https://api.github.com/users/bergen288/following{/other_user}", "gists_url": "https://api.github.com/users/bergen288/gists{/gist_id}", "starred_url": "https://api.github.com/users/bergen288/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bergen288/subscriptions", "organizations_url": "https://api.github.com/users/bergen288/orgs", "repos_url": "https://api.github.com/users/bergen288/repos", "events_url": "https://api.github.com/users/bergen288/events{/privacy}", "received_events_url": "https://api.github.com/users/bergen288/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501057526, "node_id": "MDU6TGFiZWwxNTAxMDU3NTI2", "url": "https://api.github.com/repos/numpy/numpy/labels/32%20-%20Installation", "name": "32 - Installation", "color": "fef2c0", "default": false, "description": "Problems installing or compiling NumPy"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-30T14:44:11Z", "updated_at": "2020-06-30T15:36:31Z", "closed_at": "2020-06-30T15:36:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "A lot of python packages require numpy and I am confused with their required numpy version.  My installed numpy is  the most recent v1.19.0.  But my following package installations are failed with the requirement of old numpy versions.   \"statsmodels\" required numpy v1.16.1 while the others require v1.16.0.  I am concerned that numpy 1.16.0 is pretty old version and it won't support all other packages.  What's the best way to go?\r\nThanks.\r\n```r\r\nKeras-2.4.3-py2.py3-none-any.whl.log:  ERROR: Could not find a version that satisfies the requirement numpy==1.16.0 (from versions: 1.19.0)\r\nTheano-1.0.4.tar.gz.log:  ERROR: Could not find a version that satisfies the requirement numpy==1.16.0 (from versions: 1.19.0)\r\nscikit_video-1.1.11-py2.py3-none-any.whl.log:  ERROR: Could not find a version that satisfies the requirement numpy==1.16.0 (from versions: 1.19.0)\r\nseaborn-0.10.1-py3-none-any.whl.log:  ERROR: Could not find a version that satisfies the requirement numpy==1.16.0 (from versions: 1.19.0)\r\nstatsmodels-0.11.1.tar.gz.log:  ERROR: Could not find a version that satisfies the requirement numpy==1.16.1 (from versions: 1.16.0, 1.19.0)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16707", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16707/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16707/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16707/events", "html_url": "https://github.com/numpy/numpy/issues/16707", "id": 647576574, "node_id": "MDU6SXNzdWU2NDc1NzY1NzQ=", "number": 16707, "title": "Can't install the 64-bit version of numpy for Python 3.8", "user": {"login": "luciansmith", "id": 1736150, "node_id": "MDQ6VXNlcjE3MzYxNTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1736150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luciansmith", "html_url": "https://github.com/luciansmith", "followers_url": "https://api.github.com/users/luciansmith/followers", "following_url": "https://api.github.com/users/luciansmith/following{/other_user}", "gists_url": "https://api.github.com/users/luciansmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/luciansmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luciansmith/subscriptions", "organizations_url": "https://api.github.com/users/luciansmith/orgs", "repos_url": "https://api.github.com/users/luciansmith/repos", "events_url": "https://api.github.com/users/luciansmith/events{/privacy}", "received_events_url": "https://api.github.com/users/luciansmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-06-29T18:25:29Z", "updated_at": "2020-06-29T23:50:17Z", "closed_at": "2020-06-29T23:23:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I go to https://pypi.org/project/numpy/#files\r\n\r\nand download the 'win_amd64' wheel files, the Python 3.6 and Python 3.7 files work fine.  But the Python 3.8 file does not:\r\n\r\n### Reproducing code example:\r\n\r\n```\r\nC:\\[...]\\Python38\\python.exe --version\r\nPython 3.8.3\r\n\r\nC:\\[...]\\Python38\\python.exe -m pip install numpy-1.19.0-cp38-cp38-win_amd64.whl\r\nERROR: numpy-1.19.0-cp38-cp38-win_amd64.whl is not a supported wheel on this platform.\r\n\r\nC:\\[...]\\Python38\\python.exe\r\nPython 3.8.3 (tags/v3.8.3:6f8c832, May 13 2020, 22:37:02) [MSC v.1924 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import platform\r\n>>> platform.architecture()\r\n('64bit', 'WindowsPE')\r\n\r\n```\r\n\r\nAny suggestions?  Do I need a different version of Python 3.8?\r\n\r\nI did notice that the 3.6 and 3.7 files have an 'm' in them while the 3.8 version does not, but renaming it to have an 'm' didn't help:\r\n\r\n```\r\n06/29/2020  09:38 AM        12,983,036 numpy-1.19.0-cp36-cp36m-win_amd64.whl\r\n06/29/2020  09:39 AM        12,983,183 numpy-1.19.0-cp37-cp37m-win_amd64.whl\r\n06/29/2020  09:39 AM        13,026,850 numpy-1.19.0-cp38-cp38-win_amd64.whl\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16701", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16701/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16701/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16701/events", "html_url": "https://github.com/numpy/numpy/issues/16701", "id": 646925598, "node_id": "MDU6SXNzdWU2NDY5MjU1OTg=", "number": 16701, "title": "[FR] Sorting structured arrays should use only fields specified in `order` when `kind='stable'`", "user": {"login": "narfanar", "id": 5769148, "node_id": "MDQ6VXNlcjU3NjkxNDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5769148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/narfanar", "html_url": "https://github.com/narfanar", "followers_url": "https://api.github.com/users/narfanar/followers", "following_url": "https://api.github.com/users/narfanar/following{/other_user}", "gists_url": "https://api.github.com/users/narfanar/gists{/gist_id}", "starred_url": "https://api.github.com/users/narfanar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/narfanar/subscriptions", "organizations_url": "https://api.github.com/users/narfanar/orgs", "repos_url": "https://api.github.com/users/narfanar/repos", "events_url": "https://api.github.com/users/narfanar/events{/privacy}", "received_events_url": "https://api.github.com/users/narfanar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-28T13:51:09Z", "updated_at": "2020-07-10T19:47:21Z", "closed_at": "2020-07-10T19:47:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\narr = np.array(\r\n\t[([], 1), ('a', 2), ([], 2)],\r\n\tdtype=[('obj', object), ('num', int)]\r\n)\r\n\r\nprint(arr)\r\n\r\narrs = np.sort(arr, kind='stable', order=['num'])\r\n#^ It errors here trying to use `obj` to \"break ties\",\r\n#  but shouldn't need to.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16698", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16698/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16698/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16698/events", "html_url": "https://github.com/numpy/numpy/issues/16698", "id": 646754459, "node_id": "MDU6SXNzdWU2NDY3NTQ0NTk=", "number": 16698, "title": "np.histogram ignores last bin", "user": {"login": "jiwidi", "id": 10882086, "node_id": "MDQ6VXNlcjEwODgyMDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/10882086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiwidi", "html_url": "https://github.com/jiwidi", "followers_url": "https://api.github.com/users/jiwidi/followers", "following_url": "https://api.github.com/users/jiwidi/following{/other_user}", "gists_url": "https://api.github.com/users/jiwidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiwidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiwidi/subscriptions", "organizations_url": "https://api.github.com/users/jiwidi/orgs", "repos_url": "https://api.github.com/users/jiwidi/repos", "events_url": "https://api.github.com/users/jiwidi/events{/privacy}", "received_events_url": "https://api.github.com/users/jiwidi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-27T20:17:17Z", "updated_at": "2020-06-27T20:36:36Z", "closed_at": "2020-06-27T20:36:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\na = [1,2,2,3,3,4,4]\r\nbins = [1,2,3,4]\r\n\r\nnp.histogram(a,bins)\r\n```\r\nReturns `(array([1, 2, 4]), array([1, 2, 3, 4]))` where the count of bins `array([1, 2, 4])` is wrong, is ignoring the last bin and in this case assigning counts of 4 to counts of 3. \r\n\r\nThe desired output of counts should be `[1,2,2,2]` and there is a fix adding a extra dummy bin:\r\n\r\n```python\r\nimport numpy as np\r\na = [1,2,2,3,3,4,4]\r\nbins = [1,2,3,4,5]\r\n\r\nnp.histogram(a,bins)\r\n```\r\nReturns `(array([1, 2, 2, 2]), array([1, 2, 3, 4, 5]))` where the count of bins is correct.\r\n\r\n\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\n### Numpy/Python version information:\r\nPython 3.7.6\r\nNumpy 1.18.1\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\n\r\n### Summary\r\n\r\nHi! So I actually found a bug for np.histogram where bins counts are not correctly being calculated, if it happens to be correct I would love to work on a fix and follow with a PR\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16695", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16695/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16695/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16695/events", "html_url": "https://github.com/numpy/numpy/issues/16695", "id": 646633721, "node_id": "MDU6SXNzdWU2NDY2MzM3MjE=", "number": 16695, "title": "OverflowError for np.random.RandomState()", "user": {"login": "RuofanKong", "id": 7396554, "node_id": "MDQ6VXNlcjczOTY1NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7396554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RuofanKong", "html_url": "https://github.com/RuofanKong", "followers_url": "https://api.github.com/users/RuofanKong/followers", "following_url": "https://api.github.com/users/RuofanKong/following{/other_user}", "gists_url": "https://api.github.com/users/RuofanKong/gists{/gist_id}", "starred_url": "https://api.github.com/users/RuofanKong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RuofanKong/subscriptions", "organizations_url": "https://api.github.com/users/RuofanKong/orgs", "repos_url": "https://api.github.com/users/RuofanKong/repos", "events_url": "https://api.github.com/users/RuofanKong/events{/privacy}", "received_events_url": "https://api.github.com/users/RuofanKong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16917445, "node_id": "MDU6TGFiZWwxNjkxNzQ0NQ==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.random", "name": "component: numpy.random", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-27T07:57:49Z", "updated_at": "2020-06-27T18:18:46Z", "closed_at": "2020-06-27T18:17:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run the following code to uniformly generate a random float64 number. By default, the Python float is float64, and the same applies to numpy if I don't miss anything. However, when I feed the low and high with float64 min/max limit respectively, it raises the overflow error as below.\r\n\r\n### Reproducing code example:\r\n```python\r\nimport numpy as np\r\nrand_gen = np.random.RandomState()\r\nrand_gen.uniform(low=-1.79769313e308, high=1.79769313e308, size=[1])\r\n```\r\n### Error message:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"mtrand.pyx\", line 1091, in numpy.random.mtrand.RandomState.uniform\r\nOverflowError: Range exceeds valid bounds\r\n```\r\n\r\n### Numpy/Python version information:\r\n- Python version: 3.6.5\r\n- numpy version: 1.18.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16694", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16694/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16694/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16694/events", "html_url": "https://github.com/numpy/numpy/issues/16694", "id": 646442779, "node_id": "MDU6SXNzdWU2NDY0NDI3Nzk=", "number": 16694, "title": "Problem importing NumPy", "user": {"login": "gagik-manukian", "id": 67481182, "node_id": "MDQ6VXNlcjY3NDgxMTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/67481182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gagik-manukian", "html_url": "https://github.com/gagik-manukian", "followers_url": "https://api.github.com/users/gagik-manukian/followers", "following_url": "https://api.github.com/users/gagik-manukian/following{/other_user}", "gists_url": "https://api.github.com/users/gagik-manukian/gists{/gist_id}", "starred_url": "https://api.github.com/users/gagik-manukian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gagik-manukian/subscriptions", "organizations_url": "https://api.github.com/users/gagik-manukian/orgs", "repos_url": "https://api.github.com/users/gagik-manukian/repos", "events_url": "https://api.github.com/users/gagik-manukian/events{/privacy}", "received_events_url": "https://api.github.com/users/gagik-manukian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1244513784, "node_id": "MDU6TGFiZWwxMjQ0NTEzNzg0", "url": "https://api.github.com/repos/numpy/numpy/labels/31%20-%20Third-party%20binaries", "name": "31 - Third-party binaries", "color": "fef2c0", "default": false, "description": "Install/import issues other than Anaconda-specific"}, {"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-26T18:37:46Z", "updated_at": "2020-07-10T19:59:27Z", "closed_at": "2020-07-10T19:59:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see this message\r\n\"mkl-service package failed to import, therefore Intel(R) MKL i initialization ensuring its correct out-of-the box operation under condition when Gnu OpenMP had already been loaded by Python process is not assured. Please install mkl-service package\"\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\n<< your code here >>\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\n### Numpy/Python version information:\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16689", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16689/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16689/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16689/events", "html_url": "https://github.com/numpy/numpy/issues/16689", "id": 645801222, "node_id": "MDU6SXNzdWU2NDU4MDEyMjI=", "number": 16689, "title": "Unexpected behavior when an array of floats is subtracted from a very large integer.", "user": {"login": "mmngreco", "id": 6231413, "node_id": "MDQ6VXNlcjYyMzE0MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6231413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmngreco", "html_url": "https://github.com/mmngreco", "followers_url": "https://api.github.com/users/mmngreco/followers", "following_url": "https://api.github.com/users/mmngreco/following{/other_user}", "gists_url": "https://api.github.com/users/mmngreco/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmngreco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmngreco/subscriptions", "organizations_url": "https://api.github.com/users/mmngreco/orgs", "repos_url": "https://api.github.com/users/mmngreco/repos", "events_url": "https://api.github.com/users/mmngreco/events{/privacy}", "received_events_url": "https://api.github.com/users/mmngreco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-25T19:31:30Z", "updated_at": "2020-06-25T22:23:43Z", "closed_at": "2020-06-25T22:23:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\nDoing some calculations I discover this unexpected behavior related with\r\n`dtypes`. I hope some of you can point me if this is a bug or I'm doing\r\nsomething wrong.\r\n\r\n### Reproducing code example:\r\n\r\nHere is a minimal peace of my code which tries to reproduce the problem:\r\n\r\n```python\r\nimport numpy as np\r\n\r\n# VERSIONS USED\r\nnp.__version__ #  '1.18.1'\r\nnp.__version__ #  '1.19.0'\r\n\r\nx = 731965.048356481480000000000000000000\r\nx_arr = np.array([x])\r\nbig_int = 86400000000000\r\ncnst = 719529\r\n\r\n# THIS WORKS\r\narr1 = (x_arr - cnst) * big_int\r\nout1 = arr1.astype(\"datetime64[ns]\")\r\n\r\n# THIS FAILS\r\narr2 = x_arr * big_int - cnst * big_int\r\nout2 = arr2.astype(\"datetime64[ns]\")\r\n\r\n# WORKAROUND\r\nbig_int = 86400000000000.  # NOW IS A FLOAT\r\narr3 = x_arr * big_int - cnst * big_int\r\nout3 = arr3.astype(\"datetime64[ns]\")\r\n```\r\n\r\n#### MWE\r\n\r\nHere some code that I use for debugging a minimal reproducible example that\r\nshows this unexpected behavior.\r\n\r\n```python\r\ndef check_dtype(big_int):\r\n    a = np.array([731965.04835648148]) * big_int\r\n    b = 719529 * big_int\r\n    c = a - b\r\n    return c.dtype\r\n\r\nworks_int = 20000000000000\r\nfails_int = 30000000000000\r\ncheck_dtype(works_int)  # dtype('float64')\r\ncheck_dtype(fails_int)  # dtype('O')\r\n```\r\n\r\n### Numpy/Python version information:\r\n\r\n```python\r\nimport sys, numpy; print(numpy.__version__, sys.version)\r\n1.19.0 3.7.7 (default, Mar 26 2020, 15:48:22)\r\n[GCC 7.3.0]\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16688", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16688/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16688/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16688/events", "html_url": "https://github.com/numpy/numpy/issues/16688", "id": 645794947, "node_id": "MDU6SXNzdWU2NDU3OTQ5NDc=", "number": 16688, "title": "Unexpected error message when using random.multinomial with a specific input", "user": {"login": "alexn11", "id": 6965453, "node_id": "MDQ6VXNlcjY5NjU0NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6965453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexn11", "html_url": "https://github.com/alexn11", "followers_url": "https://api.github.com/users/alexn11/followers", "following_url": "https://api.github.com/users/alexn11/following{/other_user}", "gists_url": "https://api.github.com/users/alexn11/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexn11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexn11/subscriptions", "organizations_url": "https://api.github.com/users/alexn11/orgs", "repos_url": "https://api.github.com/users/alexn11/repos", "events_url": "https://api.github.com/users/alexn11/events{/privacy}", "received_events_url": "https://api.github.com/users/alexn11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-25T19:20:20Z", "updated_at": "2020-06-25T22:16:43Z", "closed_at": "2020-06-25T21:58:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've stumbled upon this probability distribution and it seems that it breaks _random.multinomial_. See the code below.\r\nI get the following error message\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"mtrand.pyx\", line 4199, in numpy.random.mtrand.RandomState.multinomial\r\nValueError: sum(pvals[:-1]) > 1.0\r\n```\r\nBut as checked below, the sum of pv is exactly 1, not sure what's happening there.\r\n\r\n### Reproducing code example:\r\n\r\n\r\n```python\r\nimport numpy as np\r\npv = np.array([1.4424976e-09, 7.4651174e-10, 2.6731199e-14, 1.8288955e-07,\r\n       3.7338774e-12, 2.4565782e-11, 4.8849003e-08, 7.5392682e-06,\r\n       2.5213736e-09, 8.6392421e-11, 1.5464953e-15, 8.4649406e-11,\r\n       4.8575238e-10, 1.8040901e-13, 1.1940503e-07, 5.3627885e-10,\r\n       1.0590560e-09, 1.8160169e-18, 4.0212014e-11, 4.7033932e-08,\r\n       1.6498967e-05, 2.8405358e-08, 1.0944078e-12, 1.5611396e-10,\r\n       3.9737486e-10, 9.7820538e-01, 8.2896645e-07, 8.3199542e-10,\r\n       3.7056649e-10, 3.8565759e-10, 2.3704663e-11, 1.0012602e-10,\r\n       1.1705990e-09, 1.6031695e-08, 5.7553581e-08, 7.8330364e-10,\r\n       3.8545368e-11, 7.8553829e-04, 8.4968074e-11, 4.2295811e-10,\r\n       2.8655507e-12, 8.0123971e-07, 7.0235245e-10, 7.1000192e-09,\r\n       2.0980526e-02, 2.4243457e-06, 1.2416263e-13, 4.5905411e-12,\r\n       1.1153589e-12, 2.6267855e-08, 6.6627046e-09, 9.6725593e-11,\r\n       1.7527905e-14, 9.9620270e-11, 4.4269616e-10], dtype='float32')\r\nassert(pv.sum()==1.)\r\nassert(np.all((0<pv)&(pv<1)))\r\nnp.random.multinomial(1, pv, 1)\r\n```\r\n\r\n\r\n\r\n### Error message:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"mtrand.pyx\", line 4199, in numpy.random.mtrand.RandomState.multinomial\r\nValueError: sum(pvals[:-1]) > 1.0\r\n```\r\n\r\n### Numpy/Python version information:\r\n\r\n1.18.5 3.8.3 (default, May 17 2020, 18:15:42) \r\n[GCC 10.1.0]\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16687", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16687/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16687/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16687/events", "html_url": "https://github.com/numpy/numpy/issues/16687", "id": 645701927, "node_id": "MDU6SXNzdWU2NDU3MDE5Mjc=", "number": 16687, "title": "timedelta64 doesn't have the `abs` method", "user": {"login": "hmaarrfk", "id": 90008, "node_id": "MDQ6VXNlcjkwMDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/90008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmaarrfk", "html_url": "https://github.com/hmaarrfk", "followers_url": "https://api.github.com/users/hmaarrfk/followers", "following_url": "https://api.github.com/users/hmaarrfk/following{/other_user}", "gists_url": "https://api.github.com/users/hmaarrfk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmaarrfk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmaarrfk/subscriptions", "organizations_url": "https://api.github.com/users/hmaarrfk/orgs", "repos_url": "https://api.github.com/users/hmaarrfk/repos", "events_url": "https://api.github.com/users/hmaarrfk/events{/privacy}", "received_events_url": "https://api.github.com/users/hmaarrfk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1501055529, "node_id": "MDU6TGFiZWwxNTAxMDU1NTI5", "url": "https://api.github.com/repos/numpy/numpy/labels/33%20-%20Question", "name": "33 - Question", "color": "fef2c0", "default": false, "description": "A question about NumPy usage or development"}, {"id": 81818822, "node_id": "MDU6TGFiZWw4MTgxODgyMg==", "url": "https://api.github.com/repos/numpy/numpy/labels/57%20-%20Close?", "name": "57 - Close?", "color": "207de5", "default": false, "description": "Issues which may be closable unless discussion continued"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-25T16:34:57Z", "updated_at": "2020-06-27T16:13:26Z", "closed_at": "2020-06-27T16:13:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\narr = np.asarray(np.timedelta64(1, 's'))\r\nprint(arr.dtype)\r\narr.abs()\r\n```\r\n### Error message:\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-8-685c953b3f2a> in <module>\r\n----> 1 np.asarray(np.timedelta64(1, 's')).abs()\r\n\r\nAttributeError: 'numpy.ndarray' object has no attribute 'abs'\r\n```\r\n\r\n\r\n### Numpy/Python version information:\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n```\r\n1.18.5 3.7.6 | packaged by conda-forge | (default, Jun  1 2020, 18:57:50) \r\n[GCC 7.5.0]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16686", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16686/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16686/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16686/events", "html_url": "https://github.com/numpy/numpy/issues/16686", "id": 645586610, "node_id": "MDU6SXNzdWU2NDU1ODY2MTA=", "number": 16686, "title": "ENH: Make `c_distributions` (`npyrandom`) includes more convenient", "user": {"login": "zoj613", "id": 44142765, "node_id": "MDQ6VXNlcjQ0MTQyNzY1", "avatar_url": "https://avatars1.githubusercontent.com/u/44142765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zoj613", "html_url": "https://github.com/zoj613", "followers_url": "https://api.github.com/users/zoj613/followers", "following_url": "https://api.github.com/users/zoj613/following{/other_user}", "gists_url": "https://api.github.com/users/zoj613/gists{/gist_id}", "starred_url": "https://api.github.com/users/zoj613/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zoj613/subscriptions", "organizations_url": "https://api.github.com/users/zoj613/orgs", "repos_url": "https://api.github.com/users/zoj613/repos", "events_url": "https://api.github.com/users/zoj613/events{/privacy}", "received_events_url": "https://api.github.com/users/zoj613/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359239, "node_id": "MDU6TGFiZWw2MzU5MjM5", "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement", "name": "01 - Enhancement", "color": "fef2c0", "default": false, "description": null}, {"id": 82470144, "node_id": "MDU6TGFiZWw4MjQ3MDE0NA==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20build", "name": "component: build", "color": "009800", "default": false, "description": null}, {"id": 16917445, "node_id": "MDU6TGFiZWwxNjkxNzQ0NQ==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.random", "name": "component: numpy.random", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-06-25T13:58:32Z", "updated_at": "2020-07-19T17:07:29Z", "closed_at": "2020-06-28T11:09:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to replicate example 3 in the random extending section https://numpy.org/devdocs/reference/random/examples/cython/extending_distributions.pyx.html I get a `undefined symbol: random_standard_uniform_fill_f` Import error.\r\n\r\nThe cython extension compiles fine with no issues until I try to run the function in a python script\r\n\r\n### Reproducing code example:\r\nexample 3 in https://numpy.org/devdocs/reference/random/examples/cython/extending_distributions.pyx.html\r\n\r\nWhen inside a python session\r\n```python\r\n#cython: language_level=3\r\n\r\n# example.pyx\r\nimport numpy as np\r\ncimport numpy as np\r\ncimport cython\r\nfrom cpython.pycapsule cimport PyCapsule_IsValid, PyCapsule_GetPointer\r\nfrom libc.stdint cimport uint16_t, uint64_t\r\nfrom numpy.random cimport bitgen_t\r\nfrom numpy.random import PCG64\r\nfrom numpy.random.c_distributions cimport (\r\n      random_standard_uniform_fill, random_standard_uniform_fill_f)\r\n\r\n\r\ndef uniforms_ex(Py_ssize_t n, dtype=np.float64):\r\n    cdef Py_ssize_t i\r\n    cdef bitgen_t *rng\r\n    cdef const char *capsule_name = \"BitGenerator\"\r\n    cdef np.ndarray randoms\r\n\r\n    bit_generator = PCG64()\r\n    capsule = bit_generator.capsule\r\n    # Optional check that the capsule if from a BitGenerator\r\n    if not PyCapsule_IsValid(capsule, capsule_name):\r\n        raise ValueError(\"Invalid pointer to anon_func_state\")\r\n    # Cast the pointer\r\n    rng = <bitgen_t *> PyCapsule_GetPointer(capsule, capsule_name)\r\n\r\n    _dtype = np.dtype(dtype)\r\n    randoms = np.empty(n, dtype=_dtype)\r\n    if _dtype == np.float32:\r\n        with bit_generator.lock:\r\n            random_standard_uniform_fill_f(rng, n, <float*>np.PyArray_DATA(randoms))\r\n    elif _dtype == np.float64:\r\n        with bit_generator.lock:\r\n            random_standard_uniform_fill(rng, n, <double*>np.PyArray_DATA(randoms))\r\n    else:\r\n        raise TypeError('Unsupported dtype %r for random' % _dtype)\r\n    return randoms\r\n```\r\n\r\n```python\r\n\r\nif __name__ == \"__main__\":\r\n    print(uniforms_ex(100))\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/example_script.py\", line 2, in <module>\r\n    from example import uniform_ex\r\nImportError: /home/npy_extend/example.cpython-36m-x86_64-linux-gnu.so: undefined symbol: random_standard_uniform_fill_f\r\n```\r\n### Numpy/Python version information:\r\n```\r\n1.19.0 3.6.10 (default, May 29 2020, 15:31:17) \r\n[GCC 9.3.0]\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16680", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16680/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16680/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16680/events", "html_url": "https://github.com/numpy/numpy/issues/16680", "id": 644963598, "node_id": "MDU6SXNzdWU2NDQ5NjM1OTg=", "number": 16680, "title": "Numpy reshape function returns values in a misplaced order", "user": {"login": "ahoelzemann", "id": 24317680, "node_id": "MDQ6VXNlcjI0MzE3Njgw", "avatar_url": "https://avatars3.githubusercontent.com/u/24317680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahoelzemann", "html_url": "https://github.com/ahoelzemann", "followers_url": "https://api.github.com/users/ahoelzemann/followers", "following_url": "https://api.github.com/users/ahoelzemann/following{/other_user}", "gists_url": "https://api.github.com/users/ahoelzemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahoelzemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahoelzemann/subscriptions", "organizations_url": "https://api.github.com/users/ahoelzemann/orgs", "repos_url": "https://api.github.com/users/ahoelzemann/repos", "events_url": "https://api.github.com/users/ahoelzemann/events{/privacy}", "received_events_url": "https://api.github.com/users/ahoelzemann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T20:59:43Z", "updated_at": "2020-06-24T21:09:25Z", "closed_at": "2020-06-24T21:07:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nHi everyone, \r\n\r\nI'm not sure if I found a bug in the reshape function, or if I have a mistake in my code. Please have a look on the attached two snippets below. I'm scaling 3D IMU-Data axis wise between -1 and 1, To do so I iterate over the three axis (signal) and scale them separately. After scaling them, I cast my list to a numpy array. This array has the dimension (x, y, 1), but I need my array in the shape y, x. That's why I transposed it and then try to delete the unnecessary third dimension. In the first example I did this by using the reshape function in the second example I just took the first element from the first dimension. Surprisingly I get different results. It seems like reshape is misplacing the samples. Around index 6000 you can see some clear changes.\r\n\r\nPlease have a closer look on the two plots below.\r\n![correct_order](https://user-images.githubusercontent.com/24317680/85626452-5dd2ad80-b66d-11ea-881b-7947058076c9.png)\r\n![misplaced_order](https://user-images.githubusercontent.com/24317680/85626454-5e6b4400-b66d-11ea-859b-fcdb470ae35f.png)\r\n\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n```python\r\nimport numpy as np\r\nresult = []\r\n        for signal in signals:\r\n            temp_signal = scale_between_minus_one_and_one(signal)\r\n            result.append(temp_signal)\r\n        result = np.array(result)\r\n        result = result.T\r\n        result = np.reshape(result, newshape=(result.shape[1], result.shape[2]))\r\n```\r\nAnd \r\n\r\n```python\r\nimport numpy as np\r\nresult = []\r\n        for signal in signals:\r\n            temp_signal = scale_between_minus_one_and_one(signal)\r\n            result.append(temp_signal)\r\n        result = np.array(result)\r\n        result = result.T[0,:,:]\r\n```\r\n```python\r\ndef scale_between_minus_one_and_one(input):\r\n    from sklearn.preprocessing import MinMaxScaler\r\n    \r\n    return MinMaxScaler(feature_range=(-1,1)).fit_transform(input)\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n\r\n### Numpy/Python version information:\r\nPython 3.8 and Numpy 1.18.4\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16679", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16679/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16679/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16679/events", "html_url": "https://github.com/numpy/numpy/issues/16679", "id": 644927546, "node_id": "MDU6SXNzdWU2NDQ5Mjc1NDY=", "number": 16679, "title": "BUG: non-numeric kernel_version on the OVH platform", "user": {"login": "nejib1", "id": 10485460, "node_id": "MDQ6VXNlcjEwNDg1NDYw", "avatar_url": "https://avatars3.githubusercontent.com/u/10485460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nejib1", "html_url": "https://github.com/nejib1", "followers_url": "https://api.github.com/users/nejib1/followers", "following_url": "https://api.github.com/users/nejib1/following{/other_user}", "gists_url": "https://api.github.com/users/nejib1/gists{/gist_id}", "starred_url": "https://api.github.com/users/nejib1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nejib1/subscriptions", "organizations_url": "https://api.github.com/users/nejib1/orgs", "repos_url": "https://api.github.com/users/nejib1/repos", "events_url": "https://api.github.com/users/nejib1/events{/privacy}", "received_events_url": "https://api.github.com/users/nejib1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359214, "node_id": "MDU6TGFiZWw2MzU5MjE0", "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug", "name": "00 - Bug", "color": "fef2c0", "default": false, "description": null}, {"id": 16916185, "node_id": "MDU6TGFiZWwxNjkxNjE4NQ==", "url": "https://api.github.com/repos/numpy/numpy/labels/priority:%20high", "name": "priority: high", "color": "ff0000", "default": false, "description": "High priority, also add milestones for urgent issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-24T20:26:25Z", "updated_at": "2020-07-08T02:44:53Z", "closed_at": "2020-06-30T17:03:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\nHello, there is an error in the code of __ini__.py (Python3.8) , when detecting the version of the Kernel.\r\nI found the solution but I detail the problem here to help other users.\r\n\r\n```python \r\n    # We usually use madvise hugepages support, but on some old kernels it\r\n    # is slow and thus better avoided.\r\n    # Specifically kernel version 4.6 had a bug fix which probably fixed this:\r\n    # https://github.com/torvalds/linux/commit/7cf91a98e607c2f935dbcc177d70011e95b8faff\r\n    import os\r\n    use_hugepage = os.environ.get(\"NUMPY_MADVISE_HUGEPAGE\", None)\r\n    if sys.platform == \"linux\" and use_hugepage is None:\r\n        use_hugepage = 1\r\n        kernel_version = os.uname().release.split(\".\")[:2]\r\n        kernel_version = tuple(int(v) for v in kernel_version)\r\n        if kernel_version < (4, 6):\r\n            use_hugepage = 0\r\n    elif use_hugepage is None:\r\n        # This is not Linux, so it should not matter, just enable anyway\r\n        use_hugepage = 1\r\n    else:\r\n        use_hugepage = int(use_hugepage)\r\n\r\n    # Note that this will currently only make a difference on Linux\r\n    core.multiarray._set_madvise_hugepage(use_hugepage)\r\n```\r\n\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n```\r\n# usr\\local\\lib\\python3.8\\site-packages\\numpy\\__init__.py\r\n\r\n #python3.8 test.py\r\n['4', '19-ovh-xxxx-std-ipv6-64']\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 4, in <module>\r\n    kernel_version = tuple(int(v) for v in kernel_version)\r\n  File \"test.py\", line 4, in <genexpr>\r\n    kernel_version = tuple(int(v) for v in kernel_version)\r\nValueError: invalid literal for int() with base 10: '19-ovh-xxxx-std-ipv6-64'\r\n```\r\n### Numpy/Python version information:\r\n\r\n<!-- Output from 'import sys, numpy; print(numpy.__version__, sys.version)' -->\r\n\r\n\r\nTo fix this error, here is the solution:\r\n\r\n\r\n```python\r\n      kernel_version = tuple(int(v[0:2]) for v in kernel_version) \r\n ```\r\n\r\nThe `int (v [0: 2] )` truncate the string to recover the INT correctly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16673", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16673/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16673/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16673/events", "html_url": "https://github.com/numpy/numpy/issues/16673", "id": 644214265, "node_id": "MDU6SXNzdWU2NDQyMTQyNjU=", "number": 16673, "title": "Improperly-formatted docstring for numpy.lib.format.descr_to_dtype", "user": {"login": "rossbar", "id": 1268991, "node_id": "MDQ6VXNlcjEyNjg5OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1268991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rossbar", "html_url": "https://github.com/rossbar", "followers_url": "https://api.github.com/users/rossbar/followers", "following_url": "https://api.github.com/users/rossbar/following{/other_user}", "gists_url": "https://api.github.com/users/rossbar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rossbar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rossbar/subscriptions", "organizations_url": "https://api.github.com/users/rossbar/orgs", "repos_url": "https://api.github.com/users/rossbar/repos", "events_url": "https://api.github.com/users/rossbar/events{/privacy}", "received_events_url": "https://api.github.com/users/rossbar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 6359990, "node_id": "MDU6TGFiZWw2MzU5OTkw", "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation", "name": "04 - Documentation", "color": "fef2c0", "default": false, "description": ""}, {"id": 16917082, "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==", "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib", "name": "component: numpy.lib", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T23:37:23Z", "updated_at": "2020-06-26T06:41:10Z", "closed_at": "2020-06-26T06:41:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The docstring for `numpy.lib.format.descr_to_dtype` does not conform to the `numpydoc` standard. Currently the docstring is not included in the documentation generated by sphinx. \r\n\r\n### Numpy/Python version information:\r\n\r\n1.20.0.dev0+e7adb14 3.8.3 (default, May 17 2020, 18:15:42) \r\n[GCC 10.1.0]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16670", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16670/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16670/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16670/events", "html_url": "https://github.com/numpy/numpy/issues/16670", "id": 643954312, "node_id": "MDU6SXNzdWU2NDM5NTQzMTI=", "number": 16670, "title": "pinv fails with SVD did not converge on Windows 1.19", "user": {"login": "bashtage", "id": 5585221, "node_id": "MDQ6VXNlcjU1ODUyMjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bashtage", "html_url": "https://github.com/bashtage", "followers_url": "https://api.github.com/users/bashtage/followers", "following_url": "https://api.github.com/users/bashtage/following{/other_user}", "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}", "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions", "organizations_url": "https://api.github.com/users/bashtage/orgs", "repos_url": "https://api.github.com/users/bashtage/repos", "events_url": "https://api.github.com/users/bashtage/events{/privacy}", "received_events_url": "https://api.github.com/users/bashtage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-23T15:50:37Z", "updated_at": "2020-06-23T18:22:17Z", "closed_at": "2020-06-23T16:58:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Getting strange SVD convergence issues on well-behaved arrays on 1.19.0/Windows.\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\nimport numpy as np\r\n\r\nrs = np.random.RandomState(187678)\r\nx = rs.standard_normal((nobs,3))\r\nassert np.isfinite(x).all()\r\npinv_x = np.linalg.pinv(x)\r\n```\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n\r\n```\r\n    pinv_x = np.linalg.pinv(x)\r\n<__array_function__ internals>:5: in pinv\r\n    ???\r\nC:\\Anaconda\\envs\\py38\\lib\\site-packages\\numpy\\linalg\\linalg.py:2003: in pinv\r\n    u, s, vt = svd(a, full_matrices=False, hermitian=hermitian)\r\n<__array_function__ internals>:5: in svd\r\n    ???\r\nC:\\Anaconda\\envs\\py38\\lib\\site-packages\\numpy\\linalg\\linalg.py:1661: in svd\r\n    u, s, vh = gufunc(a, signature=signature, extobj=extobj)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nerr = 'invalid value', flag = 8\r\n\r\n    def _raise_linalgerror_svd_nonconvergence(err, flag):\r\n>       raise LinAlgError(\"SVD did not converge\")\r\nE       numpy.linalg.LinAlgError: SVD did not converge\r\n```\r\n\r\n### Numpy/Python version information:\r\n\r\n```\r\n1.19.0 3.8.3 (default, May 19 2020, 06:50:17) [MSC v.1916 64 bit (AMD64)]\r\n```\r\n\r\nAlso\r\n```\r\nnp.show_config()\r\nblas_mkl_info:\r\n  NOT AVAILABLE\r\nblis_info:\r\n  NOT AVAILABLE\r\nopenblas_info:\r\n    library_dirs = ['D:\\\\a\\\\1\\\\s\\\\numpy\\\\build\\\\openblas_info']\r\n    libraries = ['openblas_info']\r\n    language = f77\r\n    define_macros = [('HAVE_CBLAS', None)]\r\nblas_opt_info:\r\n    library_dirs = ['D:\\\\a\\\\1\\\\s\\\\numpy\\\\build\\\\openblas_info']\r\n    libraries = ['openblas_info']\r\n    language = f77\r\n    define_macros = [('HAVE_CBLAS', None)]\r\nlapack_mkl_info:\r\n  NOT AVAILABLE\r\nopenblas_lapack_info:\r\n    library_dirs = ['D:\\\\a\\\\1\\\\s\\\\numpy\\\\build\\\\openblas_lapack_info']\r\n    libraries = ['openblas_lapack_info']\r\n    language = f77\r\n    define_macros = [('HAVE_CBLAS', None)]\r\nlapack_opt_info:\r\n    library_dirs = ['D:\\\\a\\\\1\\\\s\\\\numpy\\\\build\\\\openblas_lapack_info']\r\n    libraries = ['openblas_lapack_info']\r\n    language = f77\r\n    define_macros = [('HAVE_CBLAS', None)]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16668", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16668/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16668/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16668/events", "html_url": "https://github.com/numpy/numpy/issues/16668", "id": 643593893, "node_id": "MDU6SXNzdWU2NDM1OTM4OTM=", "number": 16668, "title": "Build Failure on Windows, Python 3.6 GCC Compilers: UnicodeDecodeError.", "user": {"login": "Qiyu8", "id": 15245051, "node_id": "MDQ6VXNlcjE1MjQ1MDUx", "avatar_url": "https://avatars3.githubusercontent.com/u/15245051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qiyu8", "html_url": "https://github.com/Qiyu8", "followers_url": "https://api.github.com/users/Qiyu8/followers", "following_url": "https://api.github.com/users/Qiyu8/following{/other_user}", "gists_url": "https://api.github.com/users/Qiyu8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qiyu8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qiyu8/subscriptions", "organizations_url": "https://api.github.com/users/Qiyu8/orgs", "repos_url": "https://api.github.com/users/Qiyu8/repos", "events_url": "https://api.github.com/users/Qiyu8/events{/privacy}", "received_events_url": "https://api.github.com/users/Qiyu8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-06-23T07:16:15Z", "updated_at": "2020-07-09T16:32:10Z", "closed_at": "2020-07-09T16:32:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "updating to the latest master , an `UnicodeDecodeError `occurred even after execute `git clean -xfd`\r\n### Reproducing code example:\r\n\r\nNo code example.\r\n\r\n### Error message:\r\n```\r\nCCompilerOpt.cc_test_flags[989] : testing flags (/WX)\r\nCCompilerOpt.__init__[1137] : feature 'AVX512_KNL' is disabled, MSVC compiler doesn't support it\r\nCCompilerOpt.__init__[1137] : feature 'AVX512_KNM' is disabled, MSVC compiler doesn't support it\r\nCCompilerOpt.__init__[1621] : check requested baseline\r\nCCompilerOpt.cc_test_flags[989] : testing flags (/arch:SSE)\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 499, in <module>\r\n    setup_package()\r\n  File \"setup.py\", line 491, in setup_package\r\n    setup(**metadata)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\core.py\", line 169, in setup\r\n    return old_setup(**new_attr)\r\n  File \"C:\\Python36\\lib\\site-packages\\setuptools\\__init__.py\", line 143, in setup\r\n    return distutils.core.setup(**attrs)\r\n  File \"C:\\Python36\\lib\\distutils\\core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"C:\\Python36\\lib\\distutils\\dist.py\", line 955, in run_commands\r\n    self.run_command(cmd)\r\n  File \"C:\\Python36\\lib\\distutils\\dist.py\", line 974, in run_command\r\n    cmd_obj.run()\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\command\\build_ext.py\", line 111, in run\r\n    build_clib.run()\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\command\\build_clib.py\", line 126, in run\r\n    cpu_dispatch=self.cpu_dispatch, cache_path=opt_cache_path\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 2451, in new_ccompiler_opt\r\n    opt = CCompilerOpt(compiler, **kwargs)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 2055, in __init__\r\n    _Parse.__init__(self, cpu_baseline, cpu_dispatch)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 1624, in __init__\r\n    baseline_names = self.feature_names(cpu_baseline)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 1182, in feature_names\r\n    if self.feature_is_supported(f, force_flags=force_flags):\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 829, in cache_wrap_me\r\n    ccb = cb(self, *args, **kwargs)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 1471, in feature_is_supported\r\n    if not self.feature_test(impl, force_flags):\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 829, in cache_wrap_me\r\n    ccb = cb(self, *args, **kwargs)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 1432, in feature_test\r\n    force_flags = self.feature_flags(name)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 829, in cache_wrap_me\r\n    ccb = cb(self, *args, **kwargs)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 1411, in feature_flags\r\n    if not f or not self.cc_test_flags(f):\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 829, in cache_wrap_me\r\n    ccb = cb(self, *args, **kwargs)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 991, in cc_test_flags\r\n    test = self.dist_test(test_path, flags)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 556, in dist_test\r\n    [source], flags, output_dir=self.conf_tmp_path\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 536, in dist_compile\r\n    sources, extra_postargs=flags, **kwargs\r\n  File \"C:\\Python36\\lib\\distutils\\_msvccompiler.py\", line 423, in compile\r\n    self.spawn(args)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 668, in _dist_test_spawn_paths\r\n    self._dist_test_spawn(cmd)\r\n  File \"D:\\Source\\numpy\\numpy\\distutils\\ccompiler_opt.py\", line 686, in _dist_test_spawn\r\n    o = o.decode()\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xc3 in position 4: invalid continuation byte\r\nCCompilerOpt._cache_write[786] : write cache to path -> D:\\Source\\numpy\\build\\temp.win-amd64-3.6\\ccompiler_opt_cache_clib.py\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numpy/numpy/issues/16663", "repository_url": "https://api.github.com/repos/numpy/numpy", "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16663/labels{/name}", "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16663/comments", "events_url": "https://api.github.com/repos/numpy/numpy/issues/16663/events", "html_url": "https://github.com/numpy/numpy/issues/16663", "id": 643337087, "node_id": "MDU6SXNzdWU2NDMzMzcwODc=", "number": 16663, "title": "1.18 Build Failure Ubuntu 16.04, Python 3.8 Gnu 9 Compilers: Cythonize Failed.", "user": {"login": "chrisgmorton", "id": 4575602, "node_id": "MDQ6VXNlcjQ1NzU2MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4575602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisgmorton", "html_url": "https://github.com/chrisgmorton", "followers_url": "https://api.github.com/users/chrisgmorton/followers", "following_url": "https://api.github.com/users/chrisgmorton/following{/other_user}", "gists_url": "https://api.github.com/users/chrisgmorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisgmorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisgmorton/subscriptions", "organizations_url": "https://api.github.com/users/chrisgmorton/orgs", "repos_url": "https://api.github.com/users/chrisgmorton/repos", "events_url": "https://api.github.com/users/chrisgmorton/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisgmorton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-22T20:22:32Z", "updated_at": "2020-07-04T19:20:48Z", "closed_at": "2020-07-04T19:20:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please describe the issue in detail here, and fill in the fields below -->\r\nThe NumPy 1.18.5 build fails on Ubuntu 16.04 with a cythonize error, using Python 3.8.3 built from source with GNU 9.3.0 compiler set. The NumPy 1.17.5 build completes successfully with same setup so something changed from 1.17 to 1.18 to cause the error. The NumPy 1.18.5 build completes successfully on MacOSX 10.15.5 Catalina, using Python 3.8.3 built with Xcode compilers and NumPy built with GNU 9.2 compiler set provided by hpc.sourceforge.net.\r\n\r\n### Reproducing code example:\r\n\r\n<!-- A short code example that reproduces the problem/missing feature. It should be\r\nself-contained, i.e., possible to run as-is via 'python myproblem.py' -->\r\n\r\n<!-- Remove these sections for a feature request -->\r\n\r\n### Error message:\r\n\r\n<!-- If you are reporting a segfault please include a GDB traceback, which you\r\ncan generate by following\r\nhttps://github.com/numpy/numpy/blob/master/doc/source/dev/development_environment.rst#debugging -->\r\n\r\n<!-- Full error message, if any (starting from line Traceback: ...) -->\r\n```\r\nRunning from numpy source directory.\r\n\r\nNote: if you need reliable uninstall behavior, then install\r\nwith pip instead of using `setup.py install`:\r\n\r\n  - `pip install .`       (from a git repo or downloaded source\r\n                           release)\r\n  - `pip install numpy`   (last NumPy release on PyPi)\r\n\r\n\r\nCythonizing sources\r\nProcessing numpy/random/.__bounded_integers.pxd.in\r\nTraceback (most recent call last):\r\n  File \"/mnt/d/fusion/build/numpy-1.18.5/tools/cythonize.py\", line 238, in <module>\r\n    main()\r\n  File \"/mnt/d/fusion/build/numpy-1.18.5/tools/cythonize.py\", line 234, in main\r\n    find_process_files(root_dir)\r\n  File \"/mnt/d/fusion/build/numpy-1.18.5/tools/cythonize.py\", line 225, in find_process_files\r\n    process(root_dir, fromfile, tofile, function, hash_db)\r\n  File \"/mnt/d/fusion/build/numpy-1.18.5/tools/cythonize.py\", line 191, in process\r\n    processor_function(fromfile, tofile)\r\n  File \"/mnt/d/fusion/build/numpy-1.18.5/tools/cythonize.py\", line 125, in process_tempita_pxd\r\n    tmpl = f.read()\r\n  File \"/mnt/d/fusion/prod/lib/python3.8/codecs.py\", line 322, in decode\r\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xa2 in position 37: invalid start byte\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 488, in <module>\r\n    setup_package()\r\n  File \"setup.py\", line 469, in setup_package\r\n    generate_cython()\r\n  File \"setup.py\", line 275, in generate_cython\r\n    raise RuntimeError(\"Running cythonize failed!\")\r\nRuntimeError: Running cythonize failed!\r\n```\r\n### Numpy/Python version information:\r\nNumpy 1.18.5, Python 3.8.3, gcc, g++, gfortran 9.3.0, Cython 0.29.20", "performed_via_github_app": null, "score": 1.0}]}