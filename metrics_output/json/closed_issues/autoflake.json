{"total_count": 30, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/myint/autoflake/issues/70", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/70/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/70/events", "html_url": "https://github.com/myint/autoflake/issues/70", "id": 645485177, "node_id": "MDU6SXNzdWU2NDU0ODUxNzc=", "number": 70, "title": "New release so we can use this as a pre-commit hook?", "user": {"login": "MarcoGorelli", "id": 33491632, "node_id": "MDQ6VXNlcjMzNDkxNjMy", "avatar_url": "https://avatars2.githubusercontent.com/u/33491632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcoGorelli", "html_url": "https://github.com/MarcoGorelli", "followers_url": "https://api.github.com/users/MarcoGorelli/followers", "following_url": "https://api.github.com/users/MarcoGorelli/following{/other_user}", "gists_url": "https://api.github.com/users/MarcoGorelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcoGorelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcoGorelli/subscriptions", "organizations_url": "https://api.github.com/users/MarcoGorelli/orgs", "repos_url": "https://api.github.com/users/MarcoGorelli/repos", "events_url": "https://api.github.com/users/MarcoGorelli/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcoGorelli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-25T11:27:23Z", "updated_at": "2020-06-25T17:45:37Z", "closed_at": "2020-06-25T17:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this fantastic tool - I've noticed there's a `.pre-commit-hooks.yaml` file on `master`, but not in the latest release.\r\n\r\nSorry if this comes across as rude or as a self-entitled request, I just think it would be fantastic if you could make a new release so we can use this as a pre-commit hook.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/61", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/61/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/61/events", "html_url": "https://github.com/myint/autoflake/issues/61", "id": 531844134, "node_id": "MDU6SXNzdWU1MzE4NDQxMzQ=", "number": 61, "title": "pre-commit support?", "user": {"login": "Trim21", "id": 13553903, "node_id": "MDQ6VXNlcjEzNTUzOTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/13553903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Trim21", "html_url": "https://github.com/Trim21", "followers_url": "https://api.github.com/users/Trim21/followers", "following_url": "https://api.github.com/users/Trim21/following{/other_user}", "gists_url": "https://api.github.com/users/Trim21/gists{/gist_id}", "starred_url": "https://api.github.com/users/Trim21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Trim21/subscriptions", "organizations_url": "https://api.github.com/users/Trim21/orgs", "repos_url": "https://api.github.com/users/Trim21/repos", "events_url": "https://api.github.com/users/Trim21/events{/privacy}", "received_events_url": "https://api.github.com/users/Trim21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-03T09:29:02Z", "updated_at": "2020-05-17T14:20:15Z", "closed_at": "2020-05-17T14:17:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "add `.pre-commit-hooks.yaml` to project root to support <https://pre-commit.com/>\r\n\r\n```yaml\r\n\r\n-   id: autoflake\r\n    name: autoflake\r\n    entry: autoflake\r\n    language: python\r\n    'types': [python]\r\n    require_serial: true\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/60", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/60/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/60/events", "html_url": "https://github.com/myint/autoflake/issues/60", "id": 529056369, "node_id": "MDU6SXNzdWU1MjkwNTYzNjk=", "number": 60, "title": "Fix warnings from flake8-comprehensions", "user": {"login": "Zac-HD", "id": 12229877, "node_id": "MDQ6VXNlcjEyMjI5ODc3", "avatar_url": "https://avatars1.githubusercontent.com/u/12229877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zac-HD", "html_url": "https://github.com/Zac-HD", "followers_url": "https://api.github.com/users/Zac-HD/followers", "following_url": "https://api.github.com/users/Zac-HD/following{/other_user}", "gists_url": "https://api.github.com/users/Zac-HD/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zac-HD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zac-HD/subscriptions", "organizations_url": "https://api.github.com/users/Zac-HD/orgs", "repos_url": "https://api.github.com/users/Zac-HD/repos", "events_url": "https://api.github.com/users/Zac-HD/events{/privacy}", "received_events_url": "https://api.github.com/users/Zac-HD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-27T01:12:25Z", "updated_at": "2019-12-23T22:29:51Z", "closed_at": "2019-12-23T22:29:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "[`flake8-comprehensions`](https://pypi.org/project/flake8-comprehensions/) is a lovely plugin to warn about inefficient creation of and operations on collections - and each of the warnings suggests a simple rewrite rule to resolve them.  I'm not sure if this is really in scope for `autoflake`, but thought it worth suggesting an optional flag to do so \ud83d\ude04 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/55", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/55/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/55/events", "html_url": "https://github.com/myint/autoflake/issues/55", "id": 476413362, "node_id": "MDU6SXNzdWU0NzY0MTMzNjI=", "number": 55, "title": "Is fix multiple spaces before key word available ?", "user": {"login": "ishandutta2007", "id": 2527354, "node_id": "MDQ6VXNlcjI1MjczNTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2527354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishandutta2007", "html_url": "https://github.com/ishandutta2007", "followers_url": "https://api.github.com/users/ishandutta2007/followers", "following_url": "https://api.github.com/users/ishandutta2007/following{/other_user}", "gists_url": "https://api.github.com/users/ishandutta2007/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishandutta2007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishandutta2007/subscriptions", "organizations_url": "https://api.github.com/users/ishandutta2007/orgs", "repos_url": "https://api.github.com/users/ishandutta2007/repos", "events_url": "https://api.github.com/users/ishandutta2007/events{/privacy}", "received_events_url": "https://api.github.com/users/ishandutta2007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-03T04:10:11Z", "updated_at": "2019-08-04T23:27:51Z", "closed_at": "2019-08-04T23:24:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I guess the following would fall under the same category, I was wondering is these are automatable or planned to be done in future releases.\r\n- Multiple spaces before keyword\r\n- Missing whitespace after keyword\r\n- no space space around keyword\r\n- unexpected spaces around keyword\r\n- trailing whitespaces\r\n- too many blank lines\r\n- expected 2 blank lines, found 1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/54", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/54/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/54/events", "html_url": "https://github.com/myint/autoflake/issues/54", "id": 471725572, "node_id": "MDU6SXNzdWU0NzE3MjU1NzI=", "number": 54, "title": "Plugins should not need a .pre-commit-hooks.yaml file", "user": {"login": "anentropic", "id": 147840, "node_id": "MDQ6VXNlcjE0Nzg0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anentropic", "html_url": "https://github.com/anentropic", "followers_url": "https://api.github.com/users/anentropic/followers", "following_url": "https://api.github.com/users/anentropic/following{/other_user}", "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}", "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions", "organizations_url": "https://api.github.com/users/anentropic/orgs", "repos_url": "https://api.github.com/users/anentropic/repos", "events_url": "https://api.github.com/users/anentropic/events{/privacy}", "received_events_url": "https://api.github.com/users/anentropic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-23T14:19:08Z", "updated_at": "2019-07-23T14:25:03Z", "closed_at": "2019-07-23T14:25:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Docs say:\r\n\r\n> python \u00b6\r\nThe hook repository must have a setup.py. It will be installed via pip install .. The installed package will provide an executable that will match the entry \u2013 usually through console_scripts or scripts in setup.py.\r\n>\r\n> Support: python hooks work without any system-level dependencies. It has been tested on linux, macOS, windows, and cygwin.\r\n\r\nBut this is not entirely true.  You cannot install arbitrary tools and use them with pre-commit.\r\n\r\nThe tool you install currently has to provide a `.pre-commit-hooks.yaml`, otherwise you get the error:\r\n```\r\n/.cache/pre-commit/repohzjhAS/.pre-commit-hooks.yaml does not exist\r\n```\r\n\r\nThis seems like a design flaw.\r\n\r\nAs a user I should be able to provide the necessary configuration to use the target package as a pre-commit hook from within my own project's `.pre-commit-config.yaml` file, without needing any cooperation from the tool itself.\r\n\r\nIf the `.pre-commit-hooks.yaml` file has a role at all it can be for plugin authors to provide useful defaults. But it should not be required in order to use a particular tool.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/50", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/50/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/50/events", "html_url": "https://github.com/myint/autoflake/issues/50", "id": 434842447, "node_id": "MDU6SXNzdWU0MzQ4NDI0NDc=", "number": 50, "title": "--check flag isn't available", "user": {"login": "SaturnFromTitan", "id": 17853006, "node_id": "MDQ6VXNlcjE3ODUzMDA2", "avatar_url": "https://avatars0.githubusercontent.com/u/17853006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SaturnFromTitan", "html_url": "https://github.com/SaturnFromTitan", "followers_url": "https://api.github.com/users/SaturnFromTitan/followers", "following_url": "https://api.github.com/users/SaturnFromTitan/following{/other_user}", "gists_url": "https://api.github.com/users/SaturnFromTitan/gists{/gist_id}", "starred_url": "https://api.github.com/users/SaturnFromTitan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SaturnFromTitan/subscriptions", "organizations_url": "https://api.github.com/users/SaturnFromTitan/orgs", "repos_url": "https://api.github.com/users/SaturnFromTitan/repos", "events_url": "https://api.github.com/users/SaturnFromTitan/events{/privacy}", "received_events_url": "https://api.github.com/users/SaturnFromTitan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-18T15:56:42Z", "updated_at": "2019-04-21T16:29:56Z", "closed_at": "2019-04-21T16:29:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation is pointing to a flag `--check`, but trying to run `autoflake --check my_file.py` I receive the following error:\r\n```\r\nusage: autoflake [-h] [-i] [-r] [--exclude globs] [--imports IMPORTS]\r\n                 [--expand-star-imports] [--remove-all-unused-imports]\r\n                 [--remove-duplicate-keys] [--remove-unused-variables]\r\n                 [--version]\r\n                 files [files ...]\r\nautoflake: error: unrecognized arguments: --check\r\n```\r\n\r\nI'm on version `autoflake 1.2`\r\n\r\nIs there a known work-around for this? I need this to include it in my CI integration. I would also be fine with the regular output of `autoflake my_file.py`, but the error code is always 0, even if it discovers changes...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/47", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/47/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/47/events", "html_url": "https://github.com/myint/autoflake/issues/47", "id": 427237080, "node_id": "MDU6SXNzdWU0MjcyMzcwODA=", "number": 47, "title": "call autoflake as python module, and run on string instead of file?", "user": {"login": "gotexis", "id": 38595828, "node_id": "MDQ6VXNlcjM4NTk1ODI4", "avatar_url": "https://avatars3.githubusercontent.com/u/38595828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotexis", "html_url": "https://github.com/gotexis", "followers_url": "https://api.github.com/users/gotexis/followers", "following_url": "https://api.github.com/users/gotexis/following{/other_user}", "gists_url": "https://api.github.com/users/gotexis/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotexis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotexis/subscriptions", "organizations_url": "https://api.github.com/users/gotexis/orgs", "repos_url": "https://api.github.com/users/gotexis/repos", "events_url": "https://api.github.com/users/gotexis/events{/privacy}", "received_events_url": "https://api.github.com/users/gotexis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-30T03:35:40Z", "updated_at": "2019-03-31T00:08:00Z", "closed_at": "2019-03-31T00:07:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I understand since this module is written in python, there must be some way to run the module programmatically (that is, not through subprocess).\r\n\r\nI wonder if this is documented?\r\n\r\nAlso, instead of running on file, it would be better to run on string if possible :)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/41", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/41/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/41/events", "html_url": "https://github.com/myint/autoflake/issues/41", "id": 373884978, "node_id": "MDU6SXNzdWUzNzM4ODQ5Nzg=", "number": 41, "title": "Not removing imports noticed by pyflakes", "user": {"login": "dchimeno", "id": 36852967, "node_id": "MDQ6VXNlcjM2ODUyOTY3", "avatar_url": "https://avatars3.githubusercontent.com/u/36852967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dchimeno", "html_url": "https://github.com/dchimeno", "followers_url": "https://api.github.com/users/dchimeno/followers", "following_url": "https://api.github.com/users/dchimeno/following{/other_user}", "gists_url": "https://api.github.com/users/dchimeno/gists{/gist_id}", "starred_url": "https://api.github.com/users/dchimeno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dchimeno/subscriptions", "organizations_url": "https://api.github.com/users/dchimeno/orgs", "repos_url": "https://api.github.com/users/dchimeno/repos", "events_url": "https://api.github.com/users/dchimeno/events{/privacy}", "received_events_url": "https://api.github.com/users/dchimeno/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189017, "node_id": "MDU6TGFiZWwyMzE4OTAxNw==", "url": "https://api.github.com/repos/myint/autoflake/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-25T10:44:20Z", "updated_at": "2018-12-23T18:19:15Z", "closed_at": "2018-12-23T18:19:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the following example:\r\n````python\r\nfrom pyspark.sql.types import (\r\n    ArrayType,\r\n    BooleanType,\r\n    IntegerType,\r\n)\r\n\r\na = ArrayType()\r\n`````\r\nRun:\r\n````bash\r\npyflakes example.py\r\n````\r\nResult:\r\n````\r\nexample.py:1: 'pyspark.sql.types.BooleanType' imported but unused\r\nexample.py:1: 'pyspark.sql.types.IntegerType' imported but unused\r\n````\r\n\r\nRunning\r\n````bash\r\nautoflake --remove-all-unused-imports example.py\r\n````\r\nNothing happens.\r\n\r\nautoflake 1.2\r\npyflakes 2.0.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/40", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/40/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/40/events", "html_url": "https://github.com/myint/autoflake/issues/40", "id": 332944719, "node_id": "MDU6SXNzdWUzMzI5NDQ3MTk=", "number": 40, "title": "Handle imports for type annotations", "user": {"login": "dmey", "id": 26348635, "node_id": "MDQ6VXNlcjI2MzQ4NjM1", "avatar_url": "https://avatars2.githubusercontent.com/u/26348635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmey", "html_url": "https://github.com/dmey", "followers_url": "https://api.github.com/users/dmey/followers", "following_url": "https://api.github.com/users/dmey/following{/other_user}", "gists_url": "https://api.github.com/users/dmey/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmey/subscriptions", "organizations_url": "https://api.github.com/users/dmey/orgs", "repos_url": "https://api.github.com/users/dmey/repos", "events_url": "https://api.github.com/users/dmey/events{/privacy}", "received_events_url": "https://api.github.com/users/dmey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189018, "node_id": "MDU6TGFiZWwyMzE4OTAxOA==", "url": "https://api.github.com/repos/myint/autoflake/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-16T00:14:21Z", "updated_at": "2019-03-31T00:08:46Z", "closed_at": "2019-03-31T00:08:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, import from type annotations are removed.\r\nE.g.\r\n``` py\r\nfrom typing import Any\r\n\r\na = None    # type: Any\r\n```\r\nbecomes\r\n```py\r\na = None    # type: Any\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/39", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/39/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/39/events", "html_url": "https://github.com/myint/autoflake/issues/39", "id": 331196025, "node_id": "MDU6SXNzdWUzMzExOTYwMjU=", "number": 39, "title": "running autoflake in multiple directories?", "user": {"login": "mpuri14", "id": 9772350, "node_id": "MDQ6VXNlcjk3NzIzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9772350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpuri14", "html_url": "https://github.com/mpuri14", "followers_url": "https://api.github.com/users/mpuri14/followers", "following_url": "https://api.github.com/users/mpuri14/following{/other_user}", "gists_url": "https://api.github.com/users/mpuri14/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpuri14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpuri14/subscriptions", "organizations_url": "https://api.github.com/users/mpuri14/orgs", "repos_url": "https://api.github.com/users/mpuri14/repos", "events_url": "https://api.github.com/users/mpuri14/events{/privacy}", "received_events_url": "https://api.github.com/users/mpuri14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-11T13:46:20Z", "updated_at": "2018-06-20T13:57:39Z", "closed_at": "2018-06-20T13:57:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking to find all python files in my d:\\ and run autoflake on it? how would i do this? \r\n\r\nI saw a mention of the -r parameter but it did not work for me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/38", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/38/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/38/events", "html_url": "https://github.com/myint/autoflake/issues/38", "id": 321402684, "node_id": "MDU6SXNzdWUzMjE0MDI2ODQ=", "number": 38, "title": "License file", "user": {"login": "toddrme2178", "id": 4181796, "node_id": "MDQ6VXNlcjQxODE3OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4181796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toddrme2178", "html_url": "https://github.com/toddrme2178", "followers_url": "https://api.github.com/users/toddrme2178/followers", "following_url": "https://api.github.com/users/toddrme2178/following{/other_user}", "gists_url": "https://api.github.com/users/toddrme2178/gists{/gist_id}", "starred_url": "https://api.github.com/users/toddrme2178/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toddrme2178/subscriptions", "organizations_url": "https://api.github.com/users/toddrme2178/orgs", "repos_url": "https://api.github.com/users/toddrme2178/repos", "events_url": "https://api.github.com/users/toddrme2178/events{/privacy}", "received_events_url": "https://api.github.com/users/toddrme2178/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-09T01:48:31Z", "updated_at": "2018-05-09T14:07:16Z", "closed_at": "2018-05-09T14:07:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to package autoflake for openSUSE. However, there is no license file I can find, either in the github or tarball. In order for people to know how they can use your code it is really important to have a license file. Would it be possible to add one? Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/36", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/36/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/36/events", "html_url": "https://github.com/myint/autoflake/issues/36", "id": 312599271, "node_id": "MDU6SXNzdWUzMTI1OTkyNzE=", "number": 36, "title": "Anaconda Package out of date", "user": {"login": "johngkhs", "id": 3230742, "node_id": "MDQ6VXNlcjMyMzA3NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3230742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johngkhs", "html_url": "https://github.com/johngkhs", "followers_url": "https://api.github.com/users/johngkhs/followers", "following_url": "https://api.github.com/users/johngkhs/following{/other_user}", "gists_url": "https://api.github.com/users/johngkhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/johngkhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johngkhs/subscriptions", "organizations_url": "https://api.github.com/users/johngkhs/orgs", "repos_url": "https://api.github.com/users/johngkhs/repos", "events_url": "https://api.github.com/users/johngkhs/events{/privacy}", "received_events_url": "https://api.github.com/users/johngkhs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-09T16:27:45Z", "updated_at": "2018-04-09T16:29:41Z", "closed_at": "2018-04-09T16:29:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWould you be able to update the anaconda cloud with the latest autoflake version 1.1 so I can use conda to install autoflake instead of needing to use pip?\r\nThe page is: https://anaconda.org/auto/autoflake", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/35", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/35/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/35/events", "html_url": "https://github.com/myint/autoflake/issues/35", "id": 312466041, "node_id": "MDU6SXNzdWUzMTI0NjYwNDE=", "number": 35, "title": "Don't remove imports from __init__.py", "user": {"login": "NeilGirdhar", "id": 730137, "node_id": "MDQ6VXNlcjczMDEzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/730137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeilGirdhar", "html_url": "https://github.com/NeilGirdhar", "followers_url": "https://api.github.com/users/NeilGirdhar/followers", "following_url": "https://api.github.com/users/NeilGirdhar/following{/other_user}", "gists_url": "https://api.github.com/users/NeilGirdhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeilGirdhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeilGirdhar/subscriptions", "organizations_url": "https://api.github.com/users/NeilGirdhar/orgs", "repos_url": "https://api.github.com/users/NeilGirdhar/repos", "events_url": "https://api.github.com/users/NeilGirdhar/events{/privacy}", "received_events_url": "https://api.github.com/users/NeilGirdhar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189018, "node_id": "MDU6TGFiZWwyMzE4OTAxOA==", "url": "https://api.github.com/repos/myint/autoflake/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 865728233, "node_id": "MDU6TGFiZWw4NjU3MjgyMzM=", "url": "https://api.github.com/repos/myint/autoflake/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-09T09:54:12Z", "updated_at": "2018-12-23T18:20:55Z", "closed_at": "2018-12-23T18:20:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "A typical way to set up a project is to have the modules specify `__all__` variables and then have the `__init__.py` `from .module_name import *`.  This causes autoflake to remove all of the imports.\r\n\r\nPlease consider leaving the imports in `__init__.py`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/34", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/34/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/34/events", "html_url": "https://github.com/myint/autoflake/issues/34", "id": 299726070, "node_id": "MDU6SXNzdWUyOTk3MjYwNzA=", "number": 34, "title": "Support for running autoflake on all files in a directory", "user": {"login": "EmilStenstrom", "id": 224130, "node_id": "MDQ6VXNlcjIyNDEzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/224130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EmilStenstrom", "html_url": "https://github.com/EmilStenstrom", "followers_url": "https://api.github.com/users/EmilStenstrom/followers", "following_url": "https://api.github.com/users/EmilStenstrom/following{/other_user}", "gists_url": "https://api.github.com/users/EmilStenstrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/EmilStenstrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EmilStenstrom/subscriptions", "organizations_url": "https://api.github.com/users/EmilStenstrom/orgs", "repos_url": "https://api.github.com/users/EmilStenstrom/repos", "events_url": "https://api.github.com/users/EmilStenstrom/events{/privacy}", "received_events_url": "https://api.github.com/users/EmilStenstrom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-23T14:19:44Z", "updated_at": "2018-02-24T08:56:07Z", "closed_at": "2018-02-24T03:05:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried to find a magic flag or hack that lets to run autoflake on all files in a directory. Like what flake8 and isort have. Is this something that is possible, or even desirable? \r\n\r\nA workaround is to use:\r\n```\r\nfind . -name '*.py' | xargs autoflake --in-place --remove-all-unused-imports --remove-unused-variables\r\n```\r\n\r\nBut this doesn't work on windows, and requires some knowhow into how find and xargs work, something that likely many beginners lack.\r\n\r\nThanks for a great project!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/32", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/32/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/32/events", "html_url": "https://github.com/myint/autoflake/issues/32", "id": 296876249, "node_id": "MDU6SXNzdWUyOTY4NzYyNDk=", "number": 32, "title": "get_python_lib should look at platform-dependent directory", "user": {"login": "toddrme2178", "id": 4181796, "node_id": "MDQ6VXNlcjQxODE3OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4181796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toddrme2178", "html_url": "https://github.com/toddrme2178", "followers_url": "https://api.github.com/users/toddrme2178/followers", "following_url": "https://api.github.com/users/toddrme2178/following{/other_user}", "gists_url": "https://api.github.com/users/toddrme2178/gists{/gist_id}", "starred_url": "https://api.github.com/users/toddrme2178/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toddrme2178/subscriptions", "organizations_url": "https://api.github.com/users/toddrme2178/orgs", "repos_url": "https://api.github.com/users/toddrme2178/repos", "events_url": "https://api.github.com/users/toddrme2178/events{/privacy}", "received_events_url": "https://api.github.com/users/toddrme2178/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-13T20:35:14Z", "updated_at": "2018-02-16T15:09:34Z", "closed_at": "2018-02-16T15:09:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `standard_paths` function calls [get_python_lib](https://github.com/myint/autoflake/blob/ea40d4a1b0f8baee7f67df4cd17168c83c3f0168/autoflake.py#L71).  However, it only uses the default `plat_specific` value (`False`), which means it looks in the non-platform-specific directory.  This can miss many or even all python standard library packages depending on the architecture and installation details.  It would be much more reliable to check both the platform-specific and platform-independent versions of the directory (so call the function with both `plat_specific=False` and `plat_specific=True`, perhaps in a loop).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/29", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/29/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/29/events", "html_url": "https://github.com/myint/autoflake/issues/29", "id": 287792337, "node_id": "MDU6SXNzdWUyODc3OTIzMzc=", "number": 29, "title": "`--remove-duplicate-keys` sometimes removes the wrong item", "user": {"login": "myint", "id": 1235108, "node_id": "MDQ6VXNlcjEyMzUxMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1235108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myint", "html_url": "https://github.com/myint", "followers_url": "https://api.github.com/users/myint/followers", "following_url": "https://api.github.com/users/myint/following{/other_user}", "gists_url": "https://api.github.com/users/myint/gists{/gist_id}", "starred_url": "https://api.github.com/users/myint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myint/subscriptions", "organizations_url": "https://api.github.com/users/myint/orgs", "repos_url": "https://api.github.com/users/myint/repos", "events_url": "https://api.github.com/users/myint/events{/privacy}", "received_events_url": "https://api.github.com/users/myint/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189016, "node_id": "MDU6TGFiZWwyMzE4OTAxNg==", "url": "https://api.github.com/repos/myint/autoflake/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-11T13:49:28Z", "updated_at": "2018-01-12T17:14:53Z", "closed_at": "2018-01-12T17:14:53Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I would expect it to delete the first `'b': 1` line, but it instead deletes `'b': 6`.\r\n\r\n`foo.py`:\r\n```python\r\n{\r\n    'a': 0,\r\n    'b': 1,\r\n    'c': 2,\r\n    'd': 3,\r\n    'e': 4,\r\n    'f': 5,\r\n    'b': 6,\r\n}\r\n```\r\n\r\n`./autoflake.py --remove-duplicate-keys foo.py`:\r\n```diff\r\n--- original/foo.py\r\n+++ fixed/foo.py\r\n@@ -5,5 +5,4 @@\r\n     'd': 3,\r\n     'e': 4,\r\n     'f': 5,\r\n-    'b': 6,\r\n }\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/27", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/27/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/27/events", "html_url": "https://github.com/myint/autoflake/issues/27", "id": 268245091, "node_id": "MDU6SXNzdWUyNjgyNDUwOTE=", "number": 27, "title": "Remove duplicate dictonary keys", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189018, "node_id": "MDU6TGFiZWwyMzE4OTAxOA==", "url": "https://api.github.com/repos/myint/autoflake/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 758249749, "node_id": "MDU6TGFiZWw3NTgyNDk3NDk=", "url": "https://api.github.com/repos/myint/autoflake/labels/gci", "name": "gci", "color": "61dd49", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-25T02:18:39Z", "updated_at": "2018-01-03T04:16:29Z", "closed_at": "2018-01-03T04:16:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/PyCQA/pyflakes/releases/tag/1.3.0 included support for detecting duplicate dictionary keys, strictly only reporting when the values differ, as there is no confusion in having the same key,value combination appear multiple times.\r\n\r\nIt would be nice for autoflake to implement a automatic fixer for this, removing all but the last value for a key in a dictionary.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/24", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/24/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/24/events", "html_url": "https://github.com/myint/autoflake/issues/24", "id": 250358228, "node_id": "MDU6SXNzdWUyNTAzNTgyMjg=", "number": 24, "title": "Support type hints for Python 2.7 and straddling code", "user": {"login": "hackerkid", "id": 7190633, "node_id": "MDQ6VXNlcjcxOTA2MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7190633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackerkid", "html_url": "https://github.com/hackerkid", "followers_url": "https://api.github.com/users/hackerkid/followers", "following_url": "https://api.github.com/users/hackerkid/following{/other_user}", "gists_url": "https://api.github.com/users/hackerkid/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackerkid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackerkid/subscriptions", "organizations_url": "https://api.github.com/users/hackerkid/orgs", "repos_url": "https://api.github.com/users/hackerkid/repos", "events_url": "https://api.github.com/users/hackerkid/events{/privacy}", "received_events_url": "https://api.github.com/users/hackerkid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-15T15:57:30Z", "updated_at": "2019-07-07T19:33:02Z", "closed_at": "2019-07-07T19:33:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "```py\r\nfrom typing import List\r\n\r\ndef hello(): # type: () -> None\r\n    print 'hello'\r\n\r\nclass Example:\r\n    def method(self, lst, opt=0, *args, **kwargs):\r\n        # type: (List[str], int, *str, **bool) -> int\r\n        print(\"Do stuff\")\r\n```\r\nRunning `autoflake --remove-all-unused-imports ` would remove `from typing import List`. This should not be the case as `List` import is used for defining the type.\r\n\r\n* https://www.python.org/dev/peps/pep-0484/#suggested-syntax-for-python-2-7-and-straddling-code\r\n* mypy is a static type checker for Python and uses type annotation in comments for supporting python2.7 code. http://mypy.readthedocs.io/en/latest/python2.html\r\n* http://blog.zulip.org/2016/10/13/static-types-in-python-oh-mypy/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/21", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/21/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/21/events", "html_url": "https://github.com/myint/autoflake/issues/21", "id": 236658767, "node_id": "MDU6SXNzdWUyMzY2NTg3Njc=", "number": 21, "title": "Minimum pyflakes version is v1.1.0", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-17T12:48:28Z", "updated_at": "2017-06-17T23:23:30Z", "closed_at": "2017-06-17T23:23:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "As mentioned on https://github.com/myint/autoflake/issues/14 , `pyflakes.messages.ImportStarUsage` used by https://github.com/myint/autoflake/pull/18 was introduced PyCQA/pyflakes@0532189 (v1.1.0).\r\n\r\nhttps://github.com/myint/autoflake/commit/d756487f967180c1ae34d51e8ea41cd53d0dcaa7 only increased the minimum to v1.0\r\n\r\ncc @adhikasp ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/20", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/20/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/20/events", "html_url": "https://github.com/myint/autoflake/issues/20", "id": 236298377, "node_id": "MDU6SXNzdWUyMzYyOTgzNzc=", "number": 20, "title": "Option to flag certain unused imports as exceptions", "user": {"login": "chrisspen", "id": 116631, "node_id": "MDQ6VXNlcjExNjYzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/116631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisspen", "html_url": "https://github.com/chrisspen", "followers_url": "https://api.github.com/users/chrisspen/followers", "following_url": "https://api.github.com/users/chrisspen/following{/other_user}", "gists_url": "https://api.github.com/users/chrisspen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisspen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisspen/subscriptions", "organizations_url": "https://api.github.com/users/chrisspen/orgs", "repos_url": "https://api.github.com/users/chrisspen/repos", "events_url": "https://api.github.com/users/chrisspen/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisspen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-15T20:01:15Z", "updated_at": "2017-07-24T00:30:51Z", "closed_at": "2017-07-24T00:30:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Django app whose traditional `models.py` file is actually a `models` package. To keep it compatible with other Django functions, the package's `__init__.py` contains:\r\n\r\n    from .base import *\r\n\r\nWhen I ran `autoflake --in-place --remove-all-unused-imports src` it stripped out this line, breaking my entire app, and the cause wasn't immediately obvious.\r\n\r\nStill, `autoflake` correctly removed a ton of other unused imports. Is there any option to flag certain lines as exceptions, so you can run `autoflake` on an entire codebase but ensure that it won't incorrectly remove a line that's an exception to the rule?\r\n\r\nPylint supports this feature with a syntax like:\r\n\r\n    some_line # pylint: disable=rule-name\r\n\r\nDoes `autoflake` support anything like that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/19", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/19/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/19/events", "html_url": "https://github.com/myint/autoflake/issues/19", "id": 236290830, "node_id": "MDU6SXNzdWUyMzYyOTA4MzA=", "number": 19, "title": "Parens prevent removal of unused imports", "user": {"login": "chrisspen", "id": 116631, "node_id": "MDQ6VXNlcjExNjYzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/116631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisspen", "html_url": "https://github.com/chrisspen", "followers_url": "https://api.github.com/users/chrisspen/followers", "following_url": "https://api.github.com/users/chrisspen/following{/other_user}", "gists_url": "https://api.github.com/users/chrisspen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisspen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisspen/subscriptions", "organizations_url": "https://api.github.com/users/chrisspen/orgs", "repos_url": "https://api.github.com/users/chrisspen/repos", "events_url": "https://api.github.com/users/chrisspen/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisspen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189017, "node_id": "MDU6TGFiZWwyMzE4OTAxNw==", "url": "https://api.github.com/repos/myint/autoflake/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-15T19:28:49Z", "updated_at": "2017-06-16T02:52:05Z", "closed_at": "2017-06-16T02:52:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The use of parenthesis causes the `--remove-all-unused-imports` to miss unused imports.\r\n\r\ne.g.\r\n\r\n    $ echo -e \"from os import path\" > example.py\r\n    $ cat example.py\r\n    from os import path\r\n    $ autoflake --in-place --remove-all-unused-imports example.py\r\n    $ cat example.py\r\n    $ echo -e \"from os import (\\npath\\n)\" > example.py\r\n    $ cat example.py\r\n    from os import (\r\n    path\r\n    )\r\n    $ python example.py\r\n    $ autoflake --in-place --remove-all-unused-imports example.py\r\n    $ cat example.py\r\n    from os import (\r\n    path\r\n    )\r\n\r\nSince parens are legal import syntax, I would expect their presence of absence to have no effect on unused import checking.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/17", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/17/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/17/events", "html_url": "https://github.com/myint/autoflake/issues/17", "id": 229627870, "node_id": "MDU6SXNzdWUyMjk2Mjc4NzA=", "number": 17, "title": "Remove of multiline imports doesn't work properly", "user": {"login": "winklerrr", "id": 5332458, "node_id": "MDQ6VXNlcjUzMzI0NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5332458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/winklerrr", "html_url": "https://github.com/winklerrr", "followers_url": "https://api.github.com/users/winklerrr/followers", "following_url": "https://api.github.com/users/winklerrr/following{/other_user}", "gists_url": "https://api.github.com/users/winklerrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/winklerrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/winklerrr/subscriptions", "organizations_url": "https://api.github.com/users/winklerrr/orgs", "repos_url": "https://api.github.com/users/winklerrr/repos", "events_url": "https://api.github.com/users/winklerrr/events{/privacy}", "received_events_url": "https://api.github.com/users/winklerrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-18T10:43:58Z", "updated_at": "2017-05-18T14:52:16Z", "closed_at": "2017-05-18T13:19:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The problem occurs when I try to remove some unused imports from a multiline import like this one:\r\n\r\n```\r\nfrom argparse import (ArgumentParser,\r\n                      ArgumentError,\r\n                      ArgumentTypeError)\r\n```\r\n\r\n\r\nEven if none of the imports in the multiline import is used, autoflake doesn't remove anything.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/14", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/14/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/14/events", "html_url": "https://github.com/myint/autoflake/issues/14", "id": 220457819, "node_id": "MDU6SXNzdWUyMjA0NTc4MTk=", "number": 14, "title": "Expand from foo import * for a single star import", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189018, "node_id": "MDU6TGFiZWwyMzE4OTAxOA==", "url": "https://api.github.com/repos/myint/autoflake/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-09T08:54:12Z", "updated_at": "2017-06-16T13:54:40Z", "closed_at": "2017-06-16T13:54:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "If there is only one star import, `from foo import *` can be fixed by replacing the `*` with any undefined names.\r\n\r\nThis would ideally be done by using `StarImportation` and `ImportStarUsage` which were introduced https://github.com/PyCQA/pyflakes/commit/0532189b3 (v1.1.0).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/11", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/11/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/11/events", "html_url": "https://github.com/myint/autoflake/issues/11", "id": 173340398, "node_id": "MDU6SXNzdWUxNzMzNDAzOTg=", "number": 11, "title": "Include exclude parameter", "user": {"login": "krisdestruction", "id": 1440068, "node_id": "MDQ6VXNlcjE0NDAwNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1440068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krisdestruction", "html_url": "https://github.com/krisdestruction", "followers_url": "https://api.github.com/users/krisdestruction/followers", "following_url": "https://api.github.com/users/krisdestruction/following{/other_user}", "gists_url": "https://api.github.com/users/krisdestruction/gists{/gist_id}", "starred_url": "https://api.github.com/users/krisdestruction/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krisdestruction/subscriptions", "organizations_url": "https://api.github.com/users/krisdestruction/orgs", "repos_url": "https://api.github.com/users/krisdestruction/repos", "events_url": "https://api.github.com/users/krisdestruction/events{/privacy}", "received_events_url": "https://api.github.com/users/krisdestruction/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189018, "node_id": "MDU6TGFiZWwyMzE4OTAxOA==", "url": "https://api.github.com/repos/myint/autoflake/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-26T00:11:39Z", "updated_at": "2017-07-25T14:19:22Z", "closed_at": "2017-07-25T14:19:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add `--exclude` parameter to exclude files with a certain pattern\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/7", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/7/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/7/events", "html_url": "https://github.com/myint/autoflake/issues/7", "id": 32806404, "node_id": "MDU6SXNzdWUzMjgwNjQwNA==", "number": 7, "title": "Clean up imports without splitting into multiple lines", "user": {"login": "collinanderson", "id": 129234, "node_id": "MDQ6VXNlcjEyOTIzNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/129234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/collinanderson", "html_url": "https://github.com/collinanderson", "followers_url": "https://api.github.com/users/collinanderson/followers", "following_url": "https://api.github.com/users/collinanderson/following{/other_user}", "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions", "organizations_url": "https://api.github.com/users/collinanderson/orgs", "repos_url": "https://api.github.com/users/collinanderson/repos", "events_url": "https://api.github.com/users/collinanderson/events{/privacy}", "received_events_url": "https://api.github.com/users/collinanderson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189018, "node_id": "MDU6TGFiZWwyMzE4OTAxOA==", "url": "https://api.github.com/repos/myint/autoflake/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-05-05T12:50:49Z", "updated_at": "2017-04-19T03:21:27Z", "closed_at": "2017-04-19T03:21:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed if I have code like:\n\n```\nfrom xyz import b, c, unused, a\n```\n\nautoflake converts it to:\n\n```\nfrom xyz import a\nfrom xyz import b\nfrom xyz import c\n```\n\nIs there anyway to keep it on one line?\n\n```\nfrom xyz import a, b, c\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/6", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/6/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/6/events", "html_url": "https://github.com/myint/autoflake/issues/6", "id": 32509369, "node_id": "MDU6SXNzdWUzMjUwOTM2OQ==", "number": 6, "title": "Fails on utf-8 encoded file", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-30T06:17:47Z", "updated_at": "2014-04-30T13:02:14Z", "closed_at": "2014-04-30T13:02:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "file:\n\n```\n# -*- coding: utf-8 -*-\n\nimport os\n\n# Umlauts: \u00fc\u00f6\u00e4\u00df\n\nprint 'foo'\n```\n\nI patched autoflake, to see the traceback. Before autoflake did silently  nothing.\n\n```\n--- a/autoflake.py\n+++ b/autoflake.py\n@@ -114,7 +114,7 @@ def check(source):\n         # Python 2.\n         try:\n             source = source.encode()\n-        except UnicodeError:  # pragma: no cover\n+        except IOError:#UnicodeError:  # pragma: no cover\n             return []\n\n     reporter = ListReporter()\n\n```\n\nTraceback:\n\n```\nmodwork_eins_dmes@workdevel114:~$ autoflake -i --remove-all-unused-imports tmp/t.py \nTraceback (most recent call last):\n  File \"/home/modwork_eins_dmes/bin/autoflake\", line 9, in <module>\n    load_entry_point('autoflake==0.6.5', 'console_scripts', 'autoflake')()\n  File \"/home/modwork_eins_dmes/src/autoflake/autoflake.py\", line 557, in main\n    standard_error=sys.stderr)\n  File \"/home/modwork_eins_dmes/src/autoflake/autoflake.py\", line 540, in _main\n    fix_file(name, args=args, standard_out=standard_out)\n  File \"/home/modwork_eins_dmes/src/autoflake/autoflake.py\", line 430, in fix_file\n    remove_unused_variables=args.remove_unused_variables)\n  File \"/home/modwork_eins_dmes/src/autoflake/autoflake.py\", line 400, in fix_code\n    remove_unused_variables=remove_unused_variables))))\n  File \"/home/modwork_eins_dmes/src/autoflake/autoflake.py\", line 232, in filter_code\n    messages = check(source)\n  File \"/home/modwork_eins_dmes/src/autoflake/autoflake.py\", line 116, in check\n    source = source.encode()\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 37-40: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/4", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/4/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/4/events", "html_url": "https://github.com/myint/autoflake/issues/4", "id": 18462824, "node_id": "MDU6SXNzdWUxODQ2MjgyNA==", "number": 4, "title": "UnicodeDecodeError", "user": {"login": "ponty", "id": 584643, "node_id": "MDQ6VXNlcjU4NDY0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/584643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ponty", "html_url": "https://github.com/ponty", "followers_url": "https://api.github.com/users/ponty/followers", "following_url": "https://api.github.com/users/ponty/following{/other_user}", "gists_url": "https://api.github.com/users/ponty/gists{/gist_id}", "starred_url": "https://api.github.com/users/ponty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ponty/subscriptions", "organizations_url": "https://api.github.com/users/ponty/orgs", "repos_url": "https://api.github.com/users/ponty/repos", "events_url": "https://api.github.com/users/ponty/events{/privacy}", "received_events_url": "https://api.github.com/users/ponty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-08-23T10:08:13Z", "updated_at": "2013-08-23T14:30:30Z", "closed_at": "2013-08-23T14:30:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get `UnicodeDecodeError` if there is a file with unicode name.\nThis is not a problem for autopep8.\n\n```\n$ ls\n\u00e9.txt  x.py\n$ autopep8 . -r -i\n$ autoflake . -r -i\nTraceback (most recent call last):\n  File \"/usr/local/bin/autoflake\", line 45, in <module>\n    standard_error=sys.stderr))\n  File \"/usr/local/lib/python2.7/dist-packages/autoflake.py\", line 495, in main\n    if f.endswith('.py') and\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 0: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/3", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/3/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/3/events", "html_url": "https://github.com/myint/autoflake/issues/3", "id": 16424746, "node_id": "MDU6SXNzdWUxNjQyNDc0Ng==", "number": 3, "title": "Add support for cleaning out unused exceptions", "user": {"login": "twolfson", "id": 902488, "node_id": "MDQ6VXNlcjkwMjQ4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/902488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twolfson", "html_url": "https://github.com/twolfson", "followers_url": "https://api.github.com/users/twolfson/followers", "following_url": "https://api.github.com/users/twolfson/following{/other_user}", "gists_url": "https://api.github.com/users/twolfson/gists{/gist_id}", "starred_url": "https://api.github.com/users/twolfson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twolfson/subscriptions", "organizations_url": "https://api.github.com/users/twolfson/orgs", "repos_url": "https://api.github.com/users/twolfson/repos", "events_url": "https://api.github.com/users/twolfson/events{/privacy}", "received_events_url": "https://api.github.com/users/twolfson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189018, "node_id": "MDU6TGFiZWwyMzE4OTAxOA==", "url": "https://api.github.com/repos/myint/autoflake/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-06T00:58:23Z", "updated_at": "2013-07-06T12:32:42Z", "closed_at": "2013-07-06T12:32:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into a lack of cleaning for the following which pyflakes is catching:\n\n``` python\ntry:\n  res = urllib2.urlopen(url, timeout=10)\nexcept urllib2.URLError as e:\n  return False\n```\n\nError message looks like:\n\n``` sh\nfile.py:109: local variable 'e' is assigned to but never used\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/2", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/2/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/2/events", "html_url": "https://github.com/myint/autoflake/issues/2", "id": 16424715, "node_id": "MDU6SXNzdWUxNjQyNDcxNQ==", "number": 2, "title": "Add pyflakes as part of tests", "user": {"login": "twolfson", "id": 902488, "node_id": "MDQ6VXNlcjkwMjQ4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/902488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twolfson", "html_url": "https://github.com/twolfson", "followers_url": "https://api.github.com/users/twolfson/followers", "following_url": "https://api.github.com/users/twolfson/following{/other_user}", "gists_url": "https://api.github.com/users/twolfson/gists{/gist_id}", "starred_url": "https://api.github.com/users/twolfson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twolfson/subscriptions", "organizations_url": "https://api.github.com/users/twolfson/orgs", "repos_url": "https://api.github.com/users/twolfson/repos", "events_url": "https://api.github.com/users/twolfson/events{/privacy}", "received_events_url": "https://api.github.com/users/twolfson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189018, "node_id": "MDU6TGFiZWwyMzE4OTAxOA==", "url": "https://api.github.com/repos/myint/autoflake/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-06T00:55:42Z", "updated_at": "2013-07-06T20:50:45Z", "closed_at": "2013-07-06T12:01:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "To ensure that you are 1:1 with pyflakes, each input file should be tested with pyflakes to assert it is failing and each output file should be tested with pyflakes to assert it is passing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/myint/autoflake/issues/1", "repository_url": "https://api.github.com/repos/myint/autoflake", "labels_url": "https://api.github.com/repos/myint/autoflake/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/myint/autoflake/issues/1/comments", "events_url": "https://api.github.com/repos/myint/autoflake/issues/1/events", "html_url": "https://github.com/myint/autoflake/issues/1", "id": 16424703, "node_id": "MDU6SXNzdWUxNjQyNDcwMw==", "number": 1, "title": "Move tests to flat files", "user": {"login": "twolfson", "id": 902488, "node_id": "MDQ6VXNlcjkwMjQ4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/902488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twolfson", "html_url": "https://github.com/twolfson", "followers_url": "https://api.github.com/users/twolfson/followers", "following_url": "https://api.github.com/users/twolfson/following{/other_user}", "gists_url": "https://api.github.com/users/twolfson/gists{/gist_id}", "starred_url": "https://api.github.com/users/twolfson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twolfson/subscriptions", "organizations_url": "https://api.github.com/users/twolfson/orgs", "repos_url": "https://api.github.com/users/twolfson/repos", "events_url": "https://api.github.com/users/twolfson/events{/privacy}", "received_events_url": "https://api.github.com/users/twolfson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 23189018, "node_id": "MDU6TGFiZWwyMzE4OTAxOA==", "url": "https://api.github.com/repos/myint/autoflake/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-07-06T00:54:26Z", "updated_at": "2013-07-20T19:31:09Z", "closed_at": "2013-07-06T12:47:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is more of a suggestion than a bug. For easier review of tests, it would be a good move to have all tests be moved to `input`/`output` format.\n\nFor example, an example set would be:\n\n```\n# input.py\nimport foo\nimport zap\nx = 1\n```\n\n```\n# output.py\nx = 1\n```\n\nThis idea is taken from [mustache](https://github.com/janl/mustache.js/tree/master/test/_files) but is widely applicable.\n", "performed_via_github_app": null, "score": 1.0}]}