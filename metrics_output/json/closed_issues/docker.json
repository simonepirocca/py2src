{"total_count": 1012, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/docker/docker-py/issues/2630", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2630/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2630/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2630/events", "html_url": "https://github.com/docker/docker-py/issues/2630", "id": 663333557, "node_id": "MDU6SXNzdWU2NjMzMzM1NTc=", "number": 2630, "title": "docker stats != container.stats as far as memoy usage is concerned?", "user": {"login": "hholst80", "id": 6200749, "node_id": "MDQ6VXNlcjYyMDA3NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6200749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hholst80", "html_url": "https://github.com/hholst80", "followers_url": "https://api.github.com/users/hholst80/followers", "following_url": "https://api.github.com/users/hholst80/following{/other_user}", "gists_url": "https://api.github.com/users/hholst80/gists{/gist_id}", "starred_url": "https://api.github.com/users/hholst80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hholst80/subscriptions", "organizations_url": "https://api.github.com/users/hholst80/orgs", "repos_url": "https://api.github.com/users/hholst80/repos", "events_url": "https://api.github.com/users/hholst80/events{/privacy}", "received_events_url": "https://api.github.com/users/hholst80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T21:55:13Z", "updated_at": "2020-07-22T21:13:25Z", "closed_at": "2020-07-22T21:13:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n\u22ca> /workspace docker stats --no-stream api-server-docs                                                                                21:50:43\r\nCONTAINER ID        NAME                CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS\r\n0ff7fbfae70c        api-server-docs     0.00%               1.824MiB / 31.23GiB   0.01%               22.2kB / 0B         2.63MB / 0B         2\r\n\u22ca> /workspace \r\n```\r\n\r\n```\r\n\u22ca> /workspace python3 stats.py                                                                                                        21:51:57\r\n               api-server-docs      2.598MiB      31.23GiB\r\n               api-server-docs      2.598MiB      31.23GiB\r\n               api-server-docs      2.598MiB      31.23GiB\r\n               api-server-docs      2.598MiB      31.23GiB\r\n               api-server-docs      2.598MiB      31.23GiB\r\n^CTraceback (most recent call last):\r\n  File \"stats.py\", line 19, in <module>\r\n    time.sleep(1)\r\nKeyboardInterrupt\r\n\u22ca> /workspace  \r\n```\r\n\r\n```\r\n\u22ca> /workspace cat stats.py                                                                                                            21:52:03\r\nimport time\r\nimport docker\r\nclient = docker.from_env()\r\n#running_containers = client.containers.list()\r\nrunning_containers = (client.containers.get(\"api-server-docs\"), )\r\nmonitors = { container: container.stats(decode=True, stream=True) for container in running_containers }\r\nwhile True:\r\n  for container, stats in monitors.items():\r\n    s = next(stats)\r\n    memory_stats = s[\"memory_stats\"]\r\n    print(\"%30s %10.3fMiB %10.2fGiB\" % (container.name, memory_stats[\"usage\"]/2**20, memory_stats[\"limit\"]/2**30))\r\n  time.sleep(1)\r\n\u22ca> /workspace        \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2623", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2623/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2623/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2623/events", "html_url": "https://github.com/docker/docker-py/issues/2623", "id": 657822177, "node_id": "MDU6SXNzdWU2NTc4MjIxNzc=", "number": 2623, "title": "Interactive mode supporting?", "user": {"login": "CounterZone", "id": 16809077, "node_id": "MDQ6VXNlcjE2ODA5MDc3", "avatar_url": "https://avatars3.githubusercontent.com/u/16809077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CounterZone", "html_url": "https://github.com/CounterZone", "followers_url": "https://api.github.com/users/CounterZone/followers", "following_url": "https://api.github.com/users/CounterZone/following{/other_user}", "gists_url": "https://api.github.com/users/CounterZone/gists{/gist_id}", "starred_url": "https://api.github.com/users/CounterZone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CounterZone/subscriptions", "organizations_url": "https://api.github.com/users/CounterZone/orgs", "repos_url": "https://api.github.com/users/CounterZone/repos", "events_url": "https://api.github.com/users/CounterZone/events{/privacy}", "received_events_url": "https://api.github.com/users/CounterZone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-16T03:47:08Z", "updated_at": "2020-07-16T03:50:47Z", "closed_at": "2020-07-16T03:50:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Docker SDK version: 4.2.2\r\n\r\nDocker allows the container to be run in interactive mode(docker -i), but the SDK doesn't support this feature.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2619", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2619/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2619/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2619/events", "html_url": "https://github.com/docker/docker-py/issues/2619", "id": 654141944, "node_id": "MDU6SXNzdWU2NTQxNDE5NDQ=", "number": 2619, "title": "Add support for runtime arguments to a container", "user": {"login": "reediculous456", "id": 24629474, "node_id": "MDQ6VXNlcjI0NjI5NDc0", "avatar_url": "https://avatars0.githubusercontent.com/u/24629474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reediculous456", "html_url": "https://github.com/reediculous456", "followers_url": "https://api.github.com/users/reediculous456/followers", "following_url": "https://api.github.com/users/reediculous456/following{/other_user}", "gists_url": "https://api.github.com/users/reediculous456/gists{/gist_id}", "starred_url": "https://api.github.com/users/reediculous456/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reediculous456/subscriptions", "organizations_url": "https://api.github.com/users/reediculous456/orgs", "repos_url": "https://api.github.com/users/reediculous456/repos", "events_url": "https://api.github.com/users/reediculous456/events{/privacy}", "received_events_url": "https://api.github.com/users/reediculous456/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-09T15:14:49Z", "updated_at": "2020-07-14T16:16:56Z", "closed_at": "2020-07-14T16:16:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently docker-py does not support passing additional arguments to a container's RUN command at runtime. This is necessary for some containers in order to pass in configuration properties.\r\n\r\nFor example, the official postgres image allows you to pass `-c (config property)` after the container name for each config property you'd like to set ([docs here](https://github.com/docker-library/docs/tree/master/postgres#database-configuration))\r\n\r\nMy main use case here is for starting a postgres container with ssl enabled. Here is the command for that:\r\n```bash\r\ndocker run --name postgres -e POSTGRES_PASSWORD=(Some Password) -e PGDATA=/var/lib/postgresql/data/pgdata -v pg:/var/lib/postgresql/data -v (Path to SSL Cert):/var/lib/postgresql/server.crt:ro -v (Path to SSL Key):/var/lib/postgresql/server.key:ro -p 5432:5432 --restart=always -d postgres -c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key\r\n```\r\n(note that the private key must be owned by `root:999` and have permissions `640` and the certificate must be owned by `root:999` and have permissions `644`)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2618", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2618/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2618/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2618/events", "html_url": "https://github.com/docker/docker-py/issues/2618", "id": 653885827, "node_id": "MDU6SXNzdWU2NTM4ODU4Mjc=", "number": 2618, "title": "module 'selectors' has no attribute 'SelectSelector' import error", "user": {"login": "MikeVlad6", "id": 29649428, "node_id": "MDQ6VXNlcjI5NjQ5NDI4", "avatar_url": "https://avatars3.githubusercontent.com/u/29649428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MikeVlad6", "html_url": "https://github.com/MikeVlad6", "followers_url": "https://api.github.com/users/MikeVlad6/followers", "following_url": "https://api.github.com/users/MikeVlad6/following{/other_user}", "gists_url": "https://api.github.com/users/MikeVlad6/gists{/gist_id}", "starred_url": "https://api.github.com/users/MikeVlad6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MikeVlad6/subscriptions", "organizations_url": "https://api.github.com/users/MikeVlad6/orgs", "repos_url": "https://api.github.com/users/MikeVlad6/repos", "events_url": "https://api.github.com/users/MikeVlad6/events{/privacy}", "received_events_url": "https://api.github.com/users/MikeVlad6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-09T08:51:06Z", "updated_at": "2020-07-09T09:02:10Z", "closed_at": "2020-07-09T09:02:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i'm getting an import error when trying to `import docker`.\r\nI'm running on ubuntu 20.02, tried both python 3.8.2 and 3.6.11. docker version is `4.2.2`\r\nSteps:\r\nCreate a virtualenvironment `virtualenv venv`, `pip install docker`. \r\nError log:\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/mike/Documents/git/scrapyPuppet/controller/test.py\", line 1, in <module>\r\n    import docker\r\n  File \"/home/mike/Documents/git/scrapyPuppet/controller/venv/lib/python3.8/site-packages/docker/__init__.py\", line 2, in <module>\r\n    from .api import APIClient\r\n  File \"/home/mike/Documents/git/scrapyPuppet/controller/venv/lib/python3.8/site-packages/docker/api/__init__.py\", line 2, in <module>\r\n    from .client import APIClient\r\n  File \"/home/mike/Documents/git/scrapyPuppet/controller/venv/lib/python3.8/site-packages/docker/api/client.py\", line 10, in <module>\r\n    from .build import BuildApiMixin\r\n  File \"/home/mike/Documents/git/scrapyPuppet/controller/venv/lib/python3.8/site-packages/docker/api/build.py\", line 6, in <module>\r\n    from .. import auth\r\n  File \"/home/mike/Documents/git/scrapyPuppet/controller/venv/lib/python3.8/site-packages/docker/auth.py\", line 7, in <module>\r\n    from . import credentials\r\n  File \"/home/mike/Documents/git/scrapyPuppet/controller/venv/lib/python3.8/site-packages/docker/credentials/__init__.py\", line 2, in <module>\r\n    from .store import Store\r\n  File \"/home/mike/Documents/git/scrapyPuppet/controller/venv/lib/python3.8/site-packages/docker/credentials/store.py\", line 3, in <module>\r\n    import subprocess\r\n  File \"/usr/lib/python3.8/subprocess.py\", line 218, in <module>\r\n    _PopenSelector = selectors.SelectSelector\r\nAttributeError: module 'selectors' has no attribute 'SelectSelector'\r\n```\r\nHere is a pip.freeze for python 3.8.2:\r\n\r\n```\r\nappdirs==1.4.3\r\nCacheControl==0.12.6\r\ncertifi==2019.11.28\r\nchardet==3.0.4\r\ncolorama==0.4.3\r\ncontextlib2==0.6.0\r\ndistlib==0.3.0\r\ndistro==1.4.0\r\ndocker==4.2.2\r\nhtml5lib==1.0.1\r\nidna==2.8\r\nipaddr==2.2.0\r\nlockfile==0.12.2\r\nmsgpack==0.6.2\r\npackaging==20.3\r\npep517==0.8.2\r\nprogress==1.5\r\npsycopg2-binary==2.8.5\r\npyparsing==2.4.6\r\npytoml==0.1.21\r\nrequests==2.22.0\r\nretrying==1.3.3\r\nsix==1.14.0\r\nurllib3==1.25.8\r\nwebencodings==0.5.1\r\nwebsocket-client==0.57.0\r\n```\r\n\r\n\r\nAny help would be appreciated.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2607", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2607/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2607/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2607/events", "html_url": "https://github.com/docker/docker-py/issues/2607", "id": 648175572, "node_id": "MDU6SXNzdWU2NDgxNzU1NzI=", "number": 2607, "title": "how can I get short_id to use the sdk of python version 1.4.x", "user": {"login": "GitSoftwareNow", "id": 13401916, "node_id": "MDQ6VXNlcjEzNDAxOTE2", "avatar_url": "https://avatars0.githubusercontent.com/u/13401916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GitSoftwareNow", "html_url": "https://github.com/GitSoftwareNow", "followers_url": "https://api.github.com/users/GitSoftwareNow/followers", "following_url": "https://api.github.com/users/GitSoftwareNow/following{/other_user}", "gists_url": "https://api.github.com/users/GitSoftwareNow/gists{/gist_id}", "starred_url": "https://api.github.com/users/GitSoftwareNow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GitSoftwareNow/subscriptions", "organizations_url": "https://api.github.com/users/GitSoftwareNow/orgs", "repos_url": "https://api.github.com/users/GitSoftwareNow/repos", "events_url": "https://api.github.com/users/GitSoftwareNow/events{/privacy}", "received_events_url": "https://api.github.com/users/GitSoftwareNow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-30T13:28:56Z", "updated_at": "2020-07-02T07:02:50Z", "closed_at": "2020-07-02T07:02:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "import json\r\n\r\n    #client=docker.DockerClient(base_url='tcp://127.0.0.1')\r\nclient= docker.from_env()\r\ndocker_version = json.dumps(client.version(),indent=1)\r\n#print(docker_version)\r\nget_container_id_list = client.containers.list()\r\n#get runner of image list\r\n#print(get_container_id_list) \r\nif get_container_id_list is None:\r\n    print(\"No images run here!\")\r\ncontainer_id_list=[]\r\n\r\nfor ids in get_container_id_list:\r\n    container_id_list=container_id_list+ids.image.tags\r\n\r\nfor container in get_container_id_list:\r\n    print(container.id)\r\n    #print(container.short_id())#here will be error\r\n    print(container.name)\r\n    print(container.status)\r\n    #print(container.image)\r\n    #print(container.attrs)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2601", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2601/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2601/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2601/events", "html_url": "https://github.com/docker/docker-py/issues/2601", "id": 645642720, "node_id": "MDU6SXNzdWU2NDU2NDI3MjA=", "number": 2601, "title": "Fix context load for non-docker endpoints", "user": {"login": "aiordache", "id": 809903, "node_id": "MDQ6VXNlcjgwOTkwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/809903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aiordache", "html_url": "https://github.com/aiordache", "followers_url": "https://api.github.com/users/aiordache/followers", "following_url": "https://api.github.com/users/aiordache/following{/other_user}", "gists_url": "https://api.github.com/users/aiordache/gists{/gist_id}", "starred_url": "https://api.github.com/users/aiordache/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aiordache/subscriptions", "organizations_url": "https://api.github.com/users/aiordache/orgs", "repos_url": "https://api.github.com/users/aiordache/repos", "events_url": "https://api.github.com/users/aiordache/events{/privacy}", "received_events_url": "https://api.github.com/users/aiordache/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "aiordache", "id": 809903, "node_id": "MDQ6VXNlcjgwOTkwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/809903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aiordache", "html_url": "https://github.com/aiordache", "followers_url": "https://api.github.com/users/aiordache/followers", "following_url": "https://api.github.com/users/aiordache/following{/other_user}", "gists_url": "https://api.github.com/users/aiordache/gists{/gist_id}", "starred_url": "https://api.github.com/users/aiordache/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aiordache/subscriptions", "organizations_url": "https://api.github.com/users/aiordache/orgs", "repos_url": "https://api.github.com/users/aiordache/repos", "events_url": "https://api.github.com/users/aiordache/events{/privacy}", "received_events_url": "https://api.github.com/users/aiordache/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aiordache", "id": 809903, "node_id": "MDQ6VXNlcjgwOTkwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/809903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aiordache", "html_url": "https://github.com/aiordache", "followers_url": "https://api.github.com/users/aiordache/followers", "following_url": "https://api.github.com/users/aiordache/following{/other_user}", "gists_url": "https://api.github.com/users/aiordache/gists{/gist_id}", "starred_url": "https://api.github.com/users/aiordache/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aiordache/subscriptions", "organizations_url": "https://api.github.com/users/aiordache/orgs", "repos_url": "https://api.github.com/users/aiordache/repos", "events_url": "https://api.github.com/users/aiordache/events{/privacy}", "received_events_url": "https://api.github.com/users/aiordache/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-06-25T15:10:50Z", "updated_at": "2020-06-30T15:16:11Z", "closed_at": "2020-06-30T15:16:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Docker-py gives an error when trying to load an aci context as it requires fields as Host and SkipTLSVerify to be set.\r\n\r\nUpdate context load to skip parsing non-docker context endpoints.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2600", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2600/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2600/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2600/events", "html_url": "https://github.com/docker/docker-py/issues/2600", "id": 642159453, "node_id": "MDU6SXNzdWU2NDIxNTk0NTM=", "number": 2600, "title": "Feature request: Add \"--add-host\" paramater support", "user": {"login": "NonCreature0714", "id": 13374460, "node_id": "MDQ6VXNlcjEzMzc0NDYw", "avatar_url": "https://avatars0.githubusercontent.com/u/13374460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NonCreature0714", "html_url": "https://github.com/NonCreature0714", "followers_url": "https://api.github.com/users/NonCreature0714/followers", "following_url": "https://api.github.com/users/NonCreature0714/following{/other_user}", "gists_url": "https://api.github.com/users/NonCreature0714/gists{/gist_id}", "starred_url": "https://api.github.com/users/NonCreature0714/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NonCreature0714/subscriptions", "organizations_url": "https://api.github.com/users/NonCreature0714/orgs", "repos_url": "https://api.github.com/users/NonCreature0714/repos", "events_url": "https://api.github.com/users/NonCreature0714/events{/privacy}", "received_events_url": "https://api.github.com/users/NonCreature0714/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-19T18:44:52Z", "updated_at": "2020-06-19T19:17:09Z", "closed_at": "2020-06-19T19:17:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Feature request for internal DNS resolution related to https://github.com/moby/moby/pull/40007 which uses a magic string to append a container's ID with appropriate IP to `/etc/hosts`.\r\n\r\nThis includes the `--host` flag for `docker service create`.\r\n\r\nThe issue was prompted because some applications attempt to use DNS to verify a local hostname, and, when not finding the container's hostname in /etc/hosts, fails.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2597", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2597/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2597/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2597/events", "html_url": "https://github.com/docker/docker-py/issues/2597", "id": 641127285, "node_id": "MDU6SXNzdWU2NDExMjcyODU=", "number": 2597, "title": "Pass --gpus 1 as argument to client.containers.run", "user": {"login": "philipperemy", "id": 4516927, "node_id": "MDQ6VXNlcjQ1MTY5Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4516927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philipperemy", "html_url": "https://github.com/philipperemy", "followers_url": "https://api.github.com/users/philipperemy/followers", "following_url": "https://api.github.com/users/philipperemy/following{/other_user}", "gists_url": "https://api.github.com/users/philipperemy/gists{/gist_id}", "starred_url": "https://api.github.com/users/philipperemy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philipperemy/subscriptions", "organizations_url": "https://api.github.com/users/philipperemy/orgs", "repos_url": "https://api.github.com/users/philipperemy/repos", "events_url": "https://api.github.com/users/philipperemy/events{/privacy}", "received_events_url": "https://api.github.com/users/philipperemy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-18T11:22:18Z", "updated_at": "2020-08-09T08:59:48Z", "closed_at": "2020-08-09T08:59:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to do something like this:\r\n\r\n```\r\ndocker run --gpus 2 -it --rm -v $(pwd):/volume/ /bin/bash -c <cmd>\r\n```\r\n\r\nCan somebody tell me how to pass custom variables such as `--gpus` to docker?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2579", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2579/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2579/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2579/events", "html_url": "https://github.com/docker/docker-py/issues/2579", "id": 628903079, "node_id": "MDU6SXNzdWU2Mjg5MDMwNzk=", "number": 2579, "title": "Networks list failing to return filtered results", "user": {"login": "jadedeane", "id": 11843794, "node_id": "MDQ6VXNlcjExODQzNzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/11843794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jadedeane", "html_url": "https://github.com/jadedeane", "followers_url": "https://api.github.com/users/jadedeane/followers", "following_url": "https://api.github.com/users/jadedeane/following{/other_user}", "gists_url": "https://api.github.com/users/jadedeane/gists{/gist_id}", "starred_url": "https://api.github.com/users/jadedeane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jadedeane/subscriptions", "organizations_url": "https://api.github.com/users/jadedeane/orgs", "repos_url": "https://api.github.com/users/jadedeane/repos", "events_url": "https://api.github.com/users/jadedeane/events{/privacy}", "received_events_url": "https://api.github.com/users/jadedeane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-02T05:05:05Z", "updated_at": "2020-06-02T05:32:32Z", "closed_at": "2020-06-02T05:32:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks in advance for the help.\r\n\r\nWhen filtering using Docker CLI, I'm able to find containers:\r\n\r\n```\r\n\u2570\uf460 docker network ls -f 'label=topology_uuid=52cf7b3a-b57b-4204-8a49-58759e459a24'\r\nNETWORK ID          NAME                         DRIVER              SCOPE\r\nd47a3c516f1a        example-sp1-to-example-lf1   macvlan             local\r\n54f58d2ed4d9        example-sp1-to-example-lf2   macvlan             local\r\nb12d94a08f13        example-sp1-to-example-lf3   macvlan             local\r\n1a677d13a388        example-sp1-to-example-lf4   macvlan             local\r\n29b89199abc1        example-sp2-to-example-lf1   macvlan             local\r\nf496dfabacaf        example-sp2-to-example-lf2   macvlan             local\r\n66a705b99a4a        example-sp2-to-example-lf3   macvlan             local\r\n6a270b936643        example-sp2-to-example-lf4   macvlan             local\r\n2e5fa9b357a2        example-sp3-to-example-lf1   macvlan             local\r\n7a82e3ae3f73        example-sp3-to-example-lf2   macvlan             local\r\nca3f9de082ca        example-sp3-to-example-lf3   macvlan             local\r\nbb97d8bd33a0        example-sp3-to-example-lf4   macvlan             local\r\n04463c1f61e4        example-sp4-to-example-lf1   macvlan             local\r\ne577a692655b        example-sp4-to-example-lf2   macvlan             local\r\n5d36b235ee9d        example-sp4-to-example-lf3   macvlan             local\r\n1c93215cc04e        example-sp4-to-example-lf4   macvlan             local\r\n```\r\n\r\nUsing the same filter via `networks.list(filter)`, I get the following:\r\n\r\n```\r\n>>> client.networks.list('label=topology_uuid=52cf7b3a-b57b-4204-8a49-58759e459a24')\r\n[]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2559", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2559/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2559/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2559/events", "html_url": "https://github.com/docker/docker-py/issues/2559", "id": 615406547, "node_id": "MDU6SXNzdWU2MTU0MDY1NDc=", "number": 2559, "title": "$PYTHON_PATH", "user": {"login": "bettaz", "id": 45596091, "node_id": "MDQ6VXNlcjQ1NTk2MDkx", "avatar_url": "https://avatars1.githubusercontent.com/u/45596091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bettaz", "html_url": "https://github.com/bettaz", "followers_url": "https://api.github.com/users/bettaz/followers", "following_url": "https://api.github.com/users/bettaz/following{/other_user}", "gists_url": "https://api.github.com/users/bettaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bettaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bettaz/subscriptions", "organizations_url": "https://api.github.com/users/bettaz/orgs", "repos_url": "https://api.github.com/users/bettaz/repos", "events_url": "https://api.github.com/users/bettaz/events{/privacy}", "received_events_url": "https://api.github.com/users/bettaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-10T14:45:45Z", "updated_at": "2020-05-10T14:45:52Z", "closed_at": "2020-05-10T14:45:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2558", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2558/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2558/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2558/events", "html_url": "https://github.com/docker/docker-py/issues/2558", "id": 614865669, "node_id": "MDU6SXNzdWU2MTQ4NjU2Njk=", "number": 2558, "title": "Bad Request API error when creating a service with secrets flag", "user": {"login": "Mokatsu", "id": 15014768, "node_id": "MDQ6VXNlcjE1MDE0NzY4", "avatar_url": "https://avatars2.githubusercontent.com/u/15014768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mokatsu", "html_url": "https://github.com/Mokatsu", "followers_url": "https://api.github.com/users/Mokatsu/followers", "following_url": "https://api.github.com/users/Mokatsu/following{/other_user}", "gists_url": "https://api.github.com/users/Mokatsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mokatsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mokatsu/subscriptions", "organizations_url": "https://api.github.com/users/Mokatsu/orgs", "repos_url": "https://api.github.com/users/Mokatsu/repos", "events_url": "https://api.github.com/users/Mokatsu/events{/privacy}", "received_events_url": "https://api.github.com/users/Mokatsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-08T17:04:01Z", "updated_at": "2020-05-20T22:23:20Z", "closed_at": "2020-05-20T22:23:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Server Version: 19.03.6\r\nOS: Ubuntu 18.04\r\nClient:\r\n Version:           19.03.6\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        369ce74a3c\r\n Built:             Fri Feb 28 23:45:43 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nCode:\r\n```\r\nsecret = docker_service.secrets.get('test')\r\ndocker_service.services.create(image='<image id>', name='<name>', `secrets=[secret.name])\r\n```\r\n\r\nError:\r\n> Traceback (most recent call last):\r\n  File \"/home/error/venv_cir/lib/python3.6/site-packages/docker/api/client.py\", line 261, in _raise_for_status\r\n    response.raise_for_status()\r\n  File \"/home/error/venv_cir/lib/python3.6/site-packages/requests/models.py\", line 941, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.35/services/create\r\n> During handling of the above exception, another exception occurred:\r\n> Traceback (most recent call last):\r\n  File \"/home/error/bin/cir/modules/test.py\", line 11, in <module>\r\n    print(docker_service.services.create(image='57a93ecd5c39', name='text_stats', secrets=[secret.name]))\r\n  File \"/home/error/venv_cir/lib/python3.6/site-packages/docker/models/services.py\", line 225, in create\r\n    service_id = self.client.api.create_service(**create_kwargs)\r\n  File \"/home/error/venv_cir/lib/python3.6/site-packages/docker/utils/decorators.py\", line 34, in wrapper\r\n    return f(self, *args, **kwargs)\r\n  File \"/home/error/venv_cir/lib/python3.6/site-packages/docker/api/service.py\", line 190, in create_service\r\n    self._post_json(url, data=data, headers=headers), True\r\n  File \"/home/error/venv_cir/lib/python3.6/site-packages/docker/api/client.py\", line 267, in _result\r\n    self._raise_for_status(response)\r\n  File \"/home/error/venv_cir/lib/python3.6/site-packages/docker/api/client.py\", line 263, in _raise_for_status\r\n    raise create_api_error_from_http_exception(e)\r\n  File \"/home/error/venv_cir/lib/python3.6/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\r\n    raise cls(e, response=response, explanation=explanation)\r\ndocker.errors.APIError: 400 Client Error: Bad Request (\"json: cannot unmarshal string into Go struct field ContainerSpec.Secrets of type swarm.SecretReference\")\r\n> Process finished with exit code 1\r\n\r\nAm I submitting the secrets wrong? if i remove the secrets flag i get no error at all. The documentation says to submit secret names as a list: \r\n```\r\nsecrets (list of SecretReference) \u2013 List of secrets accessible to containers for this service.\r\n```\r\n\r\nAny help, guidance would be appreciateddocker", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2552", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2552/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2552/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2552/events", "html_url": "https://github.com/docker/docker-py/issues/2552", "id": 607309890, "node_id": "MDU6SXNzdWU2MDczMDk4OTA=", "number": 2552, "title": "May I translate this project into Korean?", "user": {"login": "tina1296", "id": 63998078, "node_id": "MDQ6VXNlcjYzOTk4MDc4", "avatar_url": "https://avatars0.githubusercontent.com/u/63998078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tina1296", "html_url": "https://github.com/tina1296", "followers_url": "https://api.github.com/users/tina1296/followers", "following_url": "https://api.github.com/users/tina1296/following{/other_user}", "gists_url": "https://api.github.com/users/tina1296/gists{/gist_id}", "starred_url": "https://api.github.com/users/tina1296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tina1296/subscriptions", "organizations_url": "https://api.github.com/users/tina1296/orgs", "repos_url": "https://api.github.com/users/tina1296/repos", "events_url": "https://api.github.com/users/tina1296/events{/privacy}", "received_events_url": "https://api.github.com/users/tina1296/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-27T07:33:37Z", "updated_at": "2020-04-29T15:05:44Z", "closed_at": "2020-04-29T10:11:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi :) I am Na Eun Kwon a university student in Kwangwoon University. I want to translate READ ME documentation for your project contribution and other Koreans who want to learn about docker.py.\r\nSo may I translate these infos into Korean?\r\nIf I could, plz tell me how I can share the translated results.\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2550", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2550/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2550/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2550/events", "html_url": "https://github.com/docker/docker-py/issues/2550", "id": 606210758, "node_id": "MDU6SXNzdWU2MDYyMTA3NTg=", "number": 2550, "title": "Support DriverOpts in connect_container_to_network", "user": {"login": "haboustak", "id": 860613, "node_id": "MDQ6VXNlcjg2MDYxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/860613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haboustak", "html_url": "https://github.com/haboustak", "followers_url": "https://api.github.com/users/haboustak/followers", "following_url": "https://api.github.com/users/haboustak/following{/other_user}", "gists_url": "https://api.github.com/users/haboustak/gists{/gist_id}", "starred_url": "https://api.github.com/users/haboustak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haboustak/subscriptions", "organizations_url": "https://api.github.com/users/haboustak/orgs", "repos_url": "https://api.github.com/users/haboustak/repos", "events_url": "https://api.github.com/users/haboustak/events{/privacy}", "received_events_url": "https://api.github.com/users/haboustak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-24T10:27:53Z", "updated_at": "2020-07-02T13:00:59Z", "closed_at": "2020-07-02T08:51:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm currently working on a project that includes a Docker network driver plugin, and the needs of the driver require additional information when connecting a container to the network.\r\n\r\nDocker added support for driver options to the `EndpointConfig` model in [API version 1.32](https://docs.docker.com/engine/api/v1.32/#operation/NetworkConnect) (`Docker 17.09`).\r\n\r\nIt's not very well documented, but the [docker network connect](https://docs.docker.com/engine/reference/commandline/network_connect/) CLI command has supported a `--driver-opt` option to `docker network connect` since at least `18.09`, so I think it's reasonable to add it to the python SDK.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2546", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2546/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2546/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2546/events", "html_url": "https://github.com/docker/docker-py/issues/2546", "id": 596827264, "node_id": "MDU6SXNzdWU1OTY4MjcyNjQ=", "number": 2546, "title": "KeyError when orchestrator unset on context", "user": {"login": "FallenWarrior2k", "id": 20320149, "node_id": "MDQ6VXNlcjIwMzIwMTQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/20320149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FallenWarrior2k", "html_url": "https://github.com/FallenWarrior2k", "followers_url": "https://api.github.com/users/FallenWarrior2k/followers", "following_url": "https://api.github.com/users/FallenWarrior2k/following{/other_user}", "gists_url": "https://api.github.com/users/FallenWarrior2k/gists{/gist_id}", "starred_url": "https://api.github.com/users/FallenWarrior2k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FallenWarrior2k/subscriptions", "organizations_url": "https://api.github.com/users/FallenWarrior2k/orgs", "repos_url": "https://api.github.com/users/FallenWarrior2k/repos", "events_url": "https://api.github.com/users/FallenWarrior2k/events{/privacy}", "received_events_url": "https://api.github.com/users/FallenWarrior2k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-08T20:04:03Z", "updated_at": "2020-08-03T14:08:23Z", "closed_at": "2020-08-03T14:08:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ pip freeze | grep 'docker=='\r\ndocker==4.2.0\r\n$ python --version\r\nPython 3.7.5\r\n$ docker version\r\nClient:\r\n Version:           19.03.8-ce\r\n API version:       1.40\r\n Go version:        go1.14.1\r\n Git commit:        afacb8b7f0\r\n Built:             Thu Apr  2 00:04:36 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b7f0\r\n  Built:            Wed Mar 11 01:24:30 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\nMy local OS is current Arch Linux, the remote host is running Ubuntu 18.04.4.\r\n\r\nWhen the Metadata.StackOrchestrator key is unset on a Docker Context, which is valid with the Docker CLI (none of the commands I tried errored out), then [this line](https://github.com/docker/docker-py/blob/1d1532f0be8fdf69443cfc71f1fb9002e9af4ae4/docker/context/context.py#L87) throws a key error. See stacktrace below (latest Git docker-compose to try out contexts).\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/simon/.local/bin/docker-compose\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/home/simon/.local/pipx/venvs/docker-compose/lib/python3.7/site-packages/compose/cli/main.py\", line 72, in main\r\n    command()\r\n  File \"/home/simon/.local/pipx/venvs/docker-compose/lib/python3.7/site-packages/compose/cli/main.py\", line 125, in perform_command\r\n    project = project_from_options('.', options)\r\n  File \"/home/simon/.local/pipx/venvs/docker-compose/lib/python3.7/site-packages/compose/cli/command.py\", line 76, in project_from_options\r\n    environment_file=environment_file\r\n  File \"/home/simon/.local/pipx/venvs/docker-compose/lib/python3.7/site-packages/compose/cli/command.py\", line 142, in get_project\r\n    verbose=verbose, version=api_version, context=context, environment=environment\r\n  File \"/home/simon/.local/pipx/venvs/docker-compose/lib/python3.7/site-packages/compose/cli/docker_client.py\", line 47, in get_client\r\n    environment=environment, tls_version=get_tls_version(environment)\r\n  File \"/home/simon/.local/pipx/venvs/docker-compose/lib/python3.7/site-packages/compose/cli/docker_client.py\", line 143, in docker_client\r\n    context = ContextAPI.get_current_context()\r\n  File \"/home/simon/.local/pipx/venvs/docker-compose/lib/python3.7/site-packages/docker/context/api.py\", line 132, in get_current_context\r\n    return cls.get_context()\r\n  File \"/home/simon/.local/pipx/venvs/docker-compose/lib/python3.7/site-packages/docker/context/api.py\", line 97, in get_context\r\n    return Context.load_context(name)\r\n  File \"/home/simon/.local/pipx/venvs/docker-compose/lib/python3.7/site-packages/docker/context/context.py\", line 61, in load_context\r\n    name, orchestrator, endpoints = Context._load_meta(name)\r\n  File \"/home/simon/.local/pipx/venvs/docker-compose/lib/python3.7/site-packages/docker/context/context.py\", line 87, in _load_meta\r\n    metadata[\"Name\"], metadata[\"Metadata\"][\"StackOrchestrator\"],\r\nKeyError: 'StackOrchestrator'\r\n```\r\n\r\nIn my case, I was trying to get the logs of a Compose deployment on a remote host using `docker-compose logs`, after `docker context use`ing my newly created context. As I was able to get the logs just fine with the docker CLI (without the interleaving of course), I think this is a bug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2543", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2543/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2543/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2543/events", "html_url": "https://github.com/docker/docker-py/issues/2543", "id": 589892742, "node_id": "MDU6SXNzdWU1ODk4OTI3NDI=", "number": 2543, "title": "[Question] How run docker-py inside docker container", "user": {"login": "solairen", "id": 45487024, "node_id": "MDQ6VXNlcjQ1NDg3MDI0", "avatar_url": "https://avatars1.githubusercontent.com/u/45487024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solairen", "html_url": "https://github.com/solairen", "followers_url": "https://api.github.com/users/solairen/followers", "following_url": "https://api.github.com/users/solairen/following{/other_user}", "gists_url": "https://api.github.com/users/solairen/gists{/gist_id}", "starred_url": "https://api.github.com/users/solairen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solairen/subscriptions", "organizations_url": "https://api.github.com/users/solairen/orgs", "repos_url": "https://api.github.com/users/solairen/repos", "events_url": "https://api.github.com/users/solairen/events{/privacy}", "received_events_url": "https://api.github.com/users/solairen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-29T21:43:48Z", "updated_at": "2020-03-31T07:38:20Z", "closed_at": "2020-03-31T07:38:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\ncan I use docker-py inside docker container? \r\nIf yes, how? \r\n\r\nRight now I've get errors\r\n\r\n```log\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/util/retry.py\", line 400, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/packages/six.py\", line 734, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py\", line 672, in urlopen\r\n    chunked=chunked,\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py\", line 387, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1254, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1300, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1249, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1036, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 974, in send\r\n    self.connect()\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/transport/unixconn.py\", line 33, in connect\r\n    sock.connect(self.unix_socket)\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', FileNotFoundError(2, 'No such file or directory'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 5, in <module>\r\n    client.login(username='name', password='pass')\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/api/daemon.py\", line 66, in login\r\n    response = self._post_json(self._url('/auth'), data=req_data)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/client.py\", line 198, in _post_json\r\n    return self._post(url, data=json.dumps(data2), **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/utils/decorators.py\", line 47, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/client.py\", line 135, in _post\r\n    return self.post(url, **self._set_request_timeout(kwargs))\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/sessions.py\", line 578, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/sessions.py\", line 530, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/sessions.py\", line 643, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/adapters.py\", line 498, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', FileNotFoundError(2, 'No such file or directory'))\r\n```\r\n\r\nPython version *3.8*\r\nModules installed: *pip install docker*\r\nContainer: *docker:stable*", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2537", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2537/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2537/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2537/events", "html_url": "https://github.com/docker/docker-py/issues/2537", "id": 585772490, "node_id": "MDU6SXNzdWU1ODU3NzI0OTA=", "number": 2537, "title": "Python container.exec_run([\"stress\",\"--cpu\",\"4\"])", "user": {"login": "sparth99", "id": 22382262, "node_id": "MDQ6VXNlcjIyMzgyMjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/22382262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparth99", "html_url": "https://github.com/sparth99", "followers_url": "https://api.github.com/users/sparth99/followers", "following_url": "https://api.github.com/users/sparth99/following{/other_user}", "gists_url": "https://api.github.com/users/sparth99/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparth99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparth99/subscriptions", "organizations_url": "https://api.github.com/users/sparth99/orgs", "repos_url": "https://api.github.com/users/sparth99/repos", "events_url": "https://api.github.com/users/sparth99/events{/privacy}", "received_events_url": "https://api.github.com/users/sparth99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-22T17:40:34Z", "updated_at": "2020-03-25T04:00:10Z", "closed_at": "2020-03-25T04:00:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having trouble running container.exec_run([\"stress\",\"--cpu\",\"4\"]) this command which induces a cpu stress test on docker container. It seems as if the function is not identifying the last parameter which is the argument to the option --cpu. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2523", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2523/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2523/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2523/events", "html_url": "https://github.com/docker/docker-py/issues/2523", "id": 577556090, "node_id": "MDU6SXNzdWU1Nzc1NTYwOTA=", "number": 2523, "title": "create_container command keeps container in created state. never comes in running state. (APIClient)", "user": {"login": "Kavyeshs41", "id": 30952167, "node_id": "MDQ6VXNlcjMwOTUyMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/30952167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kavyeshs41", "html_url": "https://github.com/Kavyeshs41", "followers_url": "https://api.github.com/users/Kavyeshs41/followers", "following_url": "https://api.github.com/users/Kavyeshs41/following{/other_user}", "gists_url": "https://api.github.com/users/Kavyeshs41/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kavyeshs41/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kavyeshs41/subscriptions", "organizations_url": "https://api.github.com/users/Kavyeshs41/orgs", "repos_url": "https://api.github.com/users/Kavyeshs41/repos", "events_url": "https://api.github.com/users/Kavyeshs41/events{/privacy}", "received_events_url": "https://api.github.com/users/Kavyeshs41/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-08T19:57:19Z", "updated_at": "2020-03-09T12:01:18Z", "closed_at": "2020-03-09T12:01:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\ndef create_container():\r\n    client = docker.APIClient(base_url='unix://var/run/docker.sock')\r\n    # client.pull(\"nginx:1.16\")\r\n    container_id=client.create_container('nginx:1.16',\r\n                            host_config=client.create_host_config(\r\n                                port_bindings={\r\n                                    80: [\r\n                                      8080  \r\n                                    ]\r\n                                },\r\n                                mem_limit='128m',\r\n                                cpu_shares=1,\r\n                                restart_policy={'Name':'always'}\r\n                            ),\r\n                            detach='true'\r\n                        )\r\n    print(container_id)\r\n    return container_id\r\n```\r\n\r\n```shell\r\n\u279c  flask-mongo git:(master) \u2717 docker ps -a\r\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\r\n9248e44ea8b9        nginx:1.16          \"nginx -g 'daemon of\u2026\"   33 seconds ago      Created                                 wizardly_poincare\r\n6ee6a20fe9fc        nginx:1.16          \"nginx -g 'daemon of\u2026\"   34 seconds ago      Created                                 upbeat_ptolemy\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2505", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2505/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2505/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2505/events", "html_url": "https://github.com/docker/docker-py/issues/2505", "id": 560442040, "node_id": "MDU6SXNzdWU1NjA0NDIwNDA=", "number": 2505, "title": "Release docker-py 4.2.0", "user": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-05T15:20:55Z", "updated_at": "2020-02-10T10:38:11Z", "closed_at": "2020-02-10T10:37:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2504", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2504/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2504/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2504/events", "html_url": "https://github.com/docker/docker-py/issues/2504", "id": 559711387, "node_id": "MDU6SXNzdWU1NTk3MTEzODc=", "number": 2504, "title": "Why exec_run return a socket with type 2049 not SOCK_STREAM", "user": {"login": "unihon", "id": 42078581, "node_id": "MDQ6VXNlcjQyMDc4NTgx", "avatar_url": "https://avatars0.githubusercontent.com/u/42078581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unihon", "html_url": "https://github.com/unihon", "followers_url": "https://api.github.com/users/unihon/followers", "following_url": "https://api.github.com/users/unihon/following{/other_user}", "gists_url": "https://api.github.com/users/unihon/gists{/gist_id}", "starred_url": "https://api.github.com/users/unihon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unihon/subscriptions", "organizations_url": "https://api.github.com/users/unihon/orgs", "repos_url": "https://api.github.com/users/unihon/repos", "events_url": "https://api.github.com/users/unihon/events{/privacy}", "received_events_url": "https://api.github.com/users/unihon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-04T13:13:30Z", "updated_at": "2020-02-05T11:41:19Z", "closed_at": "2020-02-05T11:41:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "> docker-py: v4.0.2, v4.1.0\r\n---\r\n\r\nWhy return the socket with type 2049 not SOCK_STREAM when I connect the docker daemon with TCP-TLS API?\r\n\r\n![image](https://user-images.githubusercontent.com/42078581/73747553-a3600e00-4792-11ea-997b-fe5f08e065d3.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2500", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2500/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2500/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2500/events", "html_url": "https://github.com/docker/docker-py/issues/2500", "id": 557982913, "node_id": "MDU6SXNzdWU1NTc5ODI5MTM=", "number": 2500, "title": "container get imager attribute exception", "user": {"login": "unihon", "id": 42078581, "node_id": "MDQ6VXNlcjQyMDc4NTgx", "avatar_url": "https://avatars0.githubusercontent.com/u/42078581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unihon", "html_url": "https://github.com/unihon", "followers_url": "https://api.github.com/users/unihon/followers", "following_url": "https://api.github.com/users/unihon/following{/other_user}", "gists_url": "https://api.github.com/users/unihon/gists{/gist_id}", "starred_url": "https://api.github.com/users/unihon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unihon/subscriptions", "organizations_url": "https://api.github.com/users/unihon/orgs", "repos_url": "https://api.github.com/users/unihon/repos", "events_url": "https://api.github.com/users/unihon/events{/privacy}", "received_events_url": "https://api.github.com/users/unihon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-31T08:21:37Z", "updated_at": "2020-02-01T02:14:15Z", "closed_at": "2020-02-01T02:14:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2496", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2496/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2496/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2496/events", "html_url": "https://github.com/docker/docker-py/issues/2496", "id": 552781717, "node_id": "MDU6SXNzdWU1NTI3ODE3MTc=", "number": 2496, "title": "containers.run not working as expected with kwargs", "user": {"login": "leokun", "id": 2115928, "node_id": "MDQ6VXNlcjIxMTU5Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2115928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leokun", "html_url": "https://github.com/leokun", "followers_url": "https://api.github.com/users/leokun/followers", "following_url": "https://api.github.com/users/leokun/following{/other_user}", "gists_url": "https://api.github.com/users/leokun/gists{/gist_id}", "starred_url": "https://api.github.com/users/leokun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leokun/subscriptions", "organizations_url": "https://api.github.com/users/leokun/orgs", "repos_url": "https://api.github.com/users/leokun/repos", "events_url": "https://api.github.com/users/leokun/events{/privacy}", "received_events_url": "https://api.github.com/users/leokun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-21T10:22:41Z", "updated_at": "2020-01-21T10:44:19Z", "closed_at": "2020-01-21T10:43:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI was trying to use the method `client.container.run()` by passing a dict as arguments without success\r\n\r\nAs a beginer I don't know if this the good way to do so, but I wanted to give args dynamicly.\r\n\r\nex : \r\n\r\n```python\r\nopts = {\r\n    'detach': True,\r\n    'name': 'runner-python3_task_csv_20200121094759995153',\r\n    'volumes': {\r\n        '/home/leo/www/proj/data/tmp': {'bind': '/opt/tmp', 'mode': 'rw'},\r\n        '/etc/localtime': {'bind': '/etc/locatime', 'mode': 'ro'}\r\n    },\r\n    'environment': {\r\n        'PYTHONUNBUFFERED': True,\r\n        'MONGO_IP': 'mongo',\r\n        'MONGO_PORT': '27017',\r\n    },\r\n    'user': 'root',\r\n    'group_add': ['root'],\r\n    'links': ['mongo']\r\n}\r\nif getenv('ENV') == 'dev':\r\n    opts['links'] = ['mongo']\r\n\r\nclient = docker.from_env()\r\ncontainer = client.containers.run(**opts)\r\n```\r\n\r\nWhich gives that error : \r\n\r\n```\r\nwatcher    | Traceback (most recent call last):\r\nwatcher    |   File \"/app/proj_lib/runners.py\", line 78, in docker_exec\r\nwatcher    |     container = client.containers.run(params['image'], command=params['command'],stdout=True, stderr=False, remove=False, **opts)\r\nwatcher    |   File \"/usr/local/lib/python3.8/site-packages/docker/models/containers.py\", line 784, in run\r\nwatcher    |     container = self.create(image=image, command=command,\r\nwatcher    |   File \"/usr/local/lib/python3.8/site-packages/docker/models/containers.py\", line 842, in create\r\nwatcher    |     create_kwargs = _create_container_args(kwargs)\r\nwatcher    |   File \"/usr/local/lib/python3.8/site-packages/docker/models/containers.py\", line 1058, in _create_container_args\r\nwatcher    |     create_kwargs['host_config'] = HostConfig(**host_config_kwargs)\r\nwatcher    |   File \"/usr/local/lib/python3.8/site-packages/docker/types/containers.py\", line 304, in __init__\r\nwatcher    |     self['Links'] = normalize_links(links)\r\nwatcher    |   File \"/usr/local/lib/python3.8/site-packages/docker/utils/utils.py\", line 445, in normalize_links\r\nwatcher    |     return ['{0}:{1}'.format(k, v) if v else k for k, v in sorted(links)]\r\nwatcher    |   File \"/usr/local/lib/python3.8/site-packages/docker/utils/utils.py\", line 445, in <listcomp>\r\nwatcher    |     return ['{0}:{1}'.format(k, v) if v else k for k, v in sorted(links)]\r\nwatcher    | ValueError: too many values to unpack (expected 2)\r\n```\r\n\r\nIs it something I am not doing wrong or is it a bug ? \r\nI was expecting to gives args this way as this works in python : \r\n\r\n```python\r\n>>> def myfunc(a, b=None, c=None):\r\n...     print(str(a))\r\n...     print(str(b))\r\n...     print(str(c))\r\n... \r\n>>> myfunc(**{\"a\": 123, \"b\": \"aze\", \"c\": True})\r\n123\r\naze\r\nTrue\r\n>>> \r\n```\r\n\r\nThanks a lot for your support.\r\nRegards, Leo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2493", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2493/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2493/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2493/events", "html_url": "https://github.com/docker/docker-py/issues/2493", "id": 552132658, "node_id": "MDU6SXNzdWU1NTIxMzI2NTg=", "number": 2493, "title": "400 Client Error", "user": {"login": "myugan", "id": 20453528, "node_id": "MDQ6VXNlcjIwNDUzNTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/20453528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myugan", "html_url": "https://github.com/myugan", "followers_url": "https://api.github.com/users/myugan/followers", "following_url": "https://api.github.com/users/myugan/following{/other_user}", "gists_url": "https://api.github.com/users/myugan/gists{/gist_id}", "starred_url": "https://api.github.com/users/myugan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myugan/subscriptions", "organizations_url": "https://api.github.com/users/myugan/orgs", "repos_url": "https://api.github.com/users/myugan/repos", "events_url": "https://api.github.com/users/myugan/events{/privacy}", "received_events_url": "https://api.github.com/users/myugan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-20T08:04:52Z", "updated_at": "2020-01-20T13:58:08Z", "closed_at": "2020-01-20T13:58:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i trying for docker connection using https it will show this error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/docker/api/client.py\", line 261, in _raise_for_status\r\n    response.raise_for_status()\r\n  File \"/usr/lib/python3.8/site-packages/requests/models.py\", line 940, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://x.x.x.x:2376/v1.35/version\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"sciprt.py\", line 93, in <module>\r\n    api_ver = client.version()[\"ApiVersion\"]\r\n  File \"/usr/lib/python3.8/site-packages/docker/api/daemon.py\", line 181, in version\r\n    return self._result(self._get(url), json=True)\r\n  File \"/usr/lib/python3.8/site-packages/docker/api/client.py\", line 267, in _result\r\n    self._raise_for_status(response)\r\n  File \"/usr/lib/python3.8/site-packages/docker/api/client.py\", line 263, in _raise_for_status\r\n    raise create_api_error_from_http_exception(e)\r\n  File \"/usr/lib/python3.8/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\r\n    raise cls(e, response=response, explanation=explanation)\r\ndocker.errors.APIError: 400 Client Error: Bad Request (\"b'Client sent an HTTP request to an HTTPS server.'\")\r\n```\r\n\r\nBut, i got the response when hit the endpoint manually like `https://x.x.x.x:2376/containers/json`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2488", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2488/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2488/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2488/events", "html_url": "https://github.com/docker/docker-py/issues/2488", "id": 546210326, "node_id": "MDU6SXNzdWU1NDYyMTAzMjY=", "number": 2488, "title": "How get the ws object from exec_run() like attach_socket()", "user": {"login": "unihon", "id": 42078581, "node_id": "MDQ6VXNlcjQyMDc4NTgx", "avatar_url": "https://avatars0.githubusercontent.com/u/42078581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unihon", "html_url": "https://github.com/unihon", "followers_url": "https://api.github.com/users/unihon/followers", "following_url": "https://api.github.com/users/unihon/following{/other_user}", "gists_url": "https://api.github.com/users/unihon/gists{/gist_id}", "starred_url": "https://api.github.com/users/unihon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unihon/subscriptions", "organizations_url": "https://api.github.com/users/unihon/orgs", "repos_url": "https://api.github.com/users/unihon/repos", "events_url": "https://api.github.com/users/unihon/events{/privacy}", "received_events_url": "https://api.github.com/users/unihon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-07T10:40:20Z", "updated_at": "2020-01-08T02:03:42Z", "closed_at": "2020-01-08T02:03:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want get a websocket object from exec_run(), but I just get a `socket.SocketIO` and it's not writeable.\r\n\r\n![image](https://user-images.githubusercontent.com/42078581/71889358-ef606880-317c-11ea-8d60-9f50f92c407c.png)\r\n\r\nHow to get a ws object from exec_run() like attach_socket().", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2483", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2483/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2483/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2483/events", "html_url": "https://github.com/docker/docker-py/issues/2483", "id": 541603267, "node_id": "MDU6SXNzdWU1NDE2MDMyNjc=", "number": 2483, "title": "There is something  wrong on https://docker-py.readthedocs.io/en/1.2.3/volumes/  ", "user": {"login": "Hearmen", "id": 9945361, "node_id": "MDQ6VXNlcjk5NDUzNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9945361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hearmen", "html_url": "https://github.com/Hearmen", "followers_url": "https://api.github.com/users/Hearmen/followers", "following_url": "https://api.github.com/users/Hearmen/following{/other_user}", "gists_url": "https://api.github.com/users/Hearmen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hearmen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hearmen/subscriptions", "organizations_url": "https://api.github.com/users/Hearmen/orgs", "repos_url": "https://api.github.com/users/Hearmen/repos", "events_url": "https://api.github.com/users/Hearmen/events{/privacy}", "received_events_url": "https://api.github.com/users/Hearmen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-23T06:42:56Z", "updated_at": "2019-12-23T06:45:43Z", "closed_at": "2019-12-23T06:45:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2474", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2474/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2474/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2474/events", "html_url": "https://github.com/docker/docker-py/issues/2474", "id": 532153158, "node_id": "MDU6SXNzdWU1MzIxNTMxNTg=", "number": 2474, "title": "docker search", "user": {"login": "gregoan", "id": 7745530, "node_id": "MDQ6VXNlcjc3NDU1MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7745530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregoan", "html_url": "https://github.com/gregoan", "followers_url": "https://api.github.com/users/gregoan/followers", "following_url": "https://api.github.com/users/gregoan/following{/other_user}", "gists_url": "https://api.github.com/users/gregoan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregoan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregoan/subscriptions", "organizations_url": "https://api.github.com/users/gregoan/orgs", "repos_url": "https://api.github.com/users/gregoan/repos", "events_url": "https://api.github.com/users/gregoan/events{/privacy}", "received_events_url": "https://api.github.com/users/gregoan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-03T17:41:27Z", "updated_at": "2019-12-06T07:04:29Z", "closed_at": "2019-12-06T07:04:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI would like to translate the following commands in Python : \r\n\r\n```\r\ndocker login 10.72.2.70:5002\r\ndocker search 10.72.2.70:5002/digit_c2_child_gregoan\r\n```\r\n**---> Elements are well visible**\r\n\r\nI'm doing : \r\n\r\n```\r\nimport docker\r\n...\r\nclient = docker.from_env()\r\nclient.login(username=registry_username, password=registry_password, registry=docker_registry_server)\r\n\r\n# Returns an error\r\nreturn_type = self.client.images.search(term=\"10.72.2.70:5002/digit_c2_child_gregoan\")\r\n\r\n# Doesn't return anything\r\nreturn_type = self.client.images.search(term=\"digit_c2_child_gregoan\")\r\n```\r\nAny idea about what I'm doing wrong ?\r\n\r\nRegards.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2473", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2473/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2473/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2473/events", "html_url": "https://github.com/docker/docker-py/issues/2473", "id": 530853151, "node_id": "MDU6SXNzdWU1MzA4NTMxNTE=", "number": 2473, "title": "AttributeError: 'generator' object has no attribute 'read'", "user": {"login": "lenhatcuong", "id": 58278182, "node_id": "MDQ6VXNlcjU4Mjc4MTgy", "avatar_url": "https://avatars1.githubusercontent.com/u/58278182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lenhatcuong", "html_url": "https://github.com/lenhatcuong", "followers_url": "https://api.github.com/users/lenhatcuong/followers", "following_url": "https://api.github.com/users/lenhatcuong/following{/other_user}", "gists_url": "https://api.github.com/users/lenhatcuong/gists{/gist_id}", "starred_url": "https://api.github.com/users/lenhatcuong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lenhatcuong/subscriptions", "organizations_url": "https://api.github.com/users/lenhatcuong/orgs", "repos_url": "https://api.github.com/users/lenhatcuong/repos", "events_url": "https://api.github.com/users/lenhatcuong/events{/privacy}", "received_events_url": "https://api.github.com/users/lenhatcuong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-02T02:36:37Z", "updated_at": "2019-12-02T13:05:40Z", "closed_at": "2019-12-02T13:05:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use this class Archive. However, I got the \"AttributeError: 'generator' object has no attribute 'read' \" from \" return Archive('r',strm.read())\".\r\n\r\nclass Archive(object):\r\n\r\n    def __init__(self, mode, data=None):\r\n        self.file = io.BytesIO(data)\r\n        self.tar = tarfile.open(mode=mode, fileobj=self.file)\r\n\r\n    def add_text_file(self, filename: str, text: str, encoding='utf-8'):\r\n        \"\"\"Add the contents of `text` to a new entry in the `tar`\r\n        file.\r\n\r\n        :return:\r\n            self\r\n        \"\"\"\r\n        b = text.encode(encoding)\r\n        f = io.BytesIO(b)\r\n        info = tarfile.TarInfo(filename)\r\n        info.size = len(b)\r\n        info.type = tarfile.REGTYPE\r\n        info.mtime = time.time()\r\n\r\n        self.tar.addfile(info, fileobj=f)\r\n        return self\r\n\r\n    def get_text_file(self, filename: str, encoding='utf-8') -> str:\r\n        \"\"\"Read the contents of a file in the archive.\r\n\r\n        :return:\r\n            contents of file in string.\r\n        \"\"\"\r\n        f = self.tar.extractfile(filename)\r\n        if f:\r\n            return f.read().decode(encoding)\r\n        return None\r\n\r\n    def close(self):\r\n        self.tar.close()\r\n        return self\r\n\r\n    def __iter__(self):\r\n        return iter(self.tar.getmembers())\r\n\r\n    @property\r\n    def buffer(self):\r\n        return self.file.getvalue()\r\n\r\nThe main problem:\r\n\r\n    def get_archive(self, path):\r\n    \"\"\"Get a file or directory from the container and make it into\r\n    an `Archive` object.\"\"\"\r\n        if self.working_dir is not None and not posixpath.isabs(path):\r\n            path = posixpath.join(self.working_dir, path)\r\n\r\n        strm, stat = self.client.get_archive(\r\n            self.container_id, path)\r\n\r\n        return Archive('r', strm.read())\r\n\r\nCould somebody tell me how to read or convert strm which is raw tar data stream to bytes-like object which is suitable to class Archive? or any other ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2464", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2464/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2464/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2464/events", "html_url": "https://github.com/docker/docker-py/issues/2464", "id": 523446098, "node_id": "MDU6SXNzdWU1MjM0NDYwOTg=", "number": 2464, "title": "\"swarm service inspect\" description in https://docker-py.readthedocs.io/en/1.10.0/api/", "user": {"login": "hdlbq", "id": 847175, "node_id": "MDQ6VXNlcjg0NzE3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/847175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdlbq", "html_url": "https://github.com/hdlbq", "followers_url": "https://api.github.com/users/hdlbq/followers", "following_url": "https://api.github.com/users/hdlbq/following{/other_user}", "gists_url": "https://api.github.com/users/hdlbq/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdlbq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdlbq/subscriptions", "organizations_url": "https://api.github.com/users/hdlbq/orgs", "repos_url": "https://api.github.com/users/hdlbq/repos", "events_url": "https://api.github.com/users/hdlbq/events{/privacy}", "received_events_url": "https://api.github.com/users/hdlbq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-15T12:35:24Z", "updated_at": "2019-11-15T18:24:22Z", "closed_at": "2019-11-15T18:24:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "the description of \"swarm service inspect\" seems strange in:\r\nhttps://docker-py.readthedocs.io/en/1.10.0/api/\r\n```\r\ninspect_service\r\nCreate a service, similar to the docker service create command. See the services documentation for details.\r\n```\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2461", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2461/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2461/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2461/events", "html_url": "https://github.com/docker/docker-py/issues/2461", "id": 522133261, "node_id": "MDU6SXNzdWU1MjIxMzMyNjE=", "number": 2461, "title": "How to avoid create container endless", "user": {"login": "xiaochenluo", "id": 22877916, "node_id": "MDQ6VXNlcjIyODc3OTE2", "avatar_url": "https://avatars0.githubusercontent.com/u/22877916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaochenluo", "html_url": "https://github.com/xiaochenluo", "followers_url": "https://api.github.com/users/xiaochenluo/followers", "following_url": "https://api.github.com/users/xiaochenluo/following{/other_user}", "gists_url": "https://api.github.com/users/xiaochenluo/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaochenluo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaochenluo/subscriptions", "organizations_url": "https://api.github.com/users/xiaochenluo/orgs", "repos_url": "https://api.github.com/users/xiaochenluo/repos", "events_url": "https://api.github.com/users/xiaochenluo/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaochenluo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-13T11:08:23Z", "updated_at": "2020-05-21T12:17:25Z", "closed_at": "2020-05-21T12:17:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "docker-py will create container endless when it not receive a response from docker engine like  ReadTimeOut. So, I will get a ton of created containers after. How to avoid this kind of situation\uff1f \r\n\r\npython version: 3.5.2\r\ndocker-py version: 3.5.2\r\ndocker CE: 18.09.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2460", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2460/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2460/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2460/events", "html_url": "https://github.com/docker/docker-py/issues/2460", "id": 520713669, "node_id": "MDU6SXNzdWU1MjA3MTM2Njk=", "number": 2460, "title": "pip install in virtualenv breaks virtualenv", "user": {"login": "casey-boyer-spoke", "id": 55415863, "node_id": "MDQ6VXNlcjU1NDE1ODYz", "avatar_url": "https://avatars1.githubusercontent.com/u/55415863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casey-boyer-spoke", "html_url": "https://github.com/casey-boyer-spoke", "followers_url": "https://api.github.com/users/casey-boyer-spoke/followers", "following_url": "https://api.github.com/users/casey-boyer-spoke/following{/other_user}", "gists_url": "https://api.github.com/users/casey-boyer-spoke/gists{/gist_id}", "starred_url": "https://api.github.com/users/casey-boyer-spoke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casey-boyer-spoke/subscriptions", "organizations_url": "https://api.github.com/users/casey-boyer-spoke/orgs", "repos_url": "https://api.github.com/users/casey-boyer-spoke/repos", "events_url": "https://api.github.com/users/casey-boyer-spoke/events{/privacy}", "received_events_url": "https://api.github.com/users/casey-boyer-spoke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-11T03:05:42Z", "updated_at": "2019-11-11T22:23:43Z", "closed_at": "2019-11-11T22:23:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Upon installing the docker package in a virtualenv, the virtualenv becomes unusable (can no longer call pip or python).\r\n\r\nError: \r\n```\r\n(test-env) PS C:\\Users\\me\\PyEnv\\test-env> pip -V\r\nFatal Python error: initsite: Failed to import the site module\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\me\\pyenv\\test-env\\lib\\site.py\", line 769, in <module>\r\n    main()\r\n  File \"c:\\users\\me\\pyenv\\test-env\\lib\\site.py\", line 746, in main\r\n    paths_in_sys = addsitepackages(paths_in_sys)\r\n  File \"c:\\users\\me\\pyenv\\test-env\\lib\\site.py\", line 279, in addsitepackages\r\n    addsitedir(sitedir, known_paths)\r\n  File \"c:\\users\\me\\pyenv\\test-env\\lib\\site.py\", line 202, in addsitedir\r\n    addpackage(sitedir, name, known_paths)\r\n  File \"c:\\users\\me\\pyenv\\test-env\\lib\\site.py\", line 170, in addpackage\r\n    exec(line)\r\n  File \"<string>\", line 1, in <module>\r\n  File \"c:\\users\\me\\pyenv\\test-env\\lib\\site-packages\\win32\\lib\\pywin32_bootstrap.py\", line 14, in <module>\r\n    for maybe in site.getsitepackages():\r\nAttributeError: module 'site' has no attribute 'getsitepackages'\r\n```\r\nWindows 10 Pro\r\nPython Version 3.7.5, pip version 19.3.1 (installed for user only)\r\n\r\nSteps to reproduce:\r\n```\r\nPS C:\\Users\\me\\AppData\\Local\\Programs\\Python\\Python37> .\\Scripts\\virtualenv.exe C:\\Users\\me\\PyEnv\\test-env\r\nPS C:\\Users\\me\\AppData\\Local\\Programs\\Python\\Python37> cd C:\\Users\\me\\PyEnv\\test-env\\\r\nPS C:\\Users\\me\\PyEnv\\test-env> .\\Scripts\\activate\r\n(test-env) PS C:\\Users\\me\\PyEnv\\test-env> pip install docker\r\n...\r\nInstalling collected packages: six, pywin32, pypiwin32, chardet, idna, urllib3, certifi, requests, websocket-client, docker\r\nSuccessfully installed certifi-2019.9.11 chardet-3.0.4 docker-4.1.0 idna-2.8 pypiwin32-223 pywin32-226 requests-2.22.0 six-1.13.0 urllib3-1.25.6 websocket-client-0.56.0\r\n(test-env) PS C:\\Users\\me\\PyEnv\\test-env> pip -V\r\n... ERROR ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2455", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2455/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2455/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2455/events", "html_url": "https://github.com/docker/docker-py/issues/2455", "id": 514875093, "node_id": "MDU6SXNzdWU1MTQ4NzUwOTM=", "number": 2455, "title": "requests.exceptions.ConnectionError: ('Connection aborted.', FileNotFoundError(2, 'No such file or directory'))", "user": {"login": "Matt-Gleich", "id": 43759105, "node_id": "MDQ6VXNlcjQzNzU5MTA1", "avatar_url": "https://avatars3.githubusercontent.com/u/43759105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matt-Gleich", "html_url": "https://github.com/Matt-Gleich", "followers_url": "https://api.github.com/users/Matt-Gleich/followers", "following_url": "https://api.github.com/users/Matt-Gleich/following{/other_user}", "gists_url": "https://api.github.com/users/Matt-Gleich/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matt-Gleich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matt-Gleich/subscriptions", "organizations_url": "https://api.github.com/users/Matt-Gleich/orgs", "repos_url": "https://api.github.com/users/Matt-Gleich/repos", "events_url": "https://api.github.com/users/Matt-Gleich/events{/privacy}", "received_events_url": "https://api.github.com/users/Matt-Gleich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-30T18:04:23Z", "updated_at": "2019-11-13T21:10:41Z", "closed_at": "2019-11-13T21:10:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the full traceback:\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py\", line 354, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1254, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1300, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1249, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1036, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 974, in send\r\n    self.connect()\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/transport/unixconn.py\", line 43, in connect\r\n    sock.connect(self.unix_socket)\r\nFileNotFoundError: [Errno 2] No such file or directory\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py\", line 638, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/util/retry.py\", line 368, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/packages/six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"/usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py\", line 354, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1254, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1300, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1249, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1036, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 974, in send\r\n    self.connect()\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/transport/unixconn.py\", line 43, in connect\r\n    sock.connect(self.unix_socket)\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', FileNotFoundError(2, 'No such file or directory'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 78, in <module>\r\n    main()\r\n  File \"main.py\", line 32, in main\r\n    docker_client.login(username=docker_username, password=docker_password)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/client.py\", line 183, in login\r\n    return self.api.login(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/api/daemon.py\", line 149, in login\r\n    response = self._post_json(self._url('/auth'), data=req_data)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/api/client.py\", line 289, in _post_json\r\n    return self._post(url, data=json.dumps(data2), **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/utils/decorators.py\", line 46, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/api/client.py\", line 226, in _post\r\n    return self.post(url, **self._set_request_timeout(kwargs))\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/sessions.py\", line 581, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/sessions.py\", line 646, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/adapters.py\", line 498, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', FileNotFoundError(2, 'No such file or directory'))\r\n```\r\n\r\nSo I am trying to log into docker hub using this package. The python script running this is running in a docker container. Below is the Dockerfile:\r\n\r\n```Dockerfile\r\n# Base image with docker and python3.6 installed\r\nFROM mattgleich/python-and-docker\r\n\r\n# Image metadata\r\nLABEL maintainer=\"matthewgleich@gmail.com\"\r\nLABEL description=\"Automatically build images anywhere that docker runs\"\r\n\r\n# Installing Git\r\nRUN apt-get update\r\nRUN apt-get -qq -y install git\r\n\r\n# Installing requirements\r\nCOPY requirements.txt requirements.txt\r\nRUN pip3 install -r requirements.txt \r\nRUN export GIT_PYTHON_REFRESH=quiet\r\n\r\nCOPY /src /src\r\nWORKDIR /src\r\nRUN rm -rf repos\r\n\r\n# Fixing some stuff with docker\r\nRUN eval \"$(docker-machine env default)\"\r\n\r\nCMD [ \"python3\", \"main.py\" ]\r\n```\r\n\r\nThe docker hub password is stored in a folder called configs that is then put into the container using a volume. Below is the error that I get when I start the container with docker compose:\r\n```yml\r\nversion: \"3\"\r\n\r\nservices:\r\n    auto-build-images:\r\n        container_name: auto-build-images\r\n        build: .\r\n        network_mode: \"host\"\r\n        volumes:\r\n            - ~/auto-build-images-config:/src/config\r\n``` \r\n\r\nAs far as the script goes, below is a link to the GitHub repo for the project:\r\nhttps://github.com/Matt-Gleich/Auto-Build-Images-Anywhere", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2451", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2451/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2451/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2451/events", "html_url": "https://github.com/docker/docker-py/issues/2451", "id": 510564523, "node_id": "MDU6SXNzdWU1MTA1NjQ1MjM=", "number": 2451, "title": "Client.containers.list(all=True) fails nondeterministically if some container is being removed in parallel", "user": {"login": "bzak9LD", "id": 29057143, "node_id": "MDQ6VXNlcjI5MDU3MTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/29057143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzak9LD", "html_url": "https://github.com/bzak9LD", "followers_url": "https://api.github.com/users/bzak9LD/followers", "following_url": "https://api.github.com/users/bzak9LD/following{/other_user}", "gists_url": "https://api.github.com/users/bzak9LD/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzak9LD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzak9LD/subscriptions", "organizations_url": "https://api.github.com/users/bzak9LD/orgs", "repos_url": "https://api.github.com/users/bzak9LD/repos", "events_url": "https://api.github.com/users/bzak9LD/events{/privacy}", "received_events_url": "https://api.github.com/users/bzak9LD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-22T10:28:11Z", "updated_at": "2019-10-23T17:42:01Z", "closed_at": "2019-10-23T17:42:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have encountered a following issue in following scenario:\r\n\r\n**Scenario:**\r\n- Have docker on a node\r\n- Have docker-service with one replica\r\n- Scale service down to zero replicas\r\n- List containers in a loop (waiting for the container of a service to disappear)\r\n\r\n**Expected results:**\r\nEventually created list of the containers has one less element.\r\n\r\n**Actual results:**\r\n\r\nNondeterministically the code fails with following backtrace:\r\n```\r\n...\r\n07:40:01    File ..., line 108, in getAllContainerNames\r\n07:40:01      return [container.name for client in self._swarm.clients for container in client.containers.list(all=True)]\r\n07:40:01    File \"/tmp/tmp.xrnVzrxn9J/lib/python2.7/site-packages/docker/models/containers.py\", line 943, in list\r\n07:40:01      containers.append(self.get(r['Id']))\r\n07:40:01    File \"/tmp/tmp.xrnVzrxn9J/lib/python2.7/site-packages/docker/models/containers.py\", line 880, in get\r\n07:40:01      resp = self.client.api.inspect_container(container_id)\r\n07:40:01    File \"/tmp/tmp.xrnVzrxn9J/lib/python2.7/site-packages/docker/utils/decorators.py\", line 19, in wrapped\r\n07:40:01      return f(self, resource_id, *args, **kwargs)\r\n07:40:01    File \"/tmp/tmp.xrnVzrxn9J/lib/python2.7/site-packages/docker/api/container.py\", line 756, in inspect_container\r\n07:40:01      self._get(self._url(\"/containers/{0}/json\", container)), True\r\n07:40:01    File \"/tmp/tmp.xrnVzrxn9J/lib/python2.7/site-packages/docker/api/client.py\", line 267, in _result\r\n07:40:01      self._raise_for_status(response)\r\n07:40:01    File \"/tmp/tmp.xrnVzrxn9J/lib/python2.7/site-packages/docker/api/client.py\", line 263, in _raise_for_status\r\n07:40:01      raise create_api_error_from_http_exception(e)\r\n07:40:01    File \"/tmp/tmp.xrnVzrxn9J/lib/python2.7/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\r\n07:40:01      raise cls(e, response=response, explanation=explanation)\r\n07:40:01  NotFound: 404 Client Error: Not Found (\"No such container: 3701121bed79b3925404c76b5f66a89c0d20fd86eab541fdd85690cecd07aafa\")\r\n```\r\n\r\n**Reproduction:**\r\nI was able to reproduce this issue with a minimalisic test:\r\n- In first terminal run \r\n```\r\nimport docker\r\ncli = docker.DockerClient()\r\nwhile True:\r\n   a = cli.containers.list(all=True)\r\n```\r\n- In second terminal run: ```for i in `seq 10`; do docker rm -f `docker run -d busybox tail -F /dev/null`; done``` (in my environment this issue occurs quickly and 10 loop iterations are enough)\r\nOutput obtained:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\n  File \"/home/bzak/persistentVenv/local/lib/python2.7/site-packages/docker/models/containers.py\", line 943, in list\r\n    containers.append(self.get(r['Id']))\r\n  File \"/home/bzak/persistentVenv/local/lib/python2.7/site-packages/docker/models/containers.py\", line 880, in get\r\n    resp = self.client.api.inspect_container(container_id)\r\n  File \"/home/bzak/persistentVenv/local/lib/python2.7/site-packages/docker/utils/decorators.py\", line 19, in wrapped\r\n    return f(self, resource_id, *args, **kwargs)\r\n  File \"/home/bzak/persistentVenv/local/lib/python2.7/site-packages/docker/api/container.py\", line 756, in inspect_container\r\n    self._get(self._url(\"/containers/{0}/json\", container)), True\r\n  File \"/home/bzak/persistentVenv/local/lib/python2.7/site-packages/docker/api/client.py\", line 267, in _result\r\n    self._raise_for_status(response)\r\n  File \"/home/bzak/persistentVenv/local/lib/python2.7/site-packages/docker/api/client.py\", line 263, in _raise_for_status\r\n    raise create_api_error_from_http_exception(e)\r\n  File \"/home/bzak/persistentVenv/local/lib/python2.7/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\r\n    raise cls(e, response=response, explanation=explanation)\r\ndocker.errors.NotFound: 404 Client Error: Not Found (\"No such container: edf87eb0d1906fd2c567f62846922e3b537552fe28f689d761baece250b21145\")\r\n```\r\n**Suspicions:**\r\nI believe this is a race condition in which docker-py tries to list containers first and then inspect them. Since those commands are \"non-atomic\" the list can contain container that is removed immediately thereafter and tries to inspect a non-existing container.\r\n\r\n**Additional information:**\r\nPython: `Python 2.7.5`\r\nDocker-py: `4.0.2`\r\nDocker:\r\n```\r\nClient:\r\n Version:           18.09.3\r\n API version:       1.39\r\n Go version:        go1.10.8\r\n Git commit:        774a1f4\r\n Built:             Thu Feb 28 06:33:21 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.3\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.8\r\n  Git commit:       774a1f4\r\n  Built:            Thu Feb 28 06:02:24 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2449", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2449/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2449/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2449/events", "html_url": "https://github.com/docker/docker-py/issues/2449", "id": 507638550, "node_id": "MDU6SXNzdWU1MDc2Mzg1NTA=", "number": 2449, "title": "Support --stop-timeout in run request (API 1.25)", "user": {"login": "Guluis", "id": 20287258, "node_id": "MDQ6VXNlcjIwMjg3MjU4", "avatar_url": "https://avatars0.githubusercontent.com/u/20287258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Guluis", "html_url": "https://github.com/Guluis", "followers_url": "https://api.github.com/users/Guluis/followers", "following_url": "https://api.github.com/users/Guluis/following{/other_user}", "gists_url": "https://api.github.com/users/Guluis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Guluis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Guluis/subscriptions", "organizations_url": "https://api.github.com/users/Guluis/orgs", "repos_url": "https://api.github.com/users/Guluis/repos", "events_url": "https://api.github.com/users/Guluis/events{/privacy}", "received_events_url": "https://api.github.com/users/Guluis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793866, "node_id": "MDU6TGFiZWw0MDc5Mzg2Ng==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/enhancement", "name": "kind/enhancement", "color": "84b6eb", "default": false, "description": null}, {"id": 258461385, "node_id": "MDU6TGFiZWwyNTg0NjEzODU=", "url": "https://api.github.com/repos/docker/docker-py/labels/status/0-triage", "name": "status/0-triage", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-16T06:16:03Z", "updated_at": "2019-10-16T13:42:55Z", "closed_at": "2019-10-16T13:42:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "API 1.25 added the --stop-timeout to the run command. It needs to be added to the docker API.\r\nhttps://docs.docker.com/engine/api/v1.25/#\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2447", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2447/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2447/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2447/events", "html_url": "https://github.com/docker/docker-py/issues/2447", "id": 503102089, "node_id": "MDU6SXNzdWU1MDMxMDIwODk=", "number": 2447, "title": "Is it able to get cpuset from API?", "user": {"login": "mJace", "id": 9836691, "node_id": "MDQ6VXNlcjk4MzY2OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9836691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mJace", "html_url": "https://github.com/mJace", "followers_url": "https://api.github.com/users/mJace/followers", "following_url": "https://api.github.com/users/mJace/following{/other_user}", "gists_url": "https://api.github.com/users/mJace/gists{/gist_id}", "starred_url": "https://api.github.com/users/mJace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mJace/subscriptions", "organizations_url": "https://api.github.com/users/mJace/orgs", "repos_url": "https://api.github.com/users/mJace/repos", "events_url": "https://api.github.com/users/mJace/events{/privacy}", "received_events_url": "https://api.github.com/users/mJace/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64720876, "node_id": "MDU6TGFiZWw2NDcyMDg3Ng==", "url": "https://api.github.com/repos/docker/docker-py/labels/group/api-upgrade", "name": "group/api-upgrade", "color": "fbca04", "default": false, "description": null}, {"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-06T13:39:29Z", "updated_at": "2019-10-16T14:13:13Z", "closed_at": "2019-10-16T14:13:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "We can run a container with cpuset by this docker-py API.\r\nBut is it able to get the cpuset information of a container by this API?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2435", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2435/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2435/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2435/events", "html_url": "https://github.com/docker/docker-py/issues/2435", "id": 498239529, "node_id": "MDU6SXNzdWU0OTgyMzk1Mjk=", "number": 2435, "title": "Network object attrs field does not contain containers in the network", "user": {"login": "podfran", "id": 28577180, "node_id": "MDQ6VXNlcjI4NTc3MTgw", "avatar_url": "https://avatars3.githubusercontent.com/u/28577180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/podfran", "html_url": "https://github.com/podfran", "followers_url": "https://api.github.com/users/podfran/followers", "following_url": "https://api.github.com/users/podfran/following{/other_user}", "gists_url": "https://api.github.com/users/podfran/gists{/gist_id}", "starred_url": "https://api.github.com/users/podfran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/podfran/subscriptions", "organizations_url": "https://api.github.com/users/podfran/orgs", "repos_url": "https://api.github.com/users/podfran/repos", "events_url": "https://api.github.com/users/podfran/events{/privacy}", "received_events_url": "https://api.github.com/users/podfran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-25T12:01:15Z", "updated_at": "2019-10-16T13:49:36Z", "closed_at": "2019-10-16T13:49:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Environment:\r\n```\r\ndocker==4.0.1\r\nPython 3.6.8\r\nClient:\r\n Version:           18.09.7\r\n API version:       1.39\r\n Go version:        go1.10.1\r\n Git commit:        2d0083d\r\n Built:             Fri Aug 16 14:20:06 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.09.7\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.1\r\n  Git commit:       2d0083d\r\n  Built:            Wed Aug 14 19:41:23 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\nOS: Linux Mint 19.0 Tara\r\nIssue:\r\nIn the field `attrs` for the `Network` object, the list for key `Containers` is empty. The network was run using `docker-compose` and adding containers using the SDK does not change anything.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2434", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2434/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2434/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2434/events", "html_url": "https://github.com/docker/docker-py/issues/2434", "id": 497480283, "node_id": "MDU6SXNzdWU0OTc0ODAyODM=", "number": 2434, "title": "docker terminal bug (python3, tls=False)", "user": {"login": "py2010", "id": 37617585, "node_id": "MDQ6VXNlcjM3NjE3NTg1", "avatar_url": "https://avatars0.githubusercontent.com/u/37617585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/py2010", "html_url": "https://github.com/py2010", "followers_url": "https://api.github.com/users/py2010/followers", "following_url": "https://api.github.com/users/py2010/following{/other_user}", "gists_url": "https://api.github.com/users/py2010/gists{/gist_id}", "starred_url": "https://api.github.com/users/py2010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/py2010/subscriptions", "organizations_url": "https://api.github.com/users/py2010/orgs", "repos_url": "https://api.github.com/users/py2010/repos", "events_url": "https://api.github.com/users/py2010/events{/privacy}", "received_events_url": "https://api.github.com/users/py2010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-24T06:18:37Z", "updated_at": "2019-09-24T06:28:12Z", "closed_at": "2019-09-24T06:21:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "python3\r\ndocker-py == 3.7.3\r\nrequests==2.20.1\r\ndocker.api.client.APIClient._get_raw_response_socket (line 318)\r\n\r\n```\r\n        elif six.PY3:\r\n            sock = response.raw._fp.fp.raw\r\n            if self.base_url.startswith(\"https://\"):\r\n                sock = sock._sock\r\n```\r\n**TLS:False**\r\n**DOCKER_CERT_PATH: None**\r\n**API: http://server:2375/**\r\nreturn sock = response.raw._fp.fp.raw (socket.SocketIO)\r\n\r\n```\r\n        elif six.PY3:\r\n            sock = response.raw._fp.fp.raw._sock\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2425", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2425/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2425/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2425/events", "html_url": "https://github.com/docker/docker-py/issues/2425", "id": 489424803, "node_id": "MDU6SXNzdWU0ODk0MjQ4MDM=", "number": 2425, "title": "Socket timeout in python2", "user": {"login": "mulog1990", "id": 4593258, "node_id": "MDQ6VXNlcjQ1OTMyNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4593258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mulog1990", "html_url": "https://github.com/mulog1990", "followers_url": "https://api.github.com/users/mulog1990/followers", "following_url": "https://api.github.com/users/mulog1990/following{/other_user}", "gists_url": "https://api.github.com/users/mulog1990/gists{/gist_id}", "starred_url": "https://api.github.com/users/mulog1990/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mulog1990/subscriptions", "organizations_url": "https://api.github.com/users/mulog1990/orgs", "repos_url": "https://api.github.com/users/mulog1990/repos", "events_url": "https://api.github.com/users/mulog1990/events{/privacy}", "received_events_url": "https://api.github.com/users/mulog1990/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-04T22:04:37Z", "updated_at": "2019-09-09T16:13:02Z", "closed_at": "2019-09-09T16:11:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "* OS: MacOS 10.14.5\r\n* python: 2.7.14\r\n* docker/docker-py version:\r\n```\r\npip freeze | grep docker && python --version && docker version\r\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\r\ndocker==3.2.0\r\ndocker-compose==1.20.0\r\ndocker-pycreds==0.4.0\r\ndockerpty==0.4.1\r\nPython 2.7.14\r\nClient: Docker Engine - Community\r\n Version:           19.03.1\r\n API version:       1.40\r\n Go version:        go1.12.5\r\n Git commit:        74b1e89\r\n Built:             Thu Jul 25 21:18:17 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.1\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.5\r\n  Git commit:       74b1e89\r\n  Built:            Thu Jul 25 21:17:52 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n containerd:\r\n  Version:          v1.2.6\r\n  GitCommit:        894b81a4b802e4eb2a91d1ce216b8817763c29fb\r\n runc:\r\n  Version:          1.0.0-rc8\r\n  GitCommit:        425e105d5a03fabd737a126ad93d62a9eeede87f\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n#### Description:\r\nI use docker-compose to start 3 containers, one of them being a web server. The web server\r\nprints some debug info to stdout when processing requests.\r\n\r\nI was on a very old docker-py version (2.2.1) but it has been working fine. I recently upgraded to docker-py 3.7.3 and realized that docker-compose is not printing anything if the web server has been idle for a while. Tried to find a threshold of idle time and it's about 60 seconds.\r\n\r\nI went on and tried multiple docker-py versions. The latest version that works fine is 3.1.4. I looked the diff between version 3.2.0 and 3.1.4, and found this:\r\n(line 25 in docker/utils/socket.py in 284c3d90d6ab1c49410d5622ca8cd3f37dcbe296)\r\n```python\r\nif six.PY3 and not isinstance(socket, NpipeSocket):\r\n    if not isinstance(socket, NpipeSocket):\t\r\n        select.select([socket], [], [])\t        select.select([socket], [], [])\r\n```\r\nLooks like it's not doing the `select.select` in python2, hence the socket times out after 60 seconds in `read()`.\r\nI switched to 3.2.0, removed the condition for `six.PY3` and it works perfectly fine.\r\n\r\nSo my question is: is there a reason why docker-py only do the `select.select` call in python3?  If there's a good reason we can't do it python2, is there anything a docker-compose user can do to avoid socket timeout? Should that be a docker-compose issue? \r\n\r\n(This docker-compose issue may be related https://github.com/docker/compose/issues/6261)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2423", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2423/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2423/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2423/events", "html_url": "https://github.com/docker/docker-py/issues/2423", "id": 487791140, "node_id": "MDU6SXNzdWU0ODc3OTExNDA=", "number": 2423, "title": "Pull image inside container (Exit code 137)", "user": {"login": "M-Gregoire", "id": 9469313, "node_id": "MDQ6VXNlcjk0NjkzMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9469313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M-Gregoire", "html_url": "https://github.com/M-Gregoire", "followers_url": "https://api.github.com/users/M-Gregoire/followers", "following_url": "https://api.github.com/users/M-Gregoire/following{/other_user}", "gists_url": "https://api.github.com/users/M-Gregoire/gists{/gist_id}", "starred_url": "https://api.github.com/users/M-Gregoire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M-Gregoire/subscriptions", "organizations_url": "https://api.github.com/users/M-Gregoire/orgs", "repos_url": "https://api.github.com/users/M-Gregoire/repos", "events_url": "https://api.github.com/users/M-Gregoire/events{/privacy}", "received_events_url": "https://api.github.com/users/M-Gregoire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-31T17:12:01Z", "updated_at": "2019-09-05T11:42:31Z", "closed_at": "2019-09-05T11:42:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Summary \r\n\r\nWhen trying to pull an image inside a container, python hangs before the container is stopped with exit code 137.\r\n\r\n# Detailed issue\r\n\r\nI wrote a simply script using `docker-py` that pulls an image:\r\n```\r\nprint(\"1\")\r\nimport docker\r\nprint(\"2\")\r\nclient = docker.from_env()\r\nprint(client.containers.list())\r\nprint(\"3\")\r\nclient.images.pull('alpine')\r\nprint(\"Done\")\r\n```\r\n\r\nThis script works perfectly when running on my host. \r\nHowever, when running it from a busybox container with `python3`, this scripts hangs before the container is stopped with exit code 137.\r\n\r\nAfter some researches, I thought it might be caused by the OOM killer but that's not the case:\r\n```\r\n        \"State\": {\r\n            \"Status\": \"exited\",\r\n            \"Running\": false,\r\n            \"Paused\": false,\r\n            \"Restarting\": false,\r\n            \"OOMKilled\": false,\r\n            \"Dead\": false,\r\n            \"Pid\": 0,\r\n            \"ExitCode\": 137,\r\n            \"Error\": \"\",\r\n        },\r\n```\r\n\r\nHowever, looking at `top` while the container is running show a huge increase of CPU usage shortly before it crashes (From ~10% to over 100%).\r\n\r\nI've played with a lot of memory option (`cpus`, `cpuset`, `mem_limit`, ...) from `docker`[`-compose`] without any success.\r\n\r\nI've also noticed a strange behavior I can't explain: when removing the `pull` command from the script, the output is the following:\r\n```\r\n1\r\n2\r\n[]\r\n3\r\n```\r\n\r\nHowever, with the `pull` command. there is absolutely no output. How does a command line `7` can prevent the print lines `1` and `3` from executing?\r\n\r\n# Information\r\n\r\n```\r\nLinux 5.2.11\r\nPython 3.7.3\r\ndocker==4.0.2\r\n```\r\n\r\nThank you for any help you might provide.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2422", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2422/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2422/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2422/events", "html_url": "https://github.com/docker/docker-py/issues/2422", "id": 487772449, "node_id": "MDU6SXNzdWU0ODc3NzI0NDk=", "number": 2422, "title": "service.update() doesn't pull the latest image tag version", "user": {"login": "tlex", "id": 910671, "node_id": "MDQ6VXNlcjkxMDY3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/910671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlex", "html_url": "https://github.com/tlex", "followers_url": "https://api.github.com/users/tlex/followers", "following_url": "https://api.github.com/users/tlex/following{/other_user}", "gists_url": "https://api.github.com/users/tlex/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlex/subscriptions", "organizations_url": "https://api.github.com/users/tlex/orgs", "repos_url": "https://api.github.com/users/tlex/repos", "events_url": "https://api.github.com/users/tlex/events{/privacy}", "received_events_url": "https://api.github.com/users/tlex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-31T13:53:44Z", "updated_at": "2020-02-02T22:15:50Z", "closed_at": "2020-02-02T22:15:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to update a service to the latest build for the image tag (in my case, the latest build for `:latest`).\r\n\r\nRunning the following code:\r\n```py\r\nimport docker\r\n\r\nclient = docker.from_env()\r\n\r\nservices = client.services.list(filters={'name': 'smtp_smtp'})\r\n\r\nfor service in services:\r\n    image_with_digest = service.attrs['Spec']['TaskTemplate']['ContainerSpec']['Image']\r\n    image = image_with_digest.split('@', 1)[0]\r\n    service.update(image=image)\r\n```\r\nRunning the above script triggers the following event in docker:\r\n```\r\n$ docker events\r\n2019-08-31T15:06:37.473139584+02:00 service update pqs6wtscm1tq6yiqrmu4wv0of (name=smtp_smtp)\r\n```\r\n\r\nOn the other hand, doing the same but with the docker CLI:\r\n```py\r\nimport subprocess\r\nimport docker\r\n\r\nclient = docker.from_env()\r\n\r\nservices = client.services.list(filters={'name': 'smtp_smtp'})\r\n\r\nfor service in services:\r\n    image_with_digest = service.attrs['Spec']['TaskTemplate']['ContainerSpec']['Image']\r\n    image = image_with_digest.split('@', 1)[0]\r\n    subprocess.run(\r\n        args=['docker', 'service', 'update', '--image={}'.format(image), service.id],\r\n        check=True,\r\n    )\r\n```\r\nDocker events:\r\n```\r\n2019-08-31T15:11:02.408583705+02:00 service update pqs6wtscm1tq6yiqrmu4wv0of (image.new=registry.gitlab.com/ix.ai/smtp:latest@sha256:150a586ac5b572200231f129a22e7dedc5443e7e3e567a7041c90bf260be13e6, image.old=registry.gitlab.com/ix.ai/smtp:latest, name=smtp_smtp)\r\n2019-08-31T15:11:02.410705349+02:00 service update pqs6wtscm1tq6yiqrmu4wv0of (name=smtp_smtp, updatestate.new=updating)\r\n[...]\r\n```\r\nNeedless to say, I ensured that there was indeed a newer version of the `:latest` tag in the registry.\r\n\r\nI suspect that the Python SDK is interacting differently with the docker daemon than the CLI client, but I couldn't find any way to actually compare the actual requests. I can see that the CLI is automatically setting the SHA256 in the `Spec.TaskTemplate.ContainerSpec.Image`, while docker-py does not:\r\n```json\r\n\"ContainerSpec\": {\r\n    \"Image\": \"registry.gitlab.com/ix.ai/smtp:latest@sha256:e1e6502c2cc2925ba2c8ccaddf994609e660748bc2419dc9d550ce4deba8d8d9\",\r\n    \"Labels\": {\r\n        \"com.docker.stack.namespace\": \"smtp\"\r\n    },\r\n[...]\r\n}\r\n```\r\n\r\n## Version information\r\n```\r\n$ pip freeze | grep docker && python --version && docker version\r\ndocker==4.0.2\r\ndocker-pycreds==0.4.0\r\nPython 3.7.4\r\nClient: Docker Engine - Community\r\n Version:           19.03.1\r\n API version:       1.40\r\n Go version:        go1.12.5\r\n Git commit:        74b1e89\r\n Built:             Thu Jul 25 21:18:17 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.1\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.5\r\n  Git commit:       74b1e89\r\n  Built:            Thu Jul 25 21:17:52 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n containerd:\r\n  Version:          v1.2.6\r\n  GitCommit:        894b81a4b802e4eb2a91d1ce216b8817763c29fb\r\n runc:\r\n  Version:          1.0.0-rc8\r\n  GitCommit:        425e105d5a03fabd737a126ad93d62a9eeede87f\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2417", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2417/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2417/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2417/events", "html_url": "https://github.com/docker/docker-py/issues/2417", "id": 486429837, "node_id": "MDU6SXNzdWU0ODY0Mjk4Mzc=", "number": 2417, "title": "TypeError: load_config() got an unexpected keyword argument 'config_dict'", "user": {"login": "ClaytonSmith", "id": 8992035, "node_id": "MDQ6VXNlcjg5OTIwMzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8992035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ClaytonSmith", "html_url": "https://github.com/ClaytonSmith", "followers_url": "https://api.github.com/users/ClaytonSmith/followers", "following_url": "https://api.github.com/users/ClaytonSmith/following{/other_user}", "gists_url": "https://api.github.com/users/ClaytonSmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/ClaytonSmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ClaytonSmith/subscriptions", "organizations_url": "https://api.github.com/users/ClaytonSmith/orgs", "repos_url": "https://api.github.com/users/ClaytonSmith/repos", "events_url": "https://api.github.com/users/ClaytonSmith/events{/privacy}", "received_events_url": "https://api.github.com/users/ClaytonSmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-28T14:47:25Z", "updated_at": "2019-08-28T17:33:13Z", "closed_at": "2019-08-28T17:33:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Taken from the root README:\r\n\r\n```python\r\nimport docker\r\nclient = docker.from_env()\r\n```\r\n\r\nproduces:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/csmith/Dev/repo/venv/lib/python3.7/site-packages/docker/client.py\", line 85, in from_env\r\n    timeout=timeout, version=version, **kwargs_from_env(**kwargs)\r\n  File \"/Users/csmith/Dev/repo/venv/lib/python3.7/site-packages/docker/client.py\", line 40, in __init__\r\n    self.api = APIClient(*args, **kwargs)\r\n  File \"/Users/csmith/Dev/repo/venv/lib/python3.7/site-packages/docker/api/client.py\", line 128, in __init__\r\n    config_dict=self._general_configs, credstore_env=credstore_env,\r\nTypeError: load_config() got an unexpected keyword argument 'config_dict'\r\n```\r\n\r\nThe same error is seen when creating a client using `docker.DockerClient(...)`\r\n\r\n\r\n```\r\ndocker==4.0.2\r\ndocker-py==1.10.6\r\ndocker-pycreds==0.4.0\r\ndockerpty==0.4.1\r\nPython 3.7.0\r\nClient: Docker Engine - Community\r\n Version:           19.03.1\r\n API version:       1.40\r\n Go version:        go1.12.5\r\n Git commit:        74b1e89\r\n Built:             Thu Jul 25 21:18:17 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.1\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.5\r\n  Git commit:       74b1e89\r\n  Built:            Thu Jul 25 21:17:52 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n containerd:\r\n  Version:          v1.2.6\r\n  GitCommit:        894b81a4b802e4eb2a91d1ce216b8817763c29fb\r\n runc:\r\n  Version:          1.0.0-rc8\r\n  GitCommit:        425e105d5a03fabd737a126ad93d62a9eeede87f\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2412", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2412/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2412/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2412/events", "html_url": "https://github.com/docker/docker-py/issues/2412", "id": 482783956, "node_id": "MDU6SXNzdWU0ODI3ODM5NTY=", "number": 2412, "title": "Different images instead of nginx images", "user": {"login": "Rev0kz", "id": 35949773, "node_id": "MDQ6VXNlcjM1OTQ5Nzcz", "avatar_url": "https://avatars1.githubusercontent.com/u/35949773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rev0kz", "html_url": "https://github.com/Rev0kz", "followers_url": "https://api.github.com/users/Rev0kz/followers", "following_url": "https://api.github.com/users/Rev0kz/following{/other_user}", "gists_url": "https://api.github.com/users/Rev0kz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rev0kz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rev0kz/subscriptions", "organizations_url": "https://api.github.com/users/Rev0kz/orgs", "repos_url": "https://api.github.com/users/Rev0kz/repos", "events_url": "https://api.github.com/users/Rev0kz/events{/privacy}", "received_events_url": "https://api.github.com/users/Rev0kz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-20T10:43:19Z", "updated_at": "2019-08-21T16:16:43Z", "closed_at": "2019-08-20T17:25:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello I want to use the code below to retrieve nginx images from docker hub but it displayed different images from docker hub instead of nginx images.  \r\n\r\n```\r\nimport click\r\nimport docker\r\nimport subprocess\r\n\r\nclient = docker.from_env()   \r\n\r\n@click.command()\r\n@click.argument('image') \r\ndef search(image):\r\n      click.echo(client.images.search('image'))   \r\n\r\nif __name__  ==  '__main__':\r\n         search()\r\n```\r\nI executed the program as:   \r\n\r\n`python client.py nginx`     \r\n\r\nOutput:    \r\n\r\n```\r\n {u'is_automated': False, u'is_official': False, u'name': u'iron/images', u'star_count': 7, u'description': u'docker images'}, {u'is_automated': True, u'is_official': False, u'name': u'ebonharme/images', u'star_count': 1, u'description': u'Docker images built automatically'}, {u'is_automated': False, u'is_official': False, u'name': u'ckassen/imageservice', u'star_count': 0, u'description': u'Workshop Imageservice'}, {u'is_automated': False, u'is_official': False, u'name': u'bugswarm/images', u'star_count': 0, u'description': u''}, {u'is_automated': False, u'is_official': False, u'name': u'wwdemo/images', u'star_count': 0, u'description': u''}, {u'is_automated': False, u'is_official': True, u'name': u'registry', u'star_count': 2657, u'description': u'The Docker Registry 2.0 implementation for storing and distributing Docker images'}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2410", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2410/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2410/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2410/events", "html_url": "https://github.com/docker/docker-py/issues/2410", "id": 480064679, "node_id": "MDU6SXNzdWU0ODAwNjQ2Nzk=", "number": 2410, "title": "SyntaxError credentials: Union[Credentials, str]", "user": {"login": "dmitryhruzin", "id": 50986064, "node_id": "MDQ6VXNlcjUwOTg2MDY0", "avatar_url": "https://avatars0.githubusercontent.com/u/50986064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmitryhruzin", "html_url": "https://github.com/dmitryhruzin", "followers_url": "https://api.github.com/users/dmitryhruzin/followers", "following_url": "https://api.github.com/users/dmitryhruzin/following{/other_user}", "gists_url": "https://api.github.com/users/dmitryhruzin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmitryhruzin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmitryhruzin/subscriptions", "organizations_url": "https://api.github.com/users/dmitryhruzin/orgs", "repos_url": "https://api.github.com/users/dmitryhruzin/repos", "events_url": "https://api.github.com/users/dmitryhruzin/events{/privacy}", "received_events_url": "https://api.github.com/users/dmitryhruzin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-13T09:53:43Z", "updated_at": "2019-08-13T17:05:30Z", "closed_at": "2019-08-13T17:05:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "After the latest update I get the following error:\r\n\r\nSignal handler <bound method ?.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7fd3777b4510>> raised: SyntaxError('invalid syntax', ('/usr/local/lib/python2.7/site-packages/apns2/client.py', 41, 29, ' credentials: Union[Credentials, str],\\n'))\r\nTraceback (most recent call last):\r\nFile \"/usr/local/lib/python2.7/site-packages/celery/utils/dispatch/signal.py\", line 230, in send\r\nresponse = receiver(signal=self, sender=sender, **named)\r\nFile \"/usr/local/lib/python2.7/site-packages/celery/fixups/django.py\", line 82, in on_import_modules\r\nself.worker_fixup.validate_models()\r\nFile \"/usr/local/lib/python2.7/site-packages/celery/fixups/django.py\", line 120, in validate_models\r\nself.django_setup()\r\nFile \"/usr/local/lib/python2.7/site-packages/celery/fixups/django.py\", line 116, in django_setup\r\ndjango.setup()\r\nFile \"/usr/local/lib/python2.7/site-packages/django/__init__.py\", line 27, in setup\r\napps.populate(settings.INSTALLED_APPS)\r\nFile \"/usr/local/lib/python2.7/site-packages/django/apps/registry.py\", line 116, in populate\r\napp_config.ready()\r\nFile \"/usr/local/lib/python2.7/site-packages/django/contrib/admin/apps.py\", line 23, in ready\r\nself.module.autodiscover()\r\nFile \"/usr/local/lib/python2.7/site-packages/django/contrib/admin/__init__.py\", line 26, in autodiscover\r\nautodiscover_modules('admin', register_to=site)\r\nFile \"/usr/local/lib/python2.7/site-packages/django/utils/module_loading.py\", line 50, in autodiscover_modules\r\nimport_module('%s.%s' % (app_config.name, module_to_search))\r\nFile \"/usr/local/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n__import__(name)\r\nFile \"/usr/local/lib/python2.7/site-packages/push_notifications/admin.py\", line 4, in <module>\r\nfrom .apns import APNSServerError\r\nFile \"/usr/local/lib/python2.7/site-packages/push_notifications/apns.py\", line 9, in <module>\r\nfrom apns2 import client as apns2_client\r\nFile \"/usr/local/lib/python2.7/site-packages/apns2/client.py\", line 41\r\ncredentials: Union[Credentials, str],", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2404", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2404/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2404/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2404/events", "html_url": "https://github.com/docker/docker-py/issues/2404", "id": 478542923, "node_id": "MDU6SXNzdWU0Nzg1NDI5MjM=", "number": 2404, "title": "Cannot Search images with Docker SDK for python", "user": {"login": "Rev0kz", "id": 35949773, "node_id": "MDQ6VXNlcjM1OTQ5Nzcz", "avatar_url": "https://avatars1.githubusercontent.com/u/35949773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rev0kz", "html_url": "https://github.com/Rev0kz", "followers_url": "https://api.github.com/users/Rev0kz/followers", "following_url": "https://api.github.com/users/Rev0kz/following{/other_user}", "gists_url": "https://api.github.com/users/Rev0kz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rev0kz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rev0kz/subscriptions", "organizations_url": "https://api.github.com/users/Rev0kz/orgs", "repos_url": "https://api.github.com/users/Rev0kz/repos", "events_url": "https://api.github.com/users/Rev0kz/events{/privacy}", "received_events_url": "https://api.github.com/users/Rev0kz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-08T15:30:07Z", "updated_at": "2019-08-20T10:35:53Z", "closed_at": "2019-08-20T10:35:53Z", "author_association": "NONE", "active_lock_reason": null, "body": " Please I installed Docker API for python on a Linux debian without installing Docker Engine as shown below:  \r\n\r\n`pip install docker`\r\n\r\nAfterwards I opened a python interpreter and type the following commands:  \r\n\r\n```\r\n>> import docker\r\n>> client = docker.from_env() \r\n>> client.search.images(\"nginx\")  \r\n```\r\n\r\nHowever it sent the following error message:  \r\n\r\n```\r\nraise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', error(2, 'No such file or directory'))\r\n```   \r\nIt says no such file or directory although I just typed these commands via the python interpreter.\r\n\r\nAny help please?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2402", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2402/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2402/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2402/events", "html_url": "https://github.com/docker/docker-py/issues/2402", "id": 478162662, "node_id": "MDU6SXNzdWU0NzgxNjI2NjI=", "number": 2402, "title": "get_all_credentials omits credentials for empty auth keys in config.json", "user": {"login": "fluetm", "id": 3151043, "node_id": "MDQ6VXNlcjMxNTEwNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3151043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fluetm", "html_url": "https://github.com/fluetm", "followers_url": "https://api.github.com/users/fluetm/followers", "following_url": "https://api.github.com/users/fluetm/following{/other_user}", "gists_url": "https://api.github.com/users/fluetm/gists{/gist_id}", "starred_url": "https://api.github.com/users/fluetm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fluetm/subscriptions", "organizations_url": "https://api.github.com/users/fluetm/orgs", "repos_url": "https://api.github.com/users/fluetm/repos", "events_url": "https://api.github.com/users/fluetm/events{/privacy}", "received_events_url": "https://api.github.com/users/fluetm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-07T22:13:49Z", "updated_at": "2019-10-11T15:05:28Z", "closed_at": "2019-10-11T15:05:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using the `osxkeychain` credsStore on a mac, the config.json will look something like this:\r\n```\r\n{\r\n  \"auths\": {\r\n    \"some.registry.host\": {},\r\n    },\r\n    \"HttpHeaders\": {\r\n      \"User-Agent\": \"Docker-Client/19.03.1 (darwin)\"\r\n    },\r\n    \"credsStore\": \"osxkeychain\"\r\n}\r\n```\r\nThe registry key for `some.registry.host` has no value as the creds are stored in the keychain.\r\n\r\nThe keys in the keychain data are stored with an `https://` prefix, like this\r\n```\r\n{'https://some.registry.host': 'userid1'}\r\n```\r\n\r\nThe auth header generation for this kind of config was broken on this commit from the `3.7.0` release, affecting image pulls: https://github.com/docker/docker-py/commit/bc5d7c8cb676d54ad00b8cd8e731a9db049c392c\r\n\r\nThe changes made here result in credentials being added using the keys from the credsStore: https://github.com/docker/docker-py/blob/master/docker/auth.py#L302-L305.  However, the keys from the auths are still unresolved.  This results in a return from `get_all_credentials` that looks like this:\r\n```\r\n{'some.registry.host': {}, 'https://some.registry.host': {'ServerAddress': 'https://some.registry.host', 'Username': 'userid1', 'Password': 'encodedPassword'}}\r\n```\r\nWhich in turn creates an auth header that will fail to pull images from `some.registry.host` in a Dockerfile.\r\n\r\nBefore the change, the auth data returned used to look like this:\r\n```\r\n{'some.registry.host': {'ServerAddress': 'https://some.registry.host', 'Username': 'userid1', 'Password': 'encodedPassword'}}\r\n```\r\n\r\nThis is affecting docker-compose builds that pull from private registries:\r\nhttps://github.com/docker/compose/issues/6713\r\nhttps://github.com/docker/compose/issues/6832\r\n\r\nPossible fix here: https://github.com/docker/docker-py/pull/2401", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2394", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2394/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2394/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2394/events", "html_url": "https://github.com/docker/docker-py/issues/2394", "id": 474506027, "node_id": "MDU6SXNzdWU0NzQ1MDYwMjc=", "number": 2394, "title": "Cannot mount volumes with spaces on it", "user": {"login": "hithwen", "id": 611228, "node_id": "MDQ6VXNlcjYxMTIyOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/611228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hithwen", "html_url": "https://github.com/hithwen", "followers_url": "https://api.github.com/users/hithwen/followers", "following_url": "https://api.github.com/users/hithwen/following{/other_user}", "gists_url": "https://api.github.com/users/hithwen/gists{/gist_id}", "starred_url": "https://api.github.com/users/hithwen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hithwen/subscriptions", "organizations_url": "https://api.github.com/users/hithwen/orgs", "repos_url": "https://api.github.com/users/hithwen/repos", "events_url": "https://api.github.com/users/hithwen/events{/privacy}", "received_events_url": "https://api.github.com/users/hithwen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-30T10:33:18Z", "updated_at": "2019-08-01T15:29:18Z", "closed_at": "2019-08-01T15:29:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "While docker cli accepts volumes with spaces:\r\n`docker run -v /Users/hithwen/Library/Application\\ Support/config:/etc/my-app/config myimage`\r\n\r\nWhen using the pyhton library and a `Mount`\r\n```\r\nclient.containers.run(\r\n    \"myimage\",\r\n    mounts=[\r\n        Mount(source='/Users/hithwen/Library/Application\\ Support/config', target='/etc/my-app/config')]\r\n)\r\n```\r\n\r\nI get:\r\n\r\n`docker.errors.APIError: 400 Client Error: Bad Request (\"create /Users/hithwen/Library/Application\\ Support/config: \"/Users/hithwen/Library/Application\\\\ Support/config\" includes invalid characters for a local volume name, only \"[a-zA-Z0-9][a-zA-Z0-9_.-]\" are allowed. If you intended to pass a host directory, use absolute path\")`\r\n\r\nUsing versions:\r\n* Docker version 18.09.2\r\n* docker==3.6.0\r\n* Python 3.7.3\r\n* Mac Os 10.14.6\r\n\r\nOriginally reported in https://github.com/docker-library/python/issues/410", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2390", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2390/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2390/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2390/events", "html_url": "https://github.com/docker/docker-py/issues/2390", "id": 471289307, "node_id": "MDU6SXNzdWU0NzEyODkzMDc=", "number": 2390, "title": "Starting a container with 'npipe' mount results in API error.", "user": {"login": "rantonov", "id": 638448, "node_id": "MDQ6VXNlcjYzODQ0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/638448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rantonov", "html_url": "https://github.com/rantonov", "followers_url": "https://api.github.com/users/rantonov/followers", "following_url": "https://api.github.com/users/rantonov/following{/other_user}", "gists_url": "https://api.github.com/users/rantonov/gists{/gist_id}", "starred_url": "https://api.github.com/users/rantonov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rantonov/subscriptions", "organizations_url": "https://api.github.com/users/rantonov/orgs", "repos_url": "https://api.github.com/users/rantonov/repos", "events_url": "https://api.github.com/users/rantonov/events{/privacy}", "received_events_url": "https://api.github.com/users/rantonov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-22T19:55:25Z", "updated_at": "2019-07-22T21:38:06Z", "closed_at": "2019-07-22T21:38:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When programmatically create a docker container that communicates with a service running on the host machine and listening on a named pipe (a.k.a. unix socket). I get: \r\n\r\nAPIError: 400 Client Error: Bad Request (\"invalid mount config for type \"npipe\": mount type unknown\")\r\n\r\nMy setup includes: \r\n\r\n- Docker version 18.09.7, build 2d0083d \r\n- Python 2.7.12 \r\n- docker==4.0.1 (from pip freeze)\r\n```\r\nimport docker\r\nfrom docker.types import Mount\r\n\r\nmounts = [\r\n    Mount('/tmp/redis.sock', '/tmp/redis.sock', type='npipe'),\r\n    Mount('/opt/data/', '/tmp'),\r\n]\r\n\r\nclient = docker.from_env()\r\nclient.containers.run(\r\n    \"alpine\", \r\n    **{\r\n        \"command\":\"sleep 600\", \r\n        \"network_mode\": \"host\", \r\n        \"mounts\": mounts\r\n    }\r\n)\r\n```\r\nHere is the exception:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/opt/grok/ve/grok/local/lib/python2.7/site-packages/docker/models/containers.py\", line 803, in run\r\n    detach=detach, **kwargs)\r\n  File \"/opt/grok/ve/grok/local/lib/python2.7/site-packages/docker/models/containers.py\", line 861, in create\r\n    resp = self.client.api.create_container(**create_kwargs)\r\n  File \"/opt/grok/ve/grok/local/lib/python2.7/site-packages/docker/api/container.py\", line 429, in create_container\r\n    return self.create_container_from_config(config, name)\r\n  File \"/opt/grok/ve/grok/local/lib/python2.7/site-packages/docker/api/container.py\", line 440, in create_container_from_config\r\n    return self._result(res, True)\r\n  File \"/opt/grok/ve/grok/local/lib/python2.7/site-packages/docker/api/client.py\", line 267, in _result\r\n    self._raise_for_status(response)\r\n  File \"/opt/grok/ve/grok/local/lib/python2.7/site-packages/docker/api/client.py\", line 263, in _raise_for_status\r\n    raise create_api_error_from_http_exception(e)\r\n  File \"/opt/grok/ve/grok/local/lib/python2.7/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\r\n    raise cls(e, response=response, explanation=explanation)\r\ndocker.errors.APIError: 400 Client Error: Bad Request (\"invalid mount config for type \"npipe\": mount type unknown\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2388", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2388/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2388/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2388/events", "html_url": "https://github.com/docker/docker-py/issues/2388", "id": 470960480, "node_id": "MDU6SXNzdWU0NzA5NjA0ODA=", "number": 2388, "title": "ImportError: cannot import name 'format_extra_hosts' from containers.py", "user": {"login": "parin13", "id": 12233451, "node_id": "MDQ6VXNlcjEyMjMzNDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/12233451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parin13", "html_url": "https://github.com/parin13", "followers_url": "https://api.github.com/users/parin13/followers", "following_url": "https://api.github.com/users/parin13/following{/other_user}", "gists_url": "https://api.github.com/users/parin13/gists{/gist_id}", "starred_url": "https://api.github.com/users/parin13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parin13/subscriptions", "organizations_url": "https://api.github.com/users/parin13/orgs", "repos_url": "https://api.github.com/users/parin13/repos", "events_url": "https://api.github.com/users/parin13/events{/privacy}", "received_events_url": "https://api.github.com/users/parin13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-22T08:26:10Z", "updated_at": "2019-07-23T11:59:29Z", "closed_at": "2019-07-23T11:56:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n **docker version** \r\n> \r\n> Client:\r\n>  Version:           18.09.8\r\n>  API version:       1.39\r\n>  Go version:        go1.10.8\r\n>  Git commit:        0dd43dd87f\r\n>  Built:             Wed Jul 17 17:41:19 2019\r\n>  OS/Arch:           linux/amd64\r\n>  Experimental:      false\r\n> \r\n> Server: Docker Engine - Community\r\n>  Engine:\r\n>   Version:          18.09.8\r\n>   API version:      1.39 (minimum version 1.12)\r\n>   Go version:       go1.10.8\r\n>   Git commit:       0dd43dd\r\n>   Built:            Wed Jul 17 17:07:25 2019\r\n>   OS/Arch:          linux/amd64\r\n>   Experimental:     false\r\n> \r\n pip dependencies\r\n\r\n> docker==3.7.3\r\n> docker-compose==1.24.1\r\n> docker-py==1.8.0\r\n> docker-pycreds==0.4.0\r\n> dockerpty==0.4.1\r\n\r\nAfter having this all setup in my system when i want to run compose with command:\r\n\r\n`docker-compose up -d\r\n`\r\ni got this stack \r\n\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"/usr/local/bin/docker-compose\", line 6, in <module>\r\n>     from compose.cli.main import main\r\n>   File \"/usr/local/lib/python3.6/dist-packages/compose/cli/main.py\", line 22, in <module>\r\n>     from ..bundle import get_image_digests\r\n>   File \"/usr/local/lib/python3.6/dist-packages/compose/bundle.py\", line 13, in <module>\r\n>     from .network import get_network_defs_for_service\r\n>   File \"/usr/local/lib/python3.6/dist-packages/compose/network.py\", line 9, in <module>\r\n>     from docker.types import IPAMConfig\r\n>   File \"/usr/local/lib/python3.6/dist-packages/docker/types/__init__.py\", line 2, in <module>\r\n>     from .containers import ContainerConfig, HostConfig, LogConfig, Ulimit\r\n>   File \"/usr/local/lib/python3.6/dist-packages/docker/types/containers.py\", line 4, in <module>\r\n>     from ..utils.utils import (\r\n> ImportError: cannot import name 'format_extra_hosts'\r\n> \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2374", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2374/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2374/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2374/events", "html_url": "https://github.com/docker/docker-py/issues/2374", "id": 465071945, "node_id": "MDU6SXNzdWU0NjUwNzE5NDU=", "number": 2374, "title": "How to Solve the Problem of Root Permission", "user": {"login": "Tilyp", "id": 23659885, "node_id": "MDQ6VXNlcjIzNjU5ODg1", "avatar_url": "https://avatars3.githubusercontent.com/u/23659885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tilyp", "html_url": "https://github.com/Tilyp", "followers_url": "https://api.github.com/users/Tilyp/followers", "following_url": "https://api.github.com/users/Tilyp/following{/other_user}", "gists_url": "https://api.github.com/users/Tilyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tilyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tilyp/subscriptions", "organizations_url": "https://api.github.com/users/Tilyp/orgs", "repos_url": "https://api.github.com/users/Tilyp/repos", "events_url": "https://api.github.com/users/Tilyp/events{/privacy}", "received_events_url": "https://api.github.com/users/Tilyp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-08T06:12:27Z", "updated_at": "2019-07-09T01:59:22Z", "closed_at": "2019-07-09T01:59:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "my code\uff1a\r\n      \r\n```\r\nfrom io import BytesIO\r\nfrom docker import APIClient\r\ndockerfile = '''\r\n             # Shared Volume\r\n             FROM busybox:buildroot-2014.02\r\n             VOLUME /data\r\n             CMD [\"/bin/sh\"]\r\n            '''\r\nf = BytesIO(dockerfile.encode('utf-8'))\r\ncli = APIClient(version='auto')\r\nresponse = [line for line in cli.build(\r\n                fileobj=f, rm=True, tag='yourname/volume'\r\n            )]\r\nprint(response)\r\n```\r\nmy error\r\n`\r\nDockerException: Error while fetching server API version: ('Connection aborted.', PermissionError(13, 'Permission denied'))`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2373", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2373/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2373/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2373/events", "html_url": "https://github.com/docker/docker-py/issues/2373", "id": 464068997, "node_id": "MDU6SXNzdWU0NjQwNjg5OTc=", "number": 2373, "title": "How to get lifetime / created time of a container?", "user": {"login": "duong2179", "id": 16577855, "node_id": "MDQ6VXNlcjE2NTc3ODU1", "avatar_url": "https://avatars0.githubusercontent.com/u/16577855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duong2179", "html_url": "https://github.com/duong2179", "followers_url": "https://api.github.com/users/duong2179/followers", "following_url": "https://api.github.com/users/duong2179/following{/other_user}", "gists_url": "https://api.github.com/users/duong2179/gists{/gist_id}", "starred_url": "https://api.github.com/users/duong2179/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duong2179/subscriptions", "organizations_url": "https://api.github.com/users/duong2179/orgs", "repos_url": "https://api.github.com/users/duong2179/repos", "events_url": "https://api.github.com/users/duong2179/events{/privacy}", "received_events_url": "https://api.github.com/users/duong2179/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-04T05:29:52Z", "updated_at": "2019-07-08T02:18:33Z", "closed_at": "2019-07-08T02:18:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Want to manage containers so that they shouldn't live too long. It would be good if the managing script can obtain lifetime / created time of a container.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2372", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2372/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2372/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2372/events", "html_url": "https://github.com/docker/docker-py/issues/2372", "id": 462930464, "node_id": "MDU6SXNzdWU0NjI5MzA0NjQ=", "number": 2372, "title": "container.name not updating on container rename", "user": {"login": "TheJKM", "id": 21987613, "node_id": "MDQ6VXNlcjIxOTg3NjEz", "avatar_url": "https://avatars3.githubusercontent.com/u/21987613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheJKM", "html_url": "https://github.com/TheJKM", "followers_url": "https://api.github.com/users/TheJKM/followers", "following_url": "https://api.github.com/users/TheJKM/following{/other_user}", "gists_url": "https://api.github.com/users/TheJKM/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheJKM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheJKM/subscriptions", "organizations_url": "https://api.github.com/users/TheJKM/orgs", "repos_url": "https://api.github.com/users/TheJKM/repos", "events_url": "https://api.github.com/users/TheJKM/events{/privacy}", "received_events_url": "https://api.github.com/users/TheJKM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}, {"id": 499605578, "node_id": "MDU6TGFiZWw0OTk2MDU1Nzg=", "url": "https://api.github.com/repos/docker/docker-py/labels/level/dockerclient", "name": "level/dockerclient", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-01T22:01:28Z", "updated_at": "2019-07-02T05:52:07Z", "closed_at": "2019-07-02T05:51:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having some trouble with the name parameter of a container object not updating when I rename the container. The following code:\r\n~~~~\r\n#!/usr/bin/env python3\r\nimport docker\r\nc = docker.from_env()\r\ncontainer = c.containers.get(container_id=\"ab934aa23c4c\")\r\nprint(container.name)\r\ncontainer.rename(name=\"main_db_new\")\r\nprint(container.name)\r\n~~~~\r\nShould print (assuming the container is named \"main_db\"):\r\n~~~~\r\nmain_db\r\nmain_db_new\r\n~~~~\r\nInstead it prints:\r\n~~~~\r\nmain_db\r\nmain_db\r\n~~~~\r\n\r\nI'm running docker-py on:\r\nDocker, Python and SDK versions:\r\n~~~~\r\ndocker==4.0.2\r\ndocker-pycreds==0.4.0\r\nPython 3.6.8\r\nClient:\r\n Version:           18.09.5\r\n API version:       1.39\r\n Go version:        go1.10.4\r\n Git commit:        e8ff056\r\n Built:             Thu May  9 23:11:19 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.09.5\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.4\r\n  Git commit:       e8ff056\r\n  Built:            Thu May  9 22:59:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n~~~~\r\n\r\nOS: Ubuntu 18.04.2 LTS (fully updated as of today)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2358", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2358/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2358/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2358/events", "html_url": "https://github.com/docker/docker-py/issues/2358", "id": 455462574, "node_id": "MDU6SXNzdWU0NTU0NjI1NzQ=", "number": 2358, "title": "Running a docker container with low level API", "user": {"login": "LukeJohnson29", "id": 37915456, "node_id": "MDQ6VXNlcjM3OTE1NDU2", "avatar_url": "https://avatars2.githubusercontent.com/u/37915456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeJohnson29", "html_url": "https://github.com/LukeJohnson29", "followers_url": "https://api.github.com/users/LukeJohnson29/followers", "following_url": "https://api.github.com/users/LukeJohnson29/following{/other_user}", "gists_url": "https://api.github.com/users/LukeJohnson29/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeJohnson29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeJohnson29/subscriptions", "organizations_url": "https://api.github.com/users/LukeJohnson29/orgs", "repos_url": "https://api.github.com/users/LukeJohnson29/repos", "events_url": "https://api.github.com/users/LukeJohnson29/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeJohnson29/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-12T23:07:47Z", "updated_at": "2019-06-12T23:46:35Z", "closed_at": "2019-06-12T23:46:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm unsure about how exactly you run a container with the low level API. I tried a more complex one that I created a port configuration and host configuration for and it didn't appear to work. After that I tried running the 'hello-world' image and even that appears to not run. I am using the 'client.create_container('hello-world')' method like that. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2356", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2356/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2356/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2356/events", "html_url": "https://github.com/docker/docker-py/issues/2356", "id": 453627467, "node_id": "MDU6SXNzdWU0NTM2Mjc0Njc=", "number": 2356, "title": "How to create a mount point in a docker container.", "user": {"login": "LukeJohnson29", "id": 37915456, "node_id": "MDQ6VXNlcjM3OTE1NDU2", "avatar_url": "https://avatars2.githubusercontent.com/u/37915456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeJohnson29", "html_url": "https://github.com/LukeJohnson29", "followers_url": "https://api.github.com/users/LukeJohnson29/followers", "following_url": "https://api.github.com/users/LukeJohnson29/following{/other_user}", "gists_url": "https://api.github.com/users/LukeJohnson29/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeJohnson29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeJohnson29/subscriptions", "organizations_url": "https://api.github.com/users/LukeJohnson29/orgs", "repos_url": "https://api.github.com/users/LukeJohnson29/repos", "events_url": "https://api.github.com/users/LukeJohnson29/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeJohnson29/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-07T17:53:33Z", "updated_at": "2019-06-12T23:04:10Z", "closed_at": "2019-06-12T23:03:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been trying to figure out how to create a container and mount volumes to it. I followed the documentation in Low Level API and I get this error.\r\n\r\nAttributeError: 'DockerClient' object has no attribute 'create_container' In Docker SDK for Python 2.0, this method is now on the object APIClient. See the low-level API section of the documentation for more details.\r\n\r\nIt appears that the documentation is out of date. I want to create volumes with user chosen names in user chosen file paths on the host system, but I can't find the correct way to do this.\r\n\r\nCurrently I'm creating binds and trying to create a container using types.HostConfig.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2350", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2350/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2350/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2350/events", "html_url": "https://github.com/docker/docker-py/issues/2350", "id": 447685992, "node_id": "MDU6SXNzdWU0NDc2ODU5OTI=", "number": 2350, "title": "Wait for client.containers.run to finish creating the image.", "user": {"login": "kierun", "id": 3079575, "node_id": "MDQ6VXNlcjMwNzk1NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3079575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierun", "html_url": "https://github.com/kierun", "followers_url": "https://api.github.com/users/kierun/followers", "following_url": "https://api.github.com/users/kierun/following{/other_user}", "gists_url": "https://api.github.com/users/kierun/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierun/subscriptions", "organizations_url": "https://api.github.com/users/kierun/orgs", "repos_url": "https://api.github.com/users/kierun/repos", "events_url": "https://api.github.com/users/kierun/events{/privacy}", "received_events_url": "https://api.github.com/users/kierun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-23T14:10:19Z", "updated_at": "2019-06-04T06:58:56Z", "closed_at": "2019-06-04T06:58:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using `containers.run` with `detach=True` since I need to be able to continue my script -- this is part of a [behave](https://behave.readthedocs.io/en/latest/) script. A `Given` step creates a container than is then used by a `when` step to do something.\r\n\r\nHowever, I cannot fathom how to have my code wait for the docker container to be ready to accept data/commands. At the moment, I have an ugly `sleep(60)` in there which clearly is the *wrong way to do it*.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2342", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2342/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2342/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2342/events", "html_url": "https://github.com/docker/docker-py/issues/2342", "id": 445311541, "node_id": "MDU6SXNzdWU0NDUzMTE1NDE=", "number": 2342, "title": "Only first word of command is sent to the image", "user": {"login": "shadowrylander", "id": 12785394, "node_id": "MDQ6VXNlcjEyNzg1Mzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/12785394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shadowrylander", "html_url": "https://github.com/shadowrylander", "followers_url": "https://api.github.com/users/shadowrylander/followers", "following_url": "https://api.github.com/users/shadowrylander/following{/other_user}", "gists_url": "https://api.github.com/users/shadowrylander/gists{/gist_id}", "starred_url": "https://api.github.com/users/shadowrylander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shadowrylander/subscriptions", "organizations_url": "https://api.github.com/users/shadowrylander/orgs", "repos_url": "https://api.github.com/users/shadowrylander/repos", "events_url": "https://api.github.com/users/shadowrylander/events{/privacy}", "received_events_url": "https://api.github.com/users/shadowrylander/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-17T07:52:22Z", "updated_at": "2019-05-17T20:22:57Z", "closed_at": "2019-05-17T20:22:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp; It appears as though only the first word of the command is being sent to the image, and nothing else, when used both in a script, and on the interpreter; this is one such instance, where the test commands are commented out:\r\n```python\r\nclient.containers.run(\r\n\t\tf\"shadowrylander/melmetal:{tag}\",\r\n\t\tcommand,\r\n                # \"du -sh\",\r\n                # \"du -sh\".split(),\r\n                # [\"du\", \"-sh\"],\r\n\t\tenvironment=envList,\r\n\t\tremove=True,\r\n\t\tvolumes=d.volumes,\r\n\t)\r\n```\r\nThis is my `Dockerfile`:\r\n```\r\nFROM python:3.7.3-alpine3.9\r\nUSER root\r\nENTRYPOINT [\"/bin/sh\", \"-c\"]\r\nCOPY . /tmp/meltan\r\n########\r\n# Set Up Docker-in-Docker\r\nRUN apk update; \\\r\n    apk add --no-cache \\\r\n\t\tca-certificates\r\n########\r\n# set up nsswitch.conf for Go's \"netgo\" implementation (which Docker explicitly uses)\r\n# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149\r\n# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275\r\n# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf\r\nRUN [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf\r\n########\r\nENV DOCKER_CHANNEL test\r\nENV DOCKER_VERSION 19.03.0-beta3\r\n# TODO ENV DOCKER_SHA256\r\n# https://github.com/docker/docker-ce/blob/5b073ee2cf564edee5adca05eee574142f7627bb/components/packaging/static/hash_files !!\r\n# (no SHA file artifacts on download.docker.com yet as of 2017-06-07 though)\r\n########\r\nRUN set -eux; \\\r\n\t\\\r\n# this \"case\" statement is generated via \"update.sh\"\r\n\tapkArch=\"$(apk --print-arch)\"; \\\r\n\tcase \"$apkArch\" in \\\r\n\t\tx86_64) dockerArch='x86_64' ;; \\\r\n\t\tarmhf) dockerArch='armel' ;; \\\r\n\t\taarch64) dockerArch='aarch64' ;; \\\r\n\t\tppc64le) dockerArch='ppc64le' ;; \\\r\n\t\ts390x) dockerArch='s390x' ;; \\\r\n\t\t*) echo >&2 \"error: unsupported architecture ($apkArch)\"; exit 1 ;;\\\r\n\tesac; \\\r\n\t\\\r\n\tif ! wget -O docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz\"; then \\\r\n\t\techo >&2 \"error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'\"; \\\r\n\t\texit 1; \\\r\n\tfi; \\\r\n\t\\\r\n\ttar --extract \\\r\n\t\t--file docker.tgz \\\r\n\t\t--strip-components 1 \\\r\n\t\t--directory /usr/local/bin/ \\\r\n\t; \\\r\n\trm docker.tgz; \\\r\n\t\\\r\n\tdockerd --version; \\\r\n\tdocker --version\r\n########\r\nCOPY modprobe.sh /usr/local/bin/modprobe\r\nCOPY docker-entrypoint.sh /usr/local/bin/\r\n########\r\n# Download the necesary tools\r\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories; \\\r\n    apk update; \\\r\n    apk add --no-cache git \\\r\n                       mercurial \\\r\n                       make \\\r\n                       automake \\\r\n                       gcc \\\r\n                       g++ \\\r\n                       subversion \\\r\n                       python3-dev \\\r\n                       fd; \\\r\n    # pip install --no-cache-dir meltan; \\\r\n    pip install /tmp/meltan; \\\r\n    ln -s /usr/local/lib/python3.7/site-packages/meltan.py /usr/bin/meltan; \\\r\n########\r\n# Run Clean-up\r\n    rm -rf /var/cache/apk/* \\\r\n           /root/.cache/pip/*\r\n```\r\n&nbsp;&nbsp;&nbsp;&nbsp; However, when I run the same thing being passed to the module from the command line, it works fine, as does use of another image such as `alpine`. In addition, if I change `ENTRYPOINT` to `CMD`, the situation reverses, and I can run the command in the module, but not on the command line, with the error coming out as:\r\n```\r\ndocker: Error response from daemon: OCI runtime create failed: container_linux.go:344: starting container process caused \"exec: \\\"pip show meltan\\\": executable file not found in $PATH\": unknown.\r\n```\r\nIf I try overriding the entrypoint from the command line as `/bin/sh -c`, I get:\r\n```\r\ndocker: Error response from daemon: OCI runtime create failed: container_linux.go:344: starting container process caused \"exec: \\\"/bin/sh -c\\\": stat /bin/sh -c: no such file or directory\": unknown.\r\n```\r\nwhile overriding it simply as `/bin/sh` gets me:\r\n```\r\n/bin/sh: can't open 'pip show meltan': No such file or directory\r\n```\r\n&nbsp;&nbsp;&nbsp;&nbsp; I am unsure as to whether it is a problem with the `Dockerfile`, or otherwise; how might I go about fixing this? <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp; Thank you kindly for the help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2338", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2338/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2338/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2338/events", "html_url": "https://github.com/docker/docker-py/issues/2338", "id": 443740355, "node_id": "MDU6SXNzdWU0NDM3NDAzNTU=", "number": 2338, "title": "Can not list containers using multiple labels by containers.list()", "user": {"login": "GodQ", "id": 1920231, "node_id": "MDQ6VXNlcjE5MjAyMzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1920231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GodQ", "html_url": "https://github.com/GodQ", "followers_url": "https://api.github.com/users/GodQ/followers", "following_url": "https://api.github.com/users/GodQ/following{/other_user}", "gists_url": "https://api.github.com/users/GodQ/gists{/gist_id}", "starred_url": "https://api.github.com/users/GodQ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GodQ/subscriptions", "organizations_url": "https://api.github.com/users/GodQ/orgs", "repos_url": "https://api.github.com/users/GodQ/repos", "events_url": "https://api.github.com/users/GodQ/events{/privacy}", "received_events_url": "https://api.github.com/users/GodQ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-14T06:53:34Z", "updated_at": "2019-08-21T15:13:22Z", "closed_at": "2019-08-21T15:13:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "By command, we can use many --filter to specify many labels for \"docker ps\". But containers.list() did not show this option to specify multiple labels. How to use multiple lables?\r\n\r\n`    def list(self, all=False, before=None, filters=None, limit=-1, since=None,\r\n             sparse=False, ignore_removed=False):\r\n        \"\"\"\r\n        List containers. Similar to the ``docker ps`` command.\r\n\r\n        Args:\r\n            all (bool): Show all containers. Only running containers are shown\r\n                by default\r\n            since (str): Show only containers created since Id or Name, include\r\n                non-running ones\r\n            before (str): Show only container created before Id or Name,\r\n                include non-running ones\r\n            limit (int): Show `limit` last created containers, include\r\n                non-running ones\r\n            filters (dict): Filters to be processed on the image list.\r\n                Available filters:\r\n\r\n                - `exited` (int): Only containers with specified exit code\r\n                - `status` (str): One of ``restarting``, ``running``,\r\n                    ``paused``, ``exited``\r\n                - `label` (str): format either ``\"key\"`` or ``\"key=value\"``\r\n                - `id` (str): The id of the container.\r\n                - `name` (str): The name of the container.\r\n                - `ancestor` (str): Filter by container ancestor. Format of\r\n                    ``<image-name>[:tag]``, ``<image-id>``, or\r\n                    ``<image@digest>``.\r\n                - `before` (str): Only containers created before a particular\r\n                    container. Give the container name or id.\r\n                - `since` (str): Only containers created after a particular\r\n                    container. Give container name or id.\r\n\r\n                A comprehensive list can be found in the documentation for\r\n                `docker ps\r\n                <https://docs.docker.com/engine/reference/commandline/ps>`_.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2334", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2334/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2334/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2334/events", "html_url": "https://github.com/docker/docker-py/issues/2334", "id": 441658178, "node_id": "MDU6SXNzdWU0NDE2NTgxNzg=", "number": 2334, "title": "Does this tool support access_key, secret_key???", "user": {"login": "lanyyyy", "id": 4739622, "node_id": "MDQ6VXNlcjQ3Mzk2MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4739622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lanyyyy", "html_url": "https://github.com/lanyyyy", "followers_url": "https://api.github.com/users/lanyyyy/followers", "following_url": "https://api.github.com/users/lanyyyy/following{/other_user}", "gists_url": "https://api.github.com/users/lanyyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lanyyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lanyyyy/subscriptions", "organizations_url": "https://api.github.com/users/lanyyyy/orgs", "repos_url": "https://api.github.com/users/lanyyyy/repos", "events_url": "https://api.github.com/users/lanyyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/lanyyyy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-08T10:15:01Z", "updated_at": "2019-05-08T10:18:45Z", "closed_at": "2019-05-08T10:18:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use obs service\uff0c it recommend me to user access_key and secret_key\u3002\u3002\u3002\r\nSo Does this tool support aksk to login/push???", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2323", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2323/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2323/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2323/events", "html_url": "https://github.com/docker/docker-py/issues/2323", "id": 438327242, "node_id": "MDU6SXNzdWU0MzgzMjcyNDI=", "number": 2323, "title": "Pass a file to container using exec_run", "user": {"login": "junaidrazzaq", "id": 19252436, "node_id": "MDQ6VXNlcjE5MjUyNDM2", "avatar_url": "https://avatars0.githubusercontent.com/u/19252436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junaidrazzaq", "html_url": "https://github.com/junaidrazzaq", "followers_url": "https://api.github.com/users/junaidrazzaq/followers", "following_url": "https://api.github.com/users/junaidrazzaq/following{/other_user}", "gists_url": "https://api.github.com/users/junaidrazzaq/gists{/gist_id}", "starred_url": "https://api.github.com/users/junaidrazzaq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junaidrazzaq/subscriptions", "organizations_url": "https://api.github.com/users/junaidrazzaq/orgs", "repos_url": "https://api.github.com/users/junaidrazzaq/repos", "events_url": "https://api.github.com/users/junaidrazzaq/events{/privacy}", "received_events_url": "https://api.github.com/users/junaidrazzaq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-29T13:52:45Z", "updated_at": "2019-06-17T03:29:57Z", "closed_at": "2019-06-17T03:29:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I pass a file to container using `exec_run` function.\r\n\r\nI want to replicate the following docker exec command:\r\n\r\n`docker exec -i -u postgres <Insert the id find above> pg_restore -C -d postgres < filename`\r\n\r\nAbove command loads a postgres backup. `filename` is the name of the file and resides on host machine from which exec command is being run.\r\n\r\nI am trying this:\r\n\r\n```\r\ncontainers[0].exec_run(\"/bin/bash -c 'pg_restore -C -d postgres <'\" + filename, stdout=True, stderr=True, user='postgres')\r\nprint(exec_log[1])\r\n```\r\n\r\nHere the file resides inside another docker container in which a python application is running which uses python docker client.\r\n\r\nI am getting this:\r\n`b'/bin/bash: 2019-04-29-postgres_db.dump: No such file or directory\\n'`\r\n\r\nI have looked into `put_archive` but that would require extracting the file inside the container. Is there a way of doing this using `exec_run` or any other simpler way?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2321", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2321/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2321/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2321/events", "html_url": "https://github.com/docker/docker-py/issues/2321", "id": 437826065, "node_id": "MDU6SXNzdWU0Mzc4MjYwNjU=", "number": 2321, "title": "docker.errors.InvalidVersion: Health options were only introduced in API version 1.24 with all packages updated", "user": {"login": "FedeG", "id": 4097554, "node_id": "MDQ6VXNlcjQwOTc1NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4097554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedeG", "html_url": "https://github.com/FedeG", "followers_url": "https://api.github.com/users/FedeG/followers", "following_url": "https://api.github.com/users/FedeG/following{/other_user}", "gists_url": "https://api.github.com/users/FedeG/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedeG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedeG/subscriptions", "organizations_url": "https://api.github.com/users/FedeG/orgs", "repos_url": "https://api.github.com/users/FedeG/repos", "events_url": "https://api.github.com/users/FedeG/events{/privacy}", "received_events_url": "https://api.github.com/users/FedeG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-26T20:04:49Z", "updated_at": "2019-04-26T21:15:43Z", "closed_at": "2019-04-26T21:15:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have a error when docker-compose try run a container with healthcheck.\r\n\r\nI added a pdb to docker-py file for check value of `version` variable and it was `1.23` value but I has updated all packages\r\n\r\nFull log:\r\n```bash\r\nERROR: for redis  Health options were only introduced in API version 1.24\r\nTraceback (most recent call last):\r\n  File \"/home/fedeg/.local/bin/docker-compose\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/cli/main.py\", line 71, in main\r\n    command()\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/cli/main.py\", line 127, in perform_command\r\n    handler(command, command_options)\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/cli/main.py\", line 1085, in up\r\n    to_attach = up(False)\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/cli/main.py\", line 1081, in up\r\n    silent=options.get('--quiet-pull'),\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/project.py\", line 555, in up\r\n    get_deps,\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/parallel.py\", line 112, in parallel_execute\r\n    raise error_to_reraise\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/parallel.py\", line 210, in producer\r\n    result = func(obj)\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/project.py\", line 541, in do\r\n    renew_anonymous_volumes=renew_anonymous_volumes,\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/service.py\", line 533, in execute_convergence_plan\r\n    scale, detached, start\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/service.py\", line 455, in _execute_convergence_create\r\n    \"Creating\"\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/parallel.py\", line 112, in parallel_execute\r\n    raise error_to_reraise\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/parallel.py\", line 210, in producer\r\n    result = func(obj)\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/service.py\", line 453, in <lambda>\r\n    lambda service_name: create_and_start(self, service_name.number),\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/service.py\", line 441, in create_and_start\r\n    container = service.create_container(number=n, quiet=True)\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/service.py\", line 337, in create_container\r\n    return Container.create(self.client, **container_options)\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/compose/container.py\", line 52, in create\r\n    response = client.create_container(**options)\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/docker/api/container.py\", line 425, in create_container\r\n    stop_timeout, runtime\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/docker/api/container.py\", line 430, in create_container_config\r\n    return ContainerConfig(self._version, *args, **kwargs)\r\n  File \"/home/fedeg/.local/lib/python3.6/site-packages/docker/types/containers.py\", line 575, in __init__\r\n    'Health options were only introduced in API version 1.24'\r\ndocker.errors.InvalidVersion: Health options were only introduced in API version 1.24\r\n```\r\n\r\n### Versions\r\n\r\n#### docker-compose version\r\n```bash\r\ndocker-compose version 1.24.0, build 0aa5906\r\ndocker-py version: 3.7.2\r\nCPython version: 3.6.7\r\nOpenSSL version: OpenSSL 1.1.0g  2 Nov 2017\r\n```\r\n\r\n#### docker version        \r\n```bash\r\nClient:\r\n Version:           18.09.5\r\n API version:       1.39\r\n Go version:        go1.10.8\r\n Git commit:        e8ff056\r\n Built:             Thu Apr 11 04:43:57 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.5\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.8\r\n  Git commit:       e8ff056\r\n  Built:            Thu Apr 11 04:10:53 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2319", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2319/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2319/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2319/events", "html_url": "https://github.com/docker/docker-py/issues/2319", "id": 437680285, "node_id": "MDU6SXNzdWU0Mzc2ODAyODU=", "number": 2319, "title": "Logging in with the SDK does not work with native docker-compose command", "user": {"login": "gleerman", "id": 5098787, "node_id": "MDQ6VXNlcjUwOTg3ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5098787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gleerman", "html_url": "https://github.com/gleerman", "followers_url": "https://api.github.com/users/gleerman/followers", "following_url": "https://api.github.com/users/gleerman/following{/other_user}", "gists_url": "https://api.github.com/users/gleerman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gleerman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gleerman/subscriptions", "organizations_url": "https://api.github.com/users/gleerman/orgs", "repos_url": "https://api.github.com/users/gleerman/repos", "events_url": "https://api.github.com/users/gleerman/events{/privacy}", "received_events_url": "https://api.github.com/users/gleerman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-26T13:44:22Z", "updated_at": "2019-04-29T07:19:28Z", "closed_at": "2019-04-29T07:19:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Version**\r\nI'm on macOS 10.14.4\r\n```\r\n$ pip freeze | grep docker && python --version && docker version\r\nYou are using pip version 9.0.1, however version 19.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\ndocker==3.7.2\r\ndocker-compose==1.21.2\r\ndocker-pycreds==0.4.0\r\ndockerpty==0.4.1\r\nPython 2.7.10\r\nClient: Docker Engine - Community\r\n Version:           18.09.2\r\n API version:       1.39\r\n Go version:        go1.10.8\r\n Git commit:        6247962\r\n Built:             Sun Feb 10 04:12:39 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.2\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.6\r\n  Git commit:       6247962\r\n  Built:            Sun Feb 10 04:13:06 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n**Steps to reproduce**\r\n```\r\n$ python\r\n>>> import docker, subprocess, sys\r\n>>> docker_client = docker.from_env()\r\n>>> creds = { \"domain\": \"insertdomainhere\", \"user\": \"insertusernamehere\", \"password\": \"insertpasswordhere\" }\r\n>>> docker_client.login(registry = creds['domain'], username = creds['user'], password = creds['password'])\r\n{u'IdentityToken': u'', u'Status': u'Login Succeeded'}\r\n>>> cmd = \"docker-compose pull some-service-on-a-private-registry\"\r\n>>> proc = subprocess.call([cmd], stdout=sys.stdout, stderr=sys.stderr, shell=True)\r\n```\r\n\r\nI would expect the SDK to login system-wide, since it uses `docker.from_env()`.. However, the result is an authentication error:\r\n```\r\n{\"errors\":[{\"code\":\"UNAUTHORIZED\",\"message\":\"authentication required\"}]}\r\n```\r\n\r\nIf my assumption is incorrect, how would you recommend to use this SDK in combination with Docker Compose? Should I perform native calls for logging in?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2306", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2306/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2306/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2306/events", "html_url": "https://github.com/docker/docker-py/issues/2306", "id": 428551508, "node_id": "MDU6SXNzdWU0Mjg1NTE1MDg=", "number": 2306, "title": "exec_run don't close the file descriptor", "user": {"login": "zom3y3", "id": 13365831, "node_id": "MDQ6VXNlcjEzMzY1ODMx", "avatar_url": "https://avatars2.githubusercontent.com/u/13365831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zom3y3", "html_url": "https://github.com/zom3y3", "followers_url": "https://api.github.com/users/zom3y3/followers", "following_url": "https://api.github.com/users/zom3y3/following{/other_user}", "gists_url": "https://api.github.com/users/zom3y3/gists{/gist_id}", "starred_url": "https://api.github.com/users/zom3y3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zom3y3/subscriptions", "organizations_url": "https://api.github.com/users/zom3y3/orgs", "repos_url": "https://api.github.com/users/zom3y3/repos", "events_url": "https://api.github.com/users/zom3y3/events{/privacy}", "received_events_url": "https://api.github.com/users/zom3y3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-03T03:47:28Z", "updated_at": "2019-07-16T17:16:24Z", "closed_at": "2019-07-10T01:57:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my test code.\r\n\r\n\r\n\r\nimport docker\r\nclient = docker.from_env()\r\ncontainer = client.containers.run(\"ubuntu\", network_disabled=False, detach=True, auto_remove=True, remove=True)\r\nexit_code, output = container.exec_run(\"ps\")\r\n\r\n\r\n\r\nI use \"exec_run\" to execute the system command, but the file descriptor won't be closed, and it will cause file descriptors leak problem.\r\n\r\nMaybe you should close the websocket after call \"exec_run\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2305", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2305/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2305/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2305/events", "html_url": "https://github.com/docker/docker-py/issues/2305", "id": 428269720, "node_id": "MDU6SXNzdWU0MjgyNjk3MjA=", "number": 2305, "title": "Unexpected behavior with docker exec_run", "user": {"login": "gabrieloandco", "id": 22502671, "node_id": "MDQ6VXNlcjIyNTAyNjcx", "avatar_url": "https://avatars1.githubusercontent.com/u/22502671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabrieloandco", "html_url": "https://github.com/gabrieloandco", "followers_url": "https://api.github.com/users/gabrieloandco/followers", "following_url": "https://api.github.com/users/gabrieloandco/following{/other_user}", "gists_url": "https://api.github.com/users/gabrieloandco/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabrieloandco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabrieloandco/subscriptions", "organizations_url": "https://api.github.com/users/gabrieloandco/orgs", "repos_url": "https://api.github.com/users/gabrieloandco/repos", "events_url": "https://api.github.com/users/gabrieloandco/events{/privacy}", "received_events_url": "https://api.github.com/users/gabrieloandco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-02T14:42:51Z", "updated_at": "2019-04-02T18:12:34Z", "closed_at": "2019-04-02T18:12:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "For the software I'm developing I get two different outputs when using from the shell 'docker exec -t <command>' and container.exec_run('<command>,  tty=True). The desired output is the one ran from the shell. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2302", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2302/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2302/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2302/events", "html_url": "https://github.com/docker/docker-py/issues/2302", "id": 427445013, "node_id": "MDU6SXNzdWU0Mjc0NDUwMTM=", "number": 2302, "title": "Connection refused when running pytest", "user": {"login": "vkartik97", "id": 3920286, "node_id": "MDQ6VXNlcjM5MjAyODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3920286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vkartik97", "html_url": "https://github.com/vkartik97", "followers_url": "https://api.github.com/users/vkartik97/followers", "following_url": "https://api.github.com/users/vkartik97/following{/other_user}", "gists_url": "https://api.github.com/users/vkartik97/gists{/gist_id}", "starred_url": "https://api.github.com/users/vkartik97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vkartik97/subscriptions", "organizations_url": "https://api.github.com/users/vkartik97/orgs", "repos_url": "https://api.github.com/users/vkartik97/repos", "events_url": "https://api.github.com/users/vkartik97/events{/privacy}", "received_events_url": "https://api.github.com/users/vkartik97/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-31T20:56:56Z", "updated_at": "2019-04-03T06:56:35Z", "closed_at": "2019-04-03T06:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have made an application where I am using Docker to push and image:\r\n```python\r\n    .\r\n    .\r\n    .\r\n    docker_client = docker.from_env()\r\n    a = docker_client.containers.list()                 #Error on this line\r\n```\r\nI am getting \r\n```\r\n<Result ConnectionError('Connection refused: GET http+docker://localhost/v1.35/containers/json?limit=-1&all=0&size=0&trunc_cmd=0',)>.exit_code\r\n```\r\n when running \r\n```sh\r\n$ py.test -s --cov . --cov-config .coveragerc\r\n```\r\nbut is working perfectly when executing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2294", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2294/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2294/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2294/events", "html_url": "https://github.com/docker/docker-py/issues/2294", "id": 426167609, "node_id": "MDU6SXNzdWU0MjYxNjc2MDk=", "number": 2294, "title": "AttributeError: 'module' object has no attribute 'PY34'", "user": {"login": "Lerring", "id": 22547713, "node_id": "MDQ6VXNlcjIyNTQ3NzEz", "avatar_url": "https://avatars0.githubusercontent.com/u/22547713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lerring", "html_url": "https://github.com/Lerring", "followers_url": "https://api.github.com/users/Lerring/followers", "following_url": "https://api.github.com/users/Lerring/following{/other_user}", "gists_url": "https://api.github.com/users/Lerring/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lerring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lerring/subscriptions", "organizations_url": "https://api.github.com/users/Lerring/orgs", "repos_url": "https://api.github.com/users/Lerring/repos", "events_url": "https://api.github.com/users/Lerring/events{/privacy}", "received_events_url": "https://api.github.com/users/Lerring/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-27T20:25:48Z", "updated_at": "2019-04-24T14:37:23Z", "closed_at": "2019-03-28T10:25:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "While attempting to build and run this inside a docker container i get errors. Here's my setup:\r\n\r\nContainer image base: Rasbian Jessie\r\n\r\nCommands ran to upgrade python and install:\r\n\r\n> RUN apt-get update && apt-get upgrade -y\r\n> RUN apt-get install build-essential\r\n> RUN apt-get install python3-pip python3-dev\r\n> RUN apt-get install libevent-dev\r\n> RUN apt-get install libffi-dev\r\n> RUN apt-get install libffi6\r\n> RUN apt-get install -y libltdl7\r\n> RUN easy_install -U pip\r\n> RUN pip3 install six\r\n\r\nAnd wheres what i get when importing docker:\r\n\r\n>   File \"/docker_api.py\", line 4, in <module>\r\n>     import docker\r\n>   File \"/usr/local/lib/python3.4/dist-packages/docker/__init__.py\", line 2, in <module>\r\n>     from .api import APIClient\r\n>   File \"/usr/local/lib/python3.4/dist-packages/docker/api/__init__.py\", line 2, in <module>\r\n>     from .client import APIClient\r\n>   File \"/usr/local/lib/python3.4/dist-packages/docker/api/client.py\", line 8, in <module>\r\n>     import websocket\r\n>   File \"/usr/local/lib/python3.4/dist-packages/websocket/__init__.py\", line 23, in <module>\r\n>     from ._app import WebSocketApp\r\n>   File \"/usr/local/lib/python3.4/dist-packages/websocket/_app.py\", line 36, in <module>\r\n>     from ._core import WebSocket, getdefaulttimeout\r\n>   File \"/usr/local/lib/python3.4/dist-packages/websocket/_core.py\", line 34, in <module>\r\n>     from ._handshake import *\r\n>   File \"/usr/local/lib/python3.4/dist-packages/websocket/_handshake.py\", line 40, in <module>\r\n>     if six.PY34:\r\n\r\nIs there any assistance in this matter as i'm not too practiced in python's pip system. Thank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2293", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2293/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2293/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2293/events", "html_url": "https://github.com/docker/docker-py/issues/2293", "id": 426134187, "node_id": "MDU6SXNzdWU0MjYxMzQxODc=", "number": 2293, "title": "client.services.create does not support init option", "user": {"login": "cjolowicz", "id": 653941, "node_id": "MDQ6VXNlcjY1Mzk0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/653941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjolowicz", "html_url": "https://github.com/cjolowicz", "followers_url": "https://api.github.com/users/cjolowicz/followers", "following_url": "https://api.github.com/users/cjolowicz/following{/other_user}", "gists_url": "https://api.github.com/users/cjolowicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjolowicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjolowicz/subscriptions", "organizations_url": "https://api.github.com/users/cjolowicz/orgs", "repos_url": "https://api.github.com/users/cjolowicz/repos", "events_url": "https://api.github.com/users/cjolowicz/events{/privacy}", "received_events_url": "https://api.github.com/users/cjolowicz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64720876, "node_id": "MDU6TGFiZWw2NDcyMDg3Ng==", "url": "https://api.github.com/repos/docker/docker-py/labels/group/api-upgrade", "name": "group/api-upgrade", "color": "fbca04", "default": false, "description": null}, {"id": 70918996, "node_id": "MDU6TGFiZWw3MDkxODk5Ng==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/feature-request", "name": "kind/feature-request", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-27T19:02:47Z", "updated_at": "2019-04-14T22:07:48Z", "closed_at": "2019-04-14T22:07:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "`docker service create` supports an `--init` option since API 1.37.\r\n\r\nhttps://docs.docker.com/engine/reference/commandline/service_create/\r\n\r\nThis option is not yet available in client.services.create.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2286", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2286/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2286/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2286/events", "html_url": "https://github.com/docker/docker-py/issues/2286", "id": 423419467, "node_id": "MDU6SXNzdWU0MjM0MTk0Njc=", "number": 2286, "title": "Docker client.images.pull does not throw error if pull fails", "user": {"login": "jah3xc", "id": 17032571, "node_id": "MDQ6VXNlcjE3MDMyNTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/17032571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jah3xc", "html_url": "https://github.com/jah3xc", "followers_url": "https://api.github.com/users/jah3xc/followers", "following_url": "https://api.github.com/users/jah3xc/following{/other_user}", "gists_url": "https://api.github.com/users/jah3xc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jah3xc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jah3xc/subscriptions", "organizations_url": "https://api.github.com/users/jah3xc/orgs", "repos_url": "https://api.github.com/users/jah3xc/repos", "events_url": "https://api.github.com/users/jah3xc/events{/privacy}", "received_events_url": "https://api.github.com/users/jah3xc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-20T18:53:50Z", "updated_at": "2019-03-21T13:08:47Z", "closed_at": "2019-03-21T13:08:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using docker-py to pull images in my Python script.\r\n\r\nI was seeing that even after pulling, I did not have the updated image.\r\n\r\nAfter manually running `docker pull [img]` from the command line, I see that an `Out of Space On Disk` Error occurred. I removed some old images and re-ran, and everything worked fine.\r\n\r\nWhy does the SDK not throw an exception if the pull fails? If that is the desired behavior, how can I manually check that the pull was successful?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2276", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2276/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2276/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2276/events", "html_url": "https://github.com/docker/docker-py/issues/2276", "id": 421555935, "node_id": "MDU6SXNzdWU0MjE1NTU5MzU=", "number": 2276, "title": "Recv data from exec_start socket", "user": {"login": "RacingDawn", "id": 13477849, "node_id": "MDQ6VXNlcjEzNDc3ODQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/13477849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RacingDawn", "html_url": "https://github.com/RacingDawn", "followers_url": "https://api.github.com/users/RacingDawn/followers", "following_url": "https://api.github.com/users/RacingDawn/following{/other_user}", "gists_url": "https://api.github.com/users/RacingDawn/gists{/gist_id}", "starred_url": "https://api.github.com/users/RacingDawn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RacingDawn/subscriptions", "organizations_url": "https://api.github.com/users/RacingDawn/orgs", "repos_url": "https://api.github.com/users/RacingDawn/repos", "events_url": "https://api.github.com/users/RacingDawn/events{/privacy}", "received_events_url": "https://api.github.com/users/RacingDawn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-15T14:48:33Z", "updated_at": "2019-03-17T15:21:50Z", "closed_at": "2019-03-17T15:21:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "my example is as follows:\r\n- firstly i create the docker client with tls, and the client works.\r\n```\r\ndocker_endpoint='tcp://127.0.0.1:8137'\r\ncert_dir = '/etc/docker/pki/'\r\n        tls_config = TLSConfig(client_cert=(cert_dir + 'cert.pem', cert_dir + 'key.pem'), ca_cert=cert_dir + 'ca.pem',)\r\nself.dockerClient = docker.APIClient(base_url=docker_endpoint, tls=tls_config)\r\n```\r\n- then i create terminal exec\r\n```\r\nexecCommand = [\r\n            \"/bin/sh\", \"-c\",\r\n            'TERM=xterm-256color; export TERM;'\r\n            'export DOCKER_ENDPOINT=%s; export CONTAINER_ID=%s;'\r\n            '[ -x /bin/bash ] && /bin/bash || /bin/sh'\r\n            % (self.base_url, containerId)]\r\n        execOptions = {\r\n            \"tty\": True,\r\n            \"stdin\": True\r\n        }\r\nexecId = self.dockerClient.exec_create(containerId, execCommand, **execOptions)\r\n```\r\n- i get socket by starting the terminal exec\r\n```\r\nstream_tmp = self.dockerClient.exec_start(execId[\"Id\"], socket=True, tty=True)\r\n```\r\n- then i read the data from socket\r\n```\r\ndocker_stream_stdout = stream_tmp.socket.recv(2048)\r\nself.log.error(docker_stream_stdout)\r\nmessage = str(docker_stream_stdout, encoding='utf-8')\r\n```\r\n\r\nthe docker_stream_stdout is b\"\\x17\\x03\\x03\\x00\\xac\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x14Xt\\xce\\xb7\\x82s5` \\x89Q}w^-\\xd8d\\xb2i\\xe7V\\x02\\x7f\\r\\xed\\x85Z\\xcf\\xc1\\xf05\\x8b\\xdfp\\xca\\x8a\\x8a\\x1e\\x9e\\xda\\xba4\\x08L`>\\xebo\\xa25`$\\x88<\\x90<\\xc87\\x81L\\xe6!\\xcc\\xc6\\xec\\xf7\\xe3<l\\xc6\\xd4M\\x1c\\x87*\\x18\\x9c8Z\\x95\\x1b'^\\x8eOi\\xd5\\xc5\\x0c\\xd0c\\xb8\\x863R\\x03\\x81\\x16\\xf6fb\\xbdO\\xb3\\xd6\\\\\\x12\\n3\\x11\\xa0\\xd4\\x1b1\\xdc\\x1d\\xaf\\x18\\x83\\xee\\xa2\\xc7V\\xa4~\\x8c\\x1a\\xc8\\xcew\\xd1\\xa7\\x064P\\xb1l\\xc6\\x8dz\\xe3pu\\xd8\\xef\\x88\\n\\x12bQ\\x95\\x02>\\x12\\x80j\\x1f\\xbbl\\xee\\xdbe\\\\\\x85\"\r\n\r\nthe it can't be encoded by utf-8\r\n\r\nso how to convert the docker_stream_stdout to the really type; or how to read the data from socket in the true way?\r\n\r\nthe log:\r\n![image](https://user-images.githubusercontent.com/13477849/54439685-43283e00-4774-11e9-8c3e-b110158b9874.png)\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2271", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2271/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2271/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2271/events", "html_url": "https://github.com/docker/docker-py/issues/2271", "id": 419553402, "node_id": "MDU6SXNzdWU0MTk1NTM0MDI=", "number": 2271, "title": "volume_driver isn't recognized as a host config keyword argument when using DockerClient API", "user": {"login": "d33jiang", "id": 21371538, "node_id": "MDQ6VXNlcjIxMzcxNTM4", "avatar_url": "https://avatars3.githubusercontent.com/u/21371538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d33jiang", "html_url": "https://github.com/d33jiang", "followers_url": "https://api.github.com/users/d33jiang/followers", "following_url": "https://api.github.com/users/d33jiang/following{/other_user}", "gists_url": "https://api.github.com/users/d33jiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/d33jiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d33jiang/subscriptions", "organizations_url": "https://api.github.com/users/d33jiang/orgs", "repos_url": "https://api.github.com/users/d33jiang/repos", "events_url": "https://api.github.com/users/d33jiang/events{/privacy}", "received_events_url": "https://api.github.com/users/d33jiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-11T16:06:59Z", "updated_at": "2019-03-25T12:24:55Z", "closed_at": "2019-03-25T12:24:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Bug Description\r\nWhen using the `DockerClient` API, the `volume_driver` keyword argument isn't being recognized as a host config keyword argument. The issue is also present in `master`.\r\n\r\n---\r\n\r\n#### Likely Cause\r\nIn docker-py release 3.0.0 \\[[Link 1][bug_release]\\], `volume_driver` was removed as a `APIClient.create_container` keyword argument and was moved to the host configuration. The high-level `DockerClient` API has not been updated in response to this change. \\[[Link 2][impl_logic], [Link 3][impl_config]\\]\r\n\r\n---\r\n\r\n#### Steps to Reproduce\r\n<details>\r\n<summary>Code Snippet</summary>\r\n\r\n```python\r\nimport docker\r\n\r\nclient = docker.from_env()\r\nclient.containers.run(\r\n    image='hello-world',\r\n    command='env',\r\n    volume_driver='nvidia-docker'\r\n)\r\n```\r\n\r\n**Note**: It is not necessary for the specified volume driver to be available when attempting to reproduce the bug.\r\n\r\n**Output**:\r\n```\r\nTraceback (most recent call last):\r\n  File \"~/.PyCharm2018.3/config/scratches/scratch_4.py\", line 7, in <module>\r\n    volume_driver='nvidia-docker'\r\n  File \"~/.conda/envs/lorem-ipsum/lib/python3.7/site-packages/docker/models/containers.py\", line 785, in run\r\n    detach=detach, **kwargs)\r\n  File \"~/.conda/envs/lorem-ipsum/lib/python3.7/site-packages/docker/models/containers.py\", line 843, in create\r\n    resp = self.client.api.create_container(**create_kwargs)\r\nTypeError: create_container() got an unexpected keyword argument 'volume_driver'\r\n```\r\n</details>\r\n\r\n---\r\n\r\n#### Fix\r\nAt [Link 3][impl_config], move `'volume_driver'` from `RUN_CREATE_KWARGS` to `RUN_HOST_CONFIG_KWARGS`.\r\n\r\n#### Temporary Patch\r\n\r\n<details>\r\n<summary>Code Snippet</summary>\r\n\r\n```python\r\ndef _patch_docker_py():\r\n    \"\"\"\r\n    Patch a bug in docker-py.\r\n\r\n    docker-py proposed a breaking change in v3.0.0 and failed to correctly\r\n    implement the change, so 'volume_driver' is processed as a 'create' kwarg\r\n    instead of a 'host config' kwarg.\r\n\r\n    Relevant function: docker.models.containers._create_container_args.\r\n\r\n    \"\"\"\r\n    docker.models.containers.RUN_CREATE_KWARGS.remove('volume_driver')\r\n    docker.models.containers.RUN_HOST_CONFIG_KWARGS.append('volume_driver')\r\n\r\n\r\n_patch_docker_py()\r\n```\r\n</details>\r\n\r\n---\r\n\r\n#### Environment\r\n\r\nOS: Ubuntu 16.04, 64-bit\r\nDocker: 18.03.1-ce\r\nDocker API: 1.37\r\nPython: 3.7.1\r\ndocker-py: 3.7.0\r\n\r\n[bug_release]: https://github.com/docker/docker-py/releases/tag/3.0.0\r\n[impl_logic]: https://github.com/docker/docker-py/blob/3.7.0/docker/models/containers.py#L1025\r\n[impl_config]: https://github.com/docker/docker-py/blob/3.7.0/docker/models/containers.py#L938", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2270", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2270/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2270/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2270/events", "html_url": "https://github.com/docker/docker-py/issues/2270", "id": 418988279, "node_id": "MDU6SXNzdWU0MTg5ODgyNzk=", "number": 2270, "title": "How to test the `wait(condition=\"removed\")` ?", "user": {"login": "Tset-Noitamotua", "id": 5635462, "node_id": "MDQ6VXNlcjU2MzU0NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5635462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tset-Noitamotua", "html_url": "https://github.com/Tset-Noitamotua", "followers_url": "https://api.github.com/users/Tset-Noitamotua/followers", "following_url": "https://api.github.com/users/Tset-Noitamotua/following{/other_user}", "gists_url": "https://api.github.com/users/Tset-Noitamotua/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tset-Noitamotua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tset-Noitamotua/subscriptions", "organizations_url": "https://api.github.com/users/Tset-Noitamotua/orgs", "repos_url": "https://api.github.com/users/Tset-Noitamotua/repos", "events_url": "https://api.github.com/users/Tset-Noitamotua/events{/privacy}", "received_events_url": "https://api.github.com/users/Tset-Noitamotua/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-08T22:51:19Z", "updated_at": "2019-06-20T18:06:36Z", "closed_at": "2019-06-20T18:06:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am referring to [containers.Container.wait](https://docker-py.readthedocs.io/en/stable/containers.html#docker.models.containers.Container.wait).\r\n\r\nHow can the condition 'removed' be tested?\r\n1. When I do stop a container first\r\n2. Then I can wait for condition 'not-running' --> `wait(condition=\"not-running\")`\r\n\r\nBut\r\n1. When I remove a container first and\r\n2. When I try to wait for condition 'removed'  --> `wait(condition=\"removed\")`\r\n3. Then I will get a 404 error - container not found\r\n\r\nSo how/when can  `wait(condition=\"removed\")` be used usefully?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2269", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2269/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2269/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2269/events", "html_url": "https://github.com/docker/docker-py/issues/2269", "id": 418359932, "node_id": "MDU6SXNzdWU0MTgzNTk5MzI=", "number": 2269, "title": "How can I run the next command which is on the basis of the previous command", "user": {"login": "NeverWait", "id": 11639598, "node_id": "MDQ6VXNlcjExNjM5NTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/11639598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeverWait", "html_url": "https://github.com/NeverWait", "followers_url": "https://api.github.com/users/NeverWait/followers", "following_url": "https://api.github.com/users/NeverWait/following{/other_user}", "gists_url": "https://api.github.com/users/NeverWait/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeverWait/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeverWait/subscriptions", "organizations_url": "https://api.github.com/users/NeverWait/orgs", "repos_url": "https://api.github.com/users/NeverWait/repos", "events_url": "https://api.github.com/users/NeverWait/events{/privacy}", "received_events_url": "https://api.github.com/users/NeverWait/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-07T15:09:07Z", "updated_at": "2019-03-07T16:34:22Z", "closed_at": "2019-03-07T16:34:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "such as I only have a  redis docker and I have set the key is 'hi' and the value is 'ha', I write this command\r\n`# -*- coding: utf-8 -*-\r\n\r\nimport docker\r\n\r\nclient = docker.from_env()\r\ndockerList = client.containers.list()[0] \r\nres = dockerList.exec_run(\"redis-cli\")\r\nresCode, resMsg  = res[0], res[1]\r\nif 0 == resCode:\r\n    print(dockerList.exec_run(\"get hi\"))`\r\n\r\nIt printed ' \\\\\"get\\\\\": executable file not found in $PATH\": unknown\\r\\n ', the second command should have been on the basis of the previous command. In fact I have the third and the forth command are on the basis of the previous command, can I reach my goals using docker-py? Thanks lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2268", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2268/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2268/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2268/events", "html_url": "https://github.com/docker/docker-py/issues/2268", "id": 417072999, "node_id": "MDU6SXNzdWU0MTcwNzI5OTk=", "number": 2268, "title": "How to get containers.run(image,detach=False) to print logs into python console?", "user": {"login": "SysEngDan", "id": 11705408, "node_id": "MDQ6VXNlcjExNzA1NDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/11705408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SysEngDan", "html_url": "https://github.com/SysEngDan", "followers_url": "https://api.github.com/users/SysEngDan/followers", "following_url": "https://api.github.com/users/SysEngDan/following{/other_user}", "gists_url": "https://api.github.com/users/SysEngDan/gists{/gist_id}", "starred_url": "https://api.github.com/users/SysEngDan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SysEngDan/subscriptions", "organizations_url": "https://api.github.com/users/SysEngDan/orgs", "repos_url": "https://api.github.com/users/SysEngDan/repos", "events_url": "https://api.github.com/users/SysEngDan/events{/privacy}", "received_events_url": "https://api.github.com/users/SysEngDan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-05T01:38:31Z", "updated_at": "2019-03-05T13:57:06Z", "closed_at": "2019-03-05T13:57:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I execute containers.run(image,detach=False) from a python:3.6 container, the container runs but no logs are printed in the console. If I separately run containers.log or docker logs, I get logs. How can I get these to be returned in the console from my .py script without separately running container.logs()?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2258", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2258/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2258/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2258/events", "html_url": "https://github.com/docker/docker-py/issues/2258", "id": 411416867, "node_id": "MDU6SXNzdWU0MTE0MTY4Njc=", "number": 2258, "title": "How to enter passwords etc for databases", "user": {"login": "patterntrade", "id": 45533621, "node_id": "MDQ6VXNlcjQ1NTMzNjIx", "avatar_url": "https://avatars2.githubusercontent.com/u/45533621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patterntrade", "html_url": "https://github.com/patterntrade", "followers_url": "https://api.github.com/users/patterntrade/followers", "following_url": "https://api.github.com/users/patterntrade/following{/other_user}", "gists_url": "https://api.github.com/users/patterntrade/gists{/gist_id}", "starred_url": "https://api.github.com/users/patterntrade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patterntrade/subscriptions", "organizations_url": "https://api.github.com/users/patterntrade/orgs", "repos_url": "https://api.github.com/users/patterntrade/repos", "events_url": "https://api.github.com/users/patterntrade/events{/privacy}", "received_events_url": "https://api.github.com/users/patterntrade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-18T10:54:30Z", "updated_at": "2019-02-21T07:00:47Z", "closed_at": "2019-02-21T07:00:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2253", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2253/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2253/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2253/events", "html_url": "https://github.com/docker/docker-py/issues/2253", "id": 409097098, "node_id": "MDU6SXNzdWU0MDkwOTcwOTg=", "number": 2253, "title": "ssh", "user": {"login": "xulei890817", "id": 5419347, "node_id": "MDQ6VXNlcjU0MTkzNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5419347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xulei890817", "html_url": "https://github.com/xulei890817", "followers_url": "https://api.github.com/users/xulei890817/followers", "following_url": "https://api.github.com/users/xulei890817/following{/other_user}", "gists_url": "https://api.github.com/users/xulei890817/gists{/gist_id}", "starred_url": "https://api.github.com/users/xulei890817/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xulei890817/subscriptions", "organizations_url": "https://api.github.com/users/xulei890817/orgs", "repos_url": "https://api.github.com/users/xulei890817/repos", "events_url": "https://api.github.com/users/xulei890817/events{/privacy}", "received_events_url": "https://api.github.com/users/xulei890817/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-12T02:58:34Z", "updated_at": "2019-02-12T02:59:40Z", "closed_at": "2019-02-12T02:58:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "any guide to use ssh connection?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2251", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2251/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2251/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2251/events", "html_url": "https://github.com/docker/docker-py/issues/2251", "id": 407397441, "node_id": "MDU6SXNzdWU0MDczOTc0NDE=", "number": 2251, "title": "using ssh protocol gives paramiko.ssh_exception.PasswordRequiredException: Private key file is encrypted", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-06T19:38:07Z", "updated_at": "2019-02-09T13:47:48Z", "closed_at": "2019-02-09T13:47:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to use ssh transport to talk with docker, docker-py chokes with belower error complaining that the private key is encrypted when in reality it should connect succesfully as the key is provided by the ssh agent.\r\n\r\nDocker cli on the other hand works as expected.\r\n\r\n\r\n```\r\nexport DOCKER_HOST=ssh://localhost\r\n#  ^ can as well be another host, it does not matter.\r\n\r\nTraceback (most recent call last):\r\nFile \"./py-docker\", line 5, in <module>\r\nc = docker.from_env()\r\nFile \"/Users/ssbarnea/.pyenv/versions/2.7.15/lib/python2.7/site-packages/docker/client.py\", line 85, in from_env\r\ntimeout=timeout, version=version, **kwargs_from_env(**kwargs)\r\nFile \"/Users/ssbarnea/.pyenv/versions/2.7.15/lib/python2.7/site-packages/docker/client.py\", line 40, in __init__\r\nself.api = APIClient(*args, **kwargs)\r\nFile \"/Users/ssbarnea/.pyenv/versions/2.7.15/lib/python2.7/site-packages/docker/api/client.py\", line 162, in __init__\r\nbase_url, timeout, pool_connections=num_pools\r\nFile \"/Users/ssbarnea/.pyenv/versions/2.7.15/lib/python2.7/site-packages/docker/transport/sshconn.py\", line 84, in __init__\r\nparsed.hostname, parsed.port, parsed.username,\r\nFile \"/Users/ssbarnea/.pyenv/versions/2.7.15/lib/python2.7/site-packages/paramiko/client.py\", line 437, in connect\r\npassphrase,\r\nFile \"/Users/ssbarnea/.pyenv/versions/2.7.15/lib/python2.7/site-packages/paramiko/client.py\", line 749, in _auth\r\nraise saved_exception\r\nparamiko.ssh_exception.PasswordRequiredException: Private key file is encrypted\r\n```\r\n\r\nThis is caused by the fact that current implementation assumes that if `~/.ssh/id_rsa` exists it should be an unencrypted key (which would be something really stupid from securitu point of view).\r\n\r\nI can confirm that the ssh agent is working correctly on the machine and that ssh and docker-cli do have not problem accessing the ssh keys from the agent.\r\n```\r\nssh-add -l\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2250", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2250/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2250/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2250/events", "html_url": "https://github.com/docker/docker-py/issues/2250", "id": 406499617, "node_id": "MDU6SXNzdWU0MDY0OTk2MTc=", "number": 2250, "title": "SSH Tunneling connection to remote Docker Daemon", "user": {"login": "jeanbritz", "id": 3207661, "node_id": "MDQ6VXNlcjMyMDc2NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3207661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeanbritz", "html_url": "https://github.com/jeanbritz", "followers_url": "https://api.github.com/users/jeanbritz/followers", "following_url": "https://api.github.com/users/jeanbritz/following{/other_user}", "gists_url": "https://api.github.com/users/jeanbritz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeanbritz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeanbritz/subscriptions", "organizations_url": "https://api.github.com/users/jeanbritz/orgs", "repos_url": "https://api.github.com/users/jeanbritz/repos", "events_url": "https://api.github.com/users/jeanbritz/events{/privacy}", "received_events_url": "https://api.github.com/users/jeanbritz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-04T20:13:09Z", "updated_at": "2019-05-02T20:16:44Z", "closed_at": "2019-05-02T20:16:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good day!\r\nI want to be able to connect to my remote server using SSH and execute Docker commands on it using the docker-py SDK.\r\nI don't know if it is possible at all, but I have look through the source code and have find an adapter called `SSHAdapter`. I have tried to setup everything correctly on my side, but cannot get a positive response from the Docker Daemon.\r\nYou can follow my setup [here](https://github.com/jeanbritz/pyqt-docker-client/tree/master/example/ssh_connection).\r\nThe readme explains how I setup the SSH on my Windows machine. My Docker is running on Ubuntu Linux 16.04.1 (more accurately Backbox 5.2).\r\nThe example code in `ssh_connection.py` shows how I reproduce or attempt to connect to the Docker Daemon via SSH'ing\r\n\r\n**Python version**\r\n3.7.0\r\n\r\n**Python Requirements:**\r\ndocker==3.7.0\r\ndocker-pycreds==0.4.0\r\nparamiko==2.4.2\r\n\r\n\r\nRunning `ssh_connection.py` on my Windows 10 machine, while running a Backbox VM with docker I produce the following output:\r\n**Console**\r\n[Click here](https://pastebin.com/d54Akc8e)\r\n\r\n**Paramiko Log**\r\n[Click here](https://pastebin.com/ypRivs4X)\r\n\r\nMy docker service file:\r\n```\r\n[Service]\r\nExecStart=\r\nExecStart=/usr/bin/dockerd -H unix:///var/run/docker.sock -H tcp://0.0.0.0:2376\r\n\r\n```\r\nAny idea what I might have missed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2249", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2249/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2249/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2249/events", "html_url": "https://github.com/docker/docker-py/issues/2249", "id": 406094769, "node_id": "MDU6SXNzdWU0MDYwOTQ3Njk=", "number": 2249, "title": "Allow exposing SCTP ports", "user": {"login": "bpascard", "id": 10398629, "node_id": "MDQ6VXNlcjEwMzk4NjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/10398629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpascard", "html_url": "https://github.com/bpascard", "followers_url": "https://api.github.com/users/bpascard/followers", "following_url": "https://api.github.com/users/bpascard/following{/other_user}", "gists_url": "https://api.github.com/users/bpascard/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpascard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpascard/subscriptions", "organizations_url": "https://api.github.com/users/bpascard/orgs", "repos_url": "https://api.github.com/users/bpascard/repos", "events_url": "https://api.github.com/users/bpascard/events{/privacy}", "received_events_url": "https://api.github.com/users/bpascard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64720876, "node_id": "MDU6TGFiZWw2NDcyMDg3Ng==", "url": "https://api.github.com/repos/docker/docker-py/labels/group/api-upgrade", "name": "group/api-upgrade", "color": "fbca04", "default": false, "description": null}, {"id": 40793866, "node_id": "MDU6TGFiZWw0MDc5Mzg2Ng==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/enhancement", "name": "kind/enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-03T14:40:50Z", "updated_at": "2019-03-25T11:04:42Z", "closed_at": "2019-03-25T11:04:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Exposing SCTP ports has been supported in docker since 18.03 but docker-py currently does not support it but instead raises a ValueError.\r\nBecause of this compose doesn't support SCTP either, see the original issue on docker/compose (https://github.com/docker/compose/issues/6294) for more info.\r\n\r\nI think the solution could simply be to add 'sctp' to PORT_SPEC here :\r\nhttps://github.com/docker/docker-py/blob/61bab6379890841f698ed820e464bc00bf2d379d/docker/utils/ports.py#L10\r\n\r\nSadly I can't deliver a proper PR for this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2248", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2248/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2248/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2248/events", "html_url": "https://github.com/docker/docker-py/issues/2248", "id": 405186748, "node_id": "MDU6SXNzdWU0MDUxODY3NDg=", "number": 2248, "title": "Cannot use SSH adapter after close", "user": {"login": "rumpl", "id": 99933, "node_id": "MDQ6VXNlcjk5OTMz", "avatar_url": "https://avatars3.githubusercontent.com/u/99933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rumpl", "html_url": "https://github.com/rumpl", "followers_url": "https://api.github.com/users/rumpl/followers", "following_url": "https://api.github.com/users/rumpl/following{/other_user}", "gists_url": "https://api.github.com/users/rumpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/rumpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rumpl/subscriptions", "organizations_url": "https://api.github.com/users/rumpl/orgs", "repos_url": "https://api.github.com/users/rumpl/repos", "events_url": "https://api.github.com/users/rumpl/events{/privacy}", "received_events_url": "https://api.github.com/users/rumpl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/docker/docker-py/milestones/58", "html_url": "https://github.com/docker/docker-py/milestone/58", "labels_url": "https://api.github.com/repos/docker/docker-py/milestones/58/labels", "id": 4157055, "node_id": "MDk6TWlsZXN0b25lNDE1NzA1NQ==", "number": 58, "title": "3.7.1", "description": "This milestone addresses SSH adapters problems", "creator": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2019-03-20T10:24:34Z", "updated_at": "2019-04-04T08:22:11Z", "due_on": null, "closed_at": "2019-04-04T08:22:11Z"}, "comments": 1, "created_at": "2019-01-31T10:50:33Z", "updated_at": "2019-03-20T10:32:05Z", "closed_at": "2019-03-15T10:23:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When connecting over SSH it is not possible to do other calls after the connection is closed. However we can still make API calls when connecting on a socket, sample code:\r\n\r\n```python\r\nimport docker \r\n\r\nclient = docker.APIClient(base_url='unix://var/run/docker.sock')\r\nprint(client.version()['Version'])\r\nclient.close()\r\nprint(client.version()['Version'])\r\n\r\n\r\nssh_client = docker.APIClient(base_url='ssh://...')\r\nprint(ssh_client.version()['Version'])\r\nssh_client.close()\r\nprint(ssh_client.version()['Version'])\r\n```\r\n\r\nThe output is:\r\n```\r\n18.09.1\r\n18.09.1\r\n18.09.1\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 16, in <module>\r\n    main()\r\n  File \"main.py\", line 13, in main\r\n    print(ssh_client.version()['Version'])\r\n  File \"/Users/djordjelukic/.virtualenvs/test-url/lib/python2.7/site-packages/docker/api/daemon.py\", line 181, in version\r\n    return self._result(self._get(url), json=True)\r\n  File \"/Users/djordjelukic/.virtualenvs/test-url/lib/python2.7/site-packages/docker/utils/decorators.py\", line 46, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/djordjelukic/.virtualenvs/test-url/lib/python2.7/site-packages/docker/api/client.py\", line 225, in _get\r\n    return self.get(url, **self._set_request_timeout(kwargs))\r\n  File \"/Users/djordjelukic/.virtualenvs/test-url/lib/python2.7/site-packages/requests/sessions.py\", line 546, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/Users/djordjelukic/.virtualenvs/test-url/lib/python2.7/site-packages/requests/sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/Users/djordjelukic/.virtualenvs/test-url/lib/python2.7/site-packages/requests/sessions.py\", line 646, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/Users/djordjelukic/.virtualenvs/test-url/lib/python2.7/site-packages/requests/adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"/Users/djordjelukic/.virtualenvs/test-url/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"/Users/djordjelukic/.virtualenvs/test-url/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 354, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 1053, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 1093, in _send_request\r\n    self.endheaders(body)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 1049, in endheaders\r\n    self._send_output(message_body)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 893, in _send_output\r\n    self.send(msg)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py\", line 855, in send\r\n    self.connect()\r\n  File \"/Users/djordjelukic/.virtualenvs/test-url/lib/python2.7/site-packages/docker/transport/sshconn.py\", line 29, in connect\r\n    sock = self.ssh_transport.open_session()\r\nAttributeError: 'NoneType' object has no attribute 'open_session'\r\n```\r\n\r\n`docker-compose` [closes the connection for some reason that I don't quite understand](https://github.com/docker/compose/blob/master/compose/service.py#L1098-L1101) I wander if we should remove it from compose...\r\n\r\nBut in any case I think that the different adapters should work the same way. What do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2246", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2246/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2246/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2246/events", "html_url": "https://github.com/docker/docker-py/issues/2246", "id": 404366416, "node_id": "MDU6SXNzdWU0MDQzNjY0MTY=", "number": 2246, "title": "SSHAdapter pool_connections too big", "user": {"login": "rumpl", "id": 99933, "node_id": "MDQ6VXNlcjk5OTMz", "avatar_url": "https://avatars3.githubusercontent.com/u/99933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rumpl", "html_url": "https://github.com/rumpl", "followers_url": "https://api.github.com/users/rumpl/followers", "following_url": "https://api.github.com/users/rumpl/following{/other_user}", "gists_url": "https://api.github.com/users/rumpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/rumpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rumpl/subscriptions", "organizations_url": "https://api.github.com/users/rumpl/orgs", "repos_url": "https://api.github.com/users/rumpl/repos", "events_url": "https://api.github.com/users/rumpl/events{/privacy}", "received_events_url": "https://api.github.com/users/rumpl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/docker/docker-py/milestones/58", "html_url": "https://github.com/docker/docker-py/milestone/58", "labels_url": "https://api.github.com/repos/docker/docker-py/milestones/58/labels", "id": 4157055, "node_id": "MDk6TWlsZXN0b25lNDE1NzA1NQ==", "number": 58, "title": "3.7.1", "description": "This milestone addresses SSH adapters problems", "creator": {"login": "ulyssessouza", "id": 373485, "node_id": "MDQ6VXNlcjM3MzQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/373485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssessouza", "html_url": "https://github.com/ulyssessouza", "followers_url": "https://api.github.com/users/ulyssessouza/followers", "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions", "organizations_url": "https://api.github.com/users/ulyssessouza/orgs", "repos_url": "https://api.github.com/users/ulyssessouza/repos", "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssessouza/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2019-03-20T10:24:34Z", "updated_at": "2019-04-04T08:22:11Z", "due_on": null, "closed_at": "2019-04-04T08:22:11Z"}, "comments": 6, "created_at": "2019-01-29T16:09:07Z", "updated_at": "2019-03-20T10:31:59Z", "closed_at": "2019-03-15T10:23:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`docker-compose` has an issue when [connecting to a remote daemon over SSH](https://github.com/docker/compose/issues/6463).\r\n\r\n`docker-py` sets the number of connections [to 25](https://github.com/docker/docker-py/blob/f302756599a61d6775fbdf2beab8f1de7e0022c4/docker/api/client.py#L152) which is a problem since `sshd` defines `MaxSessions` to 10 by default.\r\n\r\nMy questions:\r\n* why is the default so high in `docker-py`?\r\n* could `docker-py` set it to lower by default for the SSH transport so that it works out of the box with an ssh server with default configuration? \r\n\r\nIn my tests I had to put the limit (`num_pools` argument for `ApiClient`) to 9, there must be an off-by-one error somewhere in there...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2237", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2237/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2237/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2237/events", "html_url": "https://github.com/docker/docker-py/issues/2237", "id": 401130447, "node_id": "MDU6SXNzdWU0MDExMzA0NDc=", "number": 2237, "title": "Pull multiple images", "user": {"login": "sh7dm", "id": 19504461, "node_id": "MDQ6VXNlcjE5NTA0NDYx", "avatar_url": "https://avatars2.githubusercontent.com/u/19504461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh7dm", "html_url": "https://github.com/sh7dm", "followers_url": "https://api.github.com/users/sh7dm/followers", "following_url": "https://api.github.com/users/sh7dm/following{/other_user}", "gists_url": "https://api.github.com/users/sh7dm/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh7dm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh7dm/subscriptions", "organizations_url": "https://api.github.com/users/sh7dm/orgs", "repos_url": "https://api.github.com/users/sh7dm/repos", "events_url": "https://api.github.com/users/sh7dm/events{/privacy}", "received_events_url": "https://api.github.com/users/sh7dm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-20T19:28:40Z", "updated_at": "2019-01-21T08:06:58Z", "closed_at": "2019-01-21T08:06:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add `pullMultiple` function (e.g. `pullMultiple(['redis', 'ubuntu', 'node'])`) or allow `pull` to accept array, like this: `pull(['redis', 'ubuntu', 'node'])`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2236", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2236/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2236/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2236/events", "html_url": "https://github.com/docker/docker-py/issues/2236", "id": 401088679, "node_id": "MDU6SXNzdWU0MDEwODg2Nzk=", "number": 2236, "title": "Official Node.js API", "user": {"login": "sh7dm", "id": 19504461, "node_id": "MDQ6VXNlcjE5NTA0NDYx", "avatar_url": "https://avatars2.githubusercontent.com/u/19504461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh7dm", "html_url": "https://github.com/sh7dm", "followers_url": "https://api.github.com/users/sh7dm/followers", "following_url": "https://api.github.com/users/sh7dm/following{/other_user}", "gists_url": "https://api.github.com/users/sh7dm/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh7dm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh7dm/subscriptions", "organizations_url": "https://api.github.com/users/sh7dm/orgs", "repos_url": "https://api.github.com/users/sh7dm/repos", "events_url": "https://api.github.com/users/sh7dm/events{/privacy}", "received_events_url": "https://api.github.com/users/sh7dm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-20T11:35:36Z", "updated_at": "2019-01-24T05:09:21Z", "closed_at": "2019-01-24T05:09:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add Node.js API.\r\nP. S. I'm sorry if I submitted this issue to wrong repo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2232", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2232/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2232/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2232/events", "html_url": "https://github.com/docker/docker-py/issues/2232", "id": 400334964, "node_id": "MDU6SXNzdWU0MDAzMzQ5NjQ=", "number": 2232, "title": "client.containers.run() documentation is missing supported options", "user": {"login": "wvaske", "id": 21263825, "node_id": "MDQ6VXNlcjIxMjYzODI1", "avatar_url": "https://avatars3.githubusercontent.com/u/21263825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wvaske", "html_url": "https://github.com/wvaske", "followers_url": "https://api.github.com/users/wvaske/followers", "following_url": "https://api.github.com/users/wvaske/following{/other_user}", "gists_url": "https://api.github.com/users/wvaske/gists{/gist_id}", "starred_url": "https://api.github.com/users/wvaske/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wvaske/subscriptions", "organizations_url": "https://api.github.com/users/wvaske/orgs", "repos_url": "https://api.github.com/users/wvaske/repos", "events_url": "https://api.github.com/users/wvaske/events{/privacy}", "received_events_url": "https://api.github.com/users/wvaske/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-17T15:40:12Z", "updated_at": "2019-01-22T14:06:54Z", "closed_at": "2019-01-22T14:06:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "These options seem to be implemented in containers.py (RUN_HOST_CONFIG_KWARGS) but are not in the documentation for client.containers.run()\r\n\r\ncgroup_parent\r\ncpu_rt_period\r\ncpu_rt_runtime\r\nkernel_memory\r\nlxc_conf\r\nmem_reservation\r\nuts_mode\r\nversion", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2229", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2229/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2229/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2229/events", "html_url": "https://github.com/docker/docker-py/issues/2229", "id": 398997674, "node_id": "MDU6SXNzdWUzOTg5OTc2NzQ=", "number": 2229, "title": "Health property/method for Container object", "user": {"login": "wonderchang", "id": 5114899, "node_id": "MDQ6VXNlcjUxMTQ4OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5114899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wonderchang", "html_url": "https://github.com/wonderchang", "followers_url": "https://api.github.com/users/wonderchang/followers", "following_url": "https://api.github.com/users/wonderchang/following{/other_user}", "gists_url": "https://api.github.com/users/wonderchang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wonderchang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wonderchang/subscriptions", "organizations_url": "https://api.github.com/users/wonderchang/orgs", "repos_url": "https://api.github.com/users/wonderchang/repos", "events_url": "https://api.github.com/users/wonderchang/events{/privacy}", "received_events_url": "https://api.github.com/users/wonderchang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70918996, "node_id": "MDU6TGFiZWw3MDkxODk5Ng==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/feature-request", "name": "kind/feature-request", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-01-14T17:36:33Z", "updated_at": "2019-01-22T16:59:39Z", "closed_at": "2019-01-16T20:54:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to provide some properties or methods related to [HEALTHCHECK](https://docs.docker.com/engine/reference/run/#healthcheck) in Container object? This is convenient to know the HEALTHCHECK result by using much simpler way rather than just calling Low-level API [`inspect_container`](https://docker-py.readthedocs.io/en/stable/api.html#docker.api.container.ContainerApiMixin.inspect_container).\r\n\r\nI found someone had proposed before https://github.com/docker/docker-py/pull/1726 but it's long time ago, so is there any plan?\r\n\r\n---\r\n\r\nAnd I think it is great if there is a method `Container.raise_for_health(timeout)` that can check container itself whether it is healthy or not until timeout. The spec may like below:\r\n\r\n  1. Return `None` when it changes to `healthy` status before timeout\r\n  2. Raise `HealthCheckError` exception when it changes to `unhealthy` status before timeout\r\n  3. Raise `HealthCheckTimeout` exception when it reaches the timeout (still `starting` status)\r\n\r\nThen, the client usage will like,\r\n\r\n```python\r\nclient = docker.from_env()\r\ncontainer = client.containers.run('nginx', healthcheck={'test': 'curl localhost'})\r\ncontainer.raise_for_health(timeout=60)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2225", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2225/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2225/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2225/events", "html_url": "https://github.com/docker/docker-py/issues/2225", "id": 397942183, "node_id": "MDU6SXNzdWUzOTc5NDIxODM=", "number": 2225, "title": "While authenticated, can pull private dockerhub image, but can't get_registry_data() of that same private image", "user": {"login": "paulcdejean", "id": 1987879, "node_id": "MDQ6VXNlcjE5ODc4Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1987879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulcdejean", "html_url": "https://github.com/paulcdejean", "followers_url": "https://api.github.com/users/paulcdejean/followers", "following_url": "https://api.github.com/users/paulcdejean/following{/other_user}", "gists_url": "https://api.github.com/users/paulcdejean/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulcdejean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulcdejean/subscriptions", "organizations_url": "https://api.github.com/users/paulcdejean/orgs", "repos_url": "https://api.github.com/users/paulcdejean/repos", "events_url": "https://api.github.com/users/paulcdejean/events{/privacy}", "received_events_url": "https://api.github.com/users/paulcdejean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793864, "node_id": "MDU6TGFiZWw0MDc5Mzg2NA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/bug", "name": "kind/bug", "color": "fc2929", "default": false, "description": null}, {"id": 499605643, "node_id": "MDU6TGFiZWw0OTk2MDU2NDM=", "url": "https://api.github.com/repos/docker/docker-py/labels/level/apiclient", "name": "level/apiclient", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/docker/docker-py/milestones/57", "html_url": "https://github.com/docker/docker-py/milestone/57", "labels_url": "https://api.github.com/repos/docker/docker-py/milestones/57/labels", "id": 3898174, "node_id": "MDk6TWlsZXN0b25lMzg5ODE3NA==", "number": 57, "title": "4.0.0", "description": null, "creator": {"login": "shin-", "id": 1086876, "node_id": "MDQ6VXNlcjEwODY4NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1086876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shin-", "html_url": "https://github.com/shin-", "followers_url": "https://api.github.com/users/shin-/followers", "following_url": "https://api.github.com/users/shin-/following{/other_user}", "gists_url": "https://api.github.com/users/shin-/gists{/gist_id}", "starred_url": "https://api.github.com/users/shin-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shin-/subscriptions", "organizations_url": "https://api.github.com/users/shin-/orgs", "repos_url": "https://api.github.com/users/shin-/repos", "events_url": "https://api.github.com/users/shin-/events{/privacy}", "received_events_url": "https://api.github.com/users/shin-/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 25, "state": "closed", "created_at": "2018-12-13T22:54:06Z", "updated_at": "2019-10-03T10:26:07Z", "due_on": null, "closed_at": "2019-10-03T10:26:07Z"}, "comments": 4, "created_at": "2019-01-10T17:43:21Z", "updated_at": "2019-04-06T11:33:07Z", "closed_at": "2019-03-26T10:17:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python3\r\ndc = docker.from_env()\r\ndc.login('username', 'password')\r\nprivate_image = dc.images.pull('org/private:staging') # Is successful\r\nprivate_image_registry_info = dc.images.get_registry_data('org/private:staging') #fails\r\n```\r\n\r\n```\r\nrequests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.35/distribution/prg/private:staging/json\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\ndocker.errors.APIError: 500 Server Error: Internal Server Error (\"errors:\r\ndenied: requested access to the resource is denied\r\nunauthorized: authentication required\r\n\")\r\n```\r\n\r\nget_registry_data() for public images works fine.\r\n\r\nIf I remove the login I get `pull access denied for org/private` which is the expected behavior.\r\n\r\nFull stacktrace:\r\n\r\n```<Image: 'org/private:staging'>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/api/client.py\", line 246, in _raise_for_status\r\n    response.raise_for_status()\r\n  File \"/usr/local/lib/python3.6/dist-packages/requests/models.py\", line 940, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.35/distribution/org/private:staging/json\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"../docker_cicd\", line 103, in <module>\r\n    docker_cicd()\r\n  File \"/usr/local/lib/python3.6/dist-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/lib/python3.6/dist-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/lib/python3.6/dist-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"../docker_cicd\", line 60, in docker_cicd\r\n    output_remote = dc.images.get_registry_data('org/private:staging')\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/models/images.py\", line 329, in get_registry_data\r\n    attrs=self.client.api.inspect_distribution(name),\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/utils/decorators.py\", line 34, in wrapper\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/utils/decorators.py\", line 19, in wrapped\r\n    return f(self, resource_id, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/api/image.py\", line 266, in inspect_distribution\r\n    self._get(self._url(\"/distribution/{0}/json\", image)), True\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/api/client.py\", line 252, in _result\r\n    self._raise_for_status(response)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/api/client.py\", line 248, in _raise_for_status\r\n    raise create_api_error_from_http_exception(e)\r\n  File \"/usr/local/lib/python3.6/dist-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\r\n    raise cls(e, response=response, explanation=explanation)\r\ndocker.errors.APIError: 500 Server Error: Internal Server Error (\"errors:\r\ndenied: requested access to the resource is denied\r\nunauthorized: authentication required\r\n\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2220", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2220/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2220/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2220/events", "html_url": "https://github.com/docker/docker-py/issues/2220", "id": 397570641, "node_id": "MDU6SXNzdWUzOTc1NzA2NDE=", "number": 2220, "title": "i can't enter container ?", "user": {"login": "Phoenix1112", "id": 42475284, "node_id": "MDQ6VXNlcjQyNDc1Mjg0", "avatar_url": "https://avatars1.githubusercontent.com/u/42475284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phoenix1112", "html_url": "https://github.com/Phoenix1112", "followers_url": "https://api.github.com/users/Phoenix1112/followers", "following_url": "https://api.github.com/users/Phoenix1112/following{/other_user}", "gists_url": "https://api.github.com/users/Phoenix1112/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phoenix1112/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phoenix1112/subscriptions", "organizations_url": "https://api.github.com/users/Phoenix1112/orgs", "repos_url": "https://api.github.com/users/Phoenix1112/repos", "events_url": "https://api.github.com/users/Phoenix1112/events{/privacy}", "received_events_url": "https://api.github.com/users/Phoenix1112/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-09T21:31:22Z", "updated_at": "2019-01-09T22:37:34Z", "closed_at": "2019-01-09T21:52:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello. i did install vpn server in my vps machine. my vpn server working in docker. I want to enter into the docker but can't enter\r\n\r\nCONTAINER ID--------IMAGE--------------------------------------------COMMAND---------------------- NAMES\r\n178c21ef3157----------v2tec/watchtower------------------------------\"/watchtower --clean..\"---------\"watchtower\r\n118fcccda226-----------quay.io/outline/shadowbox:stable---------\"/bin/sh -c /cmd.sh\"--------------shadowbox\r\n\r\nroot@debian-s-4vcpu-8gb-ams3-01:~# docker exec -it shadowbox bash\r\n\r\nOCI runtime exec failed: exec failed: container_linux.go:348: starting container process caused \"exec: \\\"bash\\\": executable file not found in $PATH\": unknown\r\n\r\n\r\nroot@debian-s-4vcpu-8gb-ams3-01:~# docker exec -it watchtower bash\r\n\r\nOCI runtime exec failed: exec failed: container_linux.go:348: starting container process caused \"exec: \\\"bash\\\": executable file not found in $PATH\": unknown\r\n\r\n\r\nwhhat is problem ? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2215", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2215/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2215/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2215/events", "html_url": "https://github.com/docker/docker-py/issues/2215", "id": 395857458, "node_id": "MDU6SXNzdWUzOTU4NTc0NTg=", "number": 2215, "title": "Using docker-squash throwing error", "user": {"login": "felixsiju", "id": 25767493, "node_id": "MDQ6VXNlcjI1NzY3NDkz", "avatar_url": "https://avatars0.githubusercontent.com/u/25767493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixsiju", "html_url": "https://github.com/felixsiju", "followers_url": "https://api.github.com/users/felixsiju/followers", "following_url": "https://api.github.com/users/felixsiju/following{/other_user}", "gists_url": "https://api.github.com/users/felixsiju/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixsiju/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixsiju/subscriptions", "organizations_url": "https://api.github.com/users/felixsiju/orgs", "repos_url": "https://api.github.com/users/felixsiju/repos", "events_url": "https://api.github.com/users/felixsiju/events{/privacy}", "received_events_url": "https://api.github.com/users/felixsiju/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-04T09:18:02Z", "updated_at": "2019-01-04T10:05:34Z", "closed_at": "2019-01-04T10:05:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "\tstatus = self.client.api.build(path=dockerfilePath, tag='base:latest', extra_hosts=extra_hosts, nocache=True, squash=True)\r\n\r\n        for val in status:\r\n            print (val)\r\n        print  #############################\r\n\r\nError Output\r\n--------------------------------\r\n  File \"docker/api/build.py\", line 259, in build\r\n  File \"docker/utils/decorators.py\", line 46, in inner\r\n  File \"docker/api/client.py\", line 190, in _post\r\n  File \"requests/sessions.py\", line 559, in post\r\n  File \"requests/sessions.py\", line 512, in request\r\n  File \"requests/sessions.py\", line 622, in send\r\n  File \"requests/adapters.py\", line 495, in send\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', error(32, 'Broken pipe'))\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2214", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2214/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2214/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2214/events", "html_url": "https://github.com/docker/docker-py/issues/2214", "id": 394954148, "node_id": "MDU6SXNzdWUzOTQ5NTQxNDg=", "number": 2214, "title": "How to get the exit code of a container?", "user": {"login": "sohail535", "id": 8740782, "node_id": "MDQ6VXNlcjg3NDA3ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8740782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sohail535", "html_url": "https://github.com/sohail535", "followers_url": "https://api.github.com/users/sohail535/followers", "following_url": "https://api.github.com/users/sohail535/following{/other_user}", "gists_url": "https://api.github.com/users/sohail535/gists{/gist_id}", "starred_url": "https://api.github.com/users/sohail535/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sohail535/subscriptions", "organizations_url": "https://api.github.com/users/sohail535/orgs", "repos_url": "https://api.github.com/users/sohail535/repos", "events_url": "https://api.github.com/users/sohail535/events{/privacy}", "received_events_url": "https://api.github.com/users/sohail535/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-31T09:43:28Z", "updated_at": "2019-01-02T06:23:55Z", "closed_at": "2019-01-02T06:23:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, this is more of a question than an issue. \r\n\r\nOnce I have a `Container` object of a container that exited ( possibly from `client.run()` ), how do I get the `exit_code` of that container? I looked at the documentation, it points me to `container.status` attribute, but it only gives a descriptive status of the container.\r\n\r\nI can always do a `subprocess.Popen` and do this\r\n```bash\r\ndocker inspect 61c6 --format='{{.State.ExitCode}}'\r\n```\r\nIf the same data is available through something like `container.exit_code` it would be helpful.\r\nThanks :smile: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2212", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2212/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2212/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2212/events", "html_url": "https://github.com/docker/docker-py/issues/2212", "id": 394525561, "node_id": "MDU6SXNzdWUzOTQ1MjU1NjE=", "number": 2212, "title": "tlsv1 alert protocol version", "user": {"login": "yichinzhu", "id": 7543516, "node_id": "MDQ6VXNlcjc1NDM1MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7543516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichinzhu", "html_url": "https://github.com/yichinzhu", "followers_url": "https://api.github.com/users/yichinzhu/followers", "following_url": "https://api.github.com/users/yichinzhu/following{/other_user}", "gists_url": "https://api.github.com/users/yichinzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichinzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichinzhu/subscriptions", "organizations_url": "https://api.github.com/users/yichinzhu/orgs", "repos_url": "https://api.github.com/users/yichinzhu/repos", "events_url": "https://api.github.com/users/yichinzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/yichinzhu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-28T01:49:56Z", "updated_at": "2019-01-08T07:41:19Z", "closed_at": "2019-01-08T07:41:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "  Related with #963 . New version docker (Docker version: 17.09.0-ce, build afdb6d4, OS system: CentOS 3.10.0-514.el7.x86_64) use tlsv1.2 by default, the docker-py use tls v1.3 instead.  \r\n  \r\nSo I have to set `ssl_version` to `ssl.PROTOCOL_TLSv1_2` or it will raise an error: `SSLError(\"bad handshake: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert protocol version')],)\",)`.\r\nError from docker: `http: TLS handshake error from ****:48442: tls: client offered an unsupported, maximum protocol version of 301`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2210", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2210/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2210/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2210/events", "html_url": "https://github.com/docker/docker-py/issues/2210", "id": 393321119, "node_id": "MDU6SXNzdWUzOTMzMjExMTk=", "number": 2210, "title": "swarm.init() does not return a value", "user": {"login": "jimbochou77", "id": 3030018, "node_id": "MDQ6VXNlcjMwMzAwMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3030018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimbochou77", "html_url": "https://github.com/jimbochou77", "followers_url": "https://api.github.com/users/jimbochou77/followers", "following_url": "https://api.github.com/users/jimbochou77/following{/other_user}", "gists_url": "https://api.github.com/users/jimbochou77/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimbochou77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimbochou77/subscriptions", "organizations_url": "https://api.github.com/users/jimbochou77/orgs", "repos_url": "https://api.github.com/users/jimbochou77/repos", "events_url": "https://api.github.com/users/jimbochou77/events{/privacy}", "received_events_url": "https://api.github.com/users/jimbochou77/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793866, "node_id": "MDU6TGFiZWw0MDc5Mzg2Ng==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/enhancement", "name": "kind/enhancement", "color": "84b6eb", "default": false, "description": null}, {"id": 499605578, "node_id": "MDU6TGFiZWw0OTk2MDU1Nzg=", "url": "https://api.github.com/repos/docker/docker-py/labels/level/dockerclient", "name": "level/dockerclient", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-21T05:27:51Z", "updated_at": "2018-12-29T00:19:34Z", "closed_at": "2018-12-29T00:19:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "No return value unlike as specified in documentation. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2209", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2209/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2209/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2209/events", "html_url": "https://github.com/docker/docker-py/issues/2209", "id": 393197194, "node_id": "MDU6SXNzdWUzOTMxOTcxOTQ=", "number": 2209, "title": "404 error on get_registry_data", "user": {"login": "jetchirag", "id": 15169678, "node_id": "MDQ6VXNlcjE1MTY5Njc4", "avatar_url": "https://avatars1.githubusercontent.com/u/15169678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jetchirag", "html_url": "https://github.com/jetchirag", "followers_url": "https://api.github.com/users/jetchirag/followers", "following_url": "https://api.github.com/users/jetchirag/following{/other_user}", "gists_url": "https://api.github.com/users/jetchirag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jetchirag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jetchirag/subscriptions", "organizations_url": "https://api.github.com/users/jetchirag/orgs", "repos_url": "https://api.github.com/users/jetchirag/repos", "events_url": "https://api.github.com/users/jetchirag/events{/privacy}", "received_events_url": "https://api.github.com/users/jetchirag/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-20T20:18:31Z", "updated_at": "2019-01-04T00:24:19Z", "closed_at": "2019-01-04T00:24:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nimage.get_registry_data which seem to query `https://index.docker.io/v1/images/nginx/json` is returning 404. It's causing it to throw following error:\r\n\r\n404 Client Error: Not Found (\"page not found\")\r\n\r\nare there any changes with docker.io? \r\n\r\nCode: `print client.images.get_registry_data('nginx')`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2206", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2206/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2206/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2206/events", "html_url": "https://github.com/docker/docker-py/issues/2206", "id": 391434507, "node_id": "MDU6SXNzdWUzOTE0MzQ1MDc=", "number": 2206, "title": "can't use low-level API on windows 7", "user": {"login": "yyminmax", "id": 15973756, "node_id": "MDQ6VXNlcjE1OTczNzU2", "avatar_url": "https://avatars0.githubusercontent.com/u/15973756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yyminmax", "html_url": "https://github.com/yyminmax", "followers_url": "https://api.github.com/users/yyminmax/followers", "following_url": "https://api.github.com/users/yyminmax/following{/other_user}", "gists_url": "https://api.github.com/users/yyminmax/gists{/gist_id}", "starred_url": "https://api.github.com/users/yyminmax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yyminmax/subscriptions", "organizations_url": "https://api.github.com/users/yyminmax/orgs", "repos_url": "https://api.github.com/users/yyminmax/repos", "events_url": "https://api.github.com/users/yyminmax/events{/privacy}", "received_events_url": "https://api.github.com/users/yyminmax/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70919454, "node_id": "MDU6TGFiZWw3MDkxOTQ1NA==", "url": "https://api.github.com/repos/docker/docker-py/labels/group/documentation", "name": "group/documentation", "color": "c7def8", "default": false, "description": null}, {"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-16T04:30:21Z", "updated_at": "2019-01-05T06:49:43Z", "closed_at": "2019-01-05T06:49:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have installed docker toolbox on windows 7, and find base_url by running this command `docker-machine.exe ls`\r\n```\r\nNAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER     ERRORS\r\ndefault   *        virtualbox   Running   tcp://192.168.99.100:2376           v18.09.0\r\n```\r\nAnd then, I use this base_url to build a APIClient object and call its version, but there are some errors occured\r\n```\r\n>>> client = docker.APIClient(base_url=\"tcp://192.168.99.100:2376\")\r\n>>> client.version()\r\nTraceback (most recent call last):\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 384, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 2, in raise_from\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 380, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"D:\\Program Files\\Python37\\lib\\http\\client.py\", line 1321, in getresponse\r\n    response.begin()\r\n  File \"D:\\Program Files\\Python37\\lib\\http\\client.py\", line 296, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"D:\\Program Files\\Python37\\lib\\http\\client.py\", line 278, in _read_status\r\n    raise BadStatusLine(line)\r\nhttp.client.BadStatusLine: \u0015\u0003\u0001\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\requests\\adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 638, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\urllib3\\util\\retry.py\", line 367, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\urllib3\\packages\\six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 384, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 2, in raise_from\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 380, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"D:\\Program Files\\Python37\\lib\\http\\client.py\", line 1321, in getresponse\r\n    response.begin()\r\n  File \"D:\\Program Files\\Python37\\lib\\http\\client.py\", line 296, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"D:\\Program Files\\Python37\\lib\\http\\client.py\", line 278, in _read_status\r\n    raise BadStatusLine(line)\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', BadStatusLine('\\x15\\x03\\x01\\x00\\x02\\x02\\n'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<pyshell#9>\", line 1, in <module>\r\n    client.version()\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\docker\\api\\daemon.py\", line 181, in version\r\n    return self._result(self._get(url), json=True)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\docker\\utils\\decorators.py\", line 46, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\docker\\api\\client.py\", line 215, in _get\r\n    return self.get(url, **self._set_request_timeout(kwargs))\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\requests\\sessions.py\", line 546, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\requests\\sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\requests\\sessions.py\", line 646, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"D:\\Program Files\\Python37\\lib\\site-packages\\requests\\adapters.py\", line 498, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', BadStatusLine('\\x15\\x03\\x01\\x00\\x02\\x02\\n'))\r\n```\r\nSo how can I solve it ....", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2205", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2205/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2205/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2205/events", "html_url": "https://github.com/docker/docker-py/issues/2205", "id": 391418891, "node_id": "MDU6SXNzdWUzOTE0MTg4OTE=", "number": 2205, "title": "No std way to parse JSON status dicts to human readable format?", "user": {"login": "Addvilz", "id": 1390347, "node_id": "MDQ6VXNlcjEzOTAzNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1390347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Addvilz", "html_url": "https://github.com/Addvilz", "followers_url": "https://api.github.com/users/Addvilz/followers", "following_url": "https://api.github.com/users/Addvilz/following{/other_user}", "gists_url": "https://api.github.com/users/Addvilz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Addvilz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Addvilz/subscriptions", "organizations_url": "https://api.github.com/users/Addvilz/orgs", "repos_url": "https://api.github.com/users/Addvilz/repos", "events_url": "https://api.github.com/users/Addvilz/events{/privacy}", "received_events_url": "https://api.github.com/users/Addvilz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-15T23:00:37Z", "updated_at": "2019-01-10T09:51:47Z", "closed_at": "2019-01-10T09:51:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "`docker.api.build.BuildApiMixin#build`, among others, returns generator that can be consumed via `docker.utils.json_stream.json_stream` to obtain dicts of parsed status objects. Is there anything to convert these dicts to \"human readable\" format? \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2200", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2200/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2200/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2200/events", "html_url": "https://github.com/docker/docker-py/issues/2200", "id": 389984921, "node_id": "MDU6SXNzdWUzODk5ODQ5MjE=", "number": 2200, "title": "No option to initialize a swarm with a default-addr-pool", "user": {"login": "originalgremlin", "id": 1153998, "node_id": "MDQ6VXNlcjExNTM5OTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1153998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/originalgremlin", "html_url": "https://github.com/originalgremlin", "followers_url": "https://api.github.com/users/originalgremlin/followers", "following_url": "https://api.github.com/users/originalgremlin/following{/other_user}", "gists_url": "https://api.github.com/users/originalgremlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/originalgremlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/originalgremlin/subscriptions", "organizations_url": "https://api.github.com/users/originalgremlin/orgs", "repos_url": "https://api.github.com/users/originalgremlin/repos", "events_url": "https://api.github.com/users/originalgremlin/events{/privacy}", "received_events_url": "https://api.github.com/users/originalgremlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-11T22:38:55Z", "updated_at": "2019-03-25T12:01:17Z", "closed_at": "2019-03-25T12:01:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The docker cli has options (available since API v1.39) to initialize a swarm with --default-addr-pool and --default-addr-pool-mask-length.  This project does not, yet.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2199", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2199/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2199/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2199/events", "html_url": "https://github.com/docker/docker-py/issues/2199", "id": 389783406, "node_id": "MDU6SXNzdWUzODk3ODM0MDY=", "number": 2199, "title": "docker-py does not set the proxy env variables", "user": {"login": "little-dude", "id": 6646324, "node_id": "MDQ6VXNlcjY2NDYzMjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6646324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/little-dude", "html_url": "https://github.com/little-dude", "followers_url": "https://api.github.com/users/little-dude/followers", "following_url": "https://api.github.com/users/little-dude/following{/other_user}", "gists_url": "https://api.github.com/users/little-dude/gists{/gist_id}", "starred_url": "https://api.github.com/users/little-dude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/little-dude/subscriptions", "organizations_url": "https://api.github.com/users/little-dude/orgs", "repos_url": "https://api.github.com/users/little-dude/repos", "events_url": "https://api.github.com/users/little-dude/events{/privacy}", "received_events_url": "https://api.github.com/users/little-dude/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/docker/docker-py/milestones/56", "html_url": "https://github.com/docker/docker-py/milestone/56", "labels_url": "https://api.github.com/repos/docker/docker-py/milestones/56/labels", "id": 3862335, "node_id": "MDk6TWlsZXN0b25lMzg2MjMzNQ==", "number": 56, "title": "3.7.0", "description": null, "creator": {"login": "shin-", "id": 1086876, "node_id": "MDQ6VXNlcjEwODY4NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1086876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shin-", "html_url": "https://github.com/shin-", "followers_url": "https://api.github.com/users/shin-/followers", "following_url": "https://api.github.com/users/shin-/following{/other_user}", "gists_url": "https://api.github.com/users/shin-/gists{/gist_id}", "starred_url": "https://api.github.com/users/shin-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shin-/subscriptions", "organizations_url": "https://api.github.com/users/shin-/orgs", "repos_url": "https://api.github.com/users/shin-/repos", "events_url": "https://api.github.com/users/shin-/events{/privacy}", "received_events_url": "https://api.github.com/users/shin-/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2018-11-30T23:31:33Z", "updated_at": "2019-01-12T00:41:59Z", "due_on": null, "closed_at": "2019-01-12T00:41:59Z"}, "comments": 1, "created_at": "2018-12-11T14:12:51Z", "updated_at": "2019-01-09T20:05:39Z", "closed_at": "2019-01-09T20:05:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a `~/.docker/config.json` with some a proxy configuration:\r\n\r\n```json\r\n {\r\n     \"auths\": {\r\n         \"my-registry.net\": {\r\n             \"auth\": \"XXXXXXXXXXX\"\r\n         }\r\n     },\r\n     \"HttpHeaders\": {\r\n         \"User-Agent\": \"Docker-Client/18.09.0-ce (linux)\"\r\n     },\r\n     \"proxies\": {\r\n         \"default\": {\r\n             \"httpProxy\": \"http://my-proxy.com:8000\",\r\n             \"noProxy\": \"localhost,localaddress,.localdomain.com,/var/run/docker.sock\"\r\n         }\r\n     }\r\n }\r\n```\r\n\r\nThis config is taken into account when I use the CLI client:\r\n\r\n```\r\n~ $ docker run -it busybox /bin/sh -c 'env | grep -i proxy'\r\nHTTP_PROXY=http://my-proxy.com:8000\r\nhttp_proxy=http://my-proxy.com:8000\r\nno_proxy=localhost,localaddress,.localdomain.com,/var/run/docker.sock\r\nNO_PROXY=localhost,localaddress,.localdomain.com,/var/run/docker.sock\r\n```\r\n\r\nBut with the python client:\r\n\r\n```\r\nIn [1]: import docker\r\n\r\nIn [2]: client = docker.from_env()\r\n\r\nIn [3]: client.containers.run('busybox', '/bin/sh -c \"env|grep -i proxy || true\"', tty=True, stdin_open=True)\r\nOut[3]: b''\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2195", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2195/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2195/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2195/events", "html_url": "https://github.com/docker/docker-py/issues/2195", "id": 388180072, "node_id": "MDU6SXNzdWUzODgxODAwNzI=", "number": 2195, "title": "Add ability subscribe to socket and watch for container changes", "user": {"login": "Koc", "id": 191082, "node_id": "MDQ6VXNlcjE5MTA4Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/191082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Koc", "html_url": "https://github.com/Koc", "followers_url": "https://api.github.com/users/Koc/followers", "following_url": "https://api.github.com/users/Koc/following{/other_user}", "gists_url": "https://api.github.com/users/Koc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Koc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Koc/subscriptions", "organizations_url": "https://api.github.com/users/Koc/orgs", "repos_url": "https://api.github.com/users/Koc/repos", "events_url": "https://api.github.com/users/Koc/events{/privacy}", "received_events_url": "https://api.github.com/users/Koc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-06T11:52:44Z", "updated_at": "2018-12-06T21:56:27Z", "closed_at": "2018-12-06T21:56:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I want to create some small  daemon (like Traefik) which will listen socket and execute some actions when container starts or stops. Would be nice add some api for that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2194", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2194/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2194/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2194/events", "html_url": "https://github.com/docker/docker-py/issues/2194", "id": 387947100, "node_id": "MDU6SXNzdWUzODc5NDcxMDA=", "number": 2194, "title": "3.6.0 sdist doesn't match the tag in the repository", "user": {"login": "benjaminp", "id": 219470, "node_id": "MDQ6VXNlcjIxOTQ3MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/219470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaminp", "html_url": "https://github.com/benjaminp", "followers_url": "https://api.github.com/users/benjaminp/followers", "following_url": "https://api.github.com/users/benjaminp/following{/other_user}", "gists_url": "https://api.github.com/users/benjaminp/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaminp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaminp/subscriptions", "organizations_url": "https://api.github.com/users/benjaminp/orgs", "repos_url": "https://api.github.com/users/benjaminp/repos", "events_url": "https://api.github.com/users/benjaminp/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaminp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-05T21:10:31Z", "updated_at": "2018-12-08T00:08:19Z", "closed_at": "2018-12-08T00:08:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docker package 3.6.0 sdist contains the file `docker/api/mixin.py`\r\n```\r\n$ curl -s https://files.pythonhosted.org/packages/cc/9c/50ec68951d10fc341b650a2f5a6ed3925f7e4adc245113acfe64eb61f46a/docker-3.6.0.tar.gz | tar tz | grep mixin\r\ndocker-3.6.0/docker/api/mixin.py\r\n```\r\nbut this file doesn't appear in [the tag for the 3.6.0 release](\r\nhttps://github.com/docker/docker-py/tree/3.6.0/docker/api).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2191", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2191/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2191/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2191/events", "html_url": "https://github.com/docker/docker-py/issues/2191", "id": 386131172, "node_id": "MDU6SXNzdWUzODYxMzExNzI=", "number": 2191, "title": "3.6.0 not on readthedocs", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-30T10:37:50Z", "updated_at": "2018-11-30T19:22:42Z", "closed_at": "2018-11-30T19:22:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Version 3.6.0 is in the changelog file: https://github.com/docker/docker-py/blob/master/docs/change-log.md but not rendered on readthedocs: https://docker-py.readthedocs.io/en/stable/change-log.html . Is the readthedocs build broken? I've had it break on me before without me noticing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2190", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2190/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2190/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2190/events", "html_url": "https://github.com/docker/docker-py/issues/2190", "id": 386107640, "node_id": "MDU6SXNzdWUzODYxMDc2NDA=", "number": 2190, "title": "Issue with getting a log from a detached container...", "user": {"login": "isvogor-foi", "id": 4026204, "node_id": "MDQ6VXNlcjQwMjYyMDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4026204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isvogor-foi", "html_url": "https://github.com/isvogor-foi", "followers_url": "https://api.github.com/users/isvogor-foi/followers", "following_url": "https://api.github.com/users/isvogor-foi/following{/other_user}", "gists_url": "https://api.github.com/users/isvogor-foi/gists{/gist_id}", "starred_url": "https://api.github.com/users/isvogor-foi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isvogor-foi/subscriptions", "organizations_url": "https://api.github.com/users/isvogor-foi/orgs", "repos_url": "https://api.github.com/users/isvogor-foi/repos", "events_url": "https://api.github.com/users/isvogor-foi/events{/privacy}", "received_events_url": "https://api.github.com/users/isvogor-foi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40793868, "node_id": "MDU6TGFiZWw0MDc5Mzg2OA==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/question", "name": "kind/question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-30T09:36:27Z", "updated_at": "2019-01-03T01:44:39Z", "closed_at": "2019-01-03T01:44:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nSo I'm using python to start an existing container, as:\r\n`my_container.start()` \r\nand then, I want to execute some long lasting script inside, and I do so by:\r\n`my_container.exec_run('script.py', detach=True)` . So I'm detaching and doing something else... \r\nHowever, I have no access to the log what so ever. I've tried out various options and it seems I'm loosing options. Any ideas how to pickup the output that the script.py is outputing to stdout? \r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2185", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2185/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2185/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2185/events", "html_url": "https://github.com/docker/docker-py/issues/2185", "id": 385119934, "node_id": "MDU6SXNzdWUzODUxMTk5MzQ=", "number": 2185, "title": "Help doc for specifying placement preferences via sdk ", "user": {"login": "hbhanawat", "id": 8359624, "node_id": "MDQ6VXNlcjgzNTk2MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8359624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hbhanawat", "html_url": "https://github.com/hbhanawat", "followers_url": "https://api.github.com/users/hbhanawat/followers", "following_url": "https://api.github.com/users/hbhanawat/following{/other_user}", "gists_url": "https://api.github.com/users/hbhanawat/gists{/gist_id}", "starred_url": "https://api.github.com/users/hbhanawat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hbhanawat/subscriptions", "organizations_url": "https://api.github.com/users/hbhanawat/orgs", "repos_url": "https://api.github.com/users/hbhanawat/repos", "events_url": "https://api.github.com/users/hbhanawat/events{/privacy}", "received_events_url": "https://api.github.com/users/hbhanawat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70919454, "node_id": "MDU6TGFiZWw3MDkxOTQ1NA==", "url": "https://api.github.com/repos/docker/docker-py/labels/group/documentation", "name": "group/documentation", "color": "c7def8", "default": false, "description": null}, {"id": 40793866, "node_id": "MDU6TGFiZWw0MDc5Mzg2Ng==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/enhancement", "name": "kind/enhancement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/docker/docker-py/milestones/56", "html_url": "https://github.com/docker/docker-py/milestone/56", "labels_url": "https://api.github.com/repos/docker/docker-py/milestones/56/labels", "id": 3862335, "node_id": "MDk6TWlsZXN0b25lMzg2MjMzNQ==", "number": 56, "title": "3.7.0", "description": null, "creator": {"login": "shin-", "id": 1086876, "node_id": "MDQ6VXNlcjEwODY4NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1086876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shin-", "html_url": "https://github.com/shin-", "followers_url": "https://api.github.com/users/shin-/followers", "following_url": "https://api.github.com/users/shin-/following{/other_user}", "gists_url": "https://api.github.com/users/shin-/gists{/gist_id}", "starred_url": "https://api.github.com/users/shin-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shin-/subscriptions", "organizations_url": "https://api.github.com/users/shin-/orgs", "repos_url": "https://api.github.com/users/shin-/repos", "events_url": "https://api.github.com/users/shin-/events{/privacy}", "received_events_url": "https://api.github.com/users/shin-/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2018-11-30T23:31:33Z", "updated_at": "2019-01-12T00:41:59Z", "due_on": null, "closed_at": "2019-01-12T00:41:59Z"}, "comments": 5, "created_at": "2018-11-28T06:26:20Z", "updated_at": "2018-12-11T16:41:34Z", "closed_at": "2018-12-11T16:41:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "While creating a service I am passing the preferences. I am specifying placement preferences in multiple ways but it always fails with an error.\r\n\r\nParameters to start the service:\r\n\u2018image =xxx/cassandra:3.0\u2019, \u201cpreferences =[\u2018spread=node.labels.launcher\u2019]\u201d, \u201ccassandra1EnvList =[\u2018JVM_OPTS=-Xms4g -Xmx4g\u2019, \u2018CASSANDRA_BROADCAST_ADDRESS=cassandra-1\u2019, \u2018CASSANDRA_SEEDS=cassandra-1,cassandra-2\u2019, \u2018CASSANDRA_LOG_DIR=/var/log/cassandra\u2019]\u201d, \u201cmode ={\u2018replicated\u2019: {\u2018Replicas\u2019: 1}}\u201d, \u201crestart_policy ={\u2018Delay\u2019: 0, \u2018Window\u2019: 0, \u2018MaxAttempts\u2019: 0, \u2018Condition\u2019: \u2018on-failure\u2019}\u201d, \u201cmounts =[\u2019/tmp/fluir/cassandra1/data:/var/lib/cassandra\u2019, \u2018/tmp/fluir/cassandra1/logs:/var/log/cassandra\u2019]\u201d, \u2018networks =mynet\u2019)\r\n\r\nI get the following error:\r\n\r\nTraceback (most recent call last):\r\nFile \u201c/usr/lib/python2.7/runpy.py\u201d, line 174, in _run_module_as_main\r\n\u201cmain\u201d, fname, loader, pkg_name)\r\nFile \u201c/usr/lib/python2.7/runpy.py\u201d, line 72, in _run_code\r\nexec code in run_globals\r\nFile \u201c/drive/repos/spark-jobserver/deployment/fluirpy/startup/cassandra.py\u201d, line 25, in\r\ncassandraLauncher.startCassandraService(client, config)\r\nFile \u201cplugins/cassandra.py\u201d, line 39, in startCassandraService\r\nnetworks=[cassandraConfig.networkName], name=self.cassandra1service)\r\nFile \u201c/usr/local/lib/python2.7/dist-packages/docker/models/services.py\u201d, line 219, in create\r\nservice_id = self.client.api.create_service(**create_kwargs)\r\nFile \u201c/usr/local/lib/python2.7/dist-packages/docker/utils/decorators.py\u201d, line 34, in wrapper\r\nreturn f(self, *args, **kwargs)\r\nFile \u201c/usr/local/lib/python2.7/dist-packages/docker/api/service.py\u201d, line 185, in create_service\r\nself._post_json(url, data=data, headers=headers), True\r\nFile \u201c/usr/local/lib/python2.7/dist-packages/docker/api/client.py\u201d, line 235, in _result\r\nself._raise_for_status(response)\r\nFile \u201c/usr/local/lib/python2.7/dist-packages/docker/api/client.py\u201d, line 231, in _raise_for_status\r\nraise create_api_error_from_http_exception(e)\r\nFile \u201c/usr/local/lib/python2.7/dist-packages/docker/errors.py\u201d, line 31, in create_api_error_from_http_exception\r\nraise cls(e, response=response, explanation=explanation)\r\ndocker.errors.APIError: 500 Server Error: Internal Server Error (\u201cjson: cannot unmarshal string into Go struct field Placement.Preferences of type swarm.PlacementPreference\u201d)\r\n\r\nI am not sure what is the right format of the placement preference. Can someone suggest me what should the placement preference object look like? Also, it will be great if same can be added to the help doc. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2177", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2177/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2177/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2177/events", "html_url": "https://github.com/docker/docker-py/issues/2177", "id": 382439371, "node_id": "MDU6SXNzdWUzODI0MzkzNzE=", "number": 2177, "title": "when using client.containers.list shows: AttributeError: 'function' object has no attribute 'list'", "user": {"login": "getor", "id": 20098819, "node_id": "MDQ6VXNlcjIwMDk4ODE5", "avatar_url": "https://avatars2.githubusercontent.com/u/20098819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/getor", "html_url": "https://github.com/getor", "followers_url": "https://api.github.com/users/getor/followers", "following_url": "https://api.github.com/users/getor/following{/other_user}", "gists_url": "https://api.github.com/users/getor/gists{/gist_id}", "starred_url": "https://api.github.com/users/getor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/getor/subscriptions", "organizations_url": "https://api.github.com/users/getor/orgs", "repos_url": "https://api.github.com/users/getor/repos", "events_url": "https://api.github.com/users/getor/events{/privacy}", "received_events_url": "https://api.github.com/users/getor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-19T23:45:11Z", "updated_at": "2018-11-19T23:56:56Z", "closed_at": "2018-11-19T23:56:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Packages:\r\ndocker-py==1.10.6 (from pip freeze)\r\ndocker==3.5.1 (from pip freeze)\r\nDocker version 18.06.0-ce (from docker --version)\r\nwhen running python script and using client.containers.list()\r\nit's showing \"AttributeError: 'function' object has no attribute 'list' \"\r\n\r\nthen I do \"pip uninstall docker-py; pip install -U docker\", \r\ndocker-py uninstalled but it's showing \"No module named docker\" when importing docker", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2176", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2176/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2176/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2176/events", "html_url": "https://github.com/docker/docker-py/issues/2176", "id": 382304843, "node_id": "MDU6SXNzdWUzODIzMDQ4NDM=", "number": 2176, "title": "ConnectionRefusedError ", "user": {"login": "statiksof", "id": 42906766, "node_id": "MDQ6VXNlcjQyOTA2NzY2", "avatar_url": "https://avatars0.githubusercontent.com/u/42906766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/statiksof", "html_url": "https://github.com/statiksof", "followers_url": "https://api.github.com/users/statiksof/followers", "following_url": "https://api.github.com/users/statiksof/following{/other_user}", "gists_url": "https://api.github.com/users/statiksof/gists{/gist_id}", "starred_url": "https://api.github.com/users/statiksof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/statiksof/subscriptions", "organizations_url": "https://api.github.com/users/statiksof/orgs", "repos_url": "https://api.github.com/users/statiksof/repos", "events_url": "https://api.github.com/users/statiksof/events{/privacy}", "received_events_url": "https://api.github.com/users/statiksof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-19T16:52:02Z", "updated_at": "2018-12-26T18:29:04Z", "closed_at": "2018-11-20T09:19:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any idea about this issue?\r\nDocker version: 18.09\r\nPython: 3.6.5\r\n\r\n``` File \"/opt/conda/lib/python3.6/site-packages/docker/transport/unixconn.py\", line 42, in connect\r\n    sock.connect(self.unix_socket)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.6/site-packages/requests/adapters.py\", line 440, in send\r\n    timeout=timeout\r\n  File \"/opt/conda/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 639, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"/opt/conda/lib/python3.6/site-packages/urllib3/util/retry.py\", line 357, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/opt/conda/lib/python3.6/site-packages/urllib3/packages/six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/opt/conda/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 601, in urlopen\r\n    chunked=chunked)\r\n  File \"/opt/conda/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 357, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/opt/conda/lib/python3.6/http/client.py\", line 1239, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/opt/conda/lib/python3.6/http/client.py\", line 1285, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/opt/conda/lib/python3.6/http/client.py\", line 1234, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/opt/conda/lib/python3.6/http/client.py\", line 1026, in _send_output\r\n    self.send(msg)\r\n  File \"/opt/conda/lib/python3.6/http/client.py\", line 964, in send\r\n    self.connect()\r\n  File \"/opt/conda/lib/python3.6/site-packages/docker/transport/unixconn.py\", line 42, in connect\r\n    sock.connect(self.unix_socket)\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionRefusedError(111, 'Connection refused'))```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2175", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2175/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2175/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2175/events", "html_url": "https://github.com/docker/docker-py/issues/2175", "id": 381256472, "node_id": "MDU6SXNzdWUzODEyNTY0NzI=", "number": 2175, "title": "Content trust not working", "user": {"login": "theo-walton", "id": 29266089, "node_id": "MDQ6VXNlcjI5MjY2MDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/29266089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-walton", "html_url": "https://github.com/theo-walton", "followers_url": "https://api.github.com/users/theo-walton/followers", "following_url": "https://api.github.com/users/theo-walton/following{/other_user}", "gists_url": "https://api.github.com/users/theo-walton/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-walton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-walton/subscriptions", "organizations_url": "https://api.github.com/users/theo-walton/orgs", "repos_url": "https://api.github.com/users/theo-walton/repos", "events_url": "https://api.github.com/users/theo-walton/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-walton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-15T17:06:02Z", "updated_at": "2018-11-15T17:11:41Z", "closed_at": "2018-11-15T17:11:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "pulling images is not effected by the DOCKER_CONTENT_TRUST environment variable\r\n\r\nhttps://stackoverflow.com/questions/53306787/python-docker-sdk-content-trust-not-working", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docker/docker-py/issues/2174", "repository_url": "https://api.github.com/repos/docker/docker-py", "labels_url": "https://api.github.com/repos/docker/docker-py/issues/2174/labels{/name}", "comments_url": "https://api.github.com/repos/docker/docker-py/issues/2174/comments", "events_url": "https://api.github.com/repos/docker/docker-py/issues/2174/events", "html_url": "https://github.com/docker/docker-py/issues/2174", "id": 379676615, "node_id": "MDU6SXNzdWUzNzk2NzY2MTU=", "number": 2174, "title": "Please support docker build --secret API as in Docker 18.09", "user": {"login": "haizaar", "id": 58201, "node_id": "MDQ6VXNlcjU4MjAx", "avatar_url": "https://avatars1.githubusercontent.com/u/58201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haizaar", "html_url": "https://github.com/haizaar", "followers_url": "https://api.github.com/users/haizaar/followers", "following_url": "https://api.github.com/users/haizaar/following{/other_user}", "gists_url": "https://api.github.com/users/haizaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/haizaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haizaar/subscriptions", "organizations_url": "https://api.github.com/users/haizaar/orgs", "repos_url": "https://api.github.com/users/haizaar/repos", "events_url": "https://api.github.com/users/haizaar/events{/privacy}", "received_events_url": "https://api.github.com/users/haizaar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64720876, "node_id": "MDU6TGFiZWw2NDcyMDg3Ng==", "url": "https://api.github.com/repos/docker/docker-py/labels/group/api-upgrade", "name": "group/api-upgrade", "color": "fbca04", "default": false, "description": null}, {"id": 70918996, "node_id": "MDU6TGFiZWw3MDkxODk5Ng==", "url": "https://api.github.com/repos/docker/docker-py/labels/kind/feature-request", "name": "kind/feature-request", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-12T08:53:23Z", "updated_at": "2019-01-15T10:34:44Z", "closed_at": "2019-01-15T10:34:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good day,\r\nIt will be nice to be able to do \r\n```\r\ndocker build --secret id=mysite.key,src=path/to/mysite.key .\r\n```\r\nthrough the API.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}]}