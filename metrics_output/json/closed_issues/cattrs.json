{"total_count": 26, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Tinche/cattrs/issues/90", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/90/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/90/events", "html_url": "https://github.com/Tinche/cattrs/issues/90", "id": 642308076, "node_id": "MDU6SXNzdWU2NDIzMDgwNzY=", "number": 90, "title": "Provide new kind of hooks with re-entrant Converter dispatch", "user": {"login": "petergaultney", "id": 549720, "node_id": "MDQ6VXNlcjU0OTcyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/549720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petergaultney", "html_url": "https://github.com/petergaultney", "followers_url": "https://api.github.com/users/petergaultney/followers", "following_url": "https://api.github.com/users/petergaultney/following{/other_user}", "gists_url": "https://api.github.com/users/petergaultney/gists{/gist_id}", "starred_url": "https://api.github.com/users/petergaultney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petergaultney/subscriptions", "organizations_url": "https://api.github.com/users/petergaultney/orgs", "repos_url": "https://api.github.com/users/petergaultney/repos", "events_url": "https://api.github.com/users/petergaultney/events{/privacy}", "received_events_url": "https://api.github.com/users/petergaultney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-20T04:43:27Z", "updated_at": "2020-06-23T23:49:36Z", "closed_at": "2020-06-23T23:49:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* cattrs version: 1.0.0\r\n\r\n### Description\r\n\r\nI'd love to see `cattrs` take one step further in the name of extensibility and could make a PR to that effect. I use `cattrs` quite heavily, and I've made my own extensions that hook into parts of the `Converter` that are clearly not part of the stable API. \r\n\r\nThe core issue for my use cases is that Converters are a stateful object with information about \"how\" to convert various sorts of things (e.g. datetimes), but the registered dispatch hooks (part of that state) have no access to the Converter itself. This is unfortunate, since all of the registered dispatch hooks together constitute a \"conversion context\". When a user calls `converter.structure`, a complex structure hook that, for instance, wishes to customize behavior for a whole \"category\" of types (e.g. `attrs`), can do so by registering a \"func hook\". However, as soon as it does so, it loses the ability to meaningfully \"re-enter\" the context of the cattrs converter dispatch.\r\n\r\nYou can see [here](https://github.com/xoeye/typecats/blob/master/typecats/cattrs_hooks.py#L19) what I've done here to work around this - I monkey-patch the function dispatch solely in order to provide my structure and unstructure hooks with access to all of the existing `Converter` context, by intercepting every pass through all function-dispatched hooks. This allows me to still take advantage of how nicely `cattrs` handles all the \"core\" recursive transforms (sets, tuples, sequences, frozensets, mappings, etc), while injecting my own code as necessary. Effectively this is a form of \"adding to\" the core dispatch functionality without duplicating it. This is of course not very efficient, since it means an entire extra function call for every non-single-dispatched type in the object tree.\r\n\r\nThe approach that cattrs takes to managing these recursive transforms is quite nice, and _nearly_ general-purpose, but it makes `attrs` a special case by automatically identifying them with a function hook and then calling its own internal \"hook\" that has stateful access to the converter and its internal dispatch. Would you be willing to accept a PR that would provide two new styles of hooks - both singledispatch and function-dispatched - that provide the Converter object (or even just the dispatch function) itself as a parameter to the hooks when called? I think this is all that remains to allow a fully range of boilerplate-free dynamic usage of the underlying power of `cattrs` for complex use cases beyond `attrs` itself. I would be happy to take a stab at making such a PR if there were some chance you'd accept it.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/89", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/89/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/89/events", "html_url": "https://github.com/Tinche/cattrs/issues/89", "id": 636023895, "node_id": "MDU6SXNzdWU2MzYwMjM4OTU=", "number": 89, "title": "Doesn't work with attrs-converted underscore properties", "user": {"login": "ex-nerd", "id": 154074, "node_id": "MDQ6VXNlcjE1NDA3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/154074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ex-nerd", "html_url": "https://github.com/ex-nerd", "followers_url": "https://api.github.com/users/ex-nerd/followers", "following_url": "https://api.github.com/users/ex-nerd/following{/other_user}", "gists_url": "https://api.github.com/users/ex-nerd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ex-nerd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ex-nerd/subscriptions", "organizations_url": "https://api.github.com/users/ex-nerd/orgs", "repos_url": "https://api.github.com/users/ex-nerd/repos", "events_url": "https://api.github.com/users/ex-nerd/events{/privacy}", "received_events_url": "https://api.github.com/users/ex-nerd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-10T07:59:28Z", "updated_at": "2020-06-10T17:51:27Z", "closed_at": "2020-06-10T17:51:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 1.0.0\r\n* Python version: 3.7.2\r\n* Operating System: MacOS/pyenv\r\n\r\n### Description\r\n\r\ncattrs is designed to work with `attr`, which has a bit of magic with underscore/private properties losing their underscores.  It looks like cattrs is doing similar magic with this, but it actually fails when the `dict` being passed in already has the underscore-property cleaned up:\r\n\r\n### What I Did\r\n\r\n```python\r\nimport attr\r\nimport cattr\r\n\r\n\r\n@attr.s(auto_attribs=True)\r\nclass foo:\r\n    a: str = attr.ib()\r\n    _b: str = attr.ib()\r\n\r\n\r\nfoo(a=\"a\", b=\"b\")\r\n# foo(a='a', _b='b')\r\n\r\ncattr.unstructure(foo(a=\"a\", b=\"b\"))\r\n# {'a': 'a', '_b': 'b'}\r\n\r\n# This somehow works despite the init for foo() looking for `b` not `_b`\r\ncattr.structure({\"a\": \"a\", \"_b\": \"b\"}, foo)\r\n# foo(a='a', _b='b')\r\n\r\n# But this fails because cattr fails to pass `b` into the __init__ function\r\ncattr.structure({\"a\": \"a2\", \"b\": \"b2\"}, foo)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/84", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/84/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/84/events", "html_url": "https://github.com/Tinche/cattrs/issues/84", "id": 602817357, "node_id": "MDU6SXNzdWU2MDI4MTczNTc=", "number": 84, "title": "Cattrs 0.9.1 attempts to import lru_cache in python 2.7", "user": {"login": "schrockn", "id": 28738937, "node_id": "MDQ6VXNlcjI4NzM4OTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/28738937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schrockn", "html_url": "https://github.com/schrockn", "followers_url": "https://api.github.com/users/schrockn/followers", "following_url": "https://api.github.com/users/schrockn/following{/other_user}", "gists_url": "https://api.github.com/users/schrockn/gists{/gist_id}", "starred_url": "https://api.github.com/users/schrockn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schrockn/subscriptions", "organizations_url": "https://api.github.com/users/schrockn/orgs", "repos_url": "https://api.github.com/users/schrockn/repos", "events_url": "https://api.github.com/users/schrockn/events{/privacy}", "received_events_url": "https://api.github.com/users/schrockn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-04-19T20:52:25Z", "updated_at": "2020-04-20T23:15:40Z", "closed_at": "2020-04-20T23:15:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 0.9.1\r\n* Python version: 2.7.17\r\n* Operating System: MacOs\r\n\r\n### Description\r\n\r\nI was testing Airflow in python 2.7 and ran into this bug.\r\n\r\n### What I Did\r\n\r\n```\r\n(debug-airflow-2.7-04-19-2020) [schrockn@mbp ~/code/dagster (fix-airflow)]$ airflow\r\nTraceback (most recent call last):\r\n  File \"/Users/schrockn/venvs/debug-airflow-2.7-04-19-2020/bin/airflow\", line 26, in <module>\r\n    from airflow.bin.cli import CLIFactory\r\n  File \"/Users/schrockn/venvs/debug-airflow-2.7-04-19-2020/lib/python2.7/site-packages/airflow/bin/cli.py\", line 79, in <module>\r\n    api_module = import_module(conf.get('cli', 'api_client'))  # type: Any\r\n  File \"/Users/schrockn/.pyenv/versions/2.7.17/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/Users/schrockn/venvs/debug-airflow-2.7-04-19-2020/lib/python2.7/site-packages/airflow/api/client/local_client.py\", line 24, in <module>\r\n    from airflow.api.common.experimental import delete_dag\r\n  File \"/Users/schrockn/venvs/debug-airflow-2.7-04-19-2020/lib/python2.7/site-packages/airflow/api/common/experimental/delete_dag.py\", line 25, in <module>\r\n    from airflow.models.serialized_dag import SerializedDagModel\r\n  File \"/Users/schrockn/venvs/debug-airflow-2.7-04-19-2020/lib/python2.7/site-packages/airflow/models/serialized_dag.py\", line 32, in <module>\r\n    from airflow.serialization.serialized_objects import SerializedDAG\r\n  File \"/Users/schrockn/venvs/debug-airflow-2.7-04-19-2020/lib/python2.7/site-packages/airflow/serialization/serialized_objects.py\", line 28, in <module>\r\n    import cattr\r\n  File \"/Users/schrockn/venvs/debug-airflow-2.7-04-19-2020/lib/python2.7/site-packages/cattr/__init__.py\", line 1, in <module>\r\n    from .converters import Converter, UnstructureStrategy\r\n  File \"/Users/schrockn/venvs/debug-airflow-2.7-04-19-2020/lib/python2.7/site-packages/cattr/converters.py\", line 15, in <module>\r\n    from ._compat import (\r\n  File \"/Users/schrockn/venvs/debug-airflow-2.7-04-19-2020/lib/python2.7/site-packages/cattr/_compat.py\", line 2, in <module>\r\n    from functools import lru_cache, singledispatch  # noqa\r\nImportError: cannot import name lru_cache\r\n```\r\n\r\nTracking in airflow repo here: https://github.com/apache/airflow/issues/8457\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/83", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/83/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/83/events", "html_url": "https://github.com/Tinche/cattrs/issues/83", "id": 592997958, "node_id": "MDU6SXNzdWU1OTI5OTc5NTg=", "number": 83, "title": "0.9.1 never released to PyPI", "user": {"login": "dargueta", "id": 620513, "node_id": "MDQ6VXNlcjYyMDUxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/620513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dargueta", "html_url": "https://github.com/dargueta", "followers_url": "https://api.github.com/users/dargueta/followers", "following_url": "https://api.github.com/users/dargueta/following{/other_user}", "gists_url": "https://api.github.com/users/dargueta/gists{/gist_id}", "starred_url": "https://api.github.com/users/dargueta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dargueta/subscriptions", "organizations_url": "https://api.github.com/users/dargueta/orgs", "repos_url": "https://api.github.com/users/dargueta/repos", "events_url": "https://api.github.com/users/dargueta/events{/privacy}", "received_events_url": "https://api.github.com/users/dargueta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-03T00:25:48Z", "updated_at": "2020-04-20T17:49:03Z", "closed_at": "2020-04-20T17:49:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI see release 0.9.1 added support for Python 3.8, but it's not available in PyPI and there's no tag for it. I have a third-party library I'm dependent on that pins it as `cattrs~=0.9` so it'd install 0.9.1 if it were present.\r\n\r\nWould it be possible to tag bb48897a7f389332d6111a239dcf3bf4a11b526f as 0.9.1 and release it on PyPI?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/82", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/82/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/82/events", "html_url": "https://github.com/Tinche/cattrs/issues/82", "id": 559127047, "node_id": "MDU6SXNzdWU1NTkxMjcwNDc=", "number": 82, "title": "hook for target type", "user": {"login": "isaacimholt", "id": 12482837, "node_id": "MDQ6VXNlcjEyNDgyODM3", "avatar_url": "https://avatars0.githubusercontent.com/u/12482837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaacimholt", "html_url": "https://github.com/isaacimholt", "followers_url": "https://api.github.com/users/isaacimholt/followers", "following_url": "https://api.github.com/users/isaacimholt/following{/other_user}", "gists_url": "https://api.github.com/users/isaacimholt/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaacimholt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaacimholt/subscriptions", "organizations_url": "https://api.github.com/users/isaacimholt/orgs", "repos_url": "https://api.github.com/users/isaacimholt/repos", "events_url": "https://api.github.com/users/isaacimholt/events{/privacy}", "received_events_url": "https://api.github.com/users/isaacimholt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-03T14:40:56Z", "updated_at": "2020-02-04T11:07:10Z", "closed_at": "2020-02-04T11:07:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 1.0.0\r\n* Python version: 2.7.8 (don't ask why)\r\n* Operating System: Windows/Linux\r\n\r\n### Description\r\n\r\nI am trying to understand how to integrate cattrs in an existing project. I need to (de)serialize attrs nested models (that is why I want to use cattrs). My problem is that I want to structure `str` instances on my model according to the type specified in the attr model. For `datetime.date` type I need those `str`s to be converted using a custom hook, but if the model specifies any other type I need this hook to be ignored.\r\n\r\n```python\r\n# (input_type, output_type) -> conversion_fxn\r\ntype_converters = {\r\n    # ...\r\n    (str, datetime.date): _date_ymd_strptime,\r\n    (str, datetime.datetime): _datetime_ymd_hms_strptime,\r\n    # ...\r\n    (datetime.date, str): _date_ymd_format,\r\n    (datetime.datetime, str): _datetime_ymd_hms_format,\r\n    # ...\r\n}\r\n\r\n\r\n@attr.s(slots=True)\r\nclass Price(object):\r\n    price_date = attr.ib(type=datetime.date)\r\n    source = attr.ib(type=str)\r\n\r\n\r\nd = {'price_date': '2019-02-13', 'source': 'SOURCE'}\r\nconverter = cattrs.Converter()\r\n# how can I register a hook for str -> date but not str -> str???\r\nconverter.register_structure_hook()  # ???\r\np = converter.structure(d, Price)\r\n# Price(price_date=datetime.date(2019, 2, 13), source='SOURCE')\r\n# ideally dynamically loaded from type_converters dict\r\nconverter.register_unstructure_hook(datetime.date, _date_ymd_format)\r\nconverter.unstructure(p)\r\n# {'price_date': '2019-02-13', 'source': 'SOURCE'}\r\n```\r\n\r\nh e l p", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/77", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/77/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/77/events", "html_url": "https://github.com/Tinche/cattrs/issues/77", "id": 528257030, "node_id": "MDU6SXNzdWU1MjgyNTcwMzA=", "number": 77, "title": "Current release incompatible with Python 3.8.0", "user": {"login": "DrLuke", "id": 1679780, "node_id": "MDQ6VXNlcjE2Nzk3ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1679780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrLuke", "html_url": "https://github.com/DrLuke", "followers_url": "https://api.github.com/users/DrLuke/followers", "following_url": "https://api.github.com/users/DrLuke/following{/other_user}", "gists_url": "https://api.github.com/users/DrLuke/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrLuke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrLuke/subscriptions", "organizations_url": "https://api.github.com/users/DrLuke/orgs", "repos_url": "https://api.github.com/users/DrLuke/repos", "events_url": "https://api.github.com/users/DrLuke/events{/privacy}", "received_events_url": "https://api.github.com/users/DrLuke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-25T18:21:57Z", "updated_at": "2020-08-13T15:35:49Z", "closed_at": "2020-08-13T15:35:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 0.9.0\r\n* Python version: 3.8.0\r\n* Operating System: Linux\r\n\r\n### Description\r\n\r\nI was running AWS CDK, which uses JSII, which uses cattr and the following error came up:\r\n```\r\n  File \"/home/drluke/work/di-client-api-message-dispatcher/venv/lib/python3.8/site-packages/cattr/_compat.py\", line 86, in <module>\r\n    from typing import _Union\r\nImportError: cannot import name '_Union' from 'typing' (/usr/lib/python3.8/typing.py)\r\n\r\n```\r\n\r\nI looked into the file and found the following:\r\n```python3\r\nis_py37 = version_info[:2] == (3, 7)\r\n```\r\n\r\nwhich is then used to decide whether to import `Union` or `_Union`. The latter doesn't exist in python3.8's typing module, causing the import error.\r\n\r\nMy suggestion would be to check if we're on python3.7 or greater instead.\r\n```python3\r\nis_py37_or_greater = version_info[0] == 3 and version_info[1] >= 7\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/71", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/71/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/71/events", "html_url": "https://github.com/Tinche/cattrs/issues/71", "id": 507653415, "node_id": "MDU6SXNzdWU1MDc2NTM0MTU=", "number": 71, "title": "Add support for Python 3.8", "user": {"login": "zeburek", "id": 20853475, "node_id": "MDQ6VXNlcjIwODUzNDc1", "avatar_url": "https://avatars0.githubusercontent.com/u/20853475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeburek", "html_url": "https://github.com/zeburek", "followers_url": "https://api.github.com/users/zeburek/followers", "following_url": "https://api.github.com/users/zeburek/following{/other_user}", "gists_url": "https://api.github.com/users/zeburek/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeburek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeburek/subscriptions", "organizations_url": "https://api.github.com/users/zeburek/orgs", "repos_url": "https://api.github.com/users/zeburek/repos", "events_url": "https://api.github.com/users/zeburek/events{/privacy}", "received_events_url": "https://api.github.com/users/zeburek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-16T06:53:21Z", "updated_at": "2019-11-20T04:23:58Z", "closed_at": "2019-11-19T10:47:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nThere is no support for Python 3.8 right now, but it has been released today\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/63", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/63/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/63/events", "html_url": "https://github.com/Tinche/cattrs/issues/63", "id": 457126776, "node_id": "MDU6SXNzdWU0NTcxMjY3NzY=", "number": 63, "title": "typing.Union manual disambiguation function troubles", "user": {"login": "decentral1se", "id": 1991377, "node_id": "MDQ6VXNlcjE5OTEzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1991377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentral1se", "html_url": "https://github.com/decentral1se", "followers_url": "https://api.github.com/users/decentral1se/followers", "following_url": "https://api.github.com/users/decentral1se/following{/other_user}", "gists_url": "https://api.github.com/users/decentral1se/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentral1se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentral1se/subscriptions", "organizations_url": "https://api.github.com/users/decentral1se/orgs", "repos_url": "https://api.github.com/users/decentral1se/repos", "events_url": "https://api.github.com/users/decentral1se/events{/privacy}", "received_events_url": "https://api.github.com/users/decentral1se/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-17T20:11:46Z", "updated_at": "2019-06-24T11:09:09Z", "closed_at": "2019-06-24T09:38:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 0.9.0\r\n* Python version: 3.7\r\n* Operating System: Debian\r\n\r\n### Description\r\n\r\nHave `cattrs` structure the following:\r\n\r\n```python\r\nimport typing\r\nimport attr\r\nfrom foobar import (TypeOne, TypeTwo)\r\n\r\n@attr.s(auto_attribs=True)\r\nclass Container:\r\n    types: typing.List[typing.Union[TypeOne, TypeTwo]]\r\n\r\n@attr.s(auto_attribs=True)\r\nclass TypeOne:\r\n    pass\r\n\r\n@attr.s(auto_attribs=True)\r\nclass TypeTwo:\r\n    pass\r\n```\r\n\r\nAnd then have:\r\n\r\n```python\r\ncattr.structure(cattr.unstructure(Container()))\r\n```\r\n\r\nI tried to simplify / adapt the example for this ticket ...\r\n\r\n### What I Did\r\n\r\nTried to write a disambiguation function but did not have much luck.\r\n\r\n* https://cattrs.readthedocs.io/en/latest/structuring.html#unions\r\n* https://cattrs.readthedocs.io/en/latest/structuring.html#registering-custom-structuring-hooks\r\n\r\n```\r\nValueError: <class 'Container'> has no usable unique attributes.\r\n```\r\n\r\n### Goal\r\n\r\nIf anyone can help me along here, I'd glady submit a documentation PR.\r\n\r\nThanks for this great library :rocket: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/60", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/60/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/60/events", "html_url": "https://github.com/Tinche/cattrs/issues/60", "id": 429977048, "node_id": "MDU6SXNzdWU0Mjk5NzcwNDg=", "number": 60, "title": "add py.typed for MyPy", "user": {"login": "petergaultney", "id": 549720, "node_id": "MDQ6VXNlcjU0OTcyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/549720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petergaultney", "html_url": "https://github.com/petergaultney", "followers_url": "https://api.github.com/users/petergaultney/followers", "following_url": "https://api.github.com/users/petergaultney/following{/other_user}", "gists_url": "https://api.github.com/users/petergaultney/gists{/gist_id}", "starred_url": "https://api.github.com/users/petergaultney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petergaultney/subscriptions", "organizations_url": "https://api.github.com/users/petergaultney/orgs", "repos_url": "https://api.github.com/users/petergaultney/repos", "events_url": "https://api.github.com/users/petergaultney/events{/privacy}", "received_events_url": "https://api.github.com/users/petergaultney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-06T00:27:34Z", "updated_at": "2019-05-14T01:45:13Z", "closed_at": "2019-05-14T01:45:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* cattrs version: 1.0.0.rc0\r\n\r\n### Description\r\n\r\nIf `cattrs` is going to start supporting MyPy type checking (meaning I don't need my own stubs anymore), I think the standard practice, following PEP 561, is to add an empty `py.typed` file to the top level of the package alongside `__init__.py`.  This lets MyPy know that this package is safe to type-check. \r\n\r\nMaybe 1.0.0 isn't fully there, in which case it probably isn't time for this. But just in case it had been overlooked...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/37", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/37/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/37/events", "html_url": "https://github.com/Tinche/cattrs/issues/37", "id": 337206293, "node_id": "MDU6SXNzdWUzMzcyMDYyOTM=", "number": 37, "title": "fix python 3.7", "user": {"login": "sky-code", "id": 5621185, "node_id": "MDQ6VXNlcjU2MjExODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5621185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sky-code", "html_url": "https://github.com/sky-code", "followers_url": "https://api.github.com/users/sky-code/followers", "following_url": "https://api.github.com/users/sky-code/following{/other_user}", "gists_url": "https://api.github.com/users/sky-code/gists{/gist_id}", "starred_url": "https://api.github.com/users/sky-code/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sky-code/subscriptions", "organizations_url": "https://api.github.com/users/sky-code/orgs", "repos_url": "https://api.github.com/users/sky-code/repos", "events_url": "https://api.github.com/users/sky-code/events{/privacy}", "received_events_url": "https://api.github.com/users/sky-code/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-06-30T10:58:58Z", "updated_at": "2018-09-11T11:21:43Z", "closed_at": "2018-07-22T16:30:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 0.8.1\r\n* Python version: 3.7.0\r\n* Operating System: Mac OS High sierra\r\n\r\n### Description\r\n\r\n`cattrs` does not work with python 3.7.\r\n\r\n### What I Did\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/macbook/virtualenvs/venom_venv/lib/python3.7/site-packages/natrixclient/client.py\", line 8, in <module>\r\n    import cattr\r\n  File \"/Users/macbook/virtualenvs/venom_venv/lib/python3.7/site-packages/cattr/__init__.py\", line 2, in <module>\r\n    from .converters import Converter, UnstructureStrategy\r\n  File \"/Users/macbook/virtualenvs/venom_venv/lib/python3.7/site-packages/cattr/converters.py\", line 2, in <module>\r\n    from typing import (\r\nImportError: cannot import name '_Union' from 'typing' (/Users/macbook/.pyenv/versions/3.7.0/lib/python3.7/typing.py)\r\n\r\nProcess finished with exit code 1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/33", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/33/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/33/events", "html_url": "https://github.com/Tinche/cattrs/issues/33", "id": 314275113, "node_id": "MDU6SXNzdWUzMTQyNzUxMTM=", "number": 33, "title": "Minor note re: test suite", "user": {"login": "aldanor", "id": 2418513, "node_id": "MDQ6VXNlcjI0MTg1MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldanor", "html_url": "https://github.com/aldanor", "followers_url": "https://api.github.com/users/aldanor/followers", "following_url": "https://api.github.com/users/aldanor/following{/other_user}", "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions", "organizations_url": "https://api.github.com/users/aldanor/orgs", "repos_url": "https://api.github.com/users/aldanor/repos", "events_url": "https://api.github.com/users/aldanor/events{/privacy}", "received_events_url": "https://api.github.com/users/aldanor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-13T23:14:26Z", "updated_at": "2018-04-18T17:36:39Z", "closed_at": "2018-04-17T22:15:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "As I'm building the conda package for cattrs (https://github.com/conda-forge/staged-recipes/pull/5651), I've noticed one thing about the tests: they use relative imports. This is highly discouraged, especially when using tools aimed at environment isolation (like tox or conda-build). The reason being that you're not testing the installed package (which is what the end-user will have in their environment), but rather the raw source tree.\r\n\r\nThe fix is quite simple: remove `__init__.py` from `tests/` and use absolute imports; tox will work just fine, and this will make it possible to test it via conda-build. If you want to be able to quickly run local dev tests outside of tox, you can always do `PYTHONPATH=. py.test tests/` so it should be fine as well.\r\n\r\nCheers :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/32", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/32/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/32/events", "html_url": "https://github.com/Tinche/cattrs/issues/32", "id": 314022787, "node_id": "MDU6SXNzdWUzMTQwMjI3ODc=", "number": 32, "title": "Pip install fails for cattrs==0.7.0 with Python 3", "user": {"login": "skycaptain", "id": 1119641, "node_id": "MDQ6VXNlcjExMTk2NDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1119641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skycaptain", "html_url": "https://github.com/skycaptain", "followers_url": "https://api.github.com/users/skycaptain/followers", "following_url": "https://api.github.com/users/skycaptain/following{/other_user}", "gists_url": "https://api.github.com/users/skycaptain/gists{/gist_id}", "starred_url": "https://api.github.com/users/skycaptain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skycaptain/subscriptions", "organizations_url": "https://api.github.com/users/skycaptain/orgs", "repos_url": "https://api.github.com/users/skycaptain/repos", "events_url": "https://api.github.com/users/skycaptain/events{/privacy}", "received_events_url": "https://api.github.com/users/skycaptain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-13T08:55:29Z", "updated_at": "2018-04-15T10:47:20Z", "closed_at": "2018-04-15T10:47:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 0.7.0\r\n* Python version: 3.6\r\n* Operating System: macOS 10.13.4\r\n\r\n### Description\r\n\r\nInstalling latest cattrs via pip fails with python 3.\r\n\r\n### What I Did\r\n\r\n```\r\npip install cattrs\r\n\r\nCollecting cattrs\r\n  Using cached cattrs-0.7.0-py2.py3-none-any.whl\r\nCollecting typing>=3.5.3 (from cattrs)\r\n  Downloading typing-3.6.4-py3-none-any.whl\r\nCollecting attrs>=17.3 (from cattrs)\r\n  Using cached attrs-17.4.0-py2.py3-none-any.whl\r\nCollecting functools32>=3.2.3 (from cattrs)\r\n  Using cached functools32-3.2.3-2.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    This backport is for Python 2.7 only.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/30", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/30/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/30/events", "html_url": "https://github.com/Tinche/cattrs/issues/30", "id": 312343940, "node_id": "MDU6SXNzdWUzMTIzNDM5NDA=", "number": 30, "title": "Release a version on PyPI?", "user": {"login": "aldanor", "id": 2418513, "node_id": "MDQ6VXNlcjI0MTg1MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldanor", "html_url": "https://github.com/aldanor", "followers_url": "https://api.github.com/users/aldanor/followers", "following_url": "https://api.github.com/users/aldanor/following{/other_user}", "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions", "organizations_url": "https://api.github.com/users/aldanor/orgs", "repos_url": "https://api.github.com/users/aldanor/repos", "events_url": "https://api.github.com/users/aldanor/events{/privacy}", "received_events_url": "https://api.github.com/users/aldanor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-08T21:36:18Z", "updated_at": "2018-04-12T21:18:23Z", "closed_at": "2018-04-12T21:18:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "@Tinche Hi - I was wondering if it was possible to release the latest version on PyPI (since there were quite a few changes from 0.6.0)?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/29", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/29/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/29/events", "html_url": "https://github.com/Tinche/cattrs/issues/29", "id": 304081069, "node_id": "MDU6SXNzdWUzMDQwODEwNjk=", "number": 29, "title": "'install_requires' must be a string or list of strings", "user": {"login": "FHellmann", "id": 5815289, "node_id": "MDQ6VXNlcjU4MTUyODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5815289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FHellmann", "html_url": "https://github.com/FHellmann", "followers_url": "https://api.github.com/users/FHellmann/followers", "following_url": "https://api.github.com/users/FHellmann/following{/other_user}", "gists_url": "https://api.github.com/users/FHellmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/FHellmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FHellmann/subscriptions", "organizations_url": "https://api.github.com/users/FHellmann/orgs", "repos_url": "https://api.github.com/users/FHellmann/repos", "events_url": "https://api.github.com/users/FHellmann/events{/privacy}", "received_events_url": "https://api.github.com/users/FHellmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-10T15:55:48Z", "updated_at": "2018-12-06T12:23:00Z", "closed_at": "2018-03-11T15:33:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 0.6.0\r\n* Python version: 3.4.2\r\n* Operating System: linux\r\n\r\n### Description\r\n\r\nThe library can not be installed due to a wrong format of the install_requires field. So the library is unable to install and use.\r\n\r\n### What I Did\r\n\r\n```\r\npython3 setup.py install\r\n\r\n...\r\n\r\nInstalled /usr/local/lib/python3.4/dist-packages/My_Smart_Home-0.1.0-py3.4.egg\r\nProcessing dependencies for My-Smart-Home==0.1.0\r\nSearching for cattrs==0.6.0\r\nReading https://pypi.python.org/simple/cattrs/\r\nBest match: cattrs 0.6.0\r\nDownloading https://pypi.python.org/packages/ab/6c/e490455f33c9c36ca14bfc7385e72b1b504192eea36aa39ff693604f0790/cattrs-0.6.0.tar.gz#md5=d61409430787857cd970b0cba7a64965\r\nProcessing cattrs-0.6.0.tar.gz\r\nWriting /tmp/easy_install-u0fnf4u5/cattrs-0.6.0/setup.cfg\r\nRunning cattrs-0.6.0/setup.py -q bdist_egg --dist-dir /tmp/easy_install-u0fnf4u5/cattrs-0.6.0/egg-dist-tmp-jw_e8t2c\r\nerror: Setup script exited with error in cattrs setup command: 'install_requires' must be a string or list of strings containing valid project/version requirement specifiers\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/27", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/27/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/27/events", "html_url": "https://github.com/Tinche/cattrs/issues/27", "id": 295479542, "node_id": "MDU6SXNzdWUyOTU0Nzk1NDI=", "number": 27, "title": "How can I structure to an OrderedDict?", "user": {"login": "pombredanne", "id": 675997, "node_id": "MDQ6VXNlcjY3NTk5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/675997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pombredanne", "html_url": "https://github.com/pombredanne", "followers_url": "https://api.github.com/users/pombredanne/followers", "following_url": "https://api.github.com/users/pombredanne/following{/other_user}", "gists_url": "https://api.github.com/users/pombredanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/pombredanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pombredanne/subscriptions", "organizations_url": "https://api.github.com/users/pombredanne/orgs", "repos_url": "https://api.github.com/users/pombredanne/repos", "events_url": "https://api.github.com/users/pombredanne/events{/privacy}", "received_events_url": "https://api.github.com/users/pombredanne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-08T11:37:05Z", "updated_at": "2018-02-08T21:51:42Z", "closed_at": "2018-02-08T21:51:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`cattr.structure(OrderedDict([(1, 2), (3, 4)]), Dict)` returns an unordered mapping. Is there a way to structure to an ordered mapping instead? (I am on Python 2.7 btw)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/17", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/17/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/17/events", "html_url": "https://github.com/Tinche/cattrs/issues/17", "id": 284422155, "node_id": "MDU6SXNzdWUyODQ0MjIxNTU=", "number": 17, "title": "`pip install cattrs` didn't install requirements automatically", "user": {"login": "pktangyue", "id": 1276646, "node_id": "MDQ6VXNlcjEyNzY2NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1276646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pktangyue", "html_url": "https://github.com/pktangyue", "followers_url": "https://api.github.com/users/pktangyue/followers", "following_url": "https://api.github.com/users/pktangyue/following{/other_user}", "gists_url": "https://api.github.com/users/pktangyue/gists{/gist_id}", "starred_url": "https://api.github.com/users/pktangyue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pktangyue/subscriptions", "organizations_url": "https://api.github.com/users/pktangyue/orgs", "repos_url": "https://api.github.com/users/pktangyue/repos", "events_url": "https://api.github.com/users/pktangyue/events{/privacy}", "received_events_url": "https://api.github.com/users/pktangyue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-25T08:26:44Z", "updated_at": "2018-02-08T06:59:59Z", "closed_at": "2018-02-08T06:59:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 0.5.0\r\n* Python version: 2.7.13\r\n* Operating System: macOS\r\n\r\n### Description\r\n\r\nuse `pip install cattrs` dit not install functools32, singledispatch, enum34, typing automatically.\r\nwhile use `python setup.py install` with source code, it works.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/16", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/16/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/16/events", "html_url": "https://github.com/Tinche/cattrs/issues/16", "id": 272484398, "node_id": "MDU6SXNzdWUyNzI0ODQzOTg=", "number": 16, "title": "Use attr.ib type information", "user": {"login": "moltob", "id": 6240478, "node_id": "MDQ6VXNlcjYyNDA0Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6240478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moltob", "html_url": "https://github.com/moltob", "followers_url": "https://api.github.com/users/moltob/followers", "following_url": "https://api.github.com/users/moltob/following{/other_user}", "gists_url": "https://api.github.com/users/moltob/gists{/gist_id}", "starred_url": "https://api.github.com/users/moltob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moltob/subscriptions", "organizations_url": "https://api.github.com/users/moltob/orgs", "repos_url": "https://api.github.com/users/moltob/repos", "events_url": "https://api.github.com/users/moltob/events{/privacy}", "received_events_url": "https://api.github.com/users/moltob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-09T08:57:33Z", "updated_at": "2017-12-12T07:30:37Z", "closed_at": "2017-12-12T07:30:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "As of the just released version 17.3.0 of the attrs library, attributes can use an additional keyword argument `type` or even use Python 3.6 type information (see http://www.attrs.org/en/stable/examples.html#types).\r\n\r\ncattrs currently only looks at the explicitly given metadata attribute.\r\n\r\nWould adding support for the new type information of attr make sense? Would you accept a PR for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/14", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/14/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/14/events", "html_url": "https://github.com/Tinche/cattrs/issues/14", "id": 269119927, "node_id": "MDU6SXNzdWUyNjkxMTk5Mjc=", "number": 14, "title": "Default value is being ignored while structuring the attr class", "user": {"login": "shwetas1205", "id": 6093825, "node_id": "MDQ6VXNlcjYwOTM4MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6093825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shwetas1205", "html_url": "https://github.com/shwetas1205", "followers_url": "https://api.github.com/users/shwetas1205/followers", "following_url": "https://api.github.com/users/shwetas1205/following{/other_user}", "gists_url": "https://api.github.com/users/shwetas1205/gists{/gist_id}", "starred_url": "https://api.github.com/users/shwetas1205/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shwetas1205/subscriptions", "organizations_url": "https://api.github.com/users/shwetas1205/orgs", "repos_url": "https://api.github.com/users/shwetas1205/repos", "events_url": "https://api.github.com/users/shwetas1205/events{/privacy}", "received_events_url": "https://api.github.com/users/shwetas1205/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-27T14:08:46Z", "updated_at": "2017-10-31T12:32:51Z", "closed_at": "2017-10-27T21:23:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 0.5.0\r\n* Python version: 3.6.2\r\n* Operating System: Debian GNU/Linux 8.9 (jessie)\r\n\r\n### Description\r\n\r\nWhen I am trying use structure on an attr class having default values set for few optional attributes, those default values are being ignored and not returning to returned object\r\n\r\n### What I Did\r\nHere is the sample code:\r\n```\r\nimport attr\r\nfrom cattr import structure, typed\r\nfrom typing import Optional\r\n\r\n\r\n@attr.s\r\nclass A(object):\r\n    a = typed(Optional[int], default=0)\r\n\r\n@attr.s\r\nclass B(object):\r\n    b = attr.ib(validator=optional(instance_of(int)), default=0)\r\n\r\n```\r\nWhen I tried ```structure({}, A)``` I expected ```A1(a=0)``` but I get ```A1(a=None)```\r\nSimilarly for ```structure({}, B)``` I get following error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/xxx/cattr/converters.py\", line 171, in structure\r\n    return self.structure_func.dispatch(cl)(obj, cl)\r\n  File \"/xxx/cattr/converters.py\", line 86, in <lambda>\r\n    lambda *args, **kwargs: self.structure_attrs(*args, **kwargs))\r\n  File \"/xxx/cattr/converters.py\", line 276, in structure_attrs_fromdict\r\n    converted = self._structure_attr_from_dict(a, name, obj)\r\n  File \"/xxx/cattr/converters.py\", line 286, in _structure_attr_from_dict\r\n    return mapping[name]\r\nKeyError: 'b'\r\n```\r\nA fix something like will fix the issue: https://github.com/shwetas1205/cattrs/commit/7d6d6fa102e662d0a59010e0184fbeebb9f4fa4d \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/10", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/10/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/10/events", "html_url": "https://github.com/Tinche/cattrs/issues/10", "id": 254892256, "node_id": "MDU6SXNzdWUyNTQ4OTIyNTY=", "number": 10, "title": "cattr.structure does not respect default value from attr.ib", "user": {"login": "uhjish", "id": 866427, "node_id": "MDQ6VXNlcjg2NjQyNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/866427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uhjish", "html_url": "https://github.com/uhjish", "followers_url": "https://api.github.com/users/uhjish/followers", "following_url": "https://api.github.com/users/uhjish/following{/other_user}", "gists_url": "https://api.github.com/users/uhjish/gists{/gist_id}", "starred_url": "https://api.github.com/users/uhjish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uhjish/subscriptions", "organizations_url": "https://api.github.com/users/uhjish/orgs", "repos_url": "https://api.github.com/users/uhjish/repos", "events_url": "https://api.github.com/users/uhjish/events{/privacy}", "received_events_url": "https://api.github.com/users/uhjish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-03T18:34:24Z", "updated_at": "2017-11-09T20:24:38Z", "closed_at": "2017-11-09T20:24:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 0.40\r\n* Python version: 3.6.2\r\n* Operating System: Ubuntu 16.04 x86_64\r\n\r\n### Description\r\n\r\nThe attrs package allows default values for any given field, and allows initialisation of an attrs class without keys for which a default was provided. \r\n\r\nWith the following definition, \r\n```[python]\r\n@attr.s(slots=True, frozen=True)\r\nclass Cfg(object):\r\n    a = typed(int)\r\n    b = typed(Optional[int])\r\n    c = attr.ib(convert=int, default=7)\r\n    d = typed(Optional[int], default=5)\r\n```\r\nWe can instantiate a Cfg object as:\r\n```\r\nIn [243]: Cfg(**dt)\r\nOut[243]: Cfg(a=5, b=None, c=7, d=5)\r\n```\r\nWhen used with cattr.structure, however, the default values seem to be entirely ignored, moreover there is a KeyError exception thrown. While wrapping the attr.ib type in an Optional avoids the error, we wind up with None instead of the provided default value.\r\n\r\n```\r\ncattr.structure_attrs_fromdict({'a':5,'b':None}, Cfg)\r\n\r\nIn [208]: cattr.structure_attrs_fromdict(dt, Cfg)\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-208-5adc18822e6a> in <module>()\r\n----> 1 cattr.structure_attrs_fromdict(dt, Cfg)\r\n\r\n~/dev/survey_stats/venv/lib/python3.6/site-packages/cattr/converters.py in structure_attrs_fromdict(self, obj, cl)\r\n    255             name = a.name\r\n    256             # We detect the type by metadata.\r\n--> 257             converted = self._structure_attr_from_dict(a, name, obj)\r\n    258             conv_obj[name] = converted\r\n    259\r\n\r\n~/dev/survey_stats/venv/lib/python3.6/site-packages/cattr/converters.py in _structure_attr_from_dict(self, a, name, mapping)\r\n    265         if type_ is None:\r\n    266             # No type.\r\n--> 267             return mapping[name]\r\n    268         if isinstance(type_, _Union):\r\n    269             # This is a union.\r\n\r\nKeyError: 'c'\r\n\r\nIn [249]: cattr.structure_attrs_fromdict({'a':5,'b':None, 'c':3}, Cfg)\r\nOut[249]: Cfg(a=5, b=None, c=3, d=None)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/9", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/9/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/9/events", "html_url": "https://github.com/Tinche/cattrs/issues/9", "id": 254197543, "node_id": "MDU6SXNzdWUyNTQxOTc1NDM=", "number": 9, "title": "Switch to registering functions vs singledispatch", "user": {"login": "toumorokoshi", "id": 391240, "node_id": "MDQ6VXNlcjM5MTI0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/391240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toumorokoshi", "html_url": "https://github.com/toumorokoshi", "followers_url": "https://api.github.com/users/toumorokoshi/followers", "following_url": "https://api.github.com/users/toumorokoshi/following{/other_user}", "gists_url": "https://api.github.com/users/toumorokoshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/toumorokoshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toumorokoshi/subscriptions", "organizations_url": "https://api.github.com/users/toumorokoshi/orgs", "repos_url": "https://api.github.com/users/toumorokoshi/repos", "events_url": "https://api.github.com/users/toumorokoshi/events{/privacy}", "received_events_url": "https://api.github.com/users/toumorokoshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-31T03:06:23Z", "updated_at": "2017-10-06T20:14:35Z", "closed_at": "2017-10-06T20:14:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* cattrs version: 0.4.0\r\n\r\n### Description\r\n\r\nI've run into a couple issues with using cattrs, and I think switching from singledispatch to a combination of can_handle_type functions and a lrucache will fix them.\r\n\r\nHere's the problems I've found:\r\n\r\n1. importing typing and cattrs in the same python interpreter leads to an infinite recursion error for Python2.\r\n\r\nI understand the motivation for vendor typing, but it makes it impossible to use a project with the standard typing module and cattrs. This example in Python2 leads to an recursive error, recursing in the vendored typing forever.\r\n\r\n```\r\nimport attr\r\nimport cattr\r\nfrom typing import List\r\n\r\n\r\n@attr.s\r\nclass Point(object):\r\n    x = cattr.typed(int)\r\n    y = cattr.typed(float)\r\n\r\n\r\npoint = cattr.structure({\"x\": 1, \"y\": 1.0}, Point)\r\n\r\ndef foo():\r\n    return [1, 2, 3]\r\n```\r\n\r\n2. The vendored typing is old\r\n\r\nThe vendored typing module doesn't contain some fixes, such as: \r\n\r\nhttps://bugs.python.org/issue28339\r\n\r\nLeading to an error message like:\r\n\r\nhttps://travis-ci.org/toumorokoshi/transmute-core/jobs/269864064\r\n\r\n```\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/lib/python3.5/site-packages/_pytest/config.py\", line 379, in _importconftest\r\n    mod = conftestpath.pyimport()\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/lib/python3.5/site-packages/py/_path/local.py\", line 662, in pyimport\r\n    __import__(modname)\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/transmute_core/__init__.py\", line 12, in <module>\r\n    from .swagger import generate_swagger_html, get_swagger_static_root, SwaggerSpec\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/transmute_core/swagger/__init__.py\", line 1, in <module>\r\n    import jinja2\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/lib/python3.5/site-packages/jinja2/__init__.py\", line 33, in <module>\r\n    from jinja2.environment import Environment, Template\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/lib/python3.5/site-packages/jinja2/environment.py\", line 15, in <module>\r\n    from jinja2 import nodes\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/lib/python3.5/site-packages/jinja2/nodes.py\", line 19, in <module>\r\n    from jinja2.utils import Markup\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/lib/python3.5/site-packages/jinja2/utils.py\", line 486, in <module>\r\n    MutableMapping.register(LRUCache)\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/lib/python3.5/abc.py\", line 158, in register\r\n    if issubclass(subclass, cls):\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/lib/python3.5/abc.py\", line 226, in __subclasscheck__\r\n    if issubclass(subclass, scls):\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/lib/python3.5/abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"/opt/python/3.5.3/lib/python3.5/typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"/home/travis/build/toumorokoshi/transmute-core/lib/python3.5/site-packages/cattr/vendor/python3/typing.py\", line 1139, in __subclasscheck__\r\n    raise TypeError(\"Parameterized generics cannot be used with class \"\r\nTypeError: Parameterized generics cannot be used with class or instance checks\r\nERROR: could not load /home/travis/build/toumorokoshi/transmute-core/transmute_core/tests/conftest.py\r\n```\r\n\r\n3. Unable to add typing or model systems which aren't depending on types.\r\n\r\nFor example, Schematics uses instances of classes sometimes, rather than a type per se:\r\n\r\nhttp://schematics.readthedocs.io/en/latest/\r\n\r\nThe fields specifically are instances of XType() classes, rather than a class in and of itself.\r\n\r\n\r\n\r\nFrom my understanding, the rationale to vendor typing is to allow usage of singledispatch. Since it looks like there's already issues with this strategy today (https://github.com/python/typing/issues/405), I think it'd be best to move to a more flexible system. E.g. a simple system that registers function and a structure / unstructure hook would be enough to support all of these situations:\r\n\r\n```\r\n# maybe find a non-private way to do this, such as typing-inspeect\r\nfrom typing import _gorg, GenericMeta, List\r\nself.structure.register(lambda x: isinstance(x, GenericMeta) and _gorg(x) is List, _structure_seq)\r\n```\r\n\r\nTo optimize, one could use the id of the type as a key in a lrucache.\r\n\r\nI'd send a PR, but wanted to jot down thoughts first.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/8", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/8/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/8/events", "html_url": "https://github.com/Tinche/cattrs/issues/8", "id": 236069219, "node_id": "MDU6SXNzdWUyMzYwNjkyMTk=", "number": 8, "title": "What help is needed to release the project?", "user": {"login": "toumorokoshi", "id": 391240, "node_id": "MDQ6VXNlcjM5MTI0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/391240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toumorokoshi", "html_url": "https://github.com/toumorokoshi", "followers_url": "https://api.github.com/users/toumorokoshi/followers", "following_url": "https://api.github.com/users/toumorokoshi/following{/other_user}", "gists_url": "https://api.github.com/users/toumorokoshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/toumorokoshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toumorokoshi/subscriptions", "organizations_url": "https://api.github.com/users/toumorokoshi/orgs", "repos_url": "https://api.github.com/users/toumorokoshi/repos", "events_url": "https://api.github.com/users/toumorokoshi/events{/privacy}", "received_events_url": "https://api.github.com/users/toumorokoshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-15T03:44:18Z", "updated_at": "2017-10-06T20:14:50Z", "closed_at": "2017-10-06T20:14:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\r\n\r\ncattrs is really nice! Do you need help getting it released?\r\n\r\nFrom my perspective, being able to do nested deserialization and serialization of attrs objects to primitives is really, really cool.\r\n\r\nI've been looking for a really fast library to pair up with work an api generation library I've been working on:\r\n\r\nhttp://aiohttp-transmute.readthedocs.io/\r\n\r\nand attrs w/ validators is by far the fastest. If it's a small push to get it released, I'd be glad to help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/5", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/5/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/5/events", "html_url": "https://github.com/Tinche/cattrs/issues/5", "id": 205839195, "node_id": "MDU6SXNzdWUyMDU4MzkxOTU=", "number": 5, "title": "Is there interest/value in making cattrs work on python 2.7?", "user": {"login": "adetokunbo", "id": 25447413, "node_id": "MDQ6VXNlcjI1NDQ3NDEz", "avatar_url": "https://avatars0.githubusercontent.com/u/25447413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adetokunbo", "html_url": "https://github.com/adetokunbo", "followers_url": "https://api.github.com/users/adetokunbo/followers", "following_url": "https://api.github.com/users/adetokunbo/following{/other_user}", "gists_url": "https://api.github.com/users/adetokunbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/adetokunbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adetokunbo/subscriptions", "organizations_url": "https://api.github.com/users/adetokunbo/orgs", "repos_url": "https://api.github.com/users/adetokunbo/repos", "events_url": "https://api.github.com/users/adetokunbo/events{/privacy}", "received_events_url": "https://api.github.com/users/adetokunbo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-02-07T09:59:31Z", "updated_at": "2017-05-06T13:36:45Z", "closed_at": "2017-04-01T23:06:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* cattrs version: 0.2.0\r\n* Python version: 2.7.13\r\n* Operating System: MacOS Sierra 10.12.2\r\n\r\n### Description\r\n\r\nI wanted to try to use cattrs on python 2.7 for a personal project\r\nI know that this is supposed to be a python3-specific project, but ...\r\n\r\n### What I Did\r\n\r\n... I made a few changes, and was able to create a [branch](https://github.com/adetokunbo/cattrs/tree/port-to-py27/cattr) that successful runs the current tests on python 2.7.  I.e\r\n\r\n```\r\ntox -e py27\r\n```\r\n\r\nworks.\r\n\r\nThere's still work to do:\r\n\r\n- the changes have broken python3.5, though that looks to be due to differences between what's available in the typing [backport on pypi](https://pypi.python.org/pypi/typing) and what's available in python3.5, rather than changes needed to make cattrs work on py2.7\r\n\r\nI can work on fixing the issues and submit a PR, but I wanted to get early feedback before spending time on it.  E.g, it'd be worth knowing if cattrs should support python2.7 or not.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/4", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/4/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/4/events", "html_url": "https://github.com/Tinche/cattrs/issues/4", "id": 198904469, "node_id": "MDU6SXNzdWUxOTg5MDQ0Njk=", "number": 4, "title": "Python 3.6 Support", "user": {"login": "hawkowl", "id": 3307100, "node_id": "MDQ6VXNlcjMzMDcxMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3307100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkowl", "html_url": "https://github.com/hawkowl", "followers_url": "https://api.github.com/users/hawkowl/followers", "following_url": "https://api.github.com/users/hawkowl/following{/other_user}", "gists_url": "https://api.github.com/users/hawkowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkowl/subscriptions", "organizations_url": "https://api.github.com/users/hawkowl/orgs", "repos_url": "https://api.github.com/users/hawkowl/repos", "events_url": "https://api.github.com/users/hawkowl/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkowl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-01-05T08:53:19Z", "updated_at": "2017-05-06T13:36:07Z", "closed_at": "2017-05-06T13:36:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 0.2.0\r\n* Python version: 3.6.0\r\n* Operating System: Linux x64\r\n\r\n### Description\r\n\r\n`cattrs` fails to import on Python 3.6. :(\r\n\r\n```\r\n2017-01-04T09:10:24.063036+00:00 app[web.1]: Traceback (most recent call last):\r\n2017-01-04T09:10:24.063066+00:00 app[web.1]:   File \"/app/.heroku/python/bin/twist\", line 11, in <module>\r\n2017-01-04T09:10:24.063243+00:00 app[web.1]:     load_entry_point('Twisted==16.6.0', 'console_scripts', 'twist')()\r\n2017-01-04T09:10:24.063246+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/twisted/application/twist/_twist.py\", line 132, in main\r\n2017-01-04T09:10:24.063387+00:00 app[web.1]:     options = cls.options(argv)\r\n2017-01-04T09:10:24.063398+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/twisted/application/twist/_twist.py\", line 38, in options\r\n2017-01-04T09:10:24.063570+00:00 app[web.1]:     options.parseOptions(argv[1:])\r\n2017-01-04T09:10:24.063685+00:00 app[web.1]:     Options.parseOptions(self, options=options)\r\n2017-01-04T09:10:24.063571+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/twisted/application/twist/_options.py\", line 160, in parseOptions\r\n2017-01-04T09:10:24.063687+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/twisted/python/usage.py\", line 265, in parseOptions\r\n2017-01-04T09:10:24.063866+00:00 app[web.1]:     self.subOptions = parser()\r\n2017-01-04T09:10:24.063867+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/twisted/application/twist/_options.py\", line 185, in <lambda>\r\n2017-01-04T09:10:24.064000+00:00 app[web.1]:     lambda plugin=plugin: plugin.options(),\r\n2017-01-04T09:10:24.064002+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/twisted/application/service.py\", line 76, in get\r\n2017-01-04T09:10:24.064110+00:00 app[web.1]:     return namedAny(self.module).Options\r\n2017-01-04T09:10:24.064111+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/twisted/python/reflect.py\", line 300, in namedAny\r\n2017-01-04T09:10:24.064278+00:00 app[web.1]:     topLevelPackage = _importAndCheckStack(trialname)\r\n2017-01-04T09:10:24.064279+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/twisted/python/reflect.py\", line 239, in _importAndCheckStack\r\n2017-01-04T09:10:24.064416+00:00 app[web.1]:     return __import__(importName)\r\n2017-01-04T09:10:24.064417+00:00 app[web.1]:   File \"/app/src/taptap/service.py\", line 6, in <module>\r\n2017-01-04T09:10:24.064506+00:00 app[web.1]:     from taptap.web import CoreResource\r\n2017-01-04T09:10:24.064507+00:00 app[web.1]:   File \"/app/src/taptap/web.py\", line 2, in <module>\r\n2017-01-04T09:10:24.064617+00:00 app[web.1]:     import cattr\r\n2017-01-04T09:10:24.064619+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/cattr/__init__.py\", line 1, in <module>\r\n2017-01-04T09:10:24.064692+00:00 app[web.1]:     from .converters import Converter\r\n2017-01-04T09:10:24.064693+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/cattr/converters.py\", line 23, in <module>\r\n2017-01-04T09:10:24.064797+00:00 app[web.1]:     class Converter(object):\r\n2017-01-04T09:10:24.064799+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/cattr/converters.py\", line 180, in Converter\r\n2017-01-04T09:10:24.064946+00:00 app[web.1]:     def _loads_list(self, cl: Type[GenericMeta], obj: Iterable[T]) -> List[T]:\r\n2017-01-04T09:10:24.064947+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/typing.py\", line 623, in inner\r\n2017-01-04T09:10:24.065204+00:00 app[web.1]:     return cached(*args, **kwds)\r\n2017-01-04T09:10:24.065205+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/typing.py\", line 1062, in __getitem__\r\n2017-01-04T09:10:24.065572+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/typing.py\", line 965, in __new__\r\n2017-01-04T09:10:24.065571+00:00 app[web.1]:     orig_bases=self.__orig_bases__)\r\n2017-01-04T09:10:24.066164+00:00 app[web.1]:     self.__tree_hash__ = hash(self._subs_tree()) if origin else hash((self.__name__,))\r\n2017-01-04T09:10:24.066181+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/typing.py\", line 1007, in _subs_tree\r\n2017-01-04T09:10:24.066791+00:00 app[web.1]:     tree_args = _subs_tree(self, tvars, args)\r\n2017-01-04T09:10:24.066795+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/typing.py\", line 548, in _subs_tree\r\n2017-01-04T09:10:24.067162+00:00 app[web.1]:     tree_args.append(_replace_arg(arg, tvars, args))\r\n2017-01-04T09:10:24.067166+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/typing.py\", line 517, in _replace_arg\r\n2017-01-04T09:10:24.067393+00:00 app[web.1]:     return arg._subs_tree(tvars, args)\r\n2017-01-04T09:10:24.067394+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python3.6/typing.py\", line 1005, in _subs_tree\r\n2017-01-04T09:10:24.067754+00:00 app[web.1]:     if self.__origin__ is None:\r\n2017-01-04T09:10:24.067755+00:00 app[web.1]: AttributeError: 'list' object has no attribute '__origin__'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/3", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/3/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/3/events", "html_url": "https://github.com/Tinche/cattrs/issues/3", "id": 197486356, "node_id": "MDU6SXNzdWUxOTc0ODYzNTY=", "number": 3, "title": "cattrs has trouble loading attr classes with a list", "user": {"login": "hawkowl", "id": 3307100, "node_id": "MDQ6VXNlcjMzMDcxMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3307100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkowl", "html_url": "https://github.com/hawkowl", "followers_url": "https://api.github.com/users/hawkowl/followers", "following_url": "https://api.github.com/users/hawkowl/following{/other_user}", "gists_url": "https://api.github.com/users/hawkowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkowl/subscriptions", "organizations_url": "https://api.github.com/users/hawkowl/orgs", "repos_url": "https://api.github.com/users/hawkowl/repos", "events_url": "https://api.github.com/users/hawkowl/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkowl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-25T03:53:53Z", "updated_at": "2017-02-08T23:01:16Z", "closed_at": "2017-02-08T23:01:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "* cattrs version: 0.2.0\r\n* Python version: 3.5.2 (pyenv)\r\n* Operating System: macOS 10.12\r\n\r\n### Description\r\n\r\nTried to load an attrs with a list, I'll just dump the code & file here:\r\n\r\nFile:\r\n`[{\"id\": 1, \"name\": \"task\", \"counts\": []}]`\r\n\r\nCode:\r\n\r\n```\r\nimport attr\r\nimport cattr\r\nimport json\r\n\r\nfrom typing import List\r\nfrom attr.validators import instance_of\r\n\r\n\r\nfrom twisted.python.filepath import FilePath\r\n\r\n\r\n@attr.s\r\nclass WordCount(object):\r\n    at = attr.ib(validator=instance_of(int))\r\n    count = attr.ib(validator=instance_of(int))\r\n\r\n@attr.s\r\nclass Work(object):\r\n    id = attr.ib(validator=instance_of(int))\r\n    name = attr.ib(validator=instance_of(str))\r\n    counts = attr.ib(validator=instance_of(list))\r\n    completed = attr.ib(validator=instance_of(bool), default=False)\r\n\r\n\r\ndef dump_works(works):\r\n    return json.dumps(cattr.dumps(works), separators=(',',':')).encode('utf8')\r\n\r\n\r\ndef save_works(works):\r\n    dest = FilePath(\"works.json\")\r\n    dest.setContent(dump_works(works))\r\n\r\n\r\ndef load_works():\r\n\r\n    dest = FilePath(\"works.json\")\r\n\r\n    if not dest.exists():\r\n        dest.setContent(b\"[]\")\r\n\r\n    loaded = cattr.loads(\r\n        json.loads(dest.getContent().decode('utf8')),\r\n        List[Work])\r\n\r\n    loaded.sort(key=lambda x: x.id)\r\n    return loaded\r\n```\r\n\r\n### What I Did\r\n\r\nGot an exception :(\r\n\r\n```\r\n\t  File \"/Users/red/code/taptapstats/src/taptap/web.py\", line 17, in works_root\r\n\t    works = load_works()\r\n\t  File \"/Users/red/code/taptapstats/src/taptap/work.py\", line 45, in load_works\r\n\t    List[Work])\r\n\t  File \"/Users/red/code/taptapstats/venv/lib/python3.5/site-packages/cattr/converters.py\", line 83, in loads\r\n\t    return self._loads.dispatch(cl)(cl, obj)\r\n\t  File \"/Users/red/code/taptapstats/venv/lib/python3.5/site-packages/cattr/converters.py\", line 187, in _loads_list\r\n\t    return [conv(elem_type, e) for e in obj]\r\n\t  File \"/Users/red/code/taptapstats/venv/lib/python3.5/site-packages/cattr/converters.py\", line 187, in <listcomp>\r\n\t    return [conv(elem_type, e) for e in obj]\r\n\t  File \"/Users/red/code/taptapstats/venv/lib/python3.5/site-packages/cattr/converters.py\", line 136, in _loads_default\r\n\t    return self._loads_attrs(cl, obj)\r\n\t  File \"/Users/red/code/taptapstats/venv/lib/python3.5/site-packages/cattr/converters.py\", line 157, in _loads_attrs\r\n\t    converted = self._handle_attr_attribute(name, validator, obj)\r\n\t  File \"/Users/red/code/taptapstats/venv/lib/python3.5/site-packages/cattr/converters.py\", line 176, in _handle_attr_attribute\r\n\t    return self._loads.dispatch(type_)(type_, mapping.get(name))\r\n\t  File \"/Users/red/code/taptapstats/venv/lib/python3.5/site-packages/cattr/converters.py\", line 182, in _loads_list\r\n\t    if not cl.__args__ or cl.__args__[0] is Any:\r\n\tbuiltins.AttributeError: type object 'list' has no attribute '__args__'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/2", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/2/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/2/events", "html_url": "https://github.com/Tinche/cattrs/issues/2", "id": 179754493, "node_id": "MDU6SXNzdWUxNzk3NTQ0OTM=", "number": 2, "title": "cattrs should use `dump` and `load` vs `dumps` and `loads`", "user": {"login": "hawkowl", "id": 3307100, "node_id": "MDQ6VXNlcjMzMDcxMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3307100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkowl", "html_url": "https://github.com/hawkowl", "followers_url": "https://api.github.com/users/hawkowl/followers", "following_url": "https://api.github.com/users/hawkowl/following{/other_user}", "gists_url": "https://api.github.com/users/hawkowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkowl/subscriptions", "organizations_url": "https://api.github.com/users/hawkowl/orgs", "repos_url": "https://api.github.com/users/hawkowl/repos", "events_url": "https://api.github.com/users/hawkowl/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkowl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-09-28T12:07:48Z", "updated_at": "2017-03-18T18:58:34Z", "closed_at": "2017-03-18T14:10:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "`dumps` and `loads` in json (and other modules) stands for 'dump (to) string' or 'load (from) string', so the similar API doesn't copy across exactly. `json` in particular offers `dump` and `load` to read from a file, maybe `cattrs` should use these names because it is operating on types, not strings.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Tinche/cattrs/issues/1", "repository_url": "https://api.github.com/repos/Tinche/cattrs", "labels_url": "https://api.github.com/repos/Tinche/cattrs/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/Tinche/cattrs/issues/1/comments", "events_url": "https://api.github.com/repos/Tinche/cattrs/issues/1/events", "html_url": "https://github.com/Tinche/cattrs/issues/1", "id": 178553415, "node_id": "MDU6SXNzdWUxNzg1NTM0MTU=", "number": 1, "title": "Your pypi page looks weird", "user": {"login": "pombredanne", "id": 675997, "node_id": "MDQ6VXNlcjY3NTk5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/675997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pombredanne", "html_url": "https://github.com/pombredanne", "followers_url": "https://api.github.com/users/pombredanne/followers", "following_url": "https://api.github.com/users/pombredanne/following{/other_user}", "gists_url": "https://api.github.com/users/pombredanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/pombredanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pombredanne/subscriptions", "organizations_url": "https://api.github.com/users/pombredanne/orgs", "repos_url": "https://api.github.com/users/pombredanne/repos", "events_url": "https://api.github.com/users/pombredanne/events{/privacy}", "received_events_url": "https://api.github.com/users/pombredanne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-22T08:45:12Z", "updated_at": "2016-09-22T14:44:51Z", "closed_at": "2016-09-22T14:44:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The ReST is likely not correct Pypi-wise. May be you can check it with restview?\n", "performed_via_github_app": null, "score": 1.0}]}