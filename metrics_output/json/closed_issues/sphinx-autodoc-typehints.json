{"total_count": 64, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/144", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/144/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/144/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/144", "id": 621114750, "node_id": "MDU6SXNzdWU2MjExMTQ3NTA=", "number": 144, "title": "Support all parameter field names", "user": {"login": "adblair", "id": 3610573, "node_id": "MDQ6VXNlcjM2MTA1NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3610573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adblair", "html_url": "https://github.com/adblair", "followers_url": "https://api.github.com/users/adblair/followers", "following_url": "https://api.github.com/users/adblair/following{/other_user}", "gists_url": "https://api.github.com/users/adblair/gists{/gist_id}", "starred_url": "https://api.github.com/users/adblair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adblair/subscriptions", "organizations_url": "https://api.github.com/users/adblair/orgs", "repos_url": "https://api.github.com/users/adblair/repos", "events_url": "https://api.github.com/users/adblair/events{/privacy}", "received_events_url": "https://api.github.com/users/adblair/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311997, "node_id": "MDU6TGFiZWwyNjMzMTE5OTc=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T16:22:10Z", "updated_at": "2020-06-21T14:58:21Z", "closed_at": "2020-06-21T06:20:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sphinx [supports](https://www.sphinx-doc.org/en/master/usage/restructuredtext/domains.html#info-field-lists) six different field names for parameter descriptions:\r\n\r\n```\r\n:param\r\n:parameter\r\n:arg\r\n:argument\r\n:key\r\n:keyword\r\n```\r\n\r\nAs far as I can tell, sphinx-autodoc-typehints only supports `:param`. Please could support be added for the other five?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/142", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/142/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/142/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/142", "id": 619578917, "node_id": "MDU6SXNzdWU2MTk1Nzg5MTc=", "number": 142, "title": "IO type causes stacktrace", "user": {"login": "atagar", "id": 1195011, "node_id": "MDQ6VXNlcjExOTUwMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1195011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atagar", "html_url": "https://github.com/atagar", "followers_url": "https://api.github.com/users/atagar/followers", "following_url": "https://api.github.com/users/atagar/following{/other_user}", "gists_url": "https://api.github.com/users/atagar/gists{/gist_id}", "starred_url": "https://api.github.com/users/atagar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atagar/subscriptions", "organizations_url": "https://api.github.com/users/atagar/orgs", "repos_url": "https://api.github.com/users/atagar/repos", "events_url": "https://api.github.com/users/atagar/events{/privacy}", "received_events_url": "https://api.github.com/users/atagar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-17T00:04:08Z", "updated_at": "2020-06-07T14:22:17Z", "closed_at": "2020-06-07T14:22:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following method signature...\r\n\r\n`def my_method(file_handle: Optional[IO[bytes]] = None):`\r\n\r\nCaused sphinx-autodoc-typehints to stacktrace with...\r\n\r\n```\r\n# Sphinx version: 3.0.3\r\n# Python version: 3.7.0 (CPython)\r\n# Docutils version: 0.16 release\r\n...\r\nTraceback (most recent call last):\r\n  ...\r\n  File \"/home/atagar/.local/lib/python3.7/site-packages/sphinx/application.py\", line 445, in emit\r\n    return self.events.emit(event, *args)\r\n  File \"/home/atagar/.local/lib/python3.7/site-packages/sphinx/events.py\", line 107, in emit\r\n    results.append(listener.handler(self.app, *args))\r\n  File \"/home/atagar/.local/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 371, in process_docstring\r\n    annotation, fully_qualified=app.config.typehints_fully_qualified)\r\n  File \"/home/atagar/.local/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 143, in format_annotation\r\n    for arg in args))\r\n  File \"/home/atagar/.local/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 143, in <genexpr>\r\n    for arg in args))\r\n  File \"/home/atagar/.local/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 113, in format_annotation\r\n    args = get_annotation_args(annotation, module, class_name)\r\n  File \"/home/atagar/.local/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 63, in get_annotation_args\r\n    original = getattr(sys.modules[module], class_name)\r\nTypeError: getattr(): attribute name must be string\r\n```\r\n\r\nChanging the IO[bytes] to another type (like BinaryIO) avoids this. If I add a print statement get_annotation_args provides...\r\n\r\n`annotation: typing.IO[bytes], module: typing, class_name: <abc.abstractproperty object at 0x7fae1e1ba768>`\r\n\r\nExpanding the method's exception catch to include TypeErrors could be a simple short term workaround.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/139", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/139/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/139/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/139", "id": 615271114, "node_id": "MDU6SXNzdWU2MTUyNzExMTQ=", "number": 139, "title": "Getting an `IndentationError` related specifically to a doc string while building.", "user": {"login": "demitri", "id": 64314, "node_id": "MDQ6VXNlcjY0MzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/64314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/demitri", "html_url": "https://github.com/demitri", "followers_url": "https://api.github.com/users/demitri/followers", "following_url": "https://api.github.com/users/demitri/following{/other_user}", "gists_url": "https://api.github.com/users/demitri/gists{/gist_id}", "starred_url": "https://api.github.com/users/demitri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/demitri/subscriptions", "organizations_url": "https://api.github.com/users/demitri/orgs", "repos_url": "https://api.github.com/users/demitri/repos", "events_url": "https://api.github.com/users/demitri/events{/privacy}", "received_events_url": "https://api.github.com/users/demitri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311996, "node_id": "MDU6TGFiZWwyNjMzMTE5OTY=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-05-09T22:20:09Z", "updated_at": "2020-07-30T17:32:21Z", "closed_at": "2020-07-30T16:48:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've encountered a Sphinx bug which I reported [here](https://github.com/sphinx-doc/sphinx/issues/7631), and it was pointed out to me (via the log) that the error was raised by sphinx-autodoc-hints. The report is duplicated below.\r\n\r\nI'm getting the following error when trying to build HTML files:\r\n\r\n```\r\n/usr/local/anaconda/lib/python3.7/site-packages/sphinx/util/inspect.py:555: RemovedInSphinx40Warning: sphinx.util.inspect.Signature() is deprecated\r\n  RemovedInSphinx40Warning)\r\n\r\nException occurred:\r\n  File \"/usr/local/anaconda/lib/python3.7/site-packages/typed_ast/ast3.py\", line 62, in parse\r\n    return _ast3._parse(source, filename, mode, feature_version)\r\n  File \"<unknown>\", line 1\r\n    @classmethod\r\n    ^\r\nIndentationError: unexpected indent\r\nThe full traceback has been saved in /var/folders/yp/lf1xdvp165n5xb7hcrwzpngc0000gn/T/sphinx-err-jidws8_h.log, if you want to report the issue to the developers.\r\nPlease also report this if it was a user error, so that a better error message can be provided next time.\r\nA bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!\r\nmake: *** [html] Error 2\r\n```\r\n\r\nThe code that it's getting caught on is this:\r\n\r\n```python\r\n\t@classmethod\r\n\tdef fromFITSHeader(cls, fits_header=None, uncertainty=4.848e-6):\r\n\t\t'''\r\n\t\tFactory method to create a region from the provided FITS header; the returned object will be as specific as possible (but probably an ASTPolygon).\r\n\t\t\r\n\t\t:param fits_header: a FITS header (Astropy, fitsio, an array of cards)\r\n\t\t:param uncertainty: defaults to 4.848e-6, an uncertainty of 1 arcsec\r\n\t\t'''\r\n\t\tif fits_header is None:\r\n\t\t\traise ValueError(\"This method requires a 'fits_header' to be set.\")\r\n\r\n\t\t. . .\r\n```\r\n\r\nI am sure the problem is not an indentation error (at least as far as the Python code). When I delete the entire docstring, `make html` works without error. *Any* docstring I add causes the error, even a blank one, e.g.\r\n\r\n```\r\n'''\r\n\r\n'''\r\n```\r\n\r\nThe Sphinx log is attached here:\r\n[sphinx-err-gnkuj5m5.log](https://github.com/sphinx-doc/sphinx/files/4596009/sphinx-err-gnkuj5m5.log)\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/137", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/137/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/137/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/137", "id": 608602709, "node_id": "MDU6SXNzdWU2MDg2MDI3MDk=", "number": 137, "title": "Ref to type definition.", "user": {"login": "hound672", "id": 10366926, "node_id": "MDQ6VXNlcjEwMzY2OTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/10366926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hound672", "html_url": "https://github.com/hound672", "followers_url": "https://api.github.com/users/hound672/followers", "following_url": "https://api.github.com/users/hound672/following{/other_user}", "gists_url": "https://api.github.com/users/hound672/gists{/gist_id}", "starred_url": "https://api.github.com/users/hound672/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hound672/subscriptions", "organizations_url": "https://api.github.com/users/hound672/orgs", "repos_url": "https://api.github.com/users/hound672/repos", "events_url": "https://api.github.com/users/hound672/events{/privacy}", "received_events_url": "https://api.github.com/users/hound672/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-28T20:42:46Z", "updated_at": "2020-06-07T14:32:58Z", "closed_at": "2020-06-07T14:32:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\nThere is some class, e.g:\r\n```\r\nclass SomeClass:\r\n    def some_method(val: AnotherMyClass) -> None:\r\n        pass\r\n```\r\nIs there a way to pass ref for `AnotherMyClass` in generated documentation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/134", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/134/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/134/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/134", "id": 597569956, "node_id": "MDU6SXNzdWU1OTc1Njk5NTY=", "number": 134, "title": "Move `<local>` __qualname__ check", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-09T21:41:48Z", "updated_at": "2020-06-27T08:40:19Z", "closed_at": "2020-06-07T14:34:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Shouldn't this check:\r\n\r\nhttps://github.com/agronholm/sphinx-autodoc-typehints/blob/master/sphinx_autodoc_typehints.py#L167-L171\r\n\r\nBe moved into the body of this if statement?\r\n\r\nhttps://github.com/agronholm/sphinx-autodoc-typehints/blob/master/sphinx_autodoc_typehints.py#L176-L191\r\n\r\nIt doesn't appear that qualname is used elsewhere in the function.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/133", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/133/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/133/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/133", "id": 594684377, "node_id": "MDU6SXNzdWU1OTQ2ODQzNzc=", "number": 133, "title": "sphinx.util.inspect.Signature raises RemovedInSphinx40Warning", "user": {"login": "Balandat", "id": 1605878, "node_id": "MDQ6VXNlcjE2MDU4Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1605878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Balandat", "html_url": "https://github.com/Balandat", "followers_url": "https://api.github.com/users/Balandat/followers", "following_url": "https://api.github.com/users/Balandat/following{/other_user}", "gists_url": "https://api.github.com/users/Balandat/gists{/gist_id}", "starred_url": "https://api.github.com/users/Balandat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Balandat/subscriptions", "organizations_url": "https://api.github.com/users/Balandat/orgs", "repos_url": "https://api.github.com/users/Balandat/repos", "events_url": "https://api.github.com/users/Balandat/events{/privacy}", "received_events_url": "https://api.github.com/users/Balandat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-05T22:34:04Z", "updated_at": "2020-06-21T07:38:05Z", "closed_at": "2020-06-07T09:41:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "`sphinx.util.inspect.Signature` was deprecated in 2.4.0. Building docs in sphinx 3.0.0 with `sphinx-autodoc-typehints` therefore raises a ton of warnings of the following type:\r\n```\r\nRemovedInSphinx40Warning: sphinx.util.inspect.Signature() is deprecated\r\n  warnings.warn('sphinx.util.inspect.Signature() is deprecated',\r\n```\r\n\r\nThe dependency on `sphinx.util.inspect.Signature` should be removed, and instead the functionality from python's `inspect` module should be used.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/131", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/131/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/131/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/131", "id": 585720787, "node_id": "MDU6SXNzdWU1ODU3MjA3ODc=", "number": 131, "title": "Fails with lambda in decorator", "user": {"login": "nandoflorestan", "id": 543841, "node_id": "MDQ6VXNlcjU0Mzg0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/543841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nandoflorestan", "html_url": "https://github.com/nandoflorestan", "followers_url": "https://api.github.com/users/nandoflorestan/followers", "following_url": "https://api.github.com/users/nandoflorestan/following{/other_user}", "gists_url": "https://api.github.com/users/nandoflorestan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nandoflorestan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nandoflorestan/subscriptions", "organizations_url": "https://api.github.com/users/nandoflorestan/orgs", "repos_url": "https://api.github.com/users/nandoflorestan/repos", "events_url": "https://api.github.com/users/nandoflorestan/events{/privacy}", "received_events_url": "https://api.github.com/users/nandoflorestan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-22T13:38:42Z", "updated_at": "2020-03-23T04:37:00Z", "closed_at": "2020-03-23T04:36:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have this code:\r\n\r\n```\r\n@reg.dispatch(  # Dispatch on type of *obj* and value of *flavor*.\r\n    reg.match_instance(\"obj\"),\r\n    reg.match_key(\"flavor\", lambda obj, flavor, **kw: flavor),\r\n)\r\ndef to_dict(obj, flavor=\"\", **kw):\r\n```\r\n\r\nsphinx-autodoc-typehints fails on that lambda with this stacktrace:\r\n\r\n```\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx/parsers.py\", line 93, in parse\r\n    self.statemachine.run(inputlines, document, inliner=self.inliner)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 169, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset,\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/statemachine.py\", line 238, in run\r\n    context, next_state, result = self.check_line(\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 2726, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 327, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 393, in new_subsection\r\n    newabsoffset = self.nested_parse(\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 281, in nested_parse\r\n    state_machine.run(block, input_offset, memo=self.memo,\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 195, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/statemachine.py\", line 238, in run\r\n    context, next_state, result = self.check_line(\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 2299, in explicit_markup\r\n    nodelist, blank_finish = self.explicit_construct(match)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 2311, in explicit_construct\r\n    return method(self, expmatch)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 2053, in directive\r\n    return self.run_directive(\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 2103, in run_directive\r\n    result = directive_instance.run()\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx/ext/autodoc/directive.py\", line 146, in run\r\n    documenter.generate(more_content=self.content)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx/ext/autodoc/__init__.py\", line 734, in generate\r\n    self.document_members(all_members)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx/ext/autodoc/__init__.py\", line 654, in document_members\r\n    documenter.generate(\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx/ext/autodoc/__init__.py\", line 731, in generate\r\n    self.add_content(more_content)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx/ext/autodoc/__init__.py\", line 470, in add_content\r\n    for i, line in enumerate(self.process_doc(docstrings)):\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx/ext/autodoc/__init__.py\", line 438, in process_doc\r\n    self.env.app.emit('autodoc-process-docstring',\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx/application.py\", line 447, in emit\r\n    return self.events.emit(event, *args)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx/events.py\", line 99, in emit\r\n    results.append(callback(self.app, *args))\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx_autodoc_typehints.py\", line 362, in process_docstring\r\n    type_hints = get_all_type_hints(obj, name)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx_autodoc_typehints.py\", line 217, in get_all_type_hints\r\n    rv = backfill_type_hints(obj, name)\r\n  File \"/home/nando/.virtualenvs/fair/lib/python3.8/site-packages/sphinx_autodoc_typehints.py\", line 258, in backfill_type_hints\r\n    obj_ast = ast.parse(textwrap.dedent(inspect.getsource(obj)), **parse_kwargs)\r\n  File \"/usr/lib/python3.8/ast.py\", line 47, in parse\r\n    return compile(source, filename, mode, flags,\r\n  File \"<unknown>\", line 4\r\n    )\r\n    ^\r\nSyntaxError: unexpected EOF while parsing\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/126", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/126/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/126/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/126", "id": 554198529, "node_id": "MDU6SXNzdWU1NTQxOTg1Mjk=", "number": 126, "title": "Add option to inject \"Return type\" to \"Returns\" directive", "user": {"login": "mbanczerowski", "id": 56397676, "node_id": "MDQ6VXNlcjU2Mzk3Njc2", "avatar_url": "https://avatars0.githubusercontent.com/u/56397676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbanczerowski", "html_url": "https://github.com/mbanczerowski", "followers_url": "https://api.github.com/users/mbanczerowski/followers", "following_url": "https://api.github.com/users/mbanczerowski/following{/other_user}", "gists_url": "https://api.github.com/users/mbanczerowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbanczerowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbanczerowski/subscriptions", "organizations_url": "https://api.github.com/users/mbanczerowski/orgs", "repos_url": "https://api.github.com/users/mbanczerowski/repos", "events_url": "https://api.github.com/users/mbanczerowski/events{/privacy}", "received_events_url": "https://api.github.com/users/mbanczerowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263312001, "node_id": "MDU6TGFiZWwyNjMzMTIwMDE=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-23T14:38:33Z", "updated_at": "2020-01-24T09:29:20Z", "closed_at": "2020-01-23T19:04:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey! \r\nThanks for excellent extension!\r\n\r\nIt would be nice to squeeze return type with common returns directive. (or maybe better to make it optional)\r\n\r\n```python\r\ndef some_func(game_ids) -> int:\r\n    \"\"\"\r\n    :return: game size in bytes\r\n    \"\"\"\r\n```\r\n\r\nCurrent:\r\n![ee74a96393fd5716e7fc2f140a9f15f3](https://user-images.githubusercontent.com/56397676/72993733-2cbc2b80-3df6-11ea-85e8-2950dea1b7c2.png)\r\n\r\nExpected:\r\n![ee74a96393fd5716e7fc2f140a9f15f3 - Copy](https://user-images.githubusercontent.com/56397676/72993788-4493af80-3df6-11ea-9057-74ac92531009.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/125", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/125/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/125/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/125", "id": 551849740, "node_id": "MDU6SXNzdWU1NTE4NDk3NDA=", "number": 125, "title": "Error about encountering keyword-only arguments", "user": {"login": "ssokolow", "id": 46915, "node_id": "MDQ6VXNlcjQ2OTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/46915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssokolow", "html_url": "https://github.com/ssokolow", "followers_url": "https://api.github.com/users/ssokolow/followers", "following_url": "https://api.github.com/users/ssokolow/following{/other_user}", "gists_url": "https://api.github.com/users/ssokolow/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssokolow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssokolow/subscriptions", "organizations_url": "https://api.github.com/users/ssokolow/orgs", "repos_url": "https://api.github.com/users/ssokolow/repos", "events_url": "https://api.github.com/users/ssokolow/events{/privacy}", "received_events_url": "https://api.github.com/users/ssokolow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-19T01:25:34Z", "updated_at": "2020-01-19T01:29:27Z", "closed_at": "2020-01-19T01:27:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I change this...\r\n\r\n```python", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/119", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/119/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/119/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/119", "id": 525295239, "node_id": "MDU6SXNzdWU1MjUyOTUyMzk=", "number": 119, "title": "intersphinx broken", "user": {"login": "crusaderky", "id": 6213168, "node_id": "MDQ6VXNlcjYyMTMxNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6213168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crusaderky", "html_url": "https://github.com/crusaderky", "followers_url": "https://api.github.com/users/crusaderky/followers", "following_url": "https://api.github.com/users/crusaderky/following{/other_user}", "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}", "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions", "organizations_url": "https://api.github.com/users/crusaderky/orgs", "repos_url": "https://api.github.com/users/crusaderky/repos", "events_url": "https://api.github.com/users/crusaderky/events{/privacy}", "received_events_url": "https://api.github.com/users/crusaderky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311996, "node_id": "MDU6TGFiZWwyNjMzMTE5OTY=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-19T22:04:49Z", "updated_at": "2019-11-20T11:03:29Z", "closed_at": "2019-11-20T09:52:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "sphinx-autodoc-typehints is generating a huge amount of errors in my project that uses interphinx.\r\n\r\n\r\nconf.py:\r\n```python\r\nextensions = [\r\n    \"sphinx.ext.autodoc\",\r\n    \"sphinx.ext.autosummary\",\r\n    \"sphinx.ext.intersphinx\",\r\n    \"sphinx_autodoc_typehints\",\r\n]\r\n\r\nintersphinx_mapping = {\r\n    \"python\": (\"https://docs.python.org/3/\", None),\r\n    \"xarray\": (\"https://xarray.pydata.org/en/stable/\", None),\r\n}\r\n\r\nset_type_checking_flag = True\r\ntypehints_fully_qualified = False\r\nalways_document_param_types = True\r\ntypehints_document_rtype = True\r\n```\r\nhello.rst:\r\n```\r\n.. automodule:: myproject.hello\r\n   :members:\r\n   :undoc-members:\r\n   :show-inheritance:\r\n```\r\n\r\nhello.py:\r\n```python\r\nfrom typing import Union\r\nimport xarray\r\n\r\nXarrayType = Union[xarray.DataArray, xarray.Dataset]\r\n\r\nclass C:\r\n    x: XarrayType\r\n\r\n    def __init__(self, x: XarrayType):\r\n        self.x = x\r\n```\r\n\r\nsphinx-build output:\r\n```                                                    \r\nmyproject/hello.py:docstring of myproject.hello.C:6: WARNING: py:class reference target not found: xarray.core.dataarray.DataArray\r\nmyproject/hello.py:docstring of myproject.hello.C:6: WARNING: py:class reference target not found: xarray.core.dataset.Dataset\r\nmyproject/hello.py:docstring of myproject.hello.C:8: WARNING: py:class reference target not found: xarray.core.dataarray.DataArray\r\nmyproject/hello.py:docstring of myproject.hello.C:8: WARNING: py:class reference target not found: xarray.core.dataset.Dataset\r\n```\r\n\r\nThis is caused by sphinx_autodoct_typehints reading ``DataArray.__module__``; however in the interstphinx objects.inv that is overridden by the module that lists the object in ``__all__``:\r\n```\r\n$ python -msphinx.ext.intersphinx https://xarray.pydata.org/en/stable/objects.inv | grep '.DataArray '\r\n        xarray.DataArray                         generated/xarray.DataArray.html#xarray.DataArray\r\n        generated/xarray.DataArray               xarray.DataArray                        : generated/xarray.DataArray.html\r\n\r\n$  python -c 'import xarray; print(xarray.DataArray.__module__)'\r\nxarray.core.dataarray\r\n```\r\n\r\n\r\nThis issue is triggered on all packages that define a class in an implementation script and then import it in ``__init__.py``, e.g.:\r\n\r\nimpl.py:\r\n```python\r\nclass C:\r\n    pass\r\n```\r\n\\_\\_init\\_\\_.py:\r\n```python\r\nfrom .impl import C\r\n__all__ = (\"C\", )\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/118", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/118/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/118/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/118", "id": 520573375, "node_id": "MDU6SXNzdWU1MjA1NzMzNzU=", "number": 118, "title": "Failure for generic classes with a \"name\" property", "user": {"login": "wouter-vdb", "id": 266284, "node_id": "MDQ6VXNlcjI2NjI4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/266284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wouter-vdb", "html_url": "https://github.com/wouter-vdb", "followers_url": "https://api.github.com/users/wouter-vdb/followers", "following_url": "https://api.github.com/users/wouter-vdb/following{/other_user}", "gists_url": "https://api.github.com/users/wouter-vdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/wouter-vdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wouter-vdb/subscriptions", "organizations_url": "https://api.github.com/users/wouter-vdb/orgs", "repos_url": "https://api.github.com/users/wouter-vdb/repos", "events_url": "https://api.github.com/users/wouter-vdb/events{/privacy}", "received_events_url": "https://api.github.com/users/wouter-vdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-10T09:00:15Z", "updated_at": "2019-11-11T19:25:38Z", "closed_at": "2019-11-11T19:03:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a generic class has a \"name\" property, a TypeError is raised:\r\n\r\n```\r\ntests/test_sphinx_autodoc_typehints.py:158: in test_format_annotation\r\n    result = format_annotation(annotation)\r\nsphinx_autodoc_typehints.py:119: in format_annotation\r\n    args = get_annotation_args(annotation, module, class_name)\r\nsphinx_autodoc_typehints.py:69: in get_annotation_args\r\n    original = getattr(sys.modules[module], class_name)\r\nE   TypeError: getattr(): attribute name must be string\r\n```\r\n\r\nThis problem can be reproduced by replacing/adding the following for \"class B\" in `test_sphinx_autodoc_typehints.py`:\r\n\r\n```\r\nclass B(Generic[T]):\r\n    @property\r\n    def name(self):\r\n        return \"B's name\"\r\n```\r\n\r\nThe problem is caused by the following condition on lines 44/45 in `sphinx_autodoc_typehints.py`:\r\n\r\n```\r\n    elif getattr(annotation, 'name', None):  # Required for at least Pattern\r\n        return annotation.name\r\n```\r\n\r\nWhen the \"B[T]\" annotation is processed, this condition detects a 'name' and returns it. But this 'name' is actually a 'property' instance instead of a string, which causes the TypeError.\r\n\r\nI use the following temporary \"fix\", but I'm not sure whether this is a \"proper\" fix.\r\n\r\n```\r\n    elif (getattr(annotation, 'name', None) and\r\n          not isinstance(annotation.name, property):\r\n        return annotation.name\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/117", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/117/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/117/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/117", "id": 517437992, "node_id": "MDU6SXNzdWU1MTc0Mzc5OTI=", "number": 117, "title": "1.10.x breaks support for nested classes", "user": {"login": "c24t", "id": 43799105, "node_id": "MDQ6VXNlcjQzNzk5MTA1", "avatar_url": "https://avatars3.githubusercontent.com/u/43799105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c24t", "html_url": "https://github.com/c24t", "followers_url": "https://api.github.com/users/c24t/followers", "following_url": "https://api.github.com/users/c24t/following{/other_user}", "gists_url": "https://api.github.com/users/c24t/gists{/gist_id}", "starred_url": "https://api.github.com/users/c24t/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c24t/subscriptions", "organizations_url": "https://api.github.com/users/c24t/orgs", "repos_url": "https://api.github.com/users/c24t/repos", "events_url": "https://api.github.com/users/c24t/events{/privacy}", "received_events_url": "https://api.github.com/users/c24t/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-04T22:21:40Z", "updated_at": "2019-11-05T08:11:15Z", "closed_at": "2019-11-05T08:09:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like the `1.10.0` release broke annotations for nested classes. As of 0d81051, sphinx gives a \"class reference target not found\" warning for code like this:\r\n\r\n```python\r\nclass Outer:\r\n    class Inner:\r\n        pass\r\n\r\n    def get_inner() -> \"Outer.Inner\":\r\n        pass\r\n```\r\n\r\n```\r\nsphinx-build -W -b html -T -v . _build/html -- test.py\r\n\r\n...\r\n\r\nTraceback (most recent call last):\r\n  File \"/path/to/site-packages/sphinx/cmd/build.py\", line 276, in build_main\r\n    app.build(args.force_all, filenames)\r\n  File \"/path/to/site-packages/sphinx/application.py\", line 343, in build\r\n    self.builder.build_specific(filenames)\r\n  File \"/path/to/site-packages/sphinx/builders/__init__.py\", line 288, in build_specific\r\n    summary=__('%d source files given on command line') % len(to_write))\r\n  File \"/path/to/site-packages/sphinx/builders/__init__.py\", line 361, in build\r\n    self.write(docnames, list(updated_docnames), method)\r\n  File \"/path/to/site-packages/sphinx/builders/__init__.py\", line 535, in write\r\n    self._write_serial(sorted(docnames))\r\n  File \"/path/to/site-packages/sphinx/builders/__init__.py\", line 545, in _write_serial\r\n    self.write_doc(docname, doctree)\r\n  File \"/path/to/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/contextlib.py\", line 119, in __exit__\r\n    next(self.gen)\r\n  File \"/path/to/site-packages/sphinx/util/logging.py\", line 219, in pending_warnings\r\n    memhandler.flushTo(logger)\r\n  File \"/path/to/site-packages/sphinx/util/logging.py\", line 184, in flushTo\r\n    logger.handle(record)\r\n  File \"/path/to/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/logging/__init__.py\", line 1529, in handle\r\n    self.callHandlers(record)\r\n  File \"/path/to/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/logging/__init__.py\", line 1591, in callHandlers\r\n    hdlr.handle(record)\r\n  File \"/path/to/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/logging/__init__.py\", line 901, in handle\r\n    rv = self.filter(record)\r\n  File \"/path/to/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/logging/__init__.py\", line 762, in filter\r\n    result = f.filter(record)\r\n  File \"/path/to/site-packages/sphinx/util/logging.py\", line 404, in filter\r\n    raise SphinxWarning(location + \":\" + message)\r\nsphinx.errors.SphinxWarning: /path/to/test.py:docstring of test.Outer.get_inner:2:py:class reference target not found: test.Inner\r\n\r\nWarning, treated as error:\r\n/path/to/test.py:docstring of test.Outer.get_inner:2:py:class reference target not found: test.Inner\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/116", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/116/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/116/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/116", "id": 517093430, "node_id": "MDU6SXNzdWU1MTcwOTM0MzA=", "number": 116, "title": "Error building docs with v1.10", "user": {"login": "jklaise", "id": 13080878, "node_id": "MDQ6VXNlcjEzMDgwODc4", "avatar_url": "https://avatars0.githubusercontent.com/u/13080878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jklaise", "html_url": "https://github.com/jklaise", "followers_url": "https://api.github.com/users/jklaise/followers", "following_url": "https://api.github.com/users/jklaise/following{/other_user}", "gists_url": "https://api.github.com/users/jklaise/gists{/gist_id}", "starred_url": "https://api.github.com/users/jklaise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jklaise/subscriptions", "organizations_url": "https://api.github.com/users/jklaise/orgs", "repos_url": "https://api.github.com/users/jklaise/repos", "events_url": "https://api.github.com/users/jklaise/events{/privacy}", "received_events_url": "https://api.github.com/users/jklaise/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-11-04T11:31:40Z", "updated_at": "2019-11-06T09:05:07Z", "closed_at": "2019-11-04T19:36:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "My docs now fail to build with 1.10 (work with 1.9 or lower):\r\n\r\n```\r\nException occurred:\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 60, in get_annotation_args\r\n    original = getattr(sys.modules[module], class_name)\r\nKeyError: 'numpy'\r\nThe full traceback has been saved in /tmp/sphinx-err-e8ca7ci1.log, if you want to report the issue to the developers.\r\n```\r\n\r\nHere's the log file:\r\n```\r\n# Sphinx version: 2.1.2\r\n# Python version: 3.7.3 (CPython)\r\n# Docutils version: 0.14 \r\n# Jinja2 version: 2.10.1\r\n# Last messages:\r\n#   failed\r\n#   failed: No such config value: typehints_fully_qualified\r\n#   loading intersphinx inventory from https://docs.python.org/objects.inv...\r\n#   intersphinx inventory has moved: https://docs.python.org/objects.inv -> https://docs.python.org/3/objects.inv\r\n#   building [mo]: targets for 0 po files that are out of date\r\n#   building [html]: targets for 61 source files that are out of date\r\n#   updating environment:\r\n#   61 added, 0 changed, 0 removed\r\n#   reading sources... [  1%] api/alibi\r\n#   reading sources... [  3%] api/alibi.confidence\r\n# Loaded extensions:\r\n#   sphinx.ext.mathjax (2.1.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/mathjax.py\r\n#   sphinxcontrib.applehelp (1.0.1) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinxcontrib/applehelp/__init__.py\r\n#   sphinxcontrib.devhelp (1.0.1) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinxcontrib/devhelp/__init__.py\r\n#   sphinxcontrib.htmlhelp (1.0.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinxcontrib/htmlhelp/__init__.py\r\n#   sphinxcontrib.serializinghtml (1.1.3) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinxcontrib/serializinghtml/__init__.py\r\n#   sphinxcontrib.qthelp (1.0.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinxcontrib/qthelp/__init__.py\r\n#   alabaster (0.7.12) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/alabaster/__init__.py\r\n#   sphinx.ext.autodoc (2.1.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\r\n#   sphinx.ext.doctest (2.1.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/doctest.py\r\n#   sphinx.ext.intersphinx (2.1.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/intersphinx.py\r\n#   sphinx.ext.todo (2.1.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/todo.py\r\n#   sphinx.ext.coverage (2.1.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/coverage.py\r\n#   sphinx.ext.ifconfig (2.1.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/ifconfig.py\r\n#   sphinx.ext.viewcode (2.1.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/viewcode.py\r\n#   sphinx.ext.napoleon (2.1.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/napoleon/__init__.py\r\n#   sphinx_autodoc_typehints (unknown version) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\r\n#   sphinxcontrib.apidoc (0.3.0) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinxcontrib/apidoc/__init__.py\r\n#   nbsphinx (0.4.2) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/nbsphinx.py\r\n#   nbsphinx_link (1.2.0) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/nbsphinx_link/__init__.py\r\n#   m2r (0.2.1) from /home/janis/.conda/envs/py37/lib/python3.7/site-packages/m2r.py\r\nTraceback (most recent call last):\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/cmd/build.py\", line 284, in build_main\r\n    app.build(args.force_all, filenames)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/application.py\", line 345, in build\r\n    self.builder.build_update()\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 319, in build_update\r\n    len(to_build))\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 332, in build\r\n    updated_docnames = set(self.read())\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 438, in read\r\n    self._read_serial(docnames)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 460, in _read_serial\r\n    self.read_doc(docname)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 504, in read_doc\r\n    doctree = read_doc(self.app, self.env, self.env.doc2path(docname))\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/io.py\", line 325, in read_doc\r\n    pub.publish()\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/core.py\", line 217, in publish\r\n    self.settings)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/io.py\", line 113, in read\r\n    self.parse()\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/readers/__init__.py\", line 78, in parse\r\n    self.parser.parse(self.input, document)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/parsers.py\", line 94, in parse\r\n    self.statemachine.run(inputlines, document, inliner=self.inliner)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 171, in run\r\n    input_source=document['source'])\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2753, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 327, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 395, in new_subsection\r\n    node=section_node, match_titles=True)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 282, in nested_parse\r\n    node=node, match_titles=match_titles)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 196, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2326, in explicit_markup\r\n    nodelist, blank_finish = self.explicit_construct(match)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2338, in explicit_construct\r\n    return method(self, expmatch)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2081, in directive\r\n    directive_class, match, type_name, option_presets)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2130, in run_directive\r\n    result = directive_instance.run()\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/autodoc/directive.py\", line 150, in run\r\n    documenter.generate(more_content=self.content)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 760, in generate\r\n    self.document_members(all_members)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 681, in document_members\r\n    check_module=members_check_module and not isattr)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 757, in generate\r\n    self.add_content(more_content)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 495, in add_content\r\n    for i, line in enumerate(self.process_doc(docstrings)):\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 463, in process_doc\r\n    self.options, docstringlines)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/application.py\", line 449, in emit\r\n    return self.events.emit(event, *args)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx/events.py\", line 103, in emit\r\n    results.append(callback(self.app, *args))\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 368, in process_docstring\r\n    annotation, fully_qualified=app.config.typehints_fully_qualified)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 110, in format_annotation\r\n    args = get_annotation_args(annotation, module, class_name)\r\n  File \"/home/janis/.conda/envs/py37/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 60, in get_annotation_args\r\n    original = getattr(sys.modules[module], class_name)\r\nKeyError: 'numpy'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/114", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/114/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/114/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/114", "id": 513977424, "node_id": "MDU6SXNzdWU1MTM5Nzc0MjQ=", "number": 114, "title": "Python 3.7.x/3.8.x: \"module typing has no attribute IO\"", "user": {"login": "dylmye", "id": 7024578, "node_id": "MDQ6VXNlcjcwMjQ1Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7024578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylmye", "html_url": "https://github.com/dylmye", "followers_url": "https://api.github.com/users/dylmye/followers", "following_url": "https://api.github.com/users/dylmye/following{/other_user}", "gists_url": "https://api.github.com/users/dylmye/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylmye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylmye/subscriptions", "organizations_url": "https://api.github.com/users/dylmye/orgs", "repos_url": "https://api.github.com/users/dylmye/repos", "events_url": "https://api.github.com/users/dylmye/events{/privacy}", "received_events_url": "https://api.github.com/users/dylmye/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-29T14:51:05Z", "updated_at": "2019-11-02T10:36:34Z", "closed_at": "2019-11-02T10:36:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "[As requested](https://github.com/agronholm/sphinx-autodoc-typehints/issues/113#issuecomment-547453844)\r\n\r\nTested on 3.7.2, 3.7.3, 3.8, Windows 10 x64. Downgrading the typehints package to 1.8.0 fixed this issue.\r\n\r\nRunning `make html` in [this project](https://github.com/sedders123/phial/tree/develop/docs) causes the following issue:\r\n\r\n```\r\nException occurred:\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx_autodoc_typehints.py\", line 98, in format_annotation\r\n    if params and annotation is not getattr(sys.modules[module], class_name):\r\nAttributeError: module 'typing' has no attribute 'IO'>'\r\n```\r\n\r\n<details><summary>Full Traceback</summary>\r\n<pre><code>\r\n# Sphinx version: 2.2.1\r\n# Python version: 3.8.0 (CPython)\r\n# Docutils version: 0.15.2 release\r\n# Jinja2 version: 2.10.3\r\n# Last messages:\r\n#   loading intersphinx inventory from https://docs.python.org/objects.inv...\r\n#   intersphinx inventory has moved: https://docs.python.org/objects.inv -> https://docs.python.org/3/objects.inv\r\n#   building [mo]: targets for 0 po files that are out of date\r\n#   building [html]: targets for 3 source files that are out of date\r\n#   updating environment:\r\n#   [new config]\r\n#   3 added, 0 changed, 0 removed\r\n#   reading sources... [ 33%] getting-started\r\n#   reading sources... [ 66%] index\r\n#   reading sources... [100%] phial\r\n# Loaded extensions:\r\n#   sphinx.ext.mathjax (2.2.1) from C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\mathjax.py\r\n#   sphinxcontrib.applehelp (1.0.1) from C:\\Python\\3.8\\lib\\site-packages\\sphinxcontrib\\applehelp\\__init__.py\r\n#   sphinxcontrib.devhelp (1.0.1) from C:\\Python\\3.8\\lib\\site-packages\\sphinxcontrib\\devhelp\\__init__.py\r\n#   sphinxcontrib.htmlhelp (1.0.2) from C:\\Python\\3.8\\lib\\site-packages\\sphinxcontrib\\htmlhelp\\__init__.py\r\n#   sphinxcontrib.serializinghtml (1.1.3) from C:\\Python\\3.8\\lib\\site-packages\\sphinxcontrib\\serializinghtml\\__init__.py\r\n#   sphinxcontrib.qthelp (1.0.2) from C:\\Python\\3.8\\lib\\site-packages\\sphinxcontrib\\qthelp\\__init__.py\r\n#   alabaster (0.7.12) from C:\\Python\\3.8\\lib\\site-packages\\alabaster\\__init__.py\r\n#   sphinx.ext.autodoc (2.2.1) from C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\autodoc\\__init__.py\r\n#   sphinx_autodoc_typehints (unknown version) from C:\\Python\\3.8\\lib\\site-packages\\sphinx_autodoc_typehints.py\r\n#   sphinx.ext.intersphinx (2.2.1) from C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\intersphinx.py\r\n#   sphinx.ext.coverage (2.2.1) from C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\coverage.py\r\n#   sphinx.ext.viewcode (2.2.1) from C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\viewcode.py\r\nTraceback (most recent call last):\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\cmd\\build.py\", line 276, in build_main\r\n    app.build(args.force_all, filenames)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\application.py\", line 346, in build\r\n    self.builder.build_update()\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\builders\\__init__.py\", line 297, in build_update\r\n    self.build(to_build,\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\builders\\__init__.py\", line 311, in build\r\n    updated_docnames = set(self.read())\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\builders\\__init__.py\", line 418, in read\r\n    self._read_serial(docnames)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\builders\\__init__.py\", line 439, in _read_serial\r\n    self.read_doc(docname)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\builders\\__init__.py\", line 479, in read_doc\r\n    doctree = read_doc(self.app, self.env, self.env.doc2path(docname))\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\io.py\", line 326, in read_doc\r\n    pub.publish()\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\core.py\", line 216, in publish\r\n    self.document = self.reader.read(self.source, self.parser,\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\io.py\", line 114, in read\r\n    self.parse()\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\readers\\__init__.py\", line 77, in parse\r\n    self.parser.parse(self.input, document)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\parsers.py\", line 95, in parse\r\n    self.statemachine.run(inputlines, document, inliner=self.inliner)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 170, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset,\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\statemachine.py\", line 238, in run\r\n    context, next_state, result = self.check_line(\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 2771, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 327, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 393, in new_subsection\r\n    newabsoffset = self.nested_parse(\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 281, in nested_parse\r\n    state_machine.run(block, input_offset, memo=self.memo,\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 196, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\statemachine.py\", line 238, in run\r\n    context, next_state, result = self.check_line(\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 2771, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 327, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 393, in new_subsection\r\n    newabsoffset = self.nested_parse(\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 281, in nested_parse\r\n    state_machine.run(block, input_offset, memo=self.memo,\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 196, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\statemachine.py\", line 238, in run\r\n    context, next_state, result = self.check_line(\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 2344, in explicit_markup\r\n    nodelist, blank_finish = self.explicit_construct(match)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 2356, in explicit_construct\r\n    return method(self, expmatch)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 2098, in directive\r\n    return self.run_directive(\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 2148, in run_directive\r\n    result = directive_instance.run()\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\autodoc\\directive.py\", line 146, in run\r\n    documenter.generate(more_content=self.content)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\autodoc\\__init__.py\", line 732, in generate\r\n    self.document_members(all_members)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\autodoc\\__init__.py\", line 652, in document_members\r\n    documenter.generate(\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\autodoc\\__init__.py\", line 1186, in generate\r\n    return super().generate(more_content=more_content,\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\autodoc\\__init__.py\", line 729, in generate\r\n    self.add_content(more_content)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\autodoc\\__init__.py\", line 1172, in add_content\r\n    super().add_content(more_content)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\autodoc\\__init__.py\", line 471, in add_content\r\n    for i, line in enumerate(self.process_doc(docstrings)):\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\ext\\autodoc\\__init__.py\", line 439, in process_doc\r\n    self.env.app.emit('autodoc-process-docstring',\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\application.py\", line 450, in emit\r\n    return self.events.emit(event, *args)\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx\\events.py\", line 103, in emit\r\n    results.append(callback(self.app, *args))\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx_autodoc_typehints.py\", line 364, in process_docstring\r\n    formatted_annotation = format_annotation(\r\n  File \"C:\\Python\\3.8\\lib\\site-packages\\sphinx_autodoc_typehints.py\", line 98, in format_annotation\r\n    if params and annotation is not getattr(sys.modules[module], class_name):\r\nAttributeError: module 'typing' has no attribute 'IO'>'\r\n</code></pre>\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/113", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/113/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/113/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/113", "id": 512796127, "node_id": "MDU6SXNzdWU1MTI3OTYxMjc=", "number": 113, "title": "List does not works in Python 3.5.2", "user": {"login": "fukatani", "id": 8858287, "node_id": "MDQ6VXNlcjg4NTgyODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8858287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fukatani", "html_url": "https://github.com/fukatani", "followers_url": "https://api.github.com/users/fukatani/followers", "following_url": "https://api.github.com/users/fukatani/following{/other_user}", "gists_url": "https://api.github.com/users/fukatani/gists{/gist_id}", "starred_url": "https://api.github.com/users/fukatani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fukatani/subscriptions", "organizations_url": "https://api.github.com/users/fukatani/orgs", "repos_url": "https://api.github.com/users/fukatani/repos", "events_url": "https://api.github.com/users/fukatani/events{/privacy}", "received_events_url": "https://api.github.com/users/fukatani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-26T06:01:33Z", "updated_at": "2019-11-05T13:27:24Z", "closed_at": "2019-11-03T16:45:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://travis-ci.org/kmyk/online-judge-tools/builds/603136293?utm_source=github_status&utm_medium=notification\r\n\r\nIn Python 3.6, `make -c docs` was passed.\r\n\r\nBut Python 3.5.2, `make -c docs` was failed.\r\n```\r\nException occurred:\r\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/sphinx_autodoc_typehints.py\", line 98, in format_annotation\r\n    if params and annotation is not getattr(sys.modules[module], class_name):\r\nAttributeError: module 'typing' has no attribute 'List<~T>'\r\nThe full traceback has been saved in /tmp/sphinx-err-hvw9liug.log, if you want to report the issue to the developers.\r\nPlease also report this if it was a user error, so that a better error message can be provided next time.\r\nA bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!\r\nMakefile:20: recipe for target 'html' failed\r\nmake: *** [html] Error 2\r\nmake: Leaving directory '/home/travis/build/kmyk/online-judge-tools/docs'\r\nThe command \"make -C docs html\" exited with 2.\r\n183.73s\r\n```\r\n\r\nIs this bug or as designed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/111", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/111/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/111/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/111", "id": 510847334, "node_id": "MDU6SXNzdWU1MTA4NDczMzQ=", "number": 111, "title": "Doesn't strip annotations from the function signature for decorators", "user": {"login": "moi90", "id": 332746, "node_id": "MDQ6VXNlcjMzMjc0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/332746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moi90", "html_url": "https://github.com/moi90", "followers_url": "https://api.github.com/users/moi90/followers", "following_url": "https://api.github.com/users/moi90/following{/other_user}", "gists_url": "https://api.github.com/users/moi90/gists{/gist_id}", "starred_url": "https://api.github.com/users/moi90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moi90/subscriptions", "organizations_url": "https://api.github.com/users/moi90/orgs", "repos_url": "https://api.github.com/users/moi90/repos", "events_url": "https://api.github.com/users/moi90/events{/privacy}", "received_events_url": "https://api.github.com/users/moi90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-10-22T19:01:17Z", "updated_at": "2019-11-03T16:45:59Z", "closed_at": "2019-11-03T16:45:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a class:\r\n\r\n```\r\nclass Output:\r\n    def __init__(\r\n        self, name: str, type: Optional[Type] = None, doc: Optional[str] = None\r\n    ):\r\n        ...\r\n```\r\n\r\nIt is used as a decorator, therefore in my rst file, I reference it by `.. autodecorator:: Output`.\r\n\r\nI would expect that sphinx-autodoc-typehints\r\n strips the annotations as advertised: `@morphocut.core.Output(name, type, doc)`\r\n\r\nBut instead I get `@morphocut.core.Output(name: str, type: Optional[Type] = None, doc: Optional[str] = None)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/108", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/108/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/108/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/108", "id": 510634421, "node_id": "MDU6SXNzdWU1MTA2MzQ0MjE=", "number": 108, "title": "Support typing_extensions and 3.8 types", "user": {"login": "flying-sheep", "id": 291575, "node_id": "MDQ6VXNlcjI5MTU3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flying-sheep", "html_url": "https://github.com/flying-sheep", "followers_url": "https://api.github.com/users/flying-sheep/followers", "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}", "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}", "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions", "organizations_url": "https://api.github.com/users/flying-sheep/orgs", "repos_url": "https://api.github.com/users/flying-sheep/repos", "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}", "received_events_url": "https://api.github.com/users/flying-sheep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-10-22T12:51:20Z", "updated_at": "2019-10-23T08:50:54Z", "closed_at": "2019-10-23T08:50:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "3.8 introduced\r\n\r\n- TypedDict (used by being subclassed, no support here necessary)\r\n- Protocol (dito)\r\n- Final (simple marker generic like `Type`)\r\n- Literal ([PEP 586](https://www.python.org/dev/peps/pep-0586/), Like `Union`, but for values)\r\n\r\nOnly `Literal` deserves special attention, as its values need to be rendered like ```', '.join(f'``{v!r}``' for v in literal.__args__)``` (easy enough), and because it needs normalization with `Union`: `Union[Literal['a', None], int]` is equivalent to `Union[Literal['a'], None, int]`, and `Union[Literal['a'], Literal['b']]` is equivalent to `Literal['a', 'b']`.\r\n\r\n---\r\n\r\nSince few people have 3.8, it would be cool to support backport patterns like\r\n\r\n```py\r\ntry:\r\n    from typing import Literal\r\nexcept Exception:\r\n    from typing_extensions import Literal\r\n```\r\n\r\nTo properly support this, I think we simply need to extend `if annotation_cls.__module__ == 'typing'`. Since we set `module = 'typing'` in that branch, the links should work, even when the annotation comes from `typing_extensions`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/106", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/106/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/106/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/106", "id": 510192580, "node_id": "MDU6SXNzdWU1MTAxOTI1ODA=", "number": 106, "title": "Add option: Hide automatically inferred rtype", "user": {"login": "moi90", "id": 332746, "node_id": "MDQ6VXNlcjMzMjc0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/332746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moi90", "html_url": "https://github.com/moi90", "followers_url": "https://api.github.com/users/moi90/followers", "following_url": "https://api.github.com/users/moi90/following{/other_user}", "gists_url": "https://api.github.com/users/moi90/gists{/gist_id}", "starred_url": "https://api.github.com/users/moi90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moi90/subscriptions", "organizations_url": "https://api.github.com/users/moi90/orgs", "repos_url": "https://api.github.com/users/moi90/repos", "events_url": "https://api.github.com/users/moi90/events{/privacy}", "received_events_url": "https://api.github.com/users/moi90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-21T18:34:53Z", "updated_at": "2019-10-25T09:14:48Z", "closed_at": "2019-10-25T09:14:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I use napoleon with the following settings:\r\n```\r\nnapoleon_use_param = False\r\nnapoleon_use_keyword = False\r\nnapoleon_use_rtype = False\r\n```\r\n\r\nTherefore, there is no `:rtype:`, therefore sphinx-autodoc-typehints adds one. (\"The :rtype: directive is added if and only if no existing :rtype: is found.\")\r\n\r\nI would like to have an option that disables this behavior, so I can use sphinx-autodoc-typehints\r\n solely to strip the annotations from the function signature.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/104", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/104/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/104/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/104", "id": 495113091, "node_id": "MDU6SXNzdWU0OTUxMTMwOTE=", "number": 104, "title": "Error in docs generation for classes created with sqlalchemy's declarative_base", "user": {"login": "roddycx", "id": 52330813, "node_id": "MDQ6VXNlcjUyMzMwODEz", "avatar_url": "https://avatars1.githubusercontent.com/u/52330813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roddycx", "html_url": "https://github.com/roddycx", "followers_url": "https://api.github.com/users/roddycx/followers", "following_url": "https://api.github.com/users/roddycx/following{/other_user}", "gists_url": "https://api.github.com/users/roddycx/gists{/gist_id}", "starred_url": "https://api.github.com/users/roddycx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roddycx/subscriptions", "organizations_url": "https://api.github.com/users/roddycx/orgs", "repos_url": "https://api.github.com/users/roddycx/repos", "events_url": "https://api.github.com/users/roddycx/events{/privacy}", "received_events_url": "https://api.github.com/users/roddycx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-18T09:46:22Z", "updated_at": "2019-10-23T09:09:30Z", "closed_at": "2019-10-23T09:09:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback:\r\n```\r\n  File \"/home/roddy/anaconda3/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 350, in process_docstring\r\n    type_hints = get_all_type_hints(obj, name)\r\n  File \"/home/roddy/anaconda3/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 206, in get_all_type_hints\r\n    rv = backfill_type_hints(obj, name)\r\n  File \"/home/roddy/anaconda3/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 247, in backfill_type_hints\r\n    obj_ast = ast.parse(textwrap.dedent(inspect.getsource(obj)), **parse_kwargs)\r\n  File \"/home/roddy/anaconda3/lib/python3.7/inspect.py\", line 973, in getsource\r\n    lines, lnum = getsourcelines(object)\r\n  File \"/home/roddy/anaconda3/lib/python3.7/inspect.py\", line 955, in getsourcelines\r\n    lines, lnum = findsource(object)\r\n  File \"/home/roddy/anaconda3/lib/python3.7/inspect.py\", line 786, in findsource\r\n    raise OSError('could not get source code')\r\nOSError: could not get source code\r\n```\r\n\r\nExample code to reproduce:\r\n```\r\nfrom sqlalchemy import Column, Integer\r\n\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\n\r\n\r\nclass MyBase(object):\r\n    model_name = 'base'\r\n\r\n\r\nBase = declarative_base(cls=MyBase)\r\n\r\n\r\nclass ExampleClass(Base):\r\n    __tablename__ = 'example_class'\r\n    id = Column(Integer, primary_key=True)\r\n```\r\n\r\nPossible resolution:\r\nCatch `OSError` for `obj_ast = ast.parse(...)` in `backfill_type_hints`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/99", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/99/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/99/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/99", "id": 492105319, "node_id": "MDU6SXNzdWU0OTIxMDUzMTk=", "number": 99, "title": "Test failure test_sphinx_autodoc_typehints.py::test_sphinx_output", "user": {"login": "anthraxx", "id": 203012, "node_id": "MDQ6VXNlcjIwMzAxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/203012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthraxx", "html_url": "https://github.com/anthraxx", "followers_url": "https://api.github.com/users/anthraxx/followers", "following_url": "https://api.github.com/users/anthraxx/following{/other_user}", "gists_url": "https://api.github.com/users/anthraxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthraxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthraxx/subscriptions", "organizations_url": "https://api.github.com/users/anthraxx/orgs", "repos_url": "https://api.github.com/users/anthraxx/repos", "events_url": "https://api.github.com/users/anthraxx/events{/privacy}", "received_events_url": "https://api.github.com/users/anthraxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-11T08:57:48Z", "updated_at": "2019-09-13T18:41:02Z", "closed_at": "2019-09-11T11:45:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using latest HEAD and it seems there is some test regression occurring with certain versions in use:\r\n\r\n```python\r\n...\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.7.4, pytest-5.1.2, py-1.8.0, pluggy-0.12.0\r\nrootdir: /build/python-sphinx-autodoc-typehints/src/sphinx-autodoc-typehints, inifile: setup.cfg, testpaths: tests\r\ncollected 88 items\r\n\r\ntests/test_sphinx_autodoc_typehints.py ................................. [ 37%]\r\n.....................................................FF                  [100%]\r\n\r\n=================================== FAILURES ===================================\r\n___________________________ test_sphinx_output[True] ___________________________\r\n...\r\n>           assert text_contents == expected_contents\r\nE           assert 'Dummy Module...     \"None\"\\n' == 'Dummy Module...     \"None\"\\n'\r\nE             Skipping 2577 identical leading characters in diff, use -v to show\r\nE             -   * **x** -- foo\r\nE             +   * **x** (\"int\") -- foo\r\nE             ?           ++++++++\r\nE               \r\nE             -       * **y** -- bar\r\nE             +       * **y** (\"str\") -- bar...\r\nE             \r\nE             ...Full output truncated (42 lines hidden), use '-vv' to show\r\n\r\ntests/test_sphinx_autodoc_typehints.py:440: AssertionError\r\n...\r\n__________________________ test_sphinx_output[False] ___________________________\r\n\r\n>           assert text_contents == expected_contents\r\nE           assert 'Dummy Module...     \"None\"\\n' == 'Dummy Module...     \"None\"\\n'\r\nE             Skipping 2577 identical leading characters in diff, use -v to show\r\nE             -   * **x** -- foo\r\nE             +   * **x** (\"int\") -- foo\r\nE             ?           ++++++++\r\nE               \r\nE             -       * **y** -- bar\r\nE             +       * **y** (\"str\") -- bar...\r\nE             \r\nE             ...Full output truncated (42 lines hidden), use '-vv' to show\r\n\r\ntests/test_sphinx_autodoc_typehints.py:440: AssertionError\r\n--------------------------- Captured stdout teardown ---------------------------\r\n# testroot: root\r\n# builder: text\r\n# srcdir: /tmp/pytest-of-builduser/pytest-0/dummy\r\n# outdir: /tmp/pytest-of-builduser/pytest-0/dummy/_build/text\r\n# status: \r\nRunning Sphinx v2.2.0\r\nbuilding [mo]: targets for 0 po files that are out of date\r\nbuilding [text]: targets for 1 source files that are out of date\r\nupdating environment: [new config] 1 added, 0 changed, 0 removed\r\nreading sources... [100%] index                                                \r\nlooking for now-outdated files... none found\r\npickling environment... done\r\nchecking consistency... done\r\npreparing documents... done\r\nwriting output... [100%] index                                                 \r\nbuild succeeded, 2 warnings.\r\n\r\nThe text files are in ../../../../tmp/pytest-of-builduser/pytest-0/dummy/_build/text.\r\n\r\n# warning: \r\nWARNING: Cannot treat a function defined as a local function: \"dummy_module.Class.locally_defined_callable_field\"  (use @functools.wraps)\r\nWARNING: Cannot resolve forward reference in type annotations of \"dummy_module.function_with_unresolvable_annotation\": name 'a' is not defined\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/97", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/97/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/97/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/97", "id": 490938794, "node_id": "MDU6SXNzdWU0OTA5Mzg3OTQ=", "number": 97, "title": "Test correct classification of typing exports", "user": {"login": "flying-sheep", "id": 291575, "node_id": "MDQ6VXNlcjI5MTU3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flying-sheep", "html_url": "https://github.com/flying-sheep", "followers_url": "https://api.github.com/users/flying-sheep/followers", "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}", "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}", "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions", "organizations_url": "https://api.github.com/users/flying-sheep/orgs", "repos_url": "https://api.github.com/users/flying-sheep/repos", "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}", "received_events_url": "https://api.github.com/users/flying-sheep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-09-09T07:59:24Z", "updated_at": "2019-09-12T11:55:48Z", "closed_at": "2019-09-12T11:55:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "You fixed `py:data` links to typing in 3c9f4f38fce0003a102e0436b6b34f85829dab48, but expressed frustration in https://github.com/agronholm/sphinx-autodoc-typehints/pull/95#issuecomment-529239062 that there isn\u2019t an easy way to get which things are `py:data` and which `py:class`. We could try to devise a method, and test it by loading Python\u2019s objects.inv via [`sphobjinv`](https://sphobjinv.readthedocs.io/en/latest/) and comparing our results vs the ones in a given Python version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/96", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/96/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/96/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/96", "id": 483498742, "node_id": "MDU6SXNzdWU0ODM0OTg3NDI=", "number": 96, "title": "typing.TextIO gets mangled", "user": {"login": "flying-sheep", "id": 291575, "node_id": "MDQ6VXNlcjI5MTU3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flying-sheep", "html_url": "https://github.com/flying-sheep", "followers_url": "https://api.github.com/users/flying-sheep/followers", "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}", "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}", "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions", "organizations_url": "https://api.github.com/users/flying-sheep/orgs", "repos_url": "https://api.github.com/users/flying-sheep/repos", "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}", "received_events_url": "https://api.github.com/users/flying-sheep/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311996, "node_id": "MDU6TGFiZWwyNjMzMTE5OTY=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-21T15:38:52Z", "updated_at": "2019-09-07T16:40:12Z", "closed_at": "2019-09-07T16:40:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We call `annotation_cls.__qualname__title()` to make e.g. `'tuple'` into `'Tuple'`, but this breaks `TextIO`, which becomes mangled into `'Textio'`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/94", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/94/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/94/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/94", "id": 483378362, "node_id": "MDU6SXNzdWU0ODMzNzgzNjI=", "number": 94, "title": "Support all `typing.*` types listed as :py:data:", "user": {"login": "flying-sheep", "id": 291575, "node_id": "MDQ6VXNlcjI5MTU3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flying-sheep", "html_url": "https://github.com/flying-sheep", "followers_url": "https://api.github.com/users/flying-sheep/followers", "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}", "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}", "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions", "organizations_url": "https://api.github.com/users/flying-sheep/orgs", "repos_url": "https://api.github.com/users/flying-sheep/repos", "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}", "received_events_url": "https://api.github.com/users/flying-sheep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-21T12:02:08Z", "updated_at": "2019-09-09T07:55:33Z", "closed_at": "2019-09-09T07:55:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As you know, some types aren\u2019t `py:class`es but `py:data`. Currently handled are `Any`, `AnyStr`, `Callable`, `Optional` and `Union`, but there are more, most importantly `Tuple`:\r\n\r\n```console\r\n$ python -m sphinx.ext.intersphinx https://docs.python.org/3/objects.inv | grep -P '^([^\\s]|\\s+typing\\.).*'\r\n...\r\npy:data\r\n#       typing.Any                               library/typing.html#typing.Any\r\n#       typing.AnyStr                            library/typing.html#typing.AnyStr\r\n#       typing.Callable                          library/typing.html#typing.Callable\r\n        typing.ClassVar                          library/typing.html#typing.ClassVar\r\n        typing.NoReturn                          library/typing.html#typing.NoReturn\r\n#       typing.Optional                          library/typing.html#typing.Optional\r\n        typing.Tuple                             library/typing.html#typing.Tuple\r\n#       typing.Union                             library/typing.html#typing.Union\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/93", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/93/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/93/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/93", "id": 482811422, "node_id": "MDU6SXNzdWU0ODI4MTE0MjI=", "number": 93, "title": "Cannot resolve forward reference", "user": {"login": "revmischa", "id": 245131, "node_id": "MDQ6VXNlcjI0NTEzMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/245131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revmischa", "html_url": "https://github.com/revmischa", "followers_url": "https://api.github.com/users/revmischa/followers", "following_url": "https://api.github.com/users/revmischa/following{/other_user}", "gists_url": "https://api.github.com/users/revmischa/gists{/gist_id}", "starred_url": "https://api.github.com/users/revmischa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revmischa/subscriptions", "organizations_url": "https://api.github.com/users/revmischa/orgs", "repos_url": "https://api.github.com/users/revmischa/repos", "events_url": "https://api.github.com/users/revmischa/events{/privacy}", "received_events_url": "https://api.github.com/users/revmischa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311996, "node_id": "MDU6TGFiZWwyNjMzMTE5OTY=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2019-08-20T11:46:25Z", "updated_at": "2019-09-04T20:20:38Z", "closed_at": "2019-08-21T06:51:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code:\r\n```\r\nif TYPE_CHECKING:\r\n    from qc.model.user import User\r\n\r\n...\r\n\r\n    @property\r\n    @abstractmethod\r\n    def owner(self) -> \"User\":\r\n        ...\r\n```\r\n\r\nError with `set_type_checking_flag = False`:\r\n```\r\nWARNING: Cannot resolve forward reference in type annotations of \"qc.db.Owned.owner\": name 'User' is not defined                                                                                             \r\n\r\nException occurred:\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/inspect.py\", line 786, in findsource                                                                                                 \r\n    raise OSError('could not get source code')\r\nOSError: could not get source code\r\n```\r\n\r\nError with `set_type_checking_flag = True`:\r\n```\r\nWARNING: autodoc: failed to import module 'app' from module 'qc'; the following exception was raised:\r\ncannot import name 'User' from 'qc.model.user' (/Users/cyber/dev/jb/qc/qc-backend/qc/model/user.py)\r\nWARNING: autodoc: failed to import module 'commands' from module 'qc'; the following exception was raised:\r\ncannot import name 'TSTZ' from 'qc.db' (/Users/cyber/dev/jb/qc/qc-backend/qc/db/__init__.py)\r\n... [many more]\r\ncannot import name 'User' from 'qc.model.user' (/Users/cyber/dev/jb/qc/qc-backend/qc/model/user.py)\r\ncannot import name 'User' from 'qc.model.user' (/Users/cyber/dev/jb/qc/qc-backend/qc/model/user.py)\r\ncannot import name 'User' from 'qc.model.user' (/Users/cyber/dev/jb/qc/qc-backend/qc/model/user.py)\r\nWARNING: autodoc: failed to import module 'test' from module 'qc'; the following exception was raised:\r\ncannot import name 'User' from 'qc.model.user' (/Users/cyber/dev/jb/qc/qc-backend/qc/model/user.py)\r\n```\r\n\r\nUsing `sphinx-apidoc` and python 3.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/91", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/91/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/91/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/91", "id": 477112068, "node_id": "MDU6SXNzdWU0NzcxMTIwNjg=", "number": 91, "title": "Recursion errors with some recursive types", "user": {"login": "sangaline", "id": 8236564, "node_id": "MDQ6VXNlcjgyMzY1NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8236564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sangaline", "html_url": "https://github.com/sangaline", "followers_url": "https://api.github.com/users/sangaline/followers", "following_url": "https://api.github.com/users/sangaline/following{/other_user}", "gists_url": "https://api.github.com/users/sangaline/gists{/gist_id}", "starred_url": "https://api.github.com/users/sangaline/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sangaline/subscriptions", "organizations_url": "https://api.github.com/users/sangaline/orgs", "repos_url": "https://api.github.com/users/sangaline/repos", "events_url": "https://api.github.com/users/sangaline/events{/privacy}", "received_events_url": "https://api.github.com/users/sangaline/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-06T00:28:04Z", "updated_at": "2019-08-06T19:06:52Z", "closed_at": "2019-08-06T19:06:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This type definition\r\n\r\n```python\r\nTreeType = typing.Dict[str, typing.Union['TreeType', typing.List['TreeType']]]\r\n```\r\n\r\ncauses documentation generation to fail with the following recursion error.\r\n\r\n```\r\nRecursion error:\r\nmaximum recursion depth exceeded while calling a Python object\r\n```\r\n\r\nIt appears that this only happens when the recursive type is referenced twice (*e.g* `TreeType = typing.Dict[str, 'TreeType']` works fine).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/90", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/90/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/90/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/90", "id": 472464079, "node_id": "MDU6SXNzdWU0NzI0NjQwNzk=", "number": 90, "title": "Regression from #87", "user": {"login": "wkschwartz", "id": 1417749, "node_id": "MDQ6VXNlcjE0MTc3NDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1417749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wkschwartz", "html_url": "https://github.com/wkschwartz", "followers_url": "https://api.github.com/users/wkschwartz/followers", "following_url": "https://api.github.com/users/wkschwartz/following{/other_user}", "gists_url": "https://api.github.com/users/wkschwartz/gists{/gist_id}", "starred_url": "https://api.github.com/users/wkschwartz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wkschwartz/subscriptions", "organizations_url": "https://api.github.com/users/wkschwartz/orgs", "repos_url": "https://api.github.com/users/wkschwartz/repos", "events_url": "https://api.github.com/users/wkschwartz/events{/privacy}", "received_events_url": "https://api.github.com/users/wkschwartz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-24T19:22:01Z", "updated_at": "2019-09-08T14:36:23Z", "closed_at": "2019-09-08T14:36:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "#87 via 1599287cbfa4 caused a regression that broke my build (traceback below the fold). The issue is https://github.com/agronholm/sphinx-autodoc-typehints/blob/5a0cda7bed875f31e69ce3e59d761513a537e1c7/sphinx_autodoc_typehints.py#L208\r\n\r\nwhen `obj` is a built in type, such as `str`\r\n\r\nI'm not sure what type signature in my code base caused the error because I can't tell from the traceback. Sorry I don't have a minimal working example.\r\n\r\n<details>\r\n\r\nThis occurred with sphinx-autodoc-typehints version 1.7.0.\r\n\r\n```python-traceback\r\n$ python setup.py build_docs\r\nrunning build_docs\r\nRunning Sphinx v2.1.2\r\nloading pickled environment... failed\r\nfailed: No such config value: typehints_fully_qualified\r\nloading intersphinx inventory from https://docs.python.org/3/objects.inv...\r\nbuilding [mo]: targets for 0 po files that are out of date\r\nbuilding [html]: targets for 1 source files that are out of date\r\nupdating environment: 1 added, 0 changed, 0 removed\r\nreading sources... [100%] index                                                                           \r\nException occurred:\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 208, in get_all_type_hints\r\n    obj.__annotations__ = rv\r\nTypeError: can't set attributes of built-in/extension type 'str'\r\nThe full traceback has been saved in /.../sphinx-err-1ncbgg0s.log, if you want to report the issue to the developers.\r\nPlease also report this if it was a user error, so that a better error message can be provided next time.\r\nA bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!\r\n```\r\n\r\nAnd this is the log file mentioned above:\r\n```python-traceback\r\n# Sphinx version: 2.1.2\r\n# Python version: 3.7.3 (CPython)\r\n# Docutils version: 0.15 release\r\n# Jinja2 version: 2.10.1\r\n# Last messages:\r\n#   Running Sphinx v2.1.2\r\n#   loading pickled environment...\r\n#   failed\r\n#   failed: No such config value: typehints_fully_qualified\r\n#   loading intersphinx inventory from https://docs.python.org/3/objects.inv...\r\n#   building [mo]: targets for 0 po files that are out of date\r\n#   building [html]: targets for 1 source files that are out of date\r\n#   updating environment:\r\n#   1 added, 0 changed, 0 removed\r\n#   reading sources... [100%] index\r\n# Loaded extensions:\r\n#   sphinx.ext.mathjax (2.1.2) from /.../venv/lib/python3.7/site-packages/sphinx/ext/mathjax.py\r\n#   sphinxcontrib.applehelp (1.0.1) from /.../venv/lib/python3.7/site-packages/sphinxcontrib/applehelp/__init__.py\r\n#   sphinxcontrib.devhelp (1.0.1) from /.../venv/lib/python3.7/site-packages/sphinxcontrib/devhelp/__init__.py\r\n#   sphinxcontrib.htmlhelp (1.0.2) from /.../venv/lib/python3.7/site-packages/sphinxcontrib/htmlhelp/__init__.py\r\n#   sphinxcontrib.serializinghtml (1.1.3) from /.../venv/lib/python3.7/site-packages/sphinxcontrib/serializinghtml/__init__.py\r\n#   sphinxcontrib.qthelp (1.0.2) from /.../venv/lib/python3.7/site-packages/sphinxcontrib/qthelp/__init__.py\r\n#   alabaster (0.7.12) from /.../venv/lib/python3.7/site-packages/alabaster/__init__.py\r\n#   sphinx.ext.autodoc (2.1.2) from /.../venv/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\r\n#   sphinx.ext.intersphinx (2.1.2) from /.../venv/lib/python3.7/site-packages/sphinx/ext/intersphinx.py\r\n#   sphinx_autodoc_typehints (unknown version) from /.../venv/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\r\nTraceback (most recent call last):\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/setup_command.py\", line 193, in run\r\n    app.build(force_all=self.all_files)\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/application.py\", line 345, in build\r\n    self.builder.build_update()\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 319, in build_update\r\n    len(to_build))\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 332, in build\r\n    updated_docnames = set(self.read())\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 438, in read\r\n    self._read_serial(docnames)\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 460, in _read_serial\r\n    self.read_doc(docname)\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 504, in read_doc\r\n    doctree = read_doc(self.app, self.env, self.env.doc2path(docname))\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/io.py\", line 325, in read_doc\r\n    pub.publish()\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/core.py\", line 217, in publish\r\n    self.settings)\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/io.py\", line 113, in read\r\n    self.parse()\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/readers/__init__.py\", line 77, in parse\r\n    self.parser.parse(self.input, document)\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/parsers.py\", line 94, in parse\r\n    self.statemachine.run(inputlines, document, inliner=self.inliner)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 171, in run\r\n    input_source=document['source'])\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2771, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 327, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 395, in new_subsection\r\n    node=section_node, match_titles=True)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 282, in nested_parse\r\n    node=node, match_titles=match_titles)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 196, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2771, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 327, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 395, in new_subsection\r\n    node=section_node, match_titles=True)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 282, in nested_parse\r\n    node=node, match_titles=match_titles)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 196, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2346, in explicit_markup\r\n    self.explicit_list(blank_finish)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2376, in explicit_list\r\n    match_titles=self.state_machine.match_titles)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 319, in nested_list_parse\r\n    node=node, match_titles=match_titles)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 196, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2649, in explicit_markup\r\n    nodelist, blank_finish = self.explicit_construct(match)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2356, in explicit_construct\r\n    return method(self, expmatch)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2099, in directive\r\n    directive_class, match, type_name, option_presets)\r\n  File \"/.../venv/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2148, in run_directive\r\n    result = directive_instance.run()\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/ext/autodoc/directive.py\", line 150, in run\r\n    documenter.generate(more_content=self.content)\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 757, in generate\r\n    self.add_content(more_content)\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 484, in add_content\r\n    for i, line in enumerate(self.process_doc(docstrings)):\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 463, in process_doc\r\n    self.options, docstringlines)\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/application.py\", line 449, in emit\r\n    return self.events.emit(event, *args)\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx/events.py\", line 103, in emit\r\n    results.append(callback(self.app, *args))\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 303, in process_docstring\r\n    type_hints = get_all_type_hints(obj, name)\r\n  File \"/.../venv/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 208, in get_all_type_hints\r\n    obj.__annotations__ = rv\r\nTypeError: can't set attributes of built-in/extension type 'str'\r\n```\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/88", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/88/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/88/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/88", "id": 464224221, "node_id": "MDU6SXNzdWU0NjQyMjQyMjE=", "number": 88, "title": "Option to write out types even when params are undocumented", "user": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-04T11:49:24Z", "updated_at": "2019-08-19T16:02:28Z", "closed_at": "2019-08-19T16:02:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Our library has more type hints than actual/manual documentation. It would be nice if we could put the types in the docs to give the user *something* even if our params are not documented. The way I would imagine this is that this extension adds a placeholder `:param foo:` if it's missing.\r\n\r\nIf you accept this feature request I would start implementing it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/86", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/86/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/86/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/86", "id": 458025552, "node_id": "MDU6SXNzdWU0NTgwMjU1NTI=", "number": 86, "title": "General annotations shows default arguments", "user": {"login": "UncleGoogle", "id": 12197825, "node_id": "MDQ6VXNlcjEyMTk3ODI1", "avatar_url": "https://avatars2.githubusercontent.com/u/12197825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/UncleGoogle", "html_url": "https://github.com/UncleGoogle", "followers_url": "https://api.github.com/users/UncleGoogle/followers", "following_url": "https://api.github.com/users/UncleGoogle/following{/other_user}", "gists_url": "https://api.github.com/users/UncleGoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/UncleGoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/UncleGoogle/subscriptions", "organizations_url": "https://api.github.com/users/UncleGoogle/orgs", "repos_url": "https://api.github.com/users/UncleGoogle/repos", "events_url": "https://api.github.com/users/UncleGoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/UncleGoogle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-19T13:48:55Z", "updated_at": "2019-10-25T08:58:31Z", "closed_at": "2019-10-25T08:58:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "`typing.Dict` without specifiers (like `typing.Dict[str, str]`) shouldn't display strange output (see img attached). The same `typing.List` ect.\r\n\r\n```python\r\ndef func() -> typing.Dict\r\n```\r\noutput:\r\n\r\n[![Screenshot from Gyazo](https://gyazo.com/3d4ec5baca6e72eaccbf09960f507964/raw)](https://gyazo.com/3d4ec5baca6e72eaccbf09960f507964)\r\n\r\nExpected result\r\n\r\n- `Dict`\r\n\r\nWorkaround:\r\n\r\n```python\r\ndef fun() -> `dict`\r\n```\r\n\r\nBut it should be consistent across the docs that the uppercase letter is shown everywhere if someone uses also not general annotations", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/84", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/84/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/84/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/84", "id": 453473369, "node_id": "MDU6SXNzdWU0NTM0NzMzNjk=", "number": 84, "title": "Effective default for `set_type_checking_flag` option", "user": {"login": "erikkemperman", "id": 3100637, "node_id": "MDQ6VXNlcjMxMDA2Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3100637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikkemperman", "html_url": "https://github.com/erikkemperman", "followers_url": "https://api.github.com/users/erikkemperman/followers", "following_url": "https://api.github.com/users/erikkemperman/following{/other_user}", "gists_url": "https://api.github.com/users/erikkemperman/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikkemperman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikkemperman/subscriptions", "organizations_url": "https://api.github.com/users/erikkemperman/orgs", "repos_url": "https://api.github.com/users/erikkemperman/repos", "events_url": "https://api.github.com/users/erikkemperman/events{/privacy}", "received_events_url": "https://api.github.com/users/erikkemperman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-07T11:48:03Z", "updated_at": "2019-09-07T16:38:13Z", "closed_at": "2019-09-07T16:38:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe readme says the default for the `set_type_checking_flag` option is `True`:\r\n\r\nhttps://github.com/agronholm/sphinx-autodoc-typehints/blob/ae9c54acd9c34242441a019bf19451bf67d712f5/README.rst#L58-L59\r\n\r\nHowever, the effective default set in the code is `False`:\r\n\r\nhttps://github.com/agronholm/sphinx-autodoc-typehints/blob/ae9c54acd9c34242441a019bf19451bf67d712f5/sphinx_autodoc_typehints.py#L246\r\n\r\nSo I was just wondering, which should it be?\r\n\r\nThanks for a great piece of work, by the way \ud83d\udc4d ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/83", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/83/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/83/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/83", "id": 447199107, "node_id": "MDU6SXNzdWU0NDcxOTkxMDc=", "number": 83, "title": "Cannot create docs for dataclasses in Python 3.7", "user": {"login": "cal-pratt", "id": 7611406, "node_id": "MDQ6VXNlcjc2MTE0MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7611406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cal-pratt", "html_url": "https://github.com/cal-pratt", "followers_url": "https://api.github.com/users/cal-pratt/followers", "following_url": "https://api.github.com/users/cal-pratt/following{/other_user}", "gists_url": "https://api.github.com/users/cal-pratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/cal-pratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cal-pratt/subscriptions", "organizations_url": "https://api.github.com/users/cal-pratt/orgs", "repos_url": "https://api.github.com/users/cal-pratt/repos", "events_url": "https://api.github.com/users/cal-pratt/events{/privacy}", "received_events_url": "https://api.github.com/users/cal-pratt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-22T15:19:54Z", "updated_at": "2019-07-24T15:01:02Z", "closed_at": "2019-07-24T15:01:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to generate docs in my Python 3.7 Project and noticed fatal errors when including dataclasses. \r\n\r\nThis only happens when this plugin is included. \r\n\r\nA MVCE can be found here: https://github.com/cal-pratt/sphinx-autodoc-typehint-error\r\n\r\nExample dataclass:\r\n```python\r\nimport dataclasses\r\n\r\n@dataclasses.dataclass\r\nclass Foobar:\r\n    pass\r\n```\r\n\r\nSphinx error:\r\n```\r\ntox -r -e docs\r\n...\r\nException occurred:\r\n  File \"/home/user/tmp/dataclass-repro/.tox/docs/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 175, in process_signature\r\n    method_object = outer.__dict__[method_name]\r\nAttributeError: 'NoneType' object has no attribute '__dict__'\r\nThe full traceback has been saved in /tmp/sphinx-err-ehr07549.log, if you want to report the issue to the developers.\r\nPlease also report this if it was a user error, so that a better error message can be provided next time.\r\nA bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!\r\nERROR: InvocationError for command '/home/user/tmp/dataclass-repro/.tox/docs/bin/python setup.py build_sphinx' (exited with code 1)\r\n_________________________________________________________________________ summary _________________________________________________________________________\r\nERROR:   docs: commands failed\r\n\r\nCompilation exited abnormally with code 1 at Wed May 22 10:13:40\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/82", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/82/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/82/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/82", "id": 440806373, "node_id": "MDU6SXNzdWU0NDA4MDYzNzM=", "number": 82, "title": "Consider using typing_inspect", "user": {"login": "oremanj", "id": 4316136, "node_id": "MDQ6VXNlcjQzMTYxMzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4316136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oremanj", "html_url": "https://github.com/oremanj", "followers_url": "https://api.github.com/users/oremanj/followers", "following_url": "https://api.github.com/users/oremanj/following{/other_user}", "gists_url": "https://api.github.com/users/oremanj/gists{/gist_id}", "starred_url": "https://api.github.com/users/oremanj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oremanj/subscriptions", "organizations_url": "https://api.github.com/users/oremanj/orgs", "repos_url": "https://api.github.com/users/oremanj/repos", "events_url": "https://api.github.com/users/oremanj/events{/privacy}", "received_events_url": "https://api.github.com/users/oremanj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263312001, "node_id": "MDU6TGFiZWwyNjMzMTIwMDE=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-06T17:34:47Z", "updated_at": "2019-10-27T12:59:12Z", "closed_at": "2019-10-27T12:59:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "There's now a `typing_inspect` package on PyPI so you don't have to inspect all the type hint `__attributes__` yourself: https://github.com/ilevkivskyi/typing_inspect\r\n\r\nI haven't investigated in detail, but maybe it could improve the simplicity and correctness of this package?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/81", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/81/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/81/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/81", "id": 440806058, "node_id": "MDU6SXNzdWU0NDA4MDYwNTg=", "number": 81, "title": "Title-casing annotation classes breaks on e.g. AsyncIterator", "user": {"login": "oremanj", "id": 4316136, "node_id": "MDQ6VXNlcjQzMTYxMzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4316136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oremanj", "html_url": "https://github.com/oremanj", "followers_url": "https://api.github.com/users/oremanj/followers", "following_url": "https://api.github.com/users/oremanj/following{/other_user}", "gists_url": "https://api.github.com/users/oremanj/gists{/gist_id}", "starred_url": "https://api.github.com/users/oremanj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oremanj/subscriptions", "organizations_url": "https://api.github.com/users/oremanj/orgs", "repos_url": "https://api.github.com/users/oremanj/repos", "events_url": "https://api.github.com/users/oremanj/events{/privacy}", "received_events_url": "https://api.github.com/users/oremanj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-06T17:33:59Z", "updated_at": "2019-09-08T20:31:51Z", "closed_at": "2019-09-08T20:31:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Python 3.7 (https://github.com/agronholm/sphinx-autodoc-typehints/commit/a09b018bf54d5a7eabd853043e9a30a4147cdc9d), the `__origin__` of `typing.List[T]` is just `list`. It looks like you're converting this to `List` using `str.title()`: https://github.com/agronholm/sphinx-autodoc-typehints/blob/master/sphinx_autodoc_typehints.py#L115\r\n\r\nBut this breaks multi-word type hints: `typing.AsyncIterator` becomes `typing.Asynciterator`, which creates a broken reference.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/80", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/80/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/80/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/80", "id": 440292096, "node_id": "MDU6SXNzdWU0NDAyOTIwOTY=", "number": 80, "title": "Adding automatic detection of return type", "user": {"login": "znicholls", "id": 23625371, "node_id": "MDQ6VXNlcjIzNjI1Mzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/23625371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/znicholls", "html_url": "https://github.com/znicholls", "followers_url": "https://api.github.com/users/znicholls/followers", "following_url": "https://api.github.com/users/znicholls/following{/other_user}", "gists_url": "https://api.github.com/users/znicholls/gists{/gist_id}", "starred_url": "https://api.github.com/users/znicholls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/znicholls/subscriptions", "organizations_url": "https://api.github.com/users/znicholls/orgs", "repos_url": "https://api.github.com/users/znicholls/repos", "events_url": "https://api.github.com/users/znicholls/events{/privacy}", "received_events_url": "https://api.github.com/users/znicholls/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-04T06:47:50Z", "updated_at": "2019-05-04T12:40:27Z", "closed_at": "2019-05-04T12:40:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, \r\n\r\nThanks for all your efforts on autodoc-typehints, it's super useful!\r\n\r\nAs I understand it, for a docstring like the below, autodoc-typehints would not currently automatically include the type of the output in the 'Returns' section but would automatically include the return type for the `starting_point` argument in the 'Parameters' section.\r\n\r\n```python\r\ndef my_func(starting_point: str) -> str:\r\n    \"\"\"\r\n    Convert string to my special logic\r\n    \r\n    Parameters\r\n    -----------\r\n    starting_point\r\n        String to start with\r\n\r\n    Returns\r\n    --------\r\n        Output converted to a new string with my custom algorithm\r\n    \"\"\"\r\n    return starting_point.lower().replace(\"a\", \"B\")\r\n```\r\n\r\nI was wondering:\r\n\r\n- whether this is on purpose?\r\n- how hard you think it would be to add the ability to include the return type automatically to autodoc-typehints?\r\n    - I'm happy to have a go at implementing, I just want to have a sense of whether you think it would be a 1hr job or a 10hr job so I have a sense of what I might be up against\r\n\r\nCheers again", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/79", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/79/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/79/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/79", "id": 439269631, "node_id": "MDU6SXNzdWU0MzkyNjk2MzE=", "number": 79, "title": "support for properties", "user": {"login": "h-g-s", "id": 7953594, "node_id": "MDQ6VXNlcjc5NTM1OTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7953594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h-g-s", "html_url": "https://github.com/h-g-s", "followers_url": "https://api.github.com/users/h-g-s/followers", "following_url": "https://api.github.com/users/h-g-s/following{/other_user}", "gists_url": "https://api.github.com/users/h-g-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/h-g-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h-g-s/subscriptions", "organizations_url": "https://api.github.com/users/h-g-s/orgs", "repos_url": "https://api.github.com/users/h-g-s/repos", "events_url": "https://api.github.com/users/h-g-s/events{/privacy}", "received_events_url": "https://api.github.com/users/h-g-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-01T18:33:51Z", "updated_at": "2019-05-02T09:14:34Z", "closed_at": "2019-05-02T09:14:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I use properties in my code, e.g:\r\n\r\n    @property\r\n    def type(self) -> str:\r\n        \"\"\"variable type ('B') BINARY, ('C') CONTINUOUS and ('I') INTEGER\"\"\"\r\n        return self.model.solver.var_get_type(self)\r\n\r\ntypehints includes \r\n\r\nReturn type:   str\r\n\r\nin the documentation.  Since this is a property, it not only *returns* a value. Would it be possible for the case of properties just to include the observation:\r\n\r\nType: str \r\n\r\ninstead of the regular Returns xxx    text   ???\r\n\r\nThanks !!!! \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/77", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/77/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/77/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/77", "id": 429200296, "node_id": "MDU6SXNzdWU0MjkyMDAyOTY=", "number": 77, "title": "Formatting chokes on metaclasses", "user": {"login": "erickpeirson", "id": 3451594, "node_id": "MDQ6VXNlcjM0NTE1OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3451594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickpeirson", "html_url": "https://github.com/erickpeirson", "followers_url": "https://api.github.com/users/erickpeirson/followers", "following_url": "https://api.github.com/users/erickpeirson/following{/other_user}", "gists_url": "https://api.github.com/users/erickpeirson/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickpeirson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickpeirson/subscriptions", "organizations_url": "https://api.github.com/users/erickpeirson/orgs", "repos_url": "https://api.github.com/users/erickpeirson/repos", "events_url": "https://api.github.com/users/erickpeirson/events{/privacy}", "received_events_url": "https://api.github.com/users/erickpeirson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-04T10:25:59Z", "updated_at": "2019-04-04T10:28:56Z", "closed_at": "2019-04-04T10:28:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure whether this is a bug, or a misreading of PEP484 on my part, or an edge case not covered by PEP484, or...what. \r\n\r\nThe problem: if a type annotation is a metaclass (i.e. inherits from ``type``), sphinx-autodoc-typehints chokes with.\r\n\r\n```\r\nException occurred:\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/sphinx_autodoc_typehints.py\", line 129, in format_annotation\r\n    mro = annotation_cls.mro()\r\nTypeError: descriptor 'mro' of 'type' object needs an argument\r\n```\r\n\r\nThe offending line is: https://github.com/agronholm/sphinx-autodoc-typehints/blob/master/sphinx_autodoc_typehints.py#L129\r\n\r\nHere is a minimal example that will trigger this exception:\r\n\r\n```python\r\nclass MyMeta(type):\r\n    pass\r\n\r\n\r\nclass MyClass(metaclass=MyMeta):\r\n    pass\r\n\r\n\r\ndef something_with_a_class(klass: type) -> None:    # No problem.\r\n    \"\"\"Do something with a class.\"\"\"\r\n    pass\r\n\r\n\r\ndef something_meta(klass: MyMeta) -> None:    # Triggers exception.\r\n    \"\"\"Do something with a class with a metaclass.\"\"\"\r\n    pass\r\n```\r\n\r\nOn cursory reading, it appears that the metaclass case is only handled if the annotation class is a ``typing.Type`` which, in the example above, ``MyMeta`` is not.\r\n\r\n```python\r\nif annotation_cls.__module__ == 'typing':    #L46\r\n    if inspect.isclass(getattr(annotation, '__origin__', None)):    # L52\r\n        annotation_cls = annotation.__origin__ .   # L53\r\n        try:    # L54\r\n            mro = annotation_cls.mro() .   # L55\r\n        except TypeError:    # L58\r\n            pass  # annotation_cls was either the \"type\" object or typing.Type .   # L59\r\n```\r\n\r\nPEP484 [discusses](https://www.python.org/dev/peps/pep-0484/#the-type-of-class-objects) the case in which an annotation refers to the \"type\" of a particular class, e.g. if we have a function that accepts a particular class or a family of classes with a particular parent class. For example:\r\n\r\n```python\r\nfrom typing import Type\r\n\r\n\r\nclass Parent:\r\n    pass\r\n\r\n\r\nclass Child(Parent):\r\n    pass\r\n\r\n\r\nclass GrandChild(Child):\r\n    pass\r\n\r\n\r\ndef do_something_transitive(klass: Type[Parent]) -> None:\r\n    pass\r\n```\r\n\r\nBut this does not help much when we are dealing not with a family of classes with a common ancestor, but a collection of classes with a common metaclass. I would (perhaps naively) expect an annotation that is a metaclass to work, since (in the first example) ``type(MyClass) is MyMeta``. Also, using ``type`` as an annotation does not cause problems, as shown above.\r\n\r\nFor what it's worth, ``mypy`` does not seem to have a problem with the metaclass example. Not that this should be an absolute guide.\r\n\r\nA fix for this might be to catch the TypeError at L129 and just skip https://github.com/agronholm/sphinx-autodoc-typehints/blob/master/sphinx_autodoc_typehints.py#L130-L134.\r\n\r\n```\r\nName: sphinx-autodoc-typehints\r\nVersion: 1.6.0\r\nSummary: Type hints (PEP 484) support for the Sphinx autodoc extension\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/73", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/73/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/73/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/73", "id": 410805775, "node_id": "MDU6SXNzdWU0MTA4MDU3NzU=", "number": 73, "title": "Annotation with metaclass leads to \"TypeError: descriptor 'mro' of 'type' object needs an argument\"", "user": {"login": "K0Te", "id": 6162155, "node_id": "MDQ6VXNlcjYxNjIxNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6162155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/K0Te", "html_url": "https://github.com/K0Te", "followers_url": "https://api.github.com/users/K0Te/followers", "following_url": "https://api.github.com/users/K0Te/following{/other_user}", "gists_url": "https://api.github.com/users/K0Te/gists{/gist_id}", "starred_url": "https://api.github.com/users/K0Te/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/K0Te/subscriptions", "organizations_url": "https://api.github.com/users/K0Te/orgs", "repos_url": "https://api.github.com/users/K0Te/repos", "events_url": "https://api.github.com/users/K0Te/events{/privacy}", "received_events_url": "https://api.github.com/users/K0Te/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-02-15T14:57:09Z", "updated_at": "2019-09-14T21:00:29Z", "closed_at": "2019-09-14T21:00:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any annotation with Django's `ModelBase` leads to following exception:\r\n```\r\nException occurred:\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 129, in format_annotation\r\n    mro = annotation_cls.mro()\r\nTypeError: descriptor 'mro' of 'type' object needs an argument\r\nThe full traceback has been saved in /tmp/sphinx-err-3opwt0gy.log, if you want to report the issue to the developers.\r\n```\r\n\r\n\r\nFull log:\r\n```\r\nroot@35afc9235751:/code# cat /tmp/sphinx-err-3opwt0gy.log\r\n# Sphinx version: 1.8.4\r\n# Python version: 3.7.0 (CPython)\r\n# Docutils version: 0.14 \r\n# Jinja2 version: 2.10\r\n# Last messages:\r\n#   building [mo]: targets for 0 po files that are out of date\r\n#   \r\n#   building [html]: targets for 45 source files that are out of date\r\n#   \r\n#   updating environment:\r\n#   \r\n#   45 added, 0 changed, 0 removed\r\n#   \r\n#   reading sources... [  2%] gulfstream\r\n#   \r\n# Loaded extensions:\r\n#   sphinx.ext.mathjax (1.8.4) from /usr/local/lib/python3.7/site-packages/sphinx/ext/mathjax.py\r\n#   alabaster (0.7.12) from /usr/local/lib/python3.7/site-packages/alabaster/__init__.py\r\n#   sphinx.ext.autodoc (1.8.4) from /usr/local/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\r\n#   sphinx_autodoc_typehints (unknown version) from /usr/local/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\r\n#   sphinx.ext.todo (1.8.4) from /usr/local/lib/python3.7/site-packages/sphinx/ext/todo.py\r\n#   sphinx.ext.coverage (1.8.4) from /usr/local/lib/python3.7/site-packages/sphinx/ext/coverage.py\r\n#   sphinx.ext.viewcode (1.8.4) from /usr/local/lib/python3.7/site-packages/sphinx/ext/viewcode.py\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/cmd/build.py\", line 304, in build_main\r\n    app.build(args.force_all, filenames)\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/application.py\", line 341, in build\r\n    self.builder.build_update()\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 347, in build_update\r\n    len(to_build))\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 360, in build\r\n    updated_docnames = set(self.read())\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 468, in read\r\n    self._read_serial(docnames)\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 490, in _read_serial\r\n    self.read_doc(docname)\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/builders/__init__.py\", line 534, in read_doc\r\n    doctree = read_doc(self.app, self.env, self.env.doc2path(docname))\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/io.py\", line 318, in read_doc\r\n    pub.publish()\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/core.py\", line 217, in publish\r\n    self.settings)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/readers/__init__.py\", line 72, in read\r\n    self.parse()\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/readers/__init__.py\", line 78, in parse\r\n    self.parser.parse(self.input, document)\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/parsers.py\", line 88, in parse\r\n    self.statemachine.run(inputstring, document, inliner=self.inliner)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 171, in run\r\n    input_source=document['source'])\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2753, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 327, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 395, in new_subsection\r\n    node=section_node, match_titles=True)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 282, in nested_parse\r\n    node=node, match_titles=match_titles)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 196, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2753, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 327, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 395, in new_subsection\r\n    node=section_node, match_titles=True)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 282, in nested_parse\r\n    node=node, match_titles=match_titles)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 196, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2326, in explicit_markup\r\n    nodelist, blank_finish = self.explicit_construct(match)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2338, in explicit_construct\r\n    return method(self, expmatch)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2081, in directive\r\n    directive_class, match, type_name, option_presets)\r\n  File \"/usr/local/lib/python3.7/site-packages/docutils/parsers/rst/states.py\", line 2130, in run_directive\r\n    result = directive_instance.run()\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/ext/autodoc/directive.py\", line 131, in run\r\n    documenter.generate(more_content=self.content)\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 819, in generate\r\n    self.document_members(all_members)\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 740, in document_members\r\n    check_module=members_check_module and not isattr)\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 816, in generate\r\n    self.add_content(more_content)\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 554, in add_content\r\n    for i, line in enumerate(self.process_doc(docstrings)):\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/ext/autodoc/__init__.py\", line 514, in process_doc\r\n    self.options, docstringlines)\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/application.py\", line 510, in emit\r\n    return self.events.emit(event, self, *args)\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx/events.py\", line 80, in emit\r\n    results.append(callback(*args))\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 209, in process_docstring\r\n    formatted_annotation = format_annotation(annotation)\r\n  File \"/usr/local/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 129, in format_annotation\r\n    mro = annotation_cls.mro()\r\nTypeError: descriptor 'mro' of 'type' object needs an argument\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/72", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/72/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/72/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/72", "id": 405735895, "node_id": "MDU6SXNzdWU0MDU3MzU4OTU=", "number": 72, "title": "Cannot resolve forward reference in type annotations of ...", "user": {"login": "eblot", "id": 172423, "node_id": "MDQ6VXNlcjE3MjQyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/172423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eblot", "html_url": "https://github.com/eblot", "followers_url": "https://api.github.com/users/eblot/followers", "following_url": "https://api.github.com/users/eblot/following{/other_user}", "gists_url": "https://api.github.com/users/eblot/gists{/gist_id}", "starred_url": "https://api.github.com/users/eblot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eblot/subscriptions", "organizations_url": "https://api.github.com/users/eblot/orgs", "repos_url": "https://api.github.com/users/eblot/repos", "events_url": "https://api.github.com/users/eblot/events{/privacy}", "received_events_url": "https://api.github.com/users/eblot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-02-01T14:57:19Z", "updated_at": "2019-02-04T13:00:21Z", "closed_at": "2019-02-04T13:00:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm not sure how to get rid of this warning, which happens with string annotated types,\r\n*i.e.* `def foo(x: \"Class\")`:\r\n  - setting `set_type_checking_flag` to `False` does not help\r\n  - defining the partial or full module name does not help, *i.e.* `x: 'module.Class'` and `x: 'package.module.Class'` instead of `x: 'Class'`\r\n - I even tried relative module path syntax, *i.e.* `x: '.module.Class'` but this syntax does not seem valid.\r\n\r\nHow can I remove these warnings?\r\nI'd like not to explicitly import a type only for type hinting documentation purpose, if possible.\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/69", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/69/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/69/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/69", "id": 394296139, "node_id": "MDU6SXNzdWUzOTQyOTYxMzk=", "number": 69, "title": "Types are not linked", "user": {"login": "gnachman", "id": 427546, "node_id": "MDQ6VXNlcjQyNzU0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/427546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnachman", "html_url": "https://github.com/gnachman", "followers_url": "https://api.github.com/users/gnachman/followers", "following_url": "https://api.github.com/users/gnachman/following{/other_user}", "gists_url": "https://api.github.com/users/gnachman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnachman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnachman/subscriptions", "organizations_url": "https://api.github.com/users/gnachman/orgs", "repos_url": "https://api.github.com/users/gnachman/repos", "events_url": "https://api.github.com/users/gnachman/events{/privacy}", "received_events_url": "https://api.github.com/users/gnachman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311999, "node_id": "MDU6TGFiZWwyNjMzMTE5OTk=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-27T05:12:17Z", "updated_at": "2018-12-27T12:41:00Z", "closed_at": "2018-12-27T12:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into a problem where types to classes within my module are not linked in the HTML sphinx produces when I use sphinx-autodoc-typehints, but they are linked when I use `:type:` and `:rtype:`. I expect I'm doing something silly, but I've tried everything I can think of.\r\n\r\nI have a minimal project here that demonstrates the problem: https://github.com/gnachman/typehintbug\r\n\r\nSee the `bar` module:\r\n\r\n<img width=\"623\" alt=\"screen shot 2018-12-26 at 8 30 49 pm\" src=\"https://user-images.githubusercontent.com/427546/50465623-2df9fb00-094d-11e9-94a7-ad07c72f1424.png\">\r\n\r\nThe types for the parameter and return value are not links.\r\n\r\nWhen I dig into the source, I can see that the generated `:rtype:` is:\r\n\r\n```\r\n:rtype: :py:class:`~mything.foo.Foo`\r\n```\r\n\r\nThis is where I'm stuck; the sphinx docs are not particularly helpful.\r\n\r\nThe `sphinx_autodoc_annotation` package produces proper links for my types, but I prefer `sphinx-autodoc-typehints` because it removes the type annotations from the documentation, which I find hard to read.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/66", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/66/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/66/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/66", "id": 389817941, "node_id": "MDU6SXNzdWUzODk4MTc5NDE=", "number": 66, "title": "TypeError: 'NoneType' object is not iterable", "user": {"login": "lucas03", "id": 2773622, "node_id": "MDQ6VXNlcjI3NzM2MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2773622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucas03", "html_url": "https://github.com/lucas03", "followers_url": "https://api.github.com/users/lucas03/followers", "following_url": "https://api.github.com/users/lucas03/following{/other_user}", "gists_url": "https://api.github.com/users/lucas03/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucas03/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucas03/subscriptions", "organizations_url": "https://api.github.com/users/lucas03/orgs", "repos_url": "https://api.github.com/users/lucas03/repos", "events_url": "https://api.github.com/users/lucas03/events{/privacy}", "received_events_url": "https://api.github.com/users/lucas03/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-11T15:28:15Z", "updated_at": "2018-12-28T18:48:34Z", "closed_at": "2018-12-23T12:13:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I encountered this issue when building docs and included sphinx-autodoc-typehints:\r\n\r\n`sphinx-build -M html docs docs/_build -q 2>&1`\r\n\r\n```\r\nException occurred:\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx_autodoc_typehints.py\", line 122, in format_annotation\r\n    extra = '\\\\[{}]'.format(', '.join(format_annotation(param) for param in params))\r\nTypeError: 'NoneType' object is not iterable\r\nThe full traceback has been saved in /tmp/sphinx-err-yvc80trd.log, if you want to report the issue to the developers.\r\nPlease also report this if it was a user error, so that a better error message can be provided next time.\r\nA bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!\r\n/srv/backend/booking # nano /tmp/sphinx-err-yvc80trd.log\r\n```\r\n\r\n\r\n```\r\n# Sphinx version: 1.8.2\r\n# Python version: 3.6.7 (CPython)\r\n# Docutils version: 0.14\r\n# Jinja2 version: 2.10\r\n# Last messages:\r\n#   reading sources... [  6%] kw/kw.backoff.models.additional_services\r\n#\r\n#   reading sources... [  7%] kw/kw.mambo\r\n#\r\n#   reading sources... [  8%] kw/kw.mambo.constants\r\n#\r\n#   reading sources... [  9%] kw/kw.mambo.handlers\r\n#\r\n#   reading sources... [  9%] kw/kw.mambo.models\r\n#\r\n# Loaded extensions:\r\n#   sphinx.ext.mathjax (1.8.2) from /usr/local/lib/python3.6/site-packages/sphinx/ext/mathjax.py\r\n#   alabaster (0.7.12) from /usr/local/lib/python3.6/site-packages/alabaster/__init__.py\r\n#   sphinx.ext.autodoc (1.8.2) from /usr/local/lib/python3.6/site-packages/sphinx/ext/autodoc/__init__.py\r\n#   sphinx_autodoc_typehints (unknown version) from /usr/local/lib/python3.6/site-packages/sphinx_autodoc_typehints.py\r\n#   sphinx.ext.viewcode (1.8.2) from /usr/local/lib/python3.6/site-packages/sphinx/ext/viewcode.py\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/cmd/build.py\", line 304, in build_main\r\n    app.build(args.force_all, filenames)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/application.py\", line 341, in build\r\n    self.builder.build_update()\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/builders/__init__.py\", line 347, in build_update\r\n    len(to_build))\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/builders/__init__.py\", line 360, in build\r\n    updated_docnames = set(self.read())\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/builders/__init__.py\", line 468, in read\r\n    self._read_serial(docnames)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/builders/__init__.py\", line 490, in _read_serial\r\n    self.read_doc(docname)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/builders/__init__.py\", line 534, in read_doc\r\n    doctree = read_doc(self.app, self.env, self.env.doc2path(docname))\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/io.py\", line 318, in read_doc\r\n    pub.publish()\r\n  File \"/usr/local/lib/python3.6/site-packages/docutils/core.py\", line 217, in publish\r\n    self.settings)\r\n  File \"/usr/local/lib/python3.6/site-packages/docutils/readers/__init__.py\", line 72, in read\r\n    self.parse()\r\n...\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/ext/autodoc/directive.py\", line 131, in run\r\n    documenter.generate(more_content=self.content)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/ext/autodoc/__init__.py\", line 819, in generate\r\n    self.document_members(all_members)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/ext/autodoc/__init__.py\", line 740, in document_members\r\n    check_module=members_check_module and not isattr)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/ext/autodoc/__init__.py\", line 1247, in generate\r\n    all_members=all_members)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/ext/autodoc/__init__.py\", line 816, in generate\r\n    self.add_content(more_content)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/ext/autodoc/__init__.py\", line 1229, in add_content\r\n    ModuleLevelDocumenter.add_content(self, more_content)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/ext/autodoc/__init__.py\", line 554, in add_content\r\n    for i, line in enumerate(self.process_doc(docstrings)):\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/ext/autodoc/__init__.py\", line 514, in process_doc\r\n    self.options, docstringlines)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/application.py\", line 510, in emit\r\n    return self.events.emit(event, self, *args)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx/events.py\", line 80, in emit\r\n    results.append(callback(*args))\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx_autodoc_typehints.py\", line 197, in process_docstring\r\n    formatted_annotation = format_annotation(annotation)\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx_autodoc_typehints.py\", line 106, in format_annotation\r\n    extra = '\\\\[{}]'.format(', '.join(format_annotation(param) for param in params))\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx_autodoc_typehints.py\", line 106, in <genexpr>\r\n    extra = '\\\\[{}]'.format(', '.join(format_annotation(param) for param in params))\r\n  File \"/usr/local/lib/python3.6/site-packages/sphinx_autodoc_typehints.py\", line 122, in format_annotation\r\n    extra = '\\\\[{}]'.format(', '.join(format_annotation(param) for param in params))\r\nTypeError: 'NoneType' object is not iterable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/65", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/65/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/65/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/65", "id": 388782613, "node_id": "MDU6SXNzdWUzODg3ODI2MTM=", "number": 65, "title": "Option to leave type aliases as is", "user": {"login": "in-tension", "id": 20464764, "node_id": "MDQ6VXNlcjIwNDY0NzY0", "avatar_url": "https://avatars2.githubusercontent.com/u/20464764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/in-tension", "html_url": "https://github.com/in-tension", "followers_url": "https://api.github.com/users/in-tension/followers", "following_url": "https://api.github.com/users/in-tension/following{/other_user}", "gists_url": "https://api.github.com/users/in-tension/gists{/gist_id}", "starred_url": "https://api.github.com/users/in-tension/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/in-tension/subscriptions", "organizations_url": "https://api.github.com/users/in-tension/orgs", "repos_url": "https://api.github.com/users/in-tension/repos", "events_url": "https://api.github.com/users/in-tension/events{/privacy}", "received_events_url": "https://api.github.com/users/in-tension/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263312001, "node_id": "MDU6TGFiZWwyNjMzMTIwMDE=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-07T19:23:56Z", "updated_at": "2018-12-10T15:15:15Z", "closed_at": "2018-12-10T15:15:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know whether this is doable, but I was wondering whether it would be possible to add an option to leave type aliases as is instead, of replacing them with the full definition.\r\n\r\nfor example\r\n```\r\nSomeTypeAlias = List[Union[str,int]]\r\ndef someFunc(someVar: SomeTypeAlias) : \r\n   \"\"\"\r\n        :param someVar:\r\n   \"\"\"\r\n```\r\n\r\nproduces something like this:\r\n\r\n**someFunc** (someVar)\r\n    *Parameters:* **someVar** (List[Union[str,int]])\r\n.\r\n.\r\n\r\nbut I would like it to produce something like:\r\n\r\n**someFunc** (someVar)\r\n    *Parameters:* **someVar** (SomeTypeAlias)\r\n\r\noptimally with a link for `SomeTypeAlias` to the definition\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/59", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/59/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/59/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/59", "id": 381162097, "node_id": "MDU6SXNzdWUzODExNjIwOTc=", "number": 59, "title": "Version 1.5.0 breaks with Sphinx<1.8", "user": {"login": "michelole", "id": 1688126, "node_id": "MDQ6VXNlcjE2ODgxMjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1688126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michelole", "html_url": "https://github.com/michelole", "followers_url": "https://api.github.com/users/michelole/followers", "following_url": "https://api.github.com/users/michelole/following{/other_user}", "gists_url": "https://api.github.com/users/michelole/gists{/gist_id}", "starred_url": "https://api.github.com/users/michelole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michelole/subscriptions", "organizations_url": "https://api.github.com/users/michelole/orgs", "repos_url": "https://api.github.com/users/michelole/repos", "events_url": "https://api.github.com/users/michelole/events{/privacy}", "received_events_url": "https://api.github.com/users/michelole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-15T13:31:48Z", "updated_at": "2018-11-21T08:11:22Z", "closed_at": "2018-11-20T21:12:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "The event `config-inited` was added on Sphinx 1.8 (https://www.sphinx-doc.org/en/master/extdev/appapi.html#event-config-inited) and it's used by [sphinx_autodoc_typehints.py](https://github.com/agronholm/sphinx-autodoc-typehints/blob/master/sphinx_autodoc_typehints.py#L228).\r\n\r\nHowever, sphinx_autodoc_typehints requires only [Sphinx>=1.7](https://github.com/agronholm/sphinx-autodoc-typehints/blob/master/setup.cfg#L29).\r\n\r\nTherefore, sphinx-autodoc-typehints 1.5.0 breaks with Sphinx<1.8, which is forced by e.g. `readthedocs.org`.\r\n\r\nShould we bump the required Sphinx version or avoid the `config-inited` event?\r\n\r\nSee also https://github.com/agronholm/sphinx-autodoc-typehints/commit/2afccd39f9e559f4cbd593461080cdfede7c2d50#r31313681 for my inline comment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/58", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/58/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/58/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/58", "id": 380805450, "node_id": "MDU6SXNzdWUzODA4MDU0NTA=", "number": 58, "title": "Allow user to specify whether TYPE_CHECKING should be true or not", "user": {"login": "lbenezriravin", "id": 25595051, "node_id": "MDQ6VXNlcjI1NTk1MDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/25595051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbenezriravin", "html_url": "https://github.com/lbenezriravin", "followers_url": "https://api.github.com/users/lbenezriravin/followers", "following_url": "https://api.github.com/users/lbenezriravin/following{/other_user}", "gists_url": "https://api.github.com/users/lbenezriravin/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbenezriravin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbenezriravin/subscriptions", "organizations_url": "https://api.github.com/users/lbenezriravin/orgs", "repos_url": "https://api.github.com/users/lbenezriravin/repos", "events_url": "https://api.github.com/users/lbenezriravin/events{/privacy}", "received_events_url": "https://api.github.com/users/lbenezriravin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311997, "node_id": "MDU6TGFiZWwyNjMzMTE5OTc=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-14T17:23:54Z", "updated_at": "2018-11-14T19:01:14Z", "closed_at": "2018-11-14T18:43:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "A recent commit 86d0834 sets `TYPE_CHECKING` to True unconditionally, which breaks a workaround I had been using for a bug in `typing`. Essentially, it works like this:\r\n\r\n```\r\nif TYPE_CHECKING:\r\n    class MyType:\r\n        \"\"\"This is the actual class I need, but it falls over at runtime due to a bug\"\"\"\r\n        ...\r\nelse:\r\n    class MyType:\r\n        \"\"\"This is a dummy class\"\"\"\r\n        ...\r\n```\r\n\r\nYou can see the full thread here: https://github.com/python/typing/issues/561#issuecomment-398616670\r\n\r\nPlease make this variable user-configurable; I can't build my docs with this change. Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/56", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/56/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/56/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/56", "id": 378001817, "node_id": "MDU6SXNzdWUzNzgwMDE4MTc=", "number": 56, "title": "types not associated with parameters which have trailing underscores", "user": {"login": "danielknell", "id": 229004, "node_id": "MDQ6VXNlcjIyOTAwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/229004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielknell", "html_url": "https://github.com/danielknell", "followers_url": "https://api.github.com/users/danielknell/followers", "following_url": "https://api.github.com/users/danielknell/following{/other_user}", "gists_url": "https://api.github.com/users/danielknell/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielknell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielknell/subscriptions", "organizations_url": "https://api.github.com/users/danielknell/orgs", "repos_url": "https://api.github.com/users/danielknell/repos", "events_url": "https://api.github.com/users/danielknell/events{/privacy}", "received_events_url": "https://api.github.com/users/danielknell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-06T19:36:07Z", "updated_at": "2018-11-10T10:07:02Z", "closed_at": "2018-11-10T10:07:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "parameters that have a trailing underscore need to be escaped in sphinx (see this issue: https://github.com/sphinx-doc/sphinx/issues/519)\r\n\r\nso the documentation needs to work as follows:\r\n\r\n```python\r\ndef factory(type_: type):\r\n    \"\"\"\r\n    :param type\\\\_: a type\r\n    :type type\\\\_: type\r\n    \"\"\"\r\n```\r\n\r\nwhen using this extension the aforementioned bug would appear to change this example:\r\n\r\n```python\r\ndef factory(type_: type):\r\n    \"\"\"\r\n    :param type\\\\_: a type\r\n    \"\"\"\r\n```\r\n\r\ninto something equivalent to the following:\r\n\r\n```python\r\ndef factory(type_: type):\r\n    \"\"\"\r\n    :param type\\\\_: a type\r\n    :type type_: type\r\n    \"\"\"\r\n```\r\n\r\nand as a result the type is not associated with the parameter and rendered in the output.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/54", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/54/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/54/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/54", "id": 365970315, "node_id": "MDU6SXNzdWUzNjU5NzAzMTU=", "number": 54, "title": "formatargspec has been deprecated", "user": {"login": "pleonex", "id": 3107481, "node_id": "MDQ6VXNlcjMxMDc0ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3107481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pleonex", "html_url": "https://github.com/pleonex", "followers_url": "https://api.github.com/users/pleonex/followers", "following_url": "https://api.github.com/users/pleonex/following{/other_user}", "gists_url": "https://api.github.com/users/pleonex/gists{/gist_id}", "starred_url": "https://api.github.com/users/pleonex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pleonex/subscriptions", "organizations_url": "https://api.github.com/users/pleonex/orgs", "repos_url": "https://api.github.com/users/pleonex/repos", "events_url": "https://api.github.com/users/pleonex/events{/privacy}", "received_events_url": "https://api.github.com/users/pleonex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-02T16:05:08Z", "updated_at": "2018-10-09T06:52:24Z", "closed_at": "2018-10-09T06:52:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After updating to Sphinx 1.8 I see many times the following warning:\r\n```\r\n.env/lib64/python3.6/site-packages/sphinx/ext/autodoc/inspector.py:117: RemovedInSphinx20Warning: formatargspec() is now deprecated.  Please use sphinx.util.inspect.Signature instead.\r\n```\r\n\r\nThis extension uses the function `formatargspec` in `process_signature`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/51", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/51/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/51/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/51", "id": 354621607, "node_id": "MDU6SXNzdWUzNTQ2MjE2MDc=", "number": 51, "title": "formatargspec is deprecated", "user": {"login": "frankier", "id": 299380, "node_id": "MDQ6VXNlcjI5OTM4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/299380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankier", "html_url": "https://github.com/frankier", "followers_url": "https://api.github.com/users/frankier/followers", "following_url": "https://api.github.com/users/frankier/following{/other_user}", "gists_url": "https://api.github.com/users/frankier/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankier/subscriptions", "organizations_url": "https://api.github.com/users/frankier/orgs", "repos_url": "https://api.github.com/users/frankier/repos", "events_url": "https://api.github.com/users/frankier/events{/privacy}", "received_events_url": "https://api.github.com/users/frankier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-28T08:20:45Z", "updated_at": "2018-11-10T10:10:05Z", "closed_at": "2018-11-10T10:10:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's called here https://github.com/agronholm/sphinx-autodoc-typehints/blob/38ff0554bcf2d30b1886002be24deff59d665072/sphinx_autodoc_typehints.py#L163\r\n\r\nThe warning happens in Sphinx 2.x. It looks like this:\r\n\r\n    .../lib/python3.6/site-packages/sphinx/ext/autodoc/inspector.py:117: RemovedInSphinx20Warning: formatargspec() is now deprecated.  Please use sphinx.util.inspect.Signature instead.\r\n      RemovedInSphinx20Warning)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/49", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/49/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/49/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/49", "id": 347701734, "node_id": "MDU6SXNzdWUzNDc3MDE3MzQ=", "number": 49, "title": "Render the Union type with \"or\"", "user": {"login": "MathieuSchopfer", "id": 17726101, "node_id": "MDQ6VXNlcjE3NzI2MTAx", "avatar_url": "https://avatars0.githubusercontent.com/u/17726101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MathieuSchopfer", "html_url": "https://github.com/MathieuSchopfer", "followers_url": "https://api.github.com/users/MathieuSchopfer/followers", "following_url": "https://api.github.com/users/MathieuSchopfer/following{/other_user}", "gists_url": "https://api.github.com/users/MathieuSchopfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MathieuSchopfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MathieuSchopfer/subscriptions", "organizations_url": "https://api.github.com/users/MathieuSchopfer/orgs", "repos_url": "https://api.github.com/users/MathieuSchopfer/repos", "events_url": "https://api.github.com/users/MathieuSchopfer/events{/privacy}", "received_events_url": "https://api.github.com/users/MathieuSchopfer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263312000, "node_id": "MDU6TGFiZWwyNjMzMTIwMDA=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-05T14:14:08Z", "updated_at": "2019-07-08T09:44:44Z", "closed_at": "2018-08-06T08:30:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a `Union` of types, e.g. `def my_func(arg: Union[float, int])`, the rendering is\r\n> **arg** (Union[float, int])\r\n\r\nWould it make sense to render this in plain English? e.g.\r\n> **arg** (float or int)\r\n\r\nnb: thanks for this great extension", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/47", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/47/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/47/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/47", "id": 334033141, "node_id": "MDU6SXNzdWUzMzQwMzMxNDE=", "number": 47, "title": "Pandas and Requests classes not linked", "user": {"login": "akaihola", "id": 13725, "node_id": "MDQ6VXNlcjEzNzI1", "avatar_url": "https://avatars3.githubusercontent.com/u/13725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akaihola", "html_url": "https://github.com/akaihola", "followers_url": "https://api.github.com/users/akaihola/followers", "following_url": "https://api.github.com/users/akaihola/following{/other_user}", "gists_url": "https://api.github.com/users/akaihola/gists{/gist_id}", "starred_url": "https://api.github.com/users/akaihola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akaihola/subscriptions", "organizations_url": "https://api.github.com/users/akaihola/orgs", "repos_url": "https://api.github.com/users/akaihola/repos", "events_url": "https://api.github.com/users/akaihola/events{/privacy}", "received_events_url": "https://api.github.com/users/akaihola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-20T11:20:42Z", "updated_at": "2020-08-12T22:45:42Z", "closed_at": "2018-07-02T18:35:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have intersphinx configured properly so that the following markup all link correctly to the relevant documentation:\r\n```rst\r\n:class:`pandas.DataFrame`\r\n:class:`requests.Request`\r\n:class:`our_in_house_package:OurClass`\r\n```\r\n\r\nHowever, all of these type hints fail to render as links to Pandas documentation, even though the type annotation rendering using `sphinx_autodoc_typehints` looks otherwise just fine:\r\n```python\r\nimport pandas as pd\r\nimport pandas\r\n\r\ndef test1() -> pd.DataFrame:\r\n    ...\r\n\r\ndef test2() -> pandas.DataFrame:\r\n    ...\r\n\r\ndef test3() -> pd.core.frame.DataFrame:\r\n    ...\r\n\r\ndef test4() -> pandas.core.frame.DataFrame:\r\n    ...\r\n```\r\nThe same goes for classes inside the Requests package.\r\n\r\nThis is from our `conf.py`:\r\n```python\r\nintersphinx_mapping = {\r\n    'pandas': ('http://pandas.pydata.org/pandas-docs/stable/', None),\r\n    'our_in_house_package': ('http://our_host/path/', None),\r\n    'requests': ('http://docs.python-requests.org/en/master/', None)}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/41", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/41/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/41/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/41", "id": 319349957, "node_id": "MDU6SXNzdWUzMTkzNDk5NTc=", "number": 41, "title": "Types created with NewType are rendered poorly.", "user": {"login": "bovlb", "id": 31326650, "node_id": "MDQ6VXNlcjMxMzI2NjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/31326650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bovlb", "html_url": "https://github.com/bovlb", "followers_url": "https://api.github.com/users/bovlb/followers", "following_url": "https://api.github.com/users/bovlb/following{/other_user}", "gists_url": "https://api.github.com/users/bovlb/gists{/gist_id}", "starred_url": "https://api.github.com/users/bovlb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bovlb/subscriptions", "organizations_url": "https://api.github.com/users/bovlb/orgs", "repos_url": "https://api.github.com/users/bovlb/repos", "events_url": "https://api.github.com/users/bovlb/events{/privacy}", "received_events_url": "https://api.github.com/users/bovlb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-01T22:31:06Z", "updated_at": "2018-12-23T12:08:27Z", "closed_at": "2018-12-23T12:08:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have code like:\r\n```\r\n    Foo = typing.NewType('Foo', str)\r\n    def bar(x: Foo):\r\n        pass\r\n```\r\nthen its parameter gets documented as:\r\n```\r\n    x (<function NewType.<locals>.new_type at 0x7f644b4c6488>)\r\n```\r\nI was expecting something like one of the following:\r\n```\r\n    x (Foo)\r\n    x (Foo alias for str)\r\n    x (str)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/40", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/40/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/40/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/40", "id": 318412889, "node_id": "MDU6SXNzdWUzMTg0MTI4ODk=", "number": 40, "title": "Incorrect handling of escape characters in default parameter values", "user": {"login": "nekedome", "id": 37994317, "node_id": "MDQ6VXNlcjM3OTk0MzE3", "avatar_url": "https://avatars0.githubusercontent.com/u/37994317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nekedome", "html_url": "https://github.com/nekedome", "followers_url": "https://api.github.com/users/nekedome/followers", "following_url": "https://api.github.com/users/nekedome/following{/other_user}", "gists_url": "https://api.github.com/users/nekedome/gists{/gist_id}", "starred_url": "https://api.github.com/users/nekedome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nekedome/subscriptions", "organizations_url": "https://api.github.com/users/nekedome/orgs", "repos_url": "https://api.github.com/users/nekedome/repos", "events_url": "https://api.github.com/users/nekedome/events{/privacy}", "received_events_url": "https://api.github.com/users/nekedome/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-27T13:37:47Z", "updated_at": "2018-11-14T19:17:08Z", "closed_at": "2018-11-14T19:17:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sphinx will correctly render the default value of function parameters including escape characters, however, when combined with annotations (and ``sphinx-autodoc-typehints``) the backslash is stripped out leaving an incorrect default value.\r\n\r\nSee below for an example output:\r\n![untitled](https://user-images.githubusercontent.com/37994317/39364987-303c2ee0-4a73-11e8-8be9-8c286d63d85e.png)\r\n\r\nProduced by the following Python:\r\n```\r\ndef bar(a: str = 'a', b: str = '\\b', n: str = '\\n'):\r\n    \"\"\"\r\n\r\n    :param a:\r\n    :param b:\r\n    :param n:\r\n    :return:\r\n    \"\"\"\r\n    pass\r\n\r\n\r\ndef foo(a='a', b='\\b', n='\\n'):\r\n    \"\"\"\r\n\r\n    :param a:\r\n    :param b:\r\n    :param n:\r\n    :return:\r\n    \"\"\"\r\n    pass\r\n```\r\n\r\nI believe this is a bug, as the produced Sphinx documentation does not match the underlying code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/34", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/34/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/34/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/34", "id": 295840664, "node_id": "MDU6SXNzdWUyOTU4NDA2NjQ=", "number": 34, "title": " sphinx_autodoc_typehints.py:130 calls getattr() with dot in the attribute name", "user": {"login": "dilyanpalauzov", "id": 4992947, "node_id": "MDQ6VXNlcjQ5OTI5NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4992947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dilyanpalauzov", "html_url": "https://github.com/dilyanpalauzov", "followers_url": "https://api.github.com/users/dilyanpalauzov/followers", "following_url": "https://api.github.com/users/dilyanpalauzov/following{/other_user}", "gists_url": "https://api.github.com/users/dilyanpalauzov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dilyanpalauzov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dilyanpalauzov/subscriptions", "organizations_url": "https://api.github.com/users/dilyanpalauzov/orgs", "repos_url": "https://api.github.com/users/dilyanpalauzov/repos", "events_url": "https://api.github.com/users/dilyanpalauzov/events{/privacy}", "received_events_url": "https://api.github.com/users/dilyanpalauzov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-09T11:32:15Z", "updated_at": "2018-03-19T15:48:30Z", "closed_at": "2018-03-16T16:38:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Doing `make html` with the attached file tries to call in `sphinx_autodoc_typehints.py:130 getattr(x, 'A.B')` and fails.  The complete output is:\r\n```\r\nRunning Sphinx v1.6.7\r\nmaking output directory...\r\nloading pickled environment... not yet created\r\nbuilding [mo]: targets for 0 po files that are out of date\r\nbuilding [html]: targets for 1 source files that are out of date\r\nupdating environment: 1 added, 0 changed, 0 removed\r\nreading sources... [100%] index                                                                                 \r\nException occurred:\r\n  File \"${myvirtualenv}/lib/python3.5/site-packages/sphinx_autodoc_typehints.py\", line 130, in process_signature\r\n    cls = getattr(module, clsname)\r\nAttributeError: module 'x' has no attribute 'A.B'\r\nThe full traceback has been saved in /tmp/sphinx-err-cj_mf0mc.log, if you want to report the issue to the developers.\r\nPlease also report this if it was a user error, so that a better error message can be provided next time.\r\nA bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!\r\nMakefile:20: recipe for target 'html' failed\r\nmake: *** [html] Error 1\r\n```\r\n[utr.zip](https://github.com/agronholm/sphinx-autodoc-typehints/files/1710772/utr.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/33", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/33/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/33/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/33", "id": 294041132, "node_id": "MDU6SXNzdWUyOTQwNDExMzI=", "number": 33, "title": "Does not work on 3.7.0b1", "user": {"login": "Fuyukai", "id": 8783751, "node_id": "MDQ6VXNlcjg3ODM3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8783751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fuyukai", "html_url": "https://github.com/Fuyukai", "followers_url": "https://api.github.com/users/Fuyukai/followers", "following_url": "https://api.github.com/users/Fuyukai/following{/other_user}", "gists_url": "https://api.github.com/users/Fuyukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fuyukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fuyukai/subscriptions", "organizations_url": "https://api.github.com/users/Fuyukai/orgs", "repos_url": "https://api.github.com/users/Fuyukai/repos", "events_url": "https://api.github.com/users/Fuyukai/events{/privacy}", "received_events_url": "https://api.github.com/users/Fuyukai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-02T22:19:35Z", "updated_at": "2018-03-18T15:54:17Z", "closed_at": "2018-03-18T15:54:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nConfiguration error:\r\nThere is a programable error in your configuration file:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/laura/.local/share/virtualenvs/curious-yiBjxk2Q/lib/python3.7/site-packages/sphinx/config.py\", line 161, in __init__\r\n    execfile_(filename, config)\r\n  File \"/home/laura/.local/share/virtualenvs/curious-yiBjxk2Q/lib/python3.7/site-packages/sphinx/util/pycompat.py\", line 150, in execfile_\r\n    exec_(code, _globals)\r\n  File \"conf.py\", line 55, in <module>\r\n    import sphinx_autodoc_typehints\r\n  File \"/home/laura/.local/share/virtualenvs/curious-yiBjxk2Q/lib/python3.7/site-packages/sphinx_autodoc_typehints.py\", line 2, in <module>\r\n    from typing import get_type_hints, TypeVar, Any, AnyStr, GenericMeta\r\nImportError: cannot import name 'GenericMeta' from 'typing' (/usr/lib64/python3.7/typing.py)\r\n\r\nmake: *** [Makefile:20: html] Error 2\r\n```\r\n\r\nNo mention of GenericMeta being removed in the 3.7 changelog.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/28", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/28/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/28/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/28", "id": 288447287, "node_id": "MDU6SXNzdWUyODg0NDcyODc=", "number": 28, "title": "Release 1.2.4", "user": {"login": "josiah-wolf-oberholtzer", "id": 5505674, "node_id": "MDQ6VXNlcjU1MDU2NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5505674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josiah-wolf-oberholtzer", "html_url": "https://github.com/josiah-wolf-oberholtzer", "followers_url": "https://api.github.com/users/josiah-wolf-oberholtzer/followers", "following_url": "https://api.github.com/users/josiah-wolf-oberholtzer/following{/other_user}", "gists_url": "https://api.github.com/users/josiah-wolf-oberholtzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/josiah-wolf-oberholtzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josiah-wolf-oberholtzer/subscriptions", "organizations_url": "https://api.github.com/users/josiah-wolf-oberholtzer/orgs", "repos_url": "https://api.github.com/users/josiah-wolf-oberholtzer/repos", "events_url": "https://api.github.com/users/josiah-wolf-oberholtzer/events{/privacy}", "received_events_url": "https://api.github.com/users/josiah-wolf-oberholtzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-01-14T22:58:31Z", "updated_at": "2018-01-17T08:15:43Z", "closed_at": "2018-01-16T23:16:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would it be possible to publish a 1.2.4 release to PyPI including the changes from #25?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/26", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/26/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/26/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/26", "id": 285863628, "node_id": "MDU6SXNzdWUyODU4NjM2Mjg=", "number": 26, "title": "Annotations are not hidden from class __init__ signatures", "user": {"login": "auscompgeek", "id": 128854, "node_id": "MDQ6VXNlcjEyODg1NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/128854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auscompgeek", "html_url": "https://github.com/auscompgeek", "followers_url": "https://api.github.com/users/auscompgeek/followers", "following_url": "https://api.github.com/users/auscompgeek/following{/other_user}", "gists_url": "https://api.github.com/users/auscompgeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/auscompgeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auscompgeek/subscriptions", "organizations_url": "https://api.github.com/users/auscompgeek/orgs", "repos_url": "https://api.github.com/users/auscompgeek/repos", "events_url": "https://api.github.com/users/auscompgeek/events{/privacy}", "received_events_url": "https://api.github.com/users/auscompgeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-04T02:15:51Z", "updated_at": "2018-01-13T13:31:08Z", "closed_at": "2018-01-13T13:31:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/24", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/24/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/24/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/24", "id": 281282172, "node_id": "MDU6SXNzdWUyODEyODIxNzI=", "number": 24, "title": ":rtype: may end up joined to previous paragraph", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-12T07:22:14Z", "updated_at": "2018-02-12T07:09:32Z", "closed_at": "2018-02-12T07:09:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If the last line of the incoming `lines` is part of an ordinary paragraph of text, then Sphinx treats the added `:rtype:` line as part of that paragraph and prints it as part of the text, instead of interpreting it. I've run into this when using `sphinx.ext.napoleon` (before `sphinx_autodoc_typehints`), with a `@property`. I don't know why Napoleon would be messing with property docstrings in this way, but it seems like it's potentially a wider problem (unless Sphinx makes any sort of guarantee about a trailing empty line).\r\n\r\nI suggest that when `:rtype:` is appended (rather than inserted after a `:return:`), an empty line is added first. If you agree, I'm happy to write a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/23", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/23/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/23/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/23", "id": 273905466, "node_id": "MDU6SXNzdWUyNzM5MDU0NjY=", "number": 23, "title": "static and class methods in a custom exception lose their first argument", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-14T19:00:55Z", "updated_at": "2018-01-13T14:16:18Z", "closed_at": "2018-01-13T14:16:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have something like this:\r\n\r\n```python\r\nclass MyException(Exception):\r\n    @classmethod\r\n    def from_name_and_number(cls,\r\n                             name: str,\r\n                             number: int):\r\n        \"\"\"\r\n        Args:\r\n            name: name\r\n            number: number\r\n        \"\"\"\r\n        return cls(f'{name}: {number}')\r\n\r\n    @staticmethod\r\n    def is_same(name: str,\r\n                number: int) -> bool:\r\n        \"\"\"\r\n        Args:\r\n            name: name\r\n            number: number\r\n        \"\"\"\r\n        return str(number) == name\r\n```\r\n\r\nWhen I generate the documentation I get the following:\r\n```\r\nclassmethod from_name_and_number(number)\r\n    Parameters: * name(str) - name\r\n                * number(int) - number\r\n\r\nstatic is_same(number)\r\n    Parameters: * name(str) - name\r\n                * number(int) - number\r\n\r\n    Return type: bool\r\n```\r\n\r\nNotice that both the functions look like they only take in a `number` argument. I think this is specific to `Excpetions` as I don't think I see the same issues for other methods.\r\n\r\nFor reference, if I run without this extension I get something like the following:\r\n```\r\nclassmethod from_name_and_number(name: str, number: int)\r\n    Parameters: * name - name\r\n                * number - number\r\n\r\nstatic is_same(name: str, number: int) \u2192 bool\r\n    Parameters: * name - name\r\n                * number - number\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/20", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/20/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/20/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/20", "id": 252449483, "node_id": "MDU6SXNzdWUyNTI0NDk0ODM=", "number": 20, "title": "process_signature silently drops any docstring-specified signature", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-08-23T23:57:11Z", "updated_at": "2017-08-26T20:17:25Z", "closed_at": "2017-08-26T19:56:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "`process_signature` gets the argspec from the object itself, so any docstring-specified signature (http://www.sphinx-doc.org/en/stable/ext/autodoc.html#confval-autodoc_docstring_signature) gets silently dropped.\r\n\r\nSee e.g. http://defopt.readthedocs.io/en/stable/api.html#defopt.run vs https://github.com/evanunderscore/defopt/blob/a03769b931460ce9234c02351f4ee7fe9d055fee/defopt.py#L68 (defopt.run should be listed in the docs with the signature `run(funcs, *, parsers=None, short=None, show_types=False, argv=None)`).\r\n\r\nGiven that you can't necessarily afford to eval the annotations that may exist in a docstring-specified signature (and you actually want their string representations anyways), I guess a correct approach when such a signature is present (although a bit a pain to implement?) would be to parse the signature into an AST, fetch out the parts of the AST corresponding to the annotations, map them back to the string using the AST col_offset, and remove them thusly (and move them to the docstring).  Or perhaps there's some smarter approach...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/18", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/18/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/18/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/18", "id": 246326825, "node_id": "MDU6SXNzdWUyNDYzMjY4MjU=", "number": 18, "title": "ValueError: no signature found for builtin <method 'mro' of 'type' objects>", "user": {"login": "Fuyukai", "id": 8783751, "node_id": "MDQ6VXNlcjg3ODM3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8783751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fuyukai", "html_url": "https://github.com/Fuyukai", "followers_url": "https://api.github.com/users/Fuyukai/followers", "following_url": "https://api.github.com/users/Fuyukai/following{/other_user}", "gists_url": "https://api.github.com/users/Fuyukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fuyukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fuyukai/subscriptions", "organizations_url": "https://api.github.com/users/Fuyukai/orgs", "repos_url": "https://api.github.com/users/Fuyukai/repos", "events_url": "https://api.github.com/users/Fuyukai/events{/privacy}", "received_events_url": "https://api.github.com/users/Fuyukai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-07-28T11:56:20Z", "updated_at": "2017-07-31T22:47:26Z", "closed_at": "2017-07-31T19:47:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n\u00bb\u00bb\u00bb\u00bb python -V\r\nPython 3.6.1\r\n\u00bb\u00bb\u00bb\u00bb cat /tmp/sphinx-err-0dalwnxn.log\r\n# Sphinx version: 1.6.3\r\n# Python version: 3.6.1 (CPython)\r\n# Docutils version: 0.13.1 release\r\n# Jinja2 version: 2.9.6\r\n# Last messages:\r\n#   building [html]: targets for 4 source files that are out of date\r\n#   \r\n#   updating environment:\r\n#   \r\n#   4 added, 0 changed, 0 removed\r\n#   \r\n#   reading sources... [ 25%] hilvl/connecting\r\n#   \r\n#   reading sources... [ 50%] hilvl/tables\r\n#   \r\n# Loaded extensions:\r\n#   alabaster (0.7.10) from /home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/alabaster/__init__.py\r\n#   sphinx.ext.autodoc (1.6.3) from /home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/autodoc.py\r\n#   sphinx.ext.doctest (1.6.3) from /home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/doctest.py\r\n#   sphinx.ext.intersphinx (1.6.3) from /home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/intersphinx.py\r\n#   sphinx.ext.coverage (1.6.3) from /home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/coverage.py\r\n#   sphinx.ext.ifconfig (1.6.3) from /home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/ifconfig.py\r\n#   sphinx.ext.viewcode (1.6.3) from /home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/viewcode.py\r\n#   sphinxcontrib.asyncio (1.0) from /home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinxcontrib/asyncio.py\r\n#   sphinx_autodoc_typehints (unknown version) from /home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx_autodoc_typehints.py\r\nTraceback (most recent call last):\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/cmdline.py\", line 306, in main\r\n    app.build(opts.force_all, filenames)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/application.py\", line 339, in build\r\n    self.builder.build_update()\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/builders/__init__.py\", line 331, in build_update\r\n    'out of date' % len(to_build))\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/builders/__init__.py\", line 344, in build\r\n    updated_docnames = set(self.env.update(self.config, self.srcdir, self.doctreedir))\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/environment/__init__.py\", line 583, in update\r\n    self._read_serial(docnames, self.app)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/environment/__init__.py\", line 602, in _read_serial\r\n    self.read_doc(docname, app)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/environment/__init__.py\", line 723, in read_doc\r\n    pub.publish()\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/core.py\", line 217, in publish\r\n    self.settings)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/io.py\", line 74, in read\r\n    self.parse()\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/readers/__init__.py\", line 78, in parse\r\n    self.parser.parse(self.input, document)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/__init__.py\", line 185, in parse\r\n    self.statemachine.run(inputlines, document, inliner=self.inliner)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 170, in run\r\n    input_source=document['source'])\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 2745, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 326, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 394, in new_subsection\r\n    node=section_node, match_titles=True)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 281, in nested_parse\r\n    node=node, match_titles=match_titles)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 195, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 2745, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 326, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 394, in new_subsection\r\n    node=section_node, match_titles=True)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 281, in nested_parse\r\n    node=node, match_titles=match_titles)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 195, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 2318, in explicit_markup\r\n    nodelist, blank_finish = self.explicit_construct(match)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 2330, in explicit_construct\r\n    return method(self, expmatch)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 2073, in directive\r\n    directive_class, match, type_name, option_presets)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/docutils/parsers/rst/states.py\", line 2122, in run_directive\r\n    result = directive_instance.run()\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/autodoc.py\", line 1827, in run\r\n    documenter.generate(more_content=self.content)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/autodoc.py\", line 1127, in generate\r\n    self.document_members(all_members)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/autodoc.py\", line 1524, in document_members\r\n    ModuleLevelDocumenter.document_members(self, all_members)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/autodoc.py\", line 1048, in document_members\r\n    check_module=members_check_module and not isattr)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/autodoc.py\", line 1114, in generate\r\n    sig = self.format_signature()\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/autodoc.py\", line 1320, in format_signature\r\n    return Documenter.format_signature(self)  # type: ignore\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/ext/autodoc.py\", line 758, in format_signature\r\n    self.object, self.options, args, retann)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/application.py\", line 493, in emit_firstresult\r\n    return self.events.emit_firstresult(event, self, *args)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/events.py\", line 84, in emit_firstresult\r\n    for result in self.emit(name, *args):\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/events.py\", line 79, in emit\r\n    results.append(callback(*args))\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx_autodoc_typehints.py\", line 118, in process_signature\r\n    argspec = getargspec(obj)\r\n  File \"/home/laura/.local/share/virtualenvs/katagawa/lib/python3.6/site-packages/sphinx/util/inspect.py\", line 52, in getargspec\r\n    sig = inspect.signature(func)\r\n  File \"/usr/lib64/python3.6/inspect.py\", line 3001, in signature\r\n    return Signature.from_callable(obj, follow_wrapped=follow_wrapped)\r\n  File \"/usr/lib64/python3.6/inspect.py\", line 2751, in from_callable\r\n    follow_wrapper_chains=follow_wrapped)\r\n  File \"/usr/lib64/python3.6/inspect.py\", line 2230, in _signature_from_callable\r\n    skip_bound_arg=skip_bound_arg)\r\n  File \"/usr/lib64/python3.6/inspect.py\", line 2060, in _signature_from_builtin\r\n    raise ValueError(\"no signature found for builtin {!r}\".format(func))\r\nValueError: no signature found for builtin <method 'mro' of 'type' objects>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/15", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/15/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/15/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/15", "id": 217941243, "node_id": "MDU6SXNzdWUyMTc5NDEyNDM=", "number": 15, "title": "Compatibility with Sphinx.ext.napoleon ", "user": {"login": "tommyip", "id": 18504232, "node_id": "MDQ6VXNlcjE4NTA0MjMy", "avatar_url": "https://avatars3.githubusercontent.com/u/18504232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyip", "html_url": "https://github.com/tommyip", "followers_url": "https://api.github.com/users/tommyip/followers", "following_url": "https://api.github.com/users/tommyip/following{/other_user}", "gists_url": "https://api.github.com/users/tommyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyip/subscriptions", "organizations_url": "https://api.github.com/users/tommyip/orgs", "repos_url": "https://api.github.com/users/tommyip/repos", "events_url": "https://api.github.com/users/tommyip/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-03-29T16:56:38Z", "updated_at": "2018-07-09T16:33:28Z", "closed_at": "2017-05-14T19:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Napoleon is a Sphinx extension which allow the use of Google / Numpy style docstrings. Currently, it doesn't work well with this extension, it can only strip the type hint from function definition and add the return type.\r\nIs it possible to make it inject the type hint to the argument list in the docs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/14", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/14/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/14/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/14", "id": 202320571, "node_id": "MDU6SXNzdWUyMDIzMjA1NzE=", "number": 14, "title": "Python type hint: NameError: name '...' is not defined", "user": {"login": "kingspp", "id": 6322488, "node_id": "MDQ6VXNlcjYzMjI0ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6322488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kingspp", "html_url": "https://github.com/kingspp", "followers_url": "https://api.github.com/users/kingspp/followers", "following_url": "https://api.github.com/users/kingspp/following{/other_user}", "gists_url": "https://api.github.com/users/kingspp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kingspp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kingspp/subscriptions", "organizations_url": "https://api.github.com/users/kingspp/orgs", "repos_url": "https://api.github.com/users/kingspp/repos", "events_url": "https://api.github.com/users/kingspp/events{/privacy}", "received_events_url": "https://api.github.com/users/kingspp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-01-21T15:07:44Z", "updated_at": "2018-07-11T14:47:24Z", "closed_at": "2017-01-28T23:27:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Usecase:**\r\n```python\r\nclass Foo(object):\r\n    def __init__(self):\r\n        pass\r\n    \r\n    def get_foo(self, name:str) -> 'Foo' :\r\n        return self\r\n```\r\n\r\nThe above is a simple example of the issue I am facing. Python type hints supports ' ' to be used when the class is not defined and will be defined at a later stage. Sphinx documentation using your extension fails because Foo is not defined. \r\n\r\n**Note:**  I have also tried adding a `__main__` method, thinking it might stop auto-execution, but I ended up having the same error. \r\n\r\n [Stacktrace](http://pastebin.com/x0Ja4Wbx)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/13", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/13/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/13/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/13", "id": 201257775, "node_id": "MDU6SXNzdWUyMDEyNTc3NzU=", "number": 13, "title": "type hint comment support", "user": {"login": "gaborbernat", "id": 690238, "node_id": "MDQ6VXNlcjY5MDIzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/690238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborbernat", "html_url": "https://github.com/gaborbernat", "followers_url": "https://api.github.com/users/gaborbernat/followers", "following_url": "https://api.github.com/users/gaborbernat/following{/other_user}", "gists_url": "https://api.github.com/users/gaborbernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborbernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborbernat/subscriptions", "organizations_url": "https://api.github.com/users/gaborbernat/orgs", "repos_url": "https://api.github.com/users/gaborbernat/repos", "events_url": "https://api.github.com/users/gaborbernat/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborbernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2017-01-17T11:54:18Z", "updated_at": "2019-07-07T13:01:25Z", "closed_at": "2019-07-07T13:01:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "this would allow using it under Python 2.7 :+1: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/12", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/12/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/12/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/12", "id": 198264655, "node_id": "MDU6SXNzdWUxOTgyNjQ2NTU=", "number": 12, "title": "Apparent incompatibility with slot wrappers", "user": {"login": "gdude2002", "id": 204153, "node_id": "MDQ6VXNlcjIwNDE1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/204153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdude2002", "html_url": "https://github.com/gdude2002", "followers_url": "https://api.github.com/users/gdude2002/followers", "following_url": "https://api.github.com/users/gdude2002/following{/other_user}", "gists_url": "https://api.github.com/users/gdude2002/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdude2002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdude2002/subscriptions", "organizations_url": "https://api.github.com/users/gdude2002/orgs", "repos_url": "https://api.github.com/users/gdude2002/repos", "events_url": "https://api.github.com/users/gdude2002/events{/privacy}", "received_events_url": "https://api.github.com/users/gdude2002/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2017-01-01T11:37:56Z", "updated_at": "2017-03-26T14:55:08Z", "closed_at": "2017-03-26T00:06:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's a traceback for you. I've found this error appears on any class that doesn't explicitly define an `__init__()` - which means that the `__init__` in its dict refers to a C method wrapper.\r\n\r\nPython 3.6.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\cmdline.py\", line 296, in main\r\n    app.build(opts.force_all, filenames)\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\application.py\", line 333, in build\r\n    self.builder.build_update()\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\builders\\__init__.py\", line 251, in build_update\r\n    'out of date' % len(to_build))\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\builders\\__init__.py\", line 265, in build\r\n    self.doctreedir, self.app))\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\environment\\__init__.py\", line 556, in update\r\n    self._read_serial(docnames, app)\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\environment\\__init__.py\", line 576, in _read_serial\r\n    self.read_doc(docname, app)\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\environment\\__init__.py\", line 684, in read_doc\r\n    pub.publish()\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\core.py\", line 217, in publish\r\n    self.settings)\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\io.py\", line 55, in read\r\n    self.parse()\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\readers\\__init__.py\", line 78, in parse\r\n    self.parser.parse(self.input, document)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\parsers\\rst\\__init__.py\", line 185, in parse\r\n    self.statemachine.run(inputlines, document, inliner=self.inliner)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 170, in run\r\n    input_source=document['source'])\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 2745, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 326, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 394, in new_subsection\r\n    node=section_node, match_titles=True)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 281, in nested_parse\r\n    node=node, match_titles=match_titles)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 195, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 2318, in explicit_markup\r\n    nodelist, blank_finish = self.explicit_construct(match)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 2330, in explicit_construct\r\n    return method(self, expmatch)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 2073, in directive\r\n    directive_class, match, type_name, option_presets)\r\n  File \"C:\\Python36\\lib\\site-packages\\docutils\\parsers\\rst\\states.py\", line 2122, in run_directive\r\n    result = directive_instance.run()\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\ext\\autodoc.py\", line 1647, in run\r\n    documenter.generate(more_content=self.content)\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\ext\\autodoc.py\", line 992, in generate\r\n    self.document_members(all_members)\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\ext\\autodoc.py\", line 914, in document_members\r\n    check_module=members_check_module and not isattr)\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\ext\\autodoc.py\", line 989, in generate\r\n    self.add_content(more_content)\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\ext\\autodoc.py\", line 1362, in add_content\r\n    ModuleLevelDocumenter.add_content(self, more_content)\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\ext\\autodoc.py\", line 723, in add_content\r\n    for i, line in enumerate(self.process_doc(docstrings)):\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\ext\\autodoc.py\", line 685, in process_doc\r\n    self.options, docstringlines)\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx\\application.py\", line 589, in emit\r\n    results.append(callback(self, *args))\r\n  File \"C:\\Python36\\lib\\site-packages\\sphinx_autodoc_typehints.py\", line 68, in process_docstring\r\n    type_hints = get_type_hints(obj)\r\n  File \"C:\\Python36\\lib\\typing.py\", line 1419, in get_type_hints\r\n    'or function.'.format(obj))\r\nTypeError: <slot wrapper '__init__' of 'object' objects> is not a module, class, method, or function.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/11", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/11/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/11/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/11", "id": 198201681, "node_id": "MDU6SXNzdWUxOTgyMDE2ODE=", "number": 11, "title": "Tuple[] internals changes in Python 3.6 ", "user": {"login": "miohtama", "id": 49922, "node_id": "MDQ6VXNlcjQ5OTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/49922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miohtama", "html_url": "https://github.com/miohtama", "followers_url": "https://api.github.com/users/miohtama/followers", "following_url": "https://api.github.com/users/miohtama/following{/other_user}", "gists_url": "https://api.github.com/users/miohtama/gists{/gist_id}", "starred_url": "https://api.github.com/users/miohtama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miohtama/subscriptions", "organizations_url": "https://api.github.com/users/miohtama/orgs", "repos_url": "https://api.github.com/users/miohtama/repos", "events_url": "https://api.github.com/users/miohtama/events{/privacy}", "received_events_url": "https://api.github.com/users/miohtama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263311995, "node_id": "MDU6TGFiZWwyNjMzMTE5OTU=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-30T22:32:24Z", "updated_at": "2017-03-25T23:39:30Z", "closed_at": "2017-03-25T23:39:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.6 TupleMeta no longer has `__tuple_args__`. Hitting a Tuple annotation when running `sphinx-build` causes exception.\r\n\r\nInstead one can extra arguments from Tuple like:\r\n\r\n    def format_annotation(annotation):\r\n        if inspect.isclass(annotation):\r\n            if annotation.__module__ == 'builtins':\r\n                if annotation.__qualname__ == 'NoneType':\r\n                    return '``None``'\r\n                else:\r\n                    return ':class:`{}`'.format(annotation.__qualname__)\r\n\r\n            extra = ''\r\n            if annotation.__module__ in ('typing', 'backports.typing'):\r\n                if annotation.__qualname__ == 'Union':\r\n                    params = annotation.__union_params__\r\n                    if len(params) == 2 and params[1].__qualname__ == 'NoneType':\r\n                        annotation = Optional\r\n                        params = (params[0],)\r\n                elif annotation.__qualname__ == 'Tuple':\r\n\r\n                    if hasattr(annotation, \"__tuple_params__\"):\r\n                        # Python 3.5\r\n                        params = annotation.__tuple_params__\r\n                        if annotation.__tuple_use_ellipsis__:\r\n                            params += ('...',)\r\n                    else:\r\n                        # Python 3.6\r\n                        params = getattr(annotation, \"__args__\", None)\r\n                        # TODO: Handle ellipsis\r\n\r\n                else:\r\n                    params = getattr(annotation, '__parameters__', None)\r\n\r\n                if params:\r\n                    extra = '\\\\[' + ', '.join(format_annotation(param) for param in params) + ']'\r\n\r\n            return ':class:`~{}.{}`{}'.format(annotation.__module__, annotation.__qualname__, extra)\r\n\r\n        return str(annotation)\r\n\r\nHowever, I did not yet figure out how to handle the ellipsis case, as internals of typing.py are pretty mindblowing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/10", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/10/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/10/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/10", "id": 191815892, "node_id": "MDU6SXNzdWUxOTE4MTU4OTI=", "number": 10, "title": "Could you provide an example?", "user": {"login": "Naereen", "id": 11994719, "node_id": "MDQ6VXNlcjExOTk0NzE5", "avatar_url": "https://avatars2.githubusercontent.com/u/11994719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Naereen", "html_url": "https://github.com/Naereen", "followers_url": "https://api.github.com/users/Naereen/followers", "following_url": "https://api.github.com/users/Naereen/following{/other_user}", "gists_url": "https://api.github.com/users/Naereen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Naereen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Naereen/subscriptions", "organizations_url": "https://api.github.com/users/Naereen/orgs", "repos_url": "https://api.github.com/users/Naereen/repos", "events_url": "https://api.github.com/users/Naereen/events{/privacy}", "received_events_url": "https://api.github.com/users/Naereen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 263312000, "node_id": "MDU6TGFiZWwyNjMzMTIwMDA=", "url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-26T17:06:59Z", "updated_at": "2016-11-26T22:37:44Z", "closed_at": "2016-11-26T20:26:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nCould you provide an example of a Python project documented using this extension?\r\nIt would help to see that it works in practice.\r\nKuddo for the project, kind regards.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/9", "repository_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints", "labels_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/9/comments", "events_url": "https://api.github.com/repos/agronholm/sphinx-autodoc-typehints/issues/9/events", "html_url": "https://github.com/agronholm/sphinx-autodoc-typehints/issues/9", "id": 185376732, "node_id": "MDU6SXNzdWUxODUzNzY3MzI=", "number": 9, "title": "Parallel reading", "user": {"login": "cblegare", "id": 2456133, "node_id": "MDQ6VXNlcjI0NTYxMzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2456133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cblegare", "html_url": "https://github.com/cblegare", "followers_url": "https://api.github.com/users/cblegare/followers", "following_url": "https://api.github.com/users/cblegare/following{/other_user}", "gists_url": "https://api.github.com/users/cblegare/gists{/gist_id}", "starred_url": "https://api.github.com/users/cblegare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cblegare/subscriptions", "organizations_url": "https://api.github.com/users/cblegare/orgs", "repos_url": "https://api.github.com/users/cblegare/repos", "events_url": "https://api.github.com/users/cblegare/events{/privacy}", "received_events_url": "https://api.github.com/users/cblegare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-26T12:16:08Z", "updated_at": "2017-03-26T00:06:12Z", "closed_at": "2017-03-26T00:06:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Got this warning from sphinx-build : \n\n```\nWARNING: the sphinx_autodoc_typehints extension does not declare if it is safe for parallel reading, assuming it isn't - please ask the extension author to check and make it explicit\nWARNING: doing serial read\n```\n\nSo... is your extension safe for parallel reading ?\n", "performed_via_github_app": null, "score": 1.0}]}