{"total_count": 254, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/imageio/imageio/issues/544", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/544/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/544/events", "html_url": "https://github.com/imageio/imageio/issues/544", "id": 669752424, "node_id": "MDU6SXNzdWU2Njk3NTI0MjQ=", "number": 544, "title": "Creating Array from preexisting Array drops metadata", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-31T12:12:06Z", "updated_at": "2020-08-03T13:00:16Z", "closed_at": "2020-08-03T10:24:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\n>>> import numpy as np, imageio\r\n>>> t = imageio.core.Array(np.array([1, 2]), meta={\"foo\": 1})\r\n>>> (t * 2).meta\r\nDict([('foo', 1)])\r\n>>> t[:].meta\r\nDict([('foo', 1)])\r\n>>> imageio.core.Array(t).meta\r\nDict()\r\n```\r\nGiven that most operations on an Array appear to just keep the metadata as is, it seems reasonable to expect that creating a new Array from a preexisting one, without explicitly setting new metadata, should also keep the original metadata.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/542", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/542/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/542/events", "html_url": "https://github.com/imageio/imageio/issues/542", "id": 661257190, "node_id": "MDU6SXNzdWU2NjEyNTcxOTA=", "number": 542, "title": "can read from webcam using python3 idle, cant when running script", "user": {"login": "hwilson10", "id": 17091802, "node_id": "MDQ6VXNlcjE3MDkxODAy", "avatar_url": "https://avatars2.githubusercontent.com/u/17091802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hwilson10", "html_url": "https://github.com/hwilson10", "followers_url": "https://api.github.com/users/hwilson10/followers", "following_url": "https://api.github.com/users/hwilson10/following{/other_user}", "gists_url": "https://api.github.com/users/hwilson10/gists{/gist_id}", "starred_url": "https://api.github.com/users/hwilson10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hwilson10/subscriptions", "organizations_url": "https://api.github.com/users/hwilson10/orgs", "repos_url": "https://api.github.com/users/hwilson10/repos", "events_url": "https://api.github.com/users/hwilson10/events{/privacy}", "received_events_url": "https://api.github.com/users/hwilson10/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T01:52:49Z", "updated_at": "2020-07-27T09:26:19Z", "closed_at": "2020-07-20T12:47:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I open python3 on my raspberry pi 4 command line I can type the following and get an image from my webcam\r\n```\r\nimport imageio\r\ncam = imageio.get_reader('<video0>')\r\nimage = cam.get_next_data()\r\nimageio.imwrite(\"newimage.jpg\", image)\r\ncam = 0\r\n```\r\n\r\nhowever when I write the exact same thing into a python script (snap.py) and run with python3 ($ python3 snap.py) i get a black image. \r\n\r\nDoes anyone have any idea as to what could be the issue here?  Im on a fresh install of the no desktop version of raspbian from the NOOBS packaged with the raspberry pi.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/540", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/540/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/540/events", "html_url": "https://github.com/imageio/imageio/issues/540", "id": 654560616, "node_id": "MDU6SXNzdWU2NTQ1NjA2MTY=", "number": 540, "title": "Release 0.9.0? Not 2.9.0?", "user": {"login": "zerothi", "id": 4789793, "node_id": "MDQ6VXNlcjQ3ODk3OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4789793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zerothi", "html_url": "https://github.com/zerothi", "followers_url": "https://api.github.com/users/zerothi/followers", "following_url": "https://api.github.com/users/zerothi/following{/other_user}", "gists_url": "https://api.github.com/users/zerothi/gists{/gist_id}", "starred_url": "https://api.github.com/users/zerothi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zerothi/subscriptions", "organizations_url": "https://api.github.com/users/zerothi/orgs", "repos_url": "https://api.github.com/users/zerothi/repos", "events_url": "https://api.github.com/users/zerothi/events{/privacy}", "received_events_url": "https://api.github.com/users/zerothi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T07:04:55Z", "updated_at": "2020-07-10T07:47:20Z", "closed_at": "2020-07-10T07:47:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why is the latest release 0.9.0? Shouldn't it have been 2.9.0?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/538", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/538/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/538/events", "html_url": "https://github.com/imageio/imageio/issues/538", "id": 651064308, "node_id": "MDU6SXNzdWU2NTEwNjQzMDg=", "number": 538, "title": "Get GIF from numpy 4d array", "user": {"login": "MichelangeloConserva", "id": 37903256, "node_id": "MDQ6VXNlcjM3OTAzMjU2", "avatar_url": "https://avatars0.githubusercontent.com/u/37903256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichelangeloConserva", "html_url": "https://github.com/MichelangeloConserva", "followers_url": "https://api.github.com/users/MichelangeloConserva/followers", "following_url": "https://api.github.com/users/MichelangeloConserva/following{/other_user}", "gists_url": "https://api.github.com/users/MichelangeloConserva/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichelangeloConserva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichelangeloConserva/subscriptions", "organizations_url": "https://api.github.com/users/MichelangeloConserva/orgs", "repos_url": "https://api.github.com/users/MichelangeloConserva/repos", "events_url": "https://api.github.com/users/MichelangeloConserva/events{/privacy}", "received_events_url": "https://api.github.com/users/MichelangeloConserva/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-05T12:50:21Z", "updated_at": "2020-07-27T09:19:50Z", "closed_at": "2020-07-06T11:52:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I d like to produce a GIF from a 4d array. How can I do it using this library?\r\n\r\nThis is a reproducible example of what I would like to do:\r\n```\r\nimport numpy as np\r\nframes = (np.random.rand(100,11,11,3).round() * 220).astype(np.uint8)\r\n```\r\n\r\nOne way possible that I have found is to locally save the image using matplotlib.\r\nHowever this is extremely slow.\r\n\r\nAnother way is the following:\r\n```\r\nframes = (np.random.rand(100,11,11,3).round() * 220).astype(np.uint8)\r\nwith imageio.get_writer(os.path.join('images', 'round_{}.gif'.format(0)), mode='I', fps=5) as writer:\r\n    \r\n    dd = imageio.core.util.Dict()\r\n    dd[\"dpi\"] = (72,72)\r\n    \r\n    for t,frame in enumerate(frames):\r\n        img = imageio.core.util.Image(frame.astype(np.uint8), meta = dd)\r\n        writer.append_data(img)\r\n```\r\nThis is fast enough however the images in the gif are extremely small and not clearly visible.\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/536", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/536/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/536/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/536/events", "html_url": "https://github.com/imageio/imageio/issues/536", "id": 647150950, "node_id": "MDU6SXNzdWU2NDcxNTA5NTA=", "number": 536, "title": "Imageio  python Heroku read only access error", "user": {"login": "hunaidkhan2000", "id": 34857371, "node_id": "MDQ6VXNlcjM0ODU3Mzcx", "avatar_url": "https://avatars1.githubusercontent.com/u/34857371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hunaidkhan2000", "html_url": "https://github.com/hunaidkhan2000", "followers_url": "https://api.github.com/users/hunaidkhan2000/followers", "following_url": "https://api.github.com/users/hunaidkhan2000/following{/other_user}", "gists_url": "https://api.github.com/users/hunaidkhan2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/hunaidkhan2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hunaidkhan2000/subscriptions", "organizations_url": "https://api.github.com/users/hunaidkhan2000/orgs", "repos_url": "https://api.github.com/users/hunaidkhan2000/repos", "events_url": "https://api.github.com/users/hunaidkhan2000/events{/privacy}", "received_events_url": "https://api.github.com/users/hunaidkhan2000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-29T06:27:26Z", "updated_at": "2020-06-29T09:47:41Z", "closed_at": "2020-06-29T07:45:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi i am deplying a scanner using tesseract and pytesseract. While scanning the file imageio is creating a temp BMP file in the system but due to Heroku's policy of only allowing read only access to the libraries ,I am not able to run my code. I am getting following error. \r\n **File \"/app/.heroku/python/lib/python3.8/site-packages/imageio/core/request.py\", line 328, in get_file\r\n2020-06-29T05:08:44.787037+00:00 app[web.1]:     self._file = open(self.filename, \"wb\")\r\n2020-06-29T05:08:44.787037+00:00 app[web.1]: OSError: [Errno 30] Read-only file system: '/tmptess_105rvap2.bmp'**\r\n\r\nCan you please help me out how can I resolve it or how can I save the image in my personal Temp folder in heroku.  uploading screenshot as well. \r\n\r\n![image](https://user-images.githubusercontent.com/34857371/85980234-a1c40a80-b9ff-11ea-8900-f37efb4cc348.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/535", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/535/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/535/events", "html_url": "https://github.com/imageio/imageio/issues/535", "id": 646714670, "node_id": "MDU6SXNzdWU2NDY3MTQ2NzA=", "number": 535, "title": "Is there any option to flip image in ImageIO ?", "user": {"login": "tushar5526", "id": 30565750, "node_id": "MDQ6VXNlcjMwNTY1NzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/30565750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tushar5526", "html_url": "https://github.com/tushar5526", "followers_url": "https://api.github.com/users/tushar5526/followers", "following_url": "https://api.github.com/users/tushar5526/following{/other_user}", "gists_url": "https://api.github.com/users/tushar5526/gists{/gist_id}", "starred_url": "https://api.github.com/users/tushar5526/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tushar5526/subscriptions", "organizations_url": "https://api.github.com/users/tushar5526/orgs", "repos_url": "https://api.github.com/users/tushar5526/repos", "events_url": "https://api.github.com/users/tushar5526/events{/privacy}", "received_events_url": "https://api.github.com/users/tushar5526/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-27T16:45:48Z", "updated_at": "2020-06-29T07:42:38Z", "closed_at": "2020-06-29T07:42:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Like Pillow is there any option to flip an image in imageio.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/533", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/533/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/533/events", "html_url": "https://github.com/imageio/imageio/issues/533", "id": 634658748, "node_id": "MDU6SXNzdWU2MzQ2NTg3NDg=", "number": 533, "title": "How can we set the socket timeout on http(s) request?", "user": {"login": "jneuhauser", "id": 39044176, "node_id": "MDQ6VXNlcjM5MDQ0MTc2", "avatar_url": "https://avatars3.githubusercontent.com/u/39044176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jneuhauser", "html_url": "https://github.com/jneuhauser", "followers_url": "https://api.github.com/users/jneuhauser/followers", "following_url": "https://api.github.com/users/jneuhauser/following{/other_user}", "gists_url": "https://api.github.com/users/jneuhauser/gists{/gist_id}", "starred_url": "https://api.github.com/users/jneuhauser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jneuhauser/subscriptions", "organizations_url": "https://api.github.com/users/jneuhauser/orgs", "repos_url": "https://api.github.com/users/jneuhauser/repos", "events_url": "https://api.github.com/users/jneuhauser/events{/privacy}", "received_events_url": "https://api.github.com/users/jneuhauser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460461, "node_id": "MDU6TGFiZWwzODQ2MDQ2MQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20enhancement", "name": "type: enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-08T14:20:00Z", "updated_at": "2020-06-15T07:50:48Z", "closed_at": "2020-06-15T07:50:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI\u00b4m using this great library for fetching random images from unsplash like:\r\n\r\n```\r\nimport imageio\r\n\r\ndef unsplash_image_generator():\r\n    while True:\r\n        try:\r\n            image = imageio.imread('https://source.unsplash.com/random')\r\n        except OSError as e:\r\n            print(\"Error fetching random unsplash image: \", e)\r\n        else:\r\n            yield image\r\n```\r\n\r\nSadly on 6 of 8000 images there is a socket.timeout exception thrown and i wan\u00b4t to reduce the timeout to a short time like 3 seconds.\r\nHow can this be done and keep the simplicity of this great library?\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/531", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/531/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/531/events", "html_url": "https://github.com/imageio/imageio/issues/531", "id": 631474541, "node_id": "MDU6SXNzdWU2MzE0NzQ1NDE=", "number": 531, "title": "Thumbnail generation", "user": {"login": "brukted", "id": 40060643, "node_id": "MDQ6VXNlcjQwMDYwNjQz", "avatar_url": "https://avatars1.githubusercontent.com/u/40060643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brukted", "html_url": "https://github.com/brukted", "followers_url": "https://api.github.com/users/brukted/followers", "following_url": "https://api.github.com/users/brukted/following{/other_user}", "gists_url": "https://api.github.com/users/brukted/gists{/gist_id}", "starred_url": "https://api.github.com/users/brukted/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brukted/subscriptions", "organizations_url": "https://api.github.com/users/brukted/orgs", "repos_url": "https://api.github.com/users/brukted/repos", "events_url": "https://api.github.com/users/brukted/events{/privacy}", "received_events_url": "https://api.github.com/users/brukted/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-05T10:08:51Z", "updated_at": "2020-06-05T12:37:33Z", "closed_at": "2020-06-05T12:37:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does oiio have thumbnail generation feature?. If not how can I do it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/528", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/528/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/528/events", "html_url": "https://github.com/imageio/imageio/issues/528", "id": 623474006, "node_id": "MDU6SXNzdWU2MjM0NzQwMDY=", "number": 528, "title": "Colorbar displayed incorrectly when creating Gif", "user": {"login": "MHBalsmeier", "id": 56491557, "node_id": "MDQ6VXNlcjU2NDkxNTU3", "avatar_url": "https://avatars0.githubusercontent.com/u/56491557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MHBalsmeier", "html_url": "https://github.com/MHBalsmeier", "followers_url": "https://api.github.com/users/MHBalsmeier/followers", "following_url": "https://api.github.com/users/MHBalsmeier/following{/other_user}", "gists_url": "https://api.github.com/users/MHBalsmeier/gists{/gist_id}", "starred_url": "https://api.github.com/users/MHBalsmeier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MHBalsmeier/subscriptions", "organizations_url": "https://api.github.com/users/MHBalsmeier/orgs", "repos_url": "https://api.github.com/users/MHBalsmeier/repos", "events_url": "https://api.github.com/users/MHBalsmeier/events{/privacy}", "received_events_url": "https://api.github.com/users/MHBalsmeier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-22T21:03:19Z", "updated_at": "2020-05-25T13:17:37Z", "closed_at": "2020-05-25T13:12:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I want to create a gif test.gif out of 2 pngs 0.png and 1.png with the following code:\r\n\r\nimport imageio;\r\ngif = [];\r\ngif.append(imageio.imread(\"0.png\"));\r\ngif.append(imageio.imread(\"1.png\"));\r\nimageio.mimsave(\"test.gif\", gif, \"GIF\", duration = 1);\r\n![0](https://user-images.githubusercontent.com/56491557/82709205-59872f00-9c80-11ea-8271-86d4cfba6836.png)\r\n![1](https://user-images.githubusercontent.com/56491557/82709208-5b50f280-9c80-11ea-9b72-37971be05f00.png)\r\n![test](https://user-images.githubusercontent.com/56491557/82709215-5d1ab600-9c80-11ea-83d7-e4693db1a786.gif)\r\n\r\n\r\nHowever the colorbar is displayed incorrectly.\r\nAny suggestions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/524", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/524/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/524/events", "html_url": "https://github.com/imageio/imageio/issues/524", "id": 613831642, "node_id": "MDU6SXNzdWU2MTM4MzE2NDI=", "number": 524, "title": "Slow performance with ffmpeg mkv parsing", "user": {"login": "ekcheng", "id": 6679633, "node_id": "MDQ6VXNlcjY2Nzk2MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6679633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekcheng", "html_url": "https://github.com/ekcheng", "followers_url": "https://api.github.com/users/ekcheng/followers", "following_url": "https://api.github.com/users/ekcheng/following{/other_user}", "gists_url": "https://api.github.com/users/ekcheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekcheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekcheng/subscriptions", "organizations_url": "https://api.github.com/users/ekcheng/orgs", "repos_url": "https://api.github.com/users/ekcheng/repos", "events_url": "https://api.github.com/users/ekcheng/events{/privacy}", "received_events_url": "https://api.github.com/users/ekcheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-07T07:18:39Z", "updated_at": "2020-05-12T06:48:27Z", "closed_at": "2020-05-12T01:07:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nHoping you can help me understand a performance slowdown I am experiencing.\r\n\r\nI am using `imageio` to parse frames from a live video stream that I receive as a sequence of ~1-second `mkv` video fragments. Every time a new fragment is read from the stream, its bytes are passed to `imageio` like so:\r\n\r\n```\r\n# Create reader out of the bytes of a 1-sec mkv video fragment\r\nreader = imageio.get_reader(io.BytesIO(fragment), 'ffmpeg')\r\n```\r\n\r\nThen we process the frames until we run out, create a new reader out of the next fragment in the stream, and repeat.\r\n\r\n```\r\n# grab frame from current fragment\r\nim = reader.get_next_data()\r\n\r\n# do something \r\nprocess(im)\r\n\r\n# ... repeat until you run out of frames in the current fragment\r\n```\r\n\r\nWhen I use `imageio` to read the `mkv` stream in this way, it is causing my `process` function to run 4x slower than when I simply pass in an offline `mp4` file to `imageio`.\r\n\r\nIs this performance discrepancy (between running on an `mkv` stream rather than an `mp4` file) expected? How might you explain it? Is the cost of creating a new reader for every fragment (and initiating a new subprocess call to `ffmpeg`) causing some sort of context switching or other overhead that would slow down my downstream `process` call so much when compared to just reading from a file? \r\n\r\nIs there a more efficient way to parse a sequence of `mkv` fragments that does not require creating a new reader every fragment?\r\n\r\nMuch appreciate any insight or advice you could provide on whether I am using the library as efficiently as possible.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/522", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/522/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/522/events", "html_url": "https://github.com/imageio/imageio/issues/522", "id": 595334279, "node_id": "MDU6SXNzdWU1OTUzMzQyNzk=", "number": 522, "title": "_tiffile.py SyntaxWarning ", "user": {"login": "marxenegls", "id": 6319093, "node_id": "MDQ6VXNlcjYzMTkwOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6319093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxenegls", "html_url": "https://github.com/marxenegls", "followers_url": "https://api.github.com/users/marxenegls/followers", "following_url": "https://api.github.com/users/marxenegls/following{/other_user}", "gists_url": "https://api.github.com/users/marxenegls/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxenegls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxenegls/subscriptions", "organizations_url": "https://api.github.com/users/marxenegls/orgs", "repos_url": "https://api.github.com/users/marxenegls/repos", "events_url": "https://api.github.com/users/marxenegls/events{/privacy}", "received_events_url": "https://api.github.com/users/marxenegls/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-06T18:31:26Z", "updated_at": "2020-04-07T13:06:28Z", "closed_at": "2020-04-07T13:06:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Setting up python3-imageio (2.4.1-2) ...\r\n/usr/lib/python3/dist-packages/imageio/plugins/_tifffile.py:2813: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if key is 0:\r\n\r\n```py\r\ndef __getitem__(self, key):\r\n        \"\"\"Return specified page(s) from cache or file.\"\"\"\r\n        pages = self.pages\r\n        if not pages:\r\n            raise IndexError('list index out of range')\r\n        if key is 0:                                                                              * 2813                                         \r\n            return pages[key]\r\n\r\n        if isinstance(key, slice):\r\n            start, stop, _ = key.indices(2**31)\r\n            if not self.complete and max(stop, start) > len(pages):\r\n                self._seek(-1)\r\n            return [self[i] for i in range(*key.indices(len(pages)))]\r\n\r\n        if self.complete and key >= len(pages):\r\n```\r\n\r\nI also noticed two diff tifffile.py and _tifffile.py in the same plugins folder\r\n\r\n[_tifffile.txt](https://github.com/imageio/imageio/files/4440141/_tifffile.txt)\r\n[tifffile.txt](https://github.com/imageio/imageio/files/4440143/tifffile.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/521", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/521/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/521/events", "html_url": "https://github.com/imageio/imageio/issues/521", "id": 585620233, "node_id": "MDU6SXNzdWU1ODU2MjAyMzM=", "number": 521, "title": "how can i get object of each frame if I use imageio_ffmpeg.read_frames\uff1f", "user": {"login": "CarolinGao", "id": 35725126, "node_id": "MDQ6VXNlcjM1NzI1MTI2", "avatar_url": "https://avatars2.githubusercontent.com/u/35725126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarolinGao", "html_url": "https://github.com/CarolinGao", "followers_url": "https://api.github.com/users/CarolinGao/followers", "following_url": "https://api.github.com/users/CarolinGao/following{/other_user}", "gists_url": "https://api.github.com/users/CarolinGao/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarolinGao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarolinGao/subscriptions", "organizations_url": "https://api.github.com/users/CarolinGao/orgs", "repos_url": "https://api.github.com/users/CarolinGao/repos", "events_url": "https://api.github.com/users/CarolinGao/events{/privacy}", "received_events_url": "https://api.github.com/users/CarolinGao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-22T01:11:13Z", "updated_at": "2020-07-06T12:55:22Z", "closed_at": "2020-07-06T12:55:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use `driving_video = imageio.mimread(opt.driving_video, memtest=False)` , it always throws the exception `imageio.core.format.CannotReadFrameError: Could not read frame 0:\r\nFrame is 0 bytes, but expected 230400.` Instead I use `driving_video = read_frames(opt.driving_video)` , but  I also want to iterate frames and resize each of them, but each frame is type of bytes, how can I get object like the first method that return?\r\nThank u!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/520", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/520/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/520/events", "html_url": "https://github.com/imageio/imageio/issues/520", "id": 582702794, "node_id": "MDU6SXNzdWU1ODI3MDI3OTQ=", "number": 520, "title": "imread ver 2.6.1 fails on this geotiff file with err=-2", "user": {"login": "sound-fx", "id": 17304527, "node_id": "MDQ6VXNlcjE3MzA0NTI3", "avatar_url": "https://avatars1.githubusercontent.com/u/17304527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sound-fx", "html_url": "https://github.com/sound-fx", "followers_url": "https://api.github.com/users/sound-fx/followers", "following_url": "https://api.github.com/users/sound-fx/following{/other_user}", "gists_url": "https://api.github.com/users/sound-fx/gists{/gist_id}", "starred_url": "https://api.github.com/users/sound-fx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sound-fx/subscriptions", "organizations_url": "https://api.github.com/users/sound-fx/orgs", "repos_url": "https://api.github.com/users/sound-fx/repos", "events_url": "https://api.github.com/users/sound-fx/events{/privacy}", "received_events_url": "https://api.github.com/users/sound-fx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-17T02:09:00Z", "updated_at": "2020-07-06T12:55:59Z", "closed_at": "2020-07-06T12:55:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code\r\n\r\n```\r\nimport imageio\r\nland_sea_map = imageio.imread('lsm.geotiff')\r\n```\r\nworks as expected using Python 2.7.16 and imageio 2.5.0 on Windows 10 (all from the default install of 64-bit Anaconda Distribution 2010.10), with [this lsm.geotiff file](https://github.com/hfs/land-sea-mask/raw/master/lsm.geotiff).\r\n\r\nBut when using Python 3.7.6 and imageio 2.6.1 on Windows 10 (all coming from the default install of the 64-bit Anaconda Individual Edition 2020.02), the same code gives error \"-2\", as seen in the traceback below:\r\n\r\n```\r\nIn [1]: import imageio\r\n\r\nIn [2]: imageio.imread('lsm.geotiff')\r\nTraceback (most recent call last):\r\n\r\n  File \"C:\\Users\\greg\\AppData\\Local\\Continuum\\anaconda3-64\\lib\\site-packages\\imageio\\plugins\\pillow.py\", line 671, in pil_try_read\r\n    im.getdata()[0]\r\n\r\n  File \"C:\\Users\\greg\\AppData\\Local\\Continuum\\anaconda3-64\\lib\\site-packages\\PIL\\Image.py\", line 1249, in getdata\r\n    self.load()\r\n\r\n  File \"C:\\Users\\greg\\AppData\\Local\\Continuum\\anaconda3-64\\lib\\site-packages\\PIL\\TiffImagePlugin.py\", line 1070, in load\r\n    return self._load_libtiff()\r\n\r\n  File \"C:\\Users\\greg\\AppData\\Local\\Continuum\\anaconda3-64\\lib\\site-packages\\PIL\\TiffImagePlugin.py\", line 1182, in _load_libtiff\r\n    raise OSError(err)\r\n\r\nOSError: -2\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-2-4214415aae08>\", line 1, in <module>\r\n    imageio.imread('LandSeaMap_0p1DegResolution_lsm.geotiff')\r\n\r\n  File \"C:\\Users\\greg\\AppData\\Local\\Continuum\\anaconda3-64\\lib\\site-packages\\imageio\\core\\functions.py\", line 264, in imread\r\n    reader = read(uri, format, \"i\", **kwargs)\r\n\r\n  File \"C:\\Users\\greg\\AppData\\Local\\Continuum\\anaconda3-64\\lib\\site-packages\\imageio\\core\\functions.py\", line 186, in get_reader\r\n    return format.get_reader(request)\r\n\r\n  File \"C:\\Users\\greg\\AppData\\Local\\Continuum\\anaconda3-64\\lib\\site-packages\\imageio\\core\\format.py\", line 164, in get_reader\r\n    return self.Reader(self, request)\r\n\r\n  File \"C:\\Users\\greg\\AppData\\Local\\Continuum\\anaconda3-64\\lib\\site-packages\\imageio\\core\\format.py\", line 214, in __init__\r\n    self._open(**self.request.kwargs.copy())\r\n\r\n  File \"C:\\Users\\greg\\AppData\\Local\\Continuum\\anaconda3-64\\lib\\site-packages\\imageio\\plugins\\pillow.py\", line 137, in _open\r\n    pil_try_read(self._im)\r\n\r\n  File \"C:\\Users\\greg\\AppData\\Local\\Continuum\\anaconda3-64\\lib\\site-packages\\imageio\\plugins\\pillow.py\", line 682, in pil_try_read\r\n    raise ValueError(error_message)\r\n\r\nValueError: Could not load \"\" \r\nReason: \"-2\"\r\nPlease see documentation at: http://pillow.readthedocs.io/en/latest/installation.html#external-libraries\r\n\r\n\r\nIn [3]: \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/519", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/519/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/519/events", "html_url": "https://github.com/imageio/imageio/issues/519", "id": 580867156, "node_id": "MDU6SXNzdWU1ODA4NjcxNTY=", "number": 519, "title": "Install doesn't work for Python 2", "user": {"login": "teaglin", "id": 5282437, "node_id": "MDQ6VXNlcjUyODI0Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5282437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teaglin", "html_url": "https://github.com/teaglin", "followers_url": "https://api.github.com/users/teaglin/followers", "following_url": "https://api.github.com/users/teaglin/following{/other_user}", "gists_url": "https://api.github.com/users/teaglin/gists{/gist_id}", "starred_url": "https://api.github.com/users/teaglin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teaglin/subscriptions", "organizations_url": "https://api.github.com/users/teaglin/orgs", "repos_url": "https://api.github.com/users/teaglin/repos", "events_url": "https://api.github.com/users/teaglin/events{/privacy}", "received_events_url": "https://api.github.com/users/teaglin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-13T21:33:51Z", "updated_at": "2020-03-13T22:09:54Z", "closed_at": "2020-03-13T22:09:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installing through pip doesn't work and if attempting to install directly from source the dependencies won't install either.\r\n\r\nCollecting numpy (from -r requirements.txt (line 3))\r\n  Using cached https://files.pythonhosted.org/packages/3a/5f/47e578b3ae79e2624e205445ab77a1848acdaa2929a00eeef6b16eaaeb20/numpy-1.16.6-cp27-cp27mu-manylinux1_x86_64.whl\r\nCollecting pillow (from -r requirements.txt (line 4))\r\n  Downloading https://files.pythonhosted.org/packages/12/ad/61f8dfba88c4e56196bf6d056cdbba64dc9c5dfdfbc97d02e6472feed913/Pillow-6.2.2-cp27-cp27mu-manylinux1_x86_64.whl (2.1MB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2.1MB 790kB/s \r\nCollecting astropy (from -r requirements.txt (line 8))\r\n  Downloading https://files.pythonhosted.org/packages/57/9d/69e74ec2eb8f6a2ac7c687ecac2703aabe3324dfafb83081780a96ce71ce/astropy-2.0.16-cp27-cp27mu-manylinux1_x86_64.whl (6.1MB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 6.1MB 277kB/s \r\nCollecting simpleitk (from -r requirements.txt (line 10))\r\n  Downloading https://files.pythonhosted.org/packages/e1/6e/36cd6faefb7a6912d0abe60a8b60e4a8cf31ee5189979387d0a74361d56f/SimpleITK-1.2.4-cp27-cp27mu-manylinux1_x86_64.whl (42.5MB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 42.5MB 37kB/s \r\nCollecting imageio-ffmpeg (from -r requirements.txt (line 11))\r\n  Downloading https://files.pythonhosted.org/packages/44/51/8a16c76b2a19ac2af82001985c80d3caca4c373528855cb27e12b39373fb/imageio-ffmpeg-0.3.0.tar.gz\r\nimageio-ffmpeg requires Python '>=3.4' but the running Python is 2.7.17", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/516", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/516/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/516/events", "html_url": "https://github.com/imageio/imageio/issues/516", "id": 569389441, "node_id": "MDU6SXNzdWU1NjkzODk0NDE=", "number": 516, "title": "Tests are failing on aarch64", "user": {"login": "odidev", "id": 40816837, "node_id": "MDQ6VXNlcjQwODE2ODM3", "avatar_url": "https://avatars2.githubusercontent.com/u/40816837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odidev", "html_url": "https://github.com/odidev", "followers_url": "https://api.github.com/users/odidev/followers", "following_url": "https://api.github.com/users/odidev/following{/other_user}", "gists_url": "https://api.github.com/users/odidev/gists{/gist_id}", "starred_url": "https://api.github.com/users/odidev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odidev/subscriptions", "organizations_url": "https://api.github.com/users/odidev/orgs", "repos_url": "https://api.github.com/users/odidev/repos", "events_url": "https://api.github.com/users/odidev/events{/privacy}", "received_events_url": "https://api.github.com/users/odidev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-02-22T20:31:05Z", "updated_at": "2020-07-06T13:12:48Z", "closed_at": "2020-07-06T13:06:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nI am trying to add arm64 jobs for Travis-CI. I have two queries here:\r\n1. Tests related to ffmpeg are getting failed on arm64 platform, actually it is not able to find \"ffmpeg\" binary in imageio_ffmpeg module. But in case of amd64 it is working as expected, though it is working on arm64 as well when i install it using \"apt-get install ffmpeg\". 1 test case is failing as we are installing \"ffmpeg\" separately using apt, where it is unable to get ffmpeg path. May I know why we need to install ffmpeg seperately for arm64 platform.\r\n2. The dependencies which we are installing in case of \u201cTEST_FULL=1\u201d are optional and does not make any difference after installation as well, same number of test cases are running if we don\u2019t install them.\r\nMay I know the importance of setting  \u201cTest_full=1\u201d and install those optional dependencies.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/515", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/515/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/515/events", "html_url": "https://github.com/imageio/imageio/issues/515", "id": 567879285, "node_id": "MDU6SXNzdWU1Njc4NzkyODU=", "number": 515, "title": "Pip is unable to resolve to correct version of imageio for Python2", "user": {"login": "zhanwu", "id": 488359, "node_id": "MDQ6VXNlcjQ4ODM1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/488359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhanwu", "html_url": "https://github.com/zhanwu", "followers_url": "https://api.github.com/users/zhanwu/followers", "following_url": "https://api.github.com/users/zhanwu/following{/other_user}", "gists_url": "https://api.github.com/users/zhanwu/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhanwu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhanwu/subscriptions", "organizations_url": "https://api.github.com/users/zhanwu/orgs", "repos_url": "https://api.github.com/users/zhanwu/repos", "events_url": "https://api.github.com/users/zhanwu/events{/privacy}", "received_events_url": "https://api.github.com/users/zhanwu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-19T22:10:36Z", "updated_at": "2020-07-06T12:57:20Z", "closed_at": "2020-07-06T12:57:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to install imageio via pip for Python2 and failed with following error message:\r\n\r\n```\r\n(p2) ~$ python2 -m pip install imageio\r\nDEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\r\nCollecting imageio\r\n  Using cached imageio-2.8.0.tar.gz (3.3 MB)\r\nERROR: Package 'imageio' requires a different Python: 2.7.17 not in '>=3.5'\r\n(p2) ~$ \r\n```\r\n\r\nPip mistakenly consider `imageio-2.8.0.tar.gz` as a installation candidate for Python2 because there is no `data-requires-python` attributes defined for its URL in pypi:\r\n![Screenshot from 2020-02-19 10-54-33](https://user-images.githubusercontent.com/488359/74880902-22238200-5321-11ea-905d-6362a17a4f02.png)\r\n\r\nPinning the version would resolve the issue so it's not very critical", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/508", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/508/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/508/events", "html_url": "https://github.com/imageio/imageio/issues/508", "id": 563971139, "node_id": "MDU6SXNzdWU1NjM5NzExMzk=", "number": 508, "title": "Tests related to \"Avbin\" are failing on aarch64.", "user": {"login": "Ross1503", "id": 46737305, "node_id": "MDQ6VXNlcjQ2NzM3MzA1", "avatar_url": "https://avatars0.githubusercontent.com/u/46737305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ross1503", "html_url": "https://github.com/Ross1503", "followers_url": "https://api.github.com/users/Ross1503/followers", "following_url": "https://api.github.com/users/Ross1503/following{/other_user}", "gists_url": "https://api.github.com/users/Ross1503/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ross1503/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ross1503/subscriptions", "organizations_url": "https://api.github.com/users/Ross1503/orgs", "repos_url": "https://api.github.com/users/Ross1503/repos", "events_url": "https://api.github.com/users/Ross1503/events{/privacy}", "received_events_url": "https://api.github.com/users/Ross1503/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381280, "node_id": "MDU6TGFiZWwxNDMzODEyODA=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20avbin", "name": "plugin: avbin", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-12T12:35:10Z", "updated_at": "2020-02-18T16:20:46Z", "closed_at": "2020-02-18T16:20:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "While testing \"imageio\" on aarch64 platform, tests related to \"Avbin\" are failing as \"Avbin\" binary is not available for aarch64. I've Built \"Avbin\" locally on aarch64 platform, but now i'm getting  following error:\r\n`ZeroDivisionError: float division by zero`\r\nbelow is the source code code, where i'm getting above error:\r\n`self._meta[\"fps\"] = float(info.u.video.frame_rate_num) / float(info.u.video.frame_rate_den)`\r\nas we are getting **info.u.video.frame_rate_den** = 0.\r\nNot sure whether the issue is with locally built \"Avbin\" binary or something related to Imageio code. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/507", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/507/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/507/events", "html_url": "https://github.com/imageio/imageio/issues/507", "id": 563038677, "node_id": "MDU6SXNzdWU1NjMwMzg2Nzc=", "number": 507, "title": "Unable to save image as uint16", "user": {"login": "Sentient07", "id": 6195312, "node_id": "MDQ6VXNlcjYxOTUzMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6195312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sentient07", "html_url": "https://github.com/Sentient07", "followers_url": "https://api.github.com/users/Sentient07/followers", "following_url": "https://api.github.com/users/Sentient07/following{/other_user}", "gists_url": "https://api.github.com/users/Sentient07/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sentient07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sentient07/subscriptions", "organizations_url": "https://api.github.com/users/Sentient07/orgs", "repos_url": "https://api.github.com/users/Sentient07/repos", "events_url": "https://api.github.com/users/Sentient07/events{/privacy}", "received_events_url": "https://api.github.com/users/Sentient07/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495624726, "node_id": "MDU6TGFiZWw0OTU2MjQ3MjY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20pillow", "name": "plugin: pillow", "color": "c5def5", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-11T08:12:30Z", "updated_at": "2020-02-18T14:53:31Z", "closed_at": "2020-02-18T14:53:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to save an array of `uint16` as a 16-bit grayscale PNG. However, `imageio` converts to `uint8` before saving it.\r\n\r\nCode : \r\n\r\n```\r\nimageio.imsave(\"test.png\", np.ones((480, 640)).astype(np.uint16))\r\nimg = imageio.imread(\"test.png\")\r\nprint(img.dtype)\r\n```\r\n\r\nExpected Output: `uint16`\r\nCurrent Output : `uint8` \r\nimageio version : `2.6.1`\r\n\r\nFor others facing this issue : following this  [comment](https://github.com/python-pillow/Pillow/issues/2970#issuecomment-395477584), I get the desired output ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/505", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/505/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/505/events", "html_url": "https://github.com/imageio/imageio/issues/505", "id": 558322715, "node_id": "MDU6SXNzdWU1NTgzMjI3MTU=", "number": 505, "title": "UnsupportedOperation seek while reading GIF from HTTP uri", "user": {"login": "timothybrooks", "id": 10535711, "node_id": "MDQ6VXNlcjEwNTM1NzEx", "avatar_url": "https://avatars1.githubusercontent.com/u/10535711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timothybrooks", "html_url": "https://github.com/timothybrooks", "followers_url": "https://api.github.com/users/timothybrooks/followers", "following_url": "https://api.github.com/users/timothybrooks/following{/other_user}", "gists_url": "https://api.github.com/users/timothybrooks/gists{/gist_id}", "starred_url": "https://api.github.com/users/timothybrooks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timothybrooks/subscriptions", "organizations_url": "https://api.github.com/users/timothybrooks/orgs", "repos_url": "https://api.github.com/users/timothybrooks/repos", "events_url": "https://api.github.com/users/timothybrooks/events{/privacy}", "received_events_url": "https://api.github.com/users/timothybrooks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495624726, "node_id": "MDU6TGFiZWw0OTU2MjQ3MjY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20pillow", "name": "plugin: pillow", "color": "c5def5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-31T19:18:43Z", "updated_at": "2020-02-18T21:46:35Z", "closed_at": "2020-02-18T21:45:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Related to:\r\nhttps://github.com/imageio/imageio/issues/202\r\nhttps://github.com/imageio/imageio/issues/238\r\nhttps://github.com/imageio/imageio/issues/335\r\n\r\nReading GIF images from a HTTP fails with `\"UnsupportedOperation: seek\"`\r\n\r\nFor example, try running:\r\n```im = imageio.mimread('http://media.giphy.com/media/3oD3YveOJWdwIAfZ5e/giphy.gif')```\r\n\r\nPython 3.7.6\r\nImageio 2.6.1\r\nPillow 7.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/496", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/496/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/496/events", "html_url": "https://github.com/imageio/imageio/issues/496", "id": 533470588, "node_id": "MDU6SXNzdWU1MzM0NzA1ODg=", "number": 496, "title": "broken pipe", "user": {"login": "songkevinc", "id": 24256356, "node_id": "MDQ6VXNlcjI0MjU2MzU2", "avatar_url": "https://avatars2.githubusercontent.com/u/24256356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/songkevinc", "html_url": "https://github.com/songkevinc", "followers_url": "https://api.github.com/users/songkevinc/followers", "following_url": "https://api.github.com/users/songkevinc/following{/other_user}", "gists_url": "https://api.github.com/users/songkevinc/gists{/gist_id}", "starred_url": "https://api.github.com/users/songkevinc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/songkevinc/subscriptions", "organizations_url": "https://api.github.com/users/songkevinc/orgs", "repos_url": "https://api.github.com/users/songkevinc/repos", "events_url": "https://api.github.com/users/songkevinc/events{/privacy}", "received_events_url": "https://api.github.com/users/songkevinc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-05T16:48:47Z", "updated_at": "2020-03-15T21:18:08Z", "closed_at": "2020-02-18T13:30:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not totally sure what's going on here in this error. I have imageio-ffmpeg installed, but this won't let me write a video out. Could you guys please help?\r\n\r\n![image](https://user-images.githubusercontent.com/24256356/70255571-09112900-1755-11ea-9258-9e25b7b5c3a0.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/489", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/489/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/489/events", "html_url": "https://github.com/imageio/imageio/issues/489", "id": 519334934, "node_id": "MDU6SXNzdWU1MTkzMzQ5MzQ=", "number": 489, "title": "Get_reader hangs randomly", "user": {"login": "eXpensia", "id": 45756772, "node_id": "MDQ6VXNlcjQ1NzU2Nzcy", "avatar_url": "https://avatars2.githubusercontent.com/u/45756772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eXpensia", "html_url": "https://github.com/eXpensia", "followers_url": "https://api.github.com/users/eXpensia/followers", "following_url": "https://api.github.com/users/eXpensia/following{/other_user}", "gists_url": "https://api.github.com/users/eXpensia/gists{/gist_id}", "starred_url": "https://api.github.com/users/eXpensia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eXpensia/subscriptions", "organizations_url": "https://api.github.com/users/eXpensia/orgs", "repos_url": "https://api.github.com/users/eXpensia/repos", "events_url": "https://api.github.com/users/eXpensia/events{/privacy}", "received_events_url": "https://api.github.com/users/eXpensia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-07T15:24:07Z", "updated_at": "2020-02-18T14:38:22Z", "closed_at": "2020-02-18T14:38:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI am using ubuntu and installed imageio and ffpeg imageio from pip\r\nI'm trying to compute the median of an mp4 movie, i read some images long the movie to then take the median.\r\nfor example:\r\n```\r\nn=50\r\nvid = get_reader(\"path/to/video.mp4\")\r\nsize = (n, 500, 500)\r\nbuf = np.empty(size, dtype=np.uint8)\r\nfor i, k in enumerate(\r\n    (np.arange(1, self.number, self.number // (n - 1)))\r\n):\r\n    buf[k, :, :] = vid.get_data(k)[:, :, 1])\r\n    print(k)\r\n\r\nbackground = np.median(buf, axis=0)\r\n```\r\n\r\nI then get the output :\r\n\r\n```\r\n1\r\n3197\r\n6393\r\n9589\r\n...\r\n118253\r\n121449\r\n```\r\nIt then hangs at k = 121449.\r\n\r\nif i rerun another time it stops at differents k, i tried on two different computers and got the same issue.\r\n\r\nThe funny thing is that when i tried to launch the program in battery saving mode it took more time per image but it worked... \r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/487", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/487/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/487/events", "html_url": "https://github.com/imageio/imageio/issues/487", "id": 509230700, "node_id": "MDU6SXNzdWU1MDkyMzA3MDA=", "number": 487, "title": "Imwrite limits", "user": {"login": "kunguz", "id": 191201, "node_id": "MDQ6VXNlcjE5MTIwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/191201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kunguz", "html_url": "https://github.com/kunguz", "followers_url": "https://api.github.com/users/kunguz/followers", "following_url": "https://api.github.com/users/kunguz/following{/other_user}", "gists_url": "https://api.github.com/users/kunguz/gists{/gist_id}", "starred_url": "https://api.github.com/users/kunguz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kunguz/subscriptions", "organizations_url": "https://api.github.com/users/kunguz/orgs", "repos_url": "https://api.github.com/users/kunguz/repos", "events_url": "https://api.github.com/users/kunguz/events{/privacy}", "received_events_url": "https://api.github.com/users/kunguz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-18T17:58:02Z", "updated_at": "2019-10-21T07:31:19Z", "closed_at": "2019-10-21T07:31:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am wondering if there is any means to set maximum and minimum for an imwrite operation. \r\n\r\nSay I have a Numpy array with values ranging from minus something to plus something, can I save it to the disk as a PNG using `imageio` in a way where max or min are different than the range given in a Numpy array. \r\n\r\nTo be more specific, say I have values 0-10, but I want to force it save in a way as if I have an array with values ranging from 0-50. Therefore, 10 will lead to 51 in the PNG rather than 255 in a 8-bit PNG.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/486", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/486/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/486/events", "html_url": "https://github.com/imageio/imageio/issues/486", "id": 504081056, "node_id": "MDU6SXNzdWU1MDQwODEwNTY=", "number": 486, "title": "imageio.imread DICOM file meta not having few parameters", "user": {"login": "bhavesh0009", "id": 28176923, "node_id": "MDQ6VXNlcjI4MTc2OTIz", "avatar_url": "https://avatars2.githubusercontent.com/u/28176923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhavesh0009", "html_url": "https://github.com/bhavesh0009", "followers_url": "https://api.github.com/users/bhavesh0009/followers", "following_url": "https://api.github.com/users/bhavesh0009/following{/other_user}", "gists_url": "https://api.github.com/users/bhavesh0009/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhavesh0009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhavesh0009/subscriptions", "organizations_url": "https://api.github.com/users/bhavesh0009/orgs", "repos_url": "https://api.github.com/users/bhavesh0009/repos", "events_url": "https://api.github.com/users/bhavesh0009/events{/privacy}", "received_events_url": "https://api.github.com/users/bhavesh0009/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381092, "node_id": "MDU6TGFiZWwxNDMzODEwOTI=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20dicom", "name": "plugin: dicom", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-08T14:30:50Z", "updated_at": "2020-02-18T15:07:49Z", "closed_at": "2020-02-18T15:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Loading pydicom images from following Kaggle competition:\r\nhttps://www.kaggle.com/c/rsna-intracranial-hemorrhage-detection\r\n\r\nWhile reading from pydicom it is showing Window Center and Window Width\r\n```\r\nimport pydicom\r\npdim = pydicom.read_file(train_dir + 'ID_63eb1e259.dcm')\r\n\r\npdim\r\n```\r\n(0008, 0018) SOP Instance UID                    UI: ID_63eb1e259\r\n(0008, 0060) Modality                            CS: 'CT'\r\n(0010, 0020) Patient ID                          LO: 'ID_a449357f'\r\n(0020, 000d) Study Instance UID                  UI: ID_62d125e5b2\r\n(0020, 000e) Series Instance UID                 UI: ID_0be5c0d1b3\r\n(0020, 0010) Study ID                            SH: ''\r\n(0020, 0032) Image Position (Patient)            DS: ['-125', '-8', '180.199951']\r\n(0020, 0037) Image Orientation (Patient)         DS: ['1', '0', '0', '0', '1', '0']\r\n(0028, 0002) Samples per Pixel                   US: 1\r\n(0028, 0004) Photometric Interpretation          CS: 'MONOCHROME2'\r\n(0028, 0010) Rows                                US: 512\r\n(0028, 0011) Columns                             US: 512\r\n(0028, 0030) Pixel Spacing                       DS: ['0.48828125', '0.48828125']\r\n(0028, 0100) Bits Allocated                      US: 16\r\n(0028, 0101) Bits Stored                         US: 12\r\n(0028, 0102) High Bit                            US: 11\r\n(0028, 0103) Pixel Representation                US: 0\r\n(0028, 1050) Window Center                       DS: ['00036', '00036']\r\n(0028, 1051) Window Width                        DS: ['00080', '00080']\r\n(0028, 1052) Rescale Intercept                   DS: \"-1024\"\r\n(0028, 1053) Rescale Slope                       DS: \"1\"\r\n(7fe0, 0010) Pixel Data                          OW: Array of 524288 elements\r\n\r\n\r\nHowever while reading same file from imageio, it is not showing these parameters.\r\n```\r\ntrain_dir = '../input/rsna-intracranial-hemorrhage-detection/stage_1_train_images/'\r\nim = imageio.imread(train_dir + 'ID_63eb1e259.dcm')\r\nim.meta\r\n```\r\n\r\nDict([('TransferSyntaxUID', '1.2.840.10008.1.2'),\r\n      ('SOPInstanceUID', 'ID_63eb1e259'),\r\n      ('Modality', 'CT'),\r\n      ('PatientID', 'ID_a449357f'),\r\n      ('StudyInstanceUID', 'ID_62d125e5b2'),\r\n      ('SeriesInstanceUID', 'ID_0be5c0d1b3'),\r\n      ('ImagePositionPatient', (-125.0, -8.0, 180.199951)),\r\n      ('ImageOrientationPatient', (1.0, 0.0, 0.0, 0.0, 1.0, 0.0)),\r\n      ('SamplesPerPixel', 1),\r\n      ('Rows', 512),\r\n      ('Columns', 512),\r\n      ('PixelSpacing', (0.48828125, 0.48828125)),\r\n      ('BitsAllocated', 16),\r\n      ('BitsStored', 12),\r\n      ('HighBit', 11),\r\n      ('PixelRepresentation', 0),\r\n      ('RescaleIntercept', -1024.0),\r\n      ('RescaleSlope', 1.0),\r\n      ('PixelData',\r\n       b'Data converted to numpy array, raw data removed to preserve memory'),\r\n      ('shape', (512, 512)),\r\n      ('sampling', (0.48828125, 0.48828125))])\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/485", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/485/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/485/events", "html_url": "https://github.com/imageio/imageio/issues/485", "id": 503938393, "node_id": "MDU6SXNzdWU1MDM5MzgzOTM=", "number": 485, "title": "ImageIO 2.6.0 is breaking with Python 2.7.", "user": {"login": "KelSolaar", "id": 99779, "node_id": "MDQ6VXNlcjk5Nzc5", "avatar_url": "https://avatars1.githubusercontent.com/u/99779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KelSolaar", "html_url": "https://github.com/KelSolaar", "followers_url": "https://api.github.com/users/KelSolaar/followers", "following_url": "https://api.github.com/users/KelSolaar/following{/other_user}", "gists_url": "https://api.github.com/users/KelSolaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/KelSolaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KelSolaar/subscriptions", "organizations_url": "https://api.github.com/users/KelSolaar/orgs", "repos_url": "https://api.github.com/users/KelSolaar/repos", "events_url": "https://api.github.com/users/KelSolaar/events{/privacy}", "received_events_url": "https://api.github.com/users/KelSolaar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381939, "node_id": "MDU6TGFiZWwxNDMzODE5Mzk=", "url": "https://api.github.com/repos/imageio/imageio/labels/core", "name": "core", "color": "207de5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-08T09:41:10Z", "updated_at": "2019-10-08T10:42:01Z", "closed_at": "2019-10-08T09:55:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nSo my unit tests just started to break tonight with Python 2.7, culprit being using the `exist_ok` argument with `os.makedirs` which does not exist on Python 2.7: https://github.com/colour-science/colour/commit/c5fae5deebe87f894bf1d45fdf3d6783bed03512/checks#step:6:129\r\n\r\nI think it would be fine if the 2.6.0 version had been tagged Python 3.x only but this is not the case and it is picked up by Pip (and Poetry):\r\n\r\n```\r\n(test) Kali:~ kelsolaar$ pip install imageio\r\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\r\nCollecting imageio\r\n  Downloading https://files.pythonhosted.org/packages/d3/cc/e7a58cab7dff2efbfaa6216e372ae9f56a066d80908d848949427aa0f168/imageio-2.6.0.tar.gz (3.4MB)\r\n[...]\r\n```\r\n\r\nI guess that if the intent is to drop Python 2.7 support now, it would be good to have the latest available build for it in a working state.\r\n\r\nCheers,\r\n\r\nThomas", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/482", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/482/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/482/events", "html_url": "https://github.com/imageio/imageio/issues/482", "id": 502105481, "node_id": "MDU6SXNzdWU1MDIxMDU0ODE=", "number": 482, "title": "Fatal Python error: could not acquire lock for <_io.BufferedReader name=8> at interpreter shutdown, possibly due to daemon threads", "user": {"login": "javadnoorb", "id": 26352146, "node_id": "MDQ6VXNlcjI2MzUyMTQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/26352146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javadnoorb", "html_url": "https://github.com/javadnoorb", "followers_url": "https://api.github.com/users/javadnoorb/followers", "following_url": "https://api.github.com/users/javadnoorb/following{/other_user}", "gists_url": "https://api.github.com/users/javadnoorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/javadnoorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javadnoorb/subscriptions", "organizations_url": "https://api.github.com/users/javadnoorb/orgs", "repos_url": "https://api.github.com/users/javadnoorb/repos", "events_url": "https://api.github.com/users/javadnoorb/events{/privacy}", "received_events_url": "https://api.github.com/users/javadnoorb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-10-03T14:34:33Z", "updated_at": "2020-02-19T12:14:24Z", "closed_at": "2020-02-18T14:37:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Possibly related to #174\r\n\r\nI've posted this on Stack Overflow ([link](https://stackoverflow.com/questions/58209439/fatal-python-error-could-not-acquire-lock-for-io-bufferedreader-name-8-at-in)) but can't figure if it's more suited for here. So apologies for double-posting.\r\n\r\nRunning the following:\r\n```python\r\nimport imageio\r\n\r\nclass vidrdf:\r\n    def __init__(self, vidfile):\r\n        self.vid = imageio.get_reader(vidfile,  'ffmpeg')\r\n        \r\nvidfile = 'movie.mov'\r\nrdfobj = vidrdf(vidfile)\r\n```\r\n\r\nI get:\r\n```\r\nFatal Python error: could not acquire lock for <_io.BufferedReader name=8> at interpreter shutdown, possibly due to daemon threads\r\n\r\nThread 0x00007fd2dc2a8700 (most recent call first):\r\n  File \u201c/path/miniconda3/envs/flower/lib/python3.7/site-packages/imageio_ffmpeg/_parsing.py\", line 61 in run\r\n  File \"miniconda3/envs/flower/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n  File \u201c/path/miniconda3/envs/flower/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n\r\nCurrent thread 0x00007fd2f0bb9700 (most recent call first):\r\n  File \u201c/path/miniconda3/envs/flower/lib/python3.7/subprocess.py\", line 1704 in _communicate\r\n  File \u201c/path/miniconda3/envs/flower/lib/python3.7/subprocess.py\", line 939 in communicate\r\n  File \u201c/path/miniconda3/envs/flower/lib/python3.7/site-packages/imageio_ffmpeg/_io.py\", line 193 in read_frames\r\n  File \u201c/path/miniconda3/envs/flower/lib/python3.7/site-packages/imageio/plugins/ffmpeg.py\", line 342 in _close\r\n  File \u201c/path/miniconda3/envs/flower/lib/python3.7/site-packages/imageio/core/format.py\", line 252 in close\r\n  File \u201c/path/miniconda3/envs/flower/lib/python3.7/site-packages/imageio/core/format.py\", line 241 in __del__\r\nAborted (core dumped)\r\n```\r\n\r\nFor some reason this happens when running the code as a script, but not when run in a Jupyter notebook. It also happens in Python interactive environment only once Python is exited. \r\n\r\nThis also doesn't happen when I replace `self.vid=...` with `vid=...` or replace `rdfobj = vidrdf(vidfile)` with just `vidrdf(vidfile)`. So this seems to be an issue with copying the object (probably while daemon thread related to ffmpeg is closed?). Is there any resolution to this?\r\n\r\n -Thanks\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/480", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/480/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/480/events", "html_url": "https://github.com/imageio/imageio/issues/480", "id": 496768964, "node_id": "MDU6SXNzdWU0OTY3Njg5NjQ=", "number": 480, "title": "Compressing GIFs", "user": {"login": "LucaCappelletti94", "id": 7738570, "node_id": "MDQ6VXNlcjc3Mzg1NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7738570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucaCappelletti94", "html_url": "https://github.com/LucaCappelletti94", "followers_url": "https://api.github.com/users/LucaCappelletti94/followers", "following_url": "https://api.github.com/users/LucaCappelletti94/following{/other_user}", "gists_url": "https://api.github.com/users/LucaCappelletti94/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucaCappelletti94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucaCappelletti94/subscriptions", "organizations_url": "https://api.github.com/users/LucaCappelletti94/orgs", "repos_url": "https://api.github.com/users/LucaCappelletti94/repos", "events_url": "https://api.github.com/users/LucaCappelletti94/events{/privacy}", "received_events_url": "https://api.github.com/users/LucaCappelletti94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-22T11:50:02Z", "updated_at": "2019-10-01T07:38:45Z", "closed_at": "2019-10-01T07:38:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello, since I needed to compress GIF images created with imageio in a python script I've created a python package wrapping the [gifsicle](https://www.lcdf.org/gifsicle/) library called [pygifsicle](https://github.com/LucaCappelletti94/pygifsicle).\r\n\r\nI wanted to ask if it could be of interest to add an \"optimize\" option to the imageio writer for GIF images using gifsicle. If that's the case, I could do a pull request adding the feature, but user requiring the feature would need to install separately the gifsicle library.\r\n\r\nThe installation process is straightforward (just a brew install on mac and an apt-get on Debian/Ubuntu), so nothing esoteric involved.\r\n\r\nDo let me know what do you think about it!\r\n\r\nLuca", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/479", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/479/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/479/events", "html_url": "https://github.com/imageio/imageio/issues/479", "id": 494829223, "node_id": "MDU6SXNzdWU0OTQ4MjkyMjM=", "number": 479, "title": "imageio.ffmpeg.download() has been deprecated.", "user": {"login": "donglabimaging", "id": 50585879, "node_id": "MDQ6VXNlcjUwNTg1ODc5", "avatar_url": "https://avatars2.githubusercontent.com/u/50585879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donglabimaging", "html_url": "https://github.com/donglabimaging", "followers_url": "https://api.github.com/users/donglabimaging/followers", "following_url": "https://api.github.com/users/donglabimaging/following{/other_user}", "gists_url": "https://api.github.com/users/donglabimaging/gists{/gist_id}", "starred_url": "https://api.github.com/users/donglabimaging/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donglabimaging/subscriptions", "organizations_url": "https://api.github.com/users/donglabimaging/orgs", "repos_url": "https://api.github.com/users/donglabimaging/repos", "events_url": "https://api.github.com/users/donglabimaging/events{/privacy}", "received_events_url": "https://api.github.com/users/donglabimaging/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-17T20:13:45Z", "updated_at": "2019-09-17T20:31:52Z", "closed_at": "2019-09-17T20:31:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWe have been using\r\n`import imageio\r\nimageio.plugins.ffmpeg.download()` for a while without any problems. \r\n\r\nWe tried to run the code again a few days ago and we are getting the following error.\r\nRuntimeError: imageio.ffmpeg.download() has been deprecated. Use 'pip install imageio-ffmpeg' instead.'\r\n\r\nAny comments and suggestions are greatly appreciated.  Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/477", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/477/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/477/events", "html_url": "https://github.com/imageio/imageio/issues/477", "id": 490784371, "node_id": "MDU6SXNzdWU0OTA3ODQzNzE=", "number": 477, "title": "Fits Support", "user": {"login": "burhankhanlodhy", "id": 53024945, "node_id": "MDQ6VXNlcjUzMDI0OTQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/53024945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burhankhanlodhy", "html_url": "https://github.com/burhankhanlodhy", "followers_url": "https://api.github.com/users/burhankhanlodhy/followers", "following_url": "https://api.github.com/users/burhankhanlodhy/following{/other_user}", "gists_url": "https://api.github.com/users/burhankhanlodhy/gists{/gist_id}", "starred_url": "https://api.github.com/users/burhankhanlodhy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burhankhanlodhy/subscriptions", "organizations_url": "https://api.github.com/users/burhankhanlodhy/orgs", "repos_url": "https://api.github.com/users/burhankhanlodhy/repos", "events_url": "https://api.github.com/users/burhankhanlodhy/events{/privacy}", "received_events_url": "https://api.github.com/users/burhankhanlodhy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-08T18:05:54Z", "updated_at": "2020-02-18T15:08:44Z", "closed_at": "2020-02-18T15:08:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently trying to save a fits file but, it's giving me an error that `OSError: FITS save handler not installed\r\n` While I already have numpy and astropy installed. Can you please provide example code to give an idea on how to save a fits file?\r\nMy code:\r\n`import rawpy\r\nimport imageio\r\nraw = rawpy.imread('E:\\FYP\\cr.cr2')\r\nrgb = raw.postprocess()\r\nimageio.imwrite('E:\\FYP\\cr.fits', rgb)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/476", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/476/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/476/events", "html_url": "https://github.com/imageio/imageio/issues/476", "id": 489901033, "node_id": "MDU6SXNzdWU0ODk5MDEwMzM=", "number": 476, "title": "error reading pathlib Path object when axis 2 is greater than 3, an axis gets dropped on read", "user": {"login": "rbavery", "id": 22258697, "node_id": "MDQ6VXNlcjIyMjU4Njk3", "avatar_url": "https://avatars3.githubusercontent.com/u/22258697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbavery", "html_url": "https://github.com/rbavery", "followers_url": "https://api.github.com/users/rbavery/followers", "following_url": "https://api.github.com/users/rbavery/following{/other_user}", "gists_url": "https://api.github.com/users/rbavery/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbavery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbavery/subscriptions", "organizations_url": "https://api.github.com/users/rbavery/orgs", "repos_url": "https://api.github.com/users/rbavery/repos", "events_url": "https://api.github.com/users/rbavery/events{/privacy}", "received_events_url": "https://api.github.com/users/rbavery/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-05T17:28:13Z", "updated_at": "2019-10-01T04:43:58Z", "closed_at": "2019-10-01T04:43:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm moving this issue over here from scikit-image: https://github.com/scikit-image/scikit-image/issues/4138\r\n\r\nSee this example, axis 0 or 1 gets dropped when reading with imageio\r\n\r\n```python\r\nimport imageio as io \r\nimport numpy as np \r\nimport skimage.io as skio \r\nfrom pathlib import Path \r\narr = np.ones((512, 512, 30)) \r\n\r\nskio.imsave(\"test.tif\", arr) \r\n\r\nio.imread(Path(\"test.tif\")).shape    \r\n```\r\n\r\nIf we read using a string instead of a Path object, then the array is read correctly", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/475", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/475/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/475/events", "html_url": "https://github.com/imageio/imageio/issues/475", "id": 489212055, "node_id": "MDU6SXNzdWU0ODkyMTIwNTU=", "number": 475, "title": "warning when reading png palette image with transparency", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-04T14:53:45Z", "updated_at": "2019-09-09T08:07:09Z", "closed_at": "2019-09-09T08:07:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following image was generated by dvipng (actually, invoked via matplotlib's usetex mode):\r\n![palettetransparency](https://user-images.githubusercontent.com/1322974/64266126-5dc5bd80-cf34-11e9-9869-1840ed9636e0.png)\r\nIt's a png image with palette and transparency (see also http://www.libpng.org/pub/png/book/chapter08.html#png.ch08.div.5.2).  Loading it with imageio yields a warning:\r\n```\r\n/usr/lib/python3.7/site-packages/PIL/Image.py:993: UserWarning: Palette images with Transparency expressed in bytes should be converted to RGBA images\r\n```\r\nMy guess is that, as the warning says, such images should be converted to RGBA rather than L?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/474", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/474/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/474/events", "html_url": "https://github.com/imageio/imageio/issues/474", "id": 489061112, "node_id": "MDU6SXNzdWU0ODkwNjExMTI=", "number": 474, "title": "spe plugin fails on spe3 files with dtype uint32", "user": {"login": "dscran", "id": 765450, "node_id": "MDQ6VXNlcjc2NTQ1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/765450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dscran", "html_url": "https://github.com/dscran", "followers_url": "https://api.github.com/users/dscran/followers", "following_url": "https://api.github.com/users/dscran/following{/other_user}", "gists_url": "https://api.github.com/users/dscran/gists{/gist_id}", "starred_url": "https://api.github.com/users/dscran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dscran/subscriptions", "organizations_url": "https://api.github.com/users/dscran/orgs", "repos_url": "https://api.github.com/users/dscran/repos", "events_url": "https://api.github.com/users/dscran/events{/privacy}", "received_events_url": "https://api.github.com/users/dscran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-04T09:57:25Z", "updated_at": "2019-10-28T10:08:17Z", "closed_at": "2019-10-28T10:08:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "    imageio.__version__\r\n    '2.5.0'\r\n\r\nSPE3 has introduced uint32 as a new choice for data type. It is denoted by the value \"8\" at the respective datatype byte position in the file header. Currently, loading such SPE3 files fails with an\r\n\r\n    IndexError: list index out of range\r\n\r\nas it tries to access index 8 in the 5-entry list of dtypes in Spec.dtypes:\r\n\r\n    dtypes = [\r\n        np.dtype(\"<f\"),\r\n        np.dtype(\"<i\"),\r\n        np.dtype(\"<h\"),\r\n        np.dtype(\"<H\"),\r\n        np.dtype(\"<I\"),\r\n        ]\r\n\r\nchanging Spec.dtypes into a dictionary, including an entry for uint32 solves this:\r\n\r\n    dtypes = {\r\n            0: np.dtype(np.float32),\r\n            1: np.dtype(np.int32),\r\n            2: np.dtype(np.int16),\r\n            3: np.dtype(np.uint16),\r\n            8: np.dtype(np.uint32),\r\n            }\r\n\r\nI attached the output of\r\n\r\n    patch -u <spe_orig.py> <spe_patched.py>\r\n\r\nCheers,\r\n\r\nMichael\r\n\r\n[spe_patch.txt](https://github.com/imageio/imageio/files/3573924/spe_patch.txt)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/473", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/473/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/473/events", "html_url": "https://github.com/imageio/imageio/issues/473", "id": 488985846, "node_id": "MDU6SXNzdWU0ODg5ODU4NDY=", "number": 473, "title": "Confusing error message when trying to imwrite() to unsupported format", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381939, "node_id": "MDU6TGFiZWwxNDMzODE5Mzk=", "url": "https://api.github.com/repos/imageio/imageio/labels/core", "name": "core", "color": "207de5", "default": false, "description": null}, {"id": 38460461, "node_id": "MDU6TGFiZWwzODQ2MDQ2MQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20enhancement", "name": "type: enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-04T07:18:28Z", "updated_at": "2020-02-18T15:34:55Z", "closed_at": "2020-02-18T15:34:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "imageio 2.5 on Py 3.7, Arch Linux\r\n```\r\nIn [2]: imageio.imwrite(\"foo.bar\", np.zeros((10, 10)))                                                                                                                                              \r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-2-073d6940dd99> in <module>\r\n----> 1 imageio.imwrite(\"foo.bar\", np.zeros((10, 10)))\r\n\r\n/usr/lib/python3.7/site-packages/imageio/core/functions.py in imwrite(uri, im, format, **kwargs)\r\n    257 \r\n    258     # Get writer and write first\r\n--> 259     writer = get_writer(uri, format, \"i\", **kwargs)\r\n    260     with writer:\r\n    261         writer.append_data(im)\r\n\r\n/usr/lib/python3.7/site-packages/imageio/core/functions.py in get_writer(uri, format, mode, **kwargs)\r\n    181     if format is None:\r\n    182         raise ValueError(\r\n--> 183             \"Could not find a format to write the specified file \" \"in mode %r\" % mode\r\n    184         )\r\n    185 \r\n\r\nValueError: Could not find a format to write the specified file in mode 'i'\r\n```\r\nWhat does \"mode 'i'\" even mean?  Well, sure, I can look up the docs for get_writer to figure it out, but it's a bit obscure...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/464", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/464/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/464/events", "html_url": "https://github.com/imageio/imageio/issues/464", "id": 473856022, "node_id": "MDU6SXNzdWU0NzM4NTYwMjI=", "number": 464, "title": "slow import", "user": {"login": "benjimin", "id": 12852539, "node_id": "MDQ6VXNlcjEyODUyNTM5", "avatar_url": "https://avatars0.githubusercontent.com/u/12852539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjimin", "html_url": "https://github.com/benjimin", "followers_url": "https://api.github.com/users/benjimin/followers", "following_url": "https://api.github.com/users/benjimin/following{/other_user}", "gists_url": "https://api.github.com/users/benjimin/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjimin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjimin/subscriptions", "organizations_url": "https://api.github.com/users/benjimin/orgs", "repos_url": "https://api.github.com/users/benjimin/repos", "events_url": "https://api.github.com/users/benjimin/events{/privacy}", "received_events_url": "https://api.github.com/users/benjimin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-29T05:27:21Z", "updated_at": "2019-08-01T08:38:20Z", "closed_at": "2019-08-01T08:38:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why is `imageio` slow to import?\r\n```python\r\nimport time\r\nt = time.perf_counter()\r\nimport imageio\r\nprint(time.perf_counter() - t)\r\n```\r\nI'm finding that `imageio` (tested 2.5.0 on python 3.6) takes around one full second to import, which is several times longer than `rasterio` or `numpy` and hundreds of times slower than `PIL` (Pillow). Has anyone recently profiled `import imageio`? Just briefly:\r\n\r\n```python\r\nimport time, builtins\r\norig = builtins.__import__\r\ndef profiler(name, glob=None, loc=None, fromlist=None, level=0):\r\n    t = time.perf_counter() \r\n    r = orig(name, glob, loc, fromlist, level)\r\n    print(time.perf_counter() - t, name)\r\n    return r\r\nbuiltins.__import__ = profiler\r\nimport imageio\r\n```\r\n\r\n```bash\r\n$ python quick.py | sort -g | tail\r\n0.10757197719067335 numpy\r\n0.8292381973005831 pkg_resources\r\n0.9597033429890871 util\r\n0.9634586442261934 core\r\n0.9866004879586399 imageio\r\n```\r\nSurprisingly, the plugins seem not to be the cause. The cause is that `imageio` is using `pkg_resources`, despite that this has been deprecated (in favour of `importlib.resources` and its backport `importlib_resources`) due to widely-documented performance shortcomings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/463", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/463/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/463/events", "html_url": "https://github.com/imageio/imageio/issues/463", "id": 471659972, "node_id": "MDU6SXNzdWU0NzE2NTk5NzI=", "number": 463, "title": "How to use metadata ?", "user": {"login": "romain7594", "id": 22692452, "node_id": "MDQ6VXNlcjIyNjkyNDUy", "avatar_url": "https://avatars3.githubusercontent.com/u/22692452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romain7594", "html_url": "https://github.com/romain7594", "followers_url": "https://api.github.com/users/romain7594/followers", "following_url": "https://api.github.com/users/romain7594/following{/other_user}", "gists_url": "https://api.github.com/users/romain7594/gists{/gist_id}", "starred_url": "https://api.github.com/users/romain7594/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romain7594/subscriptions", "organizations_url": "https://api.github.com/users/romain7594/orgs", "repos_url": "https://api.github.com/users/romain7594/repos", "events_url": "https://api.github.com/users/romain7594/events{/privacy}", "received_events_url": "https://api.github.com/users/romain7594/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-23T12:10:14Z", "updated_at": "2019-08-01T08:47:19Z", "closed_at": "2019-08-01T08:47:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use metadata to write a tiff file such as described here : https://imageio.readthedocs.io/en/stable/format_tiff.html#metadata-for-writing.\r\n\r\nI tried this : `imageio.mimwrite(\"test\", imagelist, format=\".tiff\", compress=9)` but it said that compress is an unexpected argument.\r\n\r\nAny ideas ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/461", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/461/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/461/events", "html_url": "https://github.com/imageio/imageio/issues/461", "id": 462272391, "node_id": "MDU6SXNzdWU0NjIyNzIzOTE=", "number": 461, "title": "Exception raised on macOs - Azure builds when trying to download \"libfreeimage-3.16.0-osx10.6.dylib\".", "user": {"login": "KelSolaar", "id": 99779, "node_id": "MDQ6VXNlcjk5Nzc5", "avatar_url": "https://avatars1.githubusercontent.com/u/99779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KelSolaar", "html_url": "https://github.com/KelSolaar", "followers_url": "https://api.github.com/users/KelSolaar/followers", "following_url": "https://api.github.com/users/KelSolaar/following{/other_user}", "gists_url": "https://api.github.com/users/KelSolaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/KelSolaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KelSolaar/subscriptions", "organizations_url": "https://api.github.com/users/KelSolaar/orgs", "repos_url": "https://api.github.com/users/KelSolaar/repos", "events_url": "https://api.github.com/users/KelSolaar/events{/privacy}", "received_events_url": "https://api.github.com/users/KelSolaar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-06-29T06:37:57Z", "updated_at": "2019-08-20T08:19:49Z", "closed_at": "2019-08-17T04:46:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm experiencing some failed builds when `imagio` tries to pull `libfreeimage-3.16.0-osx10.6.dylib` on macOs:\r\n\r\n```python\r\nImageio: 'libfreeimage-3.16.0-osx10.6.dylib' was not found on your computer; downloading it now.\r\nError while fetching file: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:727)>.\r\nError while fetching file: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:727)>.\r\nError while fetching file: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:727)>.\r\nError while fetching file: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:727)>.\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/Users/vsts/.conda/envs/colour_env/lib/python2.7/site-packages/imageio/plugins/_freeimage.py\", line 70, in download\r\n    get_remote_file(fname=fname, directory=directory, force_download=force_download)\r\n  File \"/Users/vsts/.conda/envs/colour_env/lib/python2.7/site-packages/imageio/core/fetching.py\", line 130, in get_remote_file\r\n    _fetch_file(url, filename)\r\n  File \"/Users/vsts/.conda/envs/colour_env/lib/python2.7/site-packages/imageio/core/fetching.py\", line 189, in _fetch_file\r\n    % os.path.basename(file_name)\r\nIOError: Unable to download 'libfreeimage-3.16.0-osx10.6.dylib'. Perhaps there is a no internet connection? If there is, please report this problem.\r\n```\r\n\r\nhttps://dev.azure.com/colour-science/Colour/_build/results?buildId=269&view=logs\r\n\r\nI'm not exactly sure on what is happening here thus ideas are welcomed!\r\n\r\nCheers,\r\n\r\nThomas", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/460", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/460/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/460/events", "html_url": "https://github.com/imageio/imageio/issues/460", "id": 461242283, "node_id": "MDU6SXNzdWU0NjEyNDIyODM=", "number": 460, "title": "creation of ~/.imageio is not threadsafe", "user": {"login": "christopherhesse", "id": 440336, "node_id": "MDQ6VXNlcjQ0MDMzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/440336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christopherhesse", "html_url": "https://github.com/christopherhesse", "followers_url": "https://api.github.com/users/christopherhesse/followers", "following_url": "https://api.github.com/users/christopherhesse/following{/other_user}", "gists_url": "https://api.github.com/users/christopherhesse/gists{/gist_id}", "starred_url": "https://api.github.com/users/christopherhesse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christopherhesse/subscriptions", "organizations_url": "https://api.github.com/users/christopherhesse/orgs", "repos_url": "https://api.github.com/users/christopherhesse/repos", "events_url": "https://api.github.com/users/christopherhesse/events{/privacy}", "received_events_url": "https://api.github.com/users/christopherhesse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381939, "node_id": "MDU6TGFiZWwxNDMzODE5Mzk=", "url": "https://api.github.com/repos/imageio/imageio/labels/core", "name": "core", "color": "207de5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-27T00:27:00Z", "updated_at": "2019-08-01T11:42:24Z", "closed_at": "2019-08-01T09:05:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.7/threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"/opt/conda/lib/python3.7/threading.py\", line 865, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"segfault.py\", line 11, in make_iterator\r\n    r = imageio.get_reader(uri=\"imageio:cockatoo.mp4\", format=\"ffmpeg\")\r\n  File \"/opt/conda/lib/python3.7/site-packages/imageio/core/functions.py\", line 130, in get_reader\r\n    request = Request(uri, \"r\" + mode, **kwargs)\r\n  File \"/opt/conda/lib/python3.7/site-packages/imageio/core/request.py\", line 126, in __init__\r\n    self._parse_uri(uri)\r\n  File \"/opt/conda/lib/python3.7/site-packages/imageio/core/request.py\", line 154, in _parse_uri\r\n    self._filename = get_remote_file(\"images/\" + fn, auto=True)\r\n  File \"/opt/conda/lib/python3.7/site-packages/imageio/core/fetching.py\", line 69, in get_remote_file\r\n    directory = given_directory or appdata_dir(\"imageio\")\r\n  File \"/opt/conda/lib/python3.7/site-packages/imageio/core/util.py\", line 487, in appdata_dir\r\n    os.mkdir(path)\r\nFileExistsError: [Errno 17] File exists: '/root/.imageio'\r\n```\r\n\r\nProbably this could use `os.makedirs(path, exist_ok=True)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/449", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/449/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/449/events", "html_url": "https://github.com/imageio/imageio/issues/449", "id": 445438379, "node_id": "MDU6SXNzdWU0NDU0MzgzNzk=", "number": 449, "title": "Read TIF 3D from ImageJ", "user": {"login": "paulojamorim", "id": 808364, "node_id": "MDQ6VXNlcjgwODM2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/808364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulojamorim", "html_url": "https://github.com/paulojamorim", "followers_url": "https://api.github.com/users/paulojamorim/followers", "following_url": "https://api.github.com/users/paulojamorim/following{/other_user}", "gists_url": "https://api.github.com/users/paulojamorim/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulojamorim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulojamorim/subscriptions", "organizations_url": "https://api.github.com/users/paulojamorim/orgs", "repos_url": "https://api.github.com/users/paulojamorim/repos", "events_url": "https://api.github.com/users/paulojamorim/events{/privacy}", "received_events_url": "https://api.github.com/users/paulojamorim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-17T13:18:34Z", "updated_at": "2019-05-20T09:26:26Z", "closed_at": "2019-05-20T09:26:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI tried read a 3D TIF generated by ImageJ software but it open only first slice. The skimage io open all slices.\r\n\r\nI created a black image with 20 slices (400x400) in ImageJ to test: https://mega.nz/#!RDwi1Y7L!5kvIf7KukB6G2bfupznzbdMuVvENgx96o-AZ_UPB_iU\r\n\r\n```\r\nimg = imageio.imread('./imagej_file_sample.tif')\r\nprint(img.shape)\r\n(400, 400)\r\n```\r\n\r\nUsing skimage.io\r\n```\r\nfrom skimage import io\r\nimg = io.imread('./imagej_file_sample.tif')\r\nprint(img.shape)\r\n(20, 400, 400)\r\n```\r\n\r\nThanks in advance,\r\nPaulo Amorim", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/446", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/446/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/446/events", "html_url": "https://github.com/imageio/imageio/issues/446", "id": 443357639, "node_id": "MDU6SXNzdWU0NDMzNTc2Mzk=", "number": 446, "title": "Output is speed up", "user": {"login": "czapek1337", "id": 32851089, "node_id": "MDQ6VXNlcjMyODUxMDg5", "avatar_url": "https://avatars0.githubusercontent.com/u/32851089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czapek1337", "html_url": "https://github.com/czapek1337", "followers_url": "https://api.github.com/users/czapek1337/followers", "following_url": "https://api.github.com/users/czapek1337/following{/other_user}", "gists_url": "https://api.github.com/users/czapek1337/gists{/gist_id}", "starred_url": "https://api.github.com/users/czapek1337/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czapek1337/subscriptions", "organizations_url": "https://api.github.com/users/czapek1337/orgs", "repos_url": "https://api.github.com/users/czapek1337/repos", "events_url": "https://api.github.com/users/czapek1337/events{/privacy}", "received_events_url": "https://api.github.com/users/czapek1337/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-13T11:55:31Z", "updated_at": "2020-02-18T12:43:37Z", "closed_at": "2020-02-18T12:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "My code:\r\n```py\r\nfrom datetime import datetime\r\n\r\nimport time\r\nimport numpy as np\r\nimport imageio\r\n\r\nstart = datetime.now()\r\nend = start.replace(second=start.second + 15)\r\nwriter = imageio.get_writer('output.mp4', mode='I', fps=60)\r\ndata = np.random.uniform(0, 255, (1280, 720, 3))\r\n\r\nwhile datetime.now() < end:\r\n    time.sleep(1.0 / 60.0)\r\n    writer.append_data(data)\r\n\r\nwriter.close()\r\n```\r\n\r\nI expect this to be 15 seconds long at 60 frames per second. Instead we get 2 second long file at 60 frames per second. Tried with data that is constantly changing - the output is just speed up.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/445", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/445/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/445/events", "html_url": "https://github.com/imageio/imageio/issues/445", "id": 441948620, "node_id": "MDU6SXNzdWU0NDE5NDg2MjA=", "number": 445, "title": "PPM-FI not creating ASCII output", "user": {"login": "ttobsen", "id": 11912171, "node_id": "MDQ6VXNlcjExOTEyMTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/11912171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ttobsen", "html_url": "https://github.com/ttobsen", "followers_url": "https://api.github.com/users/ttobsen/followers", "following_url": "https://api.github.com/users/ttobsen/following{/other_user}", "gists_url": "https://api.github.com/users/ttobsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ttobsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ttobsen/subscriptions", "organizations_url": "https://api.github.com/users/ttobsen/orgs", "repos_url": "https://api.github.com/users/ttobsen/repos", "events_url": "https://api.github.com/users/ttobsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ttobsen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381070, "node_id": "MDU6TGFiZWwxNDMzODEwNzA=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20freeimage", "name": "plugin: freeimage", "color": "c7def8", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-05-08T21:54:34Z", "updated_at": "2019-05-18T21:56:06Z", "closed_at": "2019-05-18T21:56:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When ssing the PPM-FI format string, no ASCII output is created.\r\n\r\n```python\r\nimageio.imwrite(path, image_data, \"PPM-FI\")\r\n```\r\n\r\nProduces for example\r\n\r\n```\r\nP6\r\n200 100\r\n65535\r\n<binary data>\r\n```\r\n\r\nThis is the expected behavior when using PPMRAW-FI. The expected ASCII output would be something like \r\n\r\n```\r\nP3\r\n200 100\r\n65535\r\n1 2 3 4 5 6 ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/444", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/444/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/444/events", "html_url": "https://github.com/imageio/imageio/issues/444", "id": 440856731, "node_id": "MDU6SXNzdWU0NDA4NTY3MzE=", "number": 444, "title": "Switch from distutils to setuptools", "user": {"login": "clbarnes", "id": 8995328, "node_id": "MDQ6VXNlcjg5OTUzMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8995328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clbarnes", "html_url": "https://github.com/clbarnes", "followers_url": "https://api.github.com/users/clbarnes/followers", "following_url": "https://api.github.com/users/clbarnes/following{/other_user}", "gists_url": "https://api.github.com/users/clbarnes/gists{/gist_id}", "starred_url": "https://api.github.com/users/clbarnes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clbarnes/subscriptions", "organizations_url": "https://api.github.com/users/clbarnes/orgs", "repos_url": "https://api.github.com/users/clbarnes/repos", "events_url": "https://api.github.com/users/clbarnes/events{/privacy}", "received_events_url": "https://api.github.com/users/clbarnes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-06T19:46:11Z", "updated_at": "2019-05-06T20:14:44Z", "closed_at": "2019-05-06T20:14:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Distutils doesn't allow `pip uninstall`ing, which means that trying to `pip install --upgrade` doesn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/443", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/443/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/443/events", "html_url": "https://github.com/imageio/imageio/issues/443", "id": 435309749, "node_id": "MDU6SXNzdWU0MzUzMDk3NDk=", "number": 443, "title": "create requirements.txt with dev dependencies", "user": {"login": "clbarnes", "id": 8995328, "node_id": "MDQ6VXNlcjg5OTUzMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8995328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clbarnes", "html_url": "https://github.com/clbarnes", "followers_url": "https://api.github.com/users/clbarnes/followers", "following_url": "https://api.github.com/users/clbarnes/following{/other_user}", "gists_url": "https://api.github.com/users/clbarnes/gists{/gist_id}", "starred_url": "https://api.github.com/users/clbarnes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clbarnes/subscriptions", "organizations_url": "https://api.github.com/users/clbarnes/orgs", "repos_url": "https://api.github.com/users/clbarnes/repos", "events_url": "https://api.github.com/users/clbarnes/events{/privacy}", "received_events_url": "https://api.github.com/users/clbarnes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148609445, "node_id": "MDU6TGFiZWwxNDg2MDk0NDU=", "url": "https://api.github.com/repos/imageio/imageio/labels/docs", "name": "docs", "color": "207de5", "default": false, "description": null}, {"id": 38460461, "node_id": "MDU6TGFiZWwzODQ2MDQ2MQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20enhancement", "name": "type: enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-19T21:28:10Z", "updated_at": "2019-07-02T19:04:17Z", "closed_at": "2019-07-02T19:04:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "And document pre-commit checks a contributor should be doing (format testing etc.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/441", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/441/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/441/events", "html_url": "https://github.com/imageio/imageio/issues/441", "id": 432680514, "node_id": "MDU6SXNzdWU0MzI2ODA1MTQ=", "number": 441, "title": "can not open second camera when two camera have same name", "user": {"login": "One-sixth", "id": 23693633, "node_id": "MDQ6VXNlcjIzNjkzNjMz", "avatar_url": "https://avatars1.githubusercontent.com/u/23693633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/One-sixth", "html_url": "https://github.com/One-sixth", "followers_url": "https://api.github.com/users/One-sixth/followers", "following_url": "https://api.github.com/users/One-sixth/following{/other_user}", "gists_url": "https://api.github.com/users/One-sixth/gists{/gist_id}", "starred_url": "https://api.github.com/users/One-sixth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/One-sixth/subscriptions", "organizations_url": "https://api.github.com/users/One-sixth/orgs", "repos_url": "https://api.github.com/users/One-sixth/repos", "events_url": "https://api.github.com/users/One-sixth/events{/privacy}", "received_events_url": "https://api.github.com/users/One-sixth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-12T18:00:59Z", "updated_at": "2019-08-01T10:09:55Z", "closed_at": "2019-08-01T10:09:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "My system is windows 10.  \r\nI have two camera. It have same name 'USB Camera'.  \r\nI will get an error when I execute the following command.  \r\n```\r\ncam1 = imageio.get_reader('<video0>')\r\ncam2 = imageio.get_reader('<video1>')\r\n```\r\nI found the problem because the first names of the two cameras are the same, and using alternative name to open camera will avoid this problem.  \r\nI think imageio\\plugins\\ffmpeg.py\u2018s parse_device_names function needs to be modified to use alternative name.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/438", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/438/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/438/events", "html_url": "https://github.com/imageio/imageio/issues/438", "id": 421879381, "node_id": "MDU6SXNzdWU0MjE4NzkzODE=", "number": 438, "title": "read frames from ip camera", "user": {"login": "maylad31", "id": 26343773, "node_id": "MDQ6VXNlcjI2MzQzNzcz", "avatar_url": "https://avatars2.githubusercontent.com/u/26343773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maylad31", "html_url": "https://github.com/maylad31", "followers_url": "https://api.github.com/users/maylad31/followers", "following_url": "https://api.github.com/users/maylad31/following{/other_user}", "gists_url": "https://api.github.com/users/maylad31/gists{/gist_id}", "starred_url": "https://api.github.com/users/maylad31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maylad31/subscriptions", "organizations_url": "https://api.github.com/users/maylad31/orgs", "repos_url": "https://api.github.com/users/maylad31/repos", "events_url": "https://api.github.com/users/maylad31/events{/privacy}", "received_events_url": "https://api.github.com/users/maylad31/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-17T04:00:39Z", "updated_at": "2020-02-18T12:48:34Z", "closed_at": "2020-02-18T12:48:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to use get reader to read frames\r\n from ip camera", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/436", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/436/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/436/events", "html_url": "https://github.com/imageio/imageio/issues/436", "id": 413275933, "node_id": "MDU6SXNzdWU0MTMyNzU5MzM=", "number": 436, "title": "Add dependency for pathlib on Python 2.7 (for tifffile)", "user": {"login": "pmiddend", "id": 178496, "node_id": "MDQ6VXNlcjE3ODQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/178496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmiddend", "html_url": "https://github.com/pmiddend", "followers_url": "https://api.github.com/users/pmiddend/followers", "following_url": "https://api.github.com/users/pmiddend/following{/other_user}", "gists_url": "https://api.github.com/users/pmiddend/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmiddend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmiddend/subscriptions", "organizations_url": "https://api.github.com/users/pmiddend/orgs", "repos_url": "https://api.github.com/users/pmiddend/repos", "events_url": "https://api.github.com/users/pmiddend/events{/privacy}", "received_events_url": "https://api.github.com/users/pmiddend/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-22T07:24:45Z", "updated_at": "2020-02-18T12:49:20Z", "closed_at": "2020-02-18T12:49:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to build imageio with Python 2.7, but this fails because you're using `pathlib`:\r\n\r\n```\r\n/nix/store/msknadbwcwvm7n9lynl95yv4ialawf8g-python2.7-imageio-2.5.0/lib/python2.7/site-packages/imageio/core/functions.py:259: in imwrite\r\n    writer = get_writer(uri, format, \"i\", **kwargs)\r\n/nix/store/msknadbwcwvm7n9lynl95yv4ialawf8g-python2.7-imageio-2.5.0/lib/python2.7/site-packages/imageio/core/functions.py:187: in get_writer\r\n    return format.get_writer(request)\r\n/nix/store/msknadbwcwvm7n9lynl95yv4ialawf8g-python2.7-imageio-2.5.0/lib/python2.7/site-packages/imageio/core/format.py:178: in get_writer\r\n    return self.Writer(self, request)\r\n/nix/store/msknadbwcwvm7n9lynl95yv4ialawf8g-python2.7-imageio-2.5.0/lib/python2.7/site-packages/imageio/core/format.py:214: in __init__\r\n    self._open(**self.request.kwargs.copy())\r\n/nix/store/msknadbwcwvm7n9lynl95yv4ialawf8g-python2.7-imageio-2.5.0/lib/python2.7/site-packages/imageio/plugins/tifffile.py:285: in _open\r\n    load_lib()\r\n/nix/store/msknadbwcwvm7n9lynl95yv4ialawf8g-python2.7-imageio-2.5.0/lib/python2.7/site-packages/imageio/plugins/tifffile.py:36: in load_lib\r\n    from . import _tifffile\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    \"\"\"\r\n\r\n    from __future__ import division, print_function\r\n\r\n    import sys\r\n    import os\r\n    import io\r\n    import re\r\n    import glob\r\n    import math\r\n    import zlib\r\n    import time\r\n    import json\r\n    import enum\r\n    import struct\r\n>   import pathlib\r\nE   ImportError: No module named pathlib\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/434", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/434/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/434/events", "html_url": "https://github.com/imageio/imageio/issues/434", "id": 410460138, "node_id": "MDU6SXNzdWU0MTA0NjAxMzg=", "number": 434, "title": "Function to return list of readable formats?", "user": {"login": "0x00b1", "id": 315821, "node_id": "MDQ6VXNlcjMxNTgyMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/315821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0x00b1", "html_url": "https://github.com/0x00b1", "followers_url": "https://api.github.com/users/0x00b1/followers", "following_url": "https://api.github.com/users/0x00b1/following{/other_user}", "gists_url": "https://api.github.com/users/0x00b1/gists{/gist_id}", "starred_url": "https://api.github.com/users/0x00b1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0x00b1/subscriptions", "organizations_url": "https://api.github.com/users/0x00b1/orgs", "repos_url": "https://api.github.com/users/0x00b1/repos", "events_url": "https://api.github.com/users/0x00b1/events{/privacy}", "received_events_url": "https://api.github.com/users/0x00b1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-14T19:40:48Z", "updated_at": "2019-02-14T21:29:13Z", "closed_at": "2019-02-14T19:43:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a function to return a list of readable image or volume formats? Ideally I'd like something that returned something similar to the content on https://imageio.readthedocs.io/en/latest/formats.html. It would also be nice to have a function that tested whether a provided format is readable, e.g. `is_readable(\".png\")`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/431", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/431/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/431/events", "html_url": "https://github.com/imageio/imageio/issues/431", "id": 407164327, "node_id": "MDU6SXNzdWU0MDcxNjQzMjc=", "number": 431, "title": "Deprecating AVBIN plugin", "user": {"login": "almarklein", "id": 3015475, "node_id": "MDQ6VXNlcjMwMTU0NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3015475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/almarklein", "html_url": "https://github.com/almarklein", "followers_url": "https://api.github.com/users/almarklein/followers", "following_url": "https://api.github.com/users/almarklein/following{/other_user}", "gists_url": "https://api.github.com/users/almarklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/almarklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/almarklein/subscriptions", "organizations_url": "https://api.github.com/users/almarklein/orgs", "repos_url": "https://api.github.com/users/almarklein/repos", "events_url": "https://api.github.com/users/almarklein/events{/privacy}", "received_events_url": "https://api.github.com/users/almarklein/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381280, "node_id": "MDU6TGFiZWwxNDMzODEyODA=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20avbin", "name": "plugin: avbin", "color": "c7def8", "default": false, "description": null}, {"id": 223609055, "node_id": "MDU6TGFiZWwyMjM2MDkwNTU=", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20task", "name": "type: task", "color": "6339a0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-06T10:18:16Z", "updated_at": "2020-02-18T16:20:46Z", "closed_at": "2020-02-18T16:20:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Using the avbin plugin will no show a deprecation warning. Making this issue to remind myself that we should remove it at some point. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/424", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/424/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/424/events", "html_url": "https://github.com/imageio/imageio/issues/424", "id": 406130055, "node_id": "MDU6SXNzdWU0MDYxMzAwNTU=", "number": 424, "title": "Failure to write when using a file for plugins using get_local_filename", "user": {"login": "MakarovDi", "id": 2410102, "node_id": "MDQ6VXNlcjI0MTAxMDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2410102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MakarovDi", "html_url": "https://github.com/MakarovDi", "followers_url": "https://api.github.com/users/MakarovDi/followers", "following_url": "https://api.github.com/users/MakarovDi/following{/other_user}", "gists_url": "https://api.github.com/users/MakarovDi/gists{/gist_id}", "starred_url": "https://api.github.com/users/MakarovDi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MakarovDi/subscriptions", "organizations_url": "https://api.github.com/users/MakarovDi/orgs", "repos_url": "https://api.github.com/users/MakarovDi/repos", "events_url": "https://api.github.com/users/MakarovDi/events{/privacy}", "received_events_url": "https://api.github.com/users/MakarovDi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381939, "node_id": "MDU6TGFiZWwxNDMzODE5Mzk=", "url": "https://api.github.com/repos/imageio/imageio/labels/core", "name": "core", "color": "207de5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-03T20:57:40Z", "updated_at": "2019-02-06T09:55:11Z", "closed_at": "2019-02-06T09:55:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nIt's said in the [docs](https://imageio.readthedocs.io/en/stable/userapi.html#imageio.imwrite) that I can use file objects for imread/imwrite functions\r\nbut actually it's only true for PIL, so this code \r\n```python\r\nimport imageio\r\nimport numpy as np\r\n\r\nimage = np.random.randint(0, 65535, size=[512, 512], dtype=np.uint16)\r\n\r\nwith open('test.png', 'wb') as f:\r\n    imageio.imwrite(f, image, format='PNG-FI')\r\n```\r\ncreates an empty file without any exception or warning.\r\n\r\nIt would be great to have the binary streams support like file/BytesIO for FI.\r\n\r\n```\r\nimageio: v2.4.1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/423", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/423/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/423/events", "html_url": "https://github.com/imageio/imageio/issues/423", "id": 405422785, "node_id": "MDU6SXNzdWU0MDU0MjI3ODU=", "number": 423, "title": "Error while fetching file: HTTP Error 404: Not Found. ", "user": {"login": "rec99", "id": 1505756, "node_id": "MDQ6VXNlcjE1MDU3NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1505756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rec99", "html_url": "https://github.com/rec99", "followers_url": "https://api.github.com/users/rec99/followers", "following_url": "https://api.github.com/users/rec99/following{/other_user}", "gists_url": "https://api.github.com/users/rec99/gists{/gist_id}", "starred_url": "https://api.github.com/users/rec99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rec99/subscriptions", "organizations_url": "https://api.github.com/users/rec99/orgs", "repos_url": "https://api.github.com/users/rec99/repos", "events_url": "https://api.github.com/users/rec99/events{/privacy}", "received_events_url": "https://api.github.com/users/rec99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-31T20:23:25Z", "updated_at": "2019-02-02T08:19:00Z", "closed_at": "2019-02-01T09:54:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nIn python scrip starts with:\r\n```\r\nimport imageio\r\n\r\nimageio.plugins.ffmpeg.download()\r\n```\r\non Ubuntu and Win machines the script stops with exception:\r\n```\r\nImageio: 'ffmpeg.win32.exe' was not found on your computer; downloading it now.\r\nError while fetching file: HTTP Error 404: Not Found.\r\nError while fetching file: HTTP Error 404: Not Found.\r\nError while fetching file: HTTP Error 404: Not Found.\r\nError while fetching file: HTTP Error 404: Not Found.\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 11, in <module>\r\n    imageio.plugins.ffmpeg.download()\r\n  File \"C:\\Users\\ilya\\Desktop\\ins\\.venv\\lib\\site-packages\\imageio\\plugins\\ffmpeg.py\", line 55, in download\r\n    get_remote_file('ffmpeg/' + FNAME_PER_PLATFORM[plat])\r\n  File \"C:\\Users\\ilya\\Desktop\\telegram-insta-bot\\.venv\\lib\\site-packages\\imageio\\core\\fetching.py\", line 121, in get_remote_file\r\n    _fetch_file(url, filename)\r\n  File \"C:\\Users\\ilya\\Desktop\\ins\\.venv\\lib\\site-packages\\imageio\\core\\fetching.py\", line 177, in _fetch_file\r\n    os.path.basename(file_name))\r\nOSError: Unable to download 'ffmpeg.win32.exe'. Perhaps there is a no internet connection? If there is, please report this problem.\r\n```\r\nI was try to manually change the _url_root in get_remote_file to` 'https://github.com/imageio/imageio-binaries/'` instead of `'https://github.com/imageio/imageio-binaries/raw/master/'` but it is didn't help.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/422", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/422/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/422/events", "html_url": "https://github.com/imageio/imageio/issues/422", "id": 403411428, "node_id": "MDU6SXNzdWU0MDM0MTE0Mjg=", "number": 422, "title": "Wrong error message in plugins/ffmpeg.py", "user": {"login": "mpokryva", "id": 14366106, "node_id": "MDQ6VXNlcjE0MzY2MTA2", "avatar_url": "https://avatars3.githubusercontent.com/u/14366106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpokryva", "html_url": "https://github.com/mpokryva", "followers_url": "https://api.github.com/users/mpokryva/followers", "following_url": "https://api.github.com/users/mpokryva/following{/other_user}", "gists_url": "https://api.github.com/users/mpokryva/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpokryva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpokryva/subscriptions", "organizations_url": "https://api.github.com/users/mpokryva/orgs", "repos_url": "https://api.github.com/users/mpokryva/repos", "events_url": "https://api.github.com/users/mpokryva/events{/privacy}", "received_events_url": "https://api.github.com/users/mpokryva/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-26T06:08:32Z", "updated_at": "2019-02-05T21:56:47Z", "closed_at": "2019-02-05T21:56:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "In lines 429-430 of plugins/ffmpeg/py, https://github.com/imageio/imageio/blob/961160b1494f5848571903431481cac7c55ff3e4/imageio/plugins/ffmpeg.py#L429-L430\r\n\r\nthe error message should be changed to \"Frame index must be >=0\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/421", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/421/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/421/events", "html_url": "https://github.com/imageio/imageio/issues/421", "id": 401965672, "node_id": "MDU6SXNzdWU0MDE5NjU2NzI=", "number": 421, "title": "Exposure value written incorrectly for HDR-FI format", "user": {"login": "NoRoKr", "id": 33381318, "node_id": "MDQ6VXNlcjMzMzgxMzE4", "avatar_url": "https://avatars1.githubusercontent.com/u/33381318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NoRoKr", "html_url": "https://github.com/NoRoKr", "followers_url": "https://api.github.com/users/NoRoKr/followers", "following_url": "https://api.github.com/users/NoRoKr/following{/other_user}", "gists_url": "https://api.github.com/users/NoRoKr/gists{/gist_id}", "starred_url": "https://api.github.com/users/NoRoKr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NoRoKr/subscriptions", "organizations_url": "https://api.github.com/users/NoRoKr/orgs", "repos_url": "https://api.github.com/users/NoRoKr/repos", "events_url": "https://api.github.com/users/NoRoKr/events{/privacy}", "received_events_url": "https://api.github.com/users/NoRoKr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381070, "node_id": "MDU6TGFiZWwxNDMzODEwNzA=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20freeimage", "name": "plugin: freeimage", "color": "c7def8", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-22T21:39:33Z", "updated_at": "2019-01-25T22:09:58Z", "closed_at": "2019-01-25T22:09:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Exposure value is a scalar multiplier. By default, writing to HDR images seems to result in files with exposure = 0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/420", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/420/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/420/events", "html_url": "https://github.com/imageio/imageio/issues/420", "id": 396983218, "node_id": "MDU6SXNzdWUzOTY5ODMyMTg=", "number": 420, "title": "Latest release does not contain commits", "user": {"login": "addisonElliott", "id": 1342819, "node_id": "MDQ6VXNlcjEzNDI4MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1342819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/addisonElliott", "html_url": "https://github.com/addisonElliott", "followers_url": "https://api.github.com/users/addisonElliott/followers", "following_url": "https://api.github.com/users/addisonElliott/following{/other_user}", "gists_url": "https://api.github.com/users/addisonElliott/gists{/gist_id}", "starred_url": "https://api.github.com/users/addisonElliott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/addisonElliott/subscriptions", "organizations_url": "https://api.github.com/users/addisonElliott/orgs", "repos_url": "https://api.github.com/users/addisonElliott/repos", "events_url": "https://api.github.com/users/addisonElliott/events{/privacy}", "received_events_url": "https://api.github.com/users/addisonElliott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-08T16:26:05Z", "updated_at": "2019-01-09T11:58:03Z", "closed_at": "2019-01-09T11:58:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Correct me if I'm wrong, but I authored a PR back in October of last year (#388) and a release has been published since then but does not contain my commit.\r\n\r\nMaybe I'm going crazy, but it all seems very confusing. Let me walk you through what I mean...\r\n\r\nFirst, if you look at the master branch, it shows my commit fine. Line 574 of the pillow.py plugin, you can see the \"rawmode_saved\" code I added to fix a special case. [https://github.com/imageio/imageio/blob/master/imageio/plugins/pillow.py#L574](https://github.com/imageio/imageio/blob/master/imageio/plugins/pillow.py#L574)\r\n\r\nMy PR was merged October 1, 2018. Version 2.4.1 was released on November 15th, 2018. Thus, my changes should be in v2.4.1.\r\n\r\nDownloading the source directly from PyPi for v2.4.1, I look at the same file and my changes are not there.\r\n![Screenshot](https://i.imgur.com/1GugSU7.png)\r\n\r\n# Solution\r\nProbably just release another version? Luckily I don't **need** these changes now but just wanted to bring to your attention.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/416", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/416/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/416/events", "html_url": "https://github.com/imageio/imageio/issues/416", "id": 391490827, "node_id": "MDU6SXNzdWUzOTE0OTA4Mjc=", "number": 416, "title": "[security issue] You have to check file fingerprints after you download them", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460461, "node_id": "MDU6TGFiZWwzODQ2MDQ2MQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20enhancement", "name": "type: enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-16T18:05:28Z", "updated_at": "2019-02-05T21:56:47Z", "closed_at": "2019-02-05T21:56:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The function ```get_remote_file``` (here https://github.com/imageio/imageio/blob/master/imageio/core/fetching.py#L35) downloads files from the Internet without checking their fingerprints. For example, it downloads the ```ffmpeg``` executable.\r\n\r\nPlease note that just having ```https``` in the URL isn't a guarantee that the file is downloaded from the intended location. https certificate verification can be subverted, and can't be relied on. One example is that governments can subvert it systematically: https://news.ycombinator.com/item?id=10663843 But there could also be compromised certification authorities, and hacked connections.\r\n\r\nYou need to store and check cryptographic fingerprints of all downloaded files, or, better just depend on pre-installed executables. For example, ```ffmpeg``` packages exist on virtually all systems.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/415", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/415/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/415/events", "html_url": "https://github.com/imageio/imageio/issues/415", "id": 390707562, "node_id": "MDU6SXNzdWUzOTA3MDc1NjI=", "number": 415, "title": "Warning: the frame size for reading (864, 1080) is different from the source frame size (1792, 1080)", "user": {"login": "rodolpheg", "id": 3439042, "node_id": "MDQ6VXNlcjM0MzkwNDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3439042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodolpheg", "html_url": "https://github.com/rodolpheg", "followers_url": "https://api.github.com/users/rodolpheg/followers", "following_url": "https://api.github.com/users/rodolpheg/following{/other_user}", "gists_url": "https://api.github.com/users/rodolpheg/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodolpheg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodolpheg/subscriptions", "organizations_url": "https://api.github.com/users/rodolpheg/orgs", "repos_url": "https://api.github.com/users/rodolpheg/repos", "events_url": "https://api.github.com/users/rodolpheg/events{/privacy}", "received_events_url": "https://api.github.com/users/rodolpheg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-13T14:38:27Z", "updated_at": "2020-02-18T13:26:09Z", "closed_at": "2020-02-18T13:26:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When reading some videos, I get this warning:\r\n\r\n> WARNING:root:Warning: the frame size for reading (864, 1080) is\r\n> different from the source frame size (1792, 1080).\r\n\r\nand the exported image looks like this. As I try to export a frame to look at what is going on, I get this:\r\n\r\n[![enter image description here][1]][1]\r\n\r\nHere is my code:\r\n\r\n    import imageio\r\n    #imageio.plugins.ffmpeg.download()\r\n    import numpy as np\r\n    from PIL import Image, ImageFilter, ImageFont, ImageDraw\r\n    \r\n    reader = imageio.get_reader('movie.mkv')\r\n    for i, im in enumerate(reader):\r\n    \timag = Image.fromarray(im)\r\n    \timag.save(\"image.jpg\")\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/62cv7.jpg\r\n\r\nIt looks like the height and width are mixed up, while the image itself still tries to fit within the frame. Is this a known bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/412", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/412/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/412/events", "html_url": "https://github.com/imageio/imageio/issues/412", "id": 380860158, "node_id": "MDU6SXNzdWUzODA4NjAxNTg=", "number": 412, "title": "Citing imageio in paper", "user": {"login": "djhoese", "id": 1828519, "node_id": "MDQ6VXNlcjE4Mjg1MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1828519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djhoese", "html_url": "https://github.com/djhoese", "followers_url": "https://api.github.com/users/djhoese/followers", "following_url": "https://api.github.com/users/djhoese/following{/other_user}", "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}", "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions", "organizations_url": "https://api.github.com/users/djhoese/orgs", "repos_url": "https://api.github.com/users/djhoese/repos", "events_url": "https://api.github.com/users/djhoese/events{/privacy}", "received_events_url": "https://api.github.com/users/djhoese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-14T19:51:55Z", "updated_at": "2018-11-15T08:26:57Z", "closed_at": "2018-11-15T08:26:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "My team is writing a paper for our software that uses imageio and would like to cite imageio. Is there a DOI or other way you want it referenced? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/410", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/410/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/410/events", "html_url": "https://github.com/imageio/imageio/issues/410", "id": 380519485, "node_id": "MDU6SXNzdWUzODA1MTk0ODU=", "number": 410, "title": "Caret (^) symbols need to be escaped when passed to ffmpeg on the command line", "user": {"login": "cdusold", "id": 5400213, "node_id": "MDQ6VXNlcjU0MDAyMTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5400213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdusold", "html_url": "https://github.com/cdusold", "followers_url": "https://api.github.com/users/cdusold/followers", "following_url": "https://api.github.com/users/cdusold/following{/other_user}", "gists_url": "https://api.github.com/users/cdusold/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdusold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdusold/subscriptions", "organizations_url": "https://api.github.com/users/cdusold/orgs", "repos_url": "https://api.github.com/users/cdusold/repos", "events_url": "https://api.github.com/users/cdusold/events{/privacy}", "received_events_url": "https://api.github.com/users/cdusold/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-14T03:24:17Z", "updated_at": "2018-11-15T08:12:19Z", "closed_at": "2018-11-15T08:12:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is kind of a rare edge case, but an easy fix. If a path includes the character sequence `^^` it will become a single caret when passed to FFMPEG. This causes the FFMPEG plugin to say that there is no file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/406", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/406/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/406/events", "html_url": "https://github.com/imageio/imageio/issues/406", "id": 377883256, "node_id": "MDU6SXNzdWUzNzc4ODMyNTY=", "number": 406, "title": "(re)new plugin for video", "user": {"login": "almarklein", "id": 3015475, "node_id": "MDQ6VXNlcjMwMTU0NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3015475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/almarklein", "html_url": "https://github.com/almarklein", "followers_url": "https://api.github.com/users/almarklein/followers", "following_url": "https://api.github.com/users/almarklein/following{/other_user}", "gists_url": "https://api.github.com/users/almarklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/almarklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/almarklein/subscriptions", "organizations_url": "https://api.github.com/users/almarklein/orgs", "repos_url": "https://api.github.com/users/almarklein/repos", "events_url": "https://api.github.com/users/almarklein/events{/privacy}", "received_events_url": "https://api.github.com/users/almarklein/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381280, "node_id": "MDU6TGFiZWwxNDMzODEyODA=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20avbin", "name": "plugin: avbin", "color": "c7def8", "default": false, "description": null}, {"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-11-06T14:56:11Z", "updated_at": "2019-02-05T21:56:46Z", "closed_at": "2019-02-05T21:56:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We currently have two formats for video. Avbin and ffmpeg. Avbin wraps a binary from 2012, so we should probably deprecate that. We have quite a bit of problems with the ffmpeg plugin, most notably the difficulty of retrieving the right fps and number of frames. In this issue I hope to get some ideas of what our options are ... please discuss.\r\n\r\n* In #115 we suggested to use [PyAv](https://github.com/mikeboers/PyAV). But it's (now) basically conda-only, and I am reluctant to force ppl to use that.\r\n* Maybe we can help PyAv with automating the building of their binary wheels?\r\n* It has been suggested to use `ffprobe` to collect metadata about a video file. Although this adds another dependency, it's kinda part of ffmpeg, and maybe it can solve most our issues.\r\n* @hmaarrfk, you mentioned pyffmpeg, I see two of these on Github. Would it be worth depending on something like that? Or examine the code and improve our ffmpeg plugin based on what we learn?\r\n* Other ideas?\r\n\r\nIf anyone is eager to champion this effort, that would be great \ud83d\udc4d !\r\n\r\ncc @hmaarrfk @kuchi @Zulko @ghisvail \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/397", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/397/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/397/events", "html_url": "https://github.com/imageio/imageio/issues/397", "id": 375075840, "node_id": "MDU6SXNzdWUzNzUwNzU4NDA=", "number": 397, "title": "imageio writes grayscales uint8 bmp images slowly", "user": {"login": "hmaarrfk", "id": 90008, "node_id": "MDQ6VXNlcjkwMDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/90008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmaarrfk", "html_url": "https://github.com/hmaarrfk", "followers_url": "https://api.github.com/users/hmaarrfk/followers", "following_url": "https://api.github.com/users/hmaarrfk/following{/other_user}", "gists_url": "https://api.github.com/users/hmaarrfk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmaarrfk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmaarrfk/subscriptions", "organizations_url": "https://api.github.com/users/hmaarrfk/orgs", "repos_url": "https://api.github.com/users/hmaarrfk/repos", "events_url": "https://api.github.com/users/hmaarrfk/events{/privacy}", "received_events_url": "https://api.github.com/users/hmaarrfk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495624726, "node_id": "MDU6TGFiZWw0OTU2MjQ3MjY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20pillow", "name": "plugin: pillow", "color": "c5def5", "default": false, "description": null}, {"id": 38460461, "node_id": "MDU6TGFiZWwzODQ2MDQ2MQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20enhancement", "name": "type: enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-29T15:32:47Z", "updated_at": "2018-11-06T11:12:56Z", "closed_at": "2018-11-06T11:12:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "What backend is imageio using for bmp images? I assumed it was pillow, but my benchmarks show me that something else is happening:\r\n\r\n```\r\n[ 75.00%] \u00b7\u00b7\u00b7 benchmark_bmp.BMPSuite.time_load                                                                                                              ok\r\n[ 75.00%] \u00b7\u00b7\u00b7 ================ ============= ============ =============\r\n              --                                 mode                  \r\n              ---------------- ----------------------------------------\r\n                   shape           redpil       pillow       imageio   \r\n              ================ ============= ============ =============\r\n                 (128, 128)      131\u00b10.8\u03bcs     280\u00b18\u03bcs       139\u00b12\u03bcs   \r\n                (1024, 1024)      199\u00b13\u03bcs     753\u00b1200\u03bcs      196\u00b16\u03bcs   \r\n                (2048, 4096)    1.68\u00b10.04ms   3.02\u00b10.2ms   1.65\u00b10.05ms \r\n               (32768, 32768)     355\u00b110ms     229\u00b14\u03bcs       370\u00b120ms  \r\n              ================ ============= ============ =============\r\n\r\n[100.00%] \u00b7\u00b7\u00b7 benchmark_bmp.BMPSuite.time_save                                                                                                              ok\r\n[100.00%] \u00b7\u00b7\u00b7 ================ ============ ============ ============\r\n              --                                mode                 \r\n              ---------------- --------------------------------------\r\n                   shape          redpil       pillow      imageio   \r\n              ================ ============ ============ ============\r\n                 (128, 128)      100\u00b17\u03bcs      255\u00b120\u03bcs     372\u00b130\u03bcs  \r\n                (1024, 1024)    791\u00b1100\u03bcs    1.67\u00b10.3ms   1.71\u00b10.2ms \r\n                (2048, 4096)    4.72\u00b10.2ms   5.25\u00b10.1ms   12.6\u00b10.9ms \r\n               (32768, 32768)    505\u00b140ms     509\u00b110ms    1.35\u00b10.1s  \r\n              ================ ============ ============ ============\r\n```\r\n\r\nBenchmarks taken from: https://github.com/hmaarrfk/redpil redpil still doesn't fully support bmp images, but the gap seems to be from a memory copy for file seek.\r\n\r\nSeems suspicious that it is taking exactly 3 times as much time.\r\n\r\nI can confirm that they all output files of the same size.\r\n\r\n<details> <summary>Stub code to show that all files are of same size</summary>\r\nImage can be found:  https://github.com/hmaarrfk/redpil/blob/master/tests/bmpsuite/g/pal8gs.bmp\r\n\r\n\r\n```python\r\nimport imageio\r\na = imageio.imread('pal8gs.bmp')\r\nimport imageio\r\nimageio.imwrite('test_imageio.bmp', a)\r\n# from redpil.bmp import imwrite\r\n# imwrite('test_redpil.bmp', a)\r\n\r\np = Image.fromarray(a)\r\np.save('pillow.bmp')\r\n```\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/396", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/396/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/396/events", "html_url": "https://github.com/imageio/imageio/issues/396", "id": 375033149, "node_id": "MDU6SXNzdWUzNzUwMzMxNDk=", "number": 396, "title": "imageio gives bogus image on bmpsuite test image", "user": {"login": "hmaarrfk", "id": 90008, "node_id": "MDQ6VXNlcjkwMDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/90008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmaarrfk", "html_url": "https://github.com/hmaarrfk", "followers_url": "https://api.github.com/users/hmaarrfk/followers", "following_url": "https://api.github.com/users/hmaarrfk/following{/other_user}", "gists_url": "https://api.github.com/users/hmaarrfk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmaarrfk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmaarrfk/subscriptions", "organizations_url": "https://api.github.com/users/hmaarrfk/orgs", "repos_url": "https://api.github.com/users/hmaarrfk/repos", "events_url": "https://api.github.com/users/hmaarrfk/events{/privacy}", "received_events_url": "https://api.github.com/users/hmaarrfk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-29T14:07:57Z", "updated_at": "2018-11-06T14:58:38Z", "closed_at": "2018-11-06T12:23:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So i'm playing around with bmp images and I found this:\r\n\r\n```python\r\nimport imageio\r\n\r\nimage_pil = imageio.imread('https://raw.githubusercontent.com/python-pillow/Pillow/master/Tests/images/bmp/g/pal8.bmp')\r\n\r\nfrom matplotlib import pyplot\r\npyplot.imshow(image_pil)\r\npyplot.show()\r\n```\r\n![image](https://user-images.githubusercontent.com/90008/47654585-7e2d2a80-db61-11e8-9a4d-b9bb6b85343d.png)\r\n\r\nThe top left pixel should be red `[255, 0, 0]`, clearly it isn't.\r\n\r\nThis is a pretty tricky image since it is paletted with 252 colors (not 256)\r\n```\r\nheader: [(b'BM', 9254, 0, 0, 1062)]\r\ninfo_header: [(40, 127, 64, 1, 8, 0, 8192, 2835, 2835, 252, 0)]\r\ncolor_table:\r\n[[  0   0   0   0]\r\n [  0   0  51   0]\r\n [  0   0 102   0]\r\n ...\r\n [255 255 153   0]\r\n [255 255 204   0]\r\n [255 255 255   0]]\r\ncolor_table.shape\r\n(252, 4)\r\n```\r\n\r\n* imageio version: 2.3.0\r\n* Pillow version: 5.3.0\r\n\r\n\r\nShameless plug: https://github.com/hmaarrfk/redpil will read it correctly and will read grayscale images 3x as fast as pillow. It is hard to keep developing this without ground truth. Maybe i'll try to use opencv to compare loading images, but adding opencv as a test dependency is huge...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/395", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/395/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/395/events", "html_url": "https://github.com/imageio/imageio/issues/395", "id": 374661206, "node_id": "MDU6SXNzdWUzNzQ2NjEyMDY=", "number": 395, "title": "Don't make the tests depend on an active internet connection", "user": {"login": "pmiddend", "id": 178496, "node_id": "MDQ6VXNlcjE3ODQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/178496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmiddend", "html_url": "https://github.com/pmiddend", "followers_url": "https://api.github.com/users/pmiddend/followers", "following_url": "https://api.github.com/users/pmiddend/following{/other_user}", "gists_url": "https://api.github.com/users/pmiddend/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmiddend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmiddend/subscriptions", "organizations_url": "https://api.github.com/users/pmiddend/orgs", "repos_url": "https://api.github.com/users/pmiddend/repos", "events_url": "https://api.github.com/users/pmiddend/events{/privacy}", "received_events_url": "https://api.github.com/users/pmiddend/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-10-27T16:09:44Z", "updated_at": "2018-11-05T09:29:53Z", "closed_at": "2018-11-05T09:29:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "While trying to package imageio for the NixOS Linux distribution (see https://github.com/NixOS/nixpkgs/pull/49147), I ran across a problem: the tests seem to only run with a functioning internet connection. This is really unhandy when it comes to packaging with the tests enabled. Can't the images be part of the imageio distribution?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/394", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/394/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/394/events", "html_url": "https://github.com/imageio/imageio/issues/394", "id": 370877498, "node_id": "MDU6SXNzdWUzNzA4Nzc0OTg=", "number": 394, "title": "volwrite comment is invalid", "user": {"login": "YamadaTakahito", "id": 17844217, "node_id": "MDQ6VXNlcjE3ODQ0MjE3", "avatar_url": "https://avatars2.githubusercontent.com/u/17844217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YamadaTakahito", "html_url": "https://github.com/YamadaTakahito", "followers_url": "https://api.github.com/users/YamadaTakahito/followers", "following_url": "https://api.github.com/users/YamadaTakahito/following{/other_user}", "gists_url": "https://api.github.com/users/YamadaTakahito/gists{/gist_id}", "starred_url": "https://api.github.com/users/YamadaTakahito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YamadaTakahito/subscriptions", "organizations_url": "https://api.github.com/users/YamadaTakahito/orgs", "repos_url": "https://api.github.com/users/YamadaTakahito/repos", "events_url": "https://api.github.com/users/YamadaTakahito/events{/privacy}", "received_events_url": "https://api.github.com/users/YamadaTakahito/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148609445, "node_id": "MDU6TGFiZWwxNDg2MDk0NDU=", "url": "https://api.github.com/repos/imageio/imageio/labels/docs", "name": "docs", "color": "207de5", "default": false, "description": null}, {"id": 223609055, "node_id": "MDU6TGFiZWwyMjM2MDkwNTU=", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20task", "name": "type: task", "color": "6339a0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-17T02:55:13Z", "updated_at": "2018-11-06T22:24:07Z", "closed_at": "2018-11-06T22:24:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/imageio/imageio/blob/1e08c70ce38b8607fbc528d91f1b604bec4c7a88/imageio/core/functions.py#L395-L406", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/393", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/393/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/393/events", "html_url": "https://github.com/imageio/imageio/issues/393", "id": 370807279, "node_id": "MDU6SXNzdWUzNzA4MDcyNzk=", "number": 393, "title": "Feature request: use np.asarray in imwrite", "user": {"login": "hmaarrfk", "id": 90008, "node_id": "MDQ6VXNlcjkwMDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/90008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmaarrfk", "html_url": "https://github.com/hmaarrfk", "followers_url": "https://api.github.com/users/hmaarrfk/followers", "following_url": "https://api.github.com/users/hmaarrfk/following{/other_user}", "gists_url": "https://api.github.com/users/hmaarrfk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmaarrfk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmaarrfk/subscriptions", "organizations_url": "https://api.github.com/users/hmaarrfk/orgs", "repos_url": "https://api.github.com/users/hmaarrfk/repos", "events_url": "https://api.github.com/users/hmaarrfk/events{/privacy}", "received_events_url": "https://api.github.com/users/hmaarrfk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381939, "node_id": "MDU6TGFiZWwxNDMzODE5Mzk=", "url": "https://api.github.com/repos/imageio/imageio/labels/core", "name": "core", "color": "207de5", "default": false, "description": null}, {"id": 38460461, "node_id": "MDU6TGFiZWwzODQ2MDQ2MQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20enhancement", "name": "type: enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-16T21:27:48Z", "updated_at": "2019-02-05T22:52:30Z", "closed_at": "2019-02-05T22:52:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would you consider using `np.asarray` in `imwrite` to coerce things into a numpy array?\r\n\r\nhttps://github.com/imageio/imageio/blob/1e08c70ce38b8607fbc528d91f1b604bec4c7a88/imageio/core/functions.py#L247\r\n\r\nWriting dask arrays or xarrays would become more convenient among other things.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/392", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/392/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/392/events", "html_url": "https://github.com/imageio/imageio/issues/392", "id": 369278936, "node_id": "MDU6SXNzdWUzNjkyNzg5MzY=", "number": 392, "title": "ffmpeg plugin computes nframes incorrectly", "user": {"login": "headdab", "id": 1169194, "node_id": "MDQ6VXNlcjExNjkxOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1169194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/headdab", "html_url": "https://github.com/headdab", "followers_url": "https://api.github.com/users/headdab/followers", "following_url": "https://api.github.com/users/headdab/following{/other_user}", "gists_url": "https://api.github.com/users/headdab/gists{/gist_id}", "starred_url": "https://api.github.com/users/headdab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/headdab/subscriptions", "organizations_url": "https://api.github.com/users/headdab/orgs", "repos_url": "https://api.github.com/users/headdab/repos", "events_url": "https://api.github.com/users/headdab/events{/privacy}", "received_events_url": "https://api.github.com/users/headdab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-11T19:50:25Z", "updated_at": "2019-02-05T23:38:20Z", "closed_at": "2019-02-05T23:38:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code is not right.   In my specific case, I have a video that has 5464 frames for which this computation returns 5474.  This results in the most basic code, i.e. a simple loop over reader frames to fail.\r\n\r\n```\r\n           # Estimate nframes\r\n            self._meta[\"nframes\"] = np.inf\r\n            if self._meta[\"fps\"] > 0 and \"duration\" in self._meta:\r\n                n = int(round(self._meta[\"duration\"] * self._meta[\"fps\"]))\r\n                self._meta[\"nframes\"] = n\r\n```\r\n\r\nI think I understand how you are computing this, from the first few lines printed out when ffmpeg starts up, but you should get these parameters from the metadata stored in the file using ffprobe.  For example, run\r\n\r\n    `ffprobe -hide_banner -loglevel error -of flat -show_streams VIDEO.mp4`\r\n\r\nand look for 'nb_frames'.  I'm not sure if you need fps for imageio, but the relationship between the number of frames, fps, and duration is sometimes not exact.  I've found that using nb_frames to be the most reliable measure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/391", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/391/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/391/events", "html_url": "https://github.com/imageio/imageio/issues/391", "id": 368732416, "node_id": "MDU6SXNzdWUzNjg3MzI0MTY=", "number": 391, "title": "Cannot read webcam on macOS", "user": {"login": "florianletsch", "id": 1116784, "node_id": "MDQ6VXNlcjExMTY3ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1116784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florianletsch", "html_url": "https://github.com/florianletsch", "followers_url": "https://api.github.com/users/florianletsch/followers", "following_url": "https://api.github.com/users/florianletsch/following{/other_user}", "gists_url": "https://api.github.com/users/florianletsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/florianletsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florianletsch/subscriptions", "organizations_url": "https://api.github.com/users/florianletsch/orgs", "repos_url": "https://api.github.com/users/florianletsch/repos", "events_url": "https://api.github.com/users/florianletsch/events{/privacy}", "received_events_url": "https://api.github.com/users/florianletsch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-10T15:48:03Z", "updated_at": "2020-02-18T23:01:58Z", "closed_at": "2020-02-18T15:34:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following the [webcam example in the docs](https://imageio.readthedocs.io/en/stable/examples.html#grab-frames-from-your-webcam), I am trying to access the webcam on my MacBook (external Logitech camera attached).\r\n\r\n```\r\nimport imageio\r\nreader = imageio.get_reader('<video0>')\r\n\r\n# ... long error message (see full listing below)\r\n# IndexError: No video4linux camera at <video0>.\r\n```\r\n\r\nThis call fails with quite an extensive error message (see below)\r\n\r\nffmpeg 4.0.2 is installed from homebrew (`brew install ffmpeg`).\r\n\r\n```\r\nffmpeg\r\nffmpeg version 4.0.2 Copyright (c) 2000-2018 the FFmpeg developers\r\n  built with Apple LLVM version 10.0.0 (clang-1000.10.43.1)\r\n  configuration: --prefix=/usr/local/Cellar/ffmpeg/4.0.2 --enable-shared --enable-pthreads --enable-version3 --enable-hardcoded-tables --enable-avresample --cc=clang --host-cflags= --host-ldflags= --enable-gpl --enable-libmp3lame --enable-libx264 --enable-libxvid --enable-opencl --enable-videotoolbox --disable-lzma\r\n  libavutil      56. 14.100 / 56. 14.100\r\n  libavcodec     58. 18.100 / 58. 18.100\r\n  libavformat    58. 12.100 / 58. 12.100\r\n  libavdevice    58.  3.100 / 58.  3.100\r\n  libavfilter     7. 16.100 /  7. 16.100\r\n  libavresample   4.  0.  0 /  4.  0.  0\r\n  libswscale      5.  1.100 /  5.  1.100\r\n  libswresample   3.  1.100 /  3.  1.100\r\n  libpostproc    55.  1.100 / 55.  1.100\r\nHyper fast Audio and Video encoder\r\nusage: ffmpeg [options] [[infile options] -i infile]... {[outfile options] outfile}...\r\n\r\nUse -h to get full help or, even better, run 'man ffmpeg'\r\n```\r\n\r\nIs this related to ffmpeg or imageio?\r\n\r\nHow can I check if ffmpeg itself is able to read the webcam properly?\r\n\r\nError message:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-3-71e67521605e> in <module>\r\n----> 1 reader = imageio.get_reader('<video0>')\r\n\r\n~/miniconda3/envs/test-imageio/lib/python3.6/site-packages/imageio/core/functions.py in get_reader(uri, format, mode, **kwargs)\r\n    141\r\n    142     # Return its reader object\r\n--> 143     return format.get_reader(request)\r\n    144\r\n    145\r\n\r\n~/miniconda3/envs/test-imageio/lib/python3.6/site-packages/imageio/core/format.py in get_reader(self, request)\r\n    172                 \"Format %s cannot read in mode %r\" % (self.name, select_mode)\r\n    173             )\r\n--> 174         return self.Reader(self, request)\r\n    175\r\n    176     def get_writer(self, request):\r\n\r\n~/miniconda3/envs/test-imageio/lib/python3.6/site-packages/imageio/core/format.py in __init__(self, format, request)\r\n    222             self._request = request\r\n    223             # Open the reader/writer\r\n--> 224             self._open(**self.request.kwargs.copy())\r\n    225\r\n    226         @property\r\n\r\n~/miniconda3/envs/test-imageio/lib/python3.6/site-packages/imageio/plugins/ffmpeg.py in _open(self, loop, size, dtype, pixelformat, print_info, ffmpeg_params, input_params, output_params, fps)\r\n    397             # Start ffmpeg subprocess and get meta information\r\n    398             self._initialize()\r\n--> 399             self._load_infos()\r\n    400\r\n    401             # For cameras, create thread that keeps reading the images\r\n\r\n~/miniconda3/envs/test-imageio/lib/python3.6/site-packages/imageio/plugins/ffmpeg.py in _load_infos(self)\r\n    572                     raise IndexError(\r\n    573                         \"No video4linux camera at %s.\\n\\n%s\"\r\n--> 574                         % (self.request._video, ffmpeg_err)\r\n    575                     )\r\n    576                 else:\r\n\r\nIndexError: No video4linux camera at <video0>.\r\n\r\nFFMPEG STDERR OUTPUT:\r\n\r\nffmpeg version 4.0.2 Copyright (c) 2000-2018 the FFmpeg developers\r\n  built with Apple LLVM version 10.0.0 (clang-1000.10.43.1)\r\n  configuration: --prefix=/usr/local/Cellar/ffmpeg/4.0.2 --enable-shared --enable-pthreads --enable-version3 --enable-hardcoded-tables --enable-avresample --cc=clang --host-cflags= --host-ldflags= --enable-gpl --enable-libmp3lame --enable-libx264 --enable-libxvid --enable-opencl --enable-videotoolbox --disable-lzma\r\n  libavutil      56. 14.100 / 56. 14.100\r\n  libavcodec     58. 18.100 / 58. 18.100\r\n  libavformat    58. 12.100 / 58. 12.100\r\n  libavdevice    58.  3.100 / 58.  3.100\r\n  libavfilter     7. 16.100 /  7. 16.100\r\n  libavresample   4.  0.  0 /  4.  0.  0\r\n  libswscale      5.  1.100 /  5.  1.100\r\n  libswresample   3.  1.100 /  3.  1.100\r\n  libpostproc    55.  1.100 / 55.  1.100\r\n[avfoundation @ 0x7fc19c002000] Selected framerate (29.970030) is not supported by the device\r\n[avfoundation @ 0x7fc19c002000] Supported modes:\r\n[avfoundation @ 0x7fc19c002000]   160x90@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1024x576@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   1024x576@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   1024x576@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1024x576@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   1024x576@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1024x576@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   1024x576@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   960x720@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   960x720@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   960x720@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   960x720@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   960x720@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   960x720@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   960x720@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1280x720@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   1280x720@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   1280x720@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1280x720@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   1280x720@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1280x720@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   1280x720@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1600x896@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   1600x896@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   1600x896@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1600x896@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   1600x896@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1600x896@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   1600x896@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1920x1080@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   1920x1080@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   1920x1080@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1920x1080@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   1920x1080@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1920x1080@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   1920x1080@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   160x90@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   160x120@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   176x144@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   320x180@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   320x240@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   352x288@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   432x240@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   640x480@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[30.000030 30.000030]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   800x448@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   864x480@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[24.000038 24.000038]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[20.000000 20.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   800x600@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1024x576@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   1024x576@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   1024x576@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   1024x576@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   960x720@[15.000015 15.000015]fps\r\n[avfoundation @ 0x7fc19c002000]   960x720@[10.000000 10.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   960x720@[7.500002 7.500002]fps\r\n[avfoundation @ 0x7fc19c002000]   960x720@[5.000000 5.000000]fps\r\n[avfoundation @ 0x7fc19c002000]   2304x1296@[2.000001 2.000001]fps\r\n[avfoundation @ 0x7fc19c002000]   2304x1536@[2.000001 2.000001]fps\r\n0: Input/output error\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/389", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/389/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/389/events", "html_url": "https://github.com/imageio/imageio/issues/389", "id": 366345248, "node_id": "MDU6SXNzdWUzNjYzNDUyNDg=", "number": 389, "title": "get_writer does not make proper mp4s for low fps", "user": {"login": "gokul-uf", "id": 5398125, "node_id": "MDQ6VXNlcjUzOTgxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5398125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gokul-uf", "html_url": "https://github.com/gokul-uf", "followers_url": "https://api.github.com/users/gokul-uf/followers", "following_url": "https://api.github.com/users/gokul-uf/following{/other_user}", "gists_url": "https://api.github.com/users/gokul-uf/gists{/gist_id}", "starred_url": "https://api.github.com/users/gokul-uf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gokul-uf/subscriptions", "organizations_url": "https://api.github.com/users/gokul-uf/orgs", "repos_url": "https://api.github.com/users/gokul-uf/repos", "events_url": "https://api.github.com/users/gokul-uf/events{/privacy}", "received_events_url": "https://api.github.com/users/gokul-uf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-03T13:42:11Z", "updated_at": "2019-02-05T14:08:54Z", "closed_at": "2019-02-05T14:08:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\ni am using imageio 2.3.0 on Python 3.6, Ubuntu 18.04. \r\n\r\nI am trying to create a `mp4` from a series of `png` images and I am using `get_writer` for the same.\r\nFor `fps < 5`, I observe the following in the generated mp4 while playing on VLC\r\n\r\n1. The video is blacked out for the first few seconds.\r\n2. After that, the video stay on the first `png` and does not proceed.\r\n\r\nI have not tried for higher fps, but seems the issue gets resolved when `fps>10`.\r\n\r\nSomeone has also raised this issue on [stackoverflow](https://stackoverflow.com/questions/51067576/video-is-black-when-framerate-is-too-low-using-imageio-and-python)  but has not yet received any comment / answer.\r\nAm I doing something wrong or does this seem like a bug with `imageio`?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/386", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/386/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/386/events", "html_url": "https://github.com/imageio/imageio/issues/386", "id": 362257187, "node_id": "MDU6SXNzdWUzNjIyNTcxODc=", "number": 386, "title": "Not able to read dicom image", "user": {"login": "bhavesh0009", "id": 28176923, "node_id": "MDQ6VXNlcjI4MTc2OTIz", "avatar_url": "https://avatars2.githubusercontent.com/u/28176923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhavesh0009", "html_url": "https://github.com/bhavesh0009", "followers_url": "https://api.github.com/users/bhavesh0009/followers", "following_url": "https://api.github.com/users/bhavesh0009/following{/other_user}", "gists_url": "https://api.github.com/users/bhavesh0009/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhavesh0009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhavesh0009/subscriptions", "organizations_url": "https://api.github.com/users/bhavesh0009/orgs", "repos_url": "https://api.github.com/users/bhavesh0009/repos", "events_url": "https://api.github.com/users/bhavesh0009/events{/privacy}", "received_events_url": "https://api.github.com/users/bhavesh0009/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381092, "node_id": "MDU6TGFiZWwxNDMzODEwOTI=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20dicom", "name": "plugin: dicom", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-20T16:03:07Z", "updated_at": "2018-09-20T19:41:41Z", "closed_at": "2018-09-20T19:38:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am trying to load dicom image in kaggle kernel for \"RSNA Pneumonia Detection Challenge\"(https://www.kaggle.com/c/rsna-pneumonia-detection-challenge) . However I am not able to load dicom image using imageio package.\r\n\r\nCode:\r\nimport imageio\r\n\r\nimg = imageio.imread('../input/stage_1_train_images/4ba3e640-eb0a-4f4f-900c-af7405bc1790.dcm')\r\n\r\nError:\r\n```\r\n---------------------------------------------------------------------------\r\nCompressedDicom                           Traceback (most recent call last)\r\n<ipython-input-14-db9e790d9e7f> in <module>()\r\n----> 1 img = imageio.imread('../input/stage_1_train_images/4ba3e640-eb0a-4f4f-900c-af7405bc1790.dcm')\r\n\r\n/opt/conda/lib/python3.6/site-packages/imageio/core/functions.py in imread(uri, format, **kwargs)\r\n    198 \r\n    199     # Get reader and read first\r\n--> 200     reader = read(uri, format, 'i', **kwargs)\r\n    201     with reader:\r\n    202         return reader.get_data(0)\r\n\r\n/opt/conda/lib/python3.6/site-packages/imageio/core/functions.py in get_reader(uri, format, mode, **kwargs)\r\n    127 \r\n    128     # Return its reader object\r\n--> 129     return format.get_reader(request)\r\n    130 \r\n    131 \r\n\r\n/opt/conda/lib/python3.6/site-packages/imageio/core/format.py in get_reader(self, request)\r\n    167             raise RuntimeError('Format %s cannot read in mode %r' % \r\n    168                                (self.name, select_mode))\r\n--> 169         return self.Reader(self, request)\r\n    170 \r\n    171     def get_writer(self, request):\r\n\r\n/opt/conda/lib/python3.6/site-packages/imageio/core/format.py in __init__(self, format, request)\r\n    216             self._request = request\r\n    217             # Open the reader/writer\r\n--> 218             self._open(**self.request.kwargs.copy())\r\n    219 \r\n    220         @property\r\n\r\n/opt/conda/lib/python3.6/site-packages/imageio/plugins/dicom.py in _open(self, progress)\r\n    115                 # Read the given dataset now ...\r\n    116                 try:\r\n--> 117                     dcm = _dicom.SimpleDicomReader(self.request.get_file())\r\n    118                 except _dicom.CompressedDicom as err:\r\n    119                     if 'JPEG' in str(err):\r\n\r\n/opt/conda/lib/python3.6/site-packages/imageio/plugins/_dicom.py in __init__(self, file)\r\n    183 \r\n    184         # Initiate reading\r\n--> 185         self._read()\r\n    186 \r\n    187     @property\r\n\r\n/opt/conda/lib/python3.6/site-packages/imageio/plugins/_dicom.py in _read(self)\r\n    219             raise NotADicomFile('Not a valid DICOM file.')\r\n    220         # Read\r\n--> 221         self._read_header()\r\n    222         self._read_data_elements()\r\n    223         self._get_shape_and_sampling()\r\n\r\n/opt/conda/lib/python3.6/site-packages/imageio/plugins/_dicom.py in _read_header(self)\r\n    350                                   'uncompressed image data - not %r%s. You '\r\n    351                                   'can try using dcmtk or gdcm to convert the '\r\n--> 352                                   'image.' % (t, extra_info))\r\n    353 \r\n    354         # From hereon, use implicit/explicit big/little endian\r\n\r\nCompressedDicom: The dicom reader can only read files with uncompressed image data - not '1.2.840.10008.1.2.4.50' (JPEG). You can try using dcmtk or gdcm to convert the image.\r\n```\r\nKernel location: https://www.kaggle.com/bhavesh09/biomedical-image-analysis-introduction\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/384", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/384/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/384/events", "html_url": "https://github.com/imageio/imageio/issues/384", "id": 359180686, "node_id": "MDU6SXNzdWUzNTkxODA2ODY=", "number": 384, "title": "Reduce memory usage when writing using ffmpeg", "user": {"login": "djhoese", "id": 1828519, "node_id": "MDQ6VXNlcjE4Mjg1MTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1828519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djhoese", "html_url": "https://github.com/djhoese", "followers_url": "https://api.github.com/users/djhoese/followers", "following_url": "https://api.github.com/users/djhoese/following{/other_user}", "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}", "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions", "organizations_url": "https://api.github.com/users/djhoese/orgs", "repos_url": "https://api.github.com/users/djhoese/repos", "events_url": "https://api.github.com/users/djhoese/events{/privacy}", "received_events_url": "https://api.github.com/users/djhoese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-09-11T19:05:33Z", "updated_at": "2018-09-13T19:37:55Z", "closed_at": "2018-09-13T15:50:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for this package. It makes generating movies from python so much easier.\r\n\r\nI'm using an imageio writer to generate an mp4 video of some pretty large frames (satellite imagery data). I'm using the `append_data` method to write new frames. Right now after I start adding frames I notice that my memory usage shoots up and I end up going to swap. From what I can tell it seems like ffmpeg isn't consuming the information being written to stdin. Is this something that imageio or ffmpeg can be configured to allow? Is there a way to tell imageio to write to disk and then pass that to ffmpeg? I'm not really an ffmpeg expert so not sure what my options are here or if this can even be avoided easily.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/380", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/380/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/380/events", "html_url": "https://github.com/imageio/imageio/issues/380", "id": 357671643, "node_id": "MDU6SXNzdWUzNTc2NzE2NDM=", "number": 380, "title": "test_lytro_lfr_format takes really long", "user": {"login": "almarklein", "id": 3015475, "node_id": "MDQ6VXNlcjMwMTU0NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3015475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/almarklein", "html_url": "https://github.com/almarklein", "followers_url": "https://api.github.com/users/almarklein/followers", "following_url": "https://api.github.com/users/almarklein/following{/other_user}", "gists_url": "https://api.github.com/users/almarklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/almarklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/almarklein/subscriptions", "organizations_url": "https://api.github.com/users/almarklein/orgs", "repos_url": "https://api.github.com/users/almarklein/repos", "events_url": "https://api.github.com/users/almarklein/events{/privacy}", "received_events_url": "https://api.github.com/users/almarklein/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460461, "node_id": "MDU6TGFiZWwzODQ2MDQ2MQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20enhancement", "name": "type: enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-06T14:06:24Z", "updated_at": "2018-09-11T11:03:06Z", "closed_at": "2018-09-11T11:03:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Like several minutes. Taking up a significant part of the time. Can we scale this down?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/378", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/378/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/378/events", "html_url": "https://github.com/imageio/imageio/issues/378", "id": 357617550, "node_id": "MDU6SXNzdWUzNTc2MTc1NTA=", "number": 378, "title": "Can't install 2.4.0", "user": {"login": "eguendelman", "id": 9495480, "node_id": "MDQ6VXNlcjk0OTU0ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9495480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eguendelman", "html_url": "https://github.com/eguendelman", "followers_url": "https://api.github.com/users/eguendelman/followers", "following_url": "https://api.github.com/users/eguendelman/following{/other_user}", "gists_url": "https://api.github.com/users/eguendelman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eguendelman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eguendelman/subscriptions", "organizations_url": "https://api.github.com/users/eguendelman/orgs", "repos_url": "https://api.github.com/users/eguendelman/repos", "events_url": "https://api.github.com/users/eguendelman/events{/privacy}", "received_events_url": "https://api.github.com/users/eguendelman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148609847, "node_id": "MDU6TGFiZWwxNDg2MDk4NDc=", "url": "https://api.github.com/repos/imageio/imageio/labels/building/installing", "name": "building/installing", "color": "207de5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-09-06T11:44:21Z", "updated_at": "2018-09-06T19:22:16Z", "closed_at": "2018-09-06T13:39:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "ubuntu 14.04, python 2.7.6, pip 18.0\r\nTrying to install imageio using `pip install imageio` gives\r\n```\r\nCollecting imageio\r\n  Using cached https://files.pythonhosted.org/packages/ac/64/8e2bb6aac43d6ed7c2d9514320b43d5e80c00f150ee2b9408aee24359e6d/imageio-2.4.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    /usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\r\n      warnings.warn(msg)\r\n    error in imageio setup command: 'install_requires' must be a string or list of strings containing valid project/version requirement specifiers\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-Ka8LjP/imageio/\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/376", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/376/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/376/events", "html_url": "https://github.com/imageio/imageio/issues/376", "id": 356784355, "node_id": "MDU6SXNzdWUzNTY3ODQzNTU=", "number": 376, "title": "Don't use the root logger when emitting messages", "user": {"login": "mjpieters", "id": 46775, "node_id": "MDQ6VXNlcjQ2Nzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/46775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjpieters", "html_url": "https://github.com/mjpieters", "followers_url": "https://api.github.com/users/mjpieters/followers", "following_url": "https://api.github.com/users/mjpieters/following{/other_user}", "gists_url": "https://api.github.com/users/mjpieters/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjpieters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjpieters/subscriptions", "organizations_url": "https://api.github.com/users/mjpieters/orgs", "repos_url": "https://api.github.com/users/mjpieters/repos", "events_url": "https://api.github.com/users/mjpieters/events{/privacy}", "received_events_url": "https://api.github.com/users/mjpieters/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381939, "node_id": "MDU6TGFiZWwxNDMzODE5Mzk=", "url": "https://api.github.com/repos/imageio/imageio/labels/core", "name": "core", "color": "207de5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-04T12:20:45Z", "updated_at": "2019-05-15T20:43:01Z", "closed_at": "2019-02-06T00:08:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "In three places, the `imageio` library uses `logging.warning()` to emit warning messages, using the root logger:\r\n\r\n* The core library uses `imagio.core.util._precision_warn()` to warn about lossy conversions https://github.com/imageio/imageio/blob/5c8c440a55eb22e0ec8526e47bf405eb84b9a164/imageio/core/util.py#L56-L61\r\n* The `ffmpeg` plugin warns about input image resizing: https://github.com/imageio/imageio/blob/5c8c440a55eb22e0ec8526e47bf405eb84b9a164/imageio/plugins/ffmpeg.py#L829-L841\r\n* The `freeimg` plugin emits a warning when the downloading the dependency fails with an unknown error: https://github.com/imageio/imageio/blob/5c8c440a55eb22e0ec8526e47bf405eb84b9a164/imageio/plugins/_freeimage.py#L97-L98\r\n\r\nThis makes it extremely hard to disable such messages if the developer using the library deems the warning ignorable; often the root logger is used to only hold logging handlers to collect and direct logging output (to the console, to files, to syslog, etc.), and disabling warnings at this level would affect a lot of other logging output too.\r\n\r\nPlease use a named logger instead. At the very least, use one named for your library:\r\n\r\n```python\r\n# top-level code in the module\r\nimport logging\r\n\r\nlogger = logging.getLogger('imageio')\r\n\r\n# anywhere you want to log a warning\r\nlogger.warning(...)\r\n```\r\n\r\nThat way code using the library can opt to configure *just that logging object* to perhaps silence the warning.\r\n\r\nIdeally, a logger per module is used, that's trivially achieved with\r\n\r\n```python\r\nlogger = logging.getLogger(__name__)\r\n```\r\n\r\nThe `__name__` value is the name of the current module, so `imageio.core.utils` for the module that the precision warning function lives in, linked above. Names with dots in them are treated as a hierarchical namespace by the logging module, giving the option to configure logging at different levels.\r\n\r\nThis then gives code the option to alter how all of `imageio` logs are handled (by configuring the `imagio` logger) or by altering specific sub-sections (such as `imageio.core` or `imageio.plugins.ffmpeg`).\r\n\r\nCurrently, users [would have to patch `imagio` code](https://stackoverflow.com/questions/52165705/how-to-ignore-root-warnings) to selectively silence a warning.\r\n\r\nA viable alternative would be to use the [`warnings` infrastructure](https://docs.python.org/3/library/warnings.html) instead. This would allow developers to configure for warnings, specifically, such as silencing them (with a lot of control as to when to do so), or even turning such warnings into exceptions (if they would deem triggering the conditions a bug on their side).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/371", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/371/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/371/events", "html_url": "https://github.com/imageio/imageio/issues/371", "id": 353647345, "node_id": "MDU6SXNzdWUzNTM2NDczNDU=", "number": 371, "title": "Remove meta data fields that become invalid during reading (e.g. exif orientation)", "user": {"login": "higumachan", "id": 1011298, "node_id": "MDQ6VXNlcjEwMTEyOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1011298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/higumachan", "html_url": "https://github.com/higumachan", "followers_url": "https://api.github.com/users/higumachan/followers", "following_url": "https://api.github.com/users/higumachan/following{/other_user}", "gists_url": "https://api.github.com/users/higumachan/gists{/gist_id}", "starred_url": "https://api.github.com/users/higumachan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/higumachan/subscriptions", "organizations_url": "https://api.github.com/users/higumachan/orgs", "repos_url": "https://api.github.com/users/higumachan/repos", "events_url": "https://api.github.com/users/higumachan/events{/privacy}", "received_events_url": "https://api.github.com/users/higumachan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381939, "node_id": "MDU6TGFiZWwxNDMzODE5Mzk=", "url": "https://api.github.com/repos/imageio/imageio/labels/core", "name": "core", "color": "207de5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-24T05:14:42Z", "updated_at": "2020-01-28T10:25:40Z", "closed_at": "2020-01-28T10:25:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "*See #362 for the meta-data overview issue.*\r\n\r\nI meet a bug in that uploaded image notebook case.\r\n\r\n![image](https://user-images.githubusercontent.com/1011298/44566329-ef3e1380-a7a7-11e8-91a5-10402efab2cf.png)\r\n\r\nI think save correct orientation pixels and original exif information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/370", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/370/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/370/events", "html_url": "https://github.com/imageio/imageio/issues/370", "id": 353423580, "node_id": "MDU6SXNzdWUzNTM0MjM1ODA=", "number": 370, "title": "AVBIN won't release memory when using .close()", "user": {"login": "RaphP", "id": 10462086, "node_id": "MDQ6VXNlcjEwNDYyMDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/10462086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RaphP", "html_url": "https://github.com/RaphP", "followers_url": "https://api.github.com/users/RaphP/followers", "following_url": "https://api.github.com/users/RaphP/following{/other_user}", "gists_url": "https://api.github.com/users/RaphP/gists{/gist_id}", "starred_url": "https://api.github.com/users/RaphP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RaphP/subscriptions", "organizations_url": "https://api.github.com/users/RaphP/orgs", "repos_url": "https://api.github.com/users/RaphP/repos", "events_url": "https://api.github.com/users/RaphP/events{/privacy}", "received_events_url": "https://api.github.com/users/RaphP/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381280, "node_id": "MDU6TGFiZWwxNDMzODEyODA=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20avbin", "name": "plugin: avbin", "color": "c7def8", "default": false, "description": null}, {"id": 38460464, "node_id": "MDU6TGFiZWwzODQ2MDQ2NA==", "url": "https://api.github.com/repos/imageio/imageio/labels/resolution:%20wontfix", "name": "resolution: wontfix", "color": "cccccc", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-23T15:02:14Z", "updated_at": "2020-02-18T16:20:46Z", "closed_at": "2020-02-18T16:20:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Every time I use get_reader() with avbin, a bit of ram is used. This bit of ram is not freed until the python process is closed. It does the same on linux64 and OSX. I tried to understand the avbin implementation, but ctypes etc goes beyond my scope. \r\nTo reproduce \r\n```\r\nimport imageio\r\nfor i in range(100):\r\n    video = imageio.get_reader('imageio:cockatoo.mp4', format='avbin')\r\n    video._close()\r\n```\r\n\r\nIt will use around 400Mb on my ram. \r\n\r\navbin goes effectively faster that ffmpeg and I liked that a lot, I saw in another issue that avbin hasn't been updated since a long time, but can this problem be fixed ?\r\n\r\nThanks a lot for this library anyway,\r\nBest,\r\nR. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/369", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/369/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/369/events", "html_url": "https://github.com/imageio/imageio/issues/369", "id": 351877974, "node_id": "MDU6SXNzdWUzNTE4Nzc5NzQ=", "number": 369, "title": "Unable to load `lena.png` by `imageio` correctly, different  with `cv2` or `PIL` or `skimage`.", "user": {"login": "ausk", "id": 4545060, "node_id": "MDQ6VXNlcjQ1NDUwNjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4545060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ausk", "html_url": "https://github.com/ausk", "followers_url": "https://api.github.com/users/ausk/followers", "following_url": "https://api.github.com/users/ausk/following{/other_user}", "gists_url": "https://api.github.com/users/ausk/gists{/gist_id}", "starred_url": "https://api.github.com/users/ausk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ausk/subscriptions", "organizations_url": "https://api.github.com/users/ausk/orgs", "repos_url": "https://api.github.com/users/ausk/repos", "events_url": "https://api.github.com/users/ausk/events{/privacy}", "received_events_url": "https://api.github.com/users/ausk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495624726, "node_id": "MDU6TGFiZWw0OTU2MjQ3MjY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20pillow", "name": "plugin: pillow", "color": "c5def5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-19T06:21:18Z", "updated_at": "2018-09-04T11:43:40Z", "closed_at": "2018-09-04T11:41:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear guys, I'm trying to read image in different library. When I use `cv2` or `PIL` or `skimage` to read `lena.png`, they are all the same. But then I read it using `imageio`, the image data become different.\r\n\r\nThe source image:  [lena.png](https://i.stack.imgur.com/p0C3w.png)\r\n\r\nThe result: [result](https://i.stack.imgur.com/vWprM.png)\r\n\r\nThe test code:\r\n```python\r\n#!/usr/bin/python\r\n# 2018.08.19 14:17 (+0800)\r\n\r\nimport cv2 \r\nimport PIL\r\nimport imageio \r\nimport skimage.io  \r\nimport matplotlib.pyplot as plt \r\nimport numpy as np \r\n\r\n#You can get `lena.png` from url:  https://i.stack.imgur.com/p0C3w.png\r\nfname = \"lena.png\" \r\n\r\n## Read \r\na = np.array(imageio.imread(fname))\r\nb = cv2.imread(fname)[...,::-1]\r\nc = np.array(PIL.Image.open(fname))\r\nd = skimage.io.imread(fname)\r\n\r\n# Check in value \r\nprint( (a==b).all() )  # False \r\nprint( (b==c).all() and (c==d).all()) # True \r\n\r\n## Display \r\nimgs = [a, b, c, d]\r\ntitles = [\"imageio\", \"PIL\", \"cv2\", \"skimage\"]\r\nfor i, (img, title) in enumerate(zip(imgs, titles), start=1):\r\n    plt.subplot(2, 2, i)\r\n    plt.imshow(img)\r\n    plt.title(title)\r\n    plt.axis(\"Off\")\r\n\r\nplt.show()\r\n\r\n## Version\r\nprint(imageio.__version__) # 2.3.0\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/368", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/368/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/368/events", "html_url": "https://github.com/imageio/imageio/issues/368", "id": 351081567, "node_id": "MDU6SXNzdWUzNTEwODE1Njc=", "number": 368, "title": "Singleton image; can only append image data once.", "user": {"login": "henfri", "id": 5280909, "node_id": "MDQ6VXNlcjUyODA5MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5280909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henfri", "html_url": "https://github.com/henfri", "followers_url": "https://api.github.com/users/henfri/followers", "following_url": "https://api.github.com/users/henfri/following{/other_user}", "gists_url": "https://api.github.com/users/henfri/gists{/gist_id}", "starred_url": "https://api.github.com/users/henfri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henfri/subscriptions", "organizations_url": "https://api.github.com/users/henfri/orgs", "repos_url": "https://api.github.com/users/henfri/repos", "events_url": "https://api.github.com/users/henfri/events{/privacy}", "received_events_url": "https://api.github.com/users/henfri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-16T07:08:54Z", "updated_at": "2019-02-06T09:54:47Z", "closed_at": "2019-02-06T09:54:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nthanks for writing imageio!\r\nI have a Problem writing an animated gif though:\r\n```\r\n\r\nfor filename in ll:\r\n    images.append(imageio.imread(join(p,filename)))\r\nimageio.mimsave(join(p,'movie144.gif'), images,format='GIF') \r\n```\r\n\r\nI get this error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"[...]\\eclipse\\plugins\\org.python.pydev_3.9.2.201502050007\\pysrc\\pydevd.py\", line 2235, in <module>\r\n    globals = debugger.run(setup['file'], None, None)\r\n  File \"[...]\\eclipse\\plugins\\org.python.pydev_3.9.2.201502050007\\pysrc\\pydevd.py\", line 1661, in run\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"D:\\wilco_models\\ShortRange_Sector_Model\\postprocessing\\gif.py\", line 22, in <module>\r\n    imageio.mimsave(join(p,'movie144.gif'), images,format='GIF') \r\n  File \"[...]\\pythonxy\\python27\\lib\\site-packages\\imageio\\functions.py\", line 303, in mimsave\r\n    writer.append_data(im)\r\n  File \"[...]\\pythonxy\\python27\\lib\\site-packages\\imageio\\base.py\", line 479, in append_data\r\n    return self._append_data(im, total_meta)\r\n  File \"[...]\\pythonxy\\python27\\lib\\site-packages\\imageio\\plugins\\plugin_freeimage.py\", line 97, in _append_data\r\n    raise RuntimeError('Singleton image; can only append image data once.')\r\nRuntimeError: Singleton image; can only append image data once.\r\n```\r\n\r\nWhat am I doing wrong here?\r\n\r\nRegards,\r\nHendrik", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/367", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/367/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/367/events", "html_url": "https://github.com/imageio/imageio/issues/367", "id": 350306292, "node_id": "MDU6SXNzdWUzNTAzMDYyOTI=", "number": 367, "title": "Is imageio safe with multiprocessing?", "user": {"login": "yelantingfeng", "id": 22748802, "node_id": "MDQ6VXNlcjIyNzQ4ODAy", "avatar_url": "https://avatars1.githubusercontent.com/u/22748802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yelantingfeng", "html_url": "https://github.com/yelantingfeng", "followers_url": "https://api.github.com/users/yelantingfeng/followers", "following_url": "https://api.github.com/users/yelantingfeng/following{/other_user}", "gists_url": "https://api.github.com/users/yelantingfeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/yelantingfeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yelantingfeng/subscriptions", "organizations_url": "https://api.github.com/users/yelantingfeng/orgs", "repos_url": "https://api.github.com/users/yelantingfeng/repos", "events_url": "https://api.github.com/users/yelantingfeng/events{/privacy}", "received_events_url": "https://api.github.com/users/yelantingfeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-14T07:10:54Z", "updated_at": "2018-09-04T00:47:32Z", "closed_at": "2018-09-04T00:47:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using imageio to decode some video files with multiprocessing. Somehow my system always crashes. I wonder is imageio safe when using it this way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/366", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/366/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/366/events", "html_url": "https://github.com/imageio/imageio/issues/366", "id": 348385160, "node_id": "MDU6SXNzdWUzNDgzODUxNjA=", "number": 366, "title": "When should the Pillow plugin apply gamma correction?", "user": {"login": "habi", "id": 1651235, "node_id": "MDQ6VXNlcjE2NTEyMzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1651235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/habi", "html_url": "https://github.com/habi", "followers_url": "https://api.github.com/users/habi/followers", "following_url": "https://api.github.com/users/habi/following{/other_user}", "gists_url": "https://api.github.com/users/habi/gists{/gist_id}", "starred_url": "https://api.github.com/users/habi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/habi/subscriptions", "organizations_url": "https://api.github.com/users/habi/orgs", "repos_url": "https://api.github.com/users/habi/repos", "events_url": "https://api.github.com/users/habi/events{/privacy}", "received_events_url": "https://api.github.com/users/habi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495624726, "node_id": "MDU6TGFiZWw0OTU2MjQ3MjY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20pillow", "name": "plugin: pillow", "color": "c5def5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-07T15:57:58Z", "updated_at": "2018-09-04T19:32:06Z", "closed_at": "2018-09-04T11:41:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "*original title: Reading PNG files differently than scipy.misc*\r\n\r\nI've been using `scipy.misc.imread`for reading (tomographic) images for processing.\r\nAfter a recent upgrade of my system I'm told this is deprecated in favor of  `imageio.imread`.\r\n\r\nUnfortunately my images are read differently depending on which I use, namely with a different gray-scale range, as can be seen below.\r\n\r\n```\r\nimport scipy.misc\r\nimport imageio\r\nimport matplotlib.pyplot as plt\r\n%matplotlib inline\r\nimport numpy\r\nr = 'test.png'  # attached tho this issue\r\nimg_scipy = scipy.misc.imread(r)\r\nimg_imageio = imageio.imread(r)\r\nplt.subplot(121)\r\nplt.title('scipy min: %s, max: %s' %(numpy.min(img_scipy), numpy.max(img_scipy)))\r\nplt.imshow(img_scipy)\r\nplt.subplot(122)\r\nplt.imshow(img_imageio)\r\nplt.title('imageio min: %s, max: %s' %(numpy.min(img_imageio), numpy.max(img_imageio)))\r\nplt.show()\r\n```\r\n![output](https://user-images.githubusercontent.com/1651235/43787395-2bf373c8-9a6b-11e8-98d4-1c04190ce38c.png)\r\n\r\n[ImageJ](http://fiji.sc/) reports a maximum gray value of 162 for the image, which is what I would have expected...\r\n\r\nimageio.__version__ =  '2.3.0'\r\nscipy.__version__ = '1.1.0'\r\n\r\n![test.png](https://user-images.githubusercontent.com/1651235/43787150-a6cf810a-9a6a-11e8-9a3d-71f06eb6e2db.png)\r\n\r\nHow can I get my correct gray value range back?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/364", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/364/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/364/events", "html_url": "https://github.com/imageio/imageio/issues/364", "id": 347702300, "node_id": "MDU6SXNzdWUzNDc3MDIzMDA=", "number": 364, "title": "Animation PNG (.apng) to GIF it's real?", "user": {"login": "JakeBV", "id": 34030585, "node_id": "MDQ6VXNlcjM0MDMwNTg1", "avatar_url": "https://avatars1.githubusercontent.com/u/34030585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakeBV", "html_url": "https://github.com/JakeBV", "followers_url": "https://api.github.com/users/JakeBV/followers", "following_url": "https://api.github.com/users/JakeBV/following{/other_user}", "gists_url": "https://api.github.com/users/JakeBV/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakeBV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakeBV/subscriptions", "organizations_url": "https://api.github.com/users/JakeBV/orgs", "repos_url": "https://api.github.com/users/JakeBV/repos", "events_url": "https://api.github.com/users/JakeBV/events{/privacy}", "received_events_url": "https://api.github.com/users/JakeBV/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-05T14:21:32Z", "updated_at": "2018-08-06T07:46:31Z", "closed_at": "2018-08-06T07:46:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to do it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/363", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/363/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/363/events", "html_url": "https://github.com/imageio/imageio/issues/363", "id": 346961260, "node_id": "MDU6SXNzdWUzNDY5NjEyNjA=", "number": 363, "title": "How to get the accurate frame number?", "user": {"login": "yelantingfeng", "id": 22748802, "node_id": "MDQ6VXNlcjIyNzQ4ODAy", "avatar_url": "https://avatars1.githubusercontent.com/u/22748802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yelantingfeng", "html_url": "https://github.com/yelantingfeng", "followers_url": "https://api.github.com/users/yelantingfeng/followers", "following_url": "https://api.github.com/users/yelantingfeng/following{/other_user}", "gists_url": "https://api.github.com/users/yelantingfeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/yelantingfeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yelantingfeng/subscriptions", "organizations_url": "https://api.github.com/users/yelantingfeng/orgs", "repos_url": "https://api.github.com/users/yelantingfeng/repos", "events_url": "https://api.github.com/users/yelantingfeng/events{/privacy}", "received_events_url": "https://api.github.com/users/yelantingfeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-02T10:55:37Z", "updated_at": "2018-08-02T14:29:41Z", "closed_at": "2018-08-02T14:29:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Well, I notice that the number of frames is estimated by the frame rate, which is not always equal to the actual number. My current solution is to test from the meta_data['nframes']-1 until it do return an available frame, but this is still not good. Is there any good suggestions? Thank you for your generous help in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/361", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/361/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/361/events", "html_url": "https://github.com/imageio/imageio/issues/361", "id": 343926467, "node_id": "MDU6SXNzdWUzNDM5MjY0Njc=", "number": 361, "title": "Get imageshape without reading image", "user": {"login": "constantinpape", "id": 4263537, "node_id": "MDQ6VXNlcjQyNjM1Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4263537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/constantinpape", "html_url": "https://github.com/constantinpape", "followers_url": "https://api.github.com/users/constantinpape/followers", "following_url": "https://api.github.com/users/constantinpape/following{/other_user}", "gists_url": "https://api.github.com/users/constantinpape/gists{/gist_id}", "starred_url": "https://api.github.com/users/constantinpape/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/constantinpape/subscriptions", "organizations_url": "https://api.github.com/users/constantinpape/orgs", "repos_url": "https://api.github.com/users/constantinpape/repos", "events_url": "https://api.github.com/users/constantinpape/events{/privacy}", "received_events_url": "https://api.github.com/users/constantinpape/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-24T08:00:55Z", "updated_at": "2018-07-31T08:10:25Z", "closed_at": "2018-07-31T08:10:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way in `imageio` to get the shape of an image / volume without reading it into memory?\r\n\r\nI had a look at the documentation, but couldn't find anything that would do this, as there is \r\nno shape information in the metadata returned by `Reader.get_meta_data` (at least not for the tiffs I am working with).\r\n\r\nThis feature would be very useful, e.g. when working with a lot of images and verifying that shapes agree before loading them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/357", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/357/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/357/events", "html_url": "https://github.com/imageio/imageio/issues/357", "id": 335517387, "node_id": "MDU6SXNzdWUzMzU1MTczODc=", "number": 357, "title": "Add proxy support to ```fetching.py``` ", "user": {"login": "eli-s-goldberg", "id": 9864697, "node_id": "MDQ6VXNlcjk4NjQ2OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9864697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eli-s-goldberg", "html_url": "https://github.com/eli-s-goldberg", "followers_url": "https://api.github.com/users/eli-s-goldberg/followers", "following_url": "https://api.github.com/users/eli-s-goldberg/following{/other_user}", "gists_url": "https://api.github.com/users/eli-s-goldberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/eli-s-goldberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eli-s-goldberg/subscriptions", "organizations_url": "https://api.github.com/users/eli-s-goldberg/orgs", "repos_url": "https://api.github.com/users/eli-s-goldberg/repos", "events_url": "https://api.github.com/users/eli-s-goldberg/events{/privacy}", "received_events_url": "https://api.github.com/users/eli-s-goldberg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148609847, "node_id": "MDU6TGFiZWwxNDg2MDk4NDc=", "url": "https://api.github.com/repos/imageio/imageio/labels/building/installing", "name": "building/installing", "color": "207de5", "default": false, "description": null}, {"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-25T18:27:03Z", "updated_at": "2020-02-18T17:39:16Z", "closed_at": "2020-02-18T13:07:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installing ffmpeg automatically causes some problems behind a firewall using the ```imageio.plugins.ffmpeg.download()``` method. \r\n\r\nProxy support can be enhanced by adding/changing the following within [```_fetch_file```](https://github.com/imageio/imageio/blob/368c724957cc67652f9c24b32628e4fdc19ecd3c/imageio/core/fetching.py#L159). \r\n``` python \r\nauthinfo = urllib.request.HTTPBasicAuthHandler()\r\nproxy_support = urllib.request.ProxyHandler({'https': 'http://yourproxy.corporate.zombie.net:2011'})\r\nopener = urllib.request.build_opener(proxy_support, authinfo,urllib.request.CacheFTPHandler)\r\nurllib.request.install_opener(opener)\r\nremote_file = urllib.request.urlopen(url)\r\n```\r\n\r\nPerhaps it would be good to pass a proxy location through ```imageio.plugins.ffmpeg.download()``` to make the process suitable when needing a proxy? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/355", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/355/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/355/events", "html_url": "https://github.com/imageio/imageio/issues/355", "id": 334715799, "node_id": "MDU6SXNzdWUzMzQ3MTU3OTk=", "number": 355, "title": "Value changed when loading logical tiff image", "user": {"login": "xycyx", "id": 16574534, "node_id": "MDQ6VXNlcjE2NTc0NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16574534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xycyx", "html_url": "https://github.com/xycyx", "followers_url": "https://api.github.com/users/xycyx/followers", "following_url": "https://api.github.com/users/xycyx/following{/other_user}", "gists_url": "https://api.github.com/users/xycyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/xycyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xycyx/subscriptions", "organizations_url": "https://api.github.com/users/xycyx/orgs", "repos_url": "https://api.github.com/users/xycyx/repos", "events_url": "https://api.github.com/users/xycyx/events{/privacy}", "received_events_url": "https://api.github.com/users/xycyx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 287459046, "node_id": "MDU6TGFiZWwyODc0NTkwNDY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20tifffile", "name": "plugin: tifffile", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-22T01:42:24Z", "updated_at": "2018-10-01T20:20:45Z", "closed_at": "2018-09-03T19:11:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "After loading a logical uncompressed tiff image with imread, the values of the loaded image were inverted.\r\nFor example, the image I have like below,\r\n![capture](https://user-images.githubusercontent.com/16574534/41753335-ad1fb2f4-7581-11e8-8b98-3b5b4e595b48.PNG)\r\nAfter using imageio.imread('image.tiff'), the logical values were changed.\r\n![capture2](https://user-images.githubusercontent.com/16574534/41753384-f0313b80-7581-11e8-9dd5-fe6d60e8760e.PNG)\r\nI examined the values of the numpy array, the pixels which should be 'False' were changed to 'True'.\r\n![capture3](https://user-images.githubusercontent.com/16574534/41753421-3faafe26-7582-11e8-99bf-6e551062b62f.PNG)\r\n\r\nNot test on other platforms. \r\n\r\nPlatform: Windows 10\r\nVersion: imageio (2.2.0)\r\nPython 3.5\r\n\r\nTest image:\r\n[Target.zip](https://github.com/imageio/imageio/files/2125832/Target.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/354", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/354/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/354/events", "html_url": "https://github.com/imageio/imageio/issues/354", "id": 334029200, "node_id": "MDU6SXNzdWUzMzQwMjkyMDA=", "number": 354, "title": "how to uninstall imageio?", "user": {"login": "agangzz", "id": 8004760, "node_id": "MDQ6VXNlcjgwMDQ3NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8004760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agangzz", "html_url": "https://github.com/agangzz", "followers_url": "https://api.github.com/users/agangzz/followers", "following_url": "https://api.github.com/users/agangzz/following{/other_user}", "gists_url": "https://api.github.com/users/agangzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/agangzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agangzz/subscriptions", "organizations_url": "https://api.github.com/users/agangzz/orgs", "repos_url": "https://api.github.com/users/agangzz/repos", "events_url": "https://api.github.com/users/agangzz/events{/privacy}", "received_events_url": "https://api.github.com/users/agangzz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-20T11:07:32Z", "updated_at": "2020-04-20T15:34:20Z", "closed_at": "2018-06-22T08:27:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to uninstall imageio?\r\nthanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/352", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/352/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/352/events", "html_url": "https://github.com/imageio/imageio/issues/352", "id": 330402416, "node_id": "MDU6SXNzdWUzMzA0MDI0MTY=", "number": 352, "title": "PNG-PIL: low-saturation 16-bit array cast and saved as 8-bit PNG", "user": {"login": "LandingEllipse", "id": 104284, "node_id": "MDQ6VXNlcjEwNDI4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/104284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LandingEllipse", "html_url": "https://github.com/LandingEllipse", "followers_url": "https://api.github.com/users/LandingEllipse/followers", "following_url": "https://api.github.com/users/LandingEllipse/following{/other_user}", "gists_url": "https://api.github.com/users/LandingEllipse/gists{/gist_id}", "starred_url": "https://api.github.com/users/LandingEllipse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LandingEllipse/subscriptions", "organizations_url": "https://api.github.com/users/LandingEllipse/orgs", "repos_url": "https://api.github.com/users/LandingEllipse/repos", "events_url": "https://api.github.com/users/LandingEllipse/events{/privacy}", "received_events_url": "https://api.github.com/users/LandingEllipse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495624726, "node_id": "MDU6TGFiZWw0OTU2MjQ3MjY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20pillow", "name": "plugin: pillow", "color": "c5def5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-07T19:19:48Z", "updated_at": "2020-02-18T15:24:01Z", "closed_at": "2020-02-18T15:24:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What did you do?\r\nTry to save a _low saturation_ grayscale 16-bit PNG.\r\n\r\n## What did you expect to happen?\r\nObtain a 16-bit PNG file.\r\n\r\n## What actually happened?\r\nThe file was silently saved as an 8-bit PNG, despite the input array dtype being uint16.\r\n\r\n## Reproducible example\r\nimageio: 2.3.0\r\nPillow: 5.1.0\r\nPython: 3.6.5\r\n### Expected behaviour\r\n```python\r\nimport numpy as np\r\nimport imageio\r\n\r\narr = np.full((32, 32), 256, dtype=np.uint16)\r\nimageio.imwrite(\"~/16-bit_test.png\", arr)\r\n\r\nimg = imageio.imread(\"~/16-bit_test.png\")\r\nprint(img.dtype)  # => \"uint16\"\r\n```\r\n```\r\n$ file ~/16-bit_test.png\r\n16-bit_test.png: PNG image data, 32 x 32, 16-bit grayscale, non-interlaced\r\n```\r\n### Unexpected behaviour\r\n```python\r\nimport numpy as np\r\nimport imageio\r\n\r\narr = np.full((32, 32), 255, dtype=np.uint16)\r\nimageio.imwrite(\"~/16-bit_test.png\", arr)\r\n\r\nimg = imageio.imread(\"~/16-bit_test.png\")\r\nprint(img.dtype)  # => \"uint8\"\r\n```\r\n```\r\n$ file ~/16-bit_test.png\r\n16-bit_test.png: PNG image data, 32 x 32, 8-bit grayscale, non-interlaced\r\n```\r\n\r\n## Source of the issue\r\nThe behaviour originates in the Pillow plugin's `ndarray_to_pil` function:\r\nhttps://github.com/imageio/imageio/blob/23ae5c1df0ca0d30931ff42833cf88fc3eb218aa/imageio/plugins/pillow.py#L621-L623\r\nThe function checks whether the values in the input ndarray fits in uint8 and recasts the array and sets the mode accordingly if this is the case. \r\n\r\n## Consequences and thoughts\r\nMy use case involves capturing calibration images from a scientific imaging system. Some sets are well saturated (e.g. flat fields), while others carry very low signal levels (e.g. bias images). Images can be captured in both 8-bit and 16-bit, and consuming pipeline scripts use the dtype of images for normalisation etc.\r\n\r\nTherefore, it is vital that 16-bit data is actually saved as 16-bit PNGs. If for instance a 16-bit bias image peaking at `arr.max() == 255` is saved by `imageio` as an 8-bit PNG, pixel intensities will be completely misrepresented. In the original, the max intensity is just under 0.39% while in the saved 8-bit image the apparent max intensity is 100%. Image viewers will of course also reflect this issue.\r\n\r\n I understand that for input arrays that with `arr.dtype.kind == 'f'` it both makes sense and is necessary to bring the values into a supported unsigned integer format, but when the input array is already in uint16 I would argue that any casting to uint8 constitutes unexpected and counterintuitive behaviour, as the dtype likely has been specified consciously by the user to reflect the range/scale of the input data. But as I make this argument based on a sample size of one, I'm curious to hear your thoughts. Since git blames @almarklein for the lines quoted above, maybe you have some input on this?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/350", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/350/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/350/events", "html_url": "https://github.com/imageio/imageio/issues/350", "id": 327395697, "node_id": "MDU6SXNzdWUzMjczOTU2OTc=", "number": 350, "title": "Spurious warnings from tiffile", "user": {"login": "kohr-h", "id": 5030250, "node_id": "MDQ6VXNlcjUwMzAyNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5030250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kohr-h", "html_url": "https://github.com/kohr-h", "followers_url": "https://api.github.com/users/kohr-h/followers", "following_url": "https://api.github.com/users/kohr-h/following{/other_user}", "gists_url": "https://api.github.com/users/kohr-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/kohr-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kohr-h/subscriptions", "organizations_url": "https://api.github.com/users/kohr-h/orgs", "repos_url": "https://api.github.com/users/kohr-h/repos", "events_url": "https://api.github.com/users/kohr-h/events{/privacy}", "received_events_url": "https://api.github.com/users/kohr-h/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 287459046, "node_id": "MDU6TGFiZWwyODc0NTkwNDY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20tifffile", "name": "plugin: tifffile", "color": "c7def8", "default": false, "description": null}, {"id": 223609055, "node_id": "MDU6TGFiZWwyMjM2MDkwNTU=", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20task", "name": "type: task", "color": "6339a0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2018-05-29T16:24:33Z", "updated_at": "2018-11-06T20:43:29Z", "closed_at": "2018-11-06T20:43:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When reading a TIFF file, I get the following warning:\r\n```\r\n[...]/_tifffile.py:7285: UserWarning: module 'imageio.plugins._tifffile' has no attribute 'reverse_bitorder'\r\n  Functionality might be degraded or be slow.\r\n\r\n  warnings.warn(\"%s%s\" % (e, warn))\r\n```\r\nThis happens on Linux and Windows, with version 2.3.0 from conda as well as with current Git master, commit 1335217992aca7558a3600bd11cd05a22e698e22.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/345", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/345/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/345/events", "html_url": "https://github.com/imageio/imageio/issues/345", "id": 325236446, "node_id": "MDU6SXNzdWUzMjUyMzY0NDY=", "number": 345, "title": "imageio.imread RGB or BGR?", "user": {"login": "yw155", "id": 20606278, "node_id": "MDQ6VXNlcjIwNjA2Mjc4", "avatar_url": "https://avatars3.githubusercontent.com/u/20606278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yw155", "html_url": "https://github.com/yw155", "followers_url": "https://api.github.com/users/yw155/followers", "following_url": "https://api.github.com/users/yw155/following{/other_user}", "gists_url": "https://api.github.com/users/yw155/gists{/gist_id}", "starred_url": "https://api.github.com/users/yw155/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yw155/subscriptions", "organizations_url": "https://api.github.com/users/yw155/orgs", "repos_url": "https://api.github.com/users/yw155/repos", "events_url": "https://api.github.com/users/yw155/events{/privacy}", "received_events_url": "https://api.github.com/users/yw155/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-22T10:38:55Z", "updated_at": "2018-05-24T13:14:31Z", "closed_at": "2018-05-24T12:38:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to ask that what is the color channel sequence of imageio.imread, is it RGB or BGR? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/344", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/344/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/344/events", "html_url": "https://github.com/imageio/imageio/issues/344", "id": 324459076, "node_id": "MDU6SXNzdWUzMjQ0NTkwNzY=", "number": 344, "title": "Invalid data found when processing input - mp4 video from web", "user": {"login": "ncclementi", "id": 7526622, "node_id": "MDQ6VXNlcjc1MjY2MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7526622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ncclementi", "html_url": "https://github.com/ncclementi", "followers_url": "https://api.github.com/users/ncclementi/followers", "following_url": "https://api.github.com/users/ncclementi/following{/other_user}", "gists_url": "https://api.github.com/users/ncclementi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ncclementi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ncclementi/subscriptions", "organizations_url": "https://api.github.com/users/ncclementi/orgs", "repos_url": "https://api.github.com/users/ncclementi/repos", "events_url": "https://api.github.com/users/ncclementi/events{/privacy}", "received_events_url": "https://api.github.com/users/ncclementi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-18T15:38:30Z", "updated_at": "2018-05-18T19:18:55Z", "closed_at": "2018-05-18T19:18:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello I'm having this error when trying to use the `get_reader` with a `mp4` video that is online. The code is part of a lesson of a course that is online, and you can find in this link\r\n\r\nhttps://github.com/engineersCode/EngComp3_flyatchange/blob/master/notebooks_en/1_Catch_Motion.ipynb\r\n\r\nThe specific code I'm trying to run is and is giving me errors is:\r\n```\r\nIn [1]: import imageio\r\n\r\nIn [2]: reader = imageio.get_reader('http://techtv.mit.edu/videos/831-strobe-of-a-falling-ball/download.mp4')\r\n```\r\nThe error:\r\n```\r\n---------------------------------------------------------------------------\r\nOSError                                   Traceback (most recent call last)\r\n<ipython-input-2-7969f59dd974> in <module>()\r\n----> 1 reader = imageio.get_reader('http://techtv.mit.edu/videos/831-strobe-of-a-falling-ball/download.mp4', ffmpeg_params=['-r','30'])\r\n\r\n~/miniconda3/envs/test_im/lib/python3.6/site-packages/imageio/core/functions.py in get_reader(uri, format, mode, **kwargs)\r\n    127 \r\n    128     # Return its reader object\r\n--> 129     return format.get_reader(request)\r\n    130 \r\n    131 \r\n\r\n~/miniconda3/envs/test_im/lib/python3.6/site-packages/imageio/core/format.py in get_reader(self, request)\r\n    166             raise RuntimeError('Format %s cannot read in mode %r' % \r\n    167                                (self.name, select_mode))\r\n--> 168         return self.Reader(self, request)\r\n    169 \r\n    170     def get_writer(self, request):\r\n\r\n~/miniconda3/envs/test_im/lib/python3.6/site-packages/imageio/core/format.py in __init__(self, format, request)\r\n    215             self._request = request\r\n    216             # Open the reader/writer\r\n--> 217             self._open(**self.request.kwargs.copy())\r\n    218 \r\n    219         @property\r\n\r\n~/miniconda3/envs/test_im/lib/python3.6/site-packages/imageio/plugins/ffmpeg.py in _open(self, loop, size, pixelformat, print_info, ffmpeg_params, input_params, output_params, fps)\r\n    356             # Start ffmpeg subprocess and get meta information\r\n    357             self._initialize()\r\n--> 358             self._load_infos()\r\n    359 \r\n    360             # For cameras, create thread that keeps reading the images\r\n\r\n~/miniconda3/envs/test_im/lib/python3.6/site-packages/imageio/plugins/ffmpeg.py in _load_infos(self)\r\n    521                     err2 = self._stderr_catcher.get_text(0.2)\r\n    522                     fmt = 'Could not load meta information\\n=== stderr ===\\n%s'\r\n--> 523                     raise IOError(fmt % err2)\r\n    524 \r\n    525             if self.request.kwargs.get('print_info', False):\r\n\r\nOSError: Could not load meta information\r\n=== stderr ===\r\n\r\nffmpeg version 4.0 Copyright (c) 2000-2018 the FFmpeg developers\r\n  built with gcc 4.8.2 (GCC) 20140120 (Red Hat 4.8.2-15)\r\n  configuration: --prefix=/home/naty/miniconda3/envs/test_im --disable-doc --enable-shared --enable-static --extra-cflags='-Wall -g -m64 -pipe -O3 -march=x86-64 -fPIC' --extra-cxxflags='-Wall -g -m64 -pipe -O3 -march=x86-64 -fPIC' --extra-libs='-lpthread -lm -lz' --enable-zlib --enable-pic --enable-pthreads --enable-gpl --enable-version3 --enable-hardcoded-tables --enable-avresample --enable-libfreetype --enable-gnutls --enable-libx264\r\n  libavutil      56. 14.100 / 56. 14.100\r\n  libavcodec     58. 18.100 / 58. 18.100\r\n  libavformat    58. 12.100 / 58. 12.100\r\n  libavdevice    58.  3.100 / 58.  3.100\r\n  libavfilter     7. 16.100 /  7. 16.100\r\n  libavresample   4.  0.  0 /  4.  0.  0\r\n  libswscale      5.  1.100 /  5.  1.100\r\n  libswresample   3.  1.100 /  3.  1.100\r\n  libpostproc    55.  1.100 / 55.  1.100\r\n[mov,mp4,m4a,3gp,3g2,mj2 @ 0xdc92c0] Format mov,mp4,m4a,3gp,3g2,mj2 detected only with low score of 1, misdetection possible!\r\n[mov,mp4,m4a,3gp,3g2,mj2 @ 0xdc92c0] moov atom not found\r\n/tmp/imageio_17lax31w.mp4: Invalid data found when processing input\r\n```\r\nNotes:\r\n``` \r\npython --version\r\nPython 3.6.5 :: Anaconda, Inc.\r\n\r\nimageio.__version__\r\n'2.3.0'\r\n```\r\n\r\nAny insights on what is  going on and how to fix this? \r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/343", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/343/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/343/events", "html_url": "https://github.com/imageio/imageio/issues/343", "id": 324297973, "node_id": "MDU6SXNzdWUzMjQyOTc5NzM=", "number": 343, "title": "After upgrade to v2.3.0, Ffmpeg process for webcam does not terminate (Python 2.7)", "user": {"login": "dennisvang", "id": 29799340, "node_id": "MDQ6VXNlcjI5Nzk5MzQw", "avatar_url": "https://avatars0.githubusercontent.com/u/29799340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dennisvang", "html_url": "https://github.com/dennisvang", "followers_url": "https://api.github.com/users/dennisvang/followers", "following_url": "https://api.github.com/users/dennisvang/following{/other_user}", "gists_url": "https://api.github.com/users/dennisvang/gists{/gist_id}", "starred_url": "https://api.github.com/users/dennisvang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dennisvang/subscriptions", "organizations_url": "https://api.github.com/users/dennisvang/orgs", "repos_url": "https://api.github.com/users/dennisvang/repos", "events_url": "https://api.github.com/users/dennisvang/events{/privacy}", "received_events_url": "https://api.github.com/users/dennisvang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-18T07:22:09Z", "updated_at": "2018-06-04T07:07:50Z", "closed_at": "2018-06-04T07:07:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Description\r\n-----------\r\n\r\nAfter upgrading from imageio v2.2.0 to v2.3.0 (on a Windows system with Python 2.7 environment), it appears that the ffmpeg process is no longer terminated properly after closing a webcam Reader instance.\r\n\r\nHow to reproduce issue\r\n------------------------\r\n\r\nHere's a minimal test:\r\n\r\n```python\r\nimport psutil\r\nimport imageio\r\n\r\ndef ffmpeg_alive():\r\n    \"\"\" enumerate ffmpeg processes, then wait for them to terminate \"\"\"\r\n    ffmpeg_processes = []\r\n    for process in psutil.process_iter():\r\n        try:\r\n            if 'ffmpeg' in process.name().lower():\r\n                ffmpeg_processes.append(process)\r\n        except psutil.NoSuchProcess as e:\r\n            print e.message\r\n    still_alive = False\r\n    if ffmpeg_processes:\r\n        __, still_alive = psutil.wait_procs(ffmpeg_processes, timeout=1)\r\n    return still_alive\r\n\r\n\r\ndef test_webcam_ffmpeg_process_termination():\r\n    \"\"\" open reader for a webcam, using context manager, then check ffmpeg process status \"\"\"\r\n    with imageio.get_reader('<video0>') as reader:\r\n        assert reader._proc is not None\r\n        assert ffmpeg_alive()\r\n    assert reader._proc is None\r\n    assert not ffmpeg_alive()\r\n\r\n\r\n# Run test\r\nprint 'imageio version {}'.format(imageio.__version__)\r\ntest_webcam_ffmpeg_process_termination()\r\n```\r\n\r\nOn my system this test *passes* when using a clean conda env running python 2.7 and imageio v2.2.0, but it *fails* when running an (otherwise identical) conda env with imageio v2.3.0 (environment details below). \r\n\r\nProbable cause\r\n---------------\r\n\r\nThe culprit appears to be the `shell=ISWIN` argument in the `sp.Popen` call in `ffmpeg.Reader._initialize`. \r\n\r\nProposed solution\r\n-------------------\r\nQuick fix for my specific case would be to remove the `shell` argument (i.e. revert that line to v2.2.0). However, the argument was probably added with a reason? \r\n\r\nOtherwise, a better option would probably be to modify the `ffmpeg.Reader._terminate` method, replacing `self._proc.kill()` by something like the following:\r\n\r\n```python\r\nif self.request._video:\r\n    self._proc.communicate('q')\r\nelse:\r\n    self._proc.kill()\r\n```\r\n\r\nAt least this works on my system.\r\n\r\nEnvironment details\r\n--------------------\r\n\r\nv2.2.0 environment:\r\n\r\n```\r\ncertifi                   2016.2.28                py27_0\r\nimageio                   2.2.0                     <pip>\r\nnumpy                     1.14.3                    <pip>\r\nPillow                    5.1.0                     <pip>\r\npip                       9.0.1                    py27_1\r\npsutil                    5.2.2                    py27_0\r\npython                    2.7.13                        1\r\nsetuptools                36.4.0                   py27_1\r\nvc                        9                             0\r\nvs2008_runtime            9.00.30729.5054               0\r\nwheel                     0.29.0                   py27_0\r\nwincertstore              0.2                      py27_0\r\n\r\n```\r\n\r\nv2.3.0 environment:\r\n\r\n```\r\ncertifi                   2016.2.28                py27_0\r\nimageio                   2.3.0                     <pip>\r\nnumpy                     1.14.3                    <pip>\r\nPillow                    5.1.0                     <pip>\r\npip                       9.0.1                    py27_1\r\npsutil                    5.2.2                    py27_0\r\npython                    2.7.13                        1\r\nsetuptools                36.4.0                   py27_1\r\nvc                        9                             0\r\nvs2008_runtime            9.00.30729.5054               0\r\nwheel                     0.29.0                   py27_0\r\nwincertstore              0.2                      py27_0\r\n\r\n```\r\n\r\nSystem is Windows 10 64 bit, using PyCharm professional 2018.1. Not sure if it matters, but for legacy reasons we are using Miniconda 32-bit.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/341", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/341/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/341/events", "html_url": "https://github.com/imageio/imageio/issues/341", "id": 319891784, "node_id": "MDU6SXNzdWUzMTk4OTE3ODQ=", "number": 341, "title": "RuntimeError when ffmpeg filter reduces # of frames", "user": {"login": "edhalter", "id": 11418429, "node_id": "MDQ6VXNlcjExNDE4NDI5", "avatar_url": "https://avatars2.githubusercontent.com/u/11418429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edhalter", "html_url": "https://github.com/edhalter", "followers_url": "https://api.github.com/users/edhalter/followers", "following_url": "https://api.github.com/users/edhalter/following{/other_user}", "gists_url": "https://api.github.com/users/edhalter/gists{/gist_id}", "starred_url": "https://api.github.com/users/edhalter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edhalter/subscriptions", "organizations_url": "https://api.github.com/users/edhalter/orgs", "repos_url": "https://api.github.com/users/edhalter/repos", "events_url": "https://api.github.com/users/edhalter/events{/privacy}", "received_events_url": "https://api.github.com/users/edhalter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 143381157, "node_id": "MDU6TGFiZWwxNDMzODExNTc=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20ffmpeg", "name": "plugin: ffmpeg", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-03T12:03:17Z", "updated_at": "2019-02-05T21:56:47Z", "closed_at": "2019-02-05T21:56:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "System: Linux, ffmpeg 3.3.6, imageio 2.3.0\r\n\r\nThis is a follow-up to Issue #294. That user was trying to pull I-frames from a video file, and ffmpeg.py needed some fiddling to put the ffmpeg parameters in the right order. That was solved in Pull #321.\r\n\r\nI'm trying to do the exact same thing -- actually found that issue page using google. But although the parameters now get passed in ok, a new error soon crops up. To reproduce:\r\n\r\n```python\r\nimport imageio\r\noutput_params = ['-vf', \"select='eq(pict_type\\,I)'\"]\r\npath = '/path/to/video.mp4'\r\nreader = imageio.get_reader(path, format='FFMPEG', print_info=False, output_params=output_params)\r\nprint('num frames:', len(reader))\r\nfor i, img in enumerate(reader):\r\nprint(i)\r\n```\r\n\r\nFor, say, a video w/ 100 frames and only 1 I-frame, the output is:\r\n\r\n```\r\nnum frames: 100\r\n0\r\n```\r\n\r\n... and then the exception:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/home/e/.local/lib64/python3.6/site-packages/imageio/plugins/ffmpeg.py\", line 565, in _read_frame_data\r\n    (len(s), framesize))\r\nRuntimeError: Frame is 0 bytes, but expected 230400.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/e/.local/lib64/python3.6/site-packages/imageio/core/format.py\", line 397, in iter_data\r\n    im, meta = self._get_data(i)\r\n  File \"/home/e/.local/lib64/python3.6/site-packages/imageio/plugins/ffmpeg.py\", line 396, in _get_data\r\n    result, is_new = self._read_frame()\r\n  File \"/home/e/.local/lib64/python3.6/site-packages/imageio/plugins/ffmpeg.py\", line 585, in _read_frame\r\n    s, is_new = self._read_frame_data()\r\n  File \"/home/e/.local/lib64/python3.6/site-packages/imageio/plugins/ffmpeg.py\", line 571, in _read_frame_data\r\n    raise CannotReadFrameError(fmt % (self._pos, err1, err2))\r\nimageio.core.format.CannotReadFrameError: Could not read frame 0:\r\nFrame is 0 bytes, but expected 230400.\r\n```\r\n\r\nThe problem is that ffmpeg reports the total number of frames in the video, and imageio then expects to read that number of frames. But the pipe from ffmpeg contains fewer frames, based on the filter parameters that were used. imageio then chokes when it iterates past the last frame returned, expecting more.\r\n\r\nBest option might be to just stop iterating silently, maybe print a warning. Don't think there's a clever way to get the \"real\" number of returned frames. ffmpeg's just passing raw video using the image2pipe \"muxer\", so there are no headers in the data w/ frame numbers, timestamps, etc. You can get frame info out of band, using e.g.\r\n\r\n```\r\nffprobe -select_streams v -show_frames -show_entries frame=pkt_pts_time,pict_type -of csv=print_section=0 /path/to/video.mp4\r\n```\r\n\r\nBut that's slow and requires parsing the video file again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/340", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/340/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/340/events", "html_url": "https://github.com/imageio/imageio/issues/340", "id": 316633451, "node_id": "MDU6SXNzdWUzMTY2MzM0NTE=", "number": 340, "title": "Is webm file supported?", "user": {"login": "pipehappy1", "id": 8848004, "node_id": "MDQ6VXNlcjg4NDgwMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8848004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipehappy1", "html_url": "https://github.com/pipehappy1", "followers_url": "https://api.github.com/users/pipehappy1/followers", "following_url": "https://api.github.com/users/pipehappy1/following{/other_user}", "gists_url": "https://api.github.com/users/pipehappy1/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipehappy1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipehappy1/subscriptions", "organizations_url": "https://api.github.com/users/pipehappy1/orgs", "repos_url": "https://api.github.com/users/pipehappy1/repos", "events_url": "https://api.github.com/users/pipehappy1/events{/privacy}", "received_events_url": "https://api.github.com/users/pipehappy1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-23T01:32:05Z", "updated_at": "2018-04-24T01:03:48Z", "closed_at": "2018-04-24T01:03:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "`reader = imageio.get_reader('/path/to/movie.webm')`\r\n\r\ngets\r\n\r\n`Unknown standard image '/path/to/movie.webm'.`\r\n\r\nCould someone shed some light on this? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/339", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/339/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/339/events", "html_url": "https://github.com/imageio/imageio/issues/339", "id": 316440094, "node_id": "MDU6SXNzdWUzMTY0NDAwOTQ=", "number": 339, "title": "Reading a .jpg within a .zip - cannot seek", "user": {"login": "jacob-roth", "id": 4275755, "node_id": "MDQ6VXNlcjQyNzU3NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4275755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacob-roth", "html_url": "https://github.com/jacob-roth", "followers_url": "https://api.github.com/users/jacob-roth/followers", "following_url": "https://api.github.com/users/jacob-roth/following{/other_user}", "gists_url": "https://api.github.com/users/jacob-roth/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacob-roth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacob-roth/subscriptions", "organizations_url": "https://api.github.com/users/jacob-roth/orgs", "repos_url": "https://api.github.com/users/jacob-roth/repos", "events_url": "https://api.github.com/users/jacob-roth/events{/privacy}", "received_events_url": "https://api.github.com/users/jacob-roth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495624726, "node_id": "MDU6TGFiZWw0OTU2MjQ3MjY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20pillow", "name": "plugin: pillow", "color": "c5def5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-20T23:36:06Z", "updated_at": "2018-09-04T10:14:19Z", "closed_at": "2018-09-04T10:14:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to read a `.jpg` file that is stored in `archive.zip` with the following command\r\n\r\n`imageio.imread(\"/Users/myuser/Desktop/archive.zip/testimage.jpg\")`\r\n\r\nbut I'm getting an unsupported operation error somehow related to `Pillow`:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nUnsupportedOperation                      Traceback (most recent call last)\r\n/Users/myuser/anaconda/envs/python3/lib/python3.5/site-packages/imageio/plugins/pillow.py in pil_try_read(im)\r\n    490         # this will raise an IOError if the file is not readable\r\n--> 491         im.getdata()[0]\r\n    492     except IOError as e:\r\n\r\n/Users/myuser/anaconda/envs/python3/lib/python3.5/site-packages/PIL/Image.py in getdata(self, band)\r\n   1164         return ImageMode.getmode(self.mode).bands\r\n-> 1165 \r\n   1166     def getbbox(self):\r\n\r\n/Users/myuser/anaconda/envs/python3/lib/python3.5/site-packages/PIL/ImageFile.py in load(self)\r\n    202             for decoder_name, extents, offset, args in self.tile:\r\n--> 203                 decoder = Image._getdecoder(self.mode, decoder_name,\r\n    204                                             args, self.decoderconfig)\r\n\r\nUnsupportedOperation: seek\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-23-308b1f992084> in <module>()\r\n----> 1 imageio.imread(\"Archive.zip/0.jpg\")\r\n\r\n/Users/myuser/anaconda/envs/python3/lib/python3.5/site-packages/imageio/core/functions.py in imread(uri, format, **kwargs)\r\n    204 \r\n    205     # Get reader and read first\r\n--> 206     reader = read(uri, format, 'i', **kwargs)\r\n    207     with reader:\r\n    208         return reader.get_data(0)\r\n\r\n/Users/myuser/anaconda/envs/python3/lib/python3.5/site-packages/imageio/core/functions.py in get_reader(uri, format, mode, **kwargs)\r\n    127 \r\n    128     # Return its reader object\r\n--> 129     return format.get_reader(request)\r\n    130 \r\n    131 \r\n\r\n/Users/myuser/anaconda/envs/python3/lib/python3.5/site-packages/imageio/core/format.py in get_reader(self, request)\r\n    166             raise RuntimeError('Format %s cannot read in mode %r' % \r\n    167                                (self.name, select_mode))\r\n--> 168         return self.Reader(self, request)\r\n    169 \r\n    170     def get_writer(self, request):\r\n\r\n/Users/myuser/anaconda/envs/python3/lib/python3.5/site-packages/imageio/core/format.py in __init__(self, format, request)\r\n    215             self._request = request\r\n    216             # Open the reader/writer\r\n--> 217             self._open(**self.request.kwargs.copy())\r\n    218 \r\n    219         @property\r\n\r\n/Users/myuser/anaconda/envs/python3/lib/python3.5/site-packages/imageio/plugins/pillow.py in _open(self, pilmode, as_gray, exifrotate)\r\n    396         def _open(self, pilmode=None, as_gray=False, exifrotate=True):\r\n    397             return PillowFormat.Reader._open(self,\r\n--> 398                                              pilmode=pilmode, as_gray=as_gray)\r\n    399 \r\n    400         def _get_file(self):\r\n\r\n/Users/myuser/anaconda/envs/python3/lib/python3.5/site-packages/imageio/plugins/pillow.py in _open(self, pilmode, as_gray)\r\n    123             if hasattr(Image, '_decompression_bomb_check'):\r\n    124                 Image._decompression_bomb_check(self._im.size)\r\n--> 125             pil_try_read(self._im)\r\n    126             # Store args\r\n    127             self._kwargs = dict(mode=pilmode, as_gray=as_gray,\r\n\r\n/Users/myuser/anaconda/envs/python3/lib/python3.5/site-packages/imageio/plugins/pillow.py in pil_try_read(im)\r\n    498                          'Please see documentation at: %s'\r\n    499                          % (im.filename, pillow_error_message, site))\r\n--> 500         raise ValueError(error_message)\r\n    501 \r\n    502 \r\n\r\nValueError: Could not load \"\" \r\nReason: \"seek\"\r\nPlease see documentation at: http://pillow.readthedocs.io/en/latest/installation.html#external-libraries\r\n```\r\nI reinstalled `Pillow` but didn't see what else to do from the `external-libraries` docs. Any advice? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/338", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/338/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/338/events", "html_url": "https://github.com/imageio/imageio/issues/338", "id": 316167969, "node_id": "MDU6SXNzdWUzMTYxNjc5Njk=", "number": 338, "title": "Transform numpy array image to imageio object without writing it to disk", "user": {"login": "hipoglucido", "id": 13640946, "node_id": "MDQ6VXNlcjEzNjQwOTQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/13640946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hipoglucido", "html_url": "https://github.com/hipoglucido", "followers_url": "https://api.github.com/users/hipoglucido/followers", "following_url": "https://api.github.com/users/hipoglucido/following{/other_user}", "gists_url": "https://api.github.com/users/hipoglucido/gists{/gist_id}", "starred_url": "https://api.github.com/users/hipoglucido/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hipoglucido/subscriptions", "organizations_url": "https://api.github.com/users/hipoglucido/orgs", "repos_url": "https://api.github.com/users/hipoglucido/repos", "events_url": "https://api.github.com/users/hipoglucido/events{/privacy}", "received_events_url": "https://api.github.com/users/hipoglucido/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-20T08:08:31Z", "updated_at": "2018-04-20T14:20:51Z", "closed_at": "2018-04-20T14:20:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a list of images as numpy arrays in RGB format and I want to make a gif out of them. This images are generated by my program, do I need to write them to disk and then read them back into a imageio object? Isn't here a way to transform them directly so I don't have to write the images to disk?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/335", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/335/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/335/events", "html_url": "https://github.com/imageio/imageio/issues/335", "id": 314333340, "node_id": "MDU6SXNzdWUzMTQzMzMzNDA=", "number": 335, "title": "Can't always read from url", "user": {"login": "Tadaboody", "id": 6463334, "node_id": "MDQ6VXNlcjY0NjMzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6463334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tadaboody", "html_url": "https://github.com/Tadaboody", "followers_url": "https://api.github.com/users/Tadaboody/followers", "following_url": "https://api.github.com/users/Tadaboody/following{/other_user}", "gists_url": "https://api.github.com/users/Tadaboody/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tadaboody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tadaboody/subscriptions", "organizations_url": "https://api.github.com/users/Tadaboody/orgs", "repos_url": "https://api.github.com/users/Tadaboody/repos", "events_url": "https://api.github.com/users/Tadaboody/events{/privacy}", "received_events_url": "https://api.github.com/users/Tadaboody/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495624726, "node_id": "MDU6TGFiZWw0OTU2MjQ3MjY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20pillow", "name": "plugin: pillow", "color": "c5def5", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-04-14T14:31:26Z", "updated_at": "2020-02-18T15:25:16Z", "closed_at": "2020-02-18T15:25:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running the following code snippet\r\n\r\n```python\r\n#test.py\r\nimport imageio  \r\ngif = imageio.mimread(\"\"\"https://upload.wikimedia.org/wikipedia/commons/2/2c/Rotating_earth_%28large%29.gif\"\"\")\r\nprint(gif.shape)\r\n```   \r\n![The gif](https://upload.wikimedia.org/wikipedia/commons/2/2c/Rotating_earth_%28large%29.gif)\r\n\r\nresults in an error.  \r\nfull traceback:  \r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 2, in <module>\r\n    gif = imageio.mimread(\"https://media.giphy.com/media/3o6Zth3OnNv6qDGQ9y/giphy.gif\")\r\n  File \"/home/tomer/pet-projects/RevBot/venv/lib/python3.5/site-packages/imageio/core/functions.py\", line 281, in mimread\r\n    reader = read(uri, format, 'I', **kwargs)\r\n  File \"/home/tomer/pet-projects/RevBot/venv/lib/python3.5/site-packages/imageio/core/functions.py\", line 129, in get_reader\r\n    return format.get_reader(request)\r\n  File \"/home/tomer/pet-projects/RevBot/venv/lib/python3.5/site-packages/imageio/core/format.py\", line 168, in get_reader\r\n    return self.Reader(self, request)\r\n  File \"/home/tomer/pet-projects/RevBot/venv/lib/python3.5/site-packages/imageio/core/format.py\", line 217, in __init__\r\n    self._open(**self.request.kwargs.copy())\r\n  File \"/home/tomer/pet-projects/RevBot/venv/lib/python3.5/site-packages/imageio/plugins/pillowmulti.py\", line 57, in _open\r\n    return PillowFormat.Reader._open(self)\r\n  File \"/home/tomer/pet-projects/RevBot/venv/lib/python3.5/site-packages/imageio/plugins/pillow.py\", line 131, in _open\r\n    if hasattr(self._im, 'n_frames'):\r\n  File \"/home/tomer/pet-projects/RevBot/venv/lib/python3.5/site-packages/PIL/GifImagePlugin.py\", line 96, in n_frames\r\n    self.seek(self.tell() + 1)\r\n  File \"/home/tomer/pet-projects/RevBot/venv/lib/python3.5/site-packages/PIL/GifImagePlugin.py\", line 128, in seek\r\n    self._seek(f)\r\n  File \"/home/tomer/pet-projects/RevBot/venv/lib/python3.5/site-packages/PIL/GifImagePlugin.py\", line 158, in _seek\r\n    self.fp.seek(self.__offset)\r\n  File \"/home/tomer/pet-projects/RevBot/venv/lib/python3.5/site-packages/imageio/core/request.py\", line 511, in seek\r\n    ori_seek(i, mode)\r\nio.UnsupportedOperation: seek\r\n```\r\n\r\nRun on python 3.5 on Ubuntu 16.04 LTS", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/333", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/333/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/333/events", "html_url": "https://github.com/imageio/imageio/issues/333", "id": 312446694, "node_id": "MDU6SXNzdWUzMTI0NDY2OTQ=", "number": 333, "title": "Clarification regarding object returned by imread", "user": {"login": "Overdrivr", "id": 1294805, "node_id": "MDQ6VXNlcjEyOTQ4MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1294805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Overdrivr", "html_url": "https://github.com/Overdrivr", "followers_url": "https://api.github.com/users/Overdrivr/followers", "following_url": "https://api.github.com/users/Overdrivr/following{/other_user}", "gists_url": "https://api.github.com/users/Overdrivr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Overdrivr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Overdrivr/subscriptions", "organizations_url": "https://api.github.com/users/Overdrivr/orgs", "repos_url": "https://api.github.com/users/Overdrivr/repos", "events_url": "https://api.github.com/users/Overdrivr/events{/privacy}", "received_events_url": "https://api.github.com/users/Overdrivr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-09T08:54:34Z", "updated_at": "2018-09-04T12:20:32Z", "closed_at": "2018-09-04T12:20:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "All docs say that `imageio.imread` return a numpy array. \r\nA few tests show that it's not exactly the case, it's returning an `imageio.core.util.Image` instance.\r\nSo I'm guessing this Image instance is (partially?) duck-typing a numpy array.\r\n\r\n- How can I get a native numpy array from this object ?\r\n- Should this be clarified in README, docs ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/332", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/332/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/332/events", "html_url": "https://github.com/imageio/imageio/issues/332", "id": 312135695, "node_id": "MDU6SXNzdWUzMTIxMzU2OTU=", "number": 332, "title": "how to open an image file as rgb", "user": {"login": "wenouyang", "id": 5430158, "node_id": "MDQ6VXNlcjU0MzAxNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5430158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wenouyang", "html_url": "https://github.com/wenouyang", "followers_url": "https://api.github.com/users/wenouyang/followers", "following_url": "https://api.github.com/users/wenouyang/following{/other_user}", "gists_url": "https://api.github.com/users/wenouyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wenouyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wenouyang/subscriptions", "organizations_url": "https://api.github.com/users/wenouyang/orgs", "repos_url": "https://api.github.com/users/wenouyang/repos", "events_url": "https://api.github.com/users/wenouyang/events{/privacy}", "received_events_url": "https://api.github.com/users/wenouyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-06T22:11:54Z", "updated_at": "2018-04-11T08:30:19Z", "closed_at": "2018-04-11T08:30:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have an existing code segment reading image using `scipy.misc`\r\n`imref = misc.imread(self.file_image, False, \"RGB\")`\r\n\r\nIf I would like to replace it with imageio, how to do that, can I just use\r\n\r\n`imref = imageio.imread(self.file_image, False). `\r\nI am not clear where to setup the `\"RGB\"` parameter while using `imageio.imread.`\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/331", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/331/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/331/events", "html_url": "https://github.com/imageio/imageio/issues/331", "id": 312116120, "node_id": "MDU6SXNzdWUzMTIxMTYxMjA=", "number": 331, "title": "Understanding gif processing", "user": {"login": "carlosdubus", "id": 713000, "node_id": "MDQ6VXNlcjcxMzAwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/713000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosdubus", "html_url": "https://github.com/carlosdubus", "followers_url": "https://api.github.com/users/carlosdubus/followers", "following_url": "https://api.github.com/users/carlosdubus/following{/other_user}", "gists_url": "https://api.github.com/users/carlosdubus/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosdubus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosdubus/subscriptions", "organizations_url": "https://api.github.com/users/carlosdubus/orgs", "repos_url": "https://api.github.com/users/carlosdubus/repos", "events_url": "https://api.github.com/users/carlosdubus/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosdubus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495624726, "node_id": "MDU6TGFiZWw0OTU2MjQ3MjY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20pillow", "name": "plugin: pillow", "color": "c5def5", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-06T20:59:08Z", "updated_at": "2018-09-05T07:46:35Z", "closed_at": "2018-09-05T07:46:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, this is more a question than an issue.\r\n\r\nI thought if I did the following, I would get the same pixel data back. Instead I get single int values:\r\n\r\n```\r\nimport imageio\r\nimport numpy as np\r\n\r\n# write\r\ngif = imageio.get_writer(\"test.gif\")\r\npixel = np.array([0,0,0,255], dtype=np.uint8)\r\nprint(pixel)\r\ngif.append_data(np.array([[pixel]]))\r\npixel = np.array([140,212,245,255], dtype=np.uint8)\r\nprint(pixel)\r\ngif.append_data(np.array([[pixel]]))\r\ngif.close()\r\n\r\n# read\r\ngif = imageio.get_reader(\"test.gif\")\r\ndata = gif.get_next_data()\r\nprint(data[0][0])\r\ndata = gif.get_next_data()\r\nprint(data[0][0])\r\n```\r\n\r\nOutput:\r\n```\r\n[  0   0   0 255]\r\n[140 212 245 255]\r\n0\r\n194\r\n```\r\n\r\nWhy I don't get the same pixels back?\r\n\r\nThanks for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/329", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/329/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/329/events", "html_url": "https://github.com/imageio/imageio/issues/329", "id": 310272322, "node_id": "MDU6SXNzdWUzMTAyNzIzMjI=", "number": 329, "title": "Unable to properly read multi-channel 16-bit png files", "user": {"login": "Amir-Arsalan", "id": 6061721, "node_id": "MDQ6VXNlcjYwNjE3MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6061721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amir-Arsalan", "html_url": "https://github.com/Amir-Arsalan", "followers_url": "https://api.github.com/users/Amir-Arsalan/followers", "following_url": "https://api.github.com/users/Amir-Arsalan/following{/other_user}", "gists_url": "https://api.github.com/users/Amir-Arsalan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amir-Arsalan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amir-Arsalan/subscriptions", "organizations_url": "https://api.github.com/users/Amir-Arsalan/orgs", "repos_url": "https://api.github.com/users/Amir-Arsalan/repos", "events_url": "https://api.github.com/users/Amir-Arsalan/events{/privacy}", "received_events_url": "https://api.github.com/users/Amir-Arsalan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 495624726, "node_id": "MDU6TGFiZWw0OTU2MjQ3MjY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20pillow", "name": "plugin: pillow", "color": "c5def5", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-03-31T21:09:19Z", "updated_at": "2018-09-03T19:21:48Z", "closed_at": "2018-09-03T19:21:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "You can download a multi-channel, 16-bit png file from [here](http://www.fnordware.com/superpng/samples.html). `imageio.imread()` will load the image but also converts it to 8-bits. Is this a bug or an expected behavior? How can I read multi-channel, 16-bit png files? Any solution, even from other packages, would be appreciated. Note that I am using Python 3.5.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/328", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/328/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/328/events", "html_url": "https://github.com/imageio/imageio/issues/328", "id": 310089228, "node_id": "MDU6SXNzdWUzMTAwODkyMjg=", "number": 328, "title": "TIFF support broken in Python 2.7", "user": {"login": "letmaik", "id": 530988, "node_id": "MDQ6VXNlcjUzMDk4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/530988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/letmaik", "html_url": "https://github.com/letmaik", "followers_url": "https://api.github.com/users/letmaik/followers", "following_url": "https://api.github.com/users/letmaik/following{/other_user}", "gists_url": "https://api.github.com/users/letmaik/gists{/gist_id}", "starred_url": "https://api.github.com/users/letmaik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/letmaik/subscriptions", "organizations_url": "https://api.github.com/users/letmaik/orgs", "repos_url": "https://api.github.com/users/letmaik/repos", "events_url": "https://api.github.com/users/letmaik/events{/privacy}", "received_events_url": "https://api.github.com/users/letmaik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148609847, "node_id": "MDU6TGFiZWwxNDg2MDk4NDc=", "url": "https://api.github.com/repos/imageio/imageio/labels/building/installing", "name": "building/installing", "color": "207de5", "default": false, "description": null}, {"id": 287459046, "node_id": "MDU6TGFiZWwyODc0NTkwNDY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20tifffile", "name": "plugin: tifffile", "color": "c7def8", "default": false, "description": null}, {"id": 38460459, "node_id": "MDU6TGFiZWwzODQ2MDQ1OQ==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-30T15:06:59Z", "updated_at": "2018-04-03T11:04:49Z", "closed_at": "2018-04-03T11:04:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "PR https://github.com/imageio/imageio/pull/310 updated Tifffile which now requires `enum34` and `futures` packages on Python 2.7. Therefore, those dependencies should be added to imageio for Python 2. Trying to save an image as TIFF currently fails with \"ImportError: No module named concurrent.futures\".\r\n\r\n```\r\n[...]\r\n  File \"/Users/travis/build/letmaik/rawpy/venv/lib/python2.7/site-packages/imageio/core/functions.py\", line 244, in imwrite\r\n    writer = get_writer(uri, format, 'i', **kwargs)\r\n  File \"/Users/travis/build/letmaik/rawpy/venv/lib/python2.7/site-packages/imageio/core/functions.py\", line 173, in get_writer\r\n    return format.get_writer(request)\r\n  File \"/Users/travis/build/letmaik/rawpy/venv/lib/python2.7/site-packages/imageio/core/format.py\", line 181, in get_writer\r\n    return self.Writer(self, request)\r\n  File \"/Users/travis/build/letmaik/rawpy/venv/lib/python2.7/site-packages/imageio/core/format.py\", line 217, in __init__\r\n    self._open(**self.request.kwargs.copy())\r\n  File \"/Users/travis/build/letmaik/rawpy/venv/lib/python2.7/site-packages/imageio/plugins/tifffile.py\", line 229, in _open\r\n    load_lib()\r\n  File \"/Users/travis/build/letmaik/rawpy/venv/lib/python2.7/site-packages/imageio/plugins/tifffile.py\", line 22, in load_lib\r\n    from . import _tifffile\r\n  File \"/Users/travis/build/letmaik/rawpy/venv/lib/python2.7/site-packages/imageio/plugins/_tifffile.py\", line 344, in <module>\r\n    import concurrent.futures\r\nImportError: No module named concurrent.futures\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/327", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/327/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/327/events", "html_url": "https://github.com/imageio/imageio/issues/327", "id": 309732337, "node_id": "MDU6SXNzdWUzMDk3MzIzMzc=", "number": 327, "title": "Can ffmpeg plugin support yuv420p output?", "user": {"login": "HermanChen", "id": 4134438, "node_id": "MDQ6VXNlcjQxMzQ0Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4134438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HermanChen", "html_url": "https://github.com/HermanChen", "followers_url": "https://api.github.com/users/HermanChen/followers", "following_url": "https://api.github.com/users/HermanChen/following{/other_user}", "gists_url": "https://api.github.com/users/HermanChen/gists{/gist_id}", "starred_url": "https://api.github.com/users/HermanChen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HermanChen/subscriptions", "organizations_url": "https://api.github.com/users/HermanChen/orgs", "repos_url": "https://api.github.com/users/HermanChen/repos", "events_url": "https://api.github.com/users/HermanChen/events{/privacy}", "received_events_url": "https://api.github.com/users/HermanChen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-29T12:18:36Z", "updated_at": "2018-04-09T06:10:28Z", "closed_at": "2018-04-09T06:10:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am try to get yuv420p output from ffmpeg plugin. But I found it is always output rgb format as ffmpeg image2pipe configuration.\r\nHow can I get yuv420p output from typical video file using imageio?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/326", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/326/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/326/events", "html_url": "https://github.com/imageio/imageio/issues/326", "id": 309102576, "node_id": "MDU6SXNzdWUzMDkxMDI1NzY=", "number": 326, "title": "mimwrite - option to turn interpolation off", "user": {"login": "catubc", "id": 4267452, "node_id": "MDQ6VXNlcjQyNjc0NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4267452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catubc", "html_url": "https://github.com/catubc", "followers_url": "https://api.github.com/users/catubc/followers", "following_url": "https://api.github.com/users/catubc/following{/other_user}", "gists_url": "https://api.github.com/users/catubc/gists{/gist_id}", "starred_url": "https://api.github.com/users/catubc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catubc/subscriptions", "organizations_url": "https://api.github.com/users/catubc/orgs", "repos_url": "https://api.github.com/users/catubc/repos", "events_url": "https://api.github.com/users/catubc/events{/privacy}", "received_events_url": "https://api.github.com/users/catubc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-27T19:28:56Z", "updated_at": "2018-03-29T14:44:28Z", "closed_at": "2018-03-29T14:44:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great tool. Whenever I convert a 3D movie (time by x_pixels by y_pixels) the movie comes out with a default interpolation (I think it is a bilinear interpolation). Is it possible to turn interpolation off? I couldn't see the option in your functions.py. Also possible to change color map and vmin/vmax?\r\n\r\nI do see these parameters in a main fucntion in ...plugins/_tifffile.py:\r\n```\r\ndef main():\r\n...\r\nopt('--interpol', dest='interpol', metavar='INTERPOL', default='bilinear',\r\n        help=\"image interpolation method\")\r\n```\r\n\r\nHere's my code for saving:\r\n\r\nimageio.mimwrite('movie.mp4', data_matrix, fps = 15)\r\n\r\nThanks,\r\ncatubc", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/323", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/323/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/323/events", "html_url": "https://github.com/imageio/imageio/issues/323", "id": 306590123, "node_id": "MDU6SXNzdWUzMDY1OTAxMjM=", "number": 323, "title": "bigtiff isn't working (with fix)", "user": {"login": "meyer650", "id": 37554117, "node_id": "MDQ6VXNlcjM3NTU0MTE3", "avatar_url": "https://avatars3.githubusercontent.com/u/37554117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meyer650", "html_url": "https://github.com/meyer650", "followers_url": "https://api.github.com/users/meyer650/followers", "following_url": "https://api.github.com/users/meyer650/following{/other_user}", "gists_url": "https://api.github.com/users/meyer650/gists{/gist_id}", "starred_url": "https://api.github.com/users/meyer650/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meyer650/subscriptions", "organizations_url": "https://api.github.com/users/meyer650/orgs", "repos_url": "https://api.github.com/users/meyer650/repos", "events_url": "https://api.github.com/users/meyer650/events{/privacy}", "received_events_url": "https://api.github.com/users/meyer650/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 287459046, "node_id": "MDU6TGFiZWwyODc0NTkwNDY=", "url": "https://api.github.com/repos/imageio/imageio/labels/plugin:%20tifffile", "name": "plugin: tifffile", "color": "c7def8", "default": false, "description": null}, {"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-19T18:56:28Z", "updated_at": "2018-09-03T19:13:12Z", "closed_at": "2018-09-03T19:13:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that an argument (append) was added to `TiffWriter.__init__`, but not the call in `TiffFormat.Writer._open`.\r\n\r\nOriginal (in imageio/plugins/tifffile.py):\r\n`\r\n           self._tf = _tifffile.TiffWriter(self.request.get_local_filename(),\r\n                                            bigtiff, byteorder, software)\r\n`\r\nCorrected:\r\n`\r\n           self._tf = _tifffile.TiffWriter(self.request.get_local_filename(),\r\n                                            False, bigtiff, byteorder, software)\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio/issues/322", "repository_url": "https://api.github.com/repos/imageio/imageio", "labels_url": "https://api.github.com/repos/imageio/imageio/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio/issues/322/comments", "events_url": "https://api.github.com/repos/imageio/imageio/issues/322/events", "html_url": "https://github.com/imageio/imageio/issues/322", "id": 306267205, "node_id": "MDU6SXNzdWUzMDYyNjcyMDU=", "number": 322, "title": "ImportError: Imageio Pillow requires Pillow, not PIL! ", "user": {"login": "Swiffers", "id": 1623148, "node_id": "MDQ6VXNlcjE2MjMxNDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1623148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swiffers", "html_url": "https://github.com/Swiffers", "followers_url": "https://api.github.com/users/Swiffers/followers", "following_url": "https://api.github.com/users/Swiffers/following{/other_user}", "gists_url": "https://api.github.com/users/Swiffers/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swiffers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swiffers/subscriptions", "organizations_url": "https://api.github.com/users/Swiffers/orgs", "repos_url": "https://api.github.com/users/Swiffers/repos", "events_url": "https://api.github.com/users/Swiffers/events{/privacy}", "received_events_url": "https://api.github.com/users/Swiffers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38460463, "node_id": "MDU6TGFiZWwzODQ2MDQ2Mw==", "url": "https://api.github.com/repos/imageio/imageio/labels/type:%20question", "name": "type: question", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-18T18:29:04Z", "updated_at": "2018-03-19T16:17:16Z", "closed_at": "2018-03-19T16:09:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi, \r\n\r\nI'm falling into this error, \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./script.py\", line 255, in add_watermark\r\n    watermark = (ImageClip(\"./watermark.png\")\r\n  File \"/usr/lib/python2.7/site-packages/moviepy/video/VideoClip.py\", line 968, in __init__\r\n    img = imread(img)\r\n  File \"/usr/lib/python2.7/site-packages/imageio/core/functions.py\", line 185, in imread\r\n    reader = read(uri, format, 'i', **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/imageio/core/functions.py\", line 105, in get_reader\r\n    format = formats.search_read_format(request)\r\n  File \"/usr/lib/python2.7/site-packages/imageio/core/format.py\", line 660, in search_read_format\r\n    if format.can_read(request):\r\n  File \"/usr/lib/python2.7/site-packages/imageio/core/format.py\", line 189, in can_read\r\n    return self._can_read(request)\r\n  File \"/usr/lib/python2.7/site-packages/imageio/plugins/pillow.py\", line 57, in _can_read\r\n    Image = self._init_pillow()\r\n  File \"/usr/lib/python2.7/site-packages/imageio/plugins/pillow.py\", line 43, in _init_pillow\r\n    raise ImportError('Imageio Pillow requires Pillow, not PIL!')\r\nImportError: Imageio Pillow requires Pillow, not PIL!\r\n```", "performed_via_github_app": null, "score": 1.0}]}