{"total_count": 326, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/facetoe/zenpy/issues/444", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/444/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/444/events", "html_url": "https://github.com/facetoe/zenpy/issues/444", "id": 675364914, "node_id": "MDU6SXNzdWU2NzUzNjQ5MTQ=", "number": 444, "title": "How to use SearchAPI to find tickets according to their CustomField id & value?", "user": {"login": "davidbernat", "id": 5396131, "node_id": "MDQ6VXNlcjUzOTYxMzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5396131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidbernat", "html_url": "https://github.com/davidbernat", "followers_url": "https://api.github.com/users/davidbernat/followers", "following_url": "https://api.github.com/users/davidbernat/following{/other_user}", "gists_url": "https://api.github.com/users/davidbernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidbernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidbernat/subscriptions", "organizations_url": "https://api.github.com/users/davidbernat/orgs", "repos_url": "https://api.github.com/users/davidbernat/repos", "events_url": "https://api.github.com/users/davidbernat/events{/privacy}", "received_events_url": "https://api.github.com/users/davidbernat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-08T00:09:33Z", "updated_at": "2020-08-08T11:44:39Z", "closed_at": "2020-08-08T11:44:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "No idea how to do this. \r\n\r\n```\r\nmy_field_number = 1010101001010\r\nclient = Zenpy(**cfg.zendesk_credentials)\r\nclient.tickets.create(Ticket(subject=\"My new ticket\",\r\n                             description=\"this is a long description\",\r\n                             custom_fields=[CustomField(id=my_field_number, value=\"my-favorite-id\")]))\r\n\r\nfor ticket in client.search('', type='ticket' ??????????????????):\r\n    print(ticket.to_dict())\r\n ```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/443", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/443/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/443/events", "html_url": "https://github.com/facetoe/zenpy/issues/443", "id": 672096466, "node_id": "MDU6SXNzdWU2NzIwOTY0NjY=", "number": 443, "title": "Unable to make use of \"async\" ticket creation ", "user": {"login": "ilyakamens", "id": 3293811, "node_id": "MDQ6VXNlcjMyOTM4MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3293811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilyakamens", "html_url": "https://github.com/ilyakamens", "followers_url": "https://api.github.com/users/ilyakamens/followers", "following_url": "https://api.github.com/users/ilyakamens/following{/other_user}", "gists_url": "https://api.github.com/users/ilyakamens/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilyakamens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilyakamens/subscriptions", "organizations_url": "https://api.github.com/users/ilyakamens/orgs", "repos_url": "https://api.github.com/users/ilyakamens/repos", "events_url": "https://api.github.com/users/ilyakamens/events{/privacy}", "received_events_url": "https://api.github.com/users/ilyakamens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960236, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzY=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T13:58:21Z", "updated_at": "2020-08-08T11:45:11Z", "closed_at": "2020-08-08T11:42:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst off, thanks for providing this library. This has made my integration with Zendesk much easier.\r\n\r\nPerhaps I just don't see it, but I don't seem to be able to make use of [the `async` ticket creation query parameter](https://developer.zendesk.com/rest_api/docs/support/tickets#create-ticket-asynchronously) using this library. I see `async` [here](https://github.com/facetoe/zenpy/blob/master/zenpy/lib/endpoint.py#L129), but I'm not sure how to trigger that via:\r\n\r\n```python\r\nzendesk_client.tickets.create(Ticket(...))\r\n```\r\n\r\nI tried the following to no avail:\r\n```python\r\n# Dictionary expansion is required in Python 3.7+ since `async` is reserved\r\nzendesk_client.tickets.create(Ticket(..., **{\"async\": True}))\r\nzendesk_client.tickets.create(Ticket(...), **{\"async\": True})\r\n```\r\n\r\nIt's also possible that I misinterpreted the responses in the above and one of them was indeed async.\r\n\r\nIf it's possible to make use of the `async` param, I'd very much appreciate an example showing how. If not, it'd be great if this was made available.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/439", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/439/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/439/events", "html_url": "https://github.com/facetoe/zenpy/issues/439", "id": 637480988, "node_id": "MDU6SXNzdWU2Mzc0ODA5ODg=", "number": 439, "title": "List tickets by organization id", "user": {"login": "ruchitrami", "id": 3747243, "node_id": "MDQ6VXNlcjM3NDcyNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3747243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruchitrami", "html_url": "https://github.com/ruchitrami", "followers_url": "https://api.github.com/users/ruchitrami/followers", "following_url": "https://api.github.com/users/ruchitrami/following{/other_user}", "gists_url": "https://api.github.com/users/ruchitrami/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruchitrami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruchitrami/subscriptions", "organizations_url": "https://api.github.com/users/ruchitrami/orgs", "repos_url": "https://api.github.com/users/ruchitrami/repos", "events_url": "https://api.github.com/users/ruchitrami/events{/privacy}", "received_events_url": "https://api.github.com/users/ruchitrami/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-12T04:48:24Z", "updated_at": "2020-06-20T22:14:07Z", "closed_at": "2020-06-20T22:14:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to make this organizations/{organization_id}/tickets call using zenpy but not able to find the method in the documentation. Is it possible?\r\n\r\nI am trying to list down tickets by organization for my interface. Search endpoint has certain delay in showing new tickets.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/438", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/438/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/438/events", "html_url": "https://github.com/facetoe/zenpy/issues/438", "id": 635960698, "node_id": "MDU6SXNzdWU2MzU5NjA2OTg=", "number": 438, "title": "how to use chats.incremental method to get all fields", "user": {"login": "sujianbin", "id": 17819634, "node_id": "MDQ6VXNlcjE3ODE5NjM0", "avatar_url": "https://avatars0.githubusercontent.com/u/17819634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sujianbin", "html_url": "https://github.com/sujianbin", "followers_url": "https://api.github.com/users/sujianbin/followers", "following_url": "https://api.github.com/users/sujianbin/following{/other_user}", "gists_url": "https://api.github.com/users/sujianbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sujianbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sujianbin/subscriptions", "organizations_url": "https://api.github.com/users/sujianbin/orgs", "repos_url": "https://api.github.com/users/sujianbin/repos", "events_url": "https://api.github.com/users/sujianbin/events{/privacy}", "received_events_url": "https://api.github.com/users/sujianbin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T06:14:03Z", "updated_at": "2020-06-22T05:44:24Z", "closed_at": "2020-06-22T05:44:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "    `def incremental(self, start_time, **kwargs):\r\n        \"\"\"\r\n        Retrieve bulk data from the chat incremental API.\r\n\r\n        :param fields: list of fields to retrieve. `Chat API Docs\r\n            <https://developer.zendesk.com/rest_api/docs/chat/incremental_export#usage-notes-resource-expansion>`__.\r\n        :param start_time: The time of the oldest object you are interested in.\r\n        \"\"\"\r\n        return self._query_zendesk(self.endpoint.incremental, self.object_type, start_time=start_time, **kwargs)`\r\nwhen I use this method with `chats.incremental(start_time = start_time, fields = [\"chats(*)\"])`\r\nit can only return id,other fields not return ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/437", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/437/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/437/events", "html_url": "https://github.com/facetoe/zenpy/issues/437", "id": 632535457, "node_id": "MDU6SXNzdWU2MzI1MzU0NTc=", "number": 437, "title": "Unable to retrieve ticket metrics for a specific ticket by ticket_id", "user": {"login": "ScientiaDavid", "id": 57763715, "node_id": "MDQ6VXNlcjU3NzYzNzE1", "avatar_url": "https://avatars0.githubusercontent.com/u/57763715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ScientiaDavid", "html_url": "https://github.com/ScientiaDavid", "followers_url": "https://api.github.com/users/ScientiaDavid/followers", "following_url": "https://api.github.com/users/ScientiaDavid/following{/other_user}", "gists_url": "https://api.github.com/users/ScientiaDavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/ScientiaDavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ScientiaDavid/subscriptions", "organizations_url": "https://api.github.com/users/ScientiaDavid/orgs", "repos_url": "https://api.github.com/users/ScientiaDavid/repos", "events_url": "https://api.github.com/users/ScientiaDavid/events{/privacy}", "received_events_url": "https://api.github.com/users/ScientiaDavid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-06T15:32:53Z", "updated_at": "2020-06-07T02:04:31Z", "closed_at": "2020-06-07T02:04:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirstly, thank you for the great work on zenpy, it's amazing :)\r\n\r\nI have a list of tickets (retrieved from the search endpoint) which I would like to gather some additional ticket metrics for. \r\n\r\nI can successfully use ticket_metrics() to retrieve all metrics with the following:\r\n`for t in (aZenpyClient.ticket_metrics()):` that you've mentioned elsewhere, but I'm unsure how to access the data within this. I've tried `t.id` or `t.ticket_id` ( and also `t.ticket_metrics.id` or `t.ticket_metrics.ticket_id` as I thought these might work) would have worked but I've had no luck. I was hoping to create a dictionary with the key's as `t.ticket_id` and the values as `t.id`. So I would have a link stored between the `ticket_id` and the metrics `id` from this separate endpoint.\r\n\r\nNext, I was going to use the dictionary as a reference between the `ticket_id` and metric `id` values. I know I need to use the metric `id` value (rather than `ticket_id`) to retrieve metrics for an individual ticket with `aTicketMetric = (aZenpyClient.tickets.metrics(id=aMetricId))`. Then I would append the these extra metrics I'd like to the current information I have for a particular ticket. It's a shame `aTicketMetric = (aZenpyClient.tickets.metrics(id=aMetricId))` won't accept a `ticket_id`, that would have simplified the solution.\r\n\r\nI know this method is inefficient but I don't have a large amount of tickets (approx. 300-400) in total. I couldn't think of a better way to get the metric `id` value needed for `aZenpyClient.tickets.metrics(id=aMetricId)`.\r\n\r\nCould you provide an additional example for `for t in (aZenpyClient.ticket_metrics()):` where any of the metrics are being used?\r\n\r\n\r\nBest regards,\r\nDavid", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/431", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/431/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/431/events", "html_url": "https://github.com/facetoe/zenpy/issues/431", "id": 622774532, "node_id": "MDU6SXNzdWU2MjI3NzQ1MzI=", "number": 431, "title": "after_url/cursor with Ticket Audits always points to records from today?", "user": {"login": "ldacey", "id": 12517855, "node_id": "MDQ6VXNlcjEyNTE3ODU1", "avatar_url": "https://avatars0.githubusercontent.com/u/12517855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldacey", "html_url": "https://github.com/ldacey", "followers_url": "https://api.github.com/users/ldacey/followers", "following_url": "https://api.github.com/users/ldacey/following{/other_user}", "gists_url": "https://api.github.com/users/ldacey/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldacey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldacey/subscriptions", "organizations_url": "https://api.github.com/users/ldacey/orgs", "repos_url": "https://api.github.com/users/ldacey/repos", "events_url": "https://api.github.com/users/ldacey/events{/privacy}", "received_events_url": "https://api.github.com/users/ldacey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-21T20:40:51Z", "updated_at": "2020-06-25T13:53:28Z", "closed_at": "2020-06-07T02:06:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to download historical Ticket Audit data. Ideally, this would be an incremental process where I would store the after_cursor and use it as my cursor during the next scheduled download process.\r\n\r\nI listed all cursors and selected one back in February which is where I want to start my data archive from. If I print the audits from this cursor, I do see some February records. If I reverse the ticket_audits (using the before_url), I keep going back in time which is correct.\r\n\r\nThere seems to be an issue specifically with the after_url/after_cursor. It seems to always point to today.\r\n\r\n\r\n```\r\naudit_generator = zenpy_client.tickets.audits(cursor='fDE1ODA1NzIzNjcuMHx8MTAyMDY0NjQ3MDAxNA==', limit=5)\r\nfor audit in audit_generator:\r\n    print(audit.created.date(), audit.created.time())\r\n\r\n```\r\n\r\nAlthough I limit 5 records, I see 10 results. Note that there is always data from today.\r\n```\r\n2020-02-01 15:51:42\r\n2020-02-01 15:50:27\r\n2020-02-01 15:49:50\r\n2020-02-01 15:49:49\r\n2020-02-01 15:49:26\r\n2020-05-21 20:30:02\r\n2020-05-21 20:29:51\r\n2020-05-21 20:27:09\r\n2020-05-21 20:26:01\r\n2020-05-21 20:25:53\r\n```\r\n\r\nIf I print the after_cursor:\r\n\r\n`print(audit_generator.after_cursor)`\r\n\r\n`MTU4MDU3MjMwMi4wfHwxMDIwNDM4MTA0MDUzfA==`\r\n\r\n```\r\nfor audit in audit_generator:\r\n    print(audit.created.date(), audit.created.time())\r\n```\r\n\r\nI return records from today. My cursor should be pointing to a record on 02/01 though...\r\n\r\n```\r\n2020-05-21 20:34:29\r\n2020-05-21 20:33:58\r\n2020-05-21 20:33:21\r\n2020-05-21 20:33:20\r\n2020-05-21 20:30:02\r\n```\r\n\r\nI tried to test this with the requests library as well manually. Am I doing something incorrectly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/430", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/430/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/430/events", "html_url": "https://github.com/facetoe/zenpy/issues/430", "id": 622360171, "node_id": "MDU6SXNzdWU2MjIzNjAxNzE=", "number": 430, "title": "ticket_form_id missing", "user": {"login": "Latte501", "id": 24316933, "node_id": "MDQ6VXNlcjI0MzE2OTMz", "avatar_url": "https://avatars3.githubusercontent.com/u/24316933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Latte501", "html_url": "https://github.com/Latte501", "followers_url": "https://api.github.com/users/Latte501/followers", "following_url": "https://api.github.com/users/Latte501/following{/other_user}", "gists_url": "https://api.github.com/users/Latte501/gists{/gist_id}", "starred_url": "https://api.github.com/users/Latte501/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Latte501/subscriptions", "organizations_url": "https://api.github.com/users/Latte501/orgs", "repos_url": "https://api.github.com/users/Latte501/repos", "events_url": "https://api.github.com/users/Latte501/events{/privacy}", "received_events_url": "https://api.github.com/users/Latte501/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-21T09:05:13Z", "updated_at": "2020-05-31T00:25:33Z", "closed_at": "2020-05-31T00:25:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating a ticket, is there a parameter for \"ticket_form_id\"?\r\nsee:\r\nhttps://developer.zendesk.com/apps/docs/support-api/ticket_sidebar#ticket-object", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/428", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/428/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/428/events", "html_url": "https://github.com/facetoe/zenpy/issues/428", "id": 620486022, "node_id": "MDU6SXNzdWU2MjA0ODYwMjI=", "number": 428, "title": "List all tickets for a particular requester_id", "user": {"login": "tvb", "id": 1263414, "node_id": "MDQ6VXNlcjEyNjM0MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1263414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tvb", "html_url": "https://github.com/tvb", "followers_url": "https://api.github.com/users/tvb/followers", "following_url": "https://api.github.com/users/tvb/following{/other_user}", "gists_url": "https://api.github.com/users/tvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/tvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tvb/subscriptions", "organizations_url": "https://api.github.com/users/tvb/orgs", "repos_url": "https://api.github.com/users/tvb/repos", "events_url": "https://api.github.com/users/tvb/events{/privacy}", "received_events_url": "https://api.github.com/users/tvb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T20:28:55Z", "updated_at": "2020-05-18T20:38:04Z", "closed_at": "2020-05-18T20:38:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe it's a stupid question. But how do I query the API to list all the ticket for a particular requester_id? I can't seem to figure this out from the docs..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/426", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/426/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/426/events", "html_url": "https://github.com/facetoe/zenpy/issues/426", "id": 616008913, "node_id": "MDU6SXNzdWU2MTYwMDg5MTM=", "number": 426, "title": "Search on E.164 formatted phone fails", "user": {"login": "ravichandrasekaran", "id": 1671691, "node_id": "MDQ6VXNlcjE2NzE2OTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1671691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ravichandrasekaran", "html_url": "https://github.com/ravichandrasekaran", "followers_url": "https://api.github.com/users/ravichandrasekaran/followers", "following_url": "https://api.github.com/users/ravichandrasekaran/following{/other_user}", "gists_url": "https://api.github.com/users/ravichandrasekaran/gists{/gist_id}", "starred_url": "https://api.github.com/users/ravichandrasekaran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ravichandrasekaran/subscriptions", "organizations_url": "https://api.github.com/users/ravichandrasekaran/orgs", "repos_url": "https://api.github.com/users/ravichandrasekaran/repos", "events_url": "https://api.github.com/users/ravichandrasekaran/events{/privacy}", "received_events_url": "https://api.github.com/users/ravichandrasekaran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-11T16:17:42Z", "updated_at": "2020-05-31T00:30:25Z", "closed_at": "2020-05-31T00:30:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Searching for a user by phone number fails if given the E.164 phone format (as you get back from the Zendesk API results).\r\n\r\n```\r\n>>> from zenpy import Zenpy\r\n>>> zpc = Zenpy(**credentials)\r\n>>> len(list(zpc.search(type=\"user\", phone=\"+15551234567\")))\r\n0\r\n>>> len(list(zpc.search(type=\"user\", phone=\"15551234567\")))\r\n1\r\n>>> usr.phone\r\n'+15551234567'\r\n```\r\n\r\nI believe the issue lies in the SearchEndpoint class and the need to [URL-encode the search string](https://developer.zendesk.com/rest_api/docs/support/search#url-encoding-the-search-string). \r\n\r\nhttps://github.com/facetoe/zenpy/blob/8f0faf293364db0d6b1103adc28d945be0163f69/zenpy/lib/endpoint.py#L266-L272", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/425", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/425/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/425/events", "html_url": "https://github.com/facetoe/zenpy/issues/425", "id": 615845006, "node_id": "MDU6SXNzdWU2MTU4NDUwMDY=", "number": 425, "title": "Error on a Date Custom Field", "user": {"login": "luxcem", "id": 876685, "node_id": "MDQ6VXNlcjg3NjY4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/876685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luxcem", "html_url": "https://github.com/luxcem", "followers_url": "https://api.github.com/users/luxcem/followers", "following_url": "https://api.github.com/users/luxcem/following{/other_user}", "gists_url": "https://api.github.com/users/luxcem/gists{/gist_id}", "starred_url": "https://api.github.com/users/luxcem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luxcem/subscriptions", "organizations_url": "https://api.github.com/users/luxcem/orgs", "repos_url": "https://api.github.com/users/luxcem/repos", "events_url": "https://api.github.com/users/luxcem/events{/privacy}", "received_events_url": "https://api.github.com/users/luxcem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960236, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzY=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-11T12:26:04Z", "updated_at": "2020-05-31T00:29:59Z", "closed_at": "2020-05-31T00:29:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to create a ticket with a Date Custom Field but the api always respond\r\n`zenpy.lib.exception.APIException: {\"error\": \"RecordInvalid\", \"description\": \"Record validation errors\", \"details\": {\"base\": [{\"description\": \"Date Field is not valid\", \"error\": \"InvalidValue\", \"ticket_field_id\": 111111, \"ticket_field_type\": \"FieldDate\"}]}}`\r\n\r\nI try to use `datetime.datetime.now()`, `2020-05-10`, `datetime.datetime.now().isoformat()` nothing works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/423", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/423/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/423/events", "html_url": "https://github.com/facetoe/zenpy/issues/423", "id": 614751069, "node_id": "MDU6SXNzdWU2MTQ3NTEwNjk=", "number": 423, "title": "Refresh help center to support Article additional attributes", "user": {"login": "ravichandrasekaran", "id": 1671691, "node_id": "MDQ6VXNlcjE2NzE2OTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1671691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ravichandrasekaran", "html_url": "https://github.com/ravichandrasekaran", "followers_url": "https://api.github.com/users/ravichandrasekaran/followers", "following_url": "https://api.github.com/users/ravichandrasekaran/following{/other_user}", "gists_url": "https://api.github.com/users/ravichandrasekaran/gists{/gist_id}", "starred_url": "https://api.github.com/users/ravichandrasekaran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ravichandrasekaran/subscriptions", "organizations_url": "https://api.github.com/users/ravichandrasekaran/orgs", "repos_url": "https://api.github.com/users/ravichandrasekaran/repos", "events_url": "https://api.github.com/users/ravichandrasekaran/events{/privacy}", "received_events_url": "https://api.github.com/users/ravichandrasekaran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-08T13:42:21Z", "updated_at": "2020-05-30T22:52:07Z", "closed_at": "2020-05-30T22:52:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Two related areas from changes to the Zendesk Support API for Articles.\r\n1. Management permission groups aren't yet supported.\r\n2. User segments aren't explicitly supported as attributes in the Article class.\r\n\r\nRequest to update the package to support these. (Will be following up with pull req shortly.)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/421", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/421/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/421/events", "html_url": "https://github.com/facetoe/zenpy/issues/421", "id": 613378144, "node_id": "MDU6SXNzdWU2MTMzNzgxNDQ=", "number": 421, "title": "Incremental Calls don't return a Generator", "user": {"login": "makaveli0129", "id": 5271952, "node_id": "MDQ6VXNlcjUyNzE5NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5271952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/makaveli0129", "html_url": "https://github.com/makaveli0129", "followers_url": "https://api.github.com/users/makaveli0129/followers", "following_url": "https://api.github.com/users/makaveli0129/following{/other_user}", "gists_url": "https://api.github.com/users/makaveli0129/gists{/gist_id}", "starred_url": "https://api.github.com/users/makaveli0129/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/makaveli0129/subscriptions", "organizations_url": "https://api.github.com/users/makaveli0129/orgs", "repos_url": "https://api.github.com/users/makaveli0129/repos", "events_url": "https://api.github.com/users/makaveli0129/events{/privacy}", "received_events_url": "https://api.github.com/users/makaveli0129/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T14:45:44Z", "updated_at": "2020-05-30T23:06:08Z", "closed_at": "2020-05-30T23:06:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When calling the incremental API the documentation (http://docs.facetoe.com.au/zenpy.html) says that it should be a generator that is returned but instead it is returning a HTTP response and not a generator:\r\n\r\n```\r\nzenpy_client = Zenpy(proactive_ratelimit_request_interval=20,ratelimit_budget=60, **creds)\r\n\r\nstart = datetime.datetime.now() - datetime.timedelta(days=5)\r\n\r\nresult_generator = zenpy_client.tickets.incremental(start_time=start)\r\n\r\nNo handlers could be found for logger \"zenpy.lib.util\"\r\n\r\ntype(result_generator)\r\n\r\n<class 'requests.models.Response'>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/420", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/420/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/420/events", "html_url": "https://github.com/facetoe/zenpy/issues/420", "id": 610620107, "node_id": "MDU6SXNzdWU2MTA2MjAxMDc=", "number": 420, "title": "Custom Ticket Field Updates Fail Silently", "user": {"login": "mike-schiller", "id": 4481447, "node_id": "MDQ6VXNlcjQ0ODE0NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4481447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mike-schiller", "html_url": "https://github.com/mike-schiller", "followers_url": "https://api.github.com/users/mike-schiller/followers", "following_url": "https://api.github.com/users/mike-schiller/following{/other_user}", "gists_url": "https://api.github.com/users/mike-schiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/mike-schiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mike-schiller/subscriptions", "organizations_url": "https://api.github.com/users/mike-schiller/orgs", "repos_url": "https://api.github.com/users/mike-schiller/repos", "events_url": "https://api.github.com/users/mike-schiller/events{/privacy}", "received_events_url": "https://api.github.com/users/mike-schiller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-01T07:50:54Z", "updated_at": "2020-05-30T22:48:55Z", "closed_at": "2020-05-30T22:48:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code is a snippet from a helper class to update zendesk tickets using zenpy. I have a dictionary within the class to map field names to IDs:\r\n\r\n```\r\n    def set_ticket_field(self, field_name, value):\r\n        for f in self._ticket.custom_fields:\r\n            fid = self._custom_ticket_field_name_to_id[field_name]\r\n            if f[\"id\"] == fid:\r\n                f[\"value\"] = value\r\n                return\r\n```\r\n\r\nWhen I subsequently call tickets.update() providing a valid custom field option for the value, the ticket updates properly in zendesk. However, if I supply a value that is not a valid custom field option and call tickets.update(), the update silently fails. Additionally, the audit returned by the call to tickets.update() is for an older update of the ticket, not the one that silently fails.\r\n\r\nI'm using python 2.8.2 and zenpy 2.0.19.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/419", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/419/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/419/events", "html_url": "https://github.com/facetoe/zenpy/issues/419", "id": 609002099, "node_id": "MDU6SXNzdWU2MDkwMDIwOTk=", "number": 419, "title": "Problems with tickets_events", "user": {"login": "AgentBlond", "id": 22956171, "node_id": "MDQ6VXNlcjIyOTU2MTcx", "avatar_url": "https://avatars0.githubusercontent.com/u/22956171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AgentBlond", "html_url": "https://github.com/AgentBlond", "followers_url": "https://api.github.com/users/AgentBlond/followers", "following_url": "https://api.github.com/users/AgentBlond/following{/other_user}", "gists_url": "https://api.github.com/users/AgentBlond/gists{/gist_id}", "starred_url": "https://api.github.com/users/AgentBlond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AgentBlond/subscriptions", "organizations_url": "https://api.github.com/users/AgentBlond/orgs", "repos_url": "https://api.github.com/users/AgentBlond/repos", "events_url": "https://api.github.com/users/AgentBlond/events{/privacy}", "received_events_url": "https://api.github.com/users/AgentBlond/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-29T12:03:25Z", "updated_at": "2020-05-31T00:30:14Z", "closed_at": "2020-05-31T00:30:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am doing this to extract some info from the response I get.\r\nI have a problem with this line:  result.append(metric.timestamp) - I want to get the timestamp information from the response. but I seems to have a problem with it being called \"timestamp\".\r\n\r\nresults = []\r\nfor metric in zenpy_client.tickets.events(start_time = max_up):\r\n    result = []\r\n    result.append(metric.id)\r\n    result.append(metric.ticket_id)\r\n    result.append(metric.timestamp)\r\n    result.append(metric.updater_id)\r\n    result.append(metric.via)\r\n    for x in metric.child_events:\r\n        for k,v in x.items():\r\n            if k == 'status':\r\n                results.append(v)\r\n\r\n    uploaded_at = datetime.now()\r\n    result.append(uploaded_at)\r\n    results.append(result)\r\n\r\nI get the following error message:\r\n\"Parser must be a string or character stream, not int\"\r\n\r\nCan you please help me to fix this issue?\r\nI am using the latest version of the package.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/418", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/418/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/418/events", "html_url": "https://github.com/facetoe/zenpy/issues/418", "id": 605670238, "node_id": "MDU6SXNzdWU2MDU2NzAyMzg=", "number": 418, "title": "Incorrect Jira Issue Number when retrieving them via jira_links", "user": {"login": "xd3262nd", "id": 54590775, "node_id": "MDQ6VXNlcjU0NTkwNzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/54590775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xd3262nd", "html_url": "https://github.com/xd3262nd", "followers_url": "https://api.github.com/users/xd3262nd/followers", "following_url": "https://api.github.com/users/xd3262nd/following{/other_user}", "gists_url": "https://api.github.com/users/xd3262nd/gists{/gist_id}", "starred_url": "https://api.github.com/users/xd3262nd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xd3262nd/subscriptions", "organizations_url": "https://api.github.com/users/xd3262nd/orgs", "repos_url": "https://api.github.com/users/xd3262nd/repos", "events_url": "https://api.github.com/users/xd3262nd/events{/privacy}", "received_events_url": "https://api.github.com/users/xd3262nd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-04-23T16:21:14Z", "updated_at": "2020-05-31T00:59:54Z", "closed_at": "2020-05-31T00:59:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI have noticed a few of my responses when calling `jira_links` is not providing the right Jira issue number. On the UI it shows the right Jira number but when I print out the result with `jira_links` the Jira issue number changed to something else. Is it something wrong with the API call? or there is some errors on the UI?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/417", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/417/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/417/events", "html_url": "https://github.com/facetoe/zenpy/issues/417", "id": 600684918, "node_id": "MDU6SXNzdWU2MDA2ODQ5MTg=", "number": 417, "title": "View the entire ticket container/object", "user": {"login": "xd3262nd", "id": 54590775, "node_id": "MDQ6VXNlcjU0NTkwNzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/54590775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xd3262nd", "html_url": "https://github.com/xd3262nd", "followers_url": "https://api.github.com/users/xd3262nd/followers", "following_url": "https://api.github.com/users/xd3262nd/following{/other_user}", "gists_url": "https://api.github.com/users/xd3262nd/gists{/gist_id}", "starred_url": "https://api.github.com/users/xd3262nd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xd3262nd/subscriptions", "organizations_url": "https://api.github.com/users/xd3262nd/orgs", "repos_url": "https://api.github.com/users/xd3262nd/repos", "events_url": "https://api.github.com/users/xd3262nd/events{/privacy}", "received_events_url": "https://api.github.com/users/xd3262nd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-16T01:34:04Z", "updated_at": "2020-04-23T01:05:36Z", "closed_at": "2020-04-23T01:05:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI am trying to figure out how the ticket objects look like, and not sure how to view all the attributes that are inside the ticket object via this library. For example, I want to view all the descriptions in the ticket and potentially grab a few attributes from the ticket and append to a df. Please help me out thank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/416", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/416/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/416/events", "html_url": "https://github.com/facetoe/zenpy/issues/416", "id": 600298056, "node_id": "MDU6SXNzdWU2MDAyOTgwNTY=", "number": 416, "title": "Deprecation warning due to invalid escape sequences in Python 3.7", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960236, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzY=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-15T13:28:21Z", "updated_at": "2020-05-30T22:49:59Z", "closed_at": "2020-05-30T22:49:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Deprecation warnings are raised due to invalid escape sequences. This can be fixed by using raw strings or escaping the literals. pyupgrade also helps in automatic conversion : https://github.com/asottile/pyupgrade/\r\n\r\n```\r\nfind . -iname '*.py' | grep -Ev 'example|utl|samples|deps' | xargs -P 4 -I{} python3.8 -Wall -m py_compile {} \r\n./zenpy/lib/generator.py:82: DeprecationWarning: invalid escape sequence \\d\r\n  url = re.sub('page=\\d+', '', url)\r\n./zenpy/lib/generator.py:85: DeprecationWarning: invalid escape sequence \\d\r\n  url = re.sub('per_page=\\d+', '', url)\r\n./zenpy/lib/generator.py:263: DeprecationWarning: invalid escape sequence \\d\r\n  url = re.sub('since_id=\\d+', 'since_id={}'.format(since_id), url)\r\n./zenpy/lib/endpoint.py:225: DeprecationWarning: invalid escape sequence \\*\r\n  \"\"\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/415", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/415/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/415/events", "html_url": "https://github.com/facetoe/zenpy/issues/415", "id": 595246247, "node_id": "MDU6SXNzdWU1OTUyNDYyNDc=", "number": 415, "title": "api.tickets.comments() calls periodically failing with ReadOnlyRecord error", "user": {"login": "netllama", "id": 71113, "node_id": "MDQ6VXNlcjcxMTEz", "avatar_url": "https://avatars0.githubusercontent.com/u/71113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/netllama", "html_url": "https://github.com/netllama", "followers_url": "https://api.github.com/users/netllama/followers", "following_url": "https://api.github.com/users/netllama/following{/other_user}", "gists_url": "https://api.github.com/users/netllama/gists{/gist_id}", "starred_url": "https://api.github.com/users/netllama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/netllama/subscriptions", "organizations_url": "https://api.github.com/users/netllama/orgs", "repos_url": "https://api.github.com/users/netllama/repos", "events_url": "https://api.github.com/users/netllama/events{/privacy}", "received_events_url": "https://api.github.com/users/netllama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-06T16:15:40Z", "updated_at": "2020-05-30T23:05:46Z", "closed_at": "2020-05-30T23:05:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the past few weeks, I've started to see `api.tickets.comments()` calls occasionally failing with ReadOnlyRecord errors.  The ticket is different every time the failure occurs, and the failure only seems to happen once for any given ticket Id, before it works again on the next attempt (an hour later).  The traceback for the failure is always like this:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/apps/titusjob/lib/python3.7/site-packages/cdnopslib/partnercomms.py\", line 552, in get_zd_ticket_comments\r\n    comments = api.tickets.comments(ticket_id)\r\n  File \"/apps/titusjob/lib/python3.7/site-packages/zenpy/lib/util.py\", line 110, in inner\r\n    return func(*new_args, **new_kwargs)\r\n  File \"/apps/titusjob/lib/python3.7/site-packages/zenpy/lib/api.py\", line 1103, in comments\r\n    include_inline_images=repr(include_inline_images).lower())\r\n  File \"/apps/titusjob/lib/python3.7/site-packages/zenpy/lib/api.py\", line 274, in _query_zendesk\r\n    return self._get(url=self._build_url(endpoint(*endpoint_args, **endpoint_kwargs)))\r\n  File \"/apps/titusjob/lib/python3.7/site-packages/zenpy/lib/api.py\", line 129, in _get\r\n    response = self._call_api(self.session.get, url, timeout=self.timeout, **kwargs)\r\n  File \"/apps/titusjob/lib/python3.7/site-packages/zenpy/lib/api.py\", line 166, in _call_api\r\n    self._check_response(response)\r\n  File \"/apps/titusjob/lib/python3.7/site-packages/zenpy/lib/api.py\", line 307, in _check_response\r\n    raise APIException(json.dumps(_json), response=response)\r\nzenpy.lib.exception.APIException: {\"error\": \"ReadOnlyRecord\", \"description\": \"Requested record cannot be altered\"}\r\n```\r\n\r\nWhat is rather puzzling here is why a call that should be read-only is somehow triggering an error from the API about altering a record.  I'm guessing that something is intermittently broken on Zendesk's end (maybe some weird maintenance, or an actual API bug).  However, since this failure is ocurring literally for less than 1% of these API calls, its been a challenege to find a way to reproduce it to debug further.  \r\n\r\nI was hoping to get zenpy to return more detailed information whenever this fails, but I'm struggling to find a means of accomplishing that.  Ideally I'd like to see the actual http response code, and the actual call (payload plus endpoint) that resulted in the failure.  Is there some way to coax that from zenpy only when there is an APIException event?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/414", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/414/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/414/events", "html_url": "https://github.com/facetoe/zenpy/issues/414", "id": 594617752, "node_id": "MDU6SXNzdWU1OTQ2MTc3NTI=", "number": 414, "title": "Post raw json dictionary?", "user": {"login": "stuck1233333", "id": 40720309, "node_id": "MDQ6VXNlcjQwNzIwMzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/40720309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuck1233333", "html_url": "https://github.com/stuck1233333", "followers_url": "https://api.github.com/users/stuck1233333/followers", "following_url": "https://api.github.com/users/stuck1233333/following{/other_user}", "gists_url": "https://api.github.com/users/stuck1233333/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuck1233333/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuck1233333/subscriptions", "organizations_url": "https://api.github.com/users/stuck1233333/orgs", "repos_url": "https://api.github.com/users/stuck1233333/repos", "events_url": "https://api.github.com/users/stuck1233333/events{/privacy}", "received_events_url": "https://api.github.com/users/stuck1233333/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-05T19:59:03Z", "updated_at": "2020-05-30T22:48:26Z", "closed_at": "2020-05-30T22:48:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to post the raw json dictionary (e.g., {\"user\": {\"a\"}}) instead of the class on methods such as users.create?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/412", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/412/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/412/events", "html_url": "https://github.com/facetoe/zenpy/issues/412", "id": 590392089, "node_id": "MDU6SXNzdWU1OTAzOTIwODk=", "number": 412, "title": "Pagination", "user": {"login": "lalfaro1704", "id": 34684622, "node_id": "MDQ6VXNlcjM0Njg0NjIy", "avatar_url": "https://avatars2.githubusercontent.com/u/34684622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lalfaro1704", "html_url": "https://github.com/lalfaro1704", "followers_url": "https://api.github.com/users/lalfaro1704/followers", "following_url": "https://api.github.com/users/lalfaro1704/following{/other_user}", "gists_url": "https://api.github.com/users/lalfaro1704/gists{/gist_id}", "starred_url": "https://api.github.com/users/lalfaro1704/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lalfaro1704/subscriptions", "organizations_url": "https://api.github.com/users/lalfaro1704/orgs", "repos_url": "https://api.github.com/users/lalfaro1704/repos", "events_url": "https://api.github.com/users/lalfaro1704/events{/privacy}", "received_events_url": "https://api.github.com/users/lalfaro1704/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-30T15:41:46Z", "updated_at": "2020-04-23T01:07:01Z", "closed_at": "2020-04-23T01:06:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @facetoe i understand that the zendesk api returns the first 1000 records.\r\n```\r\nresponse = client.tickets()\r\nprint(len(response))\r\n>>> 1756\r\n```\r\nHow could i access the next page using paginator?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/410", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/410/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/410/events", "html_url": "https://github.com/facetoe/zenpy/issues/410", "id": 586569028, "node_id": "MDU6SXNzdWU1ODY1NjkwMjg=", "number": 410, "title": "assignee not working in search calls for list of assignee Id values", "user": {"login": "netllama", "id": 71113, "node_id": "MDQ6VXNlcjcxMTEz", "avatar_url": "https://avatars0.githubusercontent.com/u/71113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/netllama", "html_url": "https://github.com/netllama", "followers_url": "https://api.github.com/users/netllama/followers", "following_url": "https://api.github.com/users/netllama/following{/other_user}", "gists_url": "https://api.github.com/users/netllama/gists{/gist_id}", "starred_url": "https://api.github.com/users/netllama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/netllama/subscriptions", "organizations_url": "https://api.github.com/users/netllama/orgs", "repos_url": "https://api.github.com/users/netllama/repos", "events_url": "https://api.github.com/users/netllama/events{/privacy}", "received_events_url": "https://api.github.com/users/netllama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-23T22:52:35Z", "updated_at": "2020-04-23T01:08:07Z", "closed_at": "2020-04-23T01:08:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "It doesn't seem possible to craft a ticket search that specifies a list of assignee Id values.  For example, this works as expected (returns greater than zero tickets):\r\n\r\n`tickets = api.search(type='ticket', status='pending', assignee=171)`\r\n\r\nHowever, this returns zero tickets (the only change is to make the assignee field a list, so that I could specify multiple assignee Id values):\r\n\r\n`tickets = api.search(type='ticket', status='pending', assignee=[171])`\r\n\r\nIs there a way to specify multiple assignee Id values in a single search?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/405", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/405/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/405/events", "html_url": "https://github.com/facetoe/zenpy/issues/405", "id": 567875875, "node_id": "MDU6SXNzdWU1Njc4NzU4NzU=", "number": 405, "title": "Set created_at in ticket not working", "user": {"login": "anderson7play", "id": 31078908, "node_id": "MDQ6VXNlcjMxMDc4OTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/31078908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anderson7play", "html_url": "https://github.com/anderson7play", "followers_url": "https://api.github.com/users/anderson7play/followers", "following_url": "https://api.github.com/users/anderson7play/following{/other_user}", "gists_url": "https://api.github.com/users/anderson7play/gists{/gist_id}", "starred_url": "https://api.github.com/users/anderson7play/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anderson7play/subscriptions", "organizations_url": "https://api.github.com/users/anderson7play/orgs", "repos_url": "https://api.github.com/users/anderson7play/repos", "events_url": "https://api.github.com/users/anderson7play/events{/privacy}", "received_events_url": "https://api.github.com/users/anderson7play/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-19T22:03:12Z", "updated_at": "2020-02-21T11:34:56Z", "closed_at": "2020-02-21T11:34:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to set my timezone when ticket is created, because the default return a wrong datetime\r\n\r\nthe code is a function like this:\r\n\r\n    def createTicket(name, email, subject, description, group, external_id, priority='normal'):\r\n        zenpy_client.tickets.create(\r\n            Ticket(\r\n                subject=subject,\r\n                description=description,\r\n                group_id=group,\r\n                priority=priority,\r\n                requester=User(name=name, email=email),\r\n                external_id=external_id,\r\n                created_at=datetime.now()\r\n            )\r\n        )\r\n\r\nBut the ticket still return the wrong datetime in created_at, Someone can help me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/402", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/402/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/402/events", "html_url": "https://github.com/facetoe/zenpy/issues/402", "id": 565643267, "node_id": "MDU6SXNzdWU1NjU2NDMyNjc=", "number": 402, "title": "Consider removing future as a dependency", "user": {"login": "gGonz", "id": 120750, "node_id": "MDQ6VXNlcjEyMDc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/120750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gGonz", "html_url": "https://github.com/gGonz", "followers_url": "https://api.github.com/users/gGonz/followers", "following_url": "https://api.github.com/users/gGonz/following{/other_user}", "gists_url": "https://api.github.com/users/gGonz/gists{/gist_id}", "starred_url": "https://api.github.com/users/gGonz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gGonz/subscriptions", "organizations_url": "https://api.github.com/users/gGonz/orgs", "repos_url": "https://api.github.com/users/gGonz/repos", "events_url": "https://api.github.com/users/gGonz/events{/privacy}", "received_events_url": "https://api.github.com/users/gGonz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-15T02:21:46Z", "updated_at": "2020-02-22T05:54:12Z", "closed_at": "2020-02-22T05:54:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I use `zenpy` as dependency on a project, we have many months seeing a weird warning while running our tests due to `future` raising a `DeprecationWarning`, by using the now deprecated `imp` module.\r\n\r\nYeah, I know we can just ignore this specific warning, but that seems \"dirty\". Please note that `future` has some issues about this, the oldest one has more than 3 years open without any change...\r\nhttps://github.com/PythonCharmers/python-future/issues/246\r\n\r\nIn the same issue above, there is a reference to a `pysaml2`'s pull request where the maintainer tells that he will use `six` instead of `future`.\r\nhttps://github.com/IdentityPython/pysaml2/pull/576\r\n\r\nHere's the traceback shown when I run our tests with `pytest -W error`:\r\n```\r\n================================================================================================ test session starts ================================================================================================\r\nplatform linux -- Python 3.7.6, pytest-5.3.5, py-1.8.1, pluggy-0.13.1\r\ndjango: settings: project.settings.test (from env)\r\nrootdir: /opt/project/project, inifile: pytest.ini\r\nplugins: xdist-1.31.0, factoryboy-2.0.3, cov-2.8.1, django-3.8.0, forked-1.1.3, mock-2.0.0\r\ncollecting 0 items / 1 error                                                                                                                                                                                        \r\n====================================================================================================== ERRORS =======================================================================================================\r\n__________________________________________________________________________________ ERROR collecting apps/contracts/api/v1/tests.py __________________________________________________________________________________\r\n/home/python/.cache/pypoetry/virtualenvs/project-soWN0cI--py3.7/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport\r\n    __import__(modname)\r\napps/contracts/api/v1/__init__.py:1: in <module>\r\n    from .tasks import *  # NOQA\r\napps/contracts/api/v1/tasks.py:1: in <module>\r\n    from zenpy import Zenpy\r\n/home/python/.cache/pypoetry/virtualenvs/project-soWN0cI--py3.7/lib/python3.7/site-packages/zenpy/__init__.py:6: in <module>\r\n    from zenpy.lib.api import (\r\n/home/python/.cache/pypoetry/virtualenvs/project-soWN0cI--py3.7/lib/python3.7/site-packages/zenpy/lib/api.py:43: in <module>\r\n    from zenpy.lib.response import *\r\n/home/python/.cache/pypoetry/virtualenvs/project-soWN0cI--py3.7/lib/python3.7/site-packages/zenpy/lib/response.py:4: in <module>\r\n    from zenpy.lib.generator import SearchResultGenerator, ZendeskResultGenerator, ChatResultGenerator, ViewResultGenerator, \\\r\n/home/python/.cache/pypoetry/virtualenvs/project-soWN0cI--py3.7/lib/python3.7/site-packages/zenpy/lib/generator.py:8: in <module>\r\n    from future.standard_library import install_aliases\r\n/home/python/.cache/pypoetry/virtualenvs/project-soWN0cI--py3.7/lib/python3.7/site-packages/future/standard_library/__init__.py:65: in <module>\r\n    import imp\r\n/usr/local/lib/python3.7/imp.py:33: in <module>\r\n    DeprecationWarning, stacklevel=2)\r\nE   DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! xdist.dsession.Interrupted: stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n================================================================================================= 1 error in 4.53s ==================================================================================================\r\n```\r\n\r\nAny way to have this fixed? :pray: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/401", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/401/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/401/events", "html_url": "https://github.com/facetoe/zenpy/issues/401", "id": 564970137, "node_id": "MDU6SXNzdWU1NjQ5NzAxMzc=", "number": 401, "title": "Add functionality to pull all custom_fields via API", "user": {"login": "sandinak", "id": 1916398, "node_id": "MDQ6VXNlcjE5MTYzOTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1916398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandinak", "html_url": "https://github.com/sandinak", "followers_url": "https://api.github.com/users/sandinak/followers", "following_url": "https://api.github.com/users/sandinak/following{/other_user}", "gists_url": "https://api.github.com/users/sandinak/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandinak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandinak/subscriptions", "organizations_url": "https://api.github.com/users/sandinak/orgs", "repos_url": "https://api.github.com/users/sandinak/repos", "events_url": "https://api.github.com/users/sandinak/events{/privacy}", "received_events_url": "https://api.github.com/users/sandinak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-13T21:48:31Z", "updated_at": "2020-02-22T07:17:43Z", "closed_at": "2020-02-22T07:17:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now there are CRUD options for ticket_fields ( which include custom fields ) but no GET option to pull the dump of all existing custom_fields for a user+domain account.  This would allow library users to craft custom_field input via text names rather than having to store a structure defining the names and field_id numbers.  \r\n\r\nThe URL is: https://{domain}.zendesk.com/api/v2/ticket_fields.json  \r\n\r\nwhich should be accessible after authentication.  My use case is a zendesk ansible module I am about to commit back to ansible.\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/400", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/400/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/400/events", "html_url": "https://github.com/facetoe/zenpy/issues/400", "id": 559181908, "node_id": "MDU6SXNzdWU1NTkxODE5MDg=", "number": 400, "title": "jira_links API generator no longer respects ticket_id or issue_id", "user": {"login": "mvforgione", "id": 4275808, "node_id": "MDQ6VXNlcjQyNzU4MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4275808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvforgione", "html_url": "https://github.com/mvforgione", "followers_url": "https://api.github.com/users/mvforgione/followers", "following_url": "https://api.github.com/users/mvforgione/following{/other_user}", "gists_url": "https://api.github.com/users/mvforgione/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvforgione/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvforgione/subscriptions", "organizations_url": "https://api.github.com/users/mvforgione/orgs", "repos_url": "https://api.github.com/users/mvforgione/repos", "events_url": "https://api.github.com/users/mvforgione/events{/privacy}", "received_events_url": "https://api.github.com/users/mvforgione/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 174960237, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzc=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-03T16:09:24Z", "updated_at": "2020-05-31T01:00:26Z", "closed_at": "2020-05-31T01:00:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When querying for all jira_links with a specific ticket_id or issue_id, the resultant generator no longer respects the ticket_id or issue_id param in subsequent calls. It appears that it appends the since_id parameter when paging through results while removing the previous ticket_id or issue_id.\r\n\r\n`    def get_next_page(self, page_num=None, page_size=None):\r\n        try:\r\n            url = self._response_json['links'][-1]['url']\r\n            url = re.sub('/\\d+', '', url)\r\n            params = {'since_id': self._response_json['links'][-1]['id']}\r\n            response = self.response_handler.api._get(url, raw_response=True, params=params)\r\n            return response.json()\r\n        except (IndexError, KeyError):\r\n            raise StopIteration()`\r\n\r\nThis results in retrieving the matched links on the first call, but then retrieving many more unrelated jira_links thereafter.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/397", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/397/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/397/events", "html_url": "https://github.com/facetoe/zenpy/issues/397", "id": 552828316, "node_id": "MDU6SXNzdWU1NTI4MjgzMTY=", "number": 397, "title": "Issue with search API parameters", "user": {"login": "ypperlig", "id": 4660715, "node_id": "MDQ6VXNlcjQ2NjA3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4660715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ypperlig", "html_url": "https://github.com/ypperlig", "followers_url": "https://api.github.com/users/ypperlig/followers", "following_url": "https://api.github.com/users/ypperlig/following{/other_user}", "gists_url": "https://api.github.com/users/ypperlig/gists{/gist_id}", "starred_url": "https://api.github.com/users/ypperlig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ypperlig/subscriptions", "organizations_url": "https://api.github.com/users/ypperlig/orgs", "repos_url": "https://api.github.com/users/ypperlig/repos", "events_url": "https://api.github.com/users/ypperlig/events{/privacy}", "received_events_url": "https://api.github.com/users/ypperlig/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-21T11:50:56Z", "updated_at": "2020-01-22T09:50:07Z", "closed_at": "2020-01-22T09:49:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Zendesk handles search paramters differently depending on how the value is specified.\r\n\r\nFor instance:\r\n```python\r\ntickets = client.search(type=\"ticket\", due_date=\"<1 day\", status=\"<solved\")\r\n```\r\n\r\nShould be formatted as such:\r\nhttps://subdomain.zendesk.com/api/v2/search.json?query=type:ticket due_date<1day status<solved\r\n\r\nExample query with logging enabled:\r\n```python\r\nDEBUG:urllib3.connectionpool:https://subdomain.zendesk.com:443 \"GET /api/v2/search.json?query=type:ticket%20due_date:%22%3C1%20day%22%20status:%3Csolved HTTP/1.1\" 422 109\r\n\r\nStacktrace:\r\nTraceback (most recent call last):\r\n  File \"audit search.py\", line 23, in <module>\r\n    tickets = client.search(type=\"ticket\", due_date=\"<1 day\", status=\"<solved\")\r\n  File \"C:\\Users\\xx\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\zenpy\\lib\\api.py\", line 2140, in __call__\r\n    return self._query_zendesk(self.endpoint, self.object_type, *args, **kwargs)\r\n  File \"C:\\Users\\xx\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\zenpy\\lib\\api.py\", line 287, in _query_zendesk\r\n    return self._get(self._build_url(endpoint=endpoint(*endpoint_args, **endpoint_kwargs)))\r\n  File \"C:\\Users\\xx\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\zenpy\\lib\\api.py\", line 129, in _get\r\n    response = self._call_api(self.session.get, url, timeout=self.timeout, **kwargs)\r\n  File \"C:\\Users\\xx\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\zenpy\\lib\\api.py\", line 166, in _call_api\r\n    self._check_response(response)\r\n  File \"C:\\Users\\xx\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\zenpy\\lib\\api.py\", line 305, in _check_response\r\n    raise APIException(json.dumps(_json), response=response)\r\nzenpy.lib.exception.APIException: {\"error\": \"invalid\", \"description\": \"Invalid search: Illegal date value (yyyy-mm-dd expected): due_date:<1 day\"}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/394", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/394/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/394/events", "html_url": "https://github.com/facetoe/zenpy/issues/394", "id": 551818067, "node_id": "MDU6SXNzdWU1NTE4MTgwNjc=", "number": 394, "title": "Issue with search API parameters when parameters contains a known endpoint", "user": {"login": "ypperlig", "id": 4660715, "node_id": "MDQ6VXNlcjQ2NjA3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4660715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ypperlig", "html_url": "https://github.com/ypperlig", "followers_url": "https://api.github.com/users/ypperlig/followers", "following_url": "https://api.github.com/users/ypperlig/following{/other_user}", "gists_url": "https://api.github.com/users/ypperlig/gists{/gist_id}", "starred_url": "https://api.github.com/users/ypperlig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ypperlig/subscriptions", "organizations_url": "https://api.github.com/users/ypperlig/orgs", "repos_url": "https://api.github.com/users/ypperlig/repos", "events_url": "https://api.github.com/users/ypperlig/events{/privacy}", "received_events_url": "https://api.github.com/users/ypperlig/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-18T20:12:43Z", "updated_at": "2020-01-19T02:37:54Z", "closed_at": "2020-01-19T02:37:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nThe following raises a ValueError exception:\r\n`external_ticket = list(client.search(type=\"ticket\", external_id=\"https://subdomain.zendesk.com/api/v2/tickets/14.json\"))`\r\n\r\nStacktrace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 43, in <module>\r\n    external_ticket = list(client.search(type=\"ticket\", external_id=\"https://subdomain.zendesk.com/api/v2/tickets/14.json\"))\r\n  File \"C:\\Users\\xx\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\zenpy\\lib\\api.py\", line 2189, in __call__\r\n    return self._query_zendesk(self.endpoint, self.object_type, *args, **kwargs)\r\n  File \"C:\\Users\\xx\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\zenpy\\lib\\api.py\", line 287, in _query_zendesk\r\n    return self._get(self._build_url(endpoint=endpoint(*endpoint_args, **endpoint_kwargs)))\r\n  File \"C:\\Users\\xx\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\zenpy\\lib\\api.py\", line 133, in _get\r\n    return self._process_response(response)\r\n  File \"C:\\Users\\xx\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\zenpy\\lib\\api.py\", line 224, in _process_response\r\n    if handler.applies_to(self, response):\r\n  File \"C:\\Users\\xx\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\zenpy\\lib\\response.py\", line 275, in applies_to\r\n    _, params = response.request.url.split(api.api_prefix)\r\nValueError: too many values to unpack (expected 2)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/392", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/392/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/392/events", "html_url": "https://github.com/facetoe/zenpy/issues/392", "id": 550203225, "node_id": "MDU6SXNzdWU1NTAyMDMyMjU=", "number": 392, "title": "Creating and/or assigning tickets to groups", "user": {"login": "b3Nd2", "id": 59022979, "node_id": "MDQ6VXNlcjU5MDIyOTc5", "avatar_url": "https://avatars0.githubusercontent.com/u/59022979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b3Nd2", "html_url": "https://github.com/b3Nd2", "followers_url": "https://api.github.com/users/b3Nd2/followers", "following_url": "https://api.github.com/users/b3Nd2/following{/other_user}", "gists_url": "https://api.github.com/users/b3Nd2/gists{/gist_id}", "starred_url": "https://api.github.com/users/b3Nd2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b3Nd2/subscriptions", "organizations_url": "https://api.github.com/users/b3Nd2/orgs", "repos_url": "https://api.github.com/users/b3Nd2/repos", "events_url": "https://api.github.com/users/b3Nd2/events{/privacy}", "received_events_url": "https://api.github.com/users/b3Nd2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-15T13:59:32Z", "updated_at": "2020-01-19T13:09:36Z", "closed_at": "2020-01-17T15:56:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently creating a number of tickets for a number of end_users, but the new tickets are in need of being assigned to an existing group in Zendesk.\r\n\r\nI am guessing the code is wrong, but here is what I have used and am unable to get it to assign to a specific group:\r\n\r\n`zenpy_client.tickets.create(\r\nTicket(\r\nsubject=\"Equipment Lease renewal\",\r\nrequester_id=userId,\r\ngroup_id=groupId,\r\ncomment=Comment(\r\nbody=\"\"\"\r\nRecords show this account has a leased device.\r\nUse the standard macro and verify the lease and contact the customer.\r\n\"\"\", public=False)\r\n)\r\n)`\r\n\r\nI combed through the readme along with the other documentation but I was not able to find anything in regards to assigning newly created tickets to a group.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/391", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/391/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/391/events", "html_url": "https://github.com/facetoe/zenpy/issues/391", "id": 546514668, "node_id": "MDU6SXNzdWU1NDY1MTQ2Njg=", "number": 391, "title": "allow domain to be overridable from Zenpy()", "user": {"login": "allan-simon", "id": 213167, "node_id": "MDQ6VXNlcjIxMzE2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/213167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allan-simon", "html_url": "https://github.com/allan-simon", "followers_url": "https://api.github.com/users/allan-simon/followers", "following_url": "https://api.github.com/users/allan-simon/following{/other_user}", "gists_url": "https://api.github.com/users/allan-simon/gists{/gist_id}", "starred_url": "https://api.github.com/users/allan-simon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allan-simon/subscriptions", "organizations_url": "https://api.github.com/users/allan-simon/orgs", "repos_url": "https://api.github.com/users/allan-simon/repos", "events_url": "https://api.github.com/users/allan-simon/events{/privacy}", "received_events_url": "https://api.github.com/users/allan-simon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960236, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzY=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-01-07T21:22:50Z", "updated_at": "2020-02-23T01:46:41Z", "closed_at": "2020-02-23T01:46:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "currently it is hardcoded to \"zendesk.com\" in some environment, mainly local dev environment where we have a mock of zendesk apis (soon to be opensourced \\o/ ), it would be great to be able to replace it by \"whatever\" , so that  just by changing env variables, one could point to a \"local zendesk\" which permits greated flexibility when testing. (especially when you have a dozen of developers that all try to create a ticket referencing a \"external_id=1\" ^^\")\r\n\r\nif such a change is welcomed, I would be glad to try at providing the PR\r\n\r\nit could be either \r\n\r\n1. exposing `domain`\r\n2. introducing \"base_url\" (so that one can put `http://localhost:4343`)\r\n\r\n(I personnally think the second one makes more sense, as 1. is very limited in term of use case)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/388", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/388/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/388/events", "html_url": "https://github.com/facetoe/zenpy/issues/388", "id": 541781525, "node_id": "MDU6SXNzdWU1NDE3ODE1MjU=", "number": 388, "title": "Inconsistencies with the ticket attachment upload endpoint", "user": {"login": "sundayj", "id": 29342055, "node_id": "MDQ6VXNlcjI5MzQyMDU1", "avatar_url": "https://avatars3.githubusercontent.com/u/29342055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sundayj", "html_url": "https://github.com/sundayj", "followers_url": "https://api.github.com/users/sundayj/followers", "following_url": "https://api.github.com/users/sundayj/following{/other_user}", "gists_url": "https://api.github.com/users/sundayj/gists{/gist_id}", "starred_url": "https://api.github.com/users/sundayj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sundayj/subscriptions", "organizations_url": "https://api.github.com/users/sundayj/orgs", "repos_url": "https://api.github.com/users/sundayj/repos", "events_url": "https://api.github.com/users/sundayj/events{/privacy}", "received_events_url": "https://api.github.com/users/sundayj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-23T14:38:40Z", "updated_at": "2020-01-12T03:40:50Z", "closed_at": "2020-01-12T03:35:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've recently had issues with attachment uploads failing when submitting and/or updating tickets in Zendesk. The program I wrote that utilizes your awesome package has been working very well for the past year, but over the last month or so the attachment uploads have been failing regularly. I'm attaching the emails I've received directly from Zendesk's support in case it may help resolve this issue. TLDR: It looks like the failed attempts are all utilizing the GET method instead of the POST method and the request headers seem to be lacking the content_type of \"application/octet-stream.\"\r\n[Zendesk_Zenpy_Attachment_Upload_Errors.zip](https://github.com/facetoe/zenpy/files/3995281/Zendesk_Zenpy_Attachment_Upload_Errors.zip)\r\nThe zip folder contins the original error text file and the email thread with Zendesk as an outlook file, a text file, and an html file to make sure it can be opened on your end. Thank you for your assistance!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/387", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/387/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/387/events", "html_url": "https://github.com/facetoe/zenpy/issues/387", "id": 541024059, "node_id": "MDU6SXNzdWU1NDEwMjQwNTk=", "number": 387, "title": "Allow to disable cache for particular entities", "user": {"login": "Senpos", "id": 9695470, "node_id": "MDQ6VXNlcjk2OTU0NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9695470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Senpos", "html_url": "https://github.com/Senpos", "followers_url": "https://api.github.com/users/Senpos/followers", "following_url": "https://api.github.com/users/Senpos/following{/other_user}", "gists_url": "https://api.github.com/users/Senpos/gists{/gist_id}", "starred_url": "https://api.github.com/users/Senpos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Senpos/subscriptions", "organizations_url": "https://api.github.com/users/Senpos/orgs", "repos_url": "https://api.github.com/users/Senpos/repos", "events_url": "https://api.github.com/users/Senpos/events{/privacy}", "received_events_url": "https://api.github.com/users/Senpos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-20T14:31:22Z", "updated_at": "2019-12-23T09:18:47Z", "closed_at": "2019-12-23T09:18:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment, we can only disable cache as a whole.\r\n\r\nBut it would be useful to disable cache only for **tickets** or for **users** etc\r\n\r\nThat would solve the problem with search & sideloading tickets described [here](https://github.com/facetoe/zenpy/issues/317#issuecomment-477072947)\r\n\r\nAs a workaround. I modify `venv/Lib/site-packages/zenpy/lib/cache.py` by hand and comment out `ticket`, so they will not be cached, while other entities will:\r\n```python\r\nclass ZenpyCacheManager:\r\n    def __init__(self, disabled=False):\r\n        ...\r\n        self.mapping = {\r\n            ...\r\n            # 'ticket': ZenpyCache('TTLCache', maxsize=10000, ttl=30),  <--- here\r\n            ...\r\n        }\r\n```\r\n\r\nIn my use case, it decreases the load time by a half (which is useful when the script is running in AWS Lambda or similar platforms, who charge users for execution time).\r\n\r\nSomething like this would be awesome:\r\n```python\r\nzendesk.disable_caching()  # for all entities\r\nzendesk.disable_caching(tickets=True)  # only for tickets\r\nzendesk.disable_caching(tickets=True, users=True)  # for tickets and users\r\n```\r\n\r\nPlease, share your thoughts on this and thanks for your time. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/386", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/386/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/386/events", "html_url": "https://github.com/facetoe/zenpy/issues/386", "id": 539739206, "node_id": "MDU6SXNzdWU1Mzk3MzkyMDY=", "number": 386, "title": "Support for custom fields for user profile", "user": {"login": "b3Nd2", "id": 59022979, "node_id": "MDQ6VXNlcjU5MDIyOTc5", "avatar_url": "https://avatars0.githubusercontent.com/u/59022979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b3Nd2", "html_url": "https://github.com/b3Nd2", "followers_url": "https://api.github.com/users/b3Nd2/followers", "following_url": "https://api.github.com/users/b3Nd2/following{/other_user}", "gists_url": "https://api.github.com/users/b3Nd2/gists{/gist_id}", "starred_url": "https://api.github.com/users/b3Nd2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b3Nd2/subscriptions", "organizations_url": "https://api.github.com/users/b3Nd2/orgs", "repos_url": "https://api.github.com/users/b3Nd2/repos", "events_url": "https://api.github.com/users/b3Nd2/events{/privacy}", "received_events_url": "https://api.github.com/users/b3Nd2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-18T15:06:57Z", "updated_at": "2019-12-19T10:16:12Z", "closed_at": "2019-12-19T10:16:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I utilize a number of custom fields in the user profile of our clients in Zendesk and am not able to modify these custom fields through Zenpy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/385", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/385/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/385/events", "html_url": "https://github.com/facetoe/zenpy/issues/385", "id": 539357973, "node_id": "MDU6SXNzdWU1MzkzNTc5NzM=", "number": 385, "title": "[Bug] Bulk Destroy Requests URI Length", "user": {"login": "amjadtalib", "id": 18545517, "node_id": "MDQ6VXNlcjE4NTQ1NTE3", "avatar_url": "https://avatars0.githubusercontent.com/u/18545517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amjadtalib", "html_url": "https://github.com/amjadtalib", "followers_url": "https://api.github.com/users/amjadtalib/followers", "following_url": "https://api.github.com/users/amjadtalib/following{/other_user}", "gists_url": "https://api.github.com/users/amjadtalib/gists{/gist_id}", "starred_url": "https://api.github.com/users/amjadtalib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amjadtalib/subscriptions", "organizations_url": "https://api.github.com/users/amjadtalib/orgs", "repos_url": "https://api.github.com/users/amjadtalib/repos", "events_url": "https://api.github.com/users/amjadtalib/events{/privacy}", "received_events_url": "https://api.github.com/users/amjadtalib/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-17T23:03:45Z", "updated_at": "2019-12-19T21:56:03Z", "closed_at": "2019-12-19T10:06:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey @facetoe,\r\n\r\nI wanted to flag a bug when using delete many for organization memberships. Not sure why this doesn't happen with the other bulk endpoints I've tested. Also not sure if this is limited to python/requests version, which are:\r\n```\r\nPyDev console: using IPython 5.3.0\r\nPython 2.7.15 (v2.7.15:ca079a3ea3, Apr 29 2018, 17:49:27) \r\n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\r\nZenpy version 2.0.10\r\nRequests version 2.21.0\r\n```\r\n\r\n### Organization Memberships Endpoint\r\n#### Response Stdout\r\n```\r\nreply: 'HTTP/1.1 414 URI Too Long\\r\\n'\r\nheader: Date: Tue, 17 Dec 2019 22:40:22 GMT\r\nheader: Transfer-Encoding: chunked\r\nheader: Connection: keep-alive\r\nheader: CF-Cache-Status: DYNAMIC\r\nheader: Expect-CT: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\r\nheader: Server: cloudflare\r\n```\r\n#### Stack Trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/amjad/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2881, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-30-4d55957d130b>\", line 17, in <module>\r\n    entity_func.delete(entities)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/zenpy/lib/api.py\", line 465, in delete\r\n    return CRUDRequest(self).delete(api_objects)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/zenpy/lib/request.py\", line 110, in delete\r\n    response = self.api._delete(url, payload=payload)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/zenpy/lib/api.py\", line 124, in _delete\r\n    response = self._call_api(self.session.delete, url, json=payload, timeout=self.timeout)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/zenpy/lib/api.py\", line 149, in _call_api\r\n    response = http_method(url, **kwargs)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/requests/sessions.py\", line 615, in delete\r\n    return self.request('DELETE', url, **kwargs)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/requests/sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/requests/sessions.py\", line 686, in send\r\n    r.content\r\n  File \"/Users/amjad/lib/python2.7/site-packages/requests/models.py\", line 828, in content\r\n    self._content = b''.join(self.iter_content(CONTENT_CHUNK_SIZE)) or b''\r\n  File \"/Users/amjad/lib/python2.7/site-packages/requests/models.py\", line 753, in generate\r\n    raise ChunkedEncodingError(e)\r\nChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read))\r\n```\r\n### Users Endpoint\r\n#### Response Stdout\r\n```\r\nreply: 'HTTP/1.1 414 Request-URI Too Large\\r\\n'\r\nheader: Server: cloudflare\r\nheader: Date: Tue, 17 Dec 2019 22:49:29 GMT\r\nheader: Content-Type: text/html\r\nheader: Content-Length: 175\r\nheader: Connection: close\r\nheader: CF-RAY: -\r\n```\r\n#### Stack Trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/amjad/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2881, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-33-7e3ea98302bf>\", line 17, in <module>\r\n    entity_func.delete(entities)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/zenpy/lib/api.py\", line 465, in delete\r\n    return CRUDRequest(self).delete(api_objects)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/zenpy/lib/request.py\", line 110, in delete\r\n    response = self.api._delete(url, payload=payload)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/zenpy/lib/api.py\", line 124, in _delete\r\n    response = self._call_api(self.session.delete, url, json=payload, timeout=self.timeout)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/zenpy/lib/api.py\", line 165, in _call_api\r\n    self._check_response(response)\r\n  File \"/Users/amjad/lib/python2.7/site-packages/zenpy/lib/api.py\", line 306, in _check_response\r\n    response.raise_for_status()\r\n  File \"/Users/amjad/lib/python2.7/site-packages/requests/models.py\", line 940, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nHTTPError: 414 Client Error: Request-URI Too Large for url: <truncated by amjad for readability>\r\n```\r\nTruncated url: [uri_too_long.txt](https://github.com/facetoe/zenpy/files/3975825/uri_too_long.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/384", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/384/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/384/events", "html_url": "https://github.com/facetoe/zenpy/issues/384", "id": 536272107, "node_id": "MDU6SXNzdWU1MzYyNzIxMDc=", "number": 384, "title": "Tickets: filter & sideload at the same time", "user": {"login": "Senpos", "id": 9695470, "node_id": "MDQ6VXNlcjk2OTU0NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9695470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Senpos", "html_url": "https://github.com/Senpos", "followers_url": "https://api.github.com/users/Senpos/followers", "following_url": "https://api.github.com/users/Senpos/following{/other_user}", "gists_url": "https://api.github.com/users/Senpos/gists{/gist_id}", "starred_url": "https://api.github.com/users/Senpos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Senpos/subscriptions", "organizations_url": "https://api.github.com/users/Senpos/orgs", "repos_url": "https://api.github.com/users/Senpos/repos", "events_url": "https://api.github.com/users/Senpos/events{/privacy}", "received_events_url": "https://api.github.com/users/Senpos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-11T10:15:53Z", "updated_at": "2019-12-13T23:42:20Z", "closed_at": "2019-12-13T23:42:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey!\r\n\r\nI was wondering if there's a way to both filter and sideload data at the same time.\r\n\r\nExample:\r\n```python\r\ntickets = zendesk.search(tags=vip_tags, status=['new', 'open'], include=['users', 'slas'])\r\nfor ticket in tickets:\r\n    print(ticket.slas)\r\n```\r\n\r\nAt the moment, this gives me an empty result, since it assumes that the `include` keyword is a Zendesk keyword, not a sideload attempt.\r\n\r\nDo I have to use the following pattern?\r\n```python\r\ntickets = zendesk.search(tags=vip_tags, status=['new', 'open'])\r\nfor filtered_ticket in tickets:\r\n    ticket = zendesk.tickets(id=filtered_ticket.id, include=['users', 'slas'])\r\n```\r\n\r\nI have also tried to do this:\r\n```python\r\ntickets = zendesk.tickets(tags=vip_tags, status=['new', 'open'], include=['users', 'slas'])\r\n```\r\n\r\nBut I guess, it is not possible to do filtering outside of `search` method.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/383", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/383/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/383/events", "html_url": "https://github.com/facetoe/zenpy/issues/383", "id": 533546810, "node_id": "MDU6SXNzdWU1MzM1NDY4MTA=", "number": 383, "title": "Suppress Logging", "user": {"login": "emc-hood", "id": 52470456, "node_id": "MDQ6VXNlcjUyNDcwNDU2", "avatar_url": "https://avatars2.githubusercontent.com/u/52470456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emc-hood", "html_url": "https://github.com/emc-hood", "followers_url": "https://api.github.com/users/emc-hood/followers", "following_url": "https://api.github.com/users/emc-hood/following{/other_user}", "gists_url": "https://api.github.com/users/emc-hood/gists{/gist_id}", "starred_url": "https://api.github.com/users/emc-hood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emc-hood/subscriptions", "organizations_url": "https://api.github.com/users/emc-hood/orgs", "repos_url": "https://api.github.com/users/emc-hood/repos", "events_url": "https://api.github.com/users/emc-hood/events{/privacy}", "received_events_url": "https://api.github.com/users/emc-hood/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-05T19:25:26Z", "updated_at": "2019-12-13T23:31:39Z", "closed_at": "2019-12-13T23:31:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to suppress logging? Specifically for rate limiting?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/382", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/382/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/382/events", "html_url": "https://github.com/facetoe/zenpy/issues/382", "id": 533293859, "node_id": "MDU6SXNzdWU1MzMyOTM4NTk=", "number": 382, "title": "502 Server Error: Bad Gateway when trying to upload attachment", "user": {"login": "Simon-Ince", "id": 14872305, "node_id": "MDQ6VXNlcjE0ODcyMzA1", "avatar_url": "https://avatars0.githubusercontent.com/u/14872305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Simon-Ince", "html_url": "https://github.com/Simon-Ince", "followers_url": "https://api.github.com/users/Simon-Ince/followers", "following_url": "https://api.github.com/users/Simon-Ince/following{/other_user}", "gists_url": "https://api.github.com/users/Simon-Ince/gists{/gist_id}", "starred_url": "https://api.github.com/users/Simon-Ince/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Simon-Ince/subscriptions", "organizations_url": "https://api.github.com/users/Simon-Ince/orgs", "repos_url": "https://api.github.com/users/Simon-Ince/repos", "events_url": "https://api.github.com/users/Simon-Ince/events{/privacy}", "received_events_url": "https://api.github.com/users/Simon-Ince/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-05T11:30:59Z", "updated_at": "2020-01-12T03:36:52Z", "closed_at": "2020-01-12T03:36:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting: `requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://lushltd.zendesk.com/api/v2/uploads.json?filename=/app/joel.jpg`\r\n\r\nFrom running: `upload_instance = zenpy_client.attachments.upload(\"/app/joel.jpg\")`\r\n\r\nWeird thing is, this was working for me yesterday. I've checked the ZenDesk API status and everything is up, and there Docs don't say anything about any changes to upload files.\r\n\r\nI did find this issue that is similar, but there was no real resolution: https://app.slack.com/client/T029C5TRD/D9MF3DTB8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/381", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/381/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/381/events", "html_url": "https://github.com/facetoe/zenpy/issues/381", "id": 532935909, "node_id": "MDU6SXNzdWU1MzI5MzU5MDk=", "number": 381, "title": "users.identities.make_primary throws \"'int' object has no attribute 'id'\"", "user": {"login": "franklinfirefly", "id": 49537945, "node_id": "MDQ6VXNlcjQ5NTM3OTQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/49537945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/franklinfirefly", "html_url": "https://github.com/franklinfirefly", "followers_url": "https://api.github.com/users/franklinfirefly/followers", "following_url": "https://api.github.com/users/franklinfirefly/following{/other_user}", "gists_url": "https://api.github.com/users/franklinfirefly/gists{/gist_id}", "starred_url": "https://api.github.com/users/franklinfirefly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/franklinfirefly/subscriptions", "organizations_url": "https://api.github.com/users/franklinfirefly/orgs", "repos_url": "https://api.github.com/users/franklinfirefly/repos", "events_url": "https://api.github.com/users/franklinfirefly/events{/privacy}", "received_events_url": "https://api.github.com/users/franklinfirefly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-04T21:09:33Z", "updated_at": "2019-12-13T23:20:38Z", "closed_at": "2019-12-13T23:20:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/facetoe/zenpy/blob/91d61569de10490704ee7213bfc3512136c07153/zenpy/lib/request.py#L200\r\n\r\nSeems like a recent change to this line is throwing exceptions when `users.identities.make_primary()` is called. Rolling back to 2.0.12 seems to address the issue.\r\n\r\nThis could be related to the fix to #221", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/379", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/379/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/379/events", "html_url": "https://github.com/facetoe/zenpy/issues/379", "id": 531579412, "node_id": "MDU6SXNzdWU1MzE1Nzk0MTI=", "number": 379, "title": "Release 2.0.13 has backwards incompatible change", "user": {"login": "lukeburden", "id": 1703533, "node_id": "MDQ6VXNlcjE3MDM1MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1703533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukeburden", "html_url": "https://github.com/lukeburden", "followers_url": "https://api.github.com/users/lukeburden/followers", "following_url": "https://api.github.com/users/lukeburden/following{/other_user}", "gists_url": "https://api.github.com/users/lukeburden/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukeburden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukeburden/subscriptions", "organizations_url": "https://api.github.com/users/lukeburden/orgs", "repos_url": "https://api.github.com/users/lukeburden/repos", "events_url": "https://api.github.com/users/lukeburden/events{/privacy}", "received_events_url": "https://api.github.com/users/lukeburden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-02T22:26:39Z", "updated_at": "2019-12-03T11:26:58Z", "closed_at": "2019-12-03T09:13:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hola,\r\n\r\nIt appears the 2.0.13 release has changed the interface for uploading attachments.\r\n\r\nPrior to 2.0.13, you could call:\r\n\r\n```python\r\n\r\nfile_obj = <some file-like object>\r\n\r\nclient.attachments.upload(\r\n    file_obj,\r\n    target_name=file_obj.filename,\r\n)\r\n```\r\n\r\nStarting 2.0.13, using this function in this same way results in the error:\r\n\r\n```expected str, bytes or os.PathLike object, not <file_obj.__class__>```\r\n\r\nThis caused an outage for at my work-place today, as we assumed (somewhat naively) that Zenpy is semantically versioned and that therefore within a major version release, backwards compatibility would be respected.\r\n\r\nWe've rolled back to 2.0.12 and this resolved the issue for us.\r\n\r\nWas this change intentional? Of course, bugs happen, I'm mostly keen to understand how you version this library and therefore how I and others should be defining it as a dependency. Does Zenpy aim to use semantic versioning?\r\n\r\nThanks for your work @facetoe.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/378", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/378/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/378/events", "html_url": "https://github.com/facetoe/zenpy/issues/378", "id": 530730790, "node_id": "MDU6SXNzdWU1MzA3MzA3OTA=", "number": 378, "title": "2.0.13 version - AttributeError: 'SearchApi' object has no attribute '_get_user'", "user": {"login": "lewis-morris", "id": 36413348, "node_id": "MDQ6VXNlcjM2NDEzMzQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/36413348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lewis-morris", "html_url": "https://github.com/lewis-morris", "followers_url": "https://api.github.com/users/lewis-morris/followers", "following_url": "https://api.github.com/users/lewis-morris/following{/other_user}", "gists_url": "https://api.github.com/users/lewis-morris/gists{/gist_id}", "starred_url": "https://api.github.com/users/lewis-morris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lewis-morris/subscriptions", "organizations_url": "https://api.github.com/users/lewis-morris/orgs", "repos_url": "https://api.github.com/users/lewis-morris/repos", "events_url": "https://api.github.com/users/lewis-morris/events{/privacy}", "received_events_url": "https://api.github.com/users/lewis-morris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-01T13:21:04Z", "updated_at": "2019-12-02T09:35:32Z", "closed_at": "2019-12-02T08:22:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following no longer works and throws a Attribute Error.\r\n\r\nAttributeError: 'SearchApi' object has no attribute '_get_user'\r\n\r\n```\r\nfor tick in zenpy_client.search(type='ticket', status=[\"new\",\"open\",\"pending\",\"solved\"], created_between=[yesterday, now]):\r\n\r\nticket_req_email = tick.requester.email\r\n\r\n```\r\n\r\n    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/375", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/375/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/375/events", "html_url": "https://github.com/facetoe/zenpy/issues/375", "id": 530201687, "node_id": "MDU6SXNzdWU1MzAyMDE2ODc=", "number": 375, "title": "Add GitHub Sponsors", "user": {"login": "shicholas", "id": 889427, "node_id": "MDQ6VXNlcjg4OTQyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/889427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shicholas", "html_url": "https://github.com/shicholas", "followers_url": "https://api.github.com/users/shicholas/followers", "following_url": "https://api.github.com/users/shicholas/following{/other_user}", "gists_url": "https://api.github.com/users/shicholas/gists{/gist_id}", "starred_url": "https://api.github.com/users/shicholas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shicholas/subscriptions", "organizations_url": "https://api.github.com/users/shicholas/orgs", "repos_url": "https://api.github.com/users/shicholas/repos", "events_url": "https://api.github.com/users/shicholas/events{/privacy}", "received_events_url": "https://api.github.com/users/shicholas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-29T07:45:59Z", "updated_at": "2019-12-15T00:35:38Z", "closed_at": "2019-12-14T02:36:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "@facetoe, this is an awesome project. And while I don't have much time to contribute to it, I would love to pay for more features here to be developed.\r\n\r\nIt'd be great if you consider adding GitHub sponsors to this project so it can encompass more of the Zendesk API. For me, I am looking for integrations into Zendesk Guide and Zendesk Sell.\r\n\r\nWhat do you think? My email is nick@1337lawyers.com if you'd like to take this discussion offline.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/374", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/374/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/374/events", "html_url": "https://github.com/facetoe/zenpy/issues/374", "id": 528144440, "node_id": "MDU6SXNzdWU1MjgxNDQ0NDA=", "number": 374, "title": "It not 100% clear what the prefered way to pass credentials to zenpy", "user": {"login": "Wheaties466", "id": 5346303, "node_id": "MDQ6VXNlcjUzNDYzMDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5346303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wheaties466", "html_url": "https://github.com/Wheaties466", "followers_url": "https://api.github.com/users/Wheaties466/followers", "following_url": "https://api.github.com/users/Wheaties466/following{/other_user}", "gists_url": "https://api.github.com/users/Wheaties466/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wheaties466/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wheaties466/subscriptions", "organizations_url": "https://api.github.com/users/Wheaties466/orgs", "repos_url": "https://api.github.com/users/Wheaties466/repos", "events_url": "https://api.github.com/users/Wheaties466/events{/privacy}", "received_events_url": "https://api.github.com/users/Wheaties466/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-25T15:02:56Z", "updated_at": "2019-12-01T02:36:19Z", "closed_at": "2019-11-25T21:22:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see there is a json file in the test environment. But in the quick start or docs there is built in logic to parse that. If this can be clarified to me I would like to update some of the docs or write some logic on the preferred way to handle this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/372", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/372/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/372/events", "html_url": "https://github.com/facetoe/zenpy/issues/372", "id": 523035562, "node_id": "MDU6SXNzdWU1MjMwMzU1NjI=", "number": 372, "title": "Searching for tickets with no organization", "user": {"login": "aesmat1", "id": 28548243, "node_id": "MDQ6VXNlcjI4NTQ4MjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/28548243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aesmat1", "html_url": "https://github.com/aesmat1", "followers_url": "https://api.github.com/users/aesmat1/followers", "following_url": "https://api.github.com/users/aesmat1/following{/other_user}", "gists_url": "https://api.github.com/users/aesmat1/gists{/gist_id}", "starred_url": "https://api.github.com/users/aesmat1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aesmat1/subscriptions", "organizations_url": "https://api.github.com/users/aesmat1/orgs", "repos_url": "https://api.github.com/users/aesmat1/repos", "events_url": "https://api.github.com/users/aesmat1/events{/privacy}", "received_events_url": "https://api.github.com/users/aesmat1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-14T18:40:22Z", "updated_at": "2019-11-30T00:46:28Z", "closed_at": "2019-11-30T00:46:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to search for tickets with no organization (None, or Null)\r\n\r\nHow to use a search like:\r\n`zenpy_client.search(type='ticket', organization=org)`\r\n\r\nWhat to use instead of org? I tried 'None', 'none', 'Null', 'null', and nothing is working. But when I pull all the tickets I get tickets with organizations ids and also the ones with nulls\r\n\r\nPlease help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/371", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/371/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/371/events", "html_url": "https://github.com/facetoe/zenpy/issues/371", "id": 522741969, "node_id": "MDU6SXNzdWU1MjI3NDE5Njk=", "number": 371, "title": "Requested response size was greater than Search Response Limits", "user": {"login": "jokerejoker", "id": 1307272, "node_id": "MDQ6VXNlcjEzMDcyNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1307272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jokerejoker", "html_url": "https://github.com/jokerejoker", "followers_url": "https://api.github.com/users/jokerejoker/followers", "following_url": "https://api.github.com/users/jokerejoker/following{/other_user}", "gists_url": "https://api.github.com/users/jokerejoker/gists{/gist_id}", "starred_url": "https://api.github.com/users/jokerejoker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jokerejoker/subscriptions", "organizations_url": "https://api.github.com/users/jokerejoker/orgs", "repos_url": "https://api.github.com/users/jokerejoker/repos", "events_url": "https://api.github.com/users/jokerejoker/events{/privacy}", "received_events_url": "https://api.github.com/users/jokerejoker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-14T09:50:30Z", "updated_at": "2020-01-27T19:04:47Z", "closed_at": "2019-11-14T10:39:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I get this exception when doing a search.\r\n```\r\nraise APIException(json.dumps(_json), response=response)\r\nzenpy.lib.exception.APIException: {\"error\": \"invalid\", \"description\": \"Invalid search: Requested response size was greater than Search Response Limits\"}\r\n```\r\n\r\nSimple query is `zenpy_client.search(query=\"created<1year\", type=\"ticket\")`\r\n\r\nWhen doing the same search in zendesk it show a count of 1028 entities.\r\n\r\nAccording to the documentation the limit on search is 100 entities per page. How do I force this limit?\r\nhttps://developer.zendesk.com/rest_api/docs/support/search#results-limit", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/367", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/367/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/367/events", "html_url": "https://github.com/facetoe/zenpy/issues/367", "id": 521146268, "node_id": "MDU6SXNzdWU1MjExNDYyNjg=", "number": 367, "title": "api search fails with python-3.7", "user": {"login": "netllama", "id": 71113, "node_id": "MDQ6VXNlcjcxMTEz", "avatar_url": "https://avatars0.githubusercontent.com/u/71113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/netllama", "html_url": "https://github.com/netllama", "followers_url": "https://api.github.com/users/netllama/followers", "following_url": "https://api.github.com/users/netllama/following{/other_user}", "gists_url": "https://api.github.com/users/netllama/gists{/gist_id}", "starred_url": "https://api.github.com/users/netllama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/netllama/subscriptions", "organizations_url": "https://api.github.com/users/netllama/orgs", "repos_url": "https://api.github.com/users/netllama/repos", "events_url": "https://api.github.com/users/netllama/events{/privacy}", "received_events_url": "https://api.github.com/users/netllama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-11T19:35:26Z", "updated_at": "2019-11-12T09:19:48Z", "closed_at": "2019-11-12T09:19:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n```\r\n>>> sp = {'type': 'organization', 'id': 9}\r\n>>> o9 = api.search(sp)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/netllama/nflx-git/oca-mgmt/venv/lib/python3.7/site-packages/zenpy/lib/api.py\", line 321, in __call__\r\n    return self._query_zendesk(self.endpoint, self.object_type, *args, **kwargs)\r\n  File \"/home/netllama/nflx-git/oca-mgmt/venv/lib/python3.7/site-packages/zenpy/lib/api.py\", line 270, in _query_zendesk\r\n    return self._get(self._build_url(endpoint=endpoint(*endpoint_args, **endpoint_kwargs)))\r\n  File \"/home/netllama/nflx-git/oca-mgmt/venv/lib/python3.7/site-packages/zenpy/lib/endpoint.py\", line 300, in __call__\r\n    search_query.insert(0, quote(query))\r\n  File \"/home/netllama/.newt-cache/pyenv/versions/3.7.5/lib/python3.7/urllib/parse.py\", line 834, in quote\r\n    return quote_from_bytes(string, safe)\r\n  File \"/home/netllama/.newt-cache/pyenv/versions/3.7.5/lib/python3.7/urllib/parse.py\", line 859, in quote_from_bytes\r\n    raise TypeError(\"quote_from_bytes() expected bytes\")\r\nTypeError: quote_from_bytes() expected bytes\r\n```\r\n\r\nAlso tried with ```sp = {'type': 'organization', 'id': '9'}``` and that fails in the same way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/366", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/366/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/366/events", "html_url": "https://github.com/facetoe/zenpy/issues/366", "id": 520028162, "node_id": "MDU6SXNzdWU1MjAwMjgxNjI=", "number": 366, "title": "UserIdentityApi.update convert identity to id so payload is incorrect", "user": {"login": "dstarod", "id": 107717, "node_id": "MDQ6VXNlcjEwNzcxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/107717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dstarod", "html_url": "https://github.com/dstarod", "followers_url": "https://api.github.com/users/dstarod/followers", "following_url": "https://api.github.com/users/dstarod/following{/other_user}", "gists_url": "https://api.github.com/users/dstarod/gists{/gist_id}", "starred_url": "https://api.github.com/users/dstarod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dstarod/subscriptions", "organizations_url": "https://api.github.com/users/dstarod/orgs", "repos_url": "https://api.github.com/users/dstarod/repos", "events_url": "https://api.github.com/users/dstarod/events{/privacy}", "received_events_url": "https://api.github.com/users/dstarod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-08T13:56:33Z", "updated_at": "2019-11-30T00:07:47Z", "closed_at": "2019-11-30T00:07:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Decorator `extract_id` under UserIdentityApi.update method convert argument `identity` into integer id, so `self.build_payload(identity)` generate `{'identity': ID}` instead of correct json document.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/365", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/365/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/365/events", "html_url": "https://github.com/facetoe/zenpy/issues/365", "id": 517233033, "node_id": "MDU6SXNzdWU1MTcyMzMwMzM=", "number": 365, "title": "Cannot Query Ticket_Metrics", "user": {"login": "jbreen18", "id": 57362219, "node_id": "MDQ6VXNlcjU3MzYyMjE5", "avatar_url": "https://avatars2.githubusercontent.com/u/57362219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbreen18", "html_url": "https://github.com/jbreen18", "followers_url": "https://api.github.com/users/jbreen18/followers", "following_url": "https://api.github.com/users/jbreen18/following{/other_user}", "gists_url": "https://api.github.com/users/jbreen18/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbreen18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbreen18/subscriptions", "organizations_url": "https://api.github.com/users/jbreen18/orgs", "repos_url": "https://api.github.com/users/jbreen18/repos", "events_url": "https://api.github.com/users/jbreen18/events{/privacy}", "received_events_url": "https://api.github.com/users/jbreen18/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-04T15:38:40Z", "updated_at": "2019-11-05T07:17:59Z", "closed_at": "2019-11-05T07:17:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nThere is an API page which has useful information for my tickets with the URL:\r\n...api/v2/ticket_metrics...,\r\nbut if I try to query it as:\r\n\"result_generator = zenpy_client.ticket_metrics(ticket_ids=[1,2])\"\r\nthen instead of giving the metrics of tickets 1 and 2 it dumps the metrics of every ticket. I cannot find any suitable alternative, could you please advise why this is happening?\r\n\r\nThank you :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/364", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/364/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/364/events", "html_url": "https://github.com/facetoe/zenpy/issues/364", "id": 514025200, "node_id": "MDU6SXNzdWU1MTQwMjUyMDA=", "number": 364, "title": "Support for retrieving tickets by external id?", "user": {"login": "jordaniac89", "id": 8006059, "node_id": "MDQ6VXNlcjgwMDYwNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8006059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jordaniac89", "html_url": "https://github.com/jordaniac89", "followers_url": "https://api.github.com/users/jordaniac89/followers", "following_url": "https://api.github.com/users/jordaniac89/following{/other_user}", "gists_url": "https://api.github.com/users/jordaniac89/gists{/gist_id}", "starred_url": "https://api.github.com/users/jordaniac89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jordaniac89/subscriptions", "organizations_url": "https://api.github.com/users/jordaniac89/orgs", "repos_url": "https://api.github.com/users/jordaniac89/repos", "events_url": "https://api.github.com/users/jordaniac89/events{/privacy}", "received_events_url": "https://api.github.com/users/jordaniac89/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-29T15:49:55Z", "updated_at": "2019-11-03T05:55:10Z", "closed_at": "2019-10-30T09:31:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there support for this? I don't see it anywhere in the documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/363", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/363/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/363/events", "html_url": "https://github.com/facetoe/zenpy/issues/363", "id": 509652411, "node_id": "MDU6SXNzdWU1MDk2NTI0MTE=", "number": 363, "title": "querying for event timestamps", "user": {"login": "netllama", "id": 71113, "node_id": "MDQ6VXNlcjcxMTEz", "avatar_url": "https://avatars0.githubusercontent.com/u/71113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/netllama", "html_url": "https://github.com/netllama", "followers_url": "https://api.github.com/users/netllama/followers", "following_url": "https://api.github.com/users/netllama/following{/other_user}", "gists_url": "https://api.github.com/users/netllama/gists{/gist_id}", "starred_url": "https://api.github.com/users/netllama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/netllama/subscriptions", "organizations_url": "https://api.github.com/users/netllama/orgs", "repos_url": "https://api.github.com/users/netllama/repos", "events_url": "https://api.github.com/users/netllama/events{/privacy}", "received_events_url": "https://api.github.com/users/netllama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-20T21:04:44Z", "updated_at": "2019-11-03T05:55:22Z", "closed_at": "2019-10-20T21:46:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to generate some metrics based on the time stamp associated with the events associated with tickets returned from a search.  However, the API doesn't seem to include this timestamp when I do the following:\r\n```\r\nticket = zenpy_client.tickets(id=1)\r\nfor audit in zenpy_client.tickets.audits(ticket.id):\r\n    for event in audit.events:\r\n        print(event)\r\n```\r\n\r\nAm I doing something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/362", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/362/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/362/events", "html_url": "https://github.com/facetoe/zenpy/issues/362", "id": 506667721, "node_id": "MDU6SXNzdWU1MDY2Njc3MjE=", "number": 362, "title": "Export custom field value", "user": {"login": "rafaga444", "id": 17475389, "node_id": "MDQ6VXNlcjE3NDc1Mzg5", "avatar_url": "https://avatars2.githubusercontent.com/u/17475389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafaga444", "html_url": "https://github.com/rafaga444", "followers_url": "https://api.github.com/users/rafaga444/followers", "following_url": "https://api.github.com/users/rafaga444/following{/other_user}", "gists_url": "https://api.github.com/users/rafaga444/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafaga444/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafaga444/subscriptions", "organizations_url": "https://api.github.com/users/rafaga444/orgs", "repos_url": "https://api.github.com/users/rafaga444/repos", "events_url": "https://api.github.com/users/rafaga444/events{/privacy}", "received_events_url": "https://api.github.com/users/rafaga444/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-14T13:52:08Z", "updated_at": "2019-11-03T05:55:45Z", "closed_at": "2019-11-03T05:39:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\nHow can i print custom ticket field values with specific id?\r\nIt tried this\r\n`for ticket in zenpy_client.views.tickets(my_view_id):`\r\n    `wallet = ticket.custom_fields(id=360017093212)`\r\n    `print(ticket.id, ticket.requester.email,wallet)`\r\nbut obviously it doesn't work. Could you please help me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/361", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/361/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/361/events", "html_url": "https://github.com/facetoe/zenpy/issues/361", "id": 503929362, "node_id": "MDU6SXNzdWU1MDM5MjkzNjI=", "number": 361, "title": "Status open when creating ticket", "user": {"login": "OscarPDR", "id": 1264166, "node_id": "MDQ6VXNlcjEyNjQxNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1264166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OscarPDR", "html_url": "https://github.com/OscarPDR", "followers_url": "https://api.github.com/users/OscarPDR/followers", "following_url": "https://api.github.com/users/OscarPDR/following{/other_user}", "gists_url": "https://api.github.com/users/OscarPDR/gists{/gist_id}", "starred_url": "https://api.github.com/users/OscarPDR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OscarPDR/subscriptions", "organizations_url": "https://api.github.com/users/OscarPDR/orgs", "repos_url": "https://api.github.com/users/OscarPDR/repos", "events_url": "https://api.github.com/users/OscarPDR/events{/privacy}", "received_events_url": "https://api.github.com/users/OscarPDR/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-08T09:22:39Z", "updated_at": "2019-11-03T05:56:03Z", "closed_at": "2019-11-03T05:50:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! When I create a new ticket using zenpy, it is created with status='open', when it should be 'new'. As the update method doesn't allow 'new' as a valid status, there is no further way of modifying it.\r\nI have tried to create a ticket through a POST request using the official API and the status is set to 'new' by default, as it should be.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/360", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/360/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/360/events", "html_url": "https://github.com/facetoe/zenpy/issues/360", "id": 495335578, "node_id": "MDU6SXNzdWU0OTUzMzU1Nzg=", "number": 360, "title": "Update Bulk user tags in Zendesk using wrapper", "user": {"login": "LinuxNietzsche", "id": 50747065, "node_id": "MDQ6VXNlcjUwNzQ3MDY1", "avatar_url": "https://avatars1.githubusercontent.com/u/50747065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinuxNietzsche", "html_url": "https://github.com/LinuxNietzsche", "followers_url": "https://api.github.com/users/LinuxNietzsche/followers", "following_url": "https://api.github.com/users/LinuxNietzsche/following{/other_user}", "gists_url": "https://api.github.com/users/LinuxNietzsche/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinuxNietzsche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinuxNietzsche/subscriptions", "organizations_url": "https://api.github.com/users/LinuxNietzsche/orgs", "repos_url": "https://api.github.com/users/LinuxNietzsche/repos", "events_url": "https://api.github.com/users/LinuxNietzsche/events{/privacy}", "received_events_url": "https://api.github.com/users/LinuxNietzsche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-18T16:36:28Z", "updated_at": "2019-11-03T05:56:20Z", "closed_at": "2019-10-26T11:23:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi , I'm attempting to use the wrapper to bulk edit user tags in zendesk (1200 +) but not sure where to start; are there some code examples that you could provide?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/359", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/359/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/359/events", "html_url": "https://github.com/facetoe/zenpy/issues/359", "id": 493430330, "node_id": "MDU6SXNzdWU0OTM0MzAzMzA=", "number": 359, "title": "Support for Jira Links API pagination", "user": {"login": "LewisDavies", "id": 16354488, "node_id": "MDQ6VXNlcjE2MzU0NDg4", "avatar_url": "https://avatars1.githubusercontent.com/u/16354488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LewisDavies", "html_url": "https://github.com/LewisDavies", "followers_url": "https://api.github.com/users/LewisDavies/followers", "following_url": "https://api.github.com/users/LewisDavies/following{/other_user}", "gists_url": "https://api.github.com/users/LewisDavies/gists{/gist_id}", "starred_url": "https://api.github.com/users/LewisDavies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LewisDavies/subscriptions", "organizations_url": "https://api.github.com/users/LewisDavies/orgs", "repos_url": "https://api.github.com/users/LewisDavies/repos", "events_url": "https://api.github.com/users/LewisDavies/events{/privacy}", "received_events_url": "https://api.github.com/users/LewisDavies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960236, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzY=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-13T17:08:22Z", "updated_at": "2020-01-19T03:35:08Z", "closed_at": "2020-01-19T03:35:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `Zenpy.jira_links()` to retrieve data on Jira tickets raised via the Zendesk integration. We recently passed the 1000 ticket barrier and Zenpy is now only returning the first 1000 results. \r\n\r\nI did some digging and it appears that Zenpy is looking for the next page header, but this endpoint doesn't provide one. I contacted Zendesk and here's their reply:\r\n\r\n> The API design for JIRA integration is as you describe (no next_page). We use cursor-based pagination. This is because Offset-based pagination is inefficient and has a significant performance impact - especially for large offsets. Offset-based pagination may also return incorrect results if the underlying data served by API mutates.\r\n\r\nThey recommended using the `since_id` option to get the results in batches but this doesn't seem compatible with how the library currently works. I'd love to contribute in some way but frankly have no idea where to start - any help or pointers would be appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/358", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/358/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/358/events", "html_url": "https://github.com/facetoe/zenpy/issues/358", "id": 493031451, "node_id": "MDU6SXNzdWU0OTMwMzE0NTE=", "number": 358, "title": "possible to search tickets updated by specific list of users?", "user": {"login": "netllama", "id": 71113, "node_id": "MDQ6VXNlcjcxMTEz", "avatar_url": "https://avatars0.githubusercontent.com/u/71113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/netllama", "html_url": "https://github.com/netllama", "followers_url": "https://api.github.com/users/netllama/followers", "following_url": "https://api.github.com/users/netllama/following{/other_user}", "gists_url": "https://api.github.com/users/netllama/gists{/gist_id}", "starred_url": "https://api.github.com/users/netllama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/netllama/subscriptions", "organizations_url": "https://api.github.com/users/netllama/orgs", "repos_url": "https://api.github.com/users/netllama/repos", "events_url": "https://api.github.com/users/netllama/events{/privacy}", "received_events_url": "https://api.github.com/users/netllama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-12T21:10:18Z", "updated_at": "2019-11-03T05:56:36Z", "closed_at": "2019-09-16T16:16:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to compose a search query that will return tickets where ```updated_before``` is a parameter, but only for a specific list of users.  In other words, the search should return all tickets that were updated before a specific date, as long as the updates were performed by the specified list of users.  \r\n\r\nWithout the list of users, its a fairly straightforward query:\r\n\r\n```zenpy_client.search(\"zenpy\",'type'='ticket', 'updated_before'=days_ago)```\r\n\r\nBut I'm at a complete loss how to do this with a specific list of users.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/357", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/357/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/357/events", "html_url": "https://github.com/facetoe/zenpy/issues/357", "id": 488949282, "node_id": "MDU6SXNzdWU0ODg5NDkyODI=", "number": 357, "title": "Ticket type not changing", "user": {"login": "taufiquenoorani", "id": 14116001, "node_id": "MDQ6VXNlcjE0MTE2MDAx", "avatar_url": "https://avatars3.githubusercontent.com/u/14116001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taufiquenoorani", "html_url": "https://github.com/taufiquenoorani", "followers_url": "https://api.github.com/users/taufiquenoorani/followers", "following_url": "https://api.github.com/users/taufiquenoorani/following{/other_user}", "gists_url": "https://api.github.com/users/taufiquenoorani/gists{/gist_id}", "starred_url": "https://api.github.com/users/taufiquenoorani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taufiquenoorani/subscriptions", "organizations_url": "https://api.github.com/users/taufiquenoorani/orgs", "repos_url": "https://api.github.com/users/taufiquenoorani/repos", "events_url": "https://api.github.com/users/taufiquenoorani/events{/privacy}", "received_events_url": "https://api.github.com/users/taufiquenoorani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-04T05:31:23Z", "updated_at": "2019-11-03T05:56:51Z", "closed_at": "2019-09-04T21:14:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever I create a new ticket, the ticket type doesn't reflect the code. I specifically mention ticket type to 'question' but it creates a ticket with 'problem'. Here is my code:\r\n\r\n```\r\nzendesk_client = Zenpy(**creds)\r\n\r\n# Create a new ticket\r\nticket_audit = zendesk_client.tickets.create(\r\n    Ticket(subject=\"MASTER TICKET: {} - {}\".format(cd, serv), requester=User(name=name, email=email),\r\n            comment=Comment(html_body='Info: {}'.format(info)),\r\n            priority=\"normal\", requester_id=\"116257890\", type=\"question\",\r\n            submitter_id=\"116258908\", ticket_form_id=\"65667\", group_id=\"20042010\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/356", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/356/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/356/events", "html_url": "https://github.com/facetoe/zenpy/issues/356", "id": 487134888, "node_id": "MDU6SXNzdWU0ODcxMzQ4ODg=", "number": 356, "title": "API Exception accessing Author object in audit when audit caused by automation ", "user": {"login": "amjadtalib", "id": 18545517, "node_id": "MDQ6VXNlcjE4NTQ1NTE3", "avatar_url": "https://avatars0.githubusercontent.com/u/18545517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amjadtalib", "html_url": "https://github.com/amjadtalib", "followers_url": "https://api.github.com/users/amjadtalib/followers", "following_url": "https://api.github.com/users/amjadtalib/following{/other_user}", "gists_url": "https://api.github.com/users/amjadtalib/gists{/gist_id}", "starred_url": "https://api.github.com/users/amjadtalib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amjadtalib/subscriptions", "organizations_url": "https://api.github.com/users/amjadtalib/orgs", "repos_url": "https://api.github.com/users/amjadtalib/repos", "events_url": "https://api.github.com/users/amjadtalib/events{/privacy}", "received_events_url": "https://api.github.com/users/amjadtalib/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-29T19:24:49Z", "updated_at": "2020-06-21T10:10:00Z", "closed_at": "2020-06-21T10:10:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I'm seeing the following stack trace when calling `audit.author` for a ticket where the `audit` object had the following (sorted) JSON attribute: \r\n```json\r\n{\r\n  \"author_id\": -1,\r\n  \"created_at\": \"2019-08-29T12:34:14Z\",\r\n  ...\r\n}\r\n```\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2881, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-6-47d41864eb6f>\", line 1, in <module>\r\n    audit.author\r\n  File \"/lib/python2.7/site-packages/zenpy/lib/api_objects/__init__.py\", line 317, in author\r\n    return self.api._get_user(self.author_id)\r\n  File \"/lib/python2.7/site-packages/zenpy/lib/api.py\", line 324, in _get_user\r\n    return self._query_zendesk(EndpointFactory('users'), 'user', id=user_id)\r\n  File \"/lib/python2.7/site-packages/zenpy/lib/api.py\", line 257, in _query_zendesk\r\n    return self._get(url=self._build_url(endpoint(*endpoint_args, **endpoint_kwargs)))\r\n  File \"/lib/python2.7/site-packages/zenpy/lib/api.py\", line 112, in _get\r\n    response = self._call_api(self.session.get, url, timeout=self.timeout, **kwargs)\r\n  File \"/lib/python2.7/site-packages/zenpy/lib/api.py\", line 149, in _call_api\r\n    self._check_response(response)\r\n  File \"/lib/python2.7/site-packages/zenpy/lib/api.py\", line 288, in _check_response\r\n    raise APIException(json.dumps(_json), response=response)\r\nAPIException: {\"error\": {\"message\": \"You passed an invalid value for the id attribute. Invalid parameter: id must be greater than or equal to 0\", \"title\": \"Invalid attribute\"}}\r\n```\r\n\r\nI checked the ticket and it turns out this audit was performed by an automation and the `Events ` view of the ticket shows the agent as Zendesk. \r\n\r\nI assume this applies to all automation audits, but I'm wondering if zenpy can factor for this without requiring separate code logic.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/355", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/355/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/355/events", "html_url": "https://github.com/facetoe/zenpy/issues/355", "id": 485489741, "node_id": "MDU6SXNzdWU0ODU0ODk3NDE=", "number": 355, "title": "Ticket priority not updating", "user": {"login": "taufiquenoorani", "id": 14116001, "node_id": "MDQ6VXNlcjE0MTE2MDAx", "avatar_url": "https://avatars3.githubusercontent.com/u/14116001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taufiquenoorani", "html_url": "https://github.com/taufiquenoorani", "followers_url": "https://api.github.com/users/taufiquenoorani/followers", "following_url": "https://api.github.com/users/taufiquenoorani/following{/other_user}", "gists_url": "https://api.github.com/users/taufiquenoorani/gists{/gist_id}", "starred_url": "https://api.github.com/users/taufiquenoorani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taufiquenoorani/subscriptions", "organizations_url": "https://api.github.com/users/taufiquenoorani/orgs", "repos_url": "https://api.github.com/users/taufiquenoorani/repos", "events_url": "https://api.github.com/users/taufiquenoorani/events{/privacy}", "received_events_url": "https://api.github.com/users/taufiquenoorani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-26T22:44:52Z", "updated_at": "2019-11-03T05:57:01Z", "closed_at": "2019-08-27T06:01:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ticket priority isn't updating while creating ticket or even updating the ticket.\r\n\r\n```\r\ndef resolve_ticket(ticket):\r\n    zendesk_client = Zenpy(**creds)\r\n\r\n    zd_ticket = zendesk_client.tickets(id=ticket)\r\n    zd_ticket.priority = 'low'\r\n    zd_ticket.type = 'question'\r\n    zd_ticket.subject = 'TEST2'\r\n    zd_ticket.comment = Comment(body=\"RESOLVED\", public=False)\r\n\r\n    zendesk_client.tickets.update(zd_ticket)\r\n```\r\nThe code changes all other fields but priority of the ticket.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/353", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/353/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/353/events", "html_url": "https://github.com/facetoe/zenpy/issues/353", "id": 479308262, "node_id": "MDU6SXNzdWU0NzkzMDgyNjI=", "number": 353, "title": "Zendesk Search Endpoint returns Error on ISOFormat", "user": {"login": "insspb", "id": 1916759, "node_id": "MDQ6VXNlcjE5MTY3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1916759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insspb", "html_url": "https://github.com/insspb", "followers_url": "https://api.github.com/users/insspb/followers", "following_url": "https://api.github.com/users/insspb/following{/other_user}", "gists_url": "https://api.github.com/users/insspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/insspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insspb/subscriptions", "organizations_url": "https://api.github.com/users/insspb/orgs", "repos_url": "https://api.github.com/users/insspb/repos", "events_url": "https://api.github.com/users/insspb/events{/privacy}", "received_events_url": "https://api.github.com/users/insspb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-10T21:34:00Z", "updated_at": "2019-11-03T05:57:21Z", "closed_at": "2019-08-11T01:21:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Zenpy generates this URL: \r\n```\r\nhttps://d3v-ontec.zendesk.com/api/v2/search.json?sort_order=asc&sort_by=()&query=type:ticket%20created>2019-08-10T00:00:00+00:00%20created<2019-08-10T23:59:59+00:00\r\n```\r\nZendesk response: \r\n```\r\n{\"error\":\"invalid\",\"description\":\"Invalid search: Illegal value \\\"2019-08-10T00:00:00\\\" for \\\"created\\\". Expected date as yyyy-mm-dd, ISO time such as yyyy-mm-ddThh:mm:ss+05:00, or relative time such as 2hours.\"}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/351", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/351/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/351/events", "html_url": "https://github.com/facetoe/zenpy/issues/351", "id": 471278356, "node_id": "MDU6SXNzdWU0NzEyNzgzNTY=", "number": 351, "title": "filtering users() by group always returns all users", "user": {"login": "netllama", "id": 71113, "node_id": "MDQ6VXNlcjcxMTEz", "avatar_url": "https://avatars0.githubusercontent.com/u/71113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/netllama", "html_url": "https://github.com/netllama", "followers_url": "https://api.github.com/users/netllama/followers", "following_url": "https://api.github.com/users/netllama/following{/other_user}", "gists_url": "https://api.github.com/users/netllama/gists{/gist_id}", "starred_url": "https://api.github.com/users/netllama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/netllama/subscriptions", "organizations_url": "https://api.github.com/users/netllama/orgs", "repos_url": "https://api.github.com/users/netllama/repos", "events_url": "https://api.github.com/users/netllama/events{/privacy}", "received_events_url": "https://api.github.com/users/netllama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-22T19:38:20Z", "updated_at": "2019-07-22T23:28:42Z", "closed_at": "2019-07-22T23:28:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm attempting to filter the users returned by a specific group, but no matter what I specify for the group, it always returns all users, regardless of group membership.\r\n\r\nI've tried doing it by group id:\r\nusers = api.users(group=360005453791)\r\n\r\nand also group name:\r\nusers = api.users(group='Ops')\r\n\r\nThis group has 14 members, but I always get back thousands of users from the 2 calls above.  Am I doing something wrong, or is there a bug lurking?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/348", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/348/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/348/events", "html_url": "https://github.com/facetoe/zenpy/issues/348", "id": 468273037, "node_id": "MDU6SXNzdWU0NjgyNzMwMzc=", "number": 348, "title": "Retries policy on ZendeskResultGenerator", "user": {"login": "Teoretic6", "id": 9078134, "node_id": "MDQ6VXNlcjkwNzgxMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9078134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Teoretic6", "html_url": "https://github.com/Teoretic6", "followers_url": "https://api.github.com/users/Teoretic6/followers", "following_url": "https://api.github.com/users/Teoretic6/following{/other_user}", "gists_url": "https://api.github.com/users/Teoretic6/gists{/gist_id}", "starred_url": "https://api.github.com/users/Teoretic6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Teoretic6/subscriptions", "organizations_url": "https://api.github.com/users/Teoretic6/orgs", "repos_url": "https://api.github.com/users/Teoretic6/repos", "events_url": "https://api.github.com/users/Teoretic6/events{/privacy}", "received_events_url": "https://api.github.com/users/Teoretic6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-15T18:31:31Z", "updated_at": "2019-11-03T05:57:38Z", "closed_at": "2019-11-03T05:51:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "More of a question than an issue but still...\r\n\r\nLet's say **I want to iterate over generator by chunks and then save chunks to database.**\r\n```\r\nzenpy_client = Zenpy(**zendesk_creds)\r\ntickets_gen = zenpy_client.tickets()\r\n\r\nwhile True:\r\n    tickets = get_values_from_zendesk_gen(tickets_gen, chunk_size=10000)\r\n\r\n    if not tickets:\r\n        break\r\n\r\n    # saving tickets to database...\r\n    # save_to_database(tickets)\r\n```\r\n\r\nI want to iterate by chunks using a function `get_values_from_zendesk_gen` **with exponential retries over it** (through `tenacity` package or any other implementation)\r\n\r\n```\r\n@retry(stop=stop_after_attempt(4),\r\n       wait=wait_exponential(multiplier=1))\r\ndef get_values_from_zendesk_gen(zendesk_gen, chunk_size):\r\n    items = [i.to_dict() for i in itertools.islice(zendesk_gen, chunk_size)]\r\n\r\n    return items\r\n```\r\n\r\nSo the question is - **if I fail in the middle of `itertools.islice(zendesk_gen, chunk_size)` (network error, for example) and then make a retry of `itertools.islice(zendesk_gen, chunk_size)`, will I still get previous data from the generator?** \r\n\r\n**Example**\r\nLet's make an example - in my example `chunk_size` equals to 10000. This is a multiple-page chunk.\r\n\r\nLet's say that **there's a network error in the middle of a chunk retrieval** (in `get_values_from_zendesk_gen` function). \r\n**So some queries to Zendesk API has already been made** but when network was lost not all data was retrieved yet.\r\n\r\nThe exception was handled by `tenacity` package and `get_values_from_zendesk_gen` function was called again with the same `zendesk_gen` object and the same `chunk_size`.\r\n\r\nIf I understand correctly, **the old data (that was queried from Zendesk API before network error) will be lost and chunk of new 10000 tickets will be returned.**\r\n\r\n**So how can I implement retries policy in this situation?** \r\nIf there's an error occurred than should I recreate `ZendeskResultGenerator` object? (by calling `tickets_gen = zenpy_client.tickets()`)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/347", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/347/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/347/events", "html_url": "https://github.com/facetoe/zenpy/issues/347", "id": 466351620, "node_id": "MDU6SXNzdWU0NjYzNTE2MjA=", "number": 347, "title": "Trouble updating custom_fields", "user": {"login": "tgehrs", "id": 9788919, "node_id": "MDQ6VXNlcjk3ODg5MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9788919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgehrs", "html_url": "https://github.com/tgehrs", "followers_url": "https://api.github.com/users/tgehrs/followers", "following_url": "https://api.github.com/users/tgehrs/following{/other_user}", "gists_url": "https://api.github.com/users/tgehrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgehrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgehrs/subscriptions", "organizations_url": "https://api.github.com/users/tgehrs/orgs", "repos_url": "https://api.github.com/users/tgehrs/repos", "events_url": "https://api.github.com/users/tgehrs/events{/privacy}", "received_events_url": "https://api.github.com/users/tgehrs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-10T14:44:04Z", "updated_at": "2019-11-03T05:57:54Z", "closed_at": "2019-07-10T15:45:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Yesterday I was using this library to update a large number of tickets was having trouble updating a ticket's custom_fields according to the documentation in the readme:\r\n```\r\nticket = zenpy_client.tickets(id=some_ticket_id)\r\nticket.custom_fields.append(CustomField(id=43528467, value=1337))\r\nzenpy_client.tickets.update(ticket)\r\n```\r\nThis did not work for me, the custom field did not seem to save for some reason.\r\n\r\nTo debug I took a look at ticket.custom_fields it then looked like  a dictionary with the custom_field already existed:\r\n`[..., {'id': 43528467, 'value': None}, [CustomField(id=43528467)]]`\r\n\r\nThe only way I was able to get the custom_field to update is the following:\r\n```\r\nticket = zenpy_client.tickets(id=some_ticket_id)\r\nfor f in ticket.custom_fields:\r\n    if f['id'] == 43528467:\r\n        f['value'] = 'field_value' #actual value instead of ID\r\nzenpy_client.tickets.update(ticket)\r\n```\r\n\r\nWas I doing something incorrect the when trying the documented solution? If not and the documentation needs to be updated I would be happy to put together a PR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/346", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/346/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/346/events", "html_url": "https://github.com/facetoe/zenpy/issues/346", "id": 466350169, "node_id": "MDU6SXNzdWU0NjYzNTAxNjk=", "number": 346, "title": "Update custom_fields documentation?", "user": {"login": "tgehrs", "id": 9788919, "node_id": "MDQ6VXNlcjk3ODg5MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9788919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgehrs", "html_url": "https://github.com/tgehrs", "followers_url": "https://api.github.com/users/tgehrs/followers", "following_url": "https://api.github.com/users/tgehrs/following{/other_user}", "gists_url": "https://api.github.com/users/tgehrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgehrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgehrs/subscriptions", "organizations_url": "https://api.github.com/users/tgehrs/orgs", "repos_url": "https://api.github.com/users/tgehrs/repos", "events_url": "https://api.github.com/users/tgehrs/events{/privacy}", "received_events_url": "https://api.github.com/users/tgehrs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-10T14:41:25Z", "updated_at": "2019-11-03T05:58:07Z", "closed_at": "2019-11-03T05:53:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Yesterday I was using this library to update a large number of tickets was having trouble updating a ticket's custom_fields according to the documentation in the readme:\r\n```\r\nticket = zenpy_client.tickets(id=some_ticket_id)\r\nticket.custom_fields.append(CustomField(id=43528467, value=1337))\r\nzenpy_client.tickets.update(ticket)\r\n```\r\nThis did not work for me, the custom field did not seem to save for some reason.\r\n\r\nTo debug I took a look at ticket.custom_fields it then looked like  a dictionary with the custom_field already existed:\r\n`[..., {'id': 43528467, 'value': None}, [CustomField(id=43528467)]]`\r\n\r\nThe only way I was able to get the custom_field to update is the following:\r\n```\r\nticket = zenpy_client.tickets(id=some_ticket_id)\r\nfor f in ticket.custom_fields:\r\n    if f['id'] == 43528467:\r\n        f['value'] = 'field_value' #actual value instead of ID\r\nzenpy_client.tickets.update(ticket)\r\n```\r\n\r\nWas I doing something incorrect the when trying the documented solution? If not and the documentation needs to be updated I would be happy to put together a PR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/345", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/345/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/345/events", "html_url": "https://github.com/facetoe/zenpy/issues/345", "id": 463401569, "node_id": "MDU6SXNzdWU0NjM0MDE1Njk=", "number": 345, "title": "<zenpy.lib.generator.SearchResultGenerator at 0x109c94780>", "user": {"login": "LewisCharlesBaker", "id": 48811545, "node_id": "MDQ6VXNlcjQ4ODExNTQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/48811545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LewisCharlesBaker", "html_url": "https://github.com/LewisCharlesBaker", "followers_url": "https://api.github.com/users/LewisCharlesBaker/followers", "following_url": "https://api.github.com/users/LewisCharlesBaker/following{/other_user}", "gists_url": "https://api.github.com/users/LewisCharlesBaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/LewisCharlesBaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LewisCharlesBaker/subscriptions", "organizations_url": "https://api.github.com/users/LewisCharlesBaker/orgs", "repos_url": "https://api.github.com/users/LewisCharlesBaker/repos", "events_url": "https://api.github.com/users/LewisCharlesBaker/events{/privacy}", "received_events_url": "https://api.github.com/users/LewisCharlesBaker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-02T19:37:47Z", "updated_at": "2019-07-15T12:54:00Z", "closed_at": "2019-07-03T12:46:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I have been working through the sample API requests and keep encountering - \r\n\r\n<zenpy.lib.generator.SearchResultGenerator at 0x109c94780>\r\n\r\nI cannot identify a method for avoiding this. I have done some pretty deep searching, well at least I think I have!\r\n\r\nAny help is hugely appreciated.\r\n\r\nThanks in advance,\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/343", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/343/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/343/events", "html_url": "https://github.com/facetoe/zenpy/issues/343", "id": 461658398, "node_id": "MDU6SXNzdWU0NjE2NTgzOTg=", "number": 343, "title": "Sideloaded \"comments_count\" not cached", "user": {"login": "insspb", "id": 1916759, "node_id": "MDQ6VXNlcjE5MTY3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1916759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insspb", "html_url": "https://github.com/insspb", "followers_url": "https://api.github.com/users/insspb/followers", "following_url": "https://api.github.com/users/insspb/following{/other_user}", "gists_url": "https://api.github.com/users/insspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/insspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insspb/subscriptions", "organizations_url": "https://api.github.com/users/insspb/orgs", "repos_url": "https://api.github.com/users/insspb/repos", "events_url": "https://api.github.com/users/insspb/events{/privacy}", "received_events_url": "https://api.github.com/users/insspb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-27T17:34:26Z", "updated_at": "2019-11-03T05:58:26Z", "closed_at": "2019-08-10T02:00:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Found during one project implementation. \r\nWhen my pytest script used with this client configuration:\r\n```python\r\nzenpy_client = Zenpy(**zendesk_creds, disable_cache=False)\r\n```\r\nI receive `AttributeError` in places where tickets objects with comments_count envolved. \r\nIf I run the same place with `zenpy_client.disable_caching()` launched before ticket collection everything fine. \r\n\r\nHere is pytest report:\r\n```python\r\n2019-06-27 20:20:31,264 DEBUG cache.py get 153 Cache HIT: [Ticket 3600]\r\n\r\ntests/test_functions_data.py:27 (test_get_complete_ticket_data)\r\n@recorder.use_cassette('test_functions_data.json')\r\n    def test_get_complete_ticket_data():\r\n        tickets = get_tickets_search_by_date((year_ago, date_of_test))\r\n        tickets_data = get_complete_ticket_data(tickets)\r\n        assert isinstance(tickets_data, list)\r\n        assert isinstance(tickets_data[0], Ticket)\r\n>       assert tickets_data[0].comment_count > 0\r\nE       AttributeError: 'Ticket' object has no attribute 'comment_count'\r\n```\r\nHere is `get_complete_ticket_data` internal function where tickets objects came from:\r\n\r\n```python\r\ndef get_complete_ticket_data(list_of_tickets):\r\n    \"\"\"\r\n    This function receives list of tickets object without side-loaded user, groups and comments count\r\n    and fetch data with users, groups and comments count included.\r\n\r\n    :param list_of_tickets: `Ticket` objects list\r\n    :return: `Ticket` objects list\r\n    \"\"\"\r\n    tickets = []\r\n    for ids_part in divide_loop([ticket.id for ticket in list_of_tickets]):\r\n        tickets = tickets + list(zenpy_client.tickets(ids=ids_part, include=['users', 'groups', 'comment_count']))\r\n    return tickets\r\n```\r\nSo nothing special in last function.\r\nStill investigating for more details, related to production. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/342", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/342/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/342/events", "html_url": "https://github.com/facetoe/zenpy/issues/342", "id": 460145766, "node_id": "MDU6SXNzdWU0NjAxNDU3NjY=", "number": 342, "title": "Is it possible to get ticket number after creating one?", "user": {"login": "taufique786", "id": 27314277, "node_id": "MDQ6VXNlcjI3MzE0Mjc3", "avatar_url": "https://avatars3.githubusercontent.com/u/27314277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taufique786", "html_url": "https://github.com/taufique786", "followers_url": "https://api.github.com/users/taufique786/followers", "following_url": "https://api.github.com/users/taufique786/following{/other_user}", "gists_url": "https://api.github.com/users/taufique786/gists{/gist_id}", "starred_url": "https://api.github.com/users/taufique786/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taufique786/subscriptions", "organizations_url": "https://api.github.com/users/taufique786/orgs", "repos_url": "https://api.github.com/users/taufique786/repos", "events_url": "https://api.github.com/users/taufique786/events{/privacy}", "received_events_url": "https://api.github.com/users/taufique786/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-24T23:57:38Z", "updated_at": "2019-06-25T07:59:57Z", "closed_at": "2019-06-25T07:59:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am able to create tickets with zendesk using Zenpy but is it possible to get the ticket number right after its creation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/341", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/341/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/341/events", "html_url": "https://github.com/facetoe/zenpy/issues/341", "id": 458195991, "node_id": "MDU6SXNzdWU0NTgxOTU5OTE=", "number": 341, "title": "NameError: name 'Ticket' is not defined", "user": {"login": "trr-RodriguesJD", "id": 25038367, "node_id": "MDQ6VXNlcjI1MDM4MzY3", "avatar_url": "https://avatars1.githubusercontent.com/u/25038367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trr-RodriguesJD", "html_url": "https://github.com/trr-RodriguesJD", "followers_url": "https://api.github.com/users/trr-RodriguesJD/followers", "following_url": "https://api.github.com/users/trr-RodriguesJD/following{/other_user}", "gists_url": "https://api.github.com/users/trr-RodriguesJD/gists{/gist_id}", "starred_url": "https://api.github.com/users/trr-RodriguesJD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trr-RodriguesJD/subscriptions", "organizations_url": "https://api.github.com/users/trr-RodriguesJD/orgs", "repos_url": "https://api.github.com/users/trr-RodriguesJD/repos", "events_url": "https://api.github.com/users/trr-RodriguesJD/events{/privacy}", "received_events_url": "https://api.github.com/users/trr-RodriguesJD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-19T19:48:56Z", "updated_at": "2019-06-20T12:48:56Z", "closed_at": "2019-06-20T12:48:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I keep getting NameError: name 'Ticket' is not defined when running\r\n\r\n`from zenpy import Zenpy\r\n\r\nzenpy_client = Zenpy(oauth_token=\"TOKEN\")\r\n\r\nzenpy_client.tickets.create(Ticket(subject=\"Test\", description=\"Thing\"))\r\n\r\nfor ticket in zenpy_client.search('PC LOAD LETTER', type='ticket', assignee='EMAIL'):\r\n    print(ticket.requester.name)\r\n    print(ticket.to_dict())\r\n    print(ticket.to_json())`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/338", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/338/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/338/events", "html_url": "https://github.com/facetoe/zenpy/issues/338", "id": 452298986, "node_id": "MDU6SXNzdWU0NTIyOTg5ODY=", "number": 338, "title": "Circleci integration", "user": {"login": "insspb", "id": 1916759, "node_id": "MDQ6VXNlcjE5MTY3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1916759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insspb", "html_url": "https://github.com/insspb", "followers_url": "https://api.github.com/users/insspb/followers", "following_url": "https://api.github.com/users/insspb/following{/other_user}", "gists_url": "https://api.github.com/users/insspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/insspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insspb/subscriptions", "organizations_url": "https://api.github.com/users/insspb/orgs", "repos_url": "https://api.github.com/users/insspb/repos", "events_url": "https://api.github.com/users/insspb/events{/privacy}", "received_events_url": "https://api.github.com/users/insspb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-05T03:27:17Z", "updated_at": "2019-06-05T08:41:52Z", "closed_at": "2019-06-05T08:41:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Circleci was integrated in PR #324, but what it gives to the project? \r\nAt this point, I cannot find Circleci badge in docs, or cannot find PR build in Circleci itself. \r\nAll this service is done at this moment is to bring more CI/CD configuration, with no effect. \r\n\r\nSo there can be to solutions and you need to choose one. \r\n1. Update Circleci configuration and integrate it to GitHub on PR as Travis does. But I do not see any benefits, only project complexity. \r\n2. Drop Circleci support. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/336", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/336/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/336/events", "html_url": "https://github.com/facetoe/zenpy/issues/336", "id": 451081543, "node_id": "MDU6SXNzdWU0NTEwODE1NDM=", "number": 336, "title": "Access Denied, Do I Need OAuth? I have Password and API Token", "user": {"login": "zonecodez", "id": 24979648, "node_id": "MDQ6VXNlcjI0OTc5NjQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/24979648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zonecodez", "html_url": "https://github.com/zonecodez", "followers_url": "https://api.github.com/users/zonecodez/followers", "following_url": "https://api.github.com/users/zonecodez/following{/other_user}", "gists_url": "https://api.github.com/users/zonecodez/gists{/gist_id}", "starred_url": "https://api.github.com/users/zonecodez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zonecodez/subscriptions", "organizations_url": "https://api.github.com/users/zonecodez/orgs", "repos_url": "https://api.github.com/users/zonecodez/repos", "events_url": "https://api.github.com/users/zonecodez/events{/privacy}", "received_events_url": "https://api.github.com/users/zonecodez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-01T12:37:13Z", "updated_at": "2019-06-05T13:52:26Z", "closed_at": "2019-06-05T08:37:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run:\r\n\r\n`for ticket in zenpy_Client.search('zenpy', created_between = [yesterday, today], type = 'ticket', minus = 'negated'):\r\n    print(ticket)\r\n`\r\nNothing is returned, no matter how large I make the interval. Then when I run:\r\n\r\n`for user in zenpy_Client.users():\r\n    print(user.name)`\r\n\r\nI receive this error: \"\"Forbidden\", \"message\": \"You do not have access to this page. Please contact the account owner of this help desk for further help.\" \"\r\n\r\nI have entered, username, subdomain, api token and password. Could it be that I need to enter an OAuth token for these types of queries?\r\n\r\nI am not the Admin of the Zendesk account in question, but I am an agent and I have access to the admin to be granted any permissions.\r\n\r\nThank you for this tool.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/335", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/335/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/335/events", "html_url": "https://github.com/facetoe/zenpy/issues/335", "id": 449429828, "node_id": "MDU6SXNzdWU0NDk0Mjk4Mjg=", "number": 335, "title": "zenpy in Python 3", "user": {"login": "ecorcor", "id": 48958113, "node_id": "MDQ6VXNlcjQ4OTU4MTEz", "avatar_url": "https://avatars3.githubusercontent.com/u/48958113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecorcor", "html_url": "https://github.com/ecorcor", "followers_url": "https://api.github.com/users/ecorcor/followers", "following_url": "https://api.github.com/users/ecorcor/following{/other_user}", "gists_url": "https://api.github.com/users/ecorcor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecorcor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecorcor/subscriptions", "organizations_url": "https://api.github.com/users/ecorcor/orgs", "repos_url": "https://api.github.com/users/ecorcor/repos", "events_url": "https://api.github.com/users/ecorcor/events{/privacy}", "received_events_url": "https://api.github.com/users/ecorcor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-28T19:07:29Z", "updated_at": "2019-06-02T10:49:13Z", "closed_at": "2019-06-02T10:49:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "\"Zenpy supports both Python2 and Python3\", however when I import zenpy in Python 3, I get the following error:\r\nModuleNotFoundError: No module named 'zenpy'\r\n\r\nWhen I do the same thing in Python 2.7, I have no problem. I've tried re-running the pip install zenpy command, with no luck. Help would be greatly appreciated. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/334", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/334/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/334/events", "html_url": "https://github.com/facetoe/zenpy/issues/334", "id": 447528846, "node_id": "MDU6SXNzdWU0NDc1Mjg4NDY=", "number": 334, "title": "New search API results limit -> 1000", "user": {"login": "gitlech", "id": 39336665, "node_id": "MDQ6VXNlcjM5MzM2NjY1", "avatar_url": "https://avatars3.githubusercontent.com/u/39336665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gitlech", "html_url": "https://github.com/gitlech", "followers_url": "https://api.github.com/users/gitlech/followers", "following_url": "https://api.github.com/users/gitlech/following{/other_user}", "gists_url": "https://api.github.com/users/gitlech/gists{/gist_id}", "starred_url": "https://api.github.com/users/gitlech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gitlech/subscriptions", "organizations_url": "https://api.github.com/users/gitlech/orgs", "repos_url": "https://api.github.com/users/gitlech/repos", "events_url": "https://api.github.com/users/gitlech/events{/privacy}", "received_events_url": "https://api.github.com/users/gitlech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-23T08:55:58Z", "updated_at": "2019-05-23T11:54:53Z", "closed_at": "2019-05-23T11:54:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Today Zendesk customers received an email from Zendesk stating that the results from querying the search API will be limited to 1.000 starting from 15.10.2019 (today limit is 200.000). I would not expect any impacts on the incremental APIs regarding this change. Can you confirm?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/333", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/333/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/333/events", "html_url": "https://github.com/facetoe/zenpy/issues/333", "id": 445765899, "node_id": "MDU6SXNzdWU0NDU3NjU4OTk=", "number": 333, "title": "Inconsistency issues", "user": {"login": "amitassaraf", "id": 16493770, "node_id": "MDQ6VXNlcjE2NDkzNzcw", "avatar_url": "https://avatars0.githubusercontent.com/u/16493770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amitassaraf", "html_url": "https://github.com/amitassaraf", "followers_url": "https://api.github.com/users/amitassaraf/followers", "following_url": "https://api.github.com/users/amitassaraf/following{/other_user}", "gists_url": "https://api.github.com/users/amitassaraf/gists{/gist_id}", "starred_url": "https://api.github.com/users/amitassaraf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amitassaraf/subscriptions", "organizations_url": "https://api.github.com/users/amitassaraf/orgs", "repos_url": "https://api.github.com/users/amitassaraf/repos", "events_url": "https://api.github.com/users/amitassaraf/events{/privacy}", "received_events_url": "https://api.github.com/users/amitassaraf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-19T00:09:57Z", "updated_at": "2019-05-19T12:27:44Z", "closed_at": "2019-05-19T12:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nI believe this might be coming from a rate limit of some sorts on the Zendesk API, but when running the following query, it sometimes returns results and sometimes doesn't.\r\n\r\n```\r\nopen_tickets = zenpy_client.search(type='ticket', requester_id=int(zendesk_id), status='open')\r\nopen_ticket_queue = deque(open_tickets, maxlen=1)\r\n```\r\n\r\nThe thing is that it is not that I get an exception that I hit the rate limit but I actually just get a response with no tickets and this screws up the logic in my platform. and I am not even sure that this is a rate limit issue, might be something else that causes the inconsistency.\r\n\r\nDo you know how I can solve this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/332", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/332/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/332/events", "html_url": "https://github.com/facetoe/zenpy/issues/332", "id": 445165763, "node_id": "MDU6SXNzdWU0NDUxNjU3NjM=", "number": 332, "title": "Trying to add custom drop down field with spaces", "user": {"login": "rshariff-inter", "id": 20601601, "node_id": "MDQ6VXNlcjIwNjAxNjAx", "avatar_url": "https://avatars0.githubusercontent.com/u/20601601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rshariff-inter", "html_url": "https://github.com/rshariff-inter", "followers_url": "https://api.github.com/users/rshariff-inter/followers", "following_url": "https://api.github.com/users/rshariff-inter/following{/other_user}", "gists_url": "https://api.github.com/users/rshariff-inter/gists{/gist_id}", "starred_url": "https://api.github.com/users/rshariff-inter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rshariff-inter/subscriptions", "organizations_url": "https://api.github.com/users/rshariff-inter/orgs", "repos_url": "https://api.github.com/users/rshariff-inter/repos", "events_url": "https://api.github.com/users/rshariff-inter/events{/privacy}", "received_events_url": "https://api.github.com/users/rshariff-inter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-16T21:21:46Z", "updated_at": "2020-05-25T10:24:16Z", "closed_at": "2019-05-19T12:28:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "i am using the ticket.create.. call to create a ticket that has a custom field which is a drop down.  It works when i put a valid value that doesn't have a space like `City` but  when i attempt to add a valid value with a space like `Center City District` the ticket gets created but the value isn't filled.\r\n```\r\nTicket(subject='subject',\r\n            description='description',\r\n            type='problem',\r\n            priority='normal',\r\n            custom_fields=[CustomField(id=360000103667, value='Center City District')],\r\n            tags=tags,\r\n            ticket_form_id=960228\r\n        )\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/331", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/331/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/331/events", "html_url": "https://github.com/facetoe/zenpy/issues/331", "id": 444439354, "node_id": "MDU6SXNzdWU0NDQ0MzkzNTQ=", "number": 331, "title": "Help Center - You passed an invalid value for the sort_by attribute. The endpoint must specify a locale in order to sort by titles", "user": {"login": "Xerrion", "id": 1850632, "node_id": "MDQ6VXNlcjE4NTA2MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1850632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xerrion", "html_url": "https://github.com/Xerrion", "followers_url": "https://api.github.com/users/Xerrion/followers", "following_url": "https://api.github.com/users/Xerrion/following{/other_user}", "gists_url": "https://api.github.com/users/Xerrion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xerrion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xerrion/subscriptions", "organizations_url": "https://api.github.com/users/Xerrion/orgs", "repos_url": "https://api.github.com/users/Xerrion/repos", "events_url": "https://api.github.com/users/Xerrion/events{/privacy}", "received_events_url": "https://api.github.com/users/Xerrion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-05-15T13:28:21Z", "updated_at": "2019-05-16T12:26:14Z", "closed_at": "2019-05-16T09:57:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to copy one Help Center to another. It works just fine until I hit a specific article.\r\nI first create all the categories and then the sections inside those, and then the articles contained in the old instance in the sections.\r\n\r\nMy code is as following\r\n\r\n```\r\ndef copy_help_center():\r\n    # Create New Categories\r\n    categories = old_client.help_center.categories()\r\n    for category in categories:\r\n        new_category = new_client.help_center.categories.create(\r\n            Category(\r\n                name=category.name,\r\n                description=category.description,\r\n                locale=\"en-us\",\r\n                created_at=category.created_at,\r\n                updated_at=category.updated_at,\r\n            )\r\n        )\r\n\r\n        # Create New Sections in Categories\r\n        sections = old_client.help_center.categories.sections(category_id=category.id)\r\n        for section in sections:\r\n            new_section = new_client.help_center.sections.create(\r\n                Section(\r\n                    name=section.name,\r\n                    category_id=new_category.id,\r\n                    description=category.description,\r\n                    locale=\"en-us\",\r\n                    created_at=section.created_at,\r\n                    updated_at=section.updated_at,\r\n                )\r\n            )\r\n\r\n            # Create New Articles in Sections\r\n            articles = old_client.help_center.sections.articles(section=section)\r\n            for article in articles:\r\n                new_article = new_client.help_center.articles.create(\r\n                    section=new_section.id,\r\n                    article=Article(\r\n                        name=article.name,\r\n                        body=article.body,\r\n                        locale=\"en-us\",\r\n                        title=article.title,\r\n                        section_id=new_section.id,\r\n                        created_at=article.created_at,\r\n                        updated_at=article.updated_at,\r\n                    ),\r\n                )\r\n                print(new_article.to_dict(serialize=True))\r\n```\r\n\r\nTraceback from stdout:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/xerrion/projects/import-eurekos-file/import_try_2.py\", line 236, in <module>\r\n    copy_help_center()\r\n  File \"/home/xerrion/projects/import-eurekos-file/import_try_2.py\", line 216, in copy_help_center\r\n    articles = old_client.help_center.sections.articles(section=section)\r\n  File \"/home/xerrion/projects/envs/import-eurekos-file/lib/python3.6/site-packages/zenpy/lib/util.py\", line 110, in inner\r\n    return func(*new_args, **new_kwargs)\r\n  File \"/home/xerrion/projects/envs/import-eurekos-file/lib/python3.6/site-packages/zenpy/lib/api.py\", line 1815, in articles\r\n    return self._query_zendesk(self.endpoint.articles, 'article', id=section)\r\n  File \"/home/xerrion/projects/envs/import-eurekos-file/lib/python3.6/site-packages/zenpy/lib/api.py\", line 257, in _query_zendesk\r\n    return self._get(url=self._build_url(endpoint(*endpoint_args, **endpoint_kwargs)))\r\n  File \"/home/xerrion/projects/envs/import-eurekos-file/lib/python3.6/site-packages/zenpy/lib/api.py\", line 112, in _get\r\n    response = self._call_api(self.session.get, url, timeout=self.timeout, **kwargs)\r\n  File \"/home/xerrion/projects/envs/import-eurekos-file/lib/python3.6/site-packages/zenpy/lib/api.py\", line 149, in _call_api\r\n    self._check_response(response)\r\n  File \"/home/xerrion/projects/envs/import-eurekos-file/lib/python3.6/site-packages/zenpy/lib/api.py\", line 288, in _check_response\r\n    raise APIException(json.dumps(_json), response=response)\r\nzenpy.lib.exception.APIException: {\"error\": {\"title\": \"Invalid attribute\", \"message\": \"You passed an invalid value for the sort_by attribute. The endpoint must specify a locale in order to sort by titles\"}}\r\n```\r\nA debug log with Zenpy messages are attached\r\n\r\n[my-2019-05-15.log](https://github.com/facetoe/zenpy/files/3182687/my-2019-05-15.log)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/330", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/330/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/330/events", "html_url": "https://github.com/facetoe/zenpy/issues/330", "id": 442214680, "node_id": "MDU6SXNzdWU0NDIyMTQ2ODA=", "number": 330, "title": "Ticket object unexpected serialization behaviour.", "user": {"login": "Prodeguerriero", "id": 15149858, "node_id": "MDQ6VXNlcjE1MTQ5ODU4", "avatar_url": "https://avatars1.githubusercontent.com/u/15149858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Prodeguerriero", "html_url": "https://github.com/Prodeguerriero", "followers_url": "https://api.github.com/users/Prodeguerriero/followers", "following_url": "https://api.github.com/users/Prodeguerriero/following{/other_user}", "gists_url": "https://api.github.com/users/Prodeguerriero/gists{/gist_id}", "starred_url": "https://api.github.com/users/Prodeguerriero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Prodeguerriero/subscriptions", "organizations_url": "https://api.github.com/users/Prodeguerriero/orgs", "repos_url": "https://api.github.com/users/Prodeguerriero/repos", "events_url": "https://api.github.com/users/Prodeguerriero/events{/privacy}", "received_events_url": "https://api.github.com/users/Prodeguerriero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-09T12:37:30Z", "updated_at": "2019-07-03T13:27:41Z", "closed_at": "2019-05-19T09:03:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nHere is what I am trying to achieve: add and remove tags which control values inside custom dropdown fields.\r\n\r\nLet's take this code snippet:\r\n```\r\nticket = zenpy_client.tickets(id=291990)\r\nticket.tags.append(\"test_apple\")\r\nticket.tags.remove('test_cake')\r\nzenpy_client.tickets.update(ticket)\r\n```\r\nThe ticket is updated, and the tags update as well.\r\n\r\nIf I add an iteration among the custom fields, though, things stop working.\r\n```\r\nticket = zenpy_client.tickets(id=291990)\r\nticket.tags.append(\"test_apple\")\r\nticket.tags.remove('test_cake')\r\nfor field in ticket.custom_fields:\r\n  pass\r\nzenpy_client.tickets.update(ticket)\r\n```\r\nRunning the above snippet, adding tags still works, while removing them doesn't seem to.\r\n\r\nFor fun, I checked what the serialization looks like.\r\n```\r\nticket = zenpy_client.tickets(id=291990)\r\nticket.tags.append(\"test_apple\")\r\nticket.tags.remove('fp2_refurb_april_19')\r\nprint(ticket.to_dict(serialize=True))\r\nfor field in ticket.custom_fields:\r\n  pass\r\nprint(ticket.to_dict(serialize=True))\r\nzenpy_client.tickets.update(ticket)\r\n```\r\nThe print statement **before** the iteration returns only `id` and `tags`\r\n```\r\n{'id': 291990, 'tags': ['about_product', [...]\r\n```\r\nwhile the one **after** the iteration also includes all the custom fields.\r\n```\r\n{'custom_fields': [{'id': 25279383, 'value': None}, [...]\r\n```\r\nMy deduction at this point is that having the fields serialized and pushed as an update is somehow overriding the tag removal.\r\n\r\nI assume the iteration is not supposed to add the fields as something that needs an update, but maybe it is a behaviour that cannot be avoided.\r\n\r\nI can find a workaround to this (push the tag update separately using `zenpy_client.tickets.set_tags()`) but I thought it worth sharing with you.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/328", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/328/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/328/events", "html_url": "https://github.com/facetoe/zenpy/issues/328", "id": 438653713, "node_id": "MDU6SXNzdWU0Mzg2NTM3MTM=", "number": 328, "title": "Search query excluding multiple tags", "user": {"login": "Prodeguerriero", "id": 15149858, "node_id": "MDQ6VXNlcjE1MTQ5ODU4", "avatar_url": "https://avatars1.githubusercontent.com/u/15149858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Prodeguerriero", "html_url": "https://github.com/Prodeguerriero", "followers_url": "https://api.github.com/users/Prodeguerriero/followers", "following_url": "https://api.github.com/users/Prodeguerriero/following{/other_user}", "gists_url": "https://api.github.com/users/Prodeguerriero/gists{/gist_id}", "starred_url": "https://api.github.com/users/Prodeguerriero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Prodeguerriero/subscriptions", "organizations_url": "https://api.github.com/users/Prodeguerriero/orgs", "repos_url": "https://api.github.com/users/Prodeguerriero/repos", "events_url": "https://api.github.com/users/Prodeguerriero/events{/privacy}", "received_events_url": "https://api.github.com/users/Prodeguerriero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-30T08:16:55Z", "updated_at": "2019-04-30T12:21:06Z", "closed_at": "2019-04-30T12:18:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nMore of a question than an issue, to be honest.\r\n\r\nLet's say I have the following tags:\r\n* good_tag\r\n* bad_tag_01\r\n* bad_tag_02\r\n\r\nIf I wanted to search for tickets that are *not closed* and have `good_tag`, while excluding tickets with either one of the two bad tags, I would write the following in the Zendesk search bar:\r\n- `status<closed tags:good_tag -tags:bad_tag_01 -tags:bad_tag_02`\r\n\r\nTo obtain the same search result with Zenpy, I would write\r\n```\r\nsearch_result = zenpy_client.search(\r\nstatus_less_than='Closed', tags='good_tag', minus=['tags:bad_tag_01', 'tags:bad_tag_02']\r\n)\r\n```\r\n\r\nWhile this works fine when hard-coding the search query, it becomes a bit trickier when wanting to exclude a list of tags that might change over time (let's say that the tags are sourced from a file into a set or a list, for example).\r\nAny suggestion on how to achieve this? Maybe I am looking at this the wrong way. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/327", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/327/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/327/events", "html_url": "https://github.com/facetoe/zenpy/issues/327", "id": 438383185, "node_id": "MDU6SXNzdWU0MzgzODMxODU=", "number": 327, "title": "Search with parameter commenter not working", "user": {"login": "elianmarks", "id": 27471186, "node_id": "MDQ6VXNlcjI3NDcxMTg2", "avatar_url": "https://avatars0.githubusercontent.com/u/27471186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elianmarks", "html_url": "https://github.com/elianmarks", "followers_url": "https://api.github.com/users/elianmarks/followers", "following_url": "https://api.github.com/users/elianmarks/following{/other_user}", "gists_url": "https://api.github.com/users/elianmarks/gists{/gist_id}", "starred_url": "https://api.github.com/users/elianmarks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elianmarks/subscriptions", "organizations_url": "https://api.github.com/users/elianmarks/orgs", "repos_url": "https://api.github.com/users/elianmarks/repos", "events_url": "https://api.github.com/users/elianmarks/events{/privacy}", "received_events_url": "https://api.github.com/users/elianmarks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-29T15:45:54Z", "updated_at": "2019-06-02T10:49:33Z", "closed_at": "2019-06-02T10:49:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm doing a search using the commenter parameter, but in the else of endpoint.py, the following quotation marks are inserted:\r\nLine 258:\r\n`\r\nrenamed_kwargs.update ({key + ':': '\"% s\"'% value})\r\n`\r\n\r\nThis way the URL is generated in this format:\r\nURL: https://XXXXXX.zendesk.com/api/v2/search.json?query=commenter:\"XXXXXXX\"\r\n\r\nUsing this URL Zendesk does not return any information to me, so I inserted a new elif into the __call__ function of the SearchEndpoint class with the following code:\r\n`\r\nelif key == 'commenter':\r\n       renamed_kwargs.update ({key + ':': '%s' % value})\r\n`\r\n\r\nRemoving the quotation marks from the search URL, Zendesk worked as expected.\r\n\r\nHugs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/326", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/326/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/326/events", "html_url": "https://github.com/facetoe/zenpy/issues/326", "id": 437263030, "node_id": "MDU6SXNzdWU0MzcyNjMwMzA=", "number": 326, "title": "Able to export articles and posts in incremental export ?", "user": {"login": "sdavos", "id": 38280946, "node_id": "MDQ6VXNlcjM4MjgwOTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38280946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdavos", "html_url": "https://github.com/sdavos", "followers_url": "https://api.github.com/users/sdavos/followers", "following_url": "https://api.github.com/users/sdavos/following{/other_user}", "gists_url": "https://api.github.com/users/sdavos/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdavos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdavos/subscriptions", "organizations_url": "https://api.github.com/users/sdavos/orgs", "repos_url": "https://api.github.com/users/sdavos/repos", "events_url": "https://api.github.com/users/sdavos/events{/privacy}", "received_events_url": "https://api.github.com/users/sdavos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960236, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzY=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-25T15:29:17Z", "updated_at": "2019-04-28T05:36:23Z", "closed_at": "2019-04-28T05:35:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to export articles and posts in incremental export ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/325", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/325/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/325/events", "html_url": "https://github.com/facetoe/zenpy/issues/325", "id": 436603415, "node_id": "MDU6SXNzdWU0MzY2MDM0MTU=", "number": 325, "title": "Null values for new ticket", "user": {"login": "ypperlig", "id": 4660715, "node_id": "MDQ6VXNlcjQ2NjA3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4660715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ypperlig", "html_url": "https://github.com/ypperlig", "followers_url": "https://api.github.com/users/ypperlig/followers", "following_url": "https://api.github.com/users/ypperlig/following{/other_user}", "gists_url": "https://api.github.com/users/ypperlig/gists{/gist_id}", "starred_url": "https://api.github.com/users/ypperlig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ypperlig/subscriptions", "organizations_url": "https://api.github.com/users/ypperlig/orgs", "repos_url": "https://api.github.com/users/ypperlig/repos", "events_url": "https://api.github.com/users/ypperlig/events{/privacy}", "received_events_url": "https://api.github.com/users/ypperlig/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-24T09:55:25Z", "updated_at": "2019-04-25T11:51:15Z", "closed_at": "2019-04-25T03:42:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When creating a ticket object and dumping to JSON all keys are included despite value being `None`. Description field is not mandatory, and in case of e.g a ticket import with comments description field should not be included because first comment will be used as description. If a description is provided the first comment will be double-up.\r\n\r\nReproducable with:\r\n```python\r\nimport json\r\nfrom zenpy.lib.api_objects import Ticket\r\n\r\ndef convert_ticket_to_dict(obj):\r\n    return obj.to_dict()\r\n\r\ntest = Ticket(\r\n    subject=\"Test\",\r\n    comments=[]\r\n)\r\n\r\nwith open(\"test.json\", \"w\") as f:\r\n    json.dump(test, f, indent=4, default=convert_ticket_to_dict)\r\n```\r\n\r\nOutput:\r\n```\r\n{\r\n    \"assignee_id\": null,\r\n    \"brand_id\": null,\r\n    \"collaborator_ids\": null,\r\n    \"created_at\": null,\r\n    \"custom_fields\": null,\r\n    \"description\": null,\r\n    \"due_at\": null,\r\n    \"external_id\": null,\r\n    \"fields\": null,\r\n    \"forum_topic_id\": null,\r\n    \"group_id\": null,\r\n    \"has_incidents\": null,\r\n    \"id\": null,\r\n    \"organization_id\": null,\r\n    \"priority\": null,\r\n    \"problem_id\": null,\r\n    \"raw_subject\": null,\r\n    \"recipient\": null,\r\n    \"requester_id\": null,\r\n    \"satisfaction_rating\": null,\r\n    \"sharing_agreement_ids\": null,\r\n    \"status\": null,\r\n    \"subject\": \"Test\",\r\n    \"submitter_id\": null,\r\n    \"tags\": null,\r\n    \"type\": null,\r\n    \"updated_at\": null,\r\n    \"url\": null,\r\n    \"via\": null,\r\n    \"comments\": []\r\n}\r\n```\r\n\r\nWould you be open to remove null values from new tickets, or is it more ideal to filter out these values in a custom filter? I am working around this issue for ticket import specifically by just popping the description key, so it's not a major issue.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/323", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/323/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/323/events", "html_url": "https://github.com/facetoe/zenpy/issues/323", "id": 434356559, "node_id": "MDU6SXNzdWU0MzQzNTY1NTk=", "number": 323, "title": "show all identities", "user": {"login": "APWK", "id": 49726248, "node_id": "MDQ6VXNlcjQ5NzI2MjQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/49726248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/APWK", "html_url": "https://github.com/APWK", "followers_url": "https://api.github.com/users/APWK/followers", "following_url": "https://api.github.com/users/APWK/following{/other_user}", "gists_url": "https://api.github.com/users/APWK/gists{/gist_id}", "starred_url": "https://api.github.com/users/APWK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/APWK/subscriptions", "organizations_url": "https://api.github.com/users/APWK/orgs", "repos_url": "https://api.github.com/users/APWK/repos", "events_url": "https://api.github.com/users/APWK/events{/privacy}", "received_events_url": "https://api.github.com/users/APWK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-17T15:47:08Z", "updated_at": "2019-04-18T07:15:37Z", "closed_at": "2019-04-18T07:15:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to show all identities for all users similar to this one:\r\norganizations = zenpy_client.organizations()\r\nusers = zenpy_client.users()\r\n\r\nThis does not work:\r\nidentities = zenpy_client.users.identities.show()\r\nidentities = zenpy_client.users.identities()\r\nas it require arguments.\r\n\r\nAs I have to compare databases with each other I must know all email addresses of a user. Hence, I would have created a identity dictionary and pull the email addresses from there for each user. This would avoid an API request for every single user. \r\n\r\nCurrent code snippet:\r\nusers = zenpy_client.users() # get users\r\nfor user in users:\r\n        # API users request delivers only primary email \r\n        # all other emails can be found via identity\r\n        # identities have own id \r\n        for identity in zenpy_client.users.identities(id=user.id): \r\n              print(identity.value)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/319", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/319/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/319/events", "html_url": "https://github.com/facetoe/zenpy/issues/319", "id": 426644502, "node_id": "MDU6SXNzdWU0MjY2NDQ1MDI=", "number": 319, "title": "Error on zenpy_client.ticket_import()", "user": {"login": "zenahirsch", "id": 1669447, "node_id": "MDQ6VXNlcjE2Njk0NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1669447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zenahirsch", "html_url": "https://github.com/zenahirsch", "followers_url": "https://api.github.com/users/zenahirsch/followers", "following_url": "https://api.github.com/users/zenahirsch/following{/other_user}", "gists_url": "https://api.github.com/users/zenahirsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/zenahirsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zenahirsch/subscriptions", "organizations_url": "https://api.github.com/users/zenahirsch/orgs", "repos_url": "https://api.github.com/users/zenahirsch/repos", "events_url": "https://api.github.com/users/zenahirsch/events{/privacy}", "received_events_url": "https://api.github.com/users/zenahirsch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-28T18:25:21Z", "updated_at": "2019-04-28T05:37:54Z", "closed_at": "2019-04-28T05:37:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am passing a list of Ticket objects to [`zenpy_client.ticket_import()`](http://docs.facetoe.com.au/zenpy.html#ticket_import), like so:\r\n\r\n```python\r\nprint(tickets)\r\nprint('==> Importing %d tickets' % len(tickets))\r\nresult = zenpy_client.ticket_import(tickets)\r\n```\r\n\r\n`tickets` prints as a list of as-of-yet uncreated Tickets:\r\n\r\n```python\r\n[Ticket(id=None), Ticket(id=None), Ticket(id=None), Ticket(id=None), Ticket(id=None), Ticket(id=None), Ticket(id=None), Ticket(id=None), Ticket(id=None), Ticket(id=None)]\r\n```\r\n\r\nHowever, I get the following error:\r\n\r\n```\r\nzenpy.lib.exception.ZenpyException: You must pass ticket objects to this endpoint!\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/318", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/318/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/318/events", "html_url": "https://github.com/facetoe/zenpy/issues/318", "id": 425498392, "node_id": "MDU6SXNzdWU0MjU0OTgzOTI=", "number": 318, "title": "Follow-up to issue #28 for ticket metrics", "user": {"login": "ecorcor", "id": 48958113, "node_id": "MDQ6VXNlcjQ4OTU4MTEz", "avatar_url": "https://avatars3.githubusercontent.com/u/48958113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecorcor", "html_url": "https://github.com/ecorcor", "followers_url": "https://api.github.com/users/ecorcor/followers", "following_url": "https://api.github.com/users/ecorcor/following{/other_user}", "gists_url": "https://api.github.com/users/ecorcor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecorcor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecorcor/subscriptions", "organizations_url": "https://api.github.com/users/ecorcor/orgs", "repos_url": "https://api.github.com/users/ecorcor/repos", "events_url": "https://api.github.com/users/ecorcor/events{/privacy}", "received_events_url": "https://api.github.com/users/ecorcor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-26T15:45:39Z", "updated_at": "2019-03-27T06:23:46Z", "closed_at": "2019-03-27T06:23:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI'm getting an error when using the solution provided from a [previous post.](https://github.com/facetoe/zenpy/issues/28) \r\n\r\nI'm able to pull basic ticket fields as described at the start of the issue: \r\nticket = zenpyClient.tickets(id=544015)\r\nprint(ticket.subject)\r\nprint(ticket.status)\r\nprint(ticket.organization.name)\r\n\r\nHowever, when I attempt to pull the metrics field for a particular ticket (the exact solution provided in this issue), I get an error indicating that metrics cannot take \"Ticket_id\" as an argument. \r\nExample: \r\nzenpyClient.tickets.metrics(ticket_id=544015),\r\nI get the following error:\r\nmetrics() got an unexpected keyword argument 'ticket_id'\r\n\r\nI'm also able to call zenpyClient.ticket_metrics(ticket_id=544015), however as expected from the solution provided in issue #28, this is ignoring the \"ticket_id\" argument and that it is getting all metrics for all tickets. \r\n\r\nPlease advise, thanks in advance.\r\n\r\nEmilie \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/317", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/317/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/317/events", "html_url": "https://github.com/facetoe/zenpy/issues/317", "id": 424880907, "node_id": "MDU6SXNzdWU0MjQ4ODA5MDc=", "number": 317, "title": "Sla loading", "user": {"login": "bstjepanovic1", "id": 2621902, "node_id": "MDQ6VXNlcjI2MjE5MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2621902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstjepanovic1", "html_url": "https://github.com/bstjepanovic1", "followers_url": "https://api.github.com/users/bstjepanovic1/followers", "following_url": "https://api.github.com/users/bstjepanovic1/following{/other_user}", "gists_url": "https://api.github.com/users/bstjepanovic1/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstjepanovic1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstjepanovic1/subscriptions", "organizations_url": "https://api.github.com/users/bstjepanovic1/orgs", "repos_url": "https://api.github.com/users/bstjepanovic1/repos", "events_url": "https://api.github.com/users/bstjepanovic1/events{/privacy}", "received_events_url": "https://api.github.com/users/bstjepanovic1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-25T12:41:22Z", "updated_at": "2019-03-27T15:31:57Z", "closed_at": "2019-03-27T10:01:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I load slas? In Zendesk documentation it is stated that single ticket supports side-loading of slas. Is this supported in zenpy and if not is there other way to load slas for specific ticket? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/316", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/316/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/316/events", "html_url": "https://github.com/facetoe/zenpy/issues/316", "id": 424431218, "node_id": "MDU6SXNzdWU0MjQ0MzEyMTg=", "number": 316, "title": "To check: Organization query returns list, not generator", "user": {"login": "insspb", "id": 1916759, "node_id": "MDQ6VXNlcjE5MTY3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1916759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insspb", "html_url": "https://github.com/insspb", "followers_url": "https://api.github.com/users/insspb/followers", "following_url": "https://api.github.com/users/insspb/following{/other_user}", "gists_url": "https://api.github.com/users/insspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/insspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insspb/subscriptions", "organizations_url": "https://api.github.com/users/insspb/orgs", "repos_url": "https://api.github.com/users/insspb/repos", "events_url": "https://api.github.com/users/insspb/events{/privacy}", "received_events_url": "https://api.github.com/users/insspb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-22T23:13:54Z", "updated_at": "2019-03-26T12:03:41Z", "closed_at": "2019-03-24T08:23:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "During my preparations I found that:\r\n```python\r\nzenpy_client.organizations(ids=[tuple with 1 id])\r\n```\r\nreturn type is list, not zenpy generator. Strange. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/315", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/315/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/315/events", "html_url": "https://github.com/facetoe/zenpy/issues/315", "id": 424259276, "node_id": "MDU6SXNzdWU0MjQyNTkyNzY=", "number": 315, "title": "Problem iterating through SearchResultGenerator in batches", "user": {"login": "zenahirsch", "id": 1669447, "node_id": "MDQ6VXNlcjE2Njk0NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1669447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zenahirsch", "html_url": "https://github.com/zenahirsch", "followers_url": "https://api.github.com/users/zenahirsch/followers", "following_url": "https://api.github.com/users/zenahirsch/following{/other_user}", "gists_url": "https://api.github.com/users/zenahirsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/zenahirsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zenahirsch/subscriptions", "organizations_url": "https://api.github.com/users/zenahirsch/orgs", "repos_url": "https://api.github.com/users/zenahirsch/repos", "events_url": "https://api.github.com/users/zenahirsch/events{/privacy}", "received_events_url": "https://api.github.com/users/zenahirsch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-22T15:13:52Z", "updated_at": "2019-04-21T12:28:29Z", "closed_at": "2019-03-24T08:47:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am retrieving a large number of user objects from search, like so:\r\n\r\n```python\r\nusers = zenpy_client.search(type='user', tags=DELETE_WITH_TAG)\r\n```\r\n\r\nI want to delete all of these users, so I attempt to use the bulk delete method:\r\n\r\n```python\r\nstart = 0\r\nstop = 100\r\nnum_batches = math.ceil(len(users) / 100)\r\n\r\nfor _ in range(0, num_batches):\r\n    job_status = zenpy_client.users.delete(users[start:stop])\r\n    print(job_status)\r\n    start += 100\r\n    stop += 100\r\n```\r\n\r\nThe first iteration is successful, but subsequent ones result in:\r\n\r\n```\r\nNotImplementedError: the current slice implementation does not support multiple accesses!\r\n```\r\n\r\nIs there a way I can work around this, so I can iterate through the SearchResultGenerator and delete the users in batches?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/313", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/313/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/313/events", "html_url": "https://github.com/facetoe/zenpy/issues/313", "id": 420971300, "node_id": "MDU6SXNzdWU0MjA5NzEzMDA=", "number": 313, "title": "Output of a ticket_field.to_dict() doesn't serialize to dict nested resource 'CustomFieldOption'", "user": {"login": "miguelgr", "id": 1484589, "node_id": "MDQ6VXNlcjE0ODQ1ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1484589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelgr", "html_url": "https://github.com/miguelgr", "followers_url": "https://api.github.com/users/miguelgr/followers", "following_url": "https://api.github.com/users/miguelgr/following{/other_user}", "gists_url": "https://api.github.com/users/miguelgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelgr/subscriptions", "organizations_url": "https://api.github.com/users/miguelgr/orgs", "repos_url": "https://api.github.com/users/miguelgr/repos", "events_url": "https://api.github.com/users/miguelgr/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-14T11:41:34Z", "updated_at": "2019-03-26T11:55:50Z", "closed_at": "2019-03-14T17:54:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have an issue using the `TicketFieldApi` when casting `to_dict()` a ticket field as the nested resources `CustomFieldOption` are not casted to dict as well.\r\n\r\nI've seen the issue is similar/the same to https://github.com/facetoe/zenpy/issues/284 but doing\r\n`json.loads(ticket_field.to_dict())` doesn't seem very pythonic.\r\n\r\nHere is an example (simplified) of the problem:\r\n\r\n```\r\n>>> ticket_field.to_dict()\r\n{'active': True, 'collapsed_for_agents': False, 'created_at': '2017-02-06T18:15:31Z', 'description': '', 'editable_in_portal': False, 'id': 3853, 'title': 'Agente', \r\n 'custom_field_options': [CustomFieldOption(id=3929), CustomFieldOption(id=40249), CustomFieldOption(id=38005)]}\r\n```\r\n\r\nThanks in advance for all the effort.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/311", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/311/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/311/events", "html_url": "https://github.com/facetoe/zenpy/issues/311", "id": 419934593, "node_id": "MDU6SXNzdWU0MTk5MzQ1OTM=", "number": 311, "title": "Importing zenpy.__version__ on setup.py causes installation errors", "user": {"login": "fmartingr", "id": 812088, "node_id": "MDQ6VXNlcjgxMjA4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/812088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmartingr", "html_url": "https://github.com/fmartingr", "followers_url": "https://api.github.com/users/fmartingr/followers", "following_url": "https://api.github.com/users/fmartingr/following{/other_user}", "gists_url": "https://api.github.com/users/fmartingr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmartingr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmartingr/subscriptions", "organizations_url": "https://api.github.com/users/fmartingr/orgs", "repos_url": "https://api.github.com/users/fmartingr/repos", "events_url": "https://api.github.com/users/fmartingr/events{/privacy}", "received_events_url": "https://api.github.com/users/fmartingr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-03-12T11:26:10Z", "updated_at": "2019-03-26T11:56:08Z", "closed_at": "2019-03-12T12:09:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Having zenpy imported on the setup.py tries to import all the references modules whitin it, failing because they are not yet installed.\r\n\r\nThe failing line: https://github.com/facetoe/zenpy/blob/ea29362a85e776f51e438c8bcc37c622f3136fc1/setup.py#L3\r\n\r\nCommit: https://github.com/facetoe/zenpy/pull/303/commits/fdae24b9aa45000afec1f3368e4bc39db05837be\r\n\r\n``` \r\n\u279c docker run -it --rm python:3 bash\r\nroot@adeca9e9e3c5:/# pip install zenpy==2.0.9\r\nCollecting zenpy==2.0.9\r\n  Downloading https://files.pythonhosted.org/packages/7c/28/176f813940586e4b90cd1771b1474c2516fdccc6b706dad73483c8070de2/zenpy-2.0.9.tar.gz (65kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 71kB 720kB/s\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-nanrf1j_/zenpy/setup.py\", line 3, in <module>\r\n        from zenpy import __version__\r\n      File \"/tmp/pip-install-nanrf1j_/zenpy/zenpy/__init__.py\", line 2, in <module>\r\n        import requests\r\n    ModuleNotFoundError: No module named 'requests'\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-nanrf1j_/zenpy/\r\n```\r\n\r\nIf you give me directions on how do you want his handled I can make a PR myself.\r\n\r\nBut the critical thing is that right now the 2.0.9 minor version is broken on pypi.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/309", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/309/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/309/events", "html_url": "https://github.com/facetoe/zenpy/issues/309", "id": 417841996, "node_id": "MDU6SXNzdWU0MTc4NDE5OTY=", "number": 309, "title": "todo: Add Associate Attachments in Bulk to Helpdesk Article endpoint", "user": {"login": "insspb", "id": 1916759, "node_id": "MDQ6VXNlcjE5MTY3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1916759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insspb", "html_url": "https://github.com/insspb", "followers_url": "https://api.github.com/users/insspb/followers", "following_url": "https://api.github.com/users/insspb/following{/other_user}", "gists_url": "https://api.github.com/users/insspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/insspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insspb/subscriptions", "organizations_url": "https://api.github.com/users/insspb/orgs", "repos_url": "https://api.github.com/users/insspb/repos", "events_url": "https://api.github.com/users/insspb/events{/privacy}", "received_events_url": "https://api.github.com/users/insspb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960236, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzY=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-06T14:50:04Z", "updated_at": "2019-03-11T05:36:54Z", "closed_at": "2019-03-11T02:24:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/306", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/306/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/306/events", "html_url": "https://github.com/facetoe/zenpy/issues/306", "id": 416366982, "node_id": "MDU6SXNzdWU0MTYzNjY5ODI=", "number": 306, "title": "Strange error on zenpy_client.help_center.attachments.create_unassociated", "user": {"login": "insspb", "id": 1916759, "node_id": "MDQ6VXNlcjE5MTY3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1916759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insspb", "html_url": "https://github.com/insspb", "followers_url": "https://api.github.com/users/insspb/followers", "following_url": "https://api.github.com/users/insspb/following{/other_user}", "gists_url": "https://api.github.com/users/insspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/insspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insspb/subscriptions", "organizations_url": "https://api.github.com/users/insspb/orgs", "repos_url": "https://api.github.com/users/insspb/repos", "events_url": "https://api.github.com/users/insspb/events{/privacy}", "received_events_url": "https://api.github.com/users/insspb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-02T06:53:11Z", "updated_at": "2019-03-11T05:36:34Z", "closed_at": "2019-03-08T22:33:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`question = 'img/16926695267.png'` - path to image\r\n```python\r\nIn[2]: from functions.auth import zenpy_client\r\nIn[3]: question = 'img/16926695267.png'\r\nIn[4]: zenpy_client.help_center.attachments.create_unassociated(question, inline=True)\r\nDEBUG - POST: https://hidden.zendesk.com/api/v2/help_center/articles/attachments.json - {'json': {}, 'timeout': 60.0, 'headers': None, 'files': {'inline': (None, True), 'file': <_io.BufferedReader name='img/16926695267.png'>}}\r\nTraceback (most recent call last):\r\n  File \"/venv/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 3267, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-4-be8053c1d689>\", line 1, in <module>\r\n    zenpy_client.help_center.attachments.create_unassociated(question, inline=True)\r\n  File \"/venv/src/zenpy/zenpy/lib/api.py\", line 1874, in create_unassociated\r\n    inline=inline)\r\n  File \"/venv/src/zenpy/zenpy/lib/request.py\", line 523, in post\r\n    return self.api._post(url, payload={}, files=dict(inline=(None, inline), file=file))\r\n  File \"/venv/src/zenpy/zenpy/lib/api.py\", line 100, in _post\r\n    **kwargs)\r\n  File \"/venv/src/zenpy/zenpy/lib/api.py\", line 133, in _call_api\r\n    response = http_method(url, **kwargs)\r\n  File \"/venv/lib/python3.6/site-packages/requests/sessions.py\", line 565, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/venv/lib/python3.6/site-packages/requests/sessions.py\", line 504, in request\r\n    prep = self.prepare_request(req)\r\n  File \"/venv/lib/python3.6/site-packages/requests/sessions.py\", line 436, in prepare_request\r\n    hooks=merge_hooks(request.hooks, self.hooks),\r\n  File \"/venv/lib/python3.6/site-packages/requests/models.py\", line 305, in prepare\r\n    self.prepare_body(data, files, json)\r\n  File \"/venv/lib/python3.6/site-packages/requests/models.py\", line 499, in prepare_body\r\n    (body, content_type) = self._encode_files(files, data)\r\n  File \"/venv/lib/python3.6/site-packages/requests/models.py\", line 158, in _encode_files\r\n    fdata = fp.read()\r\nAttributeError: 'bool' object has no attribute 'read'\r\n```\r\n\r\nUnder investigation now. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/305", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/305/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/305/events", "html_url": "https://github.com/facetoe/zenpy/issues/305", "id": 415016786, "node_id": "MDU6SXNzdWU0MTUwMTY3ODY=", "number": 305, "title": "TODO: Helpcenter, article creation locale endpoint", "user": {"login": "insspb", "id": 1916759, "node_id": "MDQ6VXNlcjE5MTY3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1916759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insspb", "html_url": "https://github.com/insspb", "followers_url": "https://api.github.com/users/insspb/followers", "following_url": "https://api.github.com/users/insspb/following{/other_user}", "gists_url": "https://api.github.com/users/insspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/insspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insspb/subscriptions", "organizations_url": "https://api.github.com/users/insspb/orgs", "repos_url": "https://api.github.com/users/insspb/repos", "events_url": "https://api.github.com/users/insspb/events{/privacy}", "received_events_url": "https://api.github.com/users/insspb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-27T09:08:58Z", "updated_at": "2019-02-27T10:52:36Z", "closed_at": "2019-02-27T10:52:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://developer.zendesk.com/rest_api/docs/help_center/articles#create-article", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/300", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/300/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/300/events", "html_url": "https://github.com/facetoe/zenpy/issues/300", "id": 413615192, "node_id": "MDU6SXNzdWU0MTM2MTUxOTI=", "number": 300, "title": "Destroy endpoint missed for tickets", "user": {"login": "insspb", "id": 1916759, "node_id": "MDQ6VXNlcjE5MTY3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1916759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insspb", "html_url": "https://github.com/insspb", "followers_url": "https://api.github.com/users/insspb/followers", "following_url": "https://api.github.com/users/insspb/following{/other_user}", "gists_url": "https://api.github.com/users/insspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/insspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insspb/subscriptions", "organizations_url": "https://api.github.com/users/insspb/orgs", "repos_url": "https://api.github.com/users/insspb/repos", "events_url": "https://api.github.com/users/insspb/events{/privacy}", "received_events_url": "https://api.github.com/users/insspb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960236, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzY=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-22T23:12:34Z", "updated_at": "2019-02-25T12:10:42Z", "closed_at": "2019-02-25T12:10:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "API softly delete them", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/299", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/299/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/299/events", "html_url": "https://github.com/facetoe/zenpy/issues/299", "id": 413528297, "node_id": "MDU6SXNzdWU0MTM1MjgyOTc=", "number": 299, "title": "Ticket reopens", "user": {"login": "ztweed", "id": 11160344, "node_id": "MDQ6VXNlcjExMTYwMzQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/11160344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ztweed", "html_url": "https://github.com/ztweed", "followers_url": "https://api.github.com/users/ztweed/followers", "following_url": "https://api.github.com/users/ztweed/following{/other_user}", "gists_url": "https://api.github.com/users/ztweed/gists{/gist_id}", "starred_url": "https://api.github.com/users/ztweed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ztweed/subscriptions", "organizations_url": "https://api.github.com/users/ztweed/orgs", "repos_url": "https://api.github.com/users/ztweed/repos", "events_url": "https://api.github.com/users/ztweed/events{/privacy}", "received_events_url": "https://api.github.com/users/ztweed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-22T18:40:00Z", "updated_at": "2019-03-11T05:35:58Z", "closed_at": "2019-02-24T00:09:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, sorry if I am missing something somewhere, but does zenpy support querying ticket reopens over a certain period of time? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/298", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/298/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/298/events", "html_url": "https://github.com/facetoe/zenpy/issues/298", "id": 413426033, "node_id": "MDU6SXNzdWU0MTM0MjYwMzM=", "number": 298, "title": "incremental methods deliver data which is 2 hours old", "user": {"login": "gitlech", "id": 39336665, "node_id": "MDQ6VXNlcjM5MzM2NjY1", "avatar_url": "https://avatars3.githubusercontent.com/u/39336665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gitlech", "html_url": "https://github.com/gitlech", "followers_url": "https://api.github.com/users/gitlech/followers", "following_url": "https://api.github.com/users/gitlech/following{/other_user}", "gists_url": "https://api.github.com/users/gitlech/gists{/gist_id}", "starred_url": "https://api.github.com/users/gitlech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gitlech/subscriptions", "organizations_url": "https://api.github.com/users/gitlech/orgs", "repos_url": "https://api.github.com/users/gitlech/repos", "events_url": "https://api.github.com/users/gitlech/events{/privacy}", "received_events_url": "https://api.github.com/users/gitlech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-22T14:24:40Z", "updated_at": "2019-03-11T05:35:37Z", "closed_at": "2019-02-22T15:22:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I did a zenpy_client.tickets.incremental(include=['comment_count'], *args, **kwargs) at 15:00:00 CET (14:00:00 UTC). When I check the tickets I have received the ticket with the latest created timestamp is 12:59:42 CET (11:59:42 UTC) which is 2 hours behind actual latest created ticket (as we do get tickets opened constantly). I checked it for a couple of days and every time a zenpy_client.tickets.incremental is performed to lastest ticket delivered is 2 hours from my current CET time.\r\n\r\nSeems like a pattern to me. Is there some kind of a standard until / end_time value when the incremental is performed? \r\n\r\nCould this be a restriction on the Zendesk side?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/297", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/297/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/297/events", "html_url": "https://github.com/facetoe/zenpy/issues/297", "id": 412859983, "node_id": "MDU6SXNzdWU0MTI4NTk5ODM=", "number": 297, "title": "Is there a way to get user who voted on a post ?", "user": {"login": "sdavos", "id": 38280946, "node_id": "MDQ6VXNlcjM4MjgwOTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38280946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdavos", "html_url": "https://github.com/sdavos", "followers_url": "https://api.github.com/users/sdavos/followers", "following_url": "https://api.github.com/users/sdavos/following{/other_user}", "gists_url": "https://api.github.com/users/sdavos/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdavos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdavos/subscriptions", "organizations_url": "https://api.github.com/users/sdavos/orgs", "repos_url": "https://api.github.com/users/sdavos/repos", "events_url": "https://api.github.com/users/sdavos/events{/privacy}", "received_events_url": "https://api.github.com/users/sdavos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-21T10:45:12Z", "updated_at": "2019-02-25T12:24:01Z", "closed_at": "2019-02-21T11:56:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to get user who voted on a post ?\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/295", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/295/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/295/events", "html_url": "https://github.com/facetoe/zenpy/issues/295", "id": 412606221, "node_id": "MDU6SXNzdWU0MTI2MDYyMjE=", "number": 295, "title": "Intermittent failures due to uncaught IncompleteRead exceptions", "user": {"login": "mybludrunsorange", "id": 47831924, "node_id": "MDQ6VXNlcjQ3ODMxOTI0", "avatar_url": "https://avatars3.githubusercontent.com/u/47831924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mybludrunsorange", "html_url": "https://github.com/mybludrunsorange", "followers_url": "https://api.github.com/users/mybludrunsorange/followers", "following_url": "https://api.github.com/users/mybludrunsorange/following{/other_user}", "gists_url": "https://api.github.com/users/mybludrunsorange/gists{/gist_id}", "starred_url": "https://api.github.com/users/mybludrunsorange/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mybludrunsorange/subscriptions", "organizations_url": "https://api.github.com/users/mybludrunsorange/orgs", "repos_url": "https://api.github.com/users/mybludrunsorange/repos", "events_url": "https://api.github.com/users/mybludrunsorange/events{/privacy}", "received_events_url": "https://api.github.com/users/mybludrunsorange/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-20T20:08:19Z", "updated_at": "2019-02-24T12:28:01Z", "closed_at": "2019-02-21T11:52:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "This occurs both in Docker and on my desktop. I'm not sure what's going on here or whether the issue is on the Zendesk side or locally.\r\n\r\n> DEBUG - https://xxxxx.zendesk.com:443 \"GET /api/v2/incremental/ticket_events.json?include=comment_events&start_time=1550676714 HTTP/1.1\" 200 None\r\n> Traceback (most recent call last):\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/urllib3/response.py\", line 572, in _update_chunk_length\r\n>     self.chunk_left = int(line, 16)\r\n> ValueError: invalid literal for int() with base 16: b''\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/urllib3/response.py\", line 331, in _error_catcher\r\n>     yield\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/urllib3/response.py\", line 637, in read_chunked\r\n>     self._update_chunk_length()\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/urllib3/response.py\", line 576, in _update_chunk_length\r\n>     raise httplib.IncompleteRead(line)\r\n> http.client.IncompleteRead: IncompleteRead(0 bytes read)\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/requests/models.py\", line 749, in generate\r\n>     for chunk in self.raw.stream(chunk_size, decode_content=True):\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/urllib3/response.py\", line 461, in stream\r\n>     for line in self.read_chunked(amt, decode_content=decode_content):\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/urllib3/response.py\", line 665, in read_chunked\r\n>     self._original_response.close()\r\n>   File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/contextlib.py\", line 130, in __exit__\r\n>     self.gen.throw(type, value, traceback)\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/urllib3/response.py\", line 349, in _error_catcher\r\n>     raise ProtocolError('Connection broken: %r' % e, e)\r\n> urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read))\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"/Users/trevorhunt/code/zendesk_export/ticket_event_export.py\", line 154, in <module>\r\n>     for event in event_generator:\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/zenpy/lib/generator.py\", line 156, in __next__\r\n>     return self.next()\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/zenpy/lib/generator.py\", line 45, in next\r\n>     self.handle_pagination()\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/zenpy/lib/generator.py\", line 54, in handle_pagination\r\n>     self._response_json = self.get_next_page(page_num=page_num, page_size=page_size)\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/zenpy/lib/generator.py\", line 185, in get_next_page\r\n>     return super(ZendeskResultGenerator, self).get_next_page(page_num, page_size)\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/zenpy/lib/generator.py\", line 71, in get_next_page\r\n>     response = self.response_handler.api._get(url, raw_response=True, params=params)\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/zenpy/lib/api.py\", line 104, in _get\r\n>     response = self._call_api(self.session.get, url, timeout=self.timeout, **kwargs)\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/zenpy/lib/api.py\", line 125, in _call_api\r\n>     response = http_method(url, **kwargs)\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/requests/sessions.py\", line 525, in get\r\n>     return self.request('GET', url, **kwargs)\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/requests/sessions.py\", line 512, in request\r\n>     resp = self.send(prep, **send_kwargs)\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/requests/sessions.py\", line 662, in send\r\n>     r.content\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/requests/models.py\", line 827, in content\r\n>     self._content = b''.join(self.iter_content(CONTENT_CHUNK_SIZE)) or b''\r\n>   File \"/Users/trevorhunt/general_dev/lib/python3.7/site-packages/requests/models.py\", line 752, in generate\r\n>     raise ChunkedEncodingError(e)\r\n> requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/294", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/294/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/294/events", "html_url": "https://github.com/facetoe/zenpy/issues/294", "id": 410597353, "node_id": "MDU6SXNzdWU0MTA1OTczNTM=", "number": 294, "title": "Unassigned tickets", "user": {"login": "fajrihanny", "id": 3012781, "node_id": "MDQ6VXNlcjMwMTI3ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3012781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fajrihanny", "html_url": "https://github.com/fajrihanny", "followers_url": "https://api.github.com/users/fajrihanny/followers", "following_url": "https://api.github.com/users/fajrihanny/following{/other_user}", "gists_url": "https://api.github.com/users/fajrihanny/gists{/gist_id}", "starred_url": "https://api.github.com/users/fajrihanny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fajrihanny/subscriptions", "organizations_url": "https://api.github.com/users/fajrihanny/orgs", "repos_url": "https://api.github.com/users/fajrihanny/repos", "events_url": "https://api.github.com/users/fajrihanny/events{/privacy}", "received_events_url": "https://api.github.com/users/fajrihanny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-15T04:12:49Z", "updated_at": "2019-02-24T00:26:13Z", "closed_at": "2019-02-24T00:26:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Nice library. I couldn't seem to find how to find unassigned tickets. Is sending query with assignee='none' working? Tried that and it didn't give me the correct result. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/291", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/291/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/291/events", "html_url": "https://github.com/facetoe/zenpy/issues/291", "id": 407273337, "node_id": "MDU6SXNzdWU0MDcyNzMzMzc=", "number": 291, "title": "jobs_report on high imports", "user": {"login": "insspb", "id": 1916759, "node_id": "MDQ6VXNlcjE5MTY3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1916759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insspb", "html_url": "https://github.com/insspb", "followers_url": "https://api.github.com/users/insspb/followers", "following_url": "https://api.github.com/users/insspb/following{/other_user}", "gists_url": "https://api.github.com/users/insspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/insspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insspb/subscriptions", "organizations_url": "https://api.github.com/users/insspb/orgs", "repos_url": "https://api.github.com/users/insspb/repos", "events_url": "https://api.github.com/users/insspb/events{/privacy}", "received_events_url": "https://api.github.com/users/insspb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 451308608, "node_id": "MDU6TGFiZWw0NTEzMDg2MDg=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/document%20this", "name": "document this", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-02-06T14:54:35Z", "updated_at": "2019-02-25T12:11:30Z", "closed_at": "2019-02-25T12:11:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi. Currently, I am preparing large migration (160k users, 300k tickets, tons of comments). \r\nDuring test migration one issue with job_status found. \r\nAfter ~20k of migrated objects in queue (by 100) zendesk not making https://example.domain/api/v2/job_statuses/[job_id].json \r\nI reported this issue to zendesk, but they ignore me for two days. \r\nLog still available in `zenpy_client.job_status()`, because this parses `https://example.domain/api/v2/job_statuses` endpoint. \r\nIt will be great to note this in documentation or ever make some flag to id scanner, that will still be usable as zenpy_client.job_status(id=job_id), but will parse all list under the hood. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/290", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/290/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/290/events", "html_url": "https://github.com/facetoe/zenpy/issues/290", "id": 405804099, "node_id": "MDU6SXNzdWU0MDU4MDQwOTk=", "number": 290, "title": "20 second request time on responsive server", "user": {"login": "theelous3", "id": 19316042, "node_id": "MDQ6VXNlcjE5MzE2MDQy", "avatar_url": "https://avatars3.githubusercontent.com/u/19316042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theelous3", "html_url": "https://github.com/theelous3", "followers_url": "https://api.github.com/users/theelous3/followers", "following_url": "https://api.github.com/users/theelous3/following{/other_user}", "gists_url": "https://api.github.com/users/theelous3/gists{/gist_id}", "starred_url": "https://api.github.com/users/theelous3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theelous3/subscriptions", "organizations_url": "https://api.github.com/users/theelous3/orgs", "repos_url": "https://api.github.com/users/theelous3/repos", "events_url": "https://api.github.com/users/theelous3/events{/privacy}", "received_events_url": "https://api.github.com/users/theelous3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-01T17:42:37Z", "updated_at": "2019-02-03T01:50:11Z", "closed_at": "2019-02-02T01:24:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "For whatever reason, requests that were taking less than .5 sec or less manually with requests or through a postman/insomnia client, are taking over 20 second consistently through zenpy.\r\n\r\nCreating an org and so on. I would post some sample data, but it was absolutely standard stuff. This issue is just a heads up that there is a serious performance problem hidden in here somewhere.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/289", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/289/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/289/events", "html_url": "https://github.com/facetoe/zenpy/issues/289", "id": 401943691, "node_id": "MDU6SXNzdWU0MDE5NDM2OTE=", "number": 289, "title": "Question - Pulling phone recordings as attachments", "user": {"login": "TheFoolInRed", "id": 22160072, "node_id": "MDQ6VXNlcjIyMTYwMDcy", "avatar_url": "https://avatars2.githubusercontent.com/u/22160072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheFoolInRed", "html_url": "https://github.com/TheFoolInRed", "followers_url": "https://api.github.com/users/TheFoolInRed/followers", "following_url": "https://api.github.com/users/TheFoolInRed/following{/other_user}", "gists_url": "https://api.github.com/users/TheFoolInRed/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheFoolInRed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheFoolInRed/subscriptions", "organizations_url": "https://api.github.com/users/TheFoolInRed/orgs", "repos_url": "https://api.github.com/users/TheFoolInRed/repos", "events_url": "https://api.github.com/users/TheFoolInRed/events{/privacy}", "received_events_url": "https://api.github.com/users/TheFoolInRed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-22T20:38:19Z", "updated_at": "2019-01-27T10:53:39Z", "closed_at": "2019-01-27T10:53:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I'm trying to figure out how to pull phone recordings via Zenpy. I'm still a bit of a Python noob, so I I'm probably missing something obvious. I looked over the script in: https://github.com/facetoe/zenpy/issues/192 and was able to pull the ticket attachments, but aside from a handful of pdfs I didn't get any phone recordings. I found this page: https://support.zendesk.com/hc/en-us/articles/225850728-Can-I-download-call-recordings- and while I could download these manually, I need like ~5k recordings for a data dump. Any idea what the best way for that might be or how I can pick those up in a loop? Current code is as follows: \r\n\r\n`print('Importing datetime...')`\r\n`import datetime`\r\n`import requests`\r\n`print('Import complete.')`\r\n\r\n`print('Storing authentication information...')`\r\n`# Zenpy accepts an API token`\r\n`creds = {`\r\n    `'email' : 'email',`\r\n    `'token' : 'token',`\r\n    `'subdomain': 'subdomain'`\r\n`}`\r\n`print('Authentication details stored.')`\r\n\r\n`print('Importing the Zenpy client.')`\r\n`# Import the Zenpy Class`\r\n`from zenpy import Zenpy`\r\n`print('Zenpy client imported.')`\r\n\r\n`print('Signing into Zendesk via Zenpy...')`\r\n`# Default`\r\n`zenpy_client = Zenpy(**creds)`\r\n`print('Signed into Zendesk!')`\r\n\r\n\r\n\r\n`x='1'`\r\n`n = 0`\r\n`print('Processing date time filter. Currently going back ' + x + ' days')`\r\n\r\n`yesterday = datetime.datetime.now() - datetime.timedelta(days=1)`\r\n`today = datetime.datetime.now()`\r\n`print('Iterating over tickets.')`\r\n`for ticket in zenpy_client.search(\"Phone call from%\", created_between=[yesterday, today],` `type='ticket', minus='negated'):`\r\n`    for audit in zenpy_client.tickets.audits(ticket.id):`\r\n`        for event in audit.events:`\r\n`            for attachment in event.get('attachments', []):`\r\n`                res = requests.get(attachment['content_url'], auth=('user', 'password'))`\r\n`                with open(attachment['file_name'], 'wb') as fout:`\r\n`                    fout.write(res._content)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/287", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/287/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/287/events", "html_url": "https://github.com/facetoe/zenpy/issues/287", "id": 400316362, "node_id": "MDU6SXNzdWU0MDAzMTYzNjI=", "number": 287, "title": "RecordInValid after setting requester in create Ticket", "user": {"login": "CasperCL", "id": 6095436, "node_id": "MDQ6VXNlcjYwOTU0MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6095436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CasperCL", "html_url": "https://github.com/CasperCL", "followers_url": "https://api.github.com/users/CasperCL/followers", "following_url": "https://api.github.com/users/CasperCL/following{/other_user}", "gists_url": "https://api.github.com/users/CasperCL/gists{/gist_id}", "starred_url": "https://api.github.com/users/CasperCL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CasperCL/subscriptions", "organizations_url": "https://api.github.com/users/CasperCL/orgs", "repos_url": "https://api.github.com/users/CasperCL/repos", "events_url": "https://api.github.com/users/CasperCL/events{/privacy}", "received_events_url": "https://api.github.com/users/CasperCL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-17T15:00:18Z", "updated_at": "2019-01-21T09:30:22Z", "closed_at": "2019-01-20T10:23:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having trouble creating a ticket with Zenpy.\r\n\r\nThis works:\r\n\r\n            submitter = User(name=\"John Doe\", email=\"john@doe.com\")\r\n            submitter = self.zenpy_client.users.create_or_update(submitter)\r\n            \r\n            zendesk_ticket = Ticket(\r\n                subject=subject,\r\n                description=description,\r\n                submitter=submitter,\r\n                assignee=self.zenpy_client.users.me()\r\n            )\r\n\r\n\r\nThis doesn't: \r\n\r\n            submitter = User(name=\"John Doe\", email=\"john@doe.com\")\r\n            submitter = self.zenpy_client.users.create_or_update(submitter)\r\n            requester = User(name=\"Jane Doe\", email=\"jane@doe.com\")\r\n            requester = self.zenpy_client.users.create_or_update(requester)\r\n            \r\n            zendesk_ticket = Ticket(\r\n                subject=subject,\r\n                description=description,\r\n                submitter=submitter,\r\n                requester=requester,\r\n                assignee=self.zenpy_client.users.me()\r\n            )\r\n\r\nResult:\r\n```\r\n{\"description\": \"Record validation errors\", \"details\": {\"requester\": [{\"description\": \"Requester: Name:  is too short (minimum is 1 character)\"}]}, \"error\": \"RecordInvalid\"}\r\n```\r\n\r\nIf I dump the body and post it via a REST Client it works without a problem. Any idea what the problem might be?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/284", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/284/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/284/events", "html_url": "https://github.com/facetoe/zenpy/issues/284", "id": 390276391, "node_id": "MDU6SXNzdWUzOTAyNzYzOTE=", "number": 284, "title": "Object of type CcEvent is not JSON serializable.", "user": {"login": "gitlech", "id": 39336665, "node_id": "MDQ6VXNlcjM5MzM2NjY1", "avatar_url": "https://avatars3.githubusercontent.com/u/39336665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gitlech", "html_url": "https://github.com/gitlech", "followers_url": "https://api.github.com/users/gitlech/followers", "following_url": "https://api.github.com/users/gitlech/following{/other_user}", "gists_url": "https://api.github.com/users/gitlech/gists{/gist_id}", "starred_url": "https://api.github.com/users/gitlech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gitlech/subscriptions", "organizations_url": "https://api.github.com/users/gitlech/orgs", "repos_url": "https://api.github.com/users/gitlech/repos", "events_url": "https://api.github.com/users/gitlech/events{/privacy}", "received_events_url": "https://api.github.com/users/gitlech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960239, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzk=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-12-12T15:26:22Z", "updated_at": "2019-03-12T11:04:48Z", "closed_at": "2019-03-09T00:40:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was downloading all Audits data and when trying to serialize to a JSON file I got a TypeError: Object of type CcEvent is not JSON serializable.\r\n\r\nAny idea what causes this or if there is a workaround?\r\n\r\nDownload Function:\r\n```python\r\ndef download_audits_incremental(self, zenpy_client, *args, **kwargs):\r\n    audits = {'audits': []}\r\n    for ticket_id in sorted([ticket.id for ticket in zenpy_client.tickets.incremental(*args, **kwargs)]):\r\n        for audit in zenpy_client.tickets.audits(ticket=ticket_id):\r\n            audit_dict = audit.to_dict()\r\n            audits['audits'].append(audit_dict)\r\n    response = audits['audits']\r\n    return response\r\n```\r\n\r\nJSON Function:\r\n```python\r\nwith open(target_file, 'w') as target_file:\r\n    json.dump(response, target_file, indent=4, ensure_ascii=False)\r\n```\r\n\r\nError:\r\n> 2018-12-12 16:06:26 - (DEBUG) - urllib3.connectionpool - https://xyz.zendesk.com:443 \"GET /api/v2/tickets/280644/audits.json HTTP/1.1\" 200 None\r\n2018-12-12 16:06:27 - (DEBUG) - urllib3.connectionpool - https://xyz.zendesk.com:443 \"GET /api/v2/tickets/280645/audits.json HTTP/1.1\" 200 None\r\n2018-12-12 16:06:35 - (INFO) - ZendeskDownloader - Serializing response for audits to disk -> /xyz/data/zendesk/downloader/temp/20181211_zendesk_audits_delta.json.\r\nTraceback (most recent call last):\r\n  File \"/xyz/python/zendesk/zendesk_downloader.py\", line 364, in <module>\r\n    main()\r\n  File \"/xyz/python/zendesk/zendesk_downloader.py\", line 357, in main\r\n    dwh.run()\r\n  File \"/xyz/python/zendesk/zendesk_downloader.py\", line 306, in run\r\n    self.run_delta(zenpy_client, file_date, download_date_list)\r\n  File \"/xyz/python/zendesk/zendesk_downloader.py\", line 251, in run_delta\r\n    self.response_to_json(file_date, 'de', data_dict, endpoint, 'delta')\r\n  File \"/xyz/python/zendesk/zendesk_downloader.py\", line 140, in response_to_json\r\n    json.dump(response, target_file, indent=4, ensure_ascii=False)\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/__init__.py\", line 179, in dump\r\n    for chunk in iterable:\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 431, in _iterencode\r\n    yield from _iterencode_dict(o, _current_indent_level)\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\r\n    yield from chunks\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 325, in _iterencode_list\r\n    yield from chunks\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\r\n    yield from chunks\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\r\n    yield from chunks\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\r\n    yield from chunks\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 325, in _iterencode_list\r\n    yield from chunks\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 438, in _iterencode\r\n    o = _default(o)\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 179, in default\r\n    raise TypeError(f'Object of type {o.__class__.__name__} '\r\nTypeError: Object of type CcEvent is not JSON serializable", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facetoe/zenpy/issues/283", "repository_url": "https://api.github.com/repos/facetoe/zenpy", "labels_url": "https://api.github.com/repos/facetoe/zenpy/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/facetoe/zenpy/issues/283/comments", "events_url": "https://api.github.com/repos/facetoe/zenpy/issues/283/events", "html_url": "https://github.com/facetoe/zenpy/issues/283", "id": 389879609, "node_id": "MDU6SXNzdWUzODk4Nzk2MDk=", "number": 283, "title": "zenpy.search should escape special characters like `&`", "user": {"login": "crunis", "id": 1515768, "node_id": "MDQ6VXNlcjE1MTU3Njg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1515768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crunis", "html_url": "https://github.com/crunis", "followers_url": "https://api.github.com/users/crunis/followers", "following_url": "https://api.github.com/users/crunis/following{/other_user}", "gists_url": "https://api.github.com/users/crunis/gists{/gist_id}", "starred_url": "https://api.github.com/users/crunis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crunis/subscriptions", "organizations_url": "https://api.github.com/users/crunis/orgs", "repos_url": "https://api.github.com/users/crunis/repos", "events_url": "https://api.github.com/users/crunis/events{/privacy}", "received_events_url": "https://api.github.com/users/crunis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 174960234, "node_id": "MDU6TGFiZWwxNzQ5NjAyMzQ=", "url": "https://api.github.com/repos/facetoe/zenpy/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-11T17:46:02Z", "updated_at": "2019-01-12T09:48:31Z", "closed_at": "2019-01-12T09:48:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently this happens:\r\n```\r\n>>> res = zenpy_client.search(name=\"The wood & fire experts\", type='organization')\r\n>>> res.next()\r\nTicket(id=286322)\r\n```\r\nNote that we were querying for \"organizations\" and a ticket is returned.\r\n\r\nIf we manually escape the organization name (which contains the `&` symbol):\r\n```\r\n>>> res3 = zenpy_client.search(name=urllib.quote_plus(\"The wood & fire experts\"), type='organization')\r\n>>> res3.next()\r\nOrganization(id=27447913607)\r\n```\r\nWe get the correct organization.\r\nWhat seems to be happening is that zenpy is performing the request without escaping the `&` symbol and that is somehow truncating the request, and the `type=\"organization\"` part is lost, and we are just searching for \"The wood\".\r\nThis has been check to happen in both python2.7 and python3.7.1", "performed_via_github_app": null, "score": 1.0}]}