{"total_count": 194, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/googleapis/python-ndb/issues/515", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/515/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/515/events", "html_url": "https://github.com/googleapis/python-ndb/issues/515", "id": 683087512, "node_id": "MDU6SXNzdWU2ODMwODc1MTI=", "number": 515, "title": "Cloud NDB: Datastore Emulator usage with Google Cloud NDB", "user": {"login": "kevjumba", "id": 7833572, "node_id": "MDQ6VXNlcjc4MzM1NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7833572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevjumba", "html_url": "https://github.com/kevjumba", "followers_url": "https://api.github.com/users/kevjumba/followers", "following_url": "https://api.github.com/users/kevjumba/following{/other_user}", "gists_url": "https://api.github.com/users/kevjumba/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevjumba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevjumba/subscriptions", "organizations_url": "https://api.github.com/users/kevjumba/orgs", "repos_url": "https://api.github.com/users/kevjumba/repos", "events_url": "https://api.github.com/users/kevjumba/events{/privacy}", "received_events_url": "https://api.github.com/users/kevjumba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-20T20:49:57Z", "updated_at": "2020-08-21T18:08:55Z", "closed_at": "2020-08-20T22:03:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for stopping by to let us know something could be better!\r\n\r\n**PLEASE READ**: If you have a support contract with Google, please create an issue in the [support console](https://cloud.google.com/support/) instead of filing on GitHub. This will ensure a timely response.\r\n\r\nPlease run down the following list and make sure you've tried the usual \"quick fixes\":\r\n\r\n  - Search the issues already opened: https://github.com/googleapis/google-cloud-python/issues\r\n  - Check for answers on StackOverflow: http://stackoverflow.com/questions/tagged/google-cloud-python\r\n\r\nIf you are still having issues, please be sure to include as much information as possible:\r\n\r\n#### Environment details\r\n\r\n1. Specify the API at the beginning of the title (for example, \"BigQuery: ...\")\r\n   General, Core, and Other are also allowed as types\r\n2. Mac OSX 10.15.5\r\n3. Python version and virtual environment information: 2.7.18\r\n4. google-cloud-ndb version:  1.5.0\r\n\r\nThese are more general queries about Google Cloud NDB usage (please let me know if this isn't the correct place for them). Currently I am having struggles running with the dev_appserver using Google Cloud NDB with Google App Engine. Before migrating to cloud ndb, I was using the Google App Engine ndb API which would just automatically connect to the ndb datastore testing environment when the dev_appserver is run. \r\nNow that I've migrated the service to cloud ndb, a few issues have arisen, keeping in mind that the app works fine for the most part on my local development server.\r\n\r\n1. Even though I specified the --clear_datastore=true argument, the datastore data remains and I can't seem to find where the datastore is saving to, data that I added from yesterday still appears on my dev server today. \r\n2. Index.yaml is no longer self-generating in my project directory, and I can't seem to find where it could be generating.\r\n3. When I shut off wifi, the app errors out with\r\n```\r\n Maximum number of 3 retries exceeded while calling <function rpc_call at 0x108d905d0>, last exception: 503 DNS resolution failed for service: datastore.googleapis.com:443\r\n```\r\n4. I have to specify an --application parameter to dev_appserver or the app errors out with the following error, even though I'm running a local dev server so it shouldn't need to connect to a project unless I deploy.\r\n```\r\n400 Project ID None is invalid\r\n```\r\n5. Pages and backend requests now load incredibly slow. \r\n\r\nThese errors have led me to believe that when my dev_appserver is starting up, I'm actually connecting to my cloud instance datastore and actually dropping items in there somehow. What is the correct way to force the dev_appserver to use either of the emulators for the datastore? The documentation online is ambiguous since there are multiple solutions, neither of which have been working for me.\r\n\r\nhttps://cloud.google.com/appengine/docs/standard/python/tools/migrate-cloud-datastore-emulator\r\nThis document suggests to use --support_datastore_emulator=yes and the app starts with the argument with output that the emulator has started but my app doesn't seem to be sending ndb requests to the emulator.\r\n\r\nhttps://cloud.google.com/datastore/docs/tools/datastore-emulator\r\nThis document suggests to start the datastore emulator on its own using gcloud cli and then export environmental variables to have an application connect directly.\r\n\r\nWhich of the suggested ways is the correct way to start my emulation instance and force cloud ndb to set and put to that emulator instance in local development?\r\n\r\n#### Code example\r\n\r\nenv.yaml that is exported from the 2nd solution above:\r\n\r\n```\r\nDATASTORE_DATASET: appid\r\nDATASTORE_EMULATOR_HOST: ::1:8698\r\nDATASTORE_EMULATOR_HOST_PATH: ::1:8698/datastore\r\nDATASTORE_HOST: http://::1:8698\r\nDATASTORE_PROJECT_ID: appid\r\n```\r\n\r\n#### Stack trace\r\nN/A\r\n\r\nMaking sure to follow these steps will guarantee the quickest resolution possible.\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/512", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/512/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/512/events", "html_url": "https://github.com/googleapis/python-ndb/issues/512", "id": 682131692, "node_id": "MDU6SXNzdWU2ODIxMzE2OTI=", "number": 512, "title": "Cloud-NDB: ndb.put_multi crashes with exception", "user": {"login": "kevjumba", "id": 7833572, "node_id": "MDQ6VXNlcjc4MzM1NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7833572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevjumba", "html_url": "https://github.com/kevjumba", "followers_url": "https://api.github.com/users/kevjumba/followers", "following_url": "https://api.github.com/users/kevjumba/following{/other_user}", "gists_url": "https://api.github.com/users/kevjumba/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevjumba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevjumba/subscriptions", "organizations_url": "https://api.github.com/users/kevjumba/orgs", "repos_url": "https://api.github.com/users/kevjumba/repos", "events_url": "https://api.github.com/users/kevjumba/events{/privacy}", "received_events_url": "https://api.github.com/users/kevjumba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-08-19T19:44:07Z", "updated_at": "2020-08-20T12:54:03Z", "closed_at": "2020-08-20T02:58:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Steps to reproduce\r\n\r\n  1. Add @ndb.transactional decorator to method that uses ndb.put_multi().\r\n  2. Call it on a self-defined ndb.model using models as entities.\r\n\r\nNote: The problem is with put_async() that is called from ndb/tasklets.py internally. I don't use or touch the _options parameter at all. It might be a version mismatch but I can't see where that would even happen.\r\n\r\n#### Code example\r\n\r\n```python\r\n    @classmethod\r\n    @ndb.transactional()\r\n    def put_multi(cls, entities, update_last_updated_time=True):\r\n        \"\"\"Stores the given ndb.Model instances.\r\n\r\n        Args:\r\n            entities: list(ndb.Model). List of model instances to be stored.\r\n            update_last_updated_time: bool. Whether to update the\r\n                last_updated field of the entities.\r\n        \"\"\"\r\n        ndb.put_multi(entities)\r\n\r\n    #BaseModel is a child class of ndb.Model\r\n    BaseModel.put_multi(\r\n            [\r\n                snapshot_metadata_instance, #all 3 are ndb.models.\r\n                snapshot_content_instance,\r\n                self,\r\n     ])\r\n```\r\n\r\n#### Stack trace\r\n```\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia_tools/google-cloud-sdk-304.0.0/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 570, in dispatch\r\n    return method(*args, **kwargs)\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/core/controllers/acl_decorators.py\", line 649, in test_can_create\r\n    return handler(self, **kwargs)\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/core/controllers/creator_dashboard.py\", line 378, in post\r\n    exp_services.save_new_exploration(self.user_id, exploration)\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/core/domain/exp_services.py\", line 706, in save_new_exploration\r\n    'category': exploration.category,\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/core/domain/exp_services.py\", line 642, in _create_exploration\r\n    rights_manager.create_new_exploration_rights(exploration.id, committer_id)\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/core/domain/rights_manager.py\", line 480, in create_new_exploration_rights\r\n    ).commit(committer_id, 'Created new exploration', commit_cmds)\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/core/storage/base_model/gae_models.py\", line 848, in commit\r\n    committer_id, commit_type, commit_message, commit_cmds)\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/core/storage/exploration/gae_models.py\", line 462, in _trusted_commit\r\n    committer_id, commit_type, commit_message, commit_cmds)\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/core/storage/base_model/gae_models.py\", line 684, in _trusted_commit\r\n    self,\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/third_party/google/cloud/ndb/_transaction.py\", line 215, in transactional_inner_wrapper\r\n    propagation=propagation,\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/third_party/google/cloud/ndb/_transaction.py\", line 72, in transaction\r\n    return future.result()\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/third_party/google/cloud/ndb/tasklets.py\", line 193, in result\r\n    self.check_success()\r\n  File \"/Users/kevinzhang/Documents/CS/opensource/oppia/third_party/google/cloud/ndb/tasklets.py\", line 140, in check_success\r\n    raise self._exception\r\nTypeError: put_async() got an unexpected keyword argument '_options'\r\n```\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/509", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/509/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/509/events", "html_url": "https://github.com/googleapis/python-ndb/issues/509", "id": 679089265, "node_id": "MDU6SXNzdWU2NzkwODkyNjU=", "number": 509, "title": "keys_only fails if order is specified", "user": {"login": "clhsieh", "id": 3436146, "node_id": "MDQ6VXNlcjM0MzYxNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3436146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clhsieh", "html_url": "https://github.com/clhsieh", "followers_url": "https://api.github.com/users/clhsieh/followers", "following_url": "https://api.github.com/users/clhsieh/following{/other_user}", "gists_url": "https://api.github.com/users/clhsieh/gists{/gist_id}", "starred_url": "https://api.github.com/users/clhsieh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clhsieh/subscriptions", "organizations_url": "https://api.github.com/users/clhsieh/orgs", "repos_url": "https://api.github.com/users/clhsieh/repos", "events_url": "https://api.github.com/users/clhsieh/events{/privacy}", "received_events_url": "https://api.github.com/users/clhsieh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-08-14T11:18:24Z", "updated_at": "2020-08-20T17:00:59Z", "closed_at": "2020-08-20T17:00:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just like #447, #452 , I meet the error: ValueError(\"Value protobuf did not have any value set\")\r\nBut in my case, I am fetching with keys_only with order.\r\nIn #452 it just remove order_by when the count() fetching with keys_only to fix the bug.\r\nThis is no use when I really need keys_only with order.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/501", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/501/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/501/events", "html_url": "https://github.com/googleapis/python-ndb/issues/501", "id": 672178080, "node_id": "MDU6SXNzdWU2NzIxNzgwODA=", "number": 501, "title": "Replace threading.Local state with ContextVar", "user": {"login": "ndavydovdev", "id": 21359293, "node_id": "MDQ6VXNlcjIxMzU5Mjkz", "avatar_url": "https://avatars1.githubusercontent.com/u/21359293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndavydovdev", "html_url": "https://github.com/ndavydovdev", "followers_url": "https://api.github.com/users/ndavydovdev/followers", "following_url": "https://api.github.com/users/ndavydovdev/following{/other_user}", "gists_url": "https://api.github.com/users/ndavydovdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndavydovdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndavydovdev/subscriptions", "organizations_url": "https://api.github.com/users/ndavydovdev/orgs", "repos_url": "https://api.github.com/users/ndavydovdev/repos", "events_url": "https://api.github.com/users/ndavydovdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ndavydovdev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1341141019, "node_id": "MDU6TGFiZWwxMzQxMTQxMDE5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T15:58:46Z", "updated_at": "2020-08-12T13:10:45Z", "closed_at": "2020-08-12T13:10:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've got the problem(https://github.com/tiangolo/fastapi/issues/962) with using ndb context in async code.\r\n\r\nWhen my async task is finished, context is realized in current thread, and if I have another task in this thread that wants to use the same context I got ContextError. It makes me unable to use this lib with async python frameworks  \r\n\r\nI solved it by replacing threading.Local state with ContextVar\r\n\r\nhttps://www.python.org/dev/peps/pep-0567/#converting-code-that-uses-threading-local", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/498", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/498/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/498/events", "html_url": "https://github.com/googleapis/python-ndb/issues/498", "id": 669194952, "node_id": "MDU6SXNzdWU2NjkxOTQ5NTI=", "number": 498, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332101, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-30T21:01:31Z", "updated_at": "2020-07-31T02:08:50Z", "closed_at": "2020-07-31T02:08:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #489 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/496", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/496/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/496/events", "html_url": "https://github.com/googleapis/python-ndb/issues/496", "id": 667281468, "node_id": "MDU6SXNzdWU2NjcyODE0Njg=", "number": 496, "title": "Cannot issue nested calls to MULTI", "user": {"login": "remko", "id": 12300, "node_id": "MDQ6VXNlcjEyMzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/12300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remko", "html_url": "https://github.com/remko", "followers_url": "https://api.github.com/users/remko/followers", "following_url": "https://api.github.com/users/remko/following{/other_user}", "gists_url": "https://api.github.com/users/remko/gists{/gist_id}", "starred_url": "https://api.github.com/users/remko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remko/subscriptions", "organizations_url": "https://api.github.com/users/remko/orgs", "repos_url": "https://api.github.com/users/remko/repos", "events_url": "https://api.github.com/users/remko/events{/privacy}", "received_events_url": "https://api.github.com/users/remko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-07-28T18:30:13Z", "updated_at": "2020-08-04T20:04:53Z", "closed_at": "2020-08-04T20:04:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\nApp running on App Engine Standard Python 2.7 runtime, using google-cloud-ndb 1.0.1 library.\r\n\r\n#### Steps to reproduce\r\n\r\nWe are using the global cache for some NDB models. We are regularly getting the following error:\r\n\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/_options.py\", line 89, in wrapper\r\n        return wrapped(*pass_args, **kwargs)\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/utils.py\", line 110, in positional_wrapper\r\n        return wrapped(*args, **kwds)\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/key.py\", line 789, in get\r\n        return self.get_async(_options=_options).result()\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/tasklets.py\", line 190, in result\r\n        self.check_success()\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/tasklets.py\", line 134, in check_success\r\n        self.wait()\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/tasklets.py\", line 126, in wait\r\n        _eventloop.run1()\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/_eventloop.py\", line 408, in run1\r\n        loop.run1()\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/_eventloop.py\", line 338, in run1\r\n        delay = self.run0()\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/_eventloop.py\", line 307, in run0\r\n        if self._run_current() or self.run_idle():\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/_eventloop.py\", line 272, in run_idle\r\n        result = callback(*args, **kwargs)\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/_batch.py\", line 66, in idle\r\n        batch.idle_callback()\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/_cache.py\", line 81, in idle_callback\r\n        cache_call = self.make_call()\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/_cache.py\", line 344, in make_call\r\n        return cache.compare_and_swap(self.todo, expires=self.expires)\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/google/cloud/ndb/global_cache.py\", line 254, in compare_and_swap\r\n        pipe.multi()\r\n      File \"/base/data/home/apps/e~myapp-eu/15.428407229556836319/vendor/redis/client.py\", line 3761, in multi\r\n        raise RedisError('Cannot issue nested calls to MULTI')\r\n    RedisError: Cannot issue nested calls to MULTI\r\n\r\n\r\nI have tried upgrading to a more recent Cloud NDB library, but ever since 1.1.0, App Engine starts throwing an error on missing `_internal_create_key` in protobuf. (I was assuming more recent versions require a version of protobuf that App Engine doesn't support).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/493", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/493/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/493/events", "html_url": "https://github.com/googleapis/python-ndb/issues/493", "id": 664599674, "node_id": "MDU6SXNzdWU2NjQ1OTk2NzQ=", "number": 493, "title": "Ancestor queries are not strongly consistent", "user": {"login": "rtshadow", "id": 1429654, "node_id": "MDQ6VXNlcjE0Mjk2NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1429654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtshadow", "html_url": "https://github.com/rtshadow", "followers_url": "https://api.github.com/users/rtshadow/followers", "following_url": "https://api.github.com/users/rtshadow/following{/other_user}", "gists_url": "https://api.github.com/users/rtshadow/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtshadow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtshadow/subscriptions", "organizations_url": "https://api.github.com/users/rtshadow/orgs", "repos_url": "https://api.github.com/users/rtshadow/repos", "events_url": "https://api.github.com/users/rtshadow/events{/privacy}", "received_events_url": "https://api.github.com/users/rtshadow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T16:07:25Z", "updated_at": "2020-07-24T13:28:58Z", "closed_at": "2020-07-24T06:47:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAfter migration from AppEngine NDB to Cloud NDB we have observed that from time to time our app behaves rather strangely. After prolonged investigation we came to conclusion that our ancestor queries are not strongly consistent anymore.\r\n\r\nIndeed, we can reproduce this behaviour locally with datastore emulator. First, start an emulator:\r\n```bash\r\ngcloud beta emulators datastore start --quiet --project your-project --host-port=9000 --consistency=0.9\r\n```\r\n\r\nand then  do:\r\n```python\r\nimport os\r\nfrom google.cloud import ndb\r\n\r\nclass A(ndb.Model):\r\n    x = ndb.StringProperty()\r\n\r\nclass B(ndb.Model):\r\n    y = ndb.IntegerProperty()\r\n\r\nos.environ['DATASTORE_EMULATOR_HOST'] = \"localhost:9000\"\r\nfor index in range(1000):\r\n    print(index)\r\n    ndb_client = ndb.Client(project='your-project')\r\n    with  ndb_client.context():\r\n        a = A(x='x')\r\n        a.put()\r\n\r\n        a2 = A(x='x2')\r\n        a2.put()\r\n\r\n        entities = []\r\n        for i, parent in enumerate([a, a2, a]):\r\n            b = B(y=i, key=ndb.Key(A, parent.key.id(), B, str(i)))\r\n            entities.append(b)\r\n        ndb.put_multi(entities)\r\n\r\n        results = B.query(ancestor=a.key).fetch_page(page_size=4)\r\n        assert len(results[0]) == 2, \"got %s\" % str(results[0])\r\n\r\n        results = B.query(ancestor=a2.key).fetch_page(page_size=4)\r\n        assert len(results[0]) == 1, \"got %s\" % str(results[0])\r\n```\r\n\r\nThis will fail reliably.  Tested with google-cloud-ndb==1.4.1.\r\n\r\nI'm going to try to reproduce it with proper datastore instance and/or try to write similar code with AppEngine NDB against emulator.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/492", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/492/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/492/events", "html_url": "https://github.com/googleapis/python-ndb/issues/492", "id": 663924785, "node_id": "MDU6SXNzdWU2NjM5MjQ3ODU=", "number": 492, "title": "Deprecation warning from pytest when ndb is used", "user": {"login": "parthi82", "id": 9369198, "node_id": "MDQ6VXNlcjkzNjkxOTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9369198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parthi82", "html_url": "https://github.com/parthi82", "followers_url": "https://api.github.com/users/parthi82/followers", "following_url": "https://api.github.com/users/parthi82/following{/other_user}", "gists_url": "https://api.github.com/users/parthi82/gists{/gist_id}", "starred_url": "https://api.github.com/users/parthi82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parthi82/subscriptions", "organizations_url": "https://api.github.com/users/parthi82/orgs", "repos_url": "https://api.github.com/users/parthi82/repos", "events_url": "https://api.github.com/users/parthi82/events{/privacy}", "received_events_url": "https://api.github.com/users/parthi82/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345320619, "node_id": "MDU6TGFiZWwxMzQ1MzIwNjE5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20cleanup", "name": "type: cleanup", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-22T17:20:58Z", "updated_at": "2020-08-17T17:20:36Z", "closed_at": "2020-08-17T17:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\npython version :  3.8\r\npytest version : 5.4.3\r\ngoogle-cloud-ndb version : 1.4.1\r\n\r\n\r\n#### Code example\r\n\r\n```python\r\n # app.py\r\nfrom google.cloud import ndb\r\ndef app():\r\n    pass\r\n```\r\n\r\n```python\r\n # test_app.py\r\nimport app\r\ndef test_app():\r\n    assert True\r\n```\r\nWhen running the tests using pytest command, the following warning appears\r\n#### Stack trace\r\n```\r\n=================================================================== warnings summary ====================================================================\r\n\r\n/python3projects/hello_world/venv/lib/python3.8/site-packages/google/cloud/ndb/utils.py:96: DeprecationWarning: inspect.getargspec() is deprecated since Python 3.0, use inspect.signature() or inspect.getfullargspec()\r\n    argspec = inspect.getargspec(root)\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n================================================================ short test summary info ================================================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/491", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/491/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/491/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/491/events", "html_url": "https://github.com/googleapis/python-ndb/issues/491", "id": 656838816, "node_id": "MDU6SXNzdWU2NTY4Mzg4MTY=", "number": 491, "title": "Any guidance on unit testing?", "user": {"login": "zhm12359", "id": 13496708, "node_id": "MDQ6VXNlcjEzNDk2NzA4", "avatar_url": "https://avatars3.githubusercontent.com/u/13496708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhm12359", "html_url": "https://github.com/zhm12359", "followers_url": "https://api.github.com/users/zhm12359/followers", "following_url": "https://api.github.com/users/zhm12359/following{/other_user}", "gists_url": "https://api.github.com/users/zhm12359/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhm12359/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhm12359/subscriptions", "organizations_url": "https://api.github.com/users/zhm12359/orgs", "repos_url": "https://api.github.com/users/zhm12359/repos", "events_url": "https://api.github.com/users/zhm12359/events{/privacy}", "received_events_url": "https://api.github.com/users/zhm12359/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-14T19:15:03Z", "updated_at": "2020-07-27T16:53:52Z", "closed_at": "2020-07-27T16:53:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nThe python2 environment has appengine testbed. What's the guidance on doing unit testing here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/490", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/490/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/490/events", "html_url": "https://github.com/googleapis/python-ndb/issues/490", "id": 656805668, "node_id": "MDU6SXNzdWU2NTY4MDU2Njg=", "number": 490, "title": "Google App Engine Error - \"Thread  started by this request continued executing past the hard deadline\"", "user": {"login": "cdragos", "id": 298186, "node_id": "MDQ6VXNlcjI5ODE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/298186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdragos", "html_url": "https://github.com/cdragos", "followers_url": "https://api.github.com/users/cdragos/followers", "following_url": "https://api.github.com/users/cdragos/following{/other_user}", "gists_url": "https://api.github.com/users/cdragos/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdragos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdragos/subscriptions", "organizations_url": "https://api.github.com/users/cdragos/orgs", "repos_url": "https://api.github.com/users/cdragos/repos", "events_url": "https://api.github.com/users/cdragos/events{/privacy}", "received_events_url": "https://api.github.com/users/cdragos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-14T18:18:07Z", "updated_at": "2020-07-23T14:30:38Z", "closed_at": "2020-07-23T14:30:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am in the process of migrating to cloud ndb library on python 2.7 and after finalizing all the steps in the migration document I managed to have a local environment that works without any issues. But, after deploying to App engine I am not able to run a simple query to Datastore from the interactive console or from the app itself. \r\n\r\nThe error that I receive is the following:\r\n\r\n```python\r\nThread running after request. Creation traceback:\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/174489198b39d9fb/python27/python27_lib/versions/1/google/appengine/runtime/runtime.py\", line 80, in Run\r\n    target(*args, **kw)\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/174489198b39d9fb/python27/python27_dist/lib/python2.7/threading.py\", line 794, in __bootstrap\r\n    self.__bootstrap_inner()\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/174489198b39d9fb/python27/python27_dist/lib/python2.7/threading.py\", line 821, in __bootstrap_inner\r\n    self.run()\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/174489198b39d9fb/python27/python27_dist/lib/python2.7/threading.py\", line 774, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/174489198b39d9fb/python27/python27_lib/versions/third_party/grpcio-1.0.0/grpc/_channel.py\", line 678, in channel_spin\r\n    event = state.completion_queues[key].poll()\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/174489198b39d9fb/python27/python27_lib/versions/third_party/grpcio-1.0.0/grpc/_plugin_wrapping.py\", line 107, in __call__\r\n    wrapped_context, AuthMetadataPluginCallback(wrapped_cygrpc_callback))\r\n  File \"/base/data/home/apps/h~lionstep-europe/apiqa:qa.428087193949911780/lib/google/auth/transport/grpc.py\", line 87, in __call__\r\n    future = self._pool.submit(self._get_authorization_headers, context)\r\n  File \"/base/data/home/apps/h~lionstep-europe/apiqa:qa.428087193949911780/lib/concurrent/futures/thread.py\", line 137, in submit\r\n    self._adjust_thread_count()\r\n  File \"/base/data/home/apps/h~lionstep-europe/apiqa:qa.428087193949911780/lib/concurrent/futures/thread.py\", line 159, in _adjust_thread_count\r\n    t.start()\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/174489198b39d9fb/python27/python27_dist/lib/python2.7/threading.py\", line 749, in start\r\n    _start_new_thread(self.__bootstrap, ())\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/174489198b39d9fb/python27/python27_lib/versions/1/google/appengine/runtime/runtime.py\", line 83, in StartNewThread\r\n    return base_start_new_thread(Run, ())\r\n```\r\n\r\nThis is true for the app's api and for a simple snippet that I run in the interactive console:\r\n\r\n```python\r\nfrom google.cloud import ndb\r\n\r\n\r\nclass SettingModel(ndb.Model):\r\n    value = ndb.StringProperty()\r\n\r\n\r\nclient = ndb.Client()\r\nwith client.context(namespace='qa'):\r\n   print SettingModel.query().fetch()\r\n```\r\n\r\nApi.yaml sample:\r\n\r\n```yaml\r\nruntime: python27\r\napi_version: 1\r\nthreadsafe: yes\r\nservice: apiqa\r\n\r\nlibraries:\r\n- name: MySQLdb\r\n  version: \"latest\"\r\n- name: ssl\r\n  version: latest\r\n- name: grpcio\r\n  version: 1.0.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/487", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/487/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/487/events", "html_url": "https://github.com/googleapis/python-ndb/issues/487", "id": 655112917, "node_id": "MDU6SXNzdWU2NTUxMTI5MTc=", "number": 487, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332101, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-11T02:01:24Z", "updated_at": "2020-07-11T04:30:14Z", "closed_at": "2020-07-11T04:30:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #486 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/484", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/484/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/484/events", "html_url": "https://github.com/googleapis/python-ndb/issues/484", "id": 653679103, "node_id": "MDU6SXNzdWU2NTM2NzkxMDM=", "number": 484, "title": "Context change loses object identity", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-09T00:36:45Z", "updated_at": "2020-07-24T17:35:20Z", "closed_at": "2020-07-24T17:35:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. This could either be a bug or a question; but when interacting with objects in different contexts, they no longer point to the same object as it is in a single context. Here it is in code:\r\n\r\n(this fails)\r\n```python\r\n   1 from google.cloud import ndb\r\n   2 import redis\r\n   3\r\n   4 redis_client = redis.Redis(host='localhost', port=6379, db=0)\r\n   5\r\n   6 class Attribute(ndb.Model):\r\n   7     status = ndb.TextProperty(default='good', choices=['good', 'bad'])\r\n   8\r\n   9 if __name__ == '__main__':\r\n  10     redis_client.flushdb()\r\n  11     with ndb.Client().context(global_cache=ndb.RedisCache(redis_client)):\r\n  12         [a.key.delete() for a in Attribute.query().fetch()]\r\n  13         attribute = Attribute()\r\n  14         attribute.put()\r\n  15\r\n  16     with ndb.Client().context(global_cache=ndb.RedisCache(redis_client)):\r\n  17         same_attr = Attribute.get_by_id(attribute.key.id())\r\n  18         same_attr.status = 'bad'\r\n  19         same_attr.put()\r\n  20\r\n  21     with ndb.Client().context(global_cache=ndb.RedisCache(redis_client)):\r\n  22         assert attribute.key.get().status == 'bad'\r\n  23         assert attribute.status == 'bad'\r\n```\r\n(i.e. `attribute is not attribute.key.get()`)\r\n\r\n(this passes)\r\n```python\r\n   1 from google.cloud import ndb\r\n   2 import redis\r\n   3\r\n   4 redis_client = redis.Redis(host='localhost', port=6379, db=0)\r\n   5\r\n   6 class Attribute(ndb.Model):\r\n   7     status = ndb.TextProperty(default='good', choices=['good', 'bad'])\r\n   8\r\n   9 if __name__ == '__main__':\r\n  10     redis_client.flushdb()\r\n  11     with ndb.Client().context(global_cache=ndb.RedisCache(redis_client)):\r\n  12         [a.key.delete() for a in Attribute.query().fetch()]\r\n  13         attribute = Attribute()\r\n  14         attribute.put()\r\n  15\r\n  16         same_attr = Attribute.get_by_id(attribute.key.id())\r\n  17         same_attr.status = 'bad'\r\n  18         same_attr.put()\r\n  19\r\n  20         assert attribute.key.get().status == 'bad'\r\n  21         assert attribute.status == 'bad'\r\n```\r\n(i.e. `attribute is attribute.key.get()`)\r\n\r\nIs this by design and are we supposed to have only one context per thread if we do not wish to fetch again? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/482", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/482/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/482/events", "html_url": "https://github.com/googleapis/python-ndb/issues/482", "id": 653232884, "node_id": "MDU6SXNzdWU2NTMyMzI4ODQ=", "number": 482, "title": "Error message disclose cache content", "user": {"login": "rtshadow", "id": 1429654, "node_id": "MDQ6VXNlcjE0Mjk2NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1429654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtshadow", "html_url": "https://github.com/rtshadow", "followers_url": "https://api.github.com/users/rtshadow/followers", "following_url": "https://api.github.com/users/rtshadow/following{/other_user}", "gists_url": "https://api.github.com/users/rtshadow/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtshadow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtshadow/subscriptions", "organizations_url": "https://api.github.com/users/rtshadow/orgs", "repos_url": "https://api.github.com/users/rtshadow/repos", "events_url": "https://api.github.com/users/rtshadow/events{/privacy}", "received_events_url": "https://api.github.com/users/rtshadow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-08T11:49:23Z", "updated_at": "2020-07-10T19:17:32Z", "closed_at": "2020-07-10T19:17:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAfter migration from AppEngine NDB to  Cloud NDB  sometimes we are getting errors like:\r\n```\r\ngoogle.api_core.exceptions.RetryError: Maximum number of 3 retries exceeded while calling functools.partial(<function _transaction_async at 0x3e30c4105cb0>, Context(client=<google.cloud.ndb.client.Client object at 0x3e30c32f0b10>, namespace=None, eventloop=<google.cloud.ndb._eventloop.EventLoop object at 0x3e30c75eaf90>, batches={<class 'google.cloud.ndb._datastore_api._LookupBatch'>: {}}, commit_batches={}, transaction=None, cache={Key('_AE_Pipeline_Record', '28f3ddf2f1f745bc88ebb93bb73294bf'): ...}, global_cache=None, on_commit_callbacks=None, legacy_data=True), <function _PipelineContext.transition_retry.<locals>.txn at 0x3e30c2b21ef0>, read_only=False), last exception: 503 Received RST_STREAM with error code 7\r\nat retry_wrapper (/env/lib/python3.7/site-packages/google/cloud/ndb/_retry.py:87)\r\nat _advance_tasklet (/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py:315)\r\nat check_success (/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py:140)\r\nat result (/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py:193)\r\nat transaction (/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py:72)\r\n...\r\n```\r\n\r\nThe important bit is `cache={Key('_AE_Pipeline_Record', '28f3ddf2f1f745bc88ebb93bb73294bf'): ...}` where all of the entities in the cache are dumped into the error message and find their way to the logs. This is quite a big security issue for us as we have quite permissive access to logs, while access to entities is strictly controlled and there may be some confidential information.\r\n\r\nLib version: google-cloud-ndb==1.3.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/481", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/481/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/481/events", "html_url": "https://github.com/googleapis/python-ndb/issues/481", "id": 651512838, "node_id": "MDU6SXNzdWU2NTE1MTI4Mzg=", "number": 481, "title": "Cannot read entity as PolyModel subclass from LocalStructuredProperty", "user": {"login": "MisarteWork", "id": 58166404, "node_id": "MDQ6VXNlcjU4MTY2NDA0", "avatar_url": "https://avatars1.githubusercontent.com/u/58166404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MisarteWork", "html_url": "https://github.com/MisarteWork", "followers_url": "https://api.github.com/users/MisarteWork/followers", "following_url": "https://api.github.com/users/MisarteWork/following{/other_user}", "gists_url": "https://api.github.com/users/MisarteWork/gists{/gist_id}", "starred_url": "https://api.github.com/users/MisarteWork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MisarteWork/subscriptions", "organizations_url": "https://api.github.com/users/MisarteWork/orgs", "repos_url": "https://api.github.com/users/MisarteWork/repos", "events_url": "https://api.github.com/users/MisarteWork/events{/privacy}", "received_events_url": "https://api.github.com/users/MisarteWork/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2020-07-06T12:51:38Z", "updated_at": "2020-07-31T19:33:34Z", "closed_at": "2020-07-31T19:33:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n1. google-cloud-ndb 1.4.0\r\n2. Python 2.7 (have tested with Python 3 as well)\r\n\r\n#### Steps to reproduce\r\n\r\nThe following test of a LocalStructuredProperty containing a subclass of PolyModel fails with \"AttributeError\", whereas the equivalent test using the old NDB library passes. \r\n\r\nThe value of the LocalStructuredProperty is an instance of the subclass (`Child`), which we are unable to read.\r\n\r\n#### Code example\r\n\r\n```python\r\n# example (using cloud-ndb)\r\nfrom google.cloud import ndb\r\nimport pytest\r\n@pytest.fixture(scope=\"function\")\r\ndef client_context():\r\n    client = ndb.Client()\r\n    with client.context():\r\n        yield\r\nclass Base(ndb.PolyModel):\r\n    pass\r\nclass Child(Base):\r\n    val = ndb.StringProperty()\r\nclass Composite(ndb.Model):\r\n    non_local = ndb.StructuredProperty(Base)\r\n    local = ndb.LocalStructuredProperty(Base)\r\n@pytest.mark.usefixtures('client_context')\r\ndef test():\r\n    c = Composite(non_local=Child(val=\"a\"), local=Child(val=\"b\"))\r\n    c.put()\r\n    c = c.key.get()\r\n\r\n    assert c.non_local.val == \"a\" # True\r\n    assert c.local.val == \"b\" # AttributeError: 'Base' object has no attribute 'val'\r\n```\r\n```python\r\n# example (using old library which works)\r\nfrom google.appengine.ext import ndb, testbed as tb\r\nfrom google.appengine.ext.ndb import polymodel\r\nimport pytest\r\n@pytest.fixture(scope=\"function\")\r\ndef gae():\r\n    testbed = init_testbed()\r\n    yield\r\n    teardown_testbed(testbed)\r\ndef init_testbed():\r\n    testbed = tb.Testbed()\r\n    testbed.activate()\r\n    testbed.init_memcache_stub()\r\n    testbed.init_datastore_v3_stub()\r\n    testbed.init_urlfetch_stub()\r\n    context = ndb.get_context()\r\n    context.set_memcache_policy(False)\r\n    return testbed\r\ndef teardown_testbed(testbed):\r\n    testbed.deactivate()\r\nclass Base(polymodel.PolyModel):\r\n    pass\r\nclass Child(Base):\r\n    val = ndb.StringProperty()\r\nclass Composite(ndb.Model):\r\n    non_local = ndb.StructuredProperty(Base)\r\n    local = ndb.LocalStructuredProperty(Base)\r\n@pytest.mark.usefixtures('gae')\r\ndef test():\r\n    c = Composite(non_local=Child(val=\"a\"), local=Child(val=\"b\"))\r\n    c.put()\r\n    c = c.key.get()\r\n    assert c.non_local.val == \"a\" # True\r\n    assert c.local.val == \"b\" # True\r\n```\r\nTesting the initial example (with new Cloud NDB library) with another test.py using print we receive the screenshot below: \r\n\r\n ```python\r\ndef test():\r\n  c = Composite(non_local=Child(val=\"a\"), local=Child(val=\"b\"))\r\n  \r\n  print c.non_local.__dict__\r\n  print c.local.__dict__\r\n\r\n  c.put()\r\n  c = c.key.get()\r\n\r\n  print c.non_local.__dict__\r\n  print c.local.__dict__\r\n\r\n  assert c.non_local.val == \"a\" # True\r\n  assert c.local.val == \"b\" # AttributeError: 'Base' object has no attribute 'val'\r\n```\r\n![PrintsBefore-After-Put-GetMethods](https://user-images.githubusercontent.com/58166404/86592014-ed902a00-bf92-11ea-9094-1012c373d781.png)\r\n\r\nTesting with Legacy-Data  = False we receive results screenshot below:\r\n\r\n![PrintsLegacyData-False](https://user-images.githubusercontent.com/58166404/86592012-ecf79380-bf92-11ea-83a0-566dcfda568f.png)\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/478", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/478/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/478/events", "html_url": "https://github.com/googleapis/python-ndb/issues/478", "id": 650458004, "node_id": "MDU6SXNzdWU2NTA0NTgwMDQ=", "number": 478, "title": "to_legacy_urlsafe result is incorrect when key has ancestor", "user": {"login": "clhsieh", "id": 3436146, "node_id": "MDQ6VXNlcjM0MzYxNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3436146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clhsieh", "html_url": "https://github.com/clhsieh", "followers_url": "https://api.github.com/users/clhsieh/followers", "following_url": "https://api.github.com/users/clhsieh/following{/other_user}", "gists_url": "https://api.github.com/users/clhsieh/gists{/gist_id}", "starred_url": "https://api.github.com/users/clhsieh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clhsieh/subscriptions", "organizations_url": "https://api.github.com/users/clhsieh/orgs", "repos_url": "https://api.github.com/users/clhsieh/repos", "events_url": "https://api.github.com/users/clhsieh/events{/privacy}", "received_events_url": "https://api.github.com/users/clhsieh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-03T09:07:03Z", "updated_at": "2020-07-23T20:46:03Z", "closed_at": "2020-07-23T20:46:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "By referenced code, it generate urlsafe only using kind and id but not its ancestor, so it is just incorrect\r\nhttps://github.com/googleapis/python-ndb/blob/23b2c90c6cf7afd020799d082cda4d45434146e4/google/cloud/ndb/key.py#L741-L766", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/477", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/477/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/477/events", "html_url": "https://github.com/googleapis/python-ndb/issues/477", "id": 650082211, "node_id": "MDU6SXNzdWU2NTAwODIyMTE=", "number": 477, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332101, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-02T17:03:59Z", "updated_at": "2020-07-10T19:18:06Z", "closed_at": "2020-07-10T17:10:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #465 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/476", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/476/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/476/events", "html_url": "https://github.com/googleapis/python-ndb/issues/476", "id": 650058526, "node_id": "MDU6SXNzdWU2NTAwNTg1MjY=", "number": 476, "title": "Query(namespace='') returns records from wrong namespace", "user": {"login": "anoteboom", "id": 10531111, "node_id": "MDQ6VXNlcjEwNTMxMTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/10531111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anoteboom", "html_url": "https://github.com/anoteboom", "followers_url": "https://api.github.com/users/anoteboom/followers", "following_url": "https://api.github.com/users/anoteboom/following{/other_user}", "gists_url": "https://api.github.com/users/anoteboom/gists{/gist_id}", "starred_url": "https://api.github.com/users/anoteboom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anoteboom/subscriptions", "organizations_url": "https://api.github.com/users/anoteboom/orgs", "repos_url": "https://api.github.com/users/anoteboom/repos", "events_url": "https://api.github.com/users/anoteboom/events{/privacy}", "received_events_url": "https://api.github.com/users/anoteboom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-02T16:21:53Z", "updated_at": "2020-07-14T14:49:17Z", "closed_at": "2020-07-14T14:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm unable to query for records in the default namespace, when i have selected a specific namespace on the context.\r\n\r\nAll requests switch to a context depending on the user.  But some records are stored in the default namespace, because they are for all customers. I cannot access those records.\r\n\r\n\r\n#### Environment details\r\nI'm using python38 on windows\r\ngoogle-cloud-datastore==1.12.0\r\ngoogle-cloud-ndb==1.4.0\r\n\r\n\r\nI have records in the default namespace, and in a namespace for a customer:\r\n\r\n```\r\nclass Customer(ndb.Model):\r\n    name = ndb.StringProperty()\r\nwith client.context():\r\n    # create record in default namespace\r\n    Customer(namespace='', name='customer in defaultnamespace').put()\r\n    # create record in namespace A\r\n    Customer(namespace='A', name='customer in namespace A').put()\r\n```\r\n\r\n```\r\nwith client.context(namespace='A'):\r\n    print(Customer.query().fetch())\r\n    # I receive the records from the namespace selected in the context\r\n    # [Customer(key=Key('Customer', 5740877414662144, namespace='A'), name='customer in namespace A')]\r\n   \r\n\r\n    # read customers from default namespace\r\n    print(dbmodel.Customer.query(namespace='').fetch())\r\n    # **I expect to see records from the default namespace but I receive them from the context namespace.**\r\n    # [Customer(key=Key('Customer', 5740877414662144, namespace='A'), name='customer in namespace A')]\r\n```\r\n\r\nIt seems that somewhere the namespace argument is not correctly checked. It should probably be \r\n```\r\nif namespace is not None\r\n```\r\n\r\nI have the same issue with get_or_insert and get_by_id:  it ignores the argument namespace=''\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/475", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/475/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/475/events", "html_url": "https://github.com/googleapis/python-ndb/issues/475", "id": 649319638, "node_id": "MDU6SXNzdWU2NDkzMTk2Mzg=", "number": 475, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332101, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-01T21:04:29Z", "updated_at": "2020-07-02T06:00:53Z", "closed_at": "2020-07-02T06:00:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #465 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/474", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/474/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/474/events", "html_url": "https://github.com/googleapis/python-ndb/issues/474", "id": 644136032, "node_id": "MDU6SXNzdWU2NDQxMzYwMzI=", "number": 474, "title": "Contradicting behavior in using `query`", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-23T20:48:05Z", "updated_at": "2020-07-15T01:41:25Z", "closed_at": "2020-07-14T20:03:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. \r\n\r\nThis seems to be a problem similar to #441 \r\nIt seems that using _filters_ with `query` still does not return the correct results. Please see the snippet below:\r\n\r\n```python\r\nfrom google.cloud import ndb\r\nimport redis\r\n\r\nredis_client = redis.Redis(host='localhost', port=6379, db=0)\r\n\r\nclass Profile(ndb.Model):\r\n    name = ndb.StringProperty()\r\n\r\nNAME = 'Sam Harris'\r\nif __name__ == '__main__':\r\n    redis_client.flushdb()\r\n    with ndb.Client().context(global_cache=ndb.RedisCache(redis_client)):\r\n        [p.key.delete() for p in Profile.query().fetch()]\r\n\r\n        profile = Profile()\r\n        profile.put()\r\n\r\n        profile.name = NAME\r\n        # uncommenting this will resolve the problem below\r\n        # profile.put()\r\n\r\n        # these two statements check for the same information with contradicting outcomes\r\n        assert Profile.query().fetch()[0].name == NAME\r\n        assert Profile.query(Profile.name == NAME).fetch() != []\r\n``` \r\n\r\nThe failure occurs on the last line. I expect this to be the same `Profile` object as `Profile.query().fetch()[0]`. Also note that `put`ing _after_ updating the `name`, resolves the problem, so I suspect this could be a caching problem. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/471", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/471/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/471/events", "html_url": "https://github.com/googleapis/python-ndb/issues/471", "id": 643164739, "node_id": "MDU6SXNzdWU2NDMxNjQ3Mzk=", "number": 471, "title": "Passing a cursor to ndb on Google App Engine Python 3 leads to an error", "user": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-06-22T15:25:02Z", "updated_at": "2020-07-23T18:24:22Z", "closed_at": "2020-07-23T18:24:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From https://stackoverflow.com/questions/62486629/passing-a-cursor-to-ndb-on-google-app-engine-python-3-leads-to-an-error:\r\n\r\n> **Note:** This is happening on my development server (MAC running Mojave)\r\n> \r\n> I'm running Python 3 on Google App Engine (standard environment) and I have the code below\r\n> \r\n> ```\r\n> cursor = ndb.Cursor(urlsafe = next_page) if next_page else ndb.Cursor()\r\n> q = myObject.query(myObject.link == linkKey).order(-myObject.created)\r\n> resultsFuture = q.fetch_page_async(PAGE_SIZE,start_cursor=cursor)\r\n> ```\r\n> \r\n> If next_page is not None (which means cursor is not None), I get the following error\r\n> \r\n> ```\r\n> Traceback (most recent call last):\r\n>   File .../env/lib/python3.7/site-packages/google/cloud/ndb/_datastore_api.py\", line 92, in rpc_call\r\n>     result = yield rpc\r\n> grpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:\r\n> \tstatus = StatusCode.INVALID_ARGUMENT\r\n> \tdetails = \"Error parsing protocol message\"\r\n> \tdebug_error_string = \"{\"created\":\"<CREATION_TIME>\",\"description\":\"Error received from peer ipv6:<MY_IP_ADDRESS>\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1056,\"grpc_message\":\"Error parsing protocol message\",\"grpc_status\":3}\"\r\n> >\r\n> \r\n> ```\r\n> \r\n> Has anyone encountered this before and if so what was the solution?\r\n> \r\n> If not, can anyone point me to a possible solution?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/468", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/468/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/468/events", "html_url": "https://github.com/googleapis/python-ndb/issues/468", "id": 638055529, "node_id": "MDU6SXNzdWU2MzgwNTU1Mjk=", "number": 468, "title": "google-cloud-ndb 1.3.0 mistakenly includes the tests in the package", "user": {"login": "aetherknight", "id": 62613, "node_id": "MDQ6VXNlcjYyNjEz", "avatar_url": "https://avatars2.githubusercontent.com/u/62613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aetherknight", "html_url": "https://github.com/aetherknight", "followers_url": "https://api.github.com/users/aetherknight/followers", "following_url": "https://api.github.com/users/aetherknight/following{/other_user}", "gists_url": "https://api.github.com/users/aetherknight/gists{/gist_id}", "starred_url": "https://api.github.com/users/aetherknight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aetherknight/subscriptions", "organizations_url": "https://api.github.com/users/aetherknight/orgs", "repos_url": "https://api.github.com/users/aetherknight/repos", "events_url": "https://api.github.com/users/aetherknight/events{/privacy}", "received_events_url": "https://api.github.com/users/aetherknight/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-06-13T00:01:31Z", "updated_at": "2020-06-16T17:35:14Z", "closed_at": "2020-06-16T17:35:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The google-cloud-ndb 1.3.0 package erroneously includes the `tests` directory and files by default in the distribution. This breaks projects that have their own top-level `tests` directory.\r\n\r\nIn one of my company's GAE projects:\r\n\r\n`lib/google_cloud_ndb-1.3.0.dist-info/RECORD`:\r\n\r\n```\r\ngoogle/cloud/ndb/__init__.py,sha256=wyWxiCKJow0LqLx4gWSKk4e9OSM-R6BflnN3UF2hBbU,8076\r\ngoogle/cloud/ndb/__init__.pyc,,\r\ngoogle/cloud/ndb/_batch.py,sha256=JiiddBBt1UfKc35oYKZSK_ydt7-l8MUgajyrk4lhimE,2286\r\ngoogle/cloud/ndb/_batch.pyc,,\r\ngoogle/cloud/ndb/_cache.py,sha256=hDbCSSbsiBYi37u8-WfqIXednLH35P-E5eN7WbEFFhA,11167\r\ngoogle/cloud/ndb/_cache.pyc,,\r\ngoogle/cloud/ndb/_datastore_api.py,sha256=pHoIpFbNZ10CF2pSBg_B-1Nd7D7ABZgV2oDWGgqhnrQ,38437\r\ngoogle/cloud/ndb/_datastore_api.pyc,,\r\ngoogle/cloud/ndb/_datastore_query.py,sha256=Fs-9ZthbOFuyKHMMVAtID_cS8f8cuD8jroAapTc6dYo,29640\r\ngoogle/cloud/ndb/_datastore_query.pyc,,\r\ngoogle/cloud/ndb/_datastore_types.py,sha256=7iGsDd7qsdyhaBNiHap1rZbPMinb4J2Q79-TD6n6-6o,2870\r\ngoogle/cloud/ndb/_datastore_types.pyc,,\r\ngoogle/cloud/ndb/_eventloop.py,sha256=9yrdIKoW58bqmRNogrRdqmTOZhiuPC9cyf0PuzH5Q0I,14838\r\ngoogle/cloud/ndb/_eventloop.pyc,,\r\ngoogle/cloud/ndb/_gql.py,sha256=Z8xY5KEsNcW6fj5E9HycJ-GsHxEkVQWHX77t8Bs4wIA,28817\r\ngoogle/cloud/ndb/_gql.pyc,,\r\ngoogle/cloud/ndb/_options.py,sha256=1reZkguYguvo9rwTWC994hCKU0c9FTXGGgEyukZTmFI,7338\r\ngoogle/cloud/ndb/_options.pyc,,\r\ngoogle/cloud/ndb/_remote.py,sha256=Q6RM_wRFQjM8bzf5-5BHN2tuYGWv0OJlQlZPu1IL7dc,2591\r\ngoogle/cloud/ndb/_remote.pyc,,\r\ngoogle/cloud/ndb/_retry.py,sha256=vVHI2BCgHtGQmu2ZyQqnMcuGNZ5MPRhfQGOC1JD1qLc,4190\r\ngoogle/cloud/ndb/_retry.pyc,,\r\ngoogle/cloud/ndb/_transaction.py,sha256=_NXgaJYBhmBjT-EcFDL6_vgcmhZlsL0Y7cx6nMeC5Ck,11067\r\ngoogle/cloud/ndb/_transaction.pyc,,\r\ngoogle/cloud/ndb/blobstore.py,sha256=Xnp4LAZi77xZW7vEY5vY-Rusd1SbjmU8cKnsytK3bSg,4382\r\ngoogle/cloud/ndb/blobstore.pyc,,\r\ngoogle/cloud/ndb/client.py,sha256=Rw5LmzOzJeRFbqXxS68JWI82Si3ro3PXfwDg0apHTlw,8017\r\ngoogle/cloud/ndb/client.pyc,,\r\ngoogle/cloud/ndb/context.py,sha256=Dn-9Ip9W3YV1vC24bzTE7Rj7OmIGADPeXGKxF1oWzMg,18263\r\ngoogle/cloud/ndb/context.pyc,,\r\ngoogle/cloud/ndb/django_middleware.py,sha256=AQyxxLhcqbijAC9tNQKXgby9kLtSbR6NH6E0iatny4E,761\r\ngoogle/cloud/ndb/django_middleware.pyc,,\r\ngoogle/cloud/ndb/exceptions.py,sha256=VoMpluYbgnFq7MjkTuDTxJ46M_XdbGoEN1kEJtCTvfM,3793\r\ngoogle/cloud/ndb/exceptions.pyc,,\r\ngoogle/cloud/ndb/global_cache.py,sha256=6gXFRUZuQTF3zj2WxOuFq0OyJ_ep8blq0_yhl4c3X5Q,8854\r\ngoogle/cloud/ndb/global_cache.pyc,,\r\ngoogle/cloud/ndb/key.py,sha256=zwcqTTHkmZ2Fljz5FLq4nFCDCYQuutlTxHJcKme6qUg,56278\r\ngoogle/cloud/ndb/key.pyc,,\r\ngoogle/cloud/ndb/metadata.py,sha256=mblg7AbTLdTWQfzK8Qlmvt2c6gK4-p9-UijOWxELPcg,11098\r\ngoogle/cloud/ndb/metadata.pyc,,\r\ngoogle/cloud/ndb/model.py,sha256=qIOCSDtb0bU3ZwimQvSwq-4BxwEip1TH2W-RN4dM12k,230085\r\ngoogle/cloud/ndb/model.pyc,,\r\ngoogle/cloud/ndb/msgprop.py,sha256=ZNsWMd0FoOHJWhDZGN6z5TQQECfF1DA2GEuseLlK4-A,900\r\ngoogle/cloud/ndb/msgprop.pyc,,\r\ngoogle/cloud/ndb/polymodel.py,sha256=mrpTI6lWOibxpw3AJ7PEiPuqFGJ6c3p-4DE1lWx66WA,9166\r\ngoogle/cloud/ndb/polymodel.pyc,,\r\ngoogle/cloud/ndb/query.py,sha256=EigEqkaV-EXgb6ta0NbllDnk6aQVbeLl6YP-EgGg-XE,85496\r\ngoogle/cloud/ndb/query.pyc,,\r\ngoogle/cloud/ndb/stats.py,sha256=2Qa2HlDeSOv-H4w0_5TrWm7gVyT-bqOWysDrV_iq288,15719\r\ngoogle/cloud/ndb/stats.pyc,,\r\ngoogle/cloud/ndb/tasklets.py,sha256=k_LP35VqXWv6bleOCa93WiovJlOZQnYUWkYZqNdi2zI,20837\r\ngoogle/cloud/ndb/tasklets.pyc,,\r\ngoogle/cloud/ndb/utils.py,sha256=6707JSwOdTnOfOB3xkKqh43qRT2UDF45uwzu_-JmVKA,3583\r\ngoogle/cloud/ndb/utils.pyc,,\r\ngoogle_cloud_ndb-1.3.0-py2.7-nspkg.pth,sha256=b0D5dZk3RUzK54tZ9iZDvLm7u8ltc5EzYrGCmhsuoNw,1698\r\ngoogle_cloud_ndb-1.3.0.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4\r\ngoogle_cloud_ndb-1.3.0.dist-info/METADATA,sha256=cq1XaxDRPjO-VWfU7tSMJK6zCR0zvTrqsR3zo57CLU8,1881\r\ngoogle_cloud_ndb-1.3.0.dist-info/RECORD,,\r\ngoogle_cloud_ndb-1.3.0.dist-info/WHEEL,sha256=CbUdLTqD3-4zWemf83rgR_2_MC4TeXw9qXwrXte5w4w,92\r\ngoogle_cloud_ndb-1.3.0.dist-info/namespace_packages.txt,sha256=v8IaYqRE2a0onAGJIpZeFkkH83wXSWZRR9eOyfMwoTc,20\r\ngoogle_cloud_ndb-1.3.0.dist-info/top_level.txt,sha256=XarrBGDrEf3IydJJqymypTtsOUlvmz2_z9gtNrS-TfA,13\r\ntests/__init__.py,sha256=rdttj_i0e4IpRZYX9oZSTs5AnjAW4Zl__BoNHfUUHpU,575\r\ntests/__init__.pyc,,\r\ntests/conftest.py,sha256=RyN_DL0Qh4-6R0oTtAXQnEvdvXIzm93SUwSize2vKkE,3437\r\ntests/conftest.pyc,,\r\ntests/system/__init__.py,sha256=3xc-i1WqnsVJ_nb0GHkTBkImpQ8L4_N_BNA3zfmNQtA,3023\r\ntests/system/__init__.pyc,,\r\ntests/system/conftest.py,sha256=2u6SFPjbhDD2Mc04GZDr6lmX-FszN69nzRhBOLzcSLs,3270\r\ntests/system/conftest.pyc,,\r\ntests/system/test_crud.py,sha256=nSrGhji5oqcOUXyj10yf2A-9rqnoWMDTUQn3RS5_6cw,41651\r\ntests/system/test_crud.pyc,,\r\ntests/system/test_metadata.py,sha256=Ux3p4GbBOKcKyEVzdRfGpGI2NG5CtMDSy6Q5Ur4P1pM,8731\r\ntests/system/test_metadata.pyc,,\r\ntests/system/test_misc.py,sha256=4LQI_9-_pxYtOoG7hMxtrXhdQtC_I9-DvFeHZlliN3k,7489\r\ntests/system/test_misc.pyc,,\r\ntests/system/test_query.py,sha256=47blaFOMSH9CWucqKb2OvOHNvMl_qjyu1P1_GU4pDkE,52780\r\ntests/system/test_query.pyc,,\r\ntests/unit/__init__.py,sha256=rdttj_i0e4IpRZYX9oZSTs5AnjAW4Zl__BoNHfUUHpU,575\r\ntests/unit/__init__.pyc,,\r\ntests/unit/test__batch.py,sha256=JzhAqdhgppOAWcviy02ogZNnDyV7SJb3MTW9i2hhi4E,1648\r\ntests/unit/test__batch.pyc,,\r\ntests/unit/test__cache.py,sha256=GyHZhlU9skVltCgADW6jsB5JrhrFDJ7RqN2-qMYSnrw,12034\r\ntests/unit/test__cache.pyc,,\r\ntests/unit/test__datastore_api.py,sha256=6x1k0srtnW02J-cHAgIhVagbry46AvBHEr5ctD6aDNo,51468\r\ntests/unit/test__datastore_api.pyc,,\r\ntests/unit/test__datastore_query.py,sha256=xsNhjZL3LMmA4UYl9a1TLs-nMUpaYUTbixUko12hp0g,49433\r\ntests/unit/test__datastore_query.pyc,,\r\ntests/unit/test__datastore_types.py,sha256=vIF3CaT_x1hXMaBo8isrcQajUBiNzYhD-hO6QTPf464,2660\r\ntests/unit/test__datastore_types.pyc,,\r\ntests/unit/test__eventloop.py,sha256=UI7zbCSZt4DM5gnHunhesHFlQ70nrkr2INzXigbC6J4,12004\r\ntests/unit/test__eventloop.pyc,,\r\ntests/unit/test__gql.py,sha256=CHDSjRJuKxy3zmLYrJPKlkzvoD3gvfdhZZuY8ykrawU,24075\r\ntests/unit/test__gql.pyc,,\r\ntests/unit/test__options.py,sha256=NNrw8mE_uBTcfuXjlX5LeVy733m8A83WXW7jxtV9QVs,6172\r\ntests/unit/test__options.pyc,,\r\ntests/unit/test__remote.py,sha256=4WFsZFnvkk-dI59y0pW_mSJ2phYugok5ZvYrUTFmPx0,2878\r\ntests/unit/test__remote.pyc,,\r\ntests/unit/test__retry.py,sha256=bPkl3BUC-ReZGM-L0wNv17yxVrem8QROqDYM5VZNCNY,6338\r\ntests/unit/test__retry.pyc,,\r\ntests/unit/test__transaction.py,sha256=udq8ZZruA6AgKyTUvnt-1ee1Si_QskeFEU16pW4-Hm0,14967\r\ntests/unit/test__transaction.pyc,,\r\ntests/unit/test_blobstore.py,sha256=Oy77jl_zmNvtEvEgaWzedOnmOaby1-5slCqzNKnO28c,4576\r\ntests/unit/test_blobstore.pyc,,\r\ntests/unit/test_client.py,sha256=6S0dpi069p55n9DB9S20RieUPaikhKJSN3f2B5JoA50,4773\r\ntests/unit/test_client.pyc,,\r\ntests/unit/test_context.py,sha256=RwuCOMJ-Igk8t0iBqj2qskaM3X9g1qt7f4XXTH_W2sk,18234\r\ntests/unit/test_context.pyc,,\r\ntests/unit/test_django_middleware.py,sha256=IoNUgq0M3Da2XQ1WVTulBWqxdC4LhIdV02RggFwJFLI,919\r\ntests/unit/test_django_middleware.pyc,,\r\ntests/unit/test_global_cache.py,sha256=cxJMKNoiLSR_dt6xscncfW3IjwojJiEQtnEh_f5HbFA,10465\r\ntests/unit/test_global_cache.pyc,,\r\ntests/unit/test_key.py,sha256=b63VWsOUsIw6vebyn7CqqEiitp5UOqxEN_L4cwugwTU,33976\r\ntests/unit/test_key.pyc,,\r\ntests/unit/test_metadata.py,sha256=X99z3_1kQQIfwZr27NWAamJqLnpRHDoao_kkxcx5bG8,12515\r\ntests/unit/test_metadata.pyc,,\r\ntests/unit/test_model.py,sha256=t7H-kjN2bRH3EDkDmFwHuL-IF44VPv2Ya3H6JGE3SaY,195950\r\ntests/unit/test_model.pyc,,\r\ntests/unit/test_msgprop.py,sha256=0kX-HuGfxmAWIqd8u8JzlSWrA9sEXqljZk-O4wan0Xs,1037\r\ntests/unit/test_msgprop.pyc,,\r\ntests/unit/test_polymodel.py,sha256=TasgMXVZOqSNsLi7WM-thDNXmmyA1AR40LCz-byzMB0,3352\r\ntests/unit/test_polymodel.pyc,,\r\ntests/unit/test_query.py,sha256=fTlZIhpjoLm-KxXdLRUH5eInHL8iAdQKwJSXDYU4H1M,88687\r\ntests/unit/test_query.pyc,,\r\ntests/unit/test_stats.py,sha256=kX6YFTAOFO-vaXcuPS_DXEPL3LZNpOLzbULR1kMIsP8,13378\r\ntests/unit/test_stats.pyc,,\r\ntests/unit/test_tasklets.py,sha256=-3vROz8Bhxso0VQ7IZsZUZT_1NWUJD6T8xtI-nW5Epk,22868\r\ntests/unit/test_tasklets.pyc,,\r\ntests/unit/test_utils.py,sha256=_ruJ_8ujowrjfH_vH-4sezARkdDFkbf2GRQPyYPDWSo,2482\r\ntests/unit/test_utils.pyc,,\r\ntests/unit/utils.py,sha256=HPAHOOPpkSqLjfmMyFH9b-0xOzKHD3jhEnNMWeC3GL0,1296\r\ntests/unit/utils.pyc,,\r\n```\r\n\r\nThis results in our own `tests` module/package breaking because the vendored `tests` hides our tests from Python's importing mechanism.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/466", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/466/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/466/events", "html_url": "https://github.com/googleapis/python-ndb/issues/466", "id": 631761510, "node_id": "MDU6SXNzdWU2MzE3NjE1MTA=", "number": 466, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332101, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-05T17:03:54Z", "updated_at": "2020-06-05T17:47:02Z", "closed_at": "2020-06-05T17:47:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #456 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/462", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/462/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/462/events", "html_url": "https://github.com/googleapis/python-ndb/issues/462", "id": 631000423, "node_id": "MDU6SXNzdWU2MzEwMDA0MjM=", "number": 462, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332101, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-04T17:03:10Z", "updated_at": "2020-06-05T04:28:35Z", "closed_at": "2020-06-05T04:28:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #456 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/461", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/461/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/461/events", "html_url": "https://github.com/googleapis/python-ndb/issues/461", "id": 630792482, "node_id": "MDU6SXNzdWU2MzA3OTI0ODI=", "number": 461, "title": "Model fetching wrong paramethers if names overlap", "user": {"login": "Lukasz-Gillner", "id": 65959113, "node_id": "MDQ6VXNlcjY1OTU5MTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/65959113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasz-Gillner", "html_url": "https://github.com/Lukasz-Gillner", "followers_url": "https://api.github.com/users/Lukasz-Gillner/followers", "following_url": "https://api.github.com/users/Lukasz-Gillner/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasz-Gillner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasz-Gillner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasz-Gillner/subscriptions", "organizations_url": "https://api.github.com/users/Lukasz-Gillner/orgs", "repos_url": "https://api.github.com/users/Lukasz-Gillner/repos", "events_url": "https://api.github.com/users/Lukasz-Gillner/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasz-Gillner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-04T12:49:31Z", "updated_at": "2020-06-16T20:09:02Z", "closed_at": "2020-06-16T20:09:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. \r\nRecently I encountered the following error.\r\nIf our datastore contains a kind with 2 some properties lets call them bar and baz and we define a property as follows where the code name is the same as a property in datastore but is not mapped to it eg.\r\n\r\nclass PartialModel(ndb.Model):\r\n    bar = ndb.StringProperty('baz')\r\n\r\nif we try to get the value of partial_model.bar we get the variable stored in the bar property of the entity (the name baz gets ignored)\r\n\r\nBelow is an example code showing the error.\r\n```\r\nfrom google.cloud import datastore\r\nfrom google.cloud import ndb\r\n\r\n\r\nclass PartialModel(ndb.Model):\r\n    @classmethod\r\n    def _get_kind(cls):\r\n        return \"TestKind\"\r\n\r\n    bar = ndb.IntegerProperty('baz')\r\n\r\n\r\ndef put_entity():\r\n\t// Making the entity using another model fixes the error\r\n\t// so to test it we have to avoid creating another model for the same kind\r\n    datastore_client = datastore.Client()\r\n    task_key = datastore_client.key('TestKind', 1)\r\n    entity = datastore.Entity(key=task_key)\r\n    entity['baz'] = 2\r\n    entity['bar'] = 1\r\n    datastore_client.put(entity)\r\n\r\n\r\ndef test_error():\r\n    put_entity()\r\n    partial = PartialModel.get_by_id(1)\r\n    assert partial.bar == 2\r\n\t// partial.bar is read as 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/460", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/460/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/460/events", "html_url": "https://github.com/googleapis/python-ndb/issues/460", "id": 630167195, "node_id": "MDU6SXNzdWU2MzAxNjcxOTU=", "number": 460, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1401957140, "node_id": "MDU6TGFiZWwxNDAxOTU3MTQw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/autorelease:%20closed", "name": "autorelease: closed", "color": "ededed", "default": false, "description": null}, {"id": 1345332101, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-03T17:03:03Z", "updated_at": "2020-06-04T03:36:06Z", "closed_at": "2020-06-04T03:36:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #456 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/459", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/459/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/459/events", "html_url": "https://github.com/googleapis/python-ndb/issues/459", "id": 629512847, "node_id": "MDU6SXNzdWU2Mjk1MTI4NDc=", "number": 459, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332101, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-02T21:02:55Z", "updated_at": "2020-06-03T07:00:09Z", "closed_at": "2020-06-03T07:00:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #456 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/449", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/449/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/449/events", "html_url": "https://github.com/googleapis/python-ndb/issues/449", "id": 624927603, "node_id": "MDU6SXNzdWU2MjQ5Mjc2MDM=", "number": 449, "title": "StructuredProperty not using correct names when generating queries.", "user": {"login": "Lukasz-Gillner", "id": 65959113, "node_id": "MDQ6VXNlcjY1OTU5MTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/65959113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasz-Gillner", "html_url": "https://github.com/Lukasz-Gillner", "followers_url": "https://api.github.com/users/Lukasz-Gillner/followers", "following_url": "https://api.github.com/users/Lukasz-Gillner/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasz-Gillner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasz-Gillner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasz-Gillner/subscriptions", "organizations_url": "https://api.github.com/users/Lukasz-Gillner/orgs", "repos_url": "https://api.github.com/users/Lukasz-Gillner/repos", "events_url": "https://api.github.com/users/Lukasz-Gillner/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasz-Gillner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-26T14:28:43Z", "updated_at": "2020-05-29T13:24:20Z", "closed_at": "2020-05-29T13:24:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I encountered an issue while migrating to cloud ndb. When querying entities based on a value contained in a StructuredProperty the structured property does not use code name but uses the datastore name instead. Below is a short code to replicate the issue\r\n\r\n```\r\nfrom google.cloud import ndb\r\n\r\nclass StructPropModel(ndb.Model):\r\n    code_name = ndb.IntegerProperty('datastore_name')\r\n\r\nclass EntityModel(ndb.Model):\r\n    structured_variable = ndb.StructuredProperty(StructPropModel)\r\n\r\ndef test_error():\r\n    test_entity = EntityModel()\r\n    test_entity.structured_variable = StructPropModel(code_name=1)\r\n    test_entity.put()\r\n    results = EntityModel.query(EntityModel.structured_variable.code_name == 1).count()\r\n    # Raises\r\n    # AttributeError: Model subclass StructPropModel has no attribute code_name\r\n```\r\n\r\nFor completeness sake, the issue occurred on python 2.7 using google-cloud-ndb 1.2.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/447", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/447/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/447/events", "html_url": "https://github.com/googleapis/python-ndb/issues/447", "id": 624186696, "node_id": "MDU6SXNzdWU2MjQxODY2OTY=", "number": 447, "title": "count() fails if order_by present in a query", "user": {"login": "rtshadow", "id": 1429654, "node_id": "MDQ6VXNlcjE0Mjk2NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1429654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtshadow", "html_url": "https://github.com/rtshadow", "followers_url": "https://api.github.com/users/rtshadow/followers", "following_url": "https://api.github.com/users/rtshadow/following{/other_user}", "gists_url": "https://api.github.com/users/rtshadow/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtshadow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtshadow/subscriptions", "organizations_url": "https://api.github.com/users/rtshadow/orgs", "repos_url": "https://api.github.com/users/rtshadow/repos", "events_url": "https://api.github.com/users/rtshadow/events{/privacy}", "received_events_url": "https://api.github.com/users/rtshadow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-25T09:52:59Z", "updated_at": "2020-05-27T18:38:05Z", "closed_at": "2020-05-27T18:38:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\nBoth AppEngine Standard python 2.7 and local dev_appserver (Google Cloud SDK 292.0.0)\r\npython-ndb==1.2.1\r\n\r\n#### Steps to reproduce\r\n\r\n1. Create a query where you specify `order_by`. In my case: `Query(kind='BaseTaskTemplate', filters=OR(FilterNode('ownerGroup', '=', u'E2E'), FilterNode('isPublic', '=', True)), order_by=[PropertyOrder(name='namespace', reverse=False), PropertyOrder(name='name', reverse=False)])`\r\n2. observe `.fetch()` works as expected\r\n3. `.count()` fails with `ValueError('Value protobuf did not have any value set',)`\r\n4. If you remove `order_by` from query, the count works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/445", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/445/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/445/events", "html_url": "https://github.com/googleapis/python-ndb/issues/445", "id": 623808789, "node_id": "MDU6SXNzdWU2MjM4MDg3ODk=", "number": 445, "title": "Transactional Enqueuing", "user": {"login": "ShahzadUmair", "id": 26878498, "node_id": "MDQ6VXNlcjI2ODc4NDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/26878498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShahzadUmair", "html_url": "https://github.com/ShahzadUmair", "followers_url": "https://api.github.com/users/ShahzadUmair/followers", "following_url": "https://api.github.com/users/ShahzadUmair/following{/other_user}", "gists_url": "https://api.github.com/users/ShahzadUmair/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShahzadUmair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShahzadUmair/subscriptions", "organizations_url": "https://api.github.com/users/ShahzadUmair/orgs", "repos_url": "https://api.github.com/users/ShahzadUmair/repos", "events_url": "https://api.github.com/users/ShahzadUmair/events{/privacy}", "received_events_url": "https://api.github.com/users/ShahzadUmair/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-24T06:56:08Z", "updated_at": "2020-05-24T09:46:31Z", "closed_at": "2020-05-24T09:43:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWe wish to migrate our app from python2 to python3 and we heavily rely on transactional enqueuing. The migration doc does not explain how this might work with cloud ndb and tasks. \r\n\r\n **Describe the solution you'd like**\r\nThere should be some way of attaching actions with the transaction with or without limit of allowed actions. \r\n\r\n **Describe alternatives you've considered**\r\nWe considered storing the tasks in datastore during the transaction and dequeue later to run when transaction is completed but that seems to consume an entity group (25 entity group limit) which is not feasible either in our case. \r\n\r\n **Additional context**\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/448", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/448/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/448/events", "html_url": "https://github.com/googleapis/python-ndb/issues/448", "id": 624756152, "node_id": "MDU6SXNzdWU2MjQ3NTYxNTI=", "number": 448, "title": "one call to put produces two entities in ndb database python", "user": {"login": "someuser-source", "id": 60705536, "node_id": "MDQ6VXNlcjYwNzA1NTM2", "avatar_url": "https://avatars0.githubusercontent.com/u/60705536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/someuser-source", "html_url": "https://github.com/someuser-source", "followers_url": "https://api.github.com/users/someuser-source/followers", "following_url": "https://api.github.com/users/someuser-source/following{/other_user}", "gists_url": "https://api.github.com/users/someuser-source/gists{/gist_id}", "starred_url": "https://api.github.com/users/someuser-source/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/someuser-source/subscriptions", "organizations_url": "https://api.github.com/users/someuser-source/orgs", "repos_url": "https://api.github.com/users/someuser-source/repos", "events_url": "https://api.github.com/users/someuser-source/events{/privacy}", "received_events_url": "https://api.github.com/users/someuser-source/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-22T21:15:28Z", "updated_at": "2020-05-27T22:15:03Z", "closed_at": "2020-05-27T22:15:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "although checking the network suggests that a call to this code User.createUser(idstuff) (below) is only being made once\r\n\r\n```\r\nfrom google.cloud import ndb\r\nfrom datetime import datetime\r\n\r\nclass User(ndb.Model):\r\n\tcreation_date = ndb.DateProperty()\r\n\tuser_id = ndb.StringProperty()\r\n\r\n\t@classmethod\r\n\tdef createUser(cls, user_id):\r\n\t\tnewDude = User(\r\n\t\t\tuser_id=user_id,\r\n\t\t\tcreation_date=datetime.utcnow()\r\n\t\t)\r\n\t\tnewDude.put()\r\n```\r\n\r\nit ends up in the database twice.\r\n\r\n![Screen Shot 2020-05-22 at 5 14 40 PM](https://user-images.githubusercontent.com/60705536/82709968-c7ffc900-9c4f-11ea-975c-0c65e3d4703f.png)\r\n\r\n\r\nI see this happen all the time in every app engine project I make,  and it always drives me insane. \r\n\r\nHow do I make this unwanted duplication go away?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/442", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/442/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/442/events", "html_url": "https://github.com/googleapis/python-ndb/issues/442", "id": 622497716, "node_id": "MDU6SXNzdWU2MjI0OTc3MTY=", "number": 442, "title": "python-ndb should use fixed logger name", "user": {"login": "rtshadow", "id": 1429654, "node_id": "MDQ6VXNlcjE0Mjk2NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1429654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtshadow", "html_url": "https://github.com/rtshadow", "followers_url": "https://api.github.com/users/rtshadow/followers", "following_url": "https://api.github.com/users/rtshadow/following{/other_user}", "gists_url": "https://api.github.com/users/rtshadow/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtshadow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtshadow/subscriptions", "organizations_url": "https://api.github.com/users/rtshadow/orgs", "repos_url": "https://api.github.com/users/rtshadow/repos", "events_url": "https://api.github.com/users/rtshadow/events{/privacy}", "received_events_url": "https://api.github.com/users/rtshadow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345320591, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTkx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-21T13:25:49Z", "updated_at": "2020-05-29T12:10:04Z", "closed_at": "2020-05-29T12:10:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nWe have observed that after migration from AppEngine NDB to Cloud NDB, all the datastore query results are being logged with DEBUG level to Cloud Logging. I was able to turn the logging off by doing:\r\n`logging.getLogger(\"google.cloud.ndb._datastore_api\").setLevel(logging.WARNING)\r\n        logging.getLogger(\"google.cloud.ndb._datastore_query\").setLevel(logging.WARNING)`,\r\nbut I'm worried that logger names are tied to specific file names. If you change the filename in next releases or start logging from a different place, my fix will stop working and the entities will show up in the logs (and I may not even notice that).\r\n\r\nWhy is that important to me? Our datastore entities may contain confidential data and as such should never be dumped into logs, where we have quite permissive access.\r\n\r\nProposed solution: use fixed logger name everywhere, like \"google-cloud-ndb\". This would allow me to turn off the logging with a single line:\r\n`logging.getLogger(\"google-cloud-ndb\").setLevel(logging.WARNING)` and not worry whether new release will break it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/441", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/441/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/441/events", "html_url": "https://github.com/googleapis/python-ndb/issues/441", "id": 622234764, "node_id": "MDU6SXNzdWU2MjIyMzQ3NjQ=", "number": 441, "title": "Model not updating after `put` if Query is used", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-05-21T04:17:37Z", "updated_at": "2020-05-31T00:16:05Z", "closed_at": "2020-05-30T02:42:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello again, I found what seems to be a bug, here is a test:\r\n\r\n```python\r\nfrom google.cloud import ndb\r\n\r\nclass Profile(ndb.Model):\r\n    name = ndb.TextProperty()\r\n    book = ndb.TextProperty()\r\n\r\nclass SomeKind:\r\n    def __init__(self, profile):\r\n        self.profile = profile\r\n\r\ndef init():\r\n    profile = Profile(name='Annaka Harris')\r\n    profile.put()\r\n    return profile.key, SomeKind(profile)\r\n\r\nif __name__ == '__main__':\r\n    with ndb.Client().context():\r\n        key, somek = init()\r\n\r\n        # Different behavior based on how we query\r\n        # ours = Profile.get_by_id(key.id())\r\n        # ours = key.get()\r\n        ours = [x for x in ndb.Query(kind='Profile').fetch() if x.key == key][0]\r\n\r\n        ours.book = 'Conscious'\r\n        print('putting: ', ours)\r\n        ours.put()\r\n\r\n        print('getting: ', somek.profile)\r\n        assert somek.profile.book == 'Conscious'\r\n```\r\n\r\nNotes: basically, if we `get` the model using either `get_by_id` or `key.get()`, then the entity on `SomeKind` will also update; however, if I use `ndb.Query`, it will not. Previously all worked. You may uncomment different approaches to compare.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/439", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/439/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/439/events", "html_url": "https://github.com/googleapis/python-ndb/issues/439", "id": 620692414, "node_id": "MDU6SXNzdWU2MjA2OTI0MTQ=", "number": 439, "title": "Datastore writing to default namespace", "user": {"login": "krishhteja", "id": 8438143, "node_id": "MDQ6VXNlcjg0MzgxNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8438143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krishhteja", "html_url": "https://github.com/krishhteja", "followers_url": "https://api.github.com/users/krishhteja/followers", "following_url": "https://api.github.com/users/krishhteja/following{/other_user}", "gists_url": "https://api.github.com/users/krishhteja/gists{/gist_id}", "starred_url": "https://api.github.com/users/krishhteja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krishhteja/subscriptions", "organizations_url": "https://api.github.com/users/krishhteja/orgs", "repos_url": "https://api.github.com/users/krishhteja/repos", "events_url": "https://api.github.com/users/krishhteja/events{/privacy}", "received_events_url": "https://api.github.com/users/krishhteja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-05-19T05:37:03Z", "updated_at": "2020-05-27T19:23:15Z", "closed_at": "2020-05-27T19:15:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to write data to datastore, it writes to default namespace even when namespace is specified in entity. Writing to correct namespaces was fine until 14 May, 2020. Can you help me know if something needs to be changed?\r\n\r\nSample code\r\n```\r\nfrom google.cloud import ndb\r\nclient = ndb.Client()\r\n\r\nclass ActiveTokens(ndb.Model):\r\n    _memcache_timeout = 60\r\n    namespace = user_namespace\r\n    username = ndb.StringProperty(required=True, indexed=True)\r\n    token = ndb.StringProperty(required=True, indexed=True)\r\n    expiry = ndb.IntegerProperty(required=True)\r\n    otp = ndb.IntegerProperty(indexed=True)\r\n    created = ndb.DateTimeProperty(auto_now_add=True, required=True, indexed=True)\r\n    edited = ndb.DateTimeProperty(auto_now=True, required=True)\r\n\r\n    @classmethod\r\n    def store(cls, username, token, expiry, otp):\r\n        with client.context():\r\n            obj = ActiveTokens(username=username,\r\n                                    token=token,\r\n                                    expiry=expiry,\r\n                                    otp=otp,\r\n                                    namespace='user'\r\n                                    )\r\n            return obj.put().id()\r\n```\r\ncloud-ndb version 1.2.1 seems to have issues. Downgrading to 1.1.2 seems to work fine", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/438", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/438/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/438/events", "html_url": "https://github.com/googleapis/python-ndb/issues/438", "id": 620623368, "node_id": "MDU6SXNzdWU2MjA2MjMzNjg=", "number": 438, "title": "Question: fetch_page filters", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1241750568, "node_id": "MDU6TGFiZWwxMjQxNzUwNTY4", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}, {"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-19T02:14:10Z", "updated_at": "2020-05-20T00:38:53Z", "closed_at": "2020-05-20T00:38:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I am facing a problem that I cannot use certain filters with `fetch_page`, in particular [this](https://github.com/googleapis/python-ndb/blob/master/google/cloud/ndb/query.py#L2242-L2245).\r\n\r\nThe code I am working with is using these filters. I can do these filterings on the application layer but I was really curious what the context is around this, does the datastore not support this anymore? is this an NDB only decision? and if possible, why was this decision made? Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/437", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/437/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/437/events", "html_url": "https://github.com/googleapis/python-ndb/issues/437", "id": 620523147, "node_id": "MDU6SXNzdWU2MjA1MjMxNDc=", "number": 437, "title": "LocalStructuredProperty cross-compatibility issues w/ Legacy", "user": {"login": "safetymonkey", "id": 187912, "node_id": "MDQ6VXNlcjE4NzkxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/187912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/safetymonkey", "html_url": "https://github.com/safetymonkey", "followers_url": "https://api.github.com/users/safetymonkey/followers", "following_url": "https://api.github.com/users/safetymonkey/following{/other_user}", "gists_url": "https://api.github.com/users/safetymonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/safetymonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/safetymonkey/subscriptions", "organizations_url": "https://api.github.com/users/safetymonkey/orgs", "repos_url": "https://api.github.com/users/safetymonkey/repos", "events_url": "https://api.github.com/users/safetymonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/safetymonkey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2020-05-18T21:41:18Z", "updated_at": "2020-07-10T04:40:54Z", "closed_at": "2020-07-10T04:40:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The below model is for a messaging system within a game; the parent class is for threads and it has individual messages as a LocalStructuredProperty. This issue cropped up when we started dialing our new cloud-ndb version up slowly; it appears that legacy NDB and cloud-ndb are not playing nicely with each other when reading/writing the same records.\r\n\r\nIt looks like cloud-ndb reads legacy LSPs with `None` values, and when writing to the record it's saving those `None`s. Legacy appears to have some kind of error *reading* cloud-ndb LSPs, but can somehow *save* them successfully.\r\n\r\n#### Environment details\r\n\r\n1. google-cloud-ndb 1.2.0\r\n2. macOS 10.15.4\r\n3. Python 2.7.12\r\n\r\n#### Steps to reproduce\r\n\r\nI ran the the following tests with threads created in both the legacy-ndb and cloud-ndb versions of our code. I've verified there is no difference in either the model or controller related to these files. Please note that when I say `None` here, I mean that I'm seeing `None` for all three properties of the `MessageThreadMessage`.\r\n> \"Message\" == I see the message exactly as originally written\r\n> \"None\" ==  Python `None` value\r\n> \"Missing\" == Message entry doesn't appear at all.\r\n\r\n*Thread created on Legacy*\r\nMessage # | Sent from | Legacy NDB sees | Cloud NDB sees\r\n--------- | --------- | --------------- | --------------\r\n1 | legacy | (1) Message | (1) None\r\n2 | legacy | (1) Message (2) Message | (1) None (2) None\r\n3 | cloud-ndb | (1) Message (2) Message (3) Missing | (1) None (2) None (3) Message\r\n4 | cloud-ndb | (1) Message (2) Message (3) Missing (4) Missing | (1) None (2) None (3) Message (4) Message\r\n5 | legacy | (1) None (2) None (3) Message (4) Message (5) Message | (1) None (2) None (3) None (4) None (5) None\r\n\r\n*Thread created on Cloud NDB*\r\nMessage # | Sent from | Legacy NDB sees | Cloud NDB sees\r\n--------- | --------- | --------------- | --------------\r\n1 | cloud-ndb | (1) Message | (1) Message\r\n2 | cloud-ndb | (1) Message (2) Missing | (1) Message (2) Message\r\n3 | cloud-ndb | (1) Message (2) Missing (3) Missing | (1) Message (2) Message (3) Message\r\n4 | legacy | (1) Message (2) Message (3) Message (4) Message | (1) None (2) None (3) None (4) None\r\n5 | cloud-ndb | (1) Message (2) Message (3) Message (4) Message (5) Missing | (1) None (2) None (3) None (4) None (5) Message\r\n\r\n#### Code example\r\n```python\r\n# models/message_thread.py\r\nclass  MessageThreadMessage(ndb.Model):\r\n  \"\"\"Representation of a single message within a thread.\"\"\"\r\n  sender = ndb.StringProperty()\r\n  text = ndb.TextProperty()\r\n  game_season_and_year = ndb.StringProperty()\r\n\r\nclass MessageThread(ndb.Model):\r\n  \"\"\"Representation of a \"thread\" of messages between a set of players.\"\"\"\r\n  subject = ndb.StringProperty()\r\n  last_updated = ndb.DateTimeProperty(auto_now=True)\r\n  recipients = ndb.StringProperty(repeated=True)\r\n  messages = ndb.LocalStructuredProperty(MessageThreadMessage,\r\n                                         repeated=True,\r\n                                         compressed=True)\r\n```\r\n\r\n```html\r\n<!-- views/message_thread.html -->\r\n<h3>{{ thread.subject }}</h3>\r\n{% for recipient in recipients %}\r\n  <em>{{ recipient }}</em>{% if not loop.last %}, {% endif %}\r\n{% endfor %}\r\n\r\n{% for message in thread.messages %}\r\n  <em>From {{ message.get_display_sender() }}</em>\r\n  in {{ message.game_season_and_year }}\r\n  <p class=\"body\">\r\n    {{ message.text }}\r\n  </p>\r\n{% endfor %}\r\n```\r\n\r\n#### Stack trace\r\n(no errors appear in the logs)\r\n\r\n*(Note: The initial issue mentioned something about the Compressed property, that was erroneously left in from a template I was copying.)*", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/436", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/436/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/436/events", "html_url": "https://github.com/googleapis/python-ndb/issues/436", "id": 620470645, "node_id": "MDU6SXNzdWU2MjA0NzA2NDU=", "number": 436, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1345332101, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-18T20:02:46Z", "updated_at": "2020-05-19T17:39:50Z", "closed_at": "2020-05-19T17:39:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #397 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/433", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/433/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/433/events", "html_url": "https://github.com/googleapis/python-ndb/issues/433", "id": 619543483, "node_id": "MDU6SXNzdWU2MTk1NDM0ODM=", "number": 433, "title": "@transactional oddly raising NotImplementedError: Passed bad option: 'transaction'", "user": {"login": "snarfed", "id": 778068, "node_id": "MDQ6VXNlcjc3ODA2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/778068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snarfed", "html_url": "https://github.com/snarfed", "followers_url": "https://api.github.com/users/snarfed/followers", "following_url": "https://api.github.com/users/snarfed/following{/other_user}", "gists_url": "https://api.github.com/users/snarfed/gists{/gist_id}", "starred_url": "https://api.github.com/users/snarfed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snarfed/subscriptions", "organizations_url": "https://api.github.com/users/snarfed/orgs", "repos_url": "https://api.github.com/users/snarfed/repos", "events_url": "https://api.github.com/users/snarfed/events{/privacy}", "received_events_url": "https://api.github.com/users/snarfed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-16T19:47:31Z", "updated_at": "2020-05-27T17:07:19Z", "closed_at": "2020-05-27T17:07:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'm seeing an odd, possibly platform-specific ndb crash when `get_or_insert()` is called inside `@transactional`. this was working for me with ndb 1.1.1 on Mac OS X (10.15.4), prod GAE python3.7 runtime, and Debian 10 on CircleCI...\r\n\r\n...until last night at around 12:37am PT, when it started raising `NotImplementedError: Passed bad option: 'transaction'` on prod app engine, soon after i deployed a new version of the app. i tried rolling back to the last version, but it did the same thing, oddly.\r\n\r\n i was unable to reproduce this locally; my unit tests and the app itself both ran fine. i tried upgrading ndb to 1.2.1, which also worked locally, and also failed on both prod app engine [and in my tests on CircleCI](https://app.circleci.com/pipelines/github/snarfed/bridgy/40/workflows/a2db3b7a-b56f-47a1-9332-fc6d28667fae/jobs/1132).\r\n\r\nfull stack trace below. source is here: https://github.com/snarfed/bridgy/blob/de8f64ca8150b1f43234c14f38f08ac8d70bea94/publish.py#L561-L567\r\n\r\nreally odd. i've worked around it for now by temporarily removing `@ndb.transactional`, but that's obviously not ideal. let me know if i can provide any more info or do any more experimenting to help. thanks in advance for looking!\r\n\r\n```\r\nTraceback (most recent call last):\r\n...\r\n  File \"/srv/publish.py\", line 717, in post\r\n    result = self._run()\r\n  File \"/srv/publish.py\", line 191, in _run\r\n    self.entity = self.get_or_add_publish_entity(resolved_url)\r\n  File \"/srv/publish.py\", line 550, in get_or_add_publish_entity\r\n    return self._get_or_add_publish_entity(source_url)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py\", line 194, in transactional_inner_wrapper\r\n    propagation=propagation,\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py\", line 72, in transaction\r\n    return future.result()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_retry.py\", line 78, in retry_wrapper\r\n    raise error\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_retry.py\", line 73, in retry_wrapper\r\n    result = yield result\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 312, in _advance_tasklet\r\n    yielded = self.generator.send(send_value)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py\", line 149, in _transaction_async\r\n    raise e\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py\", line 138, in _transaction_async\r\n    result = callback()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py\", line 186, in callback\r\n    return wrapped(*args, **kwargs)\r\n  File \"/srv/publish.py\", line 563, in _get_or_add_publish_entity\r\n    page = PublishedPage.get_or_insert(source_url)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_options.py\", line 89, in wrapper\r\n    return wrapped(*pass_args, **kwargs)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/utils.py\", line 110, in positional_wrapper\r\n    return wrapped(*args, **kwds)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 5755, in _get_or_insert\r\n    **kw_model_args\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 5884, in get_or_insert\r\n    entity = yield insert()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 5873, in insert\r\n    yield entity.put_async(_options=_options)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 5234, in put\r\n    ds_key = yield _datastore_api.put(ds_entity, kwargs[\"_options\"])\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 312, in _advance_tasklet\r\n    yielded = self.generator.send(send_value)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_datastore_api.py\", line 390, in put\r\n    batch = _get_commit_batch(transaction, options)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_datastore_api.py\", line 559, in _get_commit_batch\r\n    raise NotImplementedError(\"Passed bad option: {!r}\".format(key))\r\nNotImplementedError: Passed bad option: 'transaction'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/431", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/431/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/431/events", "html_url": "https://github.com/googleapis/python-ndb/issues/431", "id": 619290498, "node_id": "MDU6SXNzdWU2MTkyOTA0OTg=", "number": 431, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1345332101, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T22:02:58Z", "updated_at": "2020-05-18T19:03:26Z", "closed_at": "2020-05-18T19:03:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #397 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/426", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/426/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/426/events", "html_url": "https://github.com/googleapis/python-ndb/issues/426", "id": 617884158, "node_id": "MDU6SXNzdWU2MTc4ODQxNTg=", "number": 426, "title": "transactional deletes (at least) misbehaves with Redis", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-14T02:53:00Z", "updated_at": "2020-05-22T18:35:46Z", "closed_at": "2020-05-22T18:35:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. \r\n\r\nI came across this very strange and pretty hard to pinpoint bug. Basically, only when I use Redis, my delete in `transactional` does not seem to take effect. I can still see it using `ndb.Query`, but not `entity.key.get()`(after deleting with a transaction, `entity.key.get` correctly returns `None`); Here is a standalone test to show that.\r\n\r\n```python\r\nfrom google.cloud import ndb, datastore\r\nimport redis\r\nimport requests\r\n\r\nredis_client = redis.Redis(host='localhost', port=6379, db=0)\r\n\r\nclass SomeKind(ndb.Model):\r\n    some_property = ndb.BooleanProperty()\r\n\r\n@ndb.transactional()\r\ndef t_delete(entity_id):\r\n    entity = SomeKind.get_by_id(entity_id)\r\n    entity.key.delete()\r\n\r\ndef delete(entity_id):\r\n    entity = SomeKind.get_by_id(entity_id)\r\n    entity.key.delete()\r\n\r\ndef clean_up():\r\n    ds_c = datastore.Client(_http=requests.Session)\r\n    list(map(lambda entity: ds_c.delete(entity.key), ds_c.query(kind='SomeKind').fetch()))\r\n\r\n    redis_client.flushdb()\r\n\r\nif __name__ == '__main__':\r\n    with ndb.Client().context(global_cache=ndb.RedisCache(redis_client)):\r\n    # with ndb.Client().context():\r\n        try:\r\n            s1 = SomeKind(some_property=True)\r\n            key1 = s1.put()\r\n\r\n            assert key1.get()\r\n            query = ndb.Query(kind='SomeKind')\r\n            delete(key1.id())\r\n            assert not key1.get()\r\n            assert len(query.fetch()) == 0, len(query.fetch())\r\n        except AssertionError:\r\n            clean_up()\r\n            raise AssertionError('OUTside transaction failure')\r\n\r\n        try:\r\n            s2 = SomeKind(some_property=False)\r\n            key2 = s2.put()\r\n\r\n            assert key2.get()\r\n            query = ndb.Query(kind='SomeKind')\r\n            t_delete(key2.id())\r\n            assert not key2.get()\r\n            # failing line\r\n            assert len(query.fetch()) == 0, len(query.fetch())\r\n        except AssertionError:\r\n            clean_up()\r\n            raise AssertionError('INside transaction failure')\r\n```\r\n\r\nSome notes:\r\nI am testing deleting an entity outside a transaction, and inside a transaction. To see the error, run the code with the global cache enabled. To see the error go away, run without the global cache. \r\n\r\nWe do see the occasional failure due to some race condition without the cache, something like: \r\n```\r\n    assert len(query.fetch()) == 0, len(query.fetch())\r\nAssertionError: 0\r\n```\r\nbut we don't worry about that right now. \r\n\r\nThe problem of this bug happens when:\r\n\u2022 We enable Redis\r\n\u2022 Delete with a transaction\r\n\u2022 Query outside the transaction for the deleted entity\r\nAlso as far as I can tell `clear_cache` does not work this time around)\r\n\r\nversion is 1.2.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/422", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/422/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/422/events", "html_url": "https://github.com/googleapis/python-ndb/issues/422", "id": 616660778, "node_id": "MDU6SXNzdWU2MTY2NjA3Nzg=", "number": 422, "title": "The value of \"more\" in tuple returned by fetch_page() should always be a bool.", "user": {"login": "muzzi92", "id": 37450505, "node_id": "MDQ6VXNlcjM3NDUwNTA1", "avatar_url": "https://avatars1.githubusercontent.com/u/37450505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muzzi92", "html_url": "https://github.com/muzzi92", "followers_url": "https://api.github.com/users/muzzi92/followers", "following_url": "https://api.github.com/users/muzzi92/following{/other_user}", "gists_url": "https://api.github.com/users/muzzi92/gists{/gist_id}", "starred_url": "https://api.github.com/users/muzzi92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muzzi92/subscriptions", "organizations_url": "https://api.github.com/users/muzzi92/orgs", "repos_url": "https://api.github.com/users/muzzi92/repos", "events_url": "https://api.github.com/users/muzzi92/events{/privacy}", "received_events_url": "https://api.github.com/users/muzzi92/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T13:33:24Z", "updated_at": "2020-05-13T20:08:27Z", "closed_at": "2020-05-13T20:08:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/googleapis/python-ndb/blob/88184c312dd7bdc7bd36ec58fd53e3fd5001d7ac/google/cloud/ndb/query.py#L2375-L2377\r\n\r\nFor consistency, the type of `more` should always be boolean (as suggested by the function's doc-string). However due to the current evaluation, it can sometimes be a list.\r\n\r\nIn the case where there are no results found, `results` will be an empty list and hence so will `more`.\r\n\r\ni.e.\r\n```\r\n[] and False = [] # Not \"False\"\r\n```\r\n\r\nI noticed this, as I am serialising these values into a Protobuf which is type checking.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/419", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/419/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/419/events", "html_url": "https://github.com/googleapis/python-ndb/issues/419", "id": 615022382, "node_id": "MDU6SXNzdWU2MTUwMjIzODI=", "number": 419, "title": "ndb.Key throws context error too early", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-05-08T22:39:14Z", "updated_at": "2020-05-11T20:25:12Z", "closed_at": "2020-05-11T20:25:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\nI have been having some problem specifically with `ndb.Key`; I am hesitant to call it a bug, because maybe I am missing something. But the following code will fail due to no ndb context:\r\n\r\n```\r\nfrom google.cloud import ndb\r\n\r\nclass SomeKind(ndb.Model):\r\n    ref = ndb.KeyProperty(kind='RefKind', default=ndb.Key('RefKind', 1))\r\n\r\nif __name__ == '__main__':\r\n    with ndb.Client().context():\r\n        SomeKind().put()\r\n```\r\n\r\nThe error will happen on `ref`, when parsing `ndb.Key`. This will also happen if I am importing SomeKind in another module to be used later in an ndb context(Just importing it will raise the error) \r\n\r\nThis makes life pretty difficult for me. Especially when testing: I can start my wsgi app in an ndb context, but in testing I need to import classes before I can start a context. Even modules that import each other will raise this error before the context starts. \r\n\r\nI can either start a context on the top of my imports or check for a context right before I define the `KeyProperty` and if it doesn't exist create one and if it does continue. Both these approaches are pretty awkward. \r\n\r\nI thought about starting my testing session inside a context, using `pytest` hooks maybe, but even then, before I can start a context, I need the emulator running, so in a sense now I am setting up my fixtures inside a `pytest` hook, which is again bad form.\r\n\r\nIs there a suggestion you have for this situation? It seems to me the check for context is happening too soon for the ndb.Key.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/416", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/416/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/416/events", "html_url": "https://github.com/googleapis/python-ndb/issues/416", "id": 613835884, "node_id": "MDU6SXNzdWU2MTM4MzU4ODQ=", "number": 416, "title": "Create specific exception classes for datastore errors", "user": {"login": "rtshadow", "id": 1429654, "node_id": "MDQ6VXNlcjE0Mjk2NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1429654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtshadow", "html_url": "https://github.com/rtshadow", "followers_url": "https://api.github.com/users/rtshadow/followers", "following_url": "https://api.github.com/users/rtshadow/following{/other_user}", "gists_url": "https://api.github.com/users/rtshadow/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtshadow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtshadow/subscriptions", "organizations_url": "https://api.github.com/users/rtshadow/orgs", "repos_url": "https://api.github.com/users/rtshadow/repos", "events_url": "https://api.github.com/users/rtshadow/events{/privacy}", "received_events_url": "https://api.github.com/users/rtshadow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345320591, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTkx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-05-07T07:26:47Z", "updated_at": "2020-07-08T11:55:05Z", "closed_at": "2020-06-01T23:46:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys,\r\n\r\nI'm in a process of migration from AppEngine NDB to Cloud NDB and I find it hard to identify and handle exceptional cases that can occur. While AppEngine NDB had lots of meaningful exception classes like `TransactionFailedError`, I cannot find any equivalent in Cloud NDB (although [migration notes](https://github.com/googleapis/python-ndb/blob/master/MIGRATION_NOTES.md#differences-between-old-and-new-implementations) suggest there will be \"shims\" created for that).\r\n\r\nHere are some examples of the errors I'm getting right now in my app after migration:\r\n` _Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.ABORTED, too much contention on these datastore entities. please try again. entity groups: [....])>`\r\n\r\n`_Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.INTERNAL, {\"created\":\"@1588764808.925861830\",\"description\":\"Transport closed\",\"file\":\"third_party/apphosting/python/grpcio/v1_0_0/src/core/ext/transport/chttp2/transport/chttp2_transport.c\",\"file_line\":1031})>`\r\n\r\n`_Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.INVALID_ARGUMENT, The referenced transaction has expired or is no longer valid.)>`\r\n\r\n`<_Rendezvous of RPC that terminated with (StatusCode.UNAVAILABLE, Received RST_STREAM with error code 7)>`\r\n\r\nThe biggest problems are:\r\n- the exception class starts with underscore which suggests it's a private class and as such it should never be thrown outside\r\n- status code `ABORTED` or `INVALID_ARGUMENT` is uninformative (alone it doesn't tell me whether it's a transient error I can retry on). I need to match against the detail string to understand what happened\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/415", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/415/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/415/events", "html_url": "https://github.com/googleapis/python-ndb/issues/415", "id": 613801552, "node_id": "MDU6SXNzdWU2MTM4MDE1NTI=", "number": 415, "title": "in a transaction: TypeError: 'int' object is not callable", "user": {"login": "snarfed", "id": 778068, "node_id": "MDQ6VXNlcjc3ODA2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/778068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snarfed", "html_url": "https://github.com/snarfed", "followers_url": "https://api.github.com/users/snarfed/followers", "following_url": "https://api.github.com/users/snarfed/following{/other_user}", "gists_url": "https://api.github.com/users/snarfed/gists{/gist_id}", "starred_url": "https://api.github.com/users/snarfed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snarfed/subscriptions", "organizations_url": "https://api.github.com/users/snarfed/orgs", "repos_url": "https://api.github.com/users/snarfed/repos", "events_url": "https://api.github.com/users/snarfed/events{/privacy}", "received_events_url": "https://api.github.com/users/snarfed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-07T06:18:09Z", "updated_at": "2020-05-14T15:16:34Z", "closed_at": "2020-05-14T15:16:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "i saw a handful of these recently during a spike of traffic. prod GAE, python 3.7 runtime, ndb v1.1.1, but looking at the ndb code, i suspect it's still there in head. full stack trace below; more details afterward. also my app's code is open source; [here's the `app.py` line in the stack trace](https://github.com/snarfed/bridgy/blob/master/app.py#L567).\r\n\r\n```\r\nTraceback (most recent call last):\r\n...\r\n  File \"/srv/app.py\", line 567, in post\r\n    self.setup_refetch_hfeed()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py\", line 191, in transactional_inner_wrapper\r\n    propagation=propagation,\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py\", line 72, in transaction\r\n    return future.result()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_retry.py\", line 77, in retry_wrapper\r\n    if not is_transient_error(error):\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_retry.py\", line 120, in is_transient_error\r\n    code = method()\r\nTypeError: 'int' object is not callable\r\n```\r\n\r\nlooking at `_retry.is_transient_error()`, it assumes that the raised exception's `code` attribute is a method:\r\n\r\nhttps://github.com/googleapis/python-ndb/blob/a3f2fb5095fd2986e00c4dd7922f1fb89f8949c1/google/cloud/ndb/_retry.py#L118-L120\r\n\r\n...but some exceptions have it as a plain attribute instead, eg `urllib.error.HTTPError`, which my code does raise occasionally, and might be the culprit here. maybe expand the check to `if method is not None and callable(method):`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/411", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/411/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/411/events", "html_url": "https://github.com/googleapis/python-ndb/issues/411", "id": 610628624, "node_id": "MDU6SXNzdWU2MTA2Mjg2MjQ=", "number": 411, "title": "Possible memory leak using Pyramid middleware", "user": {"login": "jer-tx", "id": 2834149, "node_id": "MDQ6VXNlcjI4MzQxNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2834149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jer-tx", "html_url": "https://github.com/jer-tx", "followers_url": "https://api.github.com/users/jer-tx/followers", "following_url": "https://api.github.com/users/jer-tx/following{/other_user}", "gists_url": "https://api.github.com/users/jer-tx/gists{/gist_id}", "starred_url": "https://api.github.com/users/jer-tx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jer-tx/subscriptions", "organizations_url": "https://api.github.com/users/jer-tx/orgs", "repos_url": "https://api.github.com/users/jer-tx/repos", "events_url": "https://api.github.com/users/jer-tx/events{/privacy}", "received_events_url": "https://api.github.com/users/jer-tx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332096, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20investigating", "name": "status: investigating", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-05-01T08:13:13Z", "updated_at": "2020-06-29T13:59:55Z", "closed_at": "2020-05-04T14:12:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n1. Datastore NDB\r\n2. Docker/Windows/Appengine Flexible\r\n3. Python 3.8\r\n4. google-cloud-ndb 1.2.0\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Create a barebones Pyramid application\r\n  2. Create a \"tween\" (middleware) for Pyramid to communicate with datastore using the ndb client\r\n\r\nI've created a repo that reproduces the problem pretty clearly, using documentation [from here](https://cloud.google.com/appengine/docs/standard/python/migrate-to-python3/migrate-to-cloud-ndb#using_a_runtime_context_with_wsgi_frameworks) about creating a client context with which to query Datastore.\r\n\r\nhttps://github.com/jer-tx/ndb-pyramid\r\n\r\nThe main bits are these:\r\n\r\n```python\r\ndef main(global_config, **settings):\r\n    \"\"\" This function returns a Pyramid WSGI application.\r\n    \"\"\"\r\n\r\n    with Configurator(settings=settings) as config:\r\n        config.include('.routes')\r\n        config.scan()\r\n        # Comment this line to stop memory leak\r\n        config.add_tween('ndbpyramid.datastore_tween.datastore_tween_factory')\r\n\r\n    return config.make_wsgi_app()\r\n```\r\n\r\nthe \"tween\" file:\r\n\r\n```python\r\nfrom google.cloud import ndb\r\n\r\n\r\nclass datastore_tween_factory(object):\r\n    def __init__(self, handler, registry):\r\n        self.handler = handler\r\n        self.registry = registry\r\n\r\n    def __call__(self, request):\r\n        datastore_client = ndb.Client(project='your-gcp-project')\r\n        with datastore_client.context():\r\n            response = self.handler(request)\r\n\r\n        return response\r\n```\r\n\r\nUsing apachebench, I can send thousands of requests to the Pyramid application with no increase in memory usage. When enabling the \"tween\" middleware though, memory usage spikes and is never released. This will need the `GOOGLE_APPLICATION_CREDENTIALS` environment var to work, so in the repo I've included a docker file that might make it easier.\r\n\r\nI'm able to replicate this very consistently between running locally, running under docker, and running under Appengine Flexible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/406", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/406/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/406/events", "html_url": "https://github.com/googleapis/python-ndb/issues/406", "id": 607780536, "node_id": "MDU6SXNzdWU2MDc3ODA1MzY=", "number": 406, "title": "Model._query missing default_options argument", "user": {"login": "jer-tx", "id": 2834149, "node_id": "MDQ6VXNlcjI4MzQxNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2834149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jer-tx", "html_url": "https://github.com/jer-tx", "followers_url": "https://api.github.com/users/jer-tx/followers", "following_url": "https://api.github.com/users/jer-tx/following{/other_user}", "gists_url": "https://api.github.com/users/jer-tx/gists{/gist_id}", "starred_url": "https://api.github.com/users/jer-tx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jer-tx/subscriptions", "organizations_url": "https://api.github.com/users/jer-tx/orgs", "repos_url": "https://api.github.com/users/jer-tx/repos", "events_url": "https://api.github.com/users/jer-tx/events{/privacy}", "received_events_url": "https://api.github.com/users/jer-tx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1341141019, "node_id": "MDU6TGFiZWwxMzQxMTQxMDE5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-04-27T19:05:30Z", "updated_at": "2020-05-15T19:07:36Z", "closed_at": "2020-04-29T02:07:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n1. NDB\r\n2. Windows 10\r\n3. Python 3.7\r\n4. google-cloud-ndb 1.2.0\r\n\r\n#### Steps to reproduce\r\n\r\nOur existing codebase under appengine standard has our models written like the below code example. It appears that on the Query object, it supports `default_options`, but on the Model object, the `_query` property doesn't support `default_options`. Is this intentional, or perhaps an oversight? Not having `default_options` within `_query` puts a big damper on our migration\r\n\r\n\r\n#### Code example\r\n\r\n```python\r\nclass MyObject(ndb.Expando):\r\n    my_property = ndb.TextProperty()\r\n    default_options = QueryOptions(keys_only=True)\r\n\r\n    @classmethod\r\n    def all_for_ancestor(cls, ancestor, keys_only=False):\r\n        return cls.query(default_options=cls.default_options, ancestor=ancestor)\r\n```\r\n\r\n#### Stack trace\r\n```\r\n  File \"C:\\Users\\Jeremy\\PycharmProjects\\external-ping\\externalping\\models\\workout_model.py\", line 611, in all_for_workout\r\n    return cls.query(default_options=cls.default_options, ancestor=ancestor)\r\n  File \"C:\\Users\\Jeremy\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\google\\cloud\\ndb\\utils.py\", line 73, in wrapper\r\n    raise TypeError(\r\nTypeError: _query() got an unexpected keyword argument 'default_options'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/404", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/404/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/404/events", "html_url": "https://github.com/googleapis/python-ndb/issues/404", "id": 607767693, "node_id": "MDU6SXNzdWU2MDc3Njc2OTM=", "number": 404, "title": "`Query.count()` fails to issue actual keys only query.", "user": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-04-27T18:44:15Z", "updated_at": "2020-04-27T19:10:39Z", "closed_at": "2020-04-27T19:10:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Brought to my attention by @gaborfeher and PR #400.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/402", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/402/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/402/events", "html_url": "https://github.com/googleapis/python-ndb/issues/402", "id": 607131801, "node_id": "MDU6SXNzdWU2MDcxMzE4MDE=", "number": 402, "title": "Missing entities from the query results in some cases", "user": {"login": "gaborfeher", "id": 11962088, "node_id": "MDQ6VXNlcjExOTYyMDg4", "avatar_url": "https://avatars2.githubusercontent.com/u/11962088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborfeher", "html_url": "https://github.com/gaborfeher", "followers_url": "https://api.github.com/users/gaborfeher/followers", "following_url": "https://api.github.com/users/gaborfeher/following{/other_user}", "gists_url": "https://api.github.com/users/gaborfeher/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborfeher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborfeher/subscriptions", "organizations_url": "https://api.github.com/users/gaborfeher/orgs", "repos_url": "https://api.github.com/users/gaborfeher/repos", "events_url": "https://api.github.com/users/gaborfeher/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborfeher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "andrewsg", "id": 686551, "node_id": "MDQ6VXNlcjY4NjU1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/686551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewsg", "html_url": "https://github.com/andrewsg", "followers_url": "https://api.github.com/users/andrewsg/followers", "following_url": "https://api.github.com/users/andrewsg/following{/other_user}", "gists_url": "https://api.github.com/users/andrewsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewsg/subscriptions", "organizations_url": "https://api.github.com/users/andrewsg/orgs", "repos_url": "https://api.github.com/users/andrewsg/repos", "events_url": "https://api.github.com/users/andrewsg/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewsg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewsg", "id": 686551, "node_id": "MDQ6VXNlcjY4NjU1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/686551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewsg", "html_url": "https://github.com/andrewsg", "followers_url": "https://api.github.com/users/andrewsg/followers", "following_url": "https://api.github.com/users/andrewsg/following{/other_user}", "gists_url": "https://api.github.com/users/andrewsg/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewsg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewsg/subscriptions", "organizations_url": "https://api.github.com/users/andrewsg/orgs", "repos_url": "https://api.github.com/users/andrewsg/repos", "events_url": "https://api.github.com/users/andrewsg/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewsg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2020-04-26T22:43:38Z", "updated_at": "2020-06-02T21:16:07Z", "closed_at": "2020-06-02T17:36:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue is somewhat similar to #386. I've applied the fix #396 for that, and it works nicely in almost all the cases, but a few mysterious cases still remain. The thing is that I can't seem to be able to create such a clean reproduction for this issue, you'll see why based on my findings below.\r\n\r\nThe core of the problem looks like this:\r\n```\r\nq = Product.query(conditions, ancestor=...)\r\ncount1 = len(q.fetch(keys_only=True))\r\ncount2 = sum(1 for _ in q.fetch())\r\n```\r\n`count1` becomes 5809 and `count2` becomes 5640, but both of them are expected to have the same value. My findings so far:\r\n\r\n* The issue can be repeated if I use `gcloud datastore export/import` to copy my `Product` entities into another Firestore database. (I have no conclusive results with copying to Datastore yet.)\r\n* If I remove those `Product` entities that are not matching the query conditions, the issue is fixed.\r\n* If I go through all my products and zero out some properties not involved in this query, the issue is fixed.\r\n* If I go through all my products and just get+put them, the issue remains.\r\n* By looking at the entities missing from the query of `count2`, they seem to appear in a few distinct consecutive batches in the results of `count1`. So it's not like missing the suffix as it was in #386 . I think this might also mean that Firestore is just \"forgetting\" to send them, so maybe this is a backend bug.\r\n\r\nActually, merging #400 or an equivalent change would mask away this problem for my use cases, but I would be able to sleep much better if this was still fixed :)\r\n\r\nI would not want to share my database dump publicly, but since the data is already stored by Google, I am okay with sharing the contents of the `Product` table privately in some way.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/398", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/398/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/398/events", "html_url": "https://github.com/googleapis/python-ndb/issues/398", "id": 605836900, "node_id": "MDU6SXNzdWU2MDU4MzY5MDA=", "number": 398, "title": "transactional rollback doesn't seem to be working", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2020-04-23T20:15:09Z", "updated_at": "2020-05-01T12:53:56Z", "closed_at": "2020-05-01T12:53:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I hope you are having a great Thursday.  \r\n\r\nIn the old NDB, when there was an exception in a transaction, a rollback was applied, as one does. In this new NDB, even though I see the a [call to rollback](https://github.com/googleapis/python-ndb/blob/f32644fcf8c16dc0fd74e14108d7955effff1771/google/cloud/ndb/_transaction.py#L145) it does not seem to take effect.\r\n\r\nIn the following stand alone file, I expect the second transaction to be rolled back, but it does not, after the exception I see the model updated in the datastore. \r\n\r\n```\r\nfrom google.cloud import ndb\r\n\r\nclass Library(ndb.Model):\r\n    books = ndb.JsonProperty()\r\n\r\n\r\n@ndb.transactional()\r\ndef add_book(library_id, book_name, pages):\r\n    library = Library.get_by_id(library_id)\r\n    if not library.books:\r\n        library.books = {}\r\n    library.books[book_name] = pages\r\n    library.put()\r\n\r\nclass LeRandomException(Exception):\r\n    pass\r\n\r\n@ndb.transactional()\r\ndef add_book_with_exception(library_id, book_name, pages):\r\n    library = Library.get_by_id(library_id)\r\n    library.books[book_name] = pages\r\n    raise LeRandomException\r\n\r\n\r\nif __name__ == '__main__':\r\n    with ndb.Client().context():\r\n        lib = Library()\r\n        key = lib.put()\r\n        add_book(key.id(), 'behave', 'so many')\r\n\r\n        assert Library.get_by_id(key.id()).books['behave'] == 'so many'\r\n\r\n        try:\r\n            add_book_with_exception(key.id(), 'hooked', 'less than behave')\r\n        except LeRandomException:\r\n            books = Library.get_by_id(key.id()).books\r\n            assert books.get('hooked', None) is None, books\r\n```\r\n\r\nversion is 1.2.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/394", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/394/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/394/events", "html_url": "https://github.com/googleapis/python-ndb/issues/394", "id": 604025058, "node_id": "MDU6SXNzdWU2MDQwMjUwNTg=", "number": 394, "title": "Transactions do not work", "user": {"login": "zyzniewski", "id": 1660682, "node_id": "MDQ6VXNlcjE2NjA2ODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1660682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyzniewski", "html_url": "https://github.com/zyzniewski", "followers_url": "https://api.github.com/users/zyzniewski/followers", "following_url": "https://api.github.com/users/zyzniewski/following{/other_user}", "gists_url": "https://api.github.com/users/zyzniewski/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyzniewski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyzniewski/subscriptions", "organizations_url": "https://api.github.com/users/zyzniewski/orgs", "repos_url": "https://api.github.com/users/zyzniewski/repos", "events_url": "https://api.github.com/users/zyzniewski/events{/privacy}", "received_events_url": "https://api.github.com/users/zyzniewski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-04-21T14:04:01Z", "updated_at": "2020-04-30T18:38:32Z", "closed_at": "2020-04-30T18:38:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are in the process of migrating our services to Python3 on GAE and I think transactions do not work as expected. See code example below. Thanks!\r\n\r\n#### Environment details\r\n\r\nPython 3.7.5\r\ngoogle-api-core==1.17.0\r\ngoogle-auth==1.14.0\r\ngoogle-cloud-core==1.3.0\r\ngoogle-cloud-datastore==1.12.0\r\ngoogle-cloud-ndb==1.2.0\r\n\r\n#### Code example\r\n\r\n```python\r\nfrom google.cloud import ndb\r\n\r\nclass Simple(ndb.Model):\r\n    foo = ndb.IntegerProperty()\r\n\r\n@ndb.transactional_tasklet()\r\ndef update(add):\r\n\r\n    entity = yield Simple.get_by_id_async('one')\r\n\r\n    foo = entity.foo\r\n    foo += add\r\n\r\n    yield ndb.sleep(1)\r\n\r\n    entity.foo = foo\r\n\r\n    yield entity.put_async()\r\n\r\nclient = ndb.Client()\r\n\r\n@ndb.tasklet\r\ndef concurrent_tasks():\r\n    yield [\r\n        update(100),\r\n        update(100),\r\n    ]\r\n\r\nwith client.context():\r\n\r\n    Simple(id='one', foo=42).put()\r\n\r\n    concurrent_tasks().get_result()\r\n\r\n    entity = Simple.get_by_id('one')\r\n\r\n    assert entity.foo == 242\r\n```\r\n\r\nIn our case we run two concurrent transactions, one on Python2 and another on Python3 but looks it is not a compatibility issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/392", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/392/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/392/events", "html_url": "https://github.com/googleapis/python-ndb/issues/392", "id": 603945585, "node_id": "MDU6SXNzdWU2MDM5NDU1ODU=", "number": 392, "title": "fetch offset does not always work", "user": {"login": "gaborfeher", "id": 11962088, "node_id": "MDQ6VXNlcjExOTYyMDg4", "avatar_url": "https://avatars2.githubusercontent.com/u/11962088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborfeher", "html_url": "https://github.com/gaborfeher", "followers_url": "https://api.github.com/users/gaborfeher/followers", "following_url": "https://api.github.com/users/gaborfeher/following{/other_user}", "gists_url": "https://api.github.com/users/gaborfeher/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborfeher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborfeher/subscriptions", "organizations_url": "https://api.github.com/users/gaborfeher/orgs", "repos_url": "https://api.github.com/users/gaborfeher/repos", "events_url": "https://api.github.com/users/gaborfeher/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborfeher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-21T12:06:46Z", "updated_at": "2020-04-26T15:16:15Z", "closed_at": "2020-04-26T15:16:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an example where offset values larger than 1000 are still handled as if they were only set to 1000. For a demonstration I have reused the same project that I was using for #386 . So I guess the example could be a bit simpler but hopefully it's simple enough: https://github.com/gaborfeher/ndb-testbed/tree/offset-issue\r\n\r\nThe short summary is that the below 3 queries are yielding the same set of results for me. I've only tried this in a GAE project, not locally.\r\n```\r\nProductCopy5.query().fetch(limit=10, offset=1000)\r\nProductCopy5.query().fetch(limit=10, offset=2000)\r\nProductCopy5.query().fetch(limit=10, offset=3000)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/389", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/389/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/389/events", "html_url": "https://github.com/googleapis/python-ndb/issues/389", "id": 600656592, "node_id": "MDU6SXNzdWU2MDA2NTY1OTI=", "number": 389, "title": "*** TypeError: unhashable type: 'StringProperty'", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-04-15T23:58:23Z", "updated_at": "2020-04-16T22:44:46Z", "closed_at": "2020-04-16T22:44:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello again. Not sure if this is a bug or feature request but seems to be a backwards compatibility issue: \r\n\r\nI cannot hash `StringProperty` or `TextProperty`. Both were hashable in the old ndb. \r\n\r\nI did some looking around and inspecting code I cannot immediately see where even the old ndb defines its `__hash__`,  for these `Property`s especially that, moving up from `StringProperty` to `TextProperty` to `BlobProperty` to `Property` to `_BaseMetadata` I do not see a definition of `__hash__` and on top of that on `mode.Model` where `_BaseMetadata` inherits from, the `__hash__` is a \"dummy hash\" and not implemented, see [here](https://github.com/GoogleCloudPlatform/datastore-ndb-python/blob/cf4cab3f1f69cd04e1a9229871be466b53729f3f/ndb/model.py#L3109-L3115)\r\n\r\nNonetheless, in my code, `StringProperty('tracking_country', indexed=False)` is `8773248020977`. (This works for TextProperty too I checked).\r\n\r\nIs there a reason these are not hashable? if so do you suggest a workaround? thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/386", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/386/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/386/events", "html_url": "https://github.com/googleapis/python-ndb/issues/386", "id": 599257132, "node_id": "MDU6SXNzdWU1OTkyNTcxMzI=", "number": 386, "title": "Fetching results stops when a batch is empty but more_results=NOT_FINISHED", "user": {"login": "gaborfeher", "id": 11962088, "node_id": "MDQ6VXNlcjExOTYyMDg4", "avatar_url": "https://avatars2.githubusercontent.com/u/11962088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborfeher", "html_url": "https://github.com/gaborfeher", "followers_url": "https://api.github.com/users/gaborfeher/followers", "following_url": "https://api.github.com/users/gaborfeher/following{/other_user}", "gists_url": "https://api.github.com/users/gaborfeher/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborfeher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborfeher/subscriptions", "organizations_url": "https://api.github.com/users/gaborfeher/orgs", "repos_url": "https://api.github.com/users/gaborfeher/repos", "events_url": "https://api.github.com/users/gaborfeher/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborfeher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332096, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20investigating", "name": "status: investigating", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-04-14T02:47:29Z", "updated_at": "2020-04-24T00:02:52Z", "closed_at": "2020-04-24T00:02:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.7 @ GAE\r\npython-ndb == e7a0c7c\r\n\r\nUnfortunately I was unable to isolate a clean repro for this issue, so I try to explain what's going on in my production database. There are 20,000+ entities of a kind and I have some complex queries that from time to time don't return all the expected results. In some examples of a query I analyzed, the same query with the same filters returns less results with `fetch()` than with `fetch(projection=[cls.a_field_that_all_entities_have])`. (The opposite situation would be more understandable.) The shorter (non-projected) result lists are always a subset of the longer (projected) result lists. The entities missing from the shorter lists have always larger `key.id()` numbers than the entities present in those lists. (As if the entities were sorted according to key but the listing was cut off at one point.) Using `fetch(keys_only=True)` makes no difference compared to using `fetch()`. I've enabled debug logs and found the attached segment for the keys_only case:\r\n[ndblog2.txt](https://github.com/googleapis/python-ndb/files/4472819/ndblog2.txt)\r\n\r\nYou can see that the last batch is empty but the cursor was still moved forward, and `NOT_FINISHED` was returned. The last result I can see in my code returned from the query is the one with id `id: 5233____________`, but as mentioned above, I can see more results if I use projection. My theory is that more results would come back from the datastore if querying for batches would have continued.\r\n\r\nI am happy to send more logs or try proposed fixes :) \r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/385", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/385/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/385/events", "html_url": "https://github.com/googleapis/python-ndb/issues/385", "id": 597823720, "node_id": "MDU6SXNzdWU1OTc4MjM3MjA=", "number": 385, "title": "namespace property of context", "user": {"login": "anoteboom", "id": 10531111, "node_id": "MDQ6VXNlcjEwNTMxMTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/10531111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anoteboom", "html_url": "https://github.com/anoteboom", "followers_url": "https://api.github.com/users/anoteboom/followers", "following_url": "https://api.github.com/users/anoteboom/following{/other_user}", "gists_url": "https://api.github.com/users/anoteboom/gists{/gist_id}", "starred_url": "https://api.github.com/users/anoteboom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anoteboom/subscriptions", "organizations_url": "https://api.github.com/users/anoteboom/orgs", "repos_url": "https://api.github.com/users/anoteboom/repos", "events_url": "https://api.github.com/users/anoteboom/events{/privacy}", "received_events_url": "https://api.github.com/users/anoteboom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345320591, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTkx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-10T10:38:22Z", "updated_at": "2020-04-15T01:40:04Z", "closed_at": "2020-04-15T01:40:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the namespace is selected when creating the client.  In the old ndb I could switch to a namespace for each request, based on the user making the request. \r\n\r\nI used the [original documentation](https://cloud.google.com/appengine/docs/standard/python/multitenancy/multitenancy) to implement multitenancy \r\n\r\nI do not want to change the client.namespace property from within the request, because I assume this may change it also for other running requests.\r\n\r\nIs it possible that you add a namespace property to the context object, and use this namespace for new Keys and Queries?  \r\n\r\nI have considered making a new client object for each request, but this is quite an expensive operation. I also considered creating a bunch of clients and cache them, but as we have hundreds of tenants this.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/384", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/384/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/384/events", "html_url": "https://github.com/googleapis/python-ndb/issues/384", "id": 595990174, "node_id": "MDU6SXNzdWU1OTU5OTAxNzQ=", "number": 384, "title": "Serializing / Deserializing Entity without ID. ", "user": {"login": "smittysmee", "id": 8376011, "node_id": "MDQ6VXNlcjgzNzYwMTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8376011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smittysmee", "html_url": "https://github.com/smittysmee", "followers_url": "https://api.github.com/users/smittysmee/followers", "following_url": "https://api.github.com/users/smittysmee/following{/other_user}", "gists_url": "https://api.github.com/users/smittysmee/gists{/gist_id}", "starred_url": "https://api.github.com/users/smittysmee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smittysmee/subscriptions", "organizations_url": "https://api.github.com/users/smittysmee/orgs", "repos_url": "https://api.github.com/users/smittysmee/repos", "events_url": "https://api.github.com/users/smittysmee/events{/privacy}", "received_events_url": "https://api.github.com/users/smittysmee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-07T16:16:20Z", "updated_at": "2020-04-29T02:09:07Z", "closed_at": "2020-04-29T02:09:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Issue:**\r\nThere is a new issue with serializing and deserializing an entity that has a namespace defined for the model. This is a new issue that appeared in 1.1.2 release following this commit: https://github.com/googleapis/python-ndb/commit/44f02e46deef245f4d1ae80f9d2e4edd46ecd265.\r\nPR: https://github.com/googleapis/python-ndb/pull/339\r\n\r\nI believe this code can be fixed by looking at the ndb.Model's `__init__`:\r\n```\r\nkey_parts_unspecified = (\r\n            id_ is None\r\n            and parent is None\r\n            and project is None\r\n            and namespace is key_module.UNDEFINED\r\n        )  # Needs to check if `_id` is None apart from `namespace` or something similar\r\n```\r\n\r\n**Environment details:**\r\nPython 3.7.3\r\ngoogle-cloud-ndb 1.1.2\r\n\r\n**Stack:**\r\n```\r\nError\r\nTraceback (most recent call last):\r\n  File \"/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/unittest/case.py\", line 59, in testPartExecutor\r\n    yield\r\n  File \"/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/unittest/case.py\", line 615, in run\r\n    testMethod()\r\n  File \"/Users/asmith/development/csg-python-libs/ndb/unit_tests/test_properties.py\", line 89, in test_namespaced_unsaved_entity_pickling\r\n    entity = pickle.loads(pickle.dumps(entity))\r\n  File \"/Users/asmith/development/virtual_environments/csg-python-libs/lib/python3.7/site-packages/google/cloud/ndb/key.py\", line 473, in __setstate__\r\n    *flat, project=project, namespace=kwargs[\"namespace\"]\r\n  File \"/Users/asmith/development/virtual_environments/csg-python-libs/lib/python3.7/site-packages/google/cloud/datastore/key.py\", line 114, in __init__\r\n    self._path = self._combine_args()\r\n  File \"/Users/asmith/development/virtual_environments/csg-python-libs/lib/python3.7/site-packages/google/cloud/datastore/key.py\", line 214, in _combine_args\r\n    child_path = self._parse_path(self._flat_path)\r\n  File \"/Users/asmith/development/virtual_environments/csg-python-libs/lib/python3.7/site-packages/google/cloud/datastore/key.py\", line 198, in _parse_path\r\n    raise ValueError(id_or_name, \"ID/name was not a string or integer.\")\r\nValueError: (None, 'ID/name was not a string or integer.')\r\n```\r\n\r\n**Test Code:**\r\n```\r\n# import ...  # Update for your code context\r\n# ...  \r\nfrom google.cloud import ndb\r\n\r\nclass BaseModel(ndb.Model):\r\n    _NAMESPACE = ndb.key.UNDEFINED  # Default used to be `None` but no longer works correctly with NDB (change in 1.1.2)\r\n\r\n    def __init__(self, **kwds):\r\n        super().__init__(namespace=self._NAMESPACE, **kwds)\r\n\r\n\r\nclass PickleNamespacedOtherKind(BaseModel):\r\n    _NAMESPACE = 'Test'\r\n    foo = ndb.IntegerProperty()\r\n\r\n    @classmethod\r\n    def _get_kind(cls):\r\n        return \"OtherKind\"\r\n\r\n\r\nclass PickleNamespacedSomeKind(BaseModel):\r\n    _NAMESPACE = 'Test'\r\n    other = ndb.StructuredProperty(PickleNamespacedOtherKind)\r\n\r\n    @classmethod\r\n    def _get_kind(cls):\r\n        return \"SomeKind\"\r\n\r\n\r\n\r\n class TestModel(base.TestNDBModel):\r\n   def setUp(self) -> None:\r\n        self.keys_to_remove =[]\r\n        super().setUp()\r\n\r\n    def tearDown(self) -> None:\r\n        for key in self.keys_to_remove:\r\n            key.delete()\r\n\r\n        super().tearDown()\r\n\r\n    def run(self, result=None):\r\n        from ndb.csg.ndb.client import NDBClient\r\n        self.ndb_client = ndb.Client(project=PROJECT_ID)\r\n        with self.ndb_client.default_context():\r\n            super().run(result)\r\n\r\n    def put_entity(self, entity):\r\n        key = entity.put()\r\n        self.keys_to_remove.append(key)\r\n        return key\r\n\r\n    def test_namespaced_unsaved_entity_pickling(self):\r\n        \"\"\"\r\n        Regression test for Issue XXXXXX (redacted)\r\n        \"\"\"\r\n        entity = PickleNamespacedSomeKind(other=PickleNamespacedOtherKind(foo=1))\r\n        assert entity.other.key is None or entity.other.key.id() is None\r\n        entity = pickle.loads(pickle.dumps(entity))\r\n        assert entity.other.foo == 1\r\n\r\n    def test_namespaced_saved_entity_pickling(self):\r\n        \"\"\"\r\n        Regression test for Issue XXXXXX (redacted)\r\n        \"\"\"\r\n        entity = PickleNamespacedSomeKind(other=PickleNamespacedOtherKind(foo=1))\r\n        self.put_entity(entity)\r\n        assert entity.other.key is None or entity.other.key.id() is None\r\n        entity = pickle.loads(pickle.dumps(entity))\r\n        assert entity.other.foo == 1\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/383", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/383/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/383/events", "html_url": "https://github.com/googleapis/python-ndb/issues/383", "id": 595462708, "node_id": "MDU6SXNzdWU1OTU0NjI3MDg=", "number": 383, "title": "\"too much contention\" server errors should be retried", "user": {"login": "gaborfeher", "id": 11962088, "node_id": "MDQ6VXNlcjExOTYyMDg4", "avatar_url": "https://avatars2.githubusercontent.com/u/11962088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborfeher", "html_url": "https://github.com/gaborfeher", "followers_url": "https://api.github.com/users/gaborfeher/followers", "following_url": "https://api.github.com/users/gaborfeher/following{/other_user}", "gists_url": "https://api.github.com/users/gaborfeher/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborfeher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborfeher/subscriptions", "organizations_url": "https://api.github.com/users/gaborfeher/orgs", "repos_url": "https://api.github.com/users/gaborfeher/repos", "events_url": "https://api.github.com/users/gaborfeher/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborfeher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332096, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20investigating", "name": "status: investigating", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-06T22:16:32Z", "updated_at": "2020-04-20T14:25:17Z", "closed_at": "2020-04-20T14:25:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes the Datastore server fails to commit a transaction because there are too frequent writes to it. The exception I get in such cases looks like below. In the old client, transactions used to automatically retry a few times in such cases, and I think that should be the desired behavior.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1951, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1820, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/env/lib/python3.7/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/srv/main.py\", line 52, in test\r\n    increment(name, step)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py\", line 165, in transactional_inner_wrapper\r\n    propagation=propagation,\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py\", line 66, in transaction\r\n    return future.result()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_retry.py\", line 78, in retry_wrapper\r\n    raise error\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_retry.py\", line 73, in retry_wrapper\r\n    result = yield result\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 312, in _advance_tasklet\r\n    yielded = self.generator.send(send_value)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py\", line 131, in _transaction_async\r\n    raise e\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_transaction.py\", line 126, in _transaction_async\r\n    yield _datastore_api.commit(transaction_id, retries=0)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_datastore_api.py\", line 756, in commit\r\n    yield future\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_datastore_api.py\", line 88, in rpc_call\r\n    result = yield rpc\r\ngrpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with: \r\n\tstatus = StatusCode.ABORTED \r\n\tdetails = \"too much contention on these datastore entities. please try again.\" \r\n\tdebug_error_string = \"{\"created\":\"@1586209653.270625969\",\"description\":\"Error received from peer ipv4:108.177.15.95:443\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1056,\"grpc_message\":\"too much contention on these datastore entities. please try again.\",\"grpc_status\":10}\" \r\n>\r\n```\r\nRepro code snippets:\r\n```\r\n@ndb.transactional(retries=10)\r\ndef increment(name, step):\r\n    logging.info(f'name={name} step={step}')\r\n    sd = SomeData.query(SomeData.x == 'hello1').get()\r\n    sd.y += 1\r\n    sd.put()\r\n\r\n\r\n@app.route('/test/<string:name>/<int:n>')\r\ndef test(name, n):\r\n    for step in range(n):\r\n        increment(name, step)\r\n    return 'ok'\r\n\r\n```\r\nIf I invoke `test` two times in parallel, it always leads to the above exception, despite `retries=10`. (TBH the motivation for this is a real-world situation in my app where I am not exactly sure what is causing the contention.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/379", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/379/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/379/events", "html_url": "https://github.com/googleapis/python-ndb/issues/379", "id": 592863831, "node_id": "MDU6SXNzdWU1OTI4NjM4MzE=", "number": 379, "title": "No error when `projection` argument with unindexed property is passed to `fetch`", "user": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-04-02T19:10:25Z", "updated_at": "2020-05-15T01:33:25Z", "closed_at": "2020-05-15T01:33:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a `projection` argument for an unindexed property is passed to the `Query` constructor, you get an error message saying you can't use projection on an unindexed property. If you pass the `projection` argument to `fetch`, however, it just fails silently, without raising an exception.\r\n\r\n~~~~\r\n(Pdb) SomeKind.query().fetch()\r\n[SomeKind(key=Key('SomeKind', 5649322494394368, namespace='098e1fd6-9218-49bf-89f2-8e677bd7deb1'), foo={'hi': 'mom!'})]\r\n(Pdb) SomeKind.query().fetch(projection=[SomeKind.foo])\r\n[]\r\n(Pdb) SomeKind.query(projection=[SomeKind.foo]).fetch()\r\n*** google.cloud.ndb.model.InvalidPropertyError: Property is unindexed foo\r\n~~~~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/378", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/378/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/378/events", "html_url": "https://github.com/googleapis/python-ndb/issues/378", "id": 591143243, "node_id": "MDU6SXNzdWU1OTExNDMyNDM=", "number": 378, "title": "JsonProperty in projection cannot be read", "user": {"login": "gaborfeher", "id": 11962088, "node_id": "MDQ6VXNlcjExOTYyMDg4", "avatar_url": "https://avatars2.githubusercontent.com/u/11962088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborfeher", "html_url": "https://github.com/gaborfeher", "followers_url": "https://api.github.com/users/gaborfeher/followers", "following_url": "https://api.github.com/users/gaborfeher/following{/other_user}", "gists_url": "https://api.github.com/users/gaborfeher/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborfeher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborfeher/subscriptions", "organizations_url": "https://api.github.com/users/gaborfeher/orgs", "repos_url": "https://api.github.com/users/gaborfeher/repos", "events_url": "https://api.github.com/users/gaborfeher/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborfeher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-03-31T14:11:37Z", "updated_at": "2020-04-07T14:31:46Z", "closed_at": "2020-04-02T21:28:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "google-cloud-ndb==1.1.2\r\nplatform: GAE python37\r\n(tried with global cache both turned on & off)\r\n\r\nOne of my entities has an indexed `JsonProperty` field. It all works fine until I query the entity with a projection including that property: in that case, trying to read that property causes an exception.\r\n\r\nSteps to reproduce:\r\n\r\n```\r\nclass SomeData(ndb.Model):\r\n    js = ndb.JsonProperty(indexed=True)\r\n```\r\n\r\n```\r\ndef demo():\r\n    SomeData(js = { 'hello': 'world' }).put()\r\n    x = SomeData.query().fetch()\r\n    logging.info(x[0].js)  # works\r\n    x = SomeData.query().fetch(projection=[SomeData.js])\r\n    logging.info(x[0].js)  # crashes\r\n    return 'ok'\r\n```\r\n\r\nAnd this is the exception I get:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1951, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1820, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/env/lib/python3.7/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/srv/main.py\", line 78, in demo\r\n    logging.info(x[0].js)  # crashes\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 1938, in __get__\r\n    return self._get_value(entity)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 1896, in _get_value\r\n    return self._get_user_value(entity)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 1531, in _get_user_value\r\n    return self._apply_to_values(entity, self._opt_call_from_base_type)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 1866, in _apply_to_values\r\n    new_value = function(value)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 1588, in _opt_call_from_base_type\r\n    value = self._call_from_base_type(value.b_val)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 1642, in _call_from_base_type\r\n    return call(value)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 1830, in call\r\n    new_value = method(self, value)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 3057, in _from_base_type\r\n    return json.loads(value.decode(\"ascii\"))\r\nAttributeError: 'str' object has no attribute 'decode'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/377", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/377/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/377/events", "html_url": "https://github.com/googleapis/python-ndb/issues/377", "id": 588481192, "node_id": "MDU6SXNzdWU1ODg0ODExOTI=", "number": 377, "title": "Exception using `delete_multi` with lots of objects", "user": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}, {"id": 1241750584, "node_id": "MDU6TGFiZWwxMjQxNzUwNTg0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": "This will not be worked on"}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-03-26T14:52:15Z", "updated_at": "2020-04-28T14:20:56Z", "closed_at": "2020-04-28T14:20:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to delete 621 objects:\r\n\r\n> datastore transaction or write too big.\r\n\r\n~~~~\r\nTraceback (most recent call last):\r\n  File \"/base/data/home/apps/s~impactful-web-725/20200325t162946.425515352118338600/lib/flask/app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/base/data/home/apps/s~impactful-web-725/20200325t162946.425515352118338600/lib/flask/app.py\", line 1951, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/base/data/home/apps/s~impactful-web-725/20200325t162946.425515352118338600/lib/flask/app.py\", line 1820, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/base/data/home/apps/s~impactful-web-725/20200325t162946.425515352118338600/lib/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/base/data/home/apps/s~impactful-web-725/20200325t162946.425515352118338600/lib/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/base/data/home/apps/s~impactful-web-725/20200325t162946.425515352118338600/main.py\", line 139, in cleanup\r\n    ndb.delete_multi(keys)\r\n  File \"/base/data/home/apps/s~impactful-web-725/20200325t162946.425515352118338600/lib/google/cloud/ndb/_options.py\", line 89, in wrapper\r\n    return wrapped(*pass_args, **kwargs)\r\n  File \"/base/data/home/apps/s~impactful-web-725/20200325t162946.425515352118338600/lib/google/cloud/ndb/utils.py\", line 110, in positional_wrapper\r\n    return wrapped(*args, **kwds)\r\n  File \"/base/data/home/apps/s~impactful-web-725/20200325t162946.425515352118338600/lib/google/cloud/ndb/model.py\", line 6382, in delete_multi\r\n    return [future.result() for future in futures]\r\n  File \"/base/data/home/apps/s~impactful-web-725/20200325t162946.425515352118338600/lib/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/base/data/home/apps/s~impactful-web-725/20200325t162946.425515352118338600/lib/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n_Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.INVALID_ARGUMENT, datastore transaction or write too big.)>\r\n~~~~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/376", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/376/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/376/events", "html_url": "https://github.com/googleapis/python-ndb/issues/376", "id": 588191402, "node_id": "MDU6SXNzdWU1ODgxOTE0MDI=", "number": 376, "title": "error with datastore emulator: \"invalid_client: The OAuth client was not found\"", "user": {"login": "snarfed", "id": 778068, "node_id": "MDQ6VXNlcjc3ODA2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/778068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snarfed", "html_url": "https://github.com/snarfed", "followers_url": "https://api.github.com/users/snarfed/followers", "following_url": "https://api.github.com/users/snarfed/following{/other_user}", "gists_url": "https://api.github.com/users/snarfed/gists{/gist_id}", "starred_url": "https://api.github.com/users/snarfed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snarfed/subscriptions", "organizations_url": "https://api.github.com/users/snarfed/orgs", "repos_url": "https://api.github.com/users/snarfed/repos", "events_url": "https://api.github.com/users/snarfed/events{/privacy}", "received_events_url": "https://api.github.com/users/snarfed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-03-26T06:39:41Z", "updated_at": "2020-04-07T14:31:46Z", "closed_at": "2020-03-27T17:37:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi all! just fyi, my CI recently picked up the 1.1.2 release, and it's crashing my unit tests, which run against the datastore emulator. stack trace below. downgrading to 1.1.1 fixes it. i expect the culprit is #362, but i don't know why exactly just yet.\r\n\r\nthe key error message seems to be:\r\n\r\n```\r\nGetting metadata from plugin failed with error: ('invalid_client: The OAuth client was not found.', '{\"error\": \"invalid_client\", \"error_description\": \"The OAuth client was not found.\"}')\r\n```\r\n\r\n[here's an example failed CI run.](https://app.circleci.com/pipelines/github/snarfed/bridgy/6/workflows/6ef57146-ed90-47e0-8c29-db02ca7bf730/jobs/1095) (if you expand the failed _Python 3 tests_ section and look at the inline log, it's truncated, so you'll want to click on that section's download icon to see the full log.)\r\n\r\noddly, it doesn't reproduce on my local environment in Mac OS. the unit tests run just fine with 1.1.2 there.\r\n\r\nthanks in advance for looking at this!\r\n\r\n#### Environment details\r\n\r\n1. google-cloud-ndb 1.1.2, running against the datastore emulator.\r\n2. OS: Debian Stretch ([google/cloud-sdk:latest](https://hub.docker.com/r/google/cloud-sdk) docker image)\r\n3. Python 3.8 in a virtualenv. list of installed packages above.\r\n\r\n#### Stack trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"/root/project/tests/test_app.py\", line 26, in setUp\r\n    super(AppTest, self).setUp()\r\n  File \"/root/project/tests/testutil.py\", line 384, in setUp\r\n    entity.put()\r\n  File \"/root/project/local3/lib/python3.8/site-packages/oauth_dropins/webutil/models.py\", line 13, in put\r\n    return super(StringIdModel, self).put(*args, **kwargs)\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/_options.py\", line 89, in wrapper\r\n    return wrapped(*pass_args, **kwargs)\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/utils.py\", line 78, in wrapper\r\n    return wrapped(*args, **new_kwargs)\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/utils.py\", line 110, in positional_wrapper\r\n    return wrapped(*args, **kwds)\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/model.py\", line 5158, in _put\r\n    return self._put_async(_options=kwargs[\"_options\"]).result()\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/model.py\", line 5219, in put\r\n    ds_key = yield _datastore_api.put(ds_entity, kwargs[\"_options\"])\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/_datastore_api.py\", line 394, in put\r\n    key_pb = yield batch.put(entity_pb)\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/tasklets.py\", line 312, in _advance_tasklet\r\n    yielded = self.generator.send(send_value)\r\n  File \"/root/project/local3/lib/python3.8/site-packages/google/cloud/ndb/_retry.py\", line 84, in retry_wrapper\r\n    raise core_exceptions.RetryError(\r\ngoogle.api_core.exceptions.RetryError: Maximum number of 3 retries exceeded while calling <function make_call.<locals>.rpc_call at 0x7fa1095ff3a0>, last exception: <_MultiThreadedRendezvous of RPC that terminated with:\r\n\tstatus = StatusCode.UNAVAILABLE\r\n\tdetails = \"Getting metadata from plugin failed with error: ('invalid_client: The OAuth client was not found.', '{\\n  \"error\": \"invalid_client\",\\n  \"error_description\": \"The OAuth client was not found.\"\\n}')\"\r\n\tdebug_error_string = \"{\"created\":\"@1585202400.644468011\",\"description\":\"Getting metadata from plugin failed with error: ('invalid_client: The OAuth client was not found.', '{\\n  \"error\": \"invalid_client\",\\n  \"error_description\": \"The OAuth client was not found.\"\\n}')\",\"file\":\"src/core/lib/security/credentials/plugin/plugin\r\n_credentials.cc\",\"file_line\":79,\"grpc_status\":14}\"\r\n>\r\n```\r\n\r\n`pip list` output:\r\n\r\n```\r\nPackage                      Version   \r\n---------------------------- ----------\r\nbeautifulsoup4               4.8.2     \r\nbrevity                      0.2.17    \r\ncachetools                   3.1.1     \r\ncertifi                      2019.11.28\r\nchardet                      3.0.4     \r\ncoverage                     5.0.4     \r\ncoveralls                    1.11.1    \r\ndocopt                       0.6.2     \r\necdsa                        0.15      \r\nextras                       1.0.0     \r\nfeedgen                      0.9.0     \r\nfixtures                     3.0.0     \r\ngdata-python3                3.0.1     \r\ngoogle-api-core              1.16.0    \r\ngoogle-auth                  1.12.0    \r\ngoogle-cloud-core            1.3.0     \r\ngoogle-cloud-datastore       1.11.0    \r\ngoogle-cloud-error-reporting 0.33.0    \r\ngoogle-cloud-logging         1.15.0    \r\ngoogle-cloud-ndb             1.1.1     \r\ngoogle-cloud-tasks           1.5.0     \r\ngoogleapis-common-protos     1.51.0    \r\ngranary                      3.0       \r\ngrpc-google-iam-v1           0.12.3    \r\ngrpcio                       1.27.2    \r\ngunicorn                     20.0.4    \r\nhtml2text                    2020.1.16 \r\nhtml5lib                     1.0.1     \r\nhumanfriendly                4.18      \r\nhumanize                     0.5.1     \r\nidna                         2.9       \r\nJinja2                       2.11.1    \r\nlinecache2                   1.0.0     \r\nlxml                         4.4.3     \r\nMarkupSafe                   1.1.1     \r\nmf2py                        1.1.2     \r\nmf2util                      0.5.1     \r\nmox3                         0.28.0    \r\noauth-dropins                3.0       \r\noauthlib                     3.1.0     \r\npbr                          5.4.4     \r\npip                          18.1      \r\npkg-resources                0.0.0     \r\nprotobuf                     3.11.3    \r\npyasn1                       0.4.8     \r\npyasn1-modules               0.2.8     \r\nPySocks                      1.7.1     \r\npython-dateutil              2.8.1     \r\npython-mimeparse             1.6.0     \r\npython-tumblpy               1.1.4     \r\npytz                         2019.3    \r\nredis                        3.4.1     \r\nrequests                     2.23.0    \r\nrequests-oauthlib            1.3.0     \r\nrsa                          4.0       \r\nsetuptools                   40.8.0    \r\nsix                          1.14.0    \r\nsoupsieve                    2.0       \r\ntesttools                    2.4.0     \r\ntlslite-ng                   0.7.5     \r\ntraceback2                   1.4.0     \r\ntweepy                       3.8.0     \r\nujson                        1.35      \r\nunittest2                    1.1.0     \r\nurllib3                      1.25.8    \r\nwebapp2                      3.0.0b1   \r\nwebencodings                 0.5.1     \r\nwebmentiontools              0.4.0     \r\nWebOb                        1.8.6     \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/374", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/374/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/374/events", "html_url": "https://github.com/googleapis/python-ndb/issues/374", "id": 586445056, "node_id": "MDU6SXNzdWU1ODY0NDUwNTY=", "number": 374, "title": "fetch_page with start_cursor returns AttributeError: 'Cursor' object has no attribute 'cursor'", "user": {"login": "safetymonkey", "id": 187912, "node_id": "MDQ6VXNlcjE4NzkxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/187912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/safetymonkey", "html_url": "https://github.com/safetymonkey", "followers_url": "https://api.github.com/users/safetymonkey/followers", "following_url": "https://api.github.com/users/safetymonkey/following{/other_user}", "gists_url": "https://api.github.com/users/safetymonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/safetymonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/safetymonkey/subscriptions", "organizations_url": "https://api.github.com/users/safetymonkey/orgs", "repos_url": "https://api.github.com/users/safetymonkey/repos", "events_url": "https://api.github.com/users/safetymonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/safetymonkey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-03-23T19:03:13Z", "updated_at": "2020-04-07T13:08:08Z", "closed_at": "2020-03-24T23:19:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n1. google-cloud-ndb 1.1.2\r\n2. macOS 10.15.3\r\n3. Python 2.7.12\r\n\r\n#### Steps to reproduce\r\n\r\n  1. `threads, cursor, more = query.fetch_page(limit, start_cursor=start_cursor)`\r\n\r\n#### Code example\r\nBelow is a succinct snippet of the call I'm making that's returning the stack trace in question. For the sake of completion I added a more complete picture of the code being triggered here at the bottm. Note that this is a message system for a board game with a map of Europe, hence the references to \"country\" and \"Turkey\".\r\n\r\n```python\r\n# models/message_thread.py\r\nclass MessageThread(ndb.Model):\r\n  @staticmethod\r\n  def _fetch_threads(query, cursor, limit):\r\n    \"\"\"Helper method for executing a thread query.\"\"\"\r\n    query = query.order(-PressThread.last_updated)\r\n\r\n    start_cursor = cursor if (cursor and cursor.to_websafe_string()) else None\r\n    if start_cursor:\r\n      threads, cursor, more = query.fetch_page(limit, start_cursor=start_cursor)\r\n```\r\n\r\n#### Stack trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1535, in __call__\r\n    rv = self.handle_exception(request, response, e)\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1529, in __call__\r\n    rv = self.router.dispatch(request, response)\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1278, in default_dispatcher\r\n    return route.handler_adapter(request, response)\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1102, in __call__\r\n    return handler.dispatch()\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 572, in dispatch\r\n    return self.handle_exception(e, self.app.debug)\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 570, in dispatch\r\n    return method(*args, **kwargs)\r\n  File \"/Projects/MyProject/controllers/message_thread.py\", line 38, in get\r\n    self.list_thread_headers(game, member)\r\n  File \"/Projects/MyProject/controllers/message_thread.py\", line 125, in list_thread_headers\r\n    cursor)\r\n  File \"/Projects/MyProject/models/message_thread.py\", line 111, in get_for_country\r\n    return MessageThread._fetch_threads(query, cursor, limit)\r\n  File \"/Projects/MyProject/models/message_thread.py\", line 121, in _fetch_threads\r\n    threads, cursor, more = query.fetch_page(limit, start_cursor=start_cursor)\r\n  File \"/Projects/MyProject/lib/google/cloud/ndb/query.py\", line 1236, in wrapper\r\n    return wrapped(self, *dummy_args, _options=query_options)\r\n  File \"/Projects/MyProject/lib/google/cloud/ndb/utils.py\", line 78, in wrapper\r\n    return wrapped(*args, **new_kwargs)\r\n  File \"/Projects/MyProject/lib/google/cloud/ndb/utils.py\", line 110, in positional_wrapper\r\n    return wrapped(*args, **kwds)\r\n  File \"/Projects/MyProject/lib/google/cloud/ndb/query.py\", line 2334, in fetch_page\r\n    None, _options=kwargs[\"_options\"]\r\n  File \"/Projects/MyProject/lib/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/Projects/MyProject/lib/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\nAttributeError: 'Cursor' object has no attribute 'cursor'\r\n```\r\n\r\n#### Expanded code snippets\r\n```python\r\n# controllers/message_thread.py\r\nclass MessageThreadController(webapp2.RequestHandler):\r\n  def get(self, game_id, thread_id=None):\r\n    if thread_id is None:\r\n      self.list_thread_headers(game, player)\r\n\r\n  def list_thread_headers(self, game, player):\r\n    cursor = Cursor(urlsafe=self.request.get('cursor'))\r\n    threads, cursor = MessageThread.get_for_country(game.key, player.country,\r\n                                                  cursor)\r\n```\r\n\r\n```python\r\n# models/message_thread.py\r\nclass MessageThread(ndb.Model):\r\n  @staticmethod\r\n  def get_for_country(game_key, country, cursor, limit=5):\r\n    \"\"\"Returns the newest threads for the given country.\"\"\"\r\n    query = (MessageThread.query(ancestor=game_key).filter(\r\n        MessageThread.recipients == country))\r\n    return MessageThread._fetch_threads(query, cursor, limit)\r\n\r\n  @staticmethod\r\n  def _fetch_threads(query, cursor, limit):\r\n    \"\"\"Helper method for executing a thread query.\"\"\"\r\n    query = query.order(-PressThread.last_updated)\r\n\r\n    start_cursor = cursor if (cursor and cursor.to_websafe_string()) else None\r\n    if start_cursor:\r\n      threads, cursor, more = query.fetch_page(limit, start_cursor=start_cursor)\r\n    else:\r\n      threads, cursor, more = query.fetch_page(limit)\r\n\r\n    # Cloud Datastore Emulator always returns more=True in development mode. \r\n    if ServerSettings.is_debug_server():\r\n      if len(threads) < 5:\r\n        cursor = None\r\n    else:\r\n      if not more:\r\n        cursor = None\r\n\r\n    return threads, cursor\r\n```\r\n\r\n```python\r\n# test/message_thread_test.py\r\nclass MessageThreadControllerTest(unittest.TestCase):\r\n  def test_list_thread_headers_cursor(self):\r\n    test_threads = []\r\n    for i in xrange(10):\r\n      thread = MessageThread.new(stuff_needed_for_message_thread)\r\n      test_threads.append(thread)\r\n      thread.put()\r\n    # Threads are reverse sorted.\r\n    newest_five_threads = [9, 8, 7, 6, 5]\r\n    older_threads = [4, 3, 2, 1, 0]\r\n\r\n    response = self.getGETResponseForPlayer(self.game.url() + '/messagethread',\r\n                                            player=self.player_turkey)\r\n    self.assertEqual(response.status_int, 200)\r\n    html = response.body\r\n    for i in newest_five_threads:\r\n      self.assertIn('thread_%s' % test_threads[i].get_id(), html)\r\n    for i in older_threads:\r\n      self.assertNotIn('thread_%s' % test_threads[i].get_id(), html)\r\n\r\n    _, cursor = MessageThread.get_for_country(self.game.key, 'Turkey', None)\r\n    self.assertIn(cursor.urlsafe(), html, 'Cursor should be in body.')\r\n\r\n    response = self.getGETResponseForPlayer(self.game.url() + '/messagethread',\r\n                                            params={'cursor': cursor.urlsafe()},\r\n                                            player=self.player_turkey)\r\n    self.assertEqual(response.status_int, 200) # Returning 500\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/369", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/369/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/369/events", "html_url": "https://github.com/googleapis/python-ndb/issues/369", "id": 584211675, "node_id": "MDU6SXNzdWU1ODQyMTE2NzU=", "number": 369, "title": "Nested LocalStructuredProperties that have required members can't be None when legacy_data=True", "user": {"login": "davidsansome", "id": 314463, "node_id": "MDQ6VXNlcjMxNDQ2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/314463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidsansome", "html_url": "https://github.com/davidsansome", "followers_url": "https://api.github.com/users/davidsansome/followers", "following_url": "https://api.github.com/users/davidsansome/following{/other_user}", "gists_url": "https://api.github.com/users/davidsansome/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidsansome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidsansome/subscriptions", "organizations_url": "https://api.github.com/users/davidsansome/orgs", "repos_url": "https://api.github.com/users/davidsansome/repos", "events_url": "https://api.github.com/users/davidsansome/events{/privacy}", "received_events_url": "https://api.github.com/users/davidsansome/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-03-19T07:19:42Z", "updated_at": "2020-04-06T17:09:55Z", "closed_at": "2020-03-20T00:31:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "That title was a bit of a mouthful so here's an example:\r\n\r\n```\r\nclass Foo(ndb.Model):\r\n  required_property = ndb.StringProperty(required=True)\r\n\r\nclass ContainerA(ndb.Model):\r\n  foo = ndb.LocalStructuredProperty(Foo)\r\n\r\nclass ContainerB(ndb.Model):\r\n  child = ndb.LocalStructuredProperty(ContainerA)\r\n\r\nwith client.context(legacy_data=True):\r\n  ContainerA().put()  # Works\r\n  ContainerB(child=ContainerA()).put()  # Doesn't work\r\n\r\nwith client.context(legacy_data=False):\r\n  ContainerB(child=ContainerA()).put()  # Works if legacy_data=False\r\n```\r\n\r\nWhen legacy_data=True, serializing an entity that has an **optional** LocalStructuredProperty (ContainerA's `foo` above) seems to create an empty child entity when that field is not set.  When that child entity has required fields you get an exception when trying to add it to datastore.\r\nI would expect it to not create a child entity at all, and leave the field unset in the containing entity.\r\n\r\nIn this example I get this exception:\r\n```\r\n  File \"[snip]\", line 424, in foo\r\n    ContainerB(child=ContainerA()).put()  # Doesn't work\r\n  File \"[snip]/site-packages/google/cloud/ndb/_options.py\", line 89, in wrapper\r\n    return wrapped(*pass_args, **kwargs)\r\n  File \"[snip]/site-packages/google/cloud/ndb/utils.py\", line 78, in wrapper\r\n    return wrapped(*args, **new_kwargs)\r\n  File \"[snip]/site-packages/google/cloud/ndb/utils.py\", line 110, in positional_wrapper\r\n    return wrapped(*args, **kwds)\r\n  File \"[snip]/site-packages/google/cloud/ndb/model.py\", line 5158, in _put\r\n    return self._put_async(_options=kwargs[\"_options\"]).result()\r\n  File \"[snip]/site-packages/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"[snip]/site-packages/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"[snip]/site-packages/google/cloud/ndb/tasklets.py\", line 312, in _advance_tasklet\r\n    yielded = self.generator.send(send_value)\r\n  File \"[snip]/site-packages/google/cloud/ndb/model.py\", line 5218, in put\r\n    ds_entity = _entity_to_ds_entity(self)\r\n  File \"[snip]/site-packages/google/cloud/ndb/model.py\", line 742, in _entity_to_ds_entity\r\n    prop._to_datastore(entity, data)\r\n  File \"[snip]/site-packages/google/cloud/ndb/model.py\", line 4364, in _to_datastore\r\n    _entity_to_ds_entity(value, set_key=self._keep_keys)\r\n  File \"[snip]/site-packages/google/cloud/ndb/model.py\", line 742, in _entity_to_ds_entity\r\n    prop._to_datastore(entity, data)\r\n  File \"[snip]/site-packages/google/cloud/ndb/model.py\", line 4364, in _to_datastore\r\n    _entity_to_ds_entity(value, set_key=self._keep_keys)\r\n  File \"[snip]/site-packages/google/cloud/ndb/model.py\", line 747, in _entity_to_ds_entity\r\n    \"Entity has uninitialized properties: {}\".format(missing)\r\ngoogle.cloud.ndb.exceptions.BadValueError: Entity has uninitialized properties: required_property\r\n```\r\n\r\nPython 3.7.5 and google-cloud-ndb==1.1.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/367", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/367/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/367/events", "html_url": "https://github.com/googleapis/python-ndb/issues/367", "id": 583958097, "node_id": "MDU6SXNzdWU1ODM5NTgwOTc=", "number": 367, "title": "LocalStructuredProperty diverges in behavior from StructuredProperty", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-03-18T19:36:37Z", "updated_at": "2020-04-07T13:11:04Z", "closed_at": "2020-03-21T06:38:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\n  Previously, [StructuredProperty](https://github.com/GoogleCloudPlatform/datastore-ndb-python/blob/cf4cab3f1f69cd04e1a9229871be466b53729f3f/ndb/model.py#L2238) and [LocalStructuredProperty](https://github.com/GoogleCloudPlatform/datastore-ndb-python/blob/cf4cab3f1f69cd04e1a9229871be466b53729f3f/ndb/model.py#L2533) where both inheriting from [a mixin](https://github.com/GoogleCloudPlatform/datastore-ndb-python/blob/cf4cab3f1f69cd04e1a9229871be466b53729f3f/ndb/model.py#L2214) that provided their `_get_for_dict`, where calling `to_dict` on these models would return a dictionary whose values were also dictionaries.\r\n\r\n  Currently, [StructuredProperty](https://github.com/googleapis/python-ndb/blob/85ad32b68698870c0da45a805bb5afa06a421845/google/cloud/ndb/model.py#L3941) implements its own [_get_for_dict](https://github.com/googleapis/python-ndb/blob/85ad32b68698870c0da45a805bb5afa06a421845/google/cloud/ndb/model.py#L3977), which is in agreement with the old behavior; while [LocalStructuredProperty](https://github.com/googleapis/python-ndb/blob/85ad32b68698870c0da45a805bb5afa06a421845/google/cloud/ndb/model.py#L4236) does not and this will fall back to the grandparent `_get_for_dict` [here](https://github.com/googleapis/python-ndb/blob/85ad32b68698870c0da45a805bb5afa06a421845/google/cloud/ndb/model.py#L843). This causes `LocalStructuredProperty` to return a dictionary whose values are `entity`s. \r\n\r\nIf this is by design I will appreciate the rationale as well. Thank you \u263a\ufe0f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/366", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/366/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/366/events", "html_url": "https://github.com/googleapis/python-ndb/issues/366", "id": 581556012, "node_id": "MDU6SXNzdWU1ODE1NTYwMTI=", "number": 366, "title": "Nested Transaction workaround", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345320591, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTkx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-03-15T07:04:30Z", "updated_at": "2020-04-03T22:32:39Z", "closed_at": "2020-04-03T22:32:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello again,\r\n    I hope your life is going well with the COVID19 drama.\r\n    This could either be a question or a feature request depending on your answer. \r\n    I noticed in the commit and PR history the fact that the new datastore does not support nested transactions and hence NDB also will not support it moving forward.\r\n    Nonetheless, we have cases where standalone methods need to be transactional and then, inadvertently, one may call another:\r\n\r\n```\r\n@ndb.transactional()\r\ndef do_thing(*args):\r\n    ...\r\n\r\n@ndb.transactional()\r\ndef do_another_thing(*args):\r\n    do_thing(*args)\r\n    ...\r\n```\r\nThe use case easy to see: functions that are composable and some are transactional, they are bound to intersect.\r\n\r\nI did the following workaround; my rationale being, if no nested transaction is supported anyway this is the best we can do. I have an ersats decorator that I use:\r\n\r\n```\r\ndef ndb_transactional(*nargs, **nkwargs):\r\n    def outter_wrap(func):\r\n        @wraps(func)\r\n        def inner_wrap(*args, **kwargs):\r\n            if ndb.in_transaction():\r\n                return func(*args, **kwargs)\r\n            else:\r\n                return ndb.transactional(*nargs, **nkwargs)(func)(*args, **kwargs)\r\n        return inner_wrap\r\n    return outter_wrap\r\n```\r\nSo if we are already in a transaction we will continue calling the wrapped function, else we will continue with the original `ndb.transactional()`. This coupled with a `warning` informing that there is no such thing as a nested transaction anymore could potentially handle these cases.\r\n\r\nShould you decide this is not a good feature request, I would be interested in your reasoning or whether or not you think this approach could have some unexpected consequence. Thank you very much.\r\n\r\nUPDATE: to be clear, I am suggesting that `ndb.transactional` checks for an existing transaction and either continues if one exists or starts one if it doesn't. If one exists already it logs a warning.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/363", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/363/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/363/events", "html_url": "https://github.com/googleapis/python-ndb/issues/363", "id": 579393488, "node_id": "MDU6SXNzdWU1NzkzOTM0ODg=", "number": 363, "title": "More System Test Failures", "user": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-11T16:30:24Z", "updated_at": "2020-05-05T18:21:26Z", "closed_at": "2020-05-05T18:21:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We seem to have a new class of intermittent failure in the system tests run under Kokoro. In both of these tests, an `eventually` call ensures that all entities are created and in the database, but a subsequent query fails nonetheless. Possibly the indexes used by the queries under test haven't finished updating yet. If this is the case, make the `eventually` call exercise the index?\r\n\r\n~~~~\r\n=================================== FAILURES ===================================\r\n_____________________ test_offset_and_limit_with_or_filter _____________________\r\n\r\ndispose_of = <function dispose_of.<locals>.delete_entity at 0x7f8180d735f0>\r\n\r\n    @pytest.mark.usefixtures(\"client_context\")\r\n    def test_offset_and_limit_with_or_filter(dispose_of):\r\n        class SomeKind(ndb.Model):\r\n            foo = ndb.IntegerProperty()\r\n            bar = ndb.StringProperty()\r\n\r\n        @ndb.toplevel\r\n        def make_entities():\r\n            keys = yield (\r\n                SomeKind(foo=0, bar=\"a\").put_async(),\r\n                SomeKind(foo=1, bar=\"b\").put_async(),\r\n                SomeKind(foo=2, bar=\"a\").put_async(),\r\n                SomeKind(foo=3, bar=\"b\").put_async(),\r\n                SomeKind(foo=4, bar=\"a\").put_async(),\r\n                SomeKind(foo=5, bar=\"b\").put_async(),\r\n            )\r\n            for key in keys:\r\n                dispose_of(key._key)\r\n\r\n        make_entities()\r\n        eventually(SomeKind.query().fetch, _length_equals(6))\r\n\r\n        query = SomeKind.query(ndb.OR(SomeKind.bar == \"a\", SomeKind.bar == \"b\"))\r\n        query = query.order(SomeKind.foo)\r\n        results = query.fetch(offset=1, limit=2)\r\n\r\n>       assert [entity.foo for entity in results] == [1, 2]\r\nE       assert [] == [1, 2]\r\nE         Right contains 2 more items, first extra item: 1\r\nE         Full diff:\r\nE         - []\r\nE         + [1, 2]\r\n\r\ntests/system/test_query.py:513: AssertionError\r\n__________ test_query_repeated_structured_property_with_entity_twice ___________\r\n\r\ndispose_of = <function dispose_of.<locals>.delete_entity at 0x7f817c1807a0>\r\n\r\n    @pytest.mark.usefixtures(\"client_context\")\r\n    def test_query_repeated_structured_property_with_entity_twice(dispose_of):\r\n        class OtherKind(ndb.Model):\r\n            one = ndb.StringProperty()\r\n            two = ndb.StringProperty()\r\n            three = ndb.StringProperty()\r\n\r\n        class SomeKind(ndb.Model):\r\n            foo = ndb.IntegerProperty()\r\n            bar = ndb.StructuredProperty(OtherKind, repeated=True)\r\n\r\n        @ndb.synctasklet\r\n        def make_entities():\r\n            entity1 = SomeKind(\r\n                foo=1,\r\n                bar=[\r\n                    OtherKind(one=\"pish\", two=\"posh\", three=\"pash\"),\r\n                    OtherKind(one=\"bish\", two=\"bosh\", three=\"bash\"),\r\n                ],\r\n            )\r\n            entity2 = SomeKind(\r\n                foo=2,\r\n                bar=[\r\n                    OtherKind(one=\"bish\", two=\"bosh\", three=\"bass\"),\r\n                    OtherKind(one=\"pish\", two=\"posh\", three=\"pass\"),\r\n                ],\r\n            )\r\n            entity3 = SomeKind(\r\n                foo=3,\r\n                bar=[\r\n                    OtherKind(one=\"pish\", two=\"fosh\", three=\"fash\"),\r\n                    OtherKind(one=\"bish\", two=\"posh\", three=\"bash\"),\r\n                ],\r\n            )\r\n\r\n            keys = yield (\r\n                entity1.put_async(),\r\n                entity2.put_async(),\r\n                entity3.put_async(),\r\n            )\r\n            raise ndb.Return(keys)\r\n\r\n        keys = make_entities()\r\n        for key in keys:\r\n            dispose_of(key._key)\r\n\r\n        eventually(SomeKind.query().fetch, _length_equals(3))\r\n        query = (\r\n            SomeKind.query()\r\n            .filter(\r\n                SomeKind.bar == OtherKind(one=\"pish\", two=\"posh\"),\r\n                SomeKind.bar == OtherKind(two=\"posh\", three=\"pash\"),\r\n            )\r\n            .order(SomeKind.foo)\r\n        )\r\n\r\n        results = query.fetch()\r\n>       assert len(results) == 1\r\nE       assert 0 == 1\r\nE         -0\r\nE         +1\r\n\r\ntests/system/test_query.py:1143: AssertionError\r\n~~~~\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/361", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/361/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/361/events", "html_url": "https://github.com/googleapis/python-ndb/issues/361", "id": 578733518, "node_id": "MDU6SXNzdWU1Nzg3MzM1MTg=", "number": 361, "title": "io.grpc.StatusRuntimeException: RESOURCE_EXHAUSTED: gRPC message exceeds maximum size 4194304", "user": {"login": "sudipta-deca", "id": 58433467, "node_id": "MDQ6VXNlcjU4NDMzNDY3", "avatar_url": "https://avatars3.githubusercontent.com/u/58433467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sudipta-deca", "html_url": "https://github.com/sudipta-deca", "followers_url": "https://api.github.com/users/sudipta-deca/followers", "following_url": "https://api.github.com/users/sudipta-deca/following{/other_user}", "gists_url": "https://api.github.com/users/sudipta-deca/gists{/gist_id}", "starred_url": "https://api.github.com/users/sudipta-deca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sudipta-deca/subscriptions", "organizations_url": "https://api.github.com/users/sudipta-deca/orgs", "repos_url": "https://api.github.com/users/sudipta-deca/repos", "events_url": "https://api.github.com/users/sudipta-deca/events{/privacy}", "received_events_url": "https://api.github.com/users/sudipta-deca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814806013, "node_id": "MDU6TGFiZWwxODE0ODA2MDEz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/api:%20datastore", "name": "api: datastore", "color": "141ff7", "default": false, "description": "Issues related to the Cloud Datastore API."}, {"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-10T05:56:50Z", "updated_at": "2020-05-08T15:27:14Z", "closed_at": "2020-05-08T15:27:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting error in Python 3.6.6 where I am trying to write data using `ndb.put_multi(chunks)`  where **ndb** is **google.cloud.ndb** from  [google-cloud-ndb==1.0.1](https://pypi.org/project/google-cloud-ndb/)\r\n\r\n> from google.cloud import ndb\r\n\r\nWe are getting the following error while doing `ndb.put_multi(chunks)`. where we have `sys.getsizeof(chunks)` is 200 (bytes) and the total size of data including all chunks is 13MB\r\n\r\n> [datastore] WARNING: Exception processing message\r\n> [datastore] **io.grpc.StatusRuntimeException: RESOURCE_EXHAUSTED: gRPC message exceeds maximum size 4194304: 13208641**\r\n> [datastore]     at io.grpc.Status.asRuntimeException(Status.java:521)\r\n> [datastore]     at io.grpc.internal.MessageDeframer.processHeader(MessageDeframer.java:387)\r\n> [datastore]     at io.grpc.internal.MessageDeframer.deliver(MessageDeframer.java:267)\r\n> [datastore]     at io.grpc.internal.MessageDeframer.request(MessageDeframer.java:161)\r\n> [datastore]     at io.grpc.internal.AbstractStream$TransportState.requestMessagesFromDeframer(AbstractStream.java:205)\r\n> [datastore]     at io.grpc.netty.NettyServerStream$Sink$1.run(NettyServerStream.java:100)\r\n> [datastore]     at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n> [datastore]     at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n> [datastore]     at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)\r\n> [datastore]     at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)\r\n> [datastore]     at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n> [datastore]     at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n> [datastore]     at java.base/java.lang.Thread.run(Thread.java:830)\r\n> [datastore] \r\n> \r\n\r\nI am running datastore emulator in my local using `gcloud beta emulators datastore start` command.\r\nWorking fine with small data but I need to insert 13Mb data.\r\nSo, Is there any way to increase the limit in emulator?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/359", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/359/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/359/events", "html_url": "https://github.com/googleapis/python-ndb/issues/359", "id": 576527332, "node_id": "MDU6SXNzdWU1NzY1MjczMzI=", "number": 359, "title": "Error retrieving entity with Compressed Repeated LocalStructuredProperty", "user": {"login": "safetymonkey", "id": 187912, "node_id": "MDQ6VXNlcjE4NzkxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/187912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/safetymonkey", "html_url": "https://github.com/safetymonkey", "followers_url": "https://api.github.com/users/safetymonkey/followers", "following_url": "https://api.github.com/users/safetymonkey/following{/other_user}", "gists_url": "https://api.github.com/users/safetymonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/safetymonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/safetymonkey/subscriptions", "organizations_url": "https://api.github.com/users/safetymonkey/orgs", "repos_url": "https://api.github.com/users/safetymonkey/repos", "events_url": "https://api.github.com/users/safetymonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/safetymonkey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-03-05T20:59:44Z", "updated_at": "2020-03-16T08:41:52Z", "closed_at": "2020-03-16T08:41:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "This seems to be extremely similar to #275 and #276, except the error I'm seeing is when I try to retrieve the record, not save it. Record saving seems fine.\r\n\r\n#### Environment details\r\n\r\n1. google-cloud-ndb\r\n2. macOS 10.15.3\r\n3. Python 2.7.12\r\n4. google-cloud-ndb version: 1.1.0\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Create entity with compressed, repeated LocalStructured Property\r\n  2. `put` entity\r\n  3. `get_by_id` entity\r\n\r\n#### Code example\r\n*Note:* changing the below to `compressed=False` causes everything to work.\r\n\r\n```python\r\nclass MessageThreadMessage(ndb.Model):\r\n  text = ndb.TextProperty()\r\n\r\nclass MessageThread(ndb.Model):\r\n  messages = ndb.LocalStructuredProperty(MessageThreadMessage,\r\n                                         repeated=True,\r\n                                         compressed=True)\r\n\r\nthread = MessageThread.get_by_id(thread_id)\r\nprint [message for message in thread.messages]\r\n```\r\n\r\n#### Stack trace\r\n```\r\nERROR    2020-03-05 20:44:37,936 webapp2.py:1552] 'Entity' object has no attribute 'startswith'\r\nTraceback (most recent call last):\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1535, in __call__\r\n    rv = self.handle_exception(request, response, e)\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1529, in __call__\r\n    rv = self.router.dispatch(request, response)\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1278, in default_dispatcher\r\n    return route.handler_adapter(request, response)\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1102, in __call__\r\n    return handler.dispatch()\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 572, in dispatch\r\n    return self.handle_exception(e, self.app.debug)\r\n  File \"/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 570, in dispatch\r\n    return method(*args, **kwargs)\r\n  File \"/Projects/my_project/controllers/message_thread.py\", line 40, in get\r\n    self.show_thread(game, member, thread_id)\r\n  File \"/Projects/my_project/controllers/message_thread.py\", line 191, in show_thread\r\n    [message for message in thread.messages])\r\n  File \"/Projects/my_project/Venv/lib/python2.7/site-packages/google/cloud/ndb/model.py\", line 1933, in __get__\r\n    return self._get_value(entity)\r\n  File \"/Projects/my_project/Venv/lib/python2.7/site-packages/google/cloud/ndb/model.py\", line 1891, in _get_value\r\n    return self._get_user_value(entity)\r\n  File \"/Projects/my_project/Venv/lib/python2.7/site-packages/google/cloud/ndb/model.py\", line 1526, in _get_user_value\r\n    return self._apply_to_values(entity, self._opt_call_from_base_type)\r\n  File \"/Projects/my_project/Venv/lib/python2.7/site-packages/google/cloud/ndb/model.py\", line 1858, in _apply_to_values\r\n    value[:] = map(function, value)\r\n  File \"/Projects/my_project/Venv/lib/python2.7/site-packages/google/cloud/ndb/model.py\", line 1583, in _opt_call_from_base_type\r\n    value = self._call_from_base_type(value.b_val)\r\n  File \"/Projects/my_project/Venv/lib/python2.7/site-packages/google/cloud/ndb/model.py\", line 1637, in _call_from_base_type\r\n    return call(value)\r\n  File \"/Projects/my_project/Venv/lib/python2.7/site-packages/google/cloud/ndb/model.py\", line 1825, in call\r\n    new_value = method(self, value)\r\n  File \"/Projects/my_project/Venv/lib/python2.7/site-packages/google/cloud/ndb/model.py\", line 2493, in _from_base_type\r\n    if not value.startswith(_ZLIB_COMPRESSION_MARKER):\r\nAttributeError: 'Entity' object has no attribute 'startswith'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/357", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/357/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/357/events", "html_url": "https://github.com/googleapis/python-ndb/issues/357", "id": 575588786, "node_id": "MDU6SXNzdWU1NzU1ODg3ODY=", "number": 357, "title": "Can no longer nest sequences of futures in parrallel `yield` in tasklets", "user": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-03-04T17:13:37Z", "updated_at": "2020-04-07T14:31:46Z", "closed_at": "2020-03-05T14:11:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This bug report also comes to us from PR #349.\r\n\r\nIn Legacy NDB, apparently, you could do something like:\r\n\r\n~~~~\r\n@ndb.tasklet\r\ndef some_tasklet():\r\n    some_future = foo.xxx_async()\r\n    some_other_futures = [bar.xxx_async() for bar in baz]\r\n    a, b = yield some_future, some_other_futures\r\n    return do_some_other_stuff(a, b)\r\n~~~~\r\n\r\nThe arbitrary nesting of sequences of futures in the parallel yield is not a documented feature. In fact, the documentation uses an example that goes out of its way to avoid this, by breaking out the top level items in the `yield` as separate tasklets:\r\n\r\n~~~~\r\n@ndb.tasklet\r\ndef get_cart_tasklet(acct):\r\n    cart = yield CartItem.query(CartItem.account == acct.key).fetch_async()\r\n    yield ndb.get_multi_async([item.inventory for item in cart])\r\n    raise ndb.Return(cart)\r\n\r\n\r\n@ndb.tasklet\r\ndef get_offers_tasklet(acct):\r\n    offers = yield SpecialOffer.query().fetch_async(10)\r\n    yield ndb.get_multi_async([offer.inventory for offer in offers])\r\n    raise ndb.Return(offers)\r\n\r\n\r\n@ndb.tasklet\r\ndef get_cart_plus_offers_tasklet(acct):\r\n    cart, offers = yield get_cart_tasklet(acct), get_offers_tasklet(acct)\r\n    raise ndb.Return((cart, offers))\r\n~~~~\r\n\r\nRefactoring the first example to use separate tasklets would be kind of unwieldy, and, I have just learned, legacy NDB supported that case by looking for sequences in `MultiFuture` and converting them to nested `MultiFuture`s, so we should probably do the same.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/353", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/353/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/353/events", "html_url": "https://github.com/googleapis/python-ndb/issues/353", "id": 574900894, "node_id": "MDU6SXNzdWU1NzQ5MDA4OTQ=", "number": 353, "title": "`yield` of an empty list in tasklet hangs forever", "user": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-03-03T19:49:20Z", "updated_at": "2020-04-06T17:09:56Z", "closed_at": "2020-03-04T14:14:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is first described in a pull request (PR #349) to address the issue.\r\n\r\nSay you have the following code:\r\n\r\n~~~~\r\n@ndb.tasklet\r\ndef some_tasklet():\r\n    keys = get_keys()\r\n    entities = yield [key.get_async() for key in keys]\r\n    ...\r\n~~~~\r\n\r\nThe code will hang at the `yield` statement as the `MultiFuture` never gets marked as completed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/351", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/351/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/351/events", "html_url": "https://github.com/googleapis/python-ndb/issues/351", "id": 573470904, "node_id": "MDU6SXNzdWU1NzM0NzA5MDQ=", "number": 351, "title": "Using Endpoints (Swagger/OpenAPI) with Python 3", "user": {"login": "dgaedcke", "id": 1172930, "node_id": "MDQ6VXNlcjExNzI5MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1172930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgaedcke", "html_url": "https://github.com/dgaedcke", "followers_url": "https://api.github.com/users/dgaedcke/followers", "following_url": "https://api.github.com/users/dgaedcke/following{/other_user}", "gists_url": "https://api.github.com/users/dgaedcke/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgaedcke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgaedcke/subscriptions", "organizations_url": "https://api.github.com/users/dgaedcke/orgs", "repos_url": "https://api.github.com/users/dgaedcke/repos", "events_url": "https://api.github.com/users/dgaedcke/events{/privacy}", "received_events_url": "https://api.github.com/users/dgaedcke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-01T03:30:18Z", "updated_at": "2020-03-02T19:36:54Z", "closed_at": "2020-03-02T19:36:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "My GAE Std app is currently in Python2.7 & we also use OpenAPI to generate our clients\r\nBut I'm facing [this version conflict with the old Endpoints library](https://github.com/cloudendpoints/endpoints-management-python/issues/72).\r\n\r\nI'm wondering if I bite the bullet and upgrade my code to Python 3 (using this new NDB library), will I face the same issue?  Or is there another/newer method for decorating my endpoints & generating the Swagger spec??\r\n\r\nThanks for any tips you can provide!!\r\n\r\nhttps://github.com/cloudendpoints/endpoints-management-python/issues/72", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/350", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/350/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/350/events", "html_url": "https://github.com/googleapis/python-ndb/issues/350", "id": 573050366, "node_id": "MDU6SXNzdWU1NzMwNTAzNjY=", "number": 350, "title": "arguments for `add_done_callback`", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141019, "node_id": "MDU6TGFiZWwxMzQxMTQxMDE5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-28T22:53:20Z", "updated_at": "2020-04-07T13:14:01Z", "closed_at": "2020-02-29T01:17:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, happy Friday.\r\n\r\nIs it possible to add the ability to pass in arguments with the `callbacks` in `Future` like [before](https://github.com/GoogleCloudPlatform/datastore-ndb-python/blob/master/ndb/tasklets.py#L308-L318).\r\n\r\nCurrently we have [this](https://github.com/googleapis/python-ndb/blob/master/google/cloud/ndb/tasklets.py#L229-L239) and its throwing some wrenches in our dependent code. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/345", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/345/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/345/events", "html_url": "https://github.com/googleapis/python-ndb/issues/345", "id": 570303505, "node_id": "MDU6SXNzdWU1NzAzMDM1MDU=", "number": 345, "title": "[Python 2] repeated StructuredProperty returns as empty list", "user": {"login": "rpanaro", "id": 29493145, "node_id": "MDQ6VXNlcjI5NDkzMTQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/29493145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpanaro", "html_url": "https://github.com/rpanaro", "followers_url": "https://api.github.com/users/rpanaro/followers", "following_url": "https://api.github.com/users/rpanaro/following{/other_user}", "gists_url": "https://api.github.com/users/rpanaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpanaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpanaro/subscriptions", "organizations_url": "https://api.github.com/users/rpanaro/orgs", "repos_url": "https://api.github.com/users/rpanaro/repos", "events_url": "https://api.github.com/users/rpanaro/events{/privacy}", "received_events_url": "https://api.github.com/users/rpanaro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-02-25T04:27:55Z", "updated_at": "2020-04-07T13:14:01Z", "closed_at": "2020-02-26T20:48:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\nPython 2.7.17   \r\ngoogle-cloud-ndb         1.0.1     \r\n\r\n#### Steps to reproduce\r\n\r\nCurrently trying to finish migration from old ndb and my repeated `StructuredProperty` returns from queries as empty lists.  I suppose the data is in legacy format.\r\n\r\n#### Code example\r\n\r\nModels:\r\n```\r\nclass Day(ndb.Model):\r\n   times = ndb.StructuredProperty(Timespan, 't', repeated = True)\r\n   ...\r\n```\r\n```\r\nclass Timespan(ndb.Model):\r\n   start = ndb.IntegerProperty('s', required = True)\r\n   duration = ndb.IntegerProperty('d', required = True)\r\n   varies = ndb.BooleanProperty('v')\r\n   title = ndb.StringProperty('t')\r\n   l = ndb.ComputedProperty(lambda self: self.title.lower())\r\n   color = ndb.StringProperty('c')\r\n   detail = ndb.TextProperty('i')\r\n```\r\nQuery:\r\n`day = Day.query([filter]).get()` results in `day.times` being `[]`\r\n\r\n#### Data Log\r\n\r\non Read & Write:\r\n```\r\n....\r\n    properties {\r\n      key: \"t.c\"\r\n      value {\r\n        array_value {\r\n          values {\r\n            string_value: \"blue\"\r\n          }\r\n          values {\r\n            string_value: \"green\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n    properties {\r\n      key: \"t.d\"\r\n      value {\r\n        array_value {\r\n          values {\r\n            integer_value: 3\r\n          }\r\n          values {\r\n            integer_value: 4\r\n          }\r\n        }\r\n      }\r\n    }\r\n    properties {\r\n      key: \"t.i\"\r\n      value {\r\n        array_value {\r\n          values {\r\n            string_value: \"foo text\"\r\n          }\r\n          values {\r\n            string_value: \"bar text\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n    properties {\r\n      key: \"t.l\"\r\n      value {\r\n        array_value {\r\n          values {\r\n            string_value: \"foo\"\r\n          }\r\n          values {\r\n            string_value: \"bar\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n    properties {\r\n      key: \"t.s\"\r\n      value {\r\n        array_value {\r\n          values {\r\n            integer_value: 58\r\n          }\r\n          values {\r\n            integer_value: 66\r\n          }\r\n        }\r\n      }\r\n    }\r\n    properties {\r\n      key: \"t.t\"\r\n      value {\r\n        array_value {\r\n          values {\r\n            string_value: \"foo\"\r\n          }\r\n          values {\r\n            string_value: \"bar\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n    properties {\r\n      key: \"t.v\"\r\n      value {\r\n        array_value {\r\n          values {\r\n            null_value: NULL_VALUE\r\n          }\r\n          values {\r\n            null_value: NULL_VALUE\r\n          }\r\n        }\r\n      }\r\n    }\r\n...\r\n```\r\n\r\nPossibly similar to a combo of #122 and/or #300 ??\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/343", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/343/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/343/events", "html_url": "https://github.com/googleapis/python-ndb/issues/343", "id": 569607773, "node_id": "MDU6SXNzdWU1Njk2MDc3NzM=", "number": 343, "title": "Possible thread leak", "user": {"login": "chmoder", "id": 82629, "node_id": "MDQ6VXNlcjgyNjI5", "avatar_url": "https://avatars3.githubusercontent.com/u/82629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chmoder", "html_url": "https://github.com/chmoder", "followers_url": "https://api.github.com/users/chmoder/followers", "following_url": "https://api.github.com/users/chmoder/following{/other_user}", "gists_url": "https://api.github.com/users/chmoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/chmoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chmoder/subscriptions", "organizations_url": "https://api.github.com/users/chmoder/orgs", "repos_url": "https://api.github.com/users/chmoder/repos", "events_url": "https://api.github.com/users/chmoder/events{/privacy}", "received_events_url": "https://api.github.com/users/chmoder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332096, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20investigating", "name": "status: investigating", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2020-02-24T02:38:17Z", "updated_at": "2020-03-18T19:19:17Z", "closed_at": "2020-03-11T19:06:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe investigated a bug about a process running out of threads in a long lasting process with thousands of requests being made.  After researching we narrowed down the cause to `key.get`; we also can reproduce with `query.fetch`.  \r\n\r\nThe below functions are ran in threading.py `start` when `key.get` is called.  It seems like one or more of them may have a thread that needs to close at the end of the request?  \r\n\r\nThank you for the help!\r\n\r\n```\r\n<function _run_channel_spin_thread.<locals>.channel_spin at 0x1119ec048>\r\n<grpc._plugin_wrapping._Plugin object at 0x1119fc9e8>\r\n<function _worker at 0x1119afae8>\r\n```\r\n\r\n#### Environment details\r\n\r\n1. python-ndb\r\n2. OS X Catalina\r\n3. python 3.7.3\r\n4. google-cloud-ndb==1.0.0\r\n\r\n#### Steps to reproduce\r\n\r\n  1. invoke `key.get()`\r\n\r\n#### Code example\r\n\r\n```python\r\n from google.cloud import ndb\r\n\r\n\r\nclass House(ndb.Model):\r\n    room = ndb.StringProperty(default='kitchen')\r\n\r\n\r\nclass HouseHandler(webapp2.RequestHandler):\r\n    def get(self):\r\n        client = ndb.Client(project='project_id')\r\n        with client.context():\r\n            k = ndb.Key(House, 5508237726318592)\r\n            o = k.get()\r\n\r\napp = webapp2.WSGIApplication(\r\n    [webapp2.Route('/v1/houses/1', HouseHandler)],\r\n    debug=True\r\n)\r\n\r\nif __name__ == '__main__':\r\n    from paste import httpserver\r\n\r\n    httpserver.serve(app, host='127.0.0.1', port='8080')\r\n```\r\n\r\nWhen making the request, watch the number of threads in the python process.  You should see it climb for each request.  In the screenshot below it is the highlighted process with 19 threads.\r\n\r\n```shell\r\nab -n 1 -H http://127.0.0.1:8080/v1/houses/1\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/82629/75125410-9be9a180-567a-11ea-8c20-6e2b0d7b8b62.png)\r\n\r\n#### Stack Trace\r\n```\r\nINFO:root:default: \"POST /cloud_task_queue HTTP/1.1\" 200 4 0.73653s\r\n[2020-02-21 15:09:44 -0600] [3172] [DEBUG] POST /cloud_task_queue\r\nERROR:grpc._plugin_wrapping:AuthMetadataPluginCallback \"<google.auth.transport.grpc.AuthMetadataPlugin object at 0x12d9d0978>\" raised exception!\r\nTraceback (most recent call last):\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/grpc/_plugin_wrapping.py\", line 79, in __call__\r\n    callback_state, callback))\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/auth/transport/grpc.py\", line 87, in __call__\r\n    future = self._pool.submit(self._get_authorization_headers, context)\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/concurrent/futures/thread.py\", line 160, in submit\r\n    self._adjust_thread_count()\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/concurrent/futures/thread.py\", line 181, in _adjust_thread_count\r\n    t.start()\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 847, in start\r\n    _start_new_thread(self._bootstrap, ())\r\nRuntimeError: can't start new thread\u03a9\r\nERROR:root:Unhandled exception: can't start new thread\r\nTraceback (most recent call last):\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/csg/logger/request_logger_clients/base_client.py\", line 277, in process_exception\r\n    raise exception\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/webapp2.py\", line 604, in dispatch\r\n    return method(*args, **kwargs)\r\n  File \"/Users/tcross/development/csgapi/handlers/cloud_task_handler.py\", line 10, in post\r\n    CloudTaskQueue.process_cloud_task(request_body)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/csg/tasks/queues/cloud_task_queue.py\", line 51, in process_cloud_task\r\n    execute_task(func, **request_body)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/csg/tasks/execute.py\", line 14, in execute_task\r\n    func(**kwargs)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/csg/tasks/deferred_pickle/deferred.py\", line 117, in run_pickle\r\n    func_, args_ = manager.get(key)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/csg/tasks/deferred_pickle/db_interface/ndb/ndb_manager.py\", line 37, in get\r\n    d_pickle = key.get()\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/_options.py\", line 89, in wrapper\r\n    return wrapped(*pass_args, **kwargs)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/utils.py\", line 110, in positional_wrapper\r\n    return wrapped(*args, **kwds)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/key.py\", line 811, in get\r\n    return self.get_async(_options=_options).result()\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/key.py\", line 896, in get\r\n    entity_pb = yield _datastore_api.lookup(self._key, _options)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/_datastore_api.py\", line 169, in lookup\r\n    entity_pb = yield batch.add(key)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/_retry.py\", line 78, in retry_wrapper\r\n    raise error\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/_retry.py\", line 73, in retry_wrapper\r\n    result = yield result\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 312, in _advance_tasklet\r\n    yielded = self.generator.send(send_value)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/_datastore_api.py\", line 108, in rpc_call\r\n    call = method.future(request, timeout=timeout)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/grpc/_channel.py\", line 595, in future\r\n    (operations,), event_handler, self._context)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/grpc/_channel.py\", line 863, in create\r\n    _run_channel_spin_thread(state)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/grpc/_channel.py\", line 827, in _run_channel_spin_thread\r\n    channel_spin_thread.start()\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/fork_posix.pyx.pxi\", line 119, in grpc._cython.cygrpc.ForkManagedThread.start\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 847, in start\r\n    _start_new_thread(self._bootstrap, ())\r\nRuntimeError: can't start new thread\r\nERROR    2020-02-21 15:09:44 _plugin_wrapping.py:83] Traceback (most recent call last):\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/grpc/_plugin_wrapping.py\", line 79, in __call__\r\n    callback_state, callback))\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/auth/transport/grpc.py\", line 87, in __call__\r\n    future = self._pool.submit(self._get_authorization_headers, context)\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/concurrent/futures/thread.py\", line 160, in submit\r\n    self._adjust_thread_count()\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/concurrent/futures/thread.py\", line 181, in _adjust_thread_count\r\n    t.start()\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 847, in start\r\n    _start_new_thread(self._bootstrap, ())\r\nRuntimeError: can't start new thread\r\nERROR    2020-02-21 15:09:44 base_client.py:281] Traceback (most recent call last):\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/csg/logger/request_logger_clients/base_client.py\", line 277, in process_exception\r\n    raise exception\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/webapp2.py\", line 604, in dispatch\r\n    return method(*args, **kwargs)\r\n  File \"/Users/tcross/development/csgapi/handlers/cloud_task_handler.py\", line 10, in post\r\n    CloudTaskQueue.process_cloud_task(request_body)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/csg/tasks/queues/cloud_task_queue.py\", line 51, in process_cloud_task\r\n    execute_task(func, **request_body)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/csg/tasks/execute.py\", line 14, in execute_task\r\n    func(**kwargs)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/csg/tasks/deferred_pickle/deferred.py\", line 117, in run_pickle\r\n    func_, args_ = manager.get(key)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/csg/tasks/deferred_pickle/db_interface/ndb/ndb_manager.py\", line 37, in get\r\n    d_pickle = key.get()\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/_options.py\", line 89, in wrapper\r\n    return wrapped(*pass_args, **kwargs)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/utils.py\", line 110, in positional_wrapper\r\n    return wrapped(*args, **kwds)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/key.py\", line 811, in get\r\n    return self.get_async(_options=_options).result()\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/key.py\", line 896, in get\r\n    entity_pb = yield _datastore_api.lookup(self._key, _options)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/_datastore_api.py\", line 169, in lookup\r\n    entity_pb = yield batch.add(key)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/_retry.py\", line 78, in retry_wrapper\r\n    raise error\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/_retry.py\", line 73, in retry_wrapper\r\n    result = yield result\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 312, in _advance_tasklet\r\n    yielded = self.generator.send(send_value)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/_datastore_api.py\", line 108, in rpc_call\r\n    call = method.future(request, timeout=timeout)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/grpc/_channel.py\", line 595, in future\r\n    (operations,), event_handler, self._context)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/grpc/_channel.py\", line 863, in create\r\n    _run_channel_spin_thread(state)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/grpc/_channel.py\", line 827, in _run_channel_spin_thread\r\n    channel_spin_thread.start()\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/fork_posix.pyx.pxi\", line 119, in grpc._cython.cygrpc.ForkManagedThread.start\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 847, in start\r\n    _start_new_thread(self._bootstrap, ())\r\nRuntimeError: can't start new thread\r\nINFO:root:default: \"POST /cloud_task_queue HTTP/1.1\" 500 90 2.07239s\r\n[2020-02-21 15:09:46 -0600] [3172] [DEBUG] POST /cloud_task_queue\r\nINFO     2020-02-21 15:09:46 base_client.py:234] default: \"POST /cloud_task_queue HTTP/1.1\" 500 90 2.07239s\r\nException in thread Thread-54699:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 865, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/grpc/_channel.py\", line 815, in channel_spin\r\n    event = state.channel.next_call_event()\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 464, in grpc._cython.cygrpc.Channel.next_call_event\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 150, in grpc._cython.cygrpc._next_call_event\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi\", line 67, in grpc._cython.cygrpc._latent_event\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi\", line 56, in grpc._cython.cygrpc._get_metadata\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi\", line 31, in grpc._cython.cygrpc._spawn_callback_async\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi\", line 22, in grpc._cython.cygrpc._spawn_callback_in_thread\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/fork_posix.pyx.pxi\", line 119, in grpc._cython.cygrpc.ForkManagedThread.start\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 847, in start\r\n    _start_new_thread(self._bootstrap, ())\r\nRuntimeError: can't start new thread\r\n```\r\n\r\npossibly related to #336 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/341", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/341/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/341/events", "html_url": "https://github.com/googleapis/python-ndb/issues/341", "id": 569024176, "node_id": "MDU6SXNzdWU1NjkwMjQxNzY=", "number": 341, "title": "cannot store >1500 bytes in a BlobProperty within a StructuredProperty", "user": {"login": "gaborfeher", "id": 11962088, "node_id": "MDQ6VXNlcjExOTYyMDg4", "avatar_url": "https://avatars2.githubusercontent.com/u/11962088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborfeher", "html_url": "https://github.com/gaborfeher", "followers_url": "https://api.github.com/users/gaborfeher/followers", "following_url": "https://api.github.com/users/gaborfeher/following{/other_user}", "gists_url": "https://api.github.com/users/gaborfeher/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborfeher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborfeher/subscriptions", "organizations_url": "https://api.github.com/users/gaborfeher/orgs", "repos_url": "https://api.github.com/users/gaborfeher/repos", "events_url": "https://api.github.com/users/gaborfeher/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborfeher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-02-21T15:31:17Z", "updated_at": "2020-04-06T17:51:19Z", "closed_at": "2020-02-26T20:50:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Steps to reproduce\r\n\r\n  1. Create an NDB model entity with a StructuredProperty that contains a BlobProperty with for example 10k of data\r\n  2. Try to `put()` it and it will produce a crash.\r\n\r\nTried with google_cloud_ndb-1.0.1 @ GAE python 2.7\r\n\r\n#### Code example\r\n\r\n```\r\nfrom flask import Flask\r\nfrom google.cloud import ndb\r\nimport logging\r\n\r\n\r\napp = Flask(__name__, template_folder='views')\r\n\r\n  \r\nclass BigData(ndb.Model):\r\n    data = ndb.BlobProperty(indexed=False)\r\n  \r\n  \r\nclass BigContainer(ndb.Model):\r\n    entry = ndb.StructuredProperty(BigData)\r\n  \r\n  \r\n@app.route('/')\r\ndef main(): \r\n    ndb_client = ndb.Client()\r\n    with ndb_client.context():\r\n        x = BigData(data='0123456789' * 1000)\r\n        x.put()  # works\r\n        logging.info('x.put(): okay')\r\n        y = BigContainer(entry=BigData(data='0123456789' * 1000))\r\n        y.put()  # crashes\r\n        logging.info('y.put(): okay')\r\n    return 'ok'\r\n\r\n```\r\n\r\n`x.put()` will succeed but `y.put()` will fail.\r\n\r\n#### Stack trace\r\n```\r\nException on / [GET] (/base/data/home/apps/......./lib/flask/app.py:1891)\r\nTraceback (most recent call last):\r\n  File \"/base/data/home/apps/....../lib/flask/app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/base/data/home/apps/....../lib/flask/app.py\", line 1951, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/base/data/home/apps/....../lib/flask/app.py\", line 1820, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/base/data/home/apps/....../lib/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/base/data/home/apps/....../lib/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/base/data/home/apps/....../main.py\", line 25, in main\r\n    y.put()  # crashes\r\n  File \"/base/data/home/apps/....../lib/google/cloud/ndb/_options.py\", line 89, in wrapper\r\n    return wrapped(*pass_args, **kwargs)\r\n  File \"/base/data/home/apps/....../lib/google/cloud/ndb/utils.py\", line 78, in wrapper\r\n    return wrapped(*args, **new_kwargs)\r\n  File \"/base/data/home/apps/......./lib/google/cloud/ndb/utils.py\", line 110, in positional_wrapper\r\n    return wrapped(*args, **kwds)\r\n  File \"/base/data/home/apps/....../lib/google/cloud/ndb/model.py\", line 4959, in _put\r\n    return self._put_async(_options=kwargs[\"_options\"]).result()\r\n  File \"/base/data/home/apps/....../lib/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/base/data/home/apps/....../lib/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n_Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.INVALID_ARGUMENT, The value of property \"entry.data\" is longer than 1500 bytes.)>\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/340", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/340/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/340/events", "html_url": "https://github.com/googleapis/python-ndb/issues/340", "id": 568024456, "node_id": "MDU6SXNzdWU1NjgwMjQ0NTY=", "number": 340, "title": "Compatiblity with forking", "user": {"login": "oliverchang", "id": 759062, "node_id": "MDQ6VXNlcjc1OTA2Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/759062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oliverchang", "html_url": "https://github.com/oliverchang", "followers_url": "https://api.github.com/users/oliverchang/followers", "following_url": "https://api.github.com/users/oliverchang/following{/other_user}", "gists_url": "https://api.github.com/users/oliverchang/gists{/gist_id}", "starred_url": "https://api.github.com/users/oliverchang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oliverchang/subscriptions", "organizations_url": "https://api.github.com/users/oliverchang/orgs", "repos_url": "https://api.github.com/users/oliverchang/repos", "events_url": "https://api.github.com/users/oliverchang/events{/privacy}", "received_events_url": "https://api.github.com/users/oliverchang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345320591, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTkx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-02-20T03:22:20Z", "updated_at": "2020-03-05T14:31:10Z", "closed_at": "2020-03-05T14:31:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use multiprocessing.Process on Python 2 with NDB. On Linux, this forks the process when the \"Process\" is started.\r\n\r\nThis runs into issues, as it appears that the NDB gRPC client doesn't work after forking. Re-initializing the context also does not work, because the thread local context remains after forking and attempting to do so results in a:\r\n\r\n```\r\nRuntimeError: Context is already created for this thread.\r\n```\r\n\r\nWe worked around this with the following hack:\r\nhttps://github.com/google/clusterfuzz/pull/1465 which checks if we've forked and unsets the thread local context.\r\n\r\nWould it make sense to implement this in NDB itself instead? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/338", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/338/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/338/events", "html_url": "https://github.com/googleapis/python-ndb/issues/338", "id": 567117348, "node_id": "MDU6SXNzdWU1NjcxMTczNDg=", "number": 338, "title": "NDB: Achieving strong read consistency", "user": {"login": "blk-josecols", "id": 59618758, "node_id": "MDQ6VXNlcjU5NjE4NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/59618758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blk-josecols", "html_url": "https://github.com/blk-josecols", "followers_url": "https://api.github.com/users/blk-josecols/followers", "following_url": "https://api.github.com/users/blk-josecols/following{/other_user}", "gists_url": "https://api.github.com/users/blk-josecols/gists{/gist_id}", "starred_url": "https://api.github.com/users/blk-josecols/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blk-josecols/subscriptions", "organizations_url": "https://api.github.com/users/blk-josecols/orgs", "repos_url": "https://api.github.com/users/blk-josecols/repos", "events_url": "https://api.github.com/users/blk-josecols/events{/privacy}", "received_events_url": "https://api.github.com/users/blk-josecols/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141019, "node_id": "MDU6TGFiZWwxMzQxMTQxMDE5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T19:45:06Z", "updated_at": "2020-04-07T13:14:01Z", "closed_at": "2020-02-18T19:54:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to achieve Strong Consistency in a query that is not inside a transaction and does not have a parent as described in https://cloud.google.com/datastore/docs/concepts/structuring_for_strong_consistency. However, I'm not sure if that is even possible, this issue is to clarify that.\r\n\r\n#### Environment details\r\n\r\n1. OS type and version: macOS Catalina 10.15.2\r\n2. Python version and virtual environment information: Python 3.7\r\n3. google-cloud-cloud version: 1.0.1\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Define a class with an `IntegerProperty` like a counter. (I acknowledge this may be an antipattern according to Datastore.)\r\n  2. Queries that rely on getting the entity with the smallest/highest counter value aren't consistent.\r\n\r\n#### Code example\r\n\r\n```python\r\nclass A(ndb.Model):\r\n    i_counter = ndb.IntegerProperty()\r\n\r\n# I was hopping something like this would work.\r\nif __name__ == \"__main__\":\r\n    foo = A.query().order(-A.i_counter).get(read_consistency=ndb.STRONG)\r\n```\r\n\r\n#### Stack trace\r\n```\r\nTraceback (most recent call last):\r\n  ...\r\n  File \"google/cloud/ndb/query.py\", line 1236, in wrapper\r\n    return wrapped(self, *dummy_args, _options=query_options)\r\n  File \"google/cloud/ndb/utils.py\", line 78, in wrapper\r\n    return wrapped(*args, **new_kwargs)\r\n  File \"google/cloud/ndb/utils.py\", line 110, in positional_wrapper\r\n    return wrapped(*args, **kwds)\r\n  File \"google/cloud/ndb/query.py\", line 2110, in get\r\n    return self.get_async(_options=kwargs[\"_options\"]).result()\r\n  File \"google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"google/cloud/ndb/query.py\", line 2144, in get_async\r\n    results = yield _datastore_query.fetch(options)\r\n  File \"google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"google/cloud/ndb/_datastore_query.py\", line 105, in fetch\r\n    while (yield results.has_next_async()):\r\n  File \"google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"google/cloud/ndb/_datastore_query.py\", line 264, in has_next_async\r\n    yield self._next_batch()  # First time\r\n  File \"google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"google/cloud/ndb/_datastore_query.py\", line 291, in _next_batch\r\n    response = yield _datastore_run_query(query)\r\n  File \"google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"google/cloud/ndb/_datastore_query.py\", line 847, in _datastore_run_query\r\n    \"RunQuery\", request, timeout=query.timeout\r\n  File \"google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"google/cloud/ndb/_retry.py\", line 78, in retry_wrapper\r\n    raise error\r\n  File \"google/cloud/ndb/_retry.py\", line 73, in retry_wrapper\r\n    result = yield result\r\n  File \"google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"google/cloud/ndb/_datastore_api.py\", line 113, in rpc_call\r\n    result = yield rpc\r\ngrpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:\r\n\tstatus = StatusCode.INVALID_ARGUMENT\r\n\tdetails = \"global queries do not support strong consistency\"\r\n\tdebug_error_string = \"{\"created\":\"@1582054944.079620000\",\"description\":\"Error received from peer ipv4:216.58.192.42:443\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1056,\"grpc_message\":\"global queries do not support strong consistency\",\"grpc_status\":3}\r\n```\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/337", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/337/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/337/events", "html_url": "https://github.com/googleapis/python-ndb/issues/337", "id": 566823094, "node_id": "MDU6SXNzdWU1NjY4MjMwOTQ=", "number": 337, "title": "Namespace is not set from Client if Model is set id.", "user": {"login": "hhhhub000", "id": 35677664, "node_id": "MDQ6VXNlcjM1Njc3NjY0", "avatar_url": "https://avatars2.githubusercontent.com/u/35677664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhhhub000", "html_url": "https://github.com/hhhhub000", "followers_url": "https://api.github.com/users/hhhhub000/followers", "following_url": "https://api.github.com/users/hhhhub000/following{/other_user}", "gists_url": "https://api.github.com/users/hhhhub000/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhhhub000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhhhub000/subscriptions", "organizations_url": "https://api.github.com/users/hhhhub000/orgs", "repos_url": "https://api.github.com/users/hhhhub000/repos", "events_url": "https://api.github.com/users/hhhhub000/events{/privacy}", "received_events_url": "https://api.github.com/users/hhhhub000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-18T11:17:32Z", "updated_at": "2020-04-06T17:09:56Z", "closed_at": "2020-02-18T20:53:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n1. Runtime: Python 3.7\r\n2. Server: Google App Engine Standard Edition\r\n3. ndb library: v1.0.1\r\n\r\n#### Code example\r\n\r\n```python\r\nclient = ndb.Client(namespace=\"for_test\")\r\n...\r\nwith client.context():\r\n        entity = AAAA(\r\n            aaaa=\"aaaa\"\r\n        )\r\n        user_key = entity.put() \r\n\r\n        entity = BBBB(\r\n \u3000\u3000    id=\"test\",\r\n            bbbb=\"bbbb\"\r\n        )\r\n        user_key = entity.put() \r\n```\r\nAAAA is created on \"for_test\" namespace.\r\nBut, BBBB is created on default namespace\r\n\r\nI think namespace should be set from client. like following\r\n```python\r\nmode.py\r\n\r\nclass Model(_NotEqualMixin):\r\n....\r\n        elif not key_parts_unspecified:\r\n            self._key = Key(\r\n                self._get_kind(),\r\n                id_,\r\n                parent=parent,\r\n                project=project,\r\n                namespace=namespace or client.namespace,\r\n            )\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/336", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/336/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/336/events", "html_url": "https://github.com/googleapis/python-ndb/issues/336", "id": 565334712, "node_id": "MDU6SXNzdWU1NjUzMzQ3MTI=", "number": 336, "title": "[GAE python 2.7] query().filter().fetch() sometimes spawns threads preventing webapp2 requests finish within a deadline", "user": {"login": "VladNF", "id": 19689708, "node_id": "MDQ6VXNlcjE5Njg5NzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/19689708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VladNF", "html_url": "https://github.com/VladNF", "followers_url": "https://api.github.com/users/VladNF/followers", "following_url": "https://api.github.com/users/VladNF/following{/other_user}", "gists_url": "https://api.github.com/users/VladNF/gists{/gist_id}", "starred_url": "https://api.github.com/users/VladNF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VladNF/subscriptions", "organizations_url": "https://api.github.com/users/VladNF/orgs", "repos_url": "https://api.github.com/users/VladNF/repos", "events_url": "https://api.github.com/users/VladNF/events{/privacy}", "received_events_url": "https://api.github.com/users/VladNF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332096, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20investigating", "name": "status: investigating", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-14T13:44:15Z", "updated_at": "2020-04-09T12:39:41Z", "closed_at": "2020-04-09T12:39:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Certain cloud-ndb queries causes grpc to spawn threads that prevent accomplishing webapp2/django requests as GAE standard env for python 2 joins all request threads.\r\nRequests failes with the following exception\r\n```\r\nThread running after request. Creation traceback:\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/ebb3af67a06047b6/python27/python27_lib/versions/1/google/appengine/runtime/runtime.py\", line 80, in Run\r\n    target(*args, **kw)\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/ebb3af67a06047b6/python27/python27_dist/lib/python2.7/threading.py\", line 794, in __bootstrap\r\n    self.__bootstrap_inner()\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/ebb3af67a06047b6/python27/python27_dist/lib/python2.7/threading.py\", line 821, in __bootstrap_inner\r\n    self.run()\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/ebb3af67a06047b6/python27/python27_dist/lib/python2.7/threading.py\", line 774, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/ebb3af67a06047b6/python27/python27_lib/versions/third_party/grpcio-1.0.0/grpc/_channel.py\", line 678, in channel_spin\r\n    event = state.completion_queues[key].poll()\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/ebb3af67a06047b6/python27/python27_lib/versions/third_party/grpcio-1.0.0/grpc/_plugin_wrapping.py\", line 107, in __call__\r\n    wrapped_context, AuthMetadataPluginCallback(wrapped_cygrpc_callback))\r\n  File \"/base/data/home/apps/.../lib/google/auth/transport/grpc.py\", line 87, in __call__\r\n    future = self._pool.submit(self._get_authorization_headers, context)\r\n  File \"/base/data/home/apps/.../lib/concurrent/futures/thread.py\", line 137, in submit\r\n    self._adjust_thread_count()\r\n  File \"/base/data/home/apps/.../lib/concurrent/futures/thread.py\", line 159, in _adjust_thread_count\r\n    t.start()\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/ebb3af67a06047b6/python27/python27_dist/lib/python2.7/threading.py\", line 749, in start\r\n    _start_new_thread(self.__bootstrap, ())\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/ebb3af67a06047b6/python27/python27_lib/versions/1/google/appengine/runtime/runtime.py\", line 83, in StartNewThread\r\n    return base_start_new_thread(Run, ())\r\n```\r\nThe following shows one example that after re-writing it in a get-by-id manner has no such issue.\r\n```\r\nModel1.query(Model1.repeatedKeyProp.IN(keys)).fetch()\r\n```\r\nShutting down ThreadPoolExecutor from concurrent.future helped to localize the issue caused by additional threads caused by querying data.\r\n\r\nAny ideas how to coupe with it? We cannot just move everything to Python 3 env in a one step, both envs are going to co-exist for sometime. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/332", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/332/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/332/events", "html_url": "https://github.com/googleapis/python-ndb/issues/332", "id": 564392176, "node_id": "MDU6SXNzdWU1NjQzOTIxNzY=", "number": 332, "title": "`toplevel` errors if there is no context", "user": {"login": "plumSemPy", "id": 8195422, "node_id": "MDQ6VXNlcjgxOTU0MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8195422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plumSemPy", "html_url": "https://github.com/plumSemPy", "followers_url": "https://api.github.com/users/plumSemPy/followers", "following_url": "https://api.github.com/users/plumSemPy/following{/other_user}", "gists_url": "https://api.github.com/users/plumSemPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/plumSemPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plumSemPy/subscriptions", "organizations_url": "https://api.github.com/users/plumSemPy/orgs", "repos_url": "https://api.github.com/users/plumSemPy/repos", "events_url": "https://api.github.com/users/plumSemPy/events{/privacy}", "received_events_url": "https://api.github.com/users/plumSemPy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-13T02:04:39Z", "updated_at": "2020-02-13T20:30:34Z", "closed_at": "2020-02-13T20:30:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello \ud83d\udc4b \r\n\r\nI am seeing an unexpected behavior with `toplevel`:\r\nI have a django app (which has the context middleware in place), but I need to fetch some data from the datastore before the app starts. Thus the middleware will do little here since there are no requests.\r\n\r\nI have decided to do: `ndb.toplevel(myFunction)(one_arg, one_kwarg)`\r\n\r\nThis produces the infamous: `google.cloud.ndb.exceptions.ContextError: No current context. NDB calls must be made in context established by google.cloud.ndb.Client.context.`\r\n\r\nI find this unexpected because I was expecting that calling toplevel will give me some context to do my business with. \r\n\r\nLooking at the [code](https://github.com/googleapis/python-ndb/blob/master/google/cloud/ndb/tasklets.py#L636), it _does_ in fact check to see if there is a context before [creating](https://github.com/googleapis/python-ndb/blob/master/google/cloud/ndb/tasklets.py#L638) a new one. \r\n\r\nI was wondering if this check is necessary given that a new context will be created and used 2 lines below that.\r\n\r\nI have also noticed that the [toplevel test tests it within a context](https://github.com/googleapis/python-ndb/blob/2ae22d82620db50551a0375c9d21a92a22af0352/tests/unit/test_tasklets.py#L694)\r\n\r\nThe [old toplevel](https://github.com/GoogleCloudPlatform/datastore-ndb-python/blob/cf4cab3f1f69cd04e1a9229871be466b53729f3f/ndb/tasklets.py#L1091-L1113) seems to be working without first checking the existing context.\r\n\r\nPlease advise as momma has got to migrate. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/326", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/326/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/326/events", "html_url": "https://github.com/googleapis/python-ndb/issues/326", "id": 561091355, "node_id": "MDU6SXNzdWU1NjEwOTEzNTU=", "number": 326, "title": "Repeated LocalStructuredProperty is not downwards compatible", "user": {"login": "vthorsteinsson", "id": 8191848, "node_id": "MDQ6VXNlcjgxOTE4NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8191848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vthorsteinsson", "html_url": "https://github.com/vthorsteinsson", "followers_url": "https://api.github.com/users/vthorsteinsson/followers", "following_url": "https://api.github.com/users/vthorsteinsson/following{/other_user}", "gists_url": "https://api.github.com/users/vthorsteinsson/gists{/gist_id}", "starred_url": "https://api.github.com/users/vthorsteinsson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vthorsteinsson/subscriptions", "organizations_url": "https://api.github.com/users/vthorsteinsson/orgs", "repos_url": "https://api.github.com/users/vthorsteinsson/repos", "events_url": "https://api.github.com/users/vthorsteinsson/events{/privacy}", "received_events_url": "https://api.github.com/users/vthorsteinsson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2020-02-06T15:35:09Z", "updated_at": "2020-04-07T13:08:08Z", "closed_at": "2020-02-25T01:23:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a GAE application on the Python 2 runtime using an NDB datastore that has been in operation for 5 years. I am now attempting to upgrade my code to the Python 3 runtime and the new NDB-on-Cloud-Datastore client. An important requirement is to be able to do a gradual and compatible upgrade so I can run new code alongside old code, interacting with the same datastore.\r\n\r\nOne of my datastore entity classes, `GameModel`, contains a repeated `LocalStructuredProperty` called `moves`, storing a list of entities of another class, `MoveModel`.\r\n\r\n*Reading* these entities from the existing NDB datastore works fine on the Python3 runtime. The problem is that the new runtime *writes* the `moves` property in a format that is not readable by the Python2 NDB code.\r\n\r\nSpecifically, the Python2 runtime writes the `moves` property in a format that is shown in the Google Cloud Console Datastore Viewer as an Array value, containing the following:\r\n\r\n```\r\n{\r\n  \"values\": [\r\n    {\r\n      \"entityValue\": {\r\n        \"properties\": {\r\n          \"score\": {\r\n            \"integerValue\": \"24\"\r\n          },\r\n          \"timestamp\": {\r\n            \"timestampValue\": \"2016-05-05T12:00:46.360960Z\"\r\n          },\r\n          \"rack\": {\r\n            \"stringValue\": \"\u00e1sa\u00e1eul\"\r\n          },\r\n          \"coord\": {\r\n            \"stringValue\": \"8F\"\r\n          },\r\n<<<etc>>>\r\n```\r\n\r\nThe new NDB client (on the Python3 runtime), however, writes the `moves` property in a format that is shown as follows in the Cloud Datastore Viewer:\r\n\r\n```\r\n{\r\n  \"values\": [\r\n    {\r\n      \"blobValue\": \"Gg4KBWNvb3JkEgWKAQI4RBoUCgRyYWNrEgyKAQlpw6FyYcOmYWkaGgoJdGltZXN0YW1wEg1SCwjhjuzxBRDY5chEGgsKBXNjb3JlEgIQFhoSCgV0aWxlcxIJigEGdGF1dGly\",\r\n      \"excludeFromIndexes\": true\r\n    },\r\n    {\r\n      \"blobValue\": \"GhoKCXRpbWVzdGFtcBINUgsI0ZDs8QUQoKjOYhoLCgVzY29yZRICEAYaEAoFdGlsZXMSB4oBBHRhbHMaDgoFY29vcmQSBYoBAkQ4GhMKBHJhY2sSC4oBCG51bm5sbMOh\",\r\n      \"excludeFromIndexes\": true\r\n    },\r\n<<<etc>>>\r\n```\r\n\r\nThis data format is, again, readable by the Python3 runtime but not by the Python2 runtime. So there is no downwards compatibility here; `GameModel` entities written by the new code cannot be read back by the old code.\r\n\r\nAny hints or pointers on this? This issue is currently holding back my migration project.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/324", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/324/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/324/events", "html_url": "https://github.com/googleapis/python-ndb/issues/324", "id": 560827116, "node_id": "MDU6SXNzdWU1NjA4MjcxMTY=", "number": 324, "title": "Sample Code Fails (MultiThreadedRendezvous)", "user": {"login": "Flips01", "id": 1101291, "node_id": "MDQ6VXNlcjExMDEyOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1101291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Flips01", "html_url": "https://github.com/Flips01", "followers_url": "https://api.github.com/users/Flips01/followers", "following_url": "https://api.github.com/users/Flips01/following{/other_user}", "gists_url": "https://api.github.com/users/Flips01/gists{/gist_id}", "starred_url": "https://api.github.com/users/Flips01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Flips01/subscriptions", "organizations_url": "https://api.github.com/users/Flips01/orgs", "repos_url": "https://api.github.com/users/Flips01/repos", "events_url": "https://api.github.com/users/Flips01/events{/privacy}", "received_events_url": "https://api.github.com/users/Flips01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141019, "node_id": "MDU6TGFiZWwxMzQxMTQxMDE5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-06T07:24:10Z", "updated_at": "2020-04-06T17:09:55Z", "closed_at": "2020-02-07T13:05:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've deployed the sample code from [your repo](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/master/datastore/cloud-ndb/flask_app.py) to a new app engine project using python 3.7 standard runtime. The sample code crashes and yields the following stack trace. I've tried version 0.1.0 as stated in the corresponding requirements-file and version 1.0.0 both versions result in the same error.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1951, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1820, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/env/lib/python3.7/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/env/lib/python3.7/site-packages/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/srv/main.py\", line 43, in list_books\r\n    return str([book.to_dict() for book in books])\r\n  File \"/srv/main.py\", line 43, in <listcomp>\r\n    return str([book.to_dict() for book in books])\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_datastore_query.py\", line 320, in next\r\n    if not self.has_next():\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_datastore_query.py\", line 257, in has_next\r\n    return self.has_next_async().result()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 289, in _advance_tasklet\r\n    type(error), error, error.__traceback__\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_datastore_query.py\", line 263, in has_next_async\r\n    yield self._next_batch()  # First time\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 289, in _advance_tasklet\r\n    type(error), error, error.__traceback__\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_datastore_query.py\", line 291, in _next_batch\r\n    response = yield _datastore_run_query(query)\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 289, in _advance_tasklet\r\n    type(error), error, error.__traceback__\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_datastore_query.py\", line 844, in _datastore_run_query\r\n    \"RunQuery\", request, timeout=query.timeout\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 289, in _advance_tasklet\r\n    type(error), error, error.__traceback__\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_retry.py\", line 64, in retry_wrapper\r\n    result = yield result\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 289, in _advance_tasklet\r\n    type(error), error, error.__traceback__\r\n  File \"/env/lib/python3.7/site-packages/google/cloud/ndb/_datastore_api.py\", line 113, in rpc_call\r\n    result = yield rpc\r\ngrpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/322", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/322/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/322/events", "html_url": "https://github.com/googleapis/python-ndb/issues/322", "id": 560717212, "node_id": "MDU6SXNzdWU1NjA3MTcyMTI=", "number": 322, "title": "ndb.Key constructor does not accept unicode values for \"kind\"", "user": {"login": "vinaytota-optimizely", "id": 25805236, "node_id": "MDQ6VXNlcjI1ODA1MjM2", "avatar_url": "https://avatars2.githubusercontent.com/u/25805236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinaytota-optimizely", "html_url": "https://github.com/vinaytota-optimizely", "followers_url": "https://api.github.com/users/vinaytota-optimizely/followers", "following_url": "https://api.github.com/users/vinaytota-optimizely/following{/other_user}", "gists_url": "https://api.github.com/users/vinaytota-optimizely/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinaytota-optimizely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinaytota-optimizely/subscriptions", "organizations_url": "https://api.github.com/users/vinaytota-optimizely/orgs", "repos_url": "https://api.github.com/users/vinaytota-optimizely/repos", "events_url": "https://api.github.com/users/vinaytota-optimizely/events{/privacy}", "received_events_url": "https://api.github.com/users/vinaytota-optimizely/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-06T01:00:37Z", "updated_at": "2020-04-06T17:51:20Z", "closed_at": "2020-02-06T22:17:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Key constructor does not accept unicode for `kind`, only `str`\r\n\r\n#### Code example\r\n\r\n```python\r\nfrom google.cloud import ndb\r\n\r\nclient = ndb.Client()\r\n\r\nwith client.context():\r\n  valid_key = ndb.Key(u'SomeKind', 37)\r\n```\r\n\r\n#### Stack trace\r\n```\r\n  File \"/app/src/www/vendor/bundle/google/cloud/ndb/key.py\", line 295, in __new__\r\n    ds_key = _parse_from_args(**kwargs)\r\n  File \"/app/src/www/vendor/bundle/google/cloud/ndb/key.py\", line 1331, in _parse_from_args\r\n    _clean_flat_path(flat)\r\n  File \"/app/src/www/vendor/bundle/google/cloud/ndb/key.py\", line 1427, in _clean_flat_path\r\n    \"received {!r}\".format(kind)\r\nTypeError: Key kind must be a string or Model class; received u'SomeKind'\r\n```\r\n\r\nIt would appear that [this check](https://github.com/googleapis/python-ndb/blob/master/google/cloud/ndb/key.py#L1424) should be against `six.string_types` instead of just `str`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/319", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/319/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/319/events", "html_url": "https://github.com/googleapis/python-ndb/issues/319", "id": 558927866, "node_id": "MDU6SXNzdWU1NTg5Mjc4NjY=", "number": 319, "title": "Fix for #295 is incomplete", "user": {"login": "oliverchang", "id": 759062, "node_id": "MDQ6VXNlcjc1OTA2Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/759062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oliverchang", "html_url": "https://github.com/oliverchang", "followers_url": "https://api.github.com/users/oliverchang/followers", "following_url": "https://api.github.com/users/oliverchang/following{/other_user}", "gists_url": "https://api.github.com/users/oliverchang/gists{/gist_id}", "starred_url": "https://api.github.com/users/oliverchang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oliverchang/subscriptions", "organizations_url": "https://api.github.com/users/oliverchang/orgs", "repos_url": "https://api.github.com/users/oliverchang/repos", "events_url": "https://api.github.com/users/oliverchang/events{/privacy}", "received_events_url": "https://api.github.com/users/oliverchang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-02-03T08:40:06Z", "updated_at": "2020-04-07T13:14:01Z", "closed_at": "2020-02-06T22:13:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks a lot for fixing #295!\r\n\r\nHowever it seems like the fix was not complete -- only fetch() and the Query constructor supports this but other methods (e.g. [iter()](https://github.com/googleapis/python-ndb/blob/662a88a82691e69d282565b9d11706237da6f654/google/cloud/ndb/query.py#L1897) and probably others) are still broken.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/318", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/318/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/318/events", "html_url": "https://github.com/googleapis/python-ndb/issues/318", "id": 558779829, "node_id": "MDU6SXNzdWU1NTg3Nzk4Mjk=", "number": 318, "title": "cannot get more than 1000 keys in a single call", "user": {"login": "oliverchang", "id": 759062, "node_id": "MDQ6VXNlcjc1OTA2Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/759062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oliverchang", "html_url": "https://github.com/oliverchang", "followers_url": "https://api.github.com/users/oliverchang/followers", "following_url": "https://api.github.com/users/oliverchang/following{/other_user}", "gists_url": "https://api.github.com/users/oliverchang/gists{/gist_id}", "starred_url": "https://api.github.com/users/oliverchang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oliverchang/subscriptions", "organizations_url": "https://api.github.com/users/oliverchang/orgs", "repos_url": "https://api.github.com/users/oliverchang/repos", "events_url": "https://api.github.com/users/oliverchang/events{/privacy}", "received_events_url": "https://api.github.com/users/oliverchang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-02-02T23:59:22Z", "updated_at": "2020-04-07T13:08:08Z", "closed_at": "2020-02-06T14:43:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since upgrading our NDB to this version, we started seeing the following error when calling `get_multi` on more than 1000 keys:\r\n\r\n```python\r\n_Rendezvous: <_Rendezvous of RPC that terminated with: status = StatusCode.INVALID_ARGUMENT details = \"cannot get more than 1000 keys in a single call\" debug_error_string = \"{\"created\":\"@1580687426.899311572\",\"description\":\"Error received from peer\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1099,\"grpc_message\":\"cannot get more than 1000 keys in a single call\",\"grpc_status\":3}\" >\r\nat check_success (/mnt/scratch0/clusterfuzz/src/third_party/google/cloud/ndb/tasklets.py:137)\r\nat result (/mnt/scratch0/clusterfuzz/src/third_party/google/cloud/ndb/tasklets.py:190)\r\nat get_multi (/mnt/scratch0/clusterfuzz/src/third_party/google/cloud/ndb/model.py:6018)\r\nat positional_wrapper (/mnt/scratch0/clusterfuzz/src/third_party/google/cloud/ndb/utils.py:110)\r\nat wrapper (/mnt/scratch0/clusterfuzz/src/third_party/google/cloud/ndb/_options.py:89)\r\n```\r\n\r\nI'm assuming the old App Engine NDB handled this -- would it be possible to handle this in the new implementation too? \r\n\r\nI believe put_multi/delete_multi also has a limit of 500 entities, so it would be great if those were handled also.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/313", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/313/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/313/events", "html_url": "https://github.com/googleapis/python-ndb/issues/313", "id": 558078085, "node_id": "MDU6SXNzdWU1NTgwNzgwODU=", "number": 313, "title": "spelling mistake in GOOGLE_APPLCATION_CREDENTIALS in the document", "user": {"login": "gcptahir", "id": 36661925, "node_id": "MDQ6VXNlcjM2NjYxOTI1", "avatar_url": "https://avatars0.githubusercontent.com/u/36661925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcptahir", "html_url": "https://github.com/gcptahir", "followers_url": "https://api.github.com/users/gcptahir/followers", "following_url": "https://api.github.com/users/gcptahir/following{/other_user}", "gists_url": "https://api.github.com/users/gcptahir/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcptahir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcptahir/subscriptions", "organizations_url": "https://api.github.com/users/gcptahir/orgs", "repos_url": "https://api.github.com/users/gcptahir/repos", "events_url": "https://api.github.com/users/gcptahir/events{/privacy}", "received_events_url": "https://api.github.com/users/gcptahir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141019, "node_id": "MDU6TGFiZWwxMzQxMTQxMDE5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-31T11:32:20Z", "updated_at": "2020-04-07T13:14:01Z", "closed_at": "2020-02-03T23:03:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the google-cloud-ndb  [documentation](https://googleapis.dev/python/python-ndb/latest/migrating.html) , I suspect there is a small typo error in the\r\nGOOGLE_**_APPLCATION_**_CREDENTIALS environment variable's name.\r\nI expect it to be GOOGLE_APPL**I**CATION_CREDENTIALS", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/311", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/311/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/311/events", "html_url": "https://github.com/googleapis/python-ndb/issues/311", "id": 557760014, "node_id": "MDU6SXNzdWU1NTc3NjAwMTQ=", "number": 311, "title": "Pickling problematic with Python 2", "user": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-01-30T21:20:33Z", "updated_at": "2020-02-11T17:51:08Z", "closed_at": "2020-02-11T17:51:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When Danny started the NDB port, he was fond of using `__slots__`, since classes which use them have better performance than classes which rely on a `dict` for class attributes. However, as I just learned today, `pickle` doesn't support classes with `__slots__` under Python 2, so you can get errors when trying to pickle an NDB entity under Python 2. (I'm not sure pickling is the best way to serialize NDB entities, but at least some users do this, for better or for worse.)\r\n\r\nWhen attempting to pickle a class with slots, you get the following error:\r\n\r\n~~~~\r\nTypeError: a class that defines __slots__ without defining __getstate__ cannot be pickled\r\n~~~~\r\n\r\nA test which exposes one such error is in `tests.system.test_misc.test_pickle_roundtrip_structured_property` (added in #312).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/310", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/310/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/310/events", "html_url": "https://github.com/googleapis/python-ndb/issues/310", "id": 557265572, "node_id": "MDU6SXNzdWU1NTcyNjU1NzI=", "number": 310, "title": "Retry on StatusCode.UNKNOWN?", "user": {"login": "oliverchang", "id": 759062, "node_id": "MDQ6VXNlcjc1OTA2Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/759062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oliverchang", "html_url": "https://github.com/oliverchang", "followers_url": "https://api.github.com/users/oliverchang/followers", "following_url": "https://api.github.com/users/oliverchang/following{/other_user}", "gists_url": "https://api.github.com/users/oliverchang/gists{/gist_id}", "starred_url": "https://api.github.com/users/oliverchang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oliverchang/subscriptions", "organizations_url": "https://api.github.com/users/oliverchang/orgs", "repos_url": "https://api.github.com/users/oliverchang/repos", "events_url": "https://api.github.com/users/oliverchang/events{/privacy}", "received_events_url": "https://api.github.com/users/oliverchang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332096, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20investigating", "name": "status: investigating", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-01-30T04:53:51Z", "updated_at": "2020-06-04T20:54:10Z", "closed_at": "2020-06-04T20:54:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason, on Windows we see very frequent StatusCode.UNKNOWN errors:\r\n\r\n```\r\n_Rendezvous: <_Rendezvous of RPC that terminated with: status = StatusCode.UNKNOWN details = \"Stream removed\" debug_error_string = \"{\"created\":\"@1580287692.219000000\",\"description\":\"Error received from peer\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1099,\"grpc_message\":\"Stream removed\",\"grpc_status\":2}\" >\r\nat check_success (c:\\clusterfuzz\\src\\third_party\\google\\cloud\\ndb\\tasklets.py:137)\r\nat result (c:\\clusterfuzz\\src\\third_party\\google\\cloud\\ndb\\tasklets.py:190)\r\nat _put (c:\\clusterfuzz\\src\\third_party\\google\\cloud\\ndb\\model.py:4982)\r\nat positional_wrapper (c:\\clusterfuzz\\src\\third_party\\google\\cloud\\ndb\\utils.py:110)\r\nat wrapper (c:\\clusterfuzz\\src\\third_party\\google\\cloud\\ndb\\utils.py:78)\r\nat wrapper (c:\\clusterfuzz\\src\\third_party\\google\\cloud\\ndb\\_options.py:89)\r\n```\r\n\r\nThese went away after we added the following hack:\r\n\r\n```python\r\n    from google.cloud.ndb import _retry\r\n    # Add an additional code to retry on.\r\n    if grpc.StatusCode.UNKNOWN not in _retry.TRANSIENT_CODES:\r\n      _retry.TRANSIENT_CODES = _retry.TRANSIENT_CODES + (\r\n          grpc.StatusCode.UNKNOWN,)\r\n```\r\n\r\nDoes it make sense to add this error to be retried by default? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/302", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/302/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/302/events", "html_url": "https://github.com/googleapis/python-ndb/issues/302", "id": 555976519, "node_id": "MDU6SXNzdWU1NTU5NzY1MTk=", "number": 302, "title": "deadlock ", "user": {"login": "simonff", "id": 1077372, "node_id": "MDQ6VXNlcjEwNzczNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1077372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonff", "html_url": "https://github.com/simonff", "followers_url": "https://api.github.com/users/simonff/followers", "following_url": "https://api.github.com/users/simonff/following{/other_user}", "gists_url": "https://api.github.com/users/simonff/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonff/subscriptions", "organizations_url": "https://api.github.com/users/simonff/orgs", "repos_url": "https://api.github.com/users/simonff/repos", "events_url": "https://api.github.com/users/simonff/events{/privacy}", "received_events_url": "https://api.github.com/users/simonff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332096, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20investigating", "name": "status: investigating", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2020-01-28T04:29:16Z", "updated_at": "2020-02-14T13:16:47Z", "closed_at": "2020-02-07T22:00:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Follow up to https://github.com/googleapis/python-ndb/issues/293. I am not sure how to easily reproduce this outside of my environment, but at least I see what's going on. The issue is much more common with RunQuery, thought it occasionally happens with Lookup as well.\r\n\r\nNormally, when Remote._finish is called (https://github.com/googleapis/python-ndb/blob/master/google/cloud/ndb/_remote.py#L79), self._callbacks contains a callback object. This callback is invoked, and all is well. This callback is added to self._callbacks in the function add_done_callback() in the same module. \r\n\r\nBut when the deadlock happens, the self._callbacks list is empty when _finish() is called, and I see self._callbacks invoked just after _finish() has looked at self._callbacks. That is, because of this wrong order of commands, the callback is added to the list too late. The control flow is hard to trace, so I don't yet know why this happens, but maybe this would be a clue for someone.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/300", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/300/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/300/events", "html_url": "https://github.com/googleapis/python-ndb/issues/300", "id": 555066287, "node_id": "MDU6SXNzdWU1NTUwNjYyODc=", "number": 300, "title": "[python 2.7, google-cloud-ndb==0.2.0] StringProperty(repeated=True) deserializes list of empty strings into list of None", "user": {"login": "VladNF", "id": 19689708, "node_id": "MDQ6VXNlcjE5Njg5NzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/19689708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VladNF", "html_url": "https://github.com/VladNF", "followers_url": "https://api.github.com/users/VladNF/followers", "following_url": "https://api.github.com/users/VladNF/following{/other_user}", "gists_url": "https://api.github.com/users/VladNF/gists{/gist_id}", "starred_url": "https://api.github.com/users/VladNF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VladNF/subscriptions", "organizations_url": "https://api.github.com/users/VladNF/orgs", "repos_url": "https://api.github.com/users/VladNF/repos", "events_url": "https://api.github.com/users/VladNF/events{/privacy}", "received_events_url": "https://api.github.com/users/VladNF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-01-25T09:55:28Z", "updated_at": "2020-04-06T17:51:20Z", "closed_at": "2020-01-28T19:58:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n1. mkvirtualenv py2-ndb-issue -p python2\r\n2. pip install google-cloud-ndb==0.2.0 pytest pytest-env\r\n3. Cloud SDK\r\nGoogle Cloud SDK 274.0.0\r\napp-engine-python 1.9.87\r\napp-engine-python-extras 1.9.87\r\nbeta 2019.05.17\r\nbq 2.0.51\r\ncloud-datastore-emulator 2.1.0\r\ncore 2019.12.17\r\ngsutil 4.46\r\n4. run with datastore emulator (same behavior in a GCP env)\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Define a model with a repeated string property\r\n  2. Set this property to list of empty string and put into the datastore\r\n  3. Get entity from the datastore, verify a value should equals to the list of empty strings\r\n  4. Actual behavior - you get list of None.\r\n\r\n#### Code example\r\n\r\n```python\r\nclass NullableModel(ndb.Model):\r\n    list_prop = ndb.StringProperty(repeated=True)\r\n    ord_prop = ndb.StringProperty()\r\n    # child3 = NullableStringProperty(repeated=True)\r\n\r\n@pytest.mark.parametrize(\"changeset\", [\r\n    [\"abc\", u\"\u0430\u0431\u0432\"],\r\n    [\"\", \"\"],\r\n    [u\"\", u\"\"],\r\n])\r\ndef test_repeated_string_property_none(changeset):\r\n    entity = NullableModel()\r\n    entity.list_prop = changeset\r\n    entity.ord_prop = \"\"\r\n    entity.put()\r\n\r\n    entity = entity.key.get()\r\n    assert entity.ord_prop == \"\"\r\n    assert entity.list_prop == changeset\r\n    assert entity.put()\r\n```\r\n\r\n#### Stack trace\r\n```\r\n============================= test session starts ==============================\r\nplatform darwin -- Python 2.7.16, pytest-4.6.9, py-1.8.1, pluggy-0.13.1 -- /Users/vladimir/Virtualenvs/py2-ndb-issue/bin/python2\r\ncachedir: .pytest_cache\r\nrootdir: /Users/vladimir/Projects/py2-ndb-issues, inifile: setup.cfg\r\nplugins: env-0.6.2\r\ncollecting ... collected 4 items\r\n\r\ntest_get_multi.py::test_create_many_change_one_get_multi_all PASSED      [ 25%]\r\ntest_get_multi.py::test_repeated_string_property_none[changeset0] \r\ntest_get_multi.py::test_repeated_string_property_none[changeset1] PASSED [ 50%]FAILED [ 75%]\r\ntest_get_multi.py:73 (test_repeated_string_property_none[changeset1])\r\n[None, None] != ['', '']\r\n\r\nExpected :['', '']\r\nActual   :[None, None]\r\n<Click to see difference>\r\n\r\nchangeset = ['', '']\r\n\r\n    @pytest.mark.parametrize(\"changeset\", [\r\n        [\"abc\", u\"\u0430\u0431\u0432\"],\r\n        [\"\", \"\"],\r\n        [u\"\", u\"\"],\r\n    ])\r\n    def test_repeated_string_property_none(changeset):\r\n        entity = NullableModel()\r\n        entity.list_prop = changeset\r\n        entity.ord_prop = \"\"\r\n        entity.put()\r\n    \r\n        entity = entity.key.get()\r\n        assert entity.ord_prop == \"\"\r\n>       assert entity.list_prop == changeset\r\nE       AssertionError: assert [None, None] == ['', '']\r\n\r\ntest_get_multi.py:87: AssertionError\r\nFAILED [100%]\r\ntest_get_multi.py:73 (test_repeated_string_property_none[changeset2])\r\n[None, None] != [u'', u'']\r\n\r\nExpected :[u'', u'']\r\nActual   :[None, None]\r\n<Click to see difference>\r\n\r\nchangeset = ['', '']\r\n\r\n    @pytest.mark.parametrize(\"changeset\", [\r\n        [\"abc\", u\"\u0430\u0431\u0432\"],\r\n        [\"\", \"\"],\r\n        [u\"\", u\"\"],\r\n    ])\r\n    def test_repeated_string_property_none(changeset):\r\n        entity = NullableModel()\r\n        entity.list_prop = changeset\r\n        entity.ord_prop = \"\"\r\n        entity.put()\r\n    \r\n        entity = entity.key.get()\r\n        assert entity.ord_prop == \"\"\r\n>       assert entity.list_prop == changeset\r\nE       AssertionError: assert [None, None] == [u'', u'']\r\n\r\ntest_get_multi.py:87: AssertionError\r\n\r\nAssertion failed\r\n\r\ntest_get_multi.py::test_repeated_string_property_none[changeset2]\r\n```\r\n\r\nThe issue seems are in model.py#_entity_from_ds_entity and the following part of the method just in the end ** ` if sub_value else None` **\r\n```python\r\n        if value is not None:\r\n            if prop._repeated:\r\n                value = [\r\n                    (_BaseValue(sub_value) if sub_value else None)\r\n                    for sub_value in value\r\n                ]\r\n            else:\r\n                value = _BaseValue(value)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/295", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/295/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/295/events", "html_url": "https://github.com/googleapis/python-ndb/issues/295", "id": 552150694, "node_id": "MDU6SXNzdWU1NTIxNTA2OTQ=", "number": 295, "title": "Can no longer pass property types to projection argument ?", "user": {"login": "oliverchang", "id": 759062, "node_id": "MDQ6VXNlcjc1OTA2Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/759062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oliverchang", "html_url": "https://github.com/oliverchang", "followers_url": "https://api.github.com/users/oliverchang/followers", "following_url": "https://api.github.com/users/oliverchang/following{/other_user}", "gists_url": "https://api.github.com/users/oliverchang/gists{/gist_id}", "starred_url": "https://api.github.com/users/oliverchang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oliverchang/subscriptions", "organizations_url": "https://api.github.com/users/oliverchang/orgs", "repos_url": "https://api.github.com/users/oliverchang/repos", "events_url": "https://api.github.com/users/oliverchang/events{/privacy}", "received_events_url": "https://api.github.com/users/oliverchang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-01-20T08:39:58Z", "updated_at": "2020-04-07T13:08:08Z", "closed_at": "2020-01-22T21:05:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the old NDB, one could pass properties to a projection query like so:\r\n\r\n```python\r\n\r\n    class Model(ndb.Model):\r\n      a = ndb.IntegerProperty()\r\n\r\n    for e in Model.query().fetch(projection=[Model.a]):                                                                      \r\n      print e\r\n```\r\nThis no longer works, and gives a :\r\n\r\n```\r\nTypeError: IntegerProperty('a') has type IntegerProperty, but expected one of: bytes, unicode\r\n```\r\n\r\nIs this an intentional change? A skim of the [migration notes](https://github.com/googleapis/python-ndb/blob/master/MIGRATION_NOTES.md) does not indicate this change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/294", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/294/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/294/events", "html_url": "https://github.com/googleapis/python-ndb/issues/294", "id": 551820114, "node_id": "MDU6SXNzdWU1NTE4MjAxMTQ=", "number": 294, "title": "[python 2.7, google-cloud-ndb==0.2.0] ndb.get_multi returns entities in different order with duplicates", "user": {"login": "VladNF", "id": 19689708, "node_id": "MDQ6VXNlcjE5Njg5NzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/19689708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VladNF", "html_url": "https://github.com/VladNF", "followers_url": "https://api.github.com/users/VladNF/followers", "following_url": "https://api.github.com/users/VladNF/following{/other_user}", "gists_url": "https://api.github.com/users/VladNF/gists{/gist_id}", "starred_url": "https://api.github.com/users/VladNF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VladNF/subscriptions", "organizations_url": "https://api.github.com/users/VladNF/orgs", "repos_url": "https://api.github.com/users/VladNF/repos", "events_url": "https://api.github.com/users/VladNF/events{/privacy}", "received_events_url": "https://api.github.com/users/VladNF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-01-18T20:31:39Z", "updated_at": "2020-01-29T21:16:45Z", "closed_at": "2020-01-29T21:16:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n1. mkvirtualenv py2-ndb-issue -p python2\r\n2. pip install google-cloud-ndb==0.2.0 pytest pytest-env\r\n3. Cloud SDK\r\nGoogle Cloud SDK 274.0.0\r\napp-engine-python 1.9.87\r\napp-engine-python-extras 1.9.87\r\nbeta 2019.05.17\r\nbq 2.0.51\r\ncloud-datastore-emulator 2.1.0\r\ncore 2019.12.17\r\ngsutil 4.46\r\n4. run with datastore emulator (same behavior in a GCP env)\r\n\r\n#### Steps to reproduce\r\nThe issue is demonstrated by the test below. It reproduced only in Python 2 env.\r\nFirst off, we create 10 entities, then we fetch all entities and change one, then save it in a transaction (removing it from cache), finally get them all with ndb.get_multi.\r\n\r\nExpected to receive updated records in the order of passed keys\r\nActual: entities returned in another order, moreover some of them are duplicates\r\n\r\nit seems I found the root cause:\r\ngoogle/cloud/ndb/_cache.py:172\r\n```python\r\n    def make_call(self):\r\n        \"\"\"Call :method:`GlobalCache.get`.\"\"\"\r\n        cache = context_module.get_context().global_cache\r\n        return cache.get(self.todo.keys())\r\n```\r\n\r\nshould be\r\n```python\r\n    def make_call(self):\r\n        \"\"\"Call :method:`GlobalCache.get`.\"\"\"\r\n        cache = context_module.get_context().global_cache\r\n        return cache.get(self.keys)\r\n```\r\n\r\n#### Code example\r\n\r\nconftest.py\r\n```python\r\nimport pytest\r\nimport requests\r\n\r\nfrom google.auth.credentials import AnonymousCredentials\r\nfrom google.cloud import ndb\r\nfrom redis import Redis\r\n\r\n\r\n@pytest.fixture(autouse=True)\r\ndef datastore_context(request):\r\n    client = ndb.Client(project=\"test\", credentials=AnonymousCredentials())\r\n    memcache = Redis.from_url(\"redis://127.0.0.1:6379\")\r\n    with client.context(\r\n            global_cache=ndb.RedisCache(memcache),\r\n            cache_policy=False,\r\n            global_cache_policy=True,\r\n            global_cache_timeout_policy=60 * 60 * 60) as ctx:\r\n        yield ctx\r\n\r\n    requests.post(\"http://localhost:8001/reset\")\r\n    memcache.flushdb()\r\n```\r\n\r\nthe test itself\r\n```python\r\nimport random\r\n\r\nfrom google.cloud import ndb\r\n\r\n\r\nclass BaseEntity(ndb.PolyModel):\r\n    prop1 = ndb.IntegerProperty()\r\n    prop2 = ndb.StringProperty(default='abc')\r\n    prop3 = ndb.StringProperty(default='def')\r\n    prop4 = ndb.IntegerProperty(default=1000)\r\n    prop5 = ndb.IntegerProperty()\r\n\r\n    @ndb.transactional()\r\n    def save(self):\r\n        self.put()\r\n\r\n    @classmethod\r\n    def get_many(cls, keys):\r\n        return ndb.get_multi(keys, use_global_cache=True, use_datastore=True)\r\n\r\n    @classmethod\r\n    def save_many(cls, entities):\r\n        return ndb.put_multi(entities)\r\n\r\n\r\nclass Child1(BaseEntity):\r\n    child1 = ndb.StringProperty(default='child1')\r\n\r\n\r\nclass Child2(BaseEntity):\r\n    child2 = ndb.StringProperty(default='child2')\r\n\r\n\r\nclass Group(ndb.Model):\r\n    child = ndb.KeyProperty(BaseEntity, repeated=True)\r\n\r\n\r\ndef test_create_many_change_one_get_multi_all():\r\n    objects = [Child1(prop1=ix) for ix in range(5)]\r\n    objects += [Child2(prop1=ix) for ix in range(5)]\r\n    group = Group(child=BaseEntity.save_many(objects))\r\n    group.put()\r\n    BaseEntity.get_many(group.child)\r\n    one_object = random.choice(group.child).get()\r\n    one_object.prop3 = \"CHANGED\"\r\n    one_object.save()\r\n    objects_upd = BaseEntity.get_many(group.child)\r\n    keys_upd = [obj.key for obj in objects_upd]\r\n    assert len(keys_upd) == len(group.child)\r\n    assert len(set(keys_upd)) == len(set(group.child))\r\n    assert keys_upd == group.child\r\n```\r\n\r\n#### Stack trace\r\n```\r\n============================= test session starts ==============================\r\nplatform darwin -- Python 2.7.16, pytest-4.6.9, py-1.8.1, pluggy-0.13.1 -- /Users/vladimir/Virtualenvs/py2-ndb-issue/bin/python2\r\ncachedir: .pytest_cache\r\nrootdir: /Users/vladimir/Projects/py2-ndb-issues, inifile: setup.cfg\r\nplugins: env-0.6.2\r\ncollecting ... collected 1 item\r\n\r\ntest_get_multi.py::test_create_many_change_one_get_multi_all FAILED      [100%]\r\ntest_get_multi.py:37 (test_create_many_change_one_get_multi_all)\r\n9 != 10\r\n\r\nExpected :10\r\nActual   :9\r\n<Click to see difference>\r\n\r\ndef test_create_many_change_one_get_multi_all():\r\n        objects = [Child1(prop1=ix) for ix in range(5)]\r\n        objects += [Child2(prop1=ix) for ix in range(5)]\r\n        group = Group(child=BaseEntity.save_many(objects))\r\n        group.put()\r\n        BaseEntity.get_many(group.child)\r\n        one_object = random.choice(group.child).get()\r\n        one_object.prop3 = \"CHANGED\"\r\n        one_object.save()\r\n        objects_upd = BaseEntity.get_many(group.child)\r\n        keys_upd = [obj.key for obj in objects_upd]\r\n        assert len(keys_upd) == len(group.child)\r\n>       assert len(set(keys_upd)) == len(set(group.child))\r\nE       assert 9 == 10\r\n\r\ntest_get_multi.py:50: AssertionError\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/293", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/293/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/293/events", "html_url": "https://github.com/googleapis/python-ndb/issues/293", "id": 550340992, "node_id": "MDU6SXNzdWU1NTAzNDA5OTI=", "number": 293, "title": "ndb occasionally hanging in Beam jobs", "user": {"login": "simonff", "id": 1077372, "node_id": "MDQ6VXNlcjEwNzczNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1077372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonff", "html_url": "https://github.com/simonff", "followers_url": "https://api.github.com/users/simonff/followers", "following_url": "https://api.github.com/users/simonff/following{/other_user}", "gists_url": "https://api.github.com/users/simonff/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonff/subscriptions", "organizations_url": "https://api.github.com/users/simonff/orgs", "repos_url": "https://api.github.com/users/simonff/repos", "events_url": "https://api.github.com/users/simonff/events{/privacy}", "received_events_url": "https://api.github.com/users/simonff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332106, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTA2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-15T17:57:17Z", "updated_at": "2020-01-16T21:56:45Z", "closed_at": "2020-01-16T21:56:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI work at Google. I'm trying to port a bunch of internal Beam jobs to this library, and both under Py2 and Py3 communications with NDB occasionally hang forever (unclear if it's at the ndb or grpc level). I don't care about Py2 as much, but I'd like to figure out what to do under Py3.\r\n\r\nI'd like to print the eventloop state, but I see that debug logging is disabled: https://github.com/googleapis/python-ndb/blob/master/google/cloud/ndb/_eventloop.py#L45\r\nAny reason why it can't be turned on? \r\n\r\nI'll be grateful for other debugging advice.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/292", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/292/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/292/events", "html_url": "https://github.com/googleapis/python-ndb/issues/292", "id": 549960136, "node_id": "MDU6SXNzdWU1NDk5NjAxMzY=", "number": 292, "title": "cursor_after() doesn't exist at end of iteration", "user": {"login": "oliverchang", "id": 759062, "node_id": "MDQ6VXNlcjc1OTA2Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/759062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oliverchang", "html_url": "https://github.com/oliverchang", "followers_url": "https://api.github.com/users/oliverchang/followers", "following_url": "https://api.github.com/users/oliverchang/following{/other_user}", "gists_url": "https://api.github.com/users/oliverchang/gists{/gist_id}", "starred_url": "https://api.github.com/users/oliverchang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oliverchang/subscriptions", "organizations_url": "https://api.github.com/users/oliverchang/orgs", "repos_url": "https://api.github.com/users/oliverchang/repos", "events_url": "https://api.github.com/users/oliverchang/events{/privacy}", "received_events_url": "https://api.github.com/users/oliverchang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-01-15T04:33:38Z", "updated_at": "2020-04-06T17:51:20Z", "closed_at": "2020-01-22T20:02:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a behaviour difference with the old NDB that we're relying on wrt to cursor_after() at the end of iterating through a query. \r\n\r\nGiven the following:\r\n\r\n```python\r\n      class Model(ndb.Model):                 \r\n        a = ndb.IntegerProperty()                 \r\n                                      \r\n      Model(a=1).put()   \r\n      Model(a=2).put()\r\n      Model(a=3).put()   \r\n                 \r\n      result = Model.query().iter(limit=2)\r\n      print(list(result))                                                                               \r\n      print(list(Model.query().iter(start_cursor=result.cursor_after())))\r\n```\r\n\r\nThe old NDB gives:\r\n```\r\n[Model(key=Key('Model', 31), a=1), Model(key=Key('Model', 32), a=2)]\r\n[Model(key=Key('Model', 33), a=3)]\r\n```\r\n\r\nThe new NDB gives:\r\n```\r\n[Model(key=Key(u'Model', 31L), a=1L), Model(key=Key(u'Model', 32L), a=2L)]\r\nBadArgumentError: There is no cursor currently\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/289", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/289/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/289/events", "html_url": "https://github.com/googleapis/python-ndb/issues/289", "id": 549212722, "node_id": "MDU6SXNzdWU1NDkyMTI3MjI=", "number": 289, "title": "async/await support", "user": {"login": "c4rlo", "id": 435950, "node_id": "MDQ6VXNlcjQzNTk1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/435950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c4rlo", "html_url": "https://github.com/c4rlo", "followers_url": "https://api.github.com/users/c4rlo/followers", "following_url": "https://api.github.com/users/c4rlo/following{/other_user}", "gists_url": "https://api.github.com/users/c4rlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/c4rlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c4rlo/subscriptions", "organizations_url": "https://api.github.com/users/c4rlo/orgs", "repos_url": "https://api.github.com/users/c4rlo/repos", "events_url": "https://api.github.com/users/c4rlo/events{/privacy}", "received_events_url": "https://api.github.com/users/c4rlo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345320623, "node_id": "MDU6TGFiZWwxMzQ1MzIwNjIz", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20will%20not%20fix", "name": "status: will not fix", "color": "d4c5f9", "default": false, "description": null}, {"id": 1345320591, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTkx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-13T22:13:21Z", "updated_at": "2020-08-11T17:18:25Z", "closed_at": "2020-01-27T23:51:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI'd like to use ndb in `async`/`await` style code (e.g. using `asyncio`).\r\n\r\n**Describe the solution you'd like**\r\nI'd like something like this to work (assuming `Person` inherits from `ndb.Model`):\r\n\r\n```python\r\nawait Person().put_async()\r\n```\r\n\r\n **Describe alternatives you've considered**\r\n`ndb.Future` seems joined at the hip to `ndb._eventloop`. I've not found a way to turn the former into something I can `await` on.\r\n\r\n **Additional context**\r\nThis would be very useful when working with ndb in the context of an async web server.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/284", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/284/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/284/events", "html_url": "https://github.com/googleapis/python-ndb/issues/284", "id": 547192346, "node_id": "MDU6SXNzdWU1NDcxOTIzNDY=", "number": 284, "title": "NDB: Unknown protobuf attr type <class 'google.cloud.ndb.key.Key'>", "user": {"login": "blk-josecols", "id": 59618758, "node_id": "MDQ6VXNlcjU5NjE4NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/59618758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blk-josecols", "html_url": "https://github.com/blk-josecols", "followers_url": "https://api.github.com/users/blk-josecols/followers", "following_url": "https://api.github.com/users/blk-josecols/following{/other_user}", "gists_url": "https://api.github.com/users/blk-josecols/gists{/gist_id}", "starred_url": "https://api.github.com/users/blk-josecols/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blk-josecols/subscriptions", "organizations_url": "https://api.github.com/users/blk-josecols/orgs", "repos_url": "https://api.github.com/users/blk-josecols/repos", "events_url": "https://api.github.com/users/blk-josecols/events{/privacy}", "received_events_url": "https://api.github.com/users/blk-josecols/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332096, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20investigating", "name": "status: investigating", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-01-09T01:16:20Z", "updated_at": "2020-04-07T13:14:01Z", "closed_at": "2020-01-10T14:52:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "This seems related to #134 I'm not sure why the fix that was done with #136 is not working for this particular case, is failing for both Datastore and the Datastore Emulator. I created a repository for easier cloning to reproduce the issue -> https://github.com/blk-josecols/google-cloud-ndb-issue\r\n\r\n#### Environment details\r\n\r\n1. OS type and version: macOS Catalina 10.15.1\r\n2. Python version and virtual environment information: 3.7.5\r\n3. google-cloud-ndb version:  0.2.1\r\n4. pip freeze:\r\n```\r\ncachetools==4.0.0\r\ncertifi==2019.11.28\r\nchardet==3.0.4\r\nClick==7.0\r\ngoogle-api-core==1.15.0\r\ngoogle-auth==1.10.0\r\ngoogle-cloud-core==1.1.0\r\ngoogle-cloud-datastore==1.10.0\r\ngoogle-cloud-ndb==0.2.1\r\ngoogleapis-common-protos==1.6.0\r\ngrpcio==1.26.0\r\nidna==2.8\r\npip-tools==4.3.0\r\nprotobuf==3.11.2\r\npyasn1==0.4.8\r\npyasn1-modules==0.2.7\r\npython-dotenv==0.10.3\r\npytz==2019.3\r\nredis==3.3.11\r\nrequests==2.22.0\r\nrsa==4.0\r\nsix==1.13.0\r\nurllib3==1.25.7\r\n```\r\n\r\n#### Steps to reproduce\r\n\r\n1. Add a `ComputedProperty` to a model that returns a `KeyProperty` for different model.\r\n2. Try to save the model with this `ComputedProperty`.\r\n\r\n#### Code example\r\n\r\n```python\r\nfrom google.cloud import ndb\r\n\r\n\r\nclass AModel(ndb.Model):\r\n    s_foo = ndb.StringProperty()\r\n\r\n\r\nclass BModel(ndb.Model):\r\n    s_bar = ndb.StringProperty()\r\n    k_amodel = ndb.KeyProperty(kind=\"AModel\", indexed=True)\r\n\r\n\r\nclass CModel(ndb.Model):\r\n    s_foobar = ndb.StringProperty()\r\n    k_bmodel = ndb.KeyProperty(kind=\"BModel\", indexed=True)\r\n    k_amodel = ndb.ComputedProperty(  # Issue here\r\n        lambda self: self.k_bmodel.get().k_amodel if self.k_bmodel else None,\r\n    )\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    client = ndb.Client()\r\n\r\n    with client.context():\r\n        k_amodel = AModel(s_foo=\"test\").put()\r\n        k_bmodel = BModel(s_bar=\"test\", k_amodel=k_amodel).put()\r\n        CModel(s_foobar=\"test\", k_bmodel=k_bmodel).put()  # Issue here\r\n```\r\n\r\n#### Stack trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 14, in <module>\r\n    CModel(s_foobar=\"test\", k_bmodel=k_bmodel).put()\r\n  File \"/lib/python3.7/site-packages/google/cloud/ndb/_options.py\", line 89, in wrapper\r\n    return wrapped(*pass_args, **kwargs)\r\n  File \"/lib/python3.7/site-packages/google/cloud/ndb/utils.py\", line 78, in wrapper\r\n    return wrapped(*args, **new_kwargs)\r\n  File \"/lib/python3.7/site-packages/google/cloud/ndb/utils.py\", line 110, in positional_wrapper\r\n    return wrapped(*args, **kwds)\r\n  File \"/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 4935, in _put\r\n    return self._put_async(_options=kwargs[\"_options\"]).result()\r\n  File \"/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 309, in _advance_tasklet\r\n    self.generator.throw(type(error), error, traceback)\r\n  File \"/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 4996, in put\r\n    ds_key = yield _datastore_api.put(ds_entity, kwargs[\"_options\"])\r\n  File \"/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 312, in _advance_tasklet\r\n    yielded = self.generator.send(send_value)\r\n  File \"/lib/python3.7/site-packages/google/cloud/ndb/_datastore_api.py\", line 392, in put\r\n    entity_pb = helpers.entity_to_protobuf(entity)\r\n  File \"/lib/python3.7/site-packages/google/cloud/datastore/helpers.py\", line 221, in entity_to_protobuf\r\n    _set_protobuf_value(value_pb, value)\r\n  File \"/lib/python3.7/site-packages/google/cloud/datastore/helpers.py\", line 451, in _set_protobuf_value\r\n    attr, val = _pb_attr_value(val)\r\n  File \"/lib/python3.7/site-packages/google/cloud/datastore/helpers.py\", line 366, in _pb_attr_value\r\n    raise ValueError(\"Unknown protobuf attr type\", type(val))\r\nValueError: ('Unknown protobuf attr type', <class 'google.cloud.ndb.key.Key'>)\r\n```\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/282", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/282/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/282/events", "html_url": "https://github.com/googleapis/python-ndb/issues/282", "id": 542047878, "node_id": "MDU6SXNzdWU1NDIwNDc4Nzg=", "number": 282, "title": "google.auth.exceptions.RefreshError", "user": {"login": "hhhhub000", "id": 35677664, "node_id": "MDQ6VXNlcjM1Njc3NjY0", "avatar_url": "https://avatars2.githubusercontent.com/u/35677664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhhhub000", "html_url": "https://github.com/hhhhub000", "followers_url": "https://api.github.com/users/hhhhub000/followers", "following_url": "https://api.github.com/users/hhhhub000/following{/other_user}", "gists_url": "https://api.github.com/users/hhhhub000/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhhhub000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhhhub000/subscriptions", "organizations_url": "https://api.github.com/users/hhhhub000/orgs", "repos_url": "https://api.github.com/users/hhhhub000/repos", "events_url": "https://api.github.com/users/hhhhub000/events{/privacy}", "received_events_url": "https://api.github.com/users/hhhhub000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332096, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20investigating", "name": "status: investigating", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-24T08:44:26Z", "updated_at": "2019-12-26T06:41:08Z", "closed_at": "2019-12-26T06:41:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I defined ndb_wsgi_middleware referenced to the following:\r\nhttps://cloud.google.com/appengine/docs/standard/python3/migrating-to-cloud-ndb#using_a_runtime_context_with_wsgi_frameworks\r\n\r\nhttps://github.com/googleapis/python-ndb/issues/146\r\n\r\nIt worked fine for a while.But 1 hour later, following error occured.\r\n\r\n> google.auth.exceptions.RefreshError: ('invalid_grant: Invalid JWT: Token must be a short-lived token (60 minutes) and in a reasonable timeframe. Check your iat and exp values and use a clock with skew to account for clock differences between systems.', '{\\n  \"error\": \"invalid_grant\",\\n  \"error_description\": \"Invalid JWT: Token must be a short-lived token (60 minutes) and in a reasonable timeframe. Check your iat and exp values and use a clock with skew to account for clock differences between systems.\"\\n}')\r\n\r\nI think ndb.Client() use OAuth, so it have expiration time for access token.\r\n\r\n#### Environment details\r\n\r\n1. windows(flask dev server) and GAE platform(gunicorn)\r\n2. Python3.7\r\n3. python-ndb0.2.0\r\n\r\n#### Steps to reproduce\r\n\r\n  1. server instanse launch\r\n  2. any access(process is using ndb)\r\n  3. 1hour later.(keep alive server)\r\n  4. any access(process is using ndb)\r\n=>google.auth.exceptions.RefreshError occur\r\n\r\n#### Code example\r\n\r\n```python\r\nfrom google.cloud import ndb\r\n\r\nclass NDBMiddleware:\r\n    def __init__(self, app):\r\n        self.app = app\r\n        self.client = ndb.Client(...)\r\n\r\n    def __call__(self, environ, start_response):\r\n        with self.client.context():\r\n            return self.app(environ, start_response)\r\n\r\napp = Flask(...)\r\napp.wsgi_app = NDBMiddleware(app.wsgi_app)\r\n\r\n...\r\n\r\nndb.get(key( ..any )) # error occured 1hour after wsgi_app was launched. (ndb.Client() was created)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/281", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/281/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/281/events", "html_url": "https://github.com/googleapis/python-ndb/issues/281", "id": 541148991, "node_id": "MDU6SXNzdWU1NDExNDg5OTE=", "number": 281, "title": "ndb.Key, Cache, and Pickle - ValueError: (None, 'ID/name was not a string or integer.')", "user": {"login": "smittysmee", "id": 8376011, "node_id": "MDQ6VXNlcjgzNzYwMTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8376011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smittysmee", "html_url": "https://github.com/smittysmee", "followers_url": "https://api.github.com/users/smittysmee/followers", "following_url": "https://api.github.com/users/smittysmee/following{/other_user}", "gists_url": "https://api.github.com/users/smittysmee/gists{/gist_id}", "starred_url": "https://api.github.com/users/smittysmee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smittysmee/subscriptions", "organizations_url": "https://api.github.com/users/smittysmee/orgs", "repos_url": "https://api.github.com/users/smittysmee/repos", "events_url": "https://api.github.com/users/smittysmee/events{/privacy}", "received_events_url": "https://api.github.com/users/smittysmee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332096, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20investigating", "name": "status: investigating", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-12-20T18:56:40Z", "updated_at": "2020-02-05T14:33:04Z", "closed_at": "2020-02-05T14:33:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are receiving ValueErrors when serializing and deserializing Properties with empty id's of the `ndb.Key`. We have noticed that when using `use_cache=True` after creation, the structured property's key is `None` - but when operating a `use_cache=False`, the structured property instance is returned with a key property of `ndb.Key` instance with no ID. The issue appears to be StructuredProperty constructing an ndb.Key with an null ID from the datastore when the entity is not cached.\r\n\r\nThis becomes an issue when attempting to deserialize the property with items that perform a serialization & deserialization of the entity; specifically related to the structured property apart from the parent.\r\n\r\nTo temporarily fix this issue, one must delete the structured property's key empty ndb.Key instance before serializing to allow for deserializing at a later date from cache.\r\n\r\n```\r\n# Where model_y is the structured property\r\nif hasattr(model_y, 'key') and model_y.key.id() is None:\r\n    del model_y.key\r\n\r\n# Success\r\npickle.loads(pickle.dumps(model_y))\r\n```\r\n\r\n#### Environment details\r\n1. Python 3.7.2\r\n2. google-cloud-ndb 0.2.1\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Create an instance of a ModelX that contains a repeated structured property of ModelY. Populate the repeated list with an instance of Model Y.\r\n\r\n#### Code example\r\n\r\n```python\r\nimport pickle\r\nfrom google.cloud import ndb\r\n\r\n\r\nclass ModelY(ndb.Model):\r\n    identifier = ndb.StringProperty()\r\n\r\n\r\nclass ModelX(ndb.Model):\r\n    specification = ndb.StructuredProperty(ModelY)\r\n\r\n\r\nentity_key = ModelX(\r\n    specification=ModelY(\r\n        identifier='9bc086f9cdeb1eb47cdd1b6a1b3ba6f7f0cc2bd0da51d9b077b4b0b83f69f995'\r\n    )\r\n).put()\r\n\r\n# Does not fail because specification key is None\r\nentity = entity_key.get()\r\npickle.loads(pickle.dumps(entity.specification))\r\n\r\n# Fails because specification entity is an ndb.Key with no id\r\nentity = entity_key.get(use_cache=False)\r\npickle.loads(pickle.dumps(entity.specification))\r\n```\r\n\r\n#### Stack trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/Asmith/Desktop/ndb_example/test_venv/lib/python3.7/site-packages/webapp2.py\", line 1573, in __call__\r\n    rv = self.handle_exception(request, response, e)\r\n  File \"/Users/Asmith/Desktop/ndb_example/test_venv/lib/python3.7/site-packages/webapp2.py\", line 1567, in __call__\r\n    rv = self.router.dispatch(request, response)\r\n  File \"/Users/Asmith/Desktop/ndb_example/test_venv/lib/python3.7/site-packages/webapp2.py\", line 1314, in default_dispatcher\r\n    return route.handler_adapter(request, response)\r\n  File \"/Users/Asmith/Desktop/ndb_example/test_venv/lib/python3.7/site-packages/webapp2.py\", line 1138, in __call__\r\n    return handler.dispatch()\r\n  File \"/Users/Asmith/Desktop/ndb_example/test_venv/lib/python3.7/site-packages/webapp2.py\", line 606, in dispatch\r\n    return self.handle_exception(e, self.app.debug)\r\n  File \"/Users/Asmith/Desktop/ndb_example/test_venv/lib/python3.7/site-packages/webapp2.py\", line 604, in dispatch\r\n    return method(*args, **kwargs)\r\n  File \"/Users/Asmith/Desktop/ndb_example/handler.py\", line 18, in get\r\n    entity_test.test()\r\n  File \"/Users/Asmith/Desktop/ndb_example/entity_test.py\", line 27, in test\r\n    pickle.loads(pickle.dumps(entity.specification))\r\n  File \"/Users/Asmith/Desktop/ndb_example/test_venv/lib/python3.7/site-packages/google/cloud/ndb/key.py\", line 452, in __setstate__\r\n    *flat, project=project, namespace=kwargs[\"namespace\"]\r\n  File \"/Users/Asmith/Desktop/ndb_example/test_venv/lib/python3.7/site-packages/google/cloud/datastore/key.py\", line 114, in __init__\r\n    self._path = self._combine_args()\r\n  File \"/Users/Asmith/Desktop/ndb_example/test_venv/lib/python3.7/site-packages/google/cloud/datastore/key.py\", line 214, in _combine_args\r\n    child_path = self._parse_path(self._flat_path)\r\n  File \"/Users/Asmith/Desktop/ndb_example/test_venv/lib/python3.7/site-packages/google/cloud/datastore/key.py\", line 198, in _parse_path\r\n    raise ValueError(id_or_name, \"ID/name was not a string or integer.\")\r\nValueError: (None, 'ID/name was not a string or integer.')\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/280", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/280/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/280/events", "html_url": "https://github.com/googleapis/python-ndb/issues/280", "id": 539924941, "node_id": "MDU6SXNzdWU1Mzk5MjQ5NDE=", "number": 280, "title": "BadValueError when referencing ndb.UserProperty", "user": {"login": "safetymonkey", "id": 187912, "node_id": "MDQ6VXNlcjE4NzkxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/187912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/safetymonkey", "html_url": "https://github.com/safetymonkey", "followers_url": "https://api.github.com/users/safetymonkey/followers", "following_url": "https://api.github.com/users/safetymonkey/following{/other_user}", "gists_url": "https://api.github.com/users/safetymonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/safetymonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/safetymonkey/subscriptions", "organizations_url": "https://api.github.com/users/safetymonkey/orgs", "repos_url": "https://api.github.com/users/safetymonkey/repos", "events_url": "https://api.github.com/users/safetymonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/safetymonkey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332096, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk2", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/status:%20investigating", "name": "status: investigating", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-18T21:08:13Z", "updated_at": "2020-01-28T15:10:16Z", "closed_at": "2020-01-28T15:10:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n1. **OS:** MacOS Mojave 10.14.6\r\n2. **Python version:** 2.7.12\r\n3. **google-cloud-ndb version:** 0.2.0\r\n\r\n#### Overview\r\nI'm getting an error when I try to sign into my Python 2 App Engine app w/ the Users API.\r\n1. Go to app home screen and click login button, which takes you to the URL specified by `google.appengine.api.users.create_login_url()`.\r\n2. The local dev environment login window will appear. Keep default \"test@example.com\" email address and click \"Login\".\r\n3. Receive the following error: `BadValueError: Expected User, got users.User(email='test@example.com',_user_id='185804764220139124118')`\r\n\r\nFrom what I can tell, the Users API `users.get_current_user()` call is returning a `<class 'google.appengine.api.users.User'>` object which the legacy version of `ndb.UserProperty` is fine with but which the Cloud version is choking on. \r\n\r\n#### Relevant code\r\n\r\n```python\r\n# settings.py (controller)\r\nfrom google.cloud import ndb\r\nfrom google.appengine.api import users\r\nfrom controllers._auth import Authorize\r\nfrom models.member import Member\r\n\r\nclass SettingsController(webapp2.RequestHandler):\r\n  def create_uncommitted_member(self):\r\n    \"\"\"Create a new uncommitted member.\r\n        Initialize the user, and key, and sessionID.\r\n        It's used to populate the form for a user who isn't yet a member.\r\n        And it's used to create a Member instance for a user who just joined.\r\n    \"\"\"\r\n    user = Authorize.get_current_user(self)\r\n    if not user:\r\n      return False\r\n\r\n    member = Member(id=user.user_id(),\r\n                    session_id=SessionID.generate(),\r\n                    user=user) # Line 201 referenced in stack trace\r\n    return member\r\n```\r\n\r\n```python\r\n# member.py (model)\r\nfrom google.cloud import ndb\r\n\r\nclass Member(ndb.Model):\r\n  user = ndb.UserProperty()\r\n  name = ndb.StringProperty()\r\n  session_id = ndb.StringProperty()\r\n```\r\n\r\n```python\r\n# _auth.py (helper controller)\r\nfrom google.cloud import ndb\r\nfrom google.appengine.api import users\r\n\r\nclass Authorize(object):\r\n  @staticmethod\r\n  def get_current_user(req):\r\n    return users.get_current_user()\r\n```\r\n\r\n#### Stack trace\r\n```\r\nERROR    2019-12-18 20:32:55,197 webapp2.py:1552] Expected User, got users.User(email='test@example.com',_user_id='185804764220139124118')\r\nTraceback (most recent call last):\r\n  File \"/Users/user/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1535, in __call__\r\n    rv = self.handle_exception(request, response, e)\r\n  File \"/Users/user/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1529, in __call__\r\n    rv = self.router.dispatch(request, response)\r\n  File \"/Users/user/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1278, in default_dispatcher\r\n    return route.handler_adapter(request, response)\r\n  File \"/Users/user/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 1102, in __call__\r\n    return handler.dispatch()\r\n  File \"/Users/user/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 572, in dispatch\r\n    return self.handle_exception(e, self.app.debug)\r\n  File \"/Users/user/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.2/webapp2.py\", line 570, in dispatch\r\n    return method(*args, **kwargs)\r\n  File \"/Users/user/project/controllers/settings.py\", line 41, in get\r\n    self.render_settings_page()\r\n  File \"/Users/user/project/controllers/settings.py\", line 164, in render_settings_page\r\n    member = self.create_uncommitted_member()\r\n  File \"/Users/user/project/controllers/settings.py\", line 201, in create_uncommitted_member\r\n    user=user)\r\n  File \"/Users/user/project/lib/google/cloud/ndb/model.py\", line 4519, in __init__\r\n    self._set_attributes(kwargs)\r\n  File \"/Users/user/project/lib/google/cloud/ndb/model.py\", line 4567, in _set_attributes\r\n    prop._set_value(self, value)\r\n  File \"/Users/user/project/lib/google/cloud/ndb/model.py\", line 1475, in _set_value\r\n    value = self._do_validate(value)\r\n  File \"/Users/user/project/lib/google/cloud/ndb/model.py\", line 1382, in _do_validate\r\n    value = self._call_shallow_validation(value)\r\n  File \"/Users/user/project/lib/google/cloud/ndb/model.py\", line 1729, in _call_shallow_validation\r\n    return call(value)\r\n  File \"/Users/user/project/lib/google/cloud/ndb/model.py\", line 1801, in call\r\n    new_value = method(self, value)\r\n  File \"/Users/user/project/lib/google/cloud/ndb/model.py\", line 3194, in _validate\r\n    \"Expected User, got {!r}\".format(value)\r\nBadValueError: Expected User, got users.User(email='test@example.com',_user_id='185804764220139124118')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/278", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/278/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/278/events", "html_url": "https://github.com/googleapis/python-ndb/issues/278", "id": 537955563, "node_id": "MDU6SXNzdWU1Mzc5NTU1NjM=", "number": 278, "title": "Populating Empty Entity Key for Structured Properties", "user": {"login": "smittysmee", "id": 8376011, "node_id": "MDQ6VXNlcjgzNzYwMTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8376011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smittysmee", "html_url": "https://github.com/smittysmee", "followers_url": "https://api.github.com/users/smittysmee/followers", "following_url": "https://api.github.com/users/smittysmee/following{/other_user}", "gists_url": "https://api.github.com/users/smittysmee/gists{/gist_id}", "starred_url": "https://api.github.com/users/smittysmee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smittysmee/subscriptions", "organizations_url": "https://api.github.com/users/smittysmee/orgs", "repos_url": "https://api.github.com/users/smittysmee/repos", "events_url": "https://api.github.com/users/smittysmee/events{/privacy}", "received_events_url": "https://api.github.com/users/smittysmee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141019, "node_id": "MDU6TGFiZWwxMzQxMTQxMDE5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-14T19:35:15Z", "updated_at": "2020-04-07T13:14:01Z", "closed_at": "2019-12-17T22:10:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are experiencing errors related to Structured Properties within a model being populated with an empty Entity Key value for the given model where the given structure property should not have an entity key listed. \r\n\r\nThe anticipated result is to have the key field as a null property not populated.\r\nThe observed result is an entity key populated without an entity ID. \r\n\r\nThis is causing issued when attempting to deserialize the item.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/277", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/277/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/277/events", "html_url": "https://github.com/googleapis/python-ndb/issues/277", "id": 537872588, "node_id": "MDU6SXNzdWU1Mzc4NzI1ODg=", "number": 277, "title": "add compressed=True support to TextProperty", "user": {"login": "snarfed", "id": 778068, "node_id": "MDQ6VXNlcjc3ODA2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/778068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snarfed", "html_url": "https://github.com/snarfed", "followers_url": "https://api.github.com/users/snarfed/followers", "following_url": "https://api.github.com/users/snarfed/following{/other_user}", "gists_url": "https://api.github.com/users/snarfed/gists{/gist_id}", "starred_url": "https://api.github.com/users/snarfed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snarfed/subscriptions", "organizations_url": "https://api.github.com/users/snarfed/orgs", "repos_url": "https://api.github.com/users/snarfed/repos", "events_url": "https://api.github.com/users/snarfed/events{/privacy}", "received_events_url": "https://api.github.com/users/snarfed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1345332099, "node_id": "MDU6TGFiZWwxMzQ1MzMyMDk5", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisrossi", "id": 148267, "node_id": "MDQ6VXNlcjE0ODI2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/148267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrossi", "html_url": "https://github.com/chrisrossi", "followers_url": "https://api.github.com/users/chrisrossi/followers", "following_url": "https://api.github.com/users/chrisrossi/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrossi/subscriptions", "organizations_url": "https://api.github.com/users/chrisrossi/orgs", "repos_url": "https://api.github.com/users/chrisrossi/repos", "events_url": "https://api.github.com/users/chrisrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrossi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-14T06:00:55Z", "updated_at": "2020-02-24T16:12:00Z", "closed_at": "2020-02-24T16:12:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi all! i recently hit an issue migrating an app from `google.appengine.ext.ndb` with a `TextProperty(compressed=True)`, which isn't supported in `google.cloud.ndb`. (i'm on 0.2.0, on the Python 3 Standard runtime.)\r\n\r\ni saw #160 and the fix in #181, particularly \"we can still support compression transparently with bidirectional compatibility,\" and optimistically tried just removing `compressed=True`, but no luck. the value comes back as the raw zlib-compressed bytes, eg `b'x\\x9c\\xed\\\\ks\\xdb...'`.\r\n\r\ni ended up adding support myself with this custom property class:\r\n\r\n```py\r\nclass CompressedTextProperty(ndb.GenericProperty):\r\n  def _to_base_type(self, value):\r\n    if isinstance(value, str):\r\n      return zlib.compress(value.encode())\r\n\r\n  def _from_base_type(self, value):\r\n    if isinstance(value, bytes):\r\n      return zlib.decompress(value).decode()\r\n```\r\n\r\nit'd be nice if `google.cloud.ndb` supported this natively!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-ndb/issues/276", "repository_url": "https://api.github.com/repos/googleapis/python-ndb", "labels_url": "https://api.github.com/repos/googleapis/python-ndb/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-ndb/issues/276/comments", "events_url": "https://api.github.com/repos/googleapis/python-ndb/issues/276/events", "html_url": "https://github.com/googleapis/python-ndb/issues/276", "id": 537344262, "node_id": "MDU6SXNzdWU1MzczNDQyNjI=", "number": 276, "title": "key.get() entity with compressed repeated LocalStructuredProperty(s) raise exception", "user": {"login": "chmoder", "id": 82629, "node_id": "MDQ6VXNlcjgyNjI5", "avatar_url": "https://avatars3.githubusercontent.com/u/82629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chmoder", "html_url": "https://github.com/chmoder", "followers_url": "https://api.github.com/users/chmoder/followers", "following_url": "https://api.github.com/users/chmoder/following{/other_user}", "gists_url": "https://api.github.com/users/chmoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/chmoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chmoder/subscriptions", "organizations_url": "https://api.github.com/users/chmoder/orgs", "repos_url": "https://api.github.com/users/chmoder/repos", "events_url": "https://api.github.com/users/chmoder/events{/privacy}", "received_events_url": "https://api.github.com/users/chmoder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1341141020, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": null}, {"id": 1341141021, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIx", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1341141022, "node_id": "MDU6TGFiZWwxMzQxMTQxMDIy", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/:rotating_light:", "name": ":rotating_light:", "color": "ededed", "default": false, "description": null}, {"id": 1345320524, "node_id": "MDU6TGFiZWwxMzQ1MzIwNTI0", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": null}, {"id": 1345332100, "node_id": "MDU6TGFiZWwxMzQ1MzMyMTAw", "url": "https://api.github.com/repos/googleapis/python-ndb/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cguardia", "id": 324415, "node_id": "MDQ6VXNlcjMyNDQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/324415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cguardia", "html_url": "https://github.com/cguardia", "followers_url": "https://api.github.com/users/cguardia/followers", "following_url": "https://api.github.com/users/cguardia/following{/other_user}", "gists_url": "https://api.github.com/users/cguardia/gists{/gist_id}", "starred_url": "https://api.github.com/users/cguardia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cguardia/subscriptions", "organizations_url": "https://api.github.com/users/cguardia/orgs", "repos_url": "https://api.github.com/users/cguardia/repos", "events_url": "https://api.github.com/users/cguardia/events{/privacy}", "received_events_url": "https://api.github.com/users/cguardia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-12-13T04:37:34Z", "updated_at": "2020-04-07T14:31:46Z", "closed_at": "2020-01-14T20:23:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When retrieving entities with compressed repeated local structured properties an exception is thrown indicating that the repeated property a list not a decompress-able byte string.\r\n\r\nhttps://github.com/googleapis/python-ndb/blob/release-v0.2.0/google/cloud/ndb/model.py#L2513\r\n\r\nPlease let me know how I can help!\r\n\r\n\r\n#### Environment details\r\nNOTE: this data was on original NDB datastore and we are using this library to fetch said data.\r\n\r\n1. google-cloud-ndb\r\n2. OS x\r\n3. python 3.7.3\r\n4. google-cloud-ndb 0.2.0\r\n\r\n#### Steps to reproduce\r\n\r\n  1. find a key in an NDB datastore\r\n  2. key.get()\r\n\r\n#### Code example\r\n\r\n* assuming these are the classes*\r\n```python\r\nclass Dog(ndb.Model):\r\n    name = ndb.StringProperty()\r\n\r\n\r\nclass House(ndb.Model):\r\n    dogs = ndb.LocalStructuredProperty(Dog, repeated=True, compressed=True)\r\n\r\n\r\nhouse = House()\r\nhouse.dogs = [Dog(name='Mika'), Dog(name='Mocha')]\r\nkey = house.put()\r\nentity = key.get()\r\n```\r\n\r\n#### Stack trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/contextlib.py\", line 130, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/client.py\", line 177, in context\r\n    yield context\r\n  File \"/Users/tcross/development/csgapi/main.py\", line 24, in <module>\r\n    key = house.put()\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/_options.py\", line 89, in wrapper\r\n    return wrapped(*pass_args, **kwargs)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/utils.py\", line 78, in wrapper\r\n    return wrapped(*args, **new_kwargs)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/utils.py\", line 109, in positional_wrapper\r\n    return wrapped(*args, **kwds)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 4921, in _put\r\n    return self._put_async(_options=kwargs[\"_options\"]).result()\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 190, in result\r\n    self.check_success()\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 137, in check_success\r\n    raise self._exception\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/tasklets.py\", line 312, in _advance_tasklet\r\n    yielded = self.generator.send(send_value)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 4981, in put\r\n    ds_entity = _entity_to_ds_entity(self)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 722, in _entity_to_ds_entity\r\n    names = prop._to_datastore(entity, data)\r\n  File \"/Users/tcross/development/virtual-environments/csgapi/lib/python3.7/site-packages/google/cloud/ndb/model.py\", line 2495, in _to_datastore\r\n    if value and not value.startswith(_ZLIB_COMPRESSION_MARKER):\r\nAttributeError: 'list' object has no attribute 'startswith'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}]}