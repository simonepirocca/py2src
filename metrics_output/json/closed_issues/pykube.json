{"total_count": 43, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/kelproject/pykube/issues/151", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/151/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/151/events", "html_url": "https://github.com/kelproject/pykube/issues/151", "id": 293962839, "node_id": "MDU6SXNzdWUyOTM5NjI4Mzk=", "number": 151, "title": "certificate verify failed when REQUESTS_CA_BUNDLE environment variable is set", "user": {"login": "jmaroeder", "id": 1402944, "node_id": "MDQ6VXNlcjE0MDI5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1402944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmaroeder", "html_url": "https://github.com/jmaroeder", "followers_url": "https://api.github.com/users/jmaroeder/followers", "following_url": "https://api.github.com/users/jmaroeder/following{/other_user}", "gists_url": "https://api.github.com/users/jmaroeder/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmaroeder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmaroeder/subscriptions", "organizations_url": "https://api.github.com/users/jmaroeder/orgs", "repos_url": "https://api.github.com/users/jmaroeder/repos", "events_url": "https://api.github.com/users/jmaroeder/events{/privacy}", "received_events_url": "https://api.github.com/users/jmaroeder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-02T17:22:18Z", "updated_at": "2018-02-02T18:15:20Z", "closed_at": "2018-02-02T18:15:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the `REQUESTS_CA_BUNDLE` environment variable is set, pykube is unable to connect to a server:\r\n```\r\n  File \"/usr/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 601, in urlopen\r\n    chunked=chunked)\r\n  File \"/usr/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 346, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"/usr/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 850, in _validate_conn\r\n    conn.connect()\r\n  File \"/usr/lib/python3.6/site-packages/urllib3/connection.py\", line 326, in connect\r\n    ssl_context=context)\r\n  File \"/usr/lib/python3.6/site-packages/urllib3/util/ssl_.py\", line 329, in ssl_wrap_socket\r\n    return context.wrap_socket(sock, server_hostname=server_hostname)\r\n  File \"/usr/lib/python3.6/ssl.py\", line 407, in wrap_socket\r\n    _context=self, _session=session)\r\n  File \"/usr/lib/python3.6/ssl.py\", line 814, in __init__\r\n    self.do_handshake()\r\n  File \"/usr/lib/python3.6/ssl.py\", line 1068, in do_handshake\r\n    self._sslobj.do_handshake()\r\n  File \"/usr/lib/python3.6/ssl.py\", line 689, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777)\r\n```\r\n\r\nIt appears that this is because the `session` object of the `HTTPClient` doesn't play nice when REQUESTS_CA_BUNDLE is set. This is apparently a known issue in `requests`, and it doesn't look like there's an ETA for a fix (they're pushing it off to v3.0.0):\r\n\r\nhttps://github.com/requests/requests/issues/3829\r\n\r\nI can confirm this is the case by passing the `verify` argument to the `get` method:\r\n\r\n```python\r\n>>> api.session.get('https://192.168.64.7:8443')\r\n...\r\nssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777)\r\n>>> api.session.get('https://192.168.64.7:8443', verify=api.session.verify)\r\n<Response [200]>\r\n```\r\n\r\nThis might be able to be worked around for now by adding the `verify` argument to kwargs in `HTTPClient.get_kwargs`. I'll investigate further and open a PR if that's the case", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/134", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/134/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/134/events", "html_url": "https://github.com/kelproject/pykube/issues/134", "id": 243915606, "node_id": "MDU6SXNzdWUyNDM5MTU2MDY=", "number": 134, "title": "Can we get a list of namespaces in a K8s cluster\uff1f", "user": {"login": "cleverlzc", "id": 11682721, "node_id": "MDQ6VXNlcjExNjgyNzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/11682721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cleverlzc", "html_url": "https://github.com/cleverlzc", "followers_url": "https://api.github.com/users/cleverlzc/followers", "following_url": "https://api.github.com/users/cleverlzc/following{/other_user}", "gists_url": "https://api.github.com/users/cleverlzc/gists{/gist_id}", "starred_url": "https://api.github.com/users/cleverlzc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cleverlzc/subscriptions", "organizations_url": "https://api.github.com/users/cleverlzc/orgs", "repos_url": "https://api.github.com/users/cleverlzc/repos", "events_url": "https://api.github.com/users/cleverlzc/events{/privacy}", "received_events_url": "https://api.github.com/users/cleverlzc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-19T03:54:46Z", "updated_at": "2017-07-21T00:58:52Z", "closed_at": "2017-07-20T21:13:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nnss = pykube.NameSpace.objects(api)\r\nfor ns in nss:\r\n    print(ns)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"query_rc.py\", line 6, in <module>\r\n    nss = pykube.NameSpace.objects(api)\r\nAttributeError: 'module' object has no attribute 'NameSpace'\r\n```\r\n\r\n@brosner", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/131", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/131/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/131/events", "html_url": "https://github.com/kelproject/pykube/issues/131", "id": 229202945, "node_id": "MDU6SXNzdWUyMjkyMDI5NDU=", "number": 131, "title": "version api fails when called", "user": {"login": "danaucpe", "id": 1305862, "node_id": "MDQ6VXNlcjEzMDU4NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1305862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danaucpe", "html_url": "https://github.com/danaucpe", "followers_url": "https://api.github.com/users/danaucpe/followers", "following_url": "https://api.github.com/users/danaucpe/following{/other_user}", "gists_url": "https://api.github.com/users/danaucpe/gists{/gist_id}", "starred_url": "https://api.github.com/users/danaucpe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danaucpe/subscriptions", "organizations_url": "https://api.github.com/users/danaucpe/orgs", "repos_url": "https://api.github.com/users/danaucpe/repos", "events_url": "https://api.github.com/users/danaucpe/events{/privacy}", "received_events_url": "https://api.github.com/users/danaucpe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-17T00:10:53Z", "updated_at": "2017-06-30T17:56:41Z", "closed_at": "2017-06-30T17:56:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\npip install pykube\r\nRequirement already satisfied: pykube in /usr/local/lib/python2.7/site-packages\r\nRequirement already satisfied: PyYAML in /Library/Python/2.7/site-packages (from pykube)\r\nRequirement already satisfied: requests-oauthlib in /usr/local/lib/python2.7/site-packages (from pykube)\r\nRequirement already satisfied: tzlocal in /usr/local/lib/python2.7/site-packages (from pykube)\r\nCollecting requests>=2.12 (from pykube)\r\n  Downloading requests-2.14.2-py2.py3-none-any.whl (560kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 563kB 2.3MB/s\r\nRequirement already satisfied: oauth2client in /usr/local/lib/python2.7/site-packages (from pykube)\r\nRequirement already satisfied: six in /usr/local/lib/python2.7/site-packages (from pykube)\r\nRequirement already satisfied: oauthlib>=0.6.2 in /usr/local/lib/python2.7/site-packages (from requests-oauthlib->pykube)\r\nRequirement already satisfied: pytz in /usr/local/lib/python2.7/site-packages (from tzlocal->pykube)\r\nRequirement already satisfied: pyasn1-modules>=0.0.5 in /usr/local/lib/python2.7/site-packages (from oauth2client->pykube)\r\nRequirement already satisfied: pyasn1>=0.1.7 in /usr/local/lib/python2.7/site-packages (from oauth2client->pykube)\r\nRequirement already satisfied: rsa>=3.1.4 in /usr/local/lib/python2.7/site-packages (from oauth2client->pykube)\r\nRequirement already satisfied: httplib2>=0.9.1 in /usr/local/lib/python2.7/site-packages (from oauth2client->pykube)\r\nInstalling collected packages: requests\r\n  Found existing installation: requests 2.10.0\r\n    Uninstalling requests-2.10.0:\r\n      Successfully uninstalled requests-2.10.0\r\nSuccessfully installed requests-2.14.2\r\n\r\n[calling version fails, but calling objects succeeds]\r\n\r\n$ python\r\nPython 2.7.12 (default, Oct 11 2016, 05:20:59)\r\n[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.38)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pykube\r\n>>> api = pykube.HTTPClient(pykube.KubeConfig.from_file(\"/Users/dablack/.kube/config\"))\r\n>>> api.version()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/pykube/http.py\", line 56, in version\r\n    response = self.get('/version')\r\n  File \"/usr/local/lib/python2.7/site-packages/pykube/http.py\", line 127, in get\r\n    return self.session.get(*args, **self.get_kwargs(**kwargs))\r\nTypeError: get() got multiple values for keyword argument 'url'\r\n>>> pykube.Pod.objects(api).filter(namespace=\"kube-system\")\r\n<pykube.query.Query object at 0x105e1e090>\r\n>>>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/126", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/126/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/126/events", "html_url": "https://github.com/kelproject/pykube/issues/126", "id": 220618105, "node_id": "MDU6SXNzdWUyMjA2MTgxMDU=", "number": 126, "title": "Add example for getting attribute of object", "user": {"login": "jml", "id": 125674, "node_id": "MDQ6VXNlcjEyNTY3NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/125674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jml", "html_url": "https://github.com/jml", "followers_url": "https://api.github.com/users/jml/followers", "following_url": "https://api.github.com/users/jml/following{/other_user}", "gists_url": "https://api.github.com/users/jml/gists{/gist_id}", "starred_url": "https://api.github.com/users/jml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jml/subscriptions", "organizations_url": "https://api.github.com/users/jml/orgs", "repos_url": "https://api.github.com/users/jml/repos", "events_url": "https://api.github.com/users/jml/events{/privacy}", "received_events_url": "https://api.github.com/users/jml/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-10T11:41:36Z", "updated_at": "2017-06-30T18:02:34Z", "closed_at": "2017-06-30T18:02:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The README doesn't say how to access information about the objects returned by queries. It really should. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/125", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/125/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/125/events", "html_url": "https://github.com/kelproject/pykube/issues/125", "id": 219617725, "node_id": "MDU6SXNzdWUyMTk2MTc3MjU=", "number": 125, "title": "requests.exceptions.SSLError: hostname", "user": {"login": "johnlabarge", "id": 965310, "node_id": "MDQ6VXNlcjk2NTMxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/965310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnlabarge", "html_url": "https://github.com/johnlabarge", "followers_url": "https://api.github.com/users/johnlabarge/followers", "following_url": "https://api.github.com/users/johnlabarge/following{/other_user}", "gists_url": "https://api.github.com/users/johnlabarge/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnlabarge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnlabarge/subscriptions", "organizations_url": "https://api.github.com/users/johnlabarge/orgs", "repos_url": "https://api.github.com/users/johnlabarge/repos", "events_url": "https://api.github.com/users/johnlabarge/events{/privacy}", "received_events_url": "https://api.github.com/users/johnlabarge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-05T15:10:42Z", "updated_at": "2017-06-30T17:51:35Z", "closed_at": "2017-06-30T17:51:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to use the instructions from the documentation to  connect to a GKE cluster using the config file it fails with the dreaded: \"requests.exceptions.SSLError: hostname.\"   I expect this to work by not validating the hostname and instead validating the cert. \r\n\r\nThe workaround is to use kubectl proxy and http://localhost:8001 which is just an extra step for the user. It would be nice if requests could turn host validation off in this case, but there is no such feature in that library.  I filed a [feature request](https://github.com/kennethreitz/requests/issues/3955#issuecomment-291876110) with it as well, but it is basically rejected. \r\n\r\nIt may be worth updating the docs to deal with this. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/120", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/120/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/120/events", "html_url": "https://github.com/kelproject/pykube/issues/120", "id": 213047108, "node_id": "MDU6SXNzdWUyMTMwNDcxMDg=", "number": 120, "title": "Cannot import StatefulSet", "user": {"login": "TANguyen1893", "id": 4335955, "node_id": "MDQ6VXNlcjQzMzU5NTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4335955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TANguyen1893", "html_url": "https://github.com/TANguyen1893", "followers_url": "https://api.github.com/users/TANguyen1893/followers", "following_url": "https://api.github.com/users/TANguyen1893/following{/other_user}", "gists_url": "https://api.github.com/users/TANguyen1893/gists{/gist_id}", "starred_url": "https://api.github.com/users/TANguyen1893/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TANguyen1893/subscriptions", "organizations_url": "https://api.github.com/users/TANguyen1893/orgs", "repos_url": "https://api.github.com/users/TANguyen1893/repos", "events_url": "https://api.github.com/users/TANguyen1893/events{/privacy}", "received_events_url": "https://api.github.com/users/TANguyen1893/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-09T14:07:24Z", "updated_at": "2017-03-09T14:36:51Z", "closed_at": "2017-03-09T14:36:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting this import error from the logs:\r\n\r\n`Traceback (most recent call last):\r\n  File \"/usr/local/bin/deployment-orchestrator\", line 6, in <module>\r\n    from k8s_deployment_tools.deployment_orchestrator import main\r\n  File \"/usr/local/lib/python3.4/dist-packages/k8s_deployment_tools/deployment_orchestrator.py\", line 31, in <module>\r\n    from k8s_deployment_tools.deploy.operations.operation_detector import operation_detector\r\n  File \"/usr/local/lib/python3.4/dist-packages/k8s_deployment_tools/deploy/operations/operation_detector.py\", line 20, in <module>\r\n    from k8s_deployment_tools.deploy.operations.creator import creator\r\n  File \"/usr/local/lib/python3.4/dist-packages/k8s_deployment_tools/deploy/operations/creator.py\", line 10, in <module>\r\n    from pykube.objects import StatefulSet\r\nImportError: cannot import name 'StatefulSet'\r\n`\r\n\r\nAnd my code is simply this:\r\n\r\n```\r\nfrom k8s_deployment_tools.deploy.operations.operation import operation\r\nfrom pykube.http import HTTPClient\r\nfrom pykube.config import KubeConfig\r\nfrom pykube.objects import StatefulSet\r\n\r\nimport logging\r\nfrom k8s_deployment_tools.utils.manifest import get_kind\r\n\r\nclass creator(operation):\r\n\r\n    def __init__(self, manifest, rest_api_base_url):\r\n        logging.info(\"REST API BASE URL\")\r\n        logging.info(rest_api_base_url)\r\n        self.api_url = rest_api_base_url\r\n        self.manifest_file = manifest\r\n        self.api = HTTPClient(\r\n            KubeConfig.from_url(rest_api_base_url))\r\n\r\n    def perform(self):\r\n        logging.info(\"CALLING PERFORM FROM CREATOR\")\r\n        kind = get_kind(self.manifest_file)\r\n        pykube_object = self.get_pykube_object(kind, self.manifest_file)\r\n        pykube_object.create()\r\n        #TO-DO: poll until all pods are created\r\n\r\n    def get_pykube_object(self, key, manifest_dict):\r\n        k8s_objects = {\r\n            # 'configmap': ConfigMap(self.api, manifest_dict),\r\n            # 'daemonset': DaemonSet(self.api, manifest_dict),\r\n            # 'deployment': Deployment(self.api, manifest_dict),\r\n            # 'endpoint': Endpoint(self.api, manifest_dict),\r\n            # 'event': Event(self.api, manifest_dict),\r\n            # 'resourcequota': ResourceQuota(self.api, manifest_dict),\r\n            # 'serviceaccount': ServiceAccount(self.api, manifest_dict),\r\n            # 'ingress': Ingress(self.api, manifest_dict),\r\n            # 'thirdpartyresource': ThirdPartyResource(self.api, manifest_dict),\r\n            # 'job': Job(self.api, manifest_dict),\r\n            # 'namespace': Namespace(self.api, manifest_dict),\r\n            # 'node': Node(self.api, manifest_dict),\r\n            # 'pod': Pod(self.api, manifest_dict),\r\n            # 'replicationcontroller': ReplicationController(self.api, manifest_dict),\r\n            # 'replicaset': ReplicaSet(self.api, manifest_dict),\r\n            # 'secret': Secret(self.api, manifest_dict),\r\n            # 'service': Service(self.api, manifest_dict),\r\n            # 'persistentvolume': PersistentVolume(self.api, manifest_dict),\r\n            # 'persistentvolumeclaim': PersistentVolumeClaim(self.api, manifest_dict),\r\n            # 'horizontalpodautoscaler': HorizontalPodAutoscaler(self.api, manifest_dict),\r\n            # 'petset': PetSet(self.api, manifest_dict),\r\n            # 'statefulset': StatefulSet(self.api, manifest_dict),\r\n            # 'role': Role(self.api, manifest_dict),\r\n            # 'rolebinding': RoleBinding(self.api, manifest_dict),\r\n            # 'clusterrole': ClusterRole(self.api, manifest_dict),\r\n            # 'clusterrolebinding': ClusterRoleBinding(self.api, manifest_dict),\r\n            # 'podsecuritypolicy': PodSecurityPolicy(self.api, manifest_dict)\r\n\r\n        }\r\n        return k8s_objects[key]\r\n\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/109", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/109/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/109/events", "html_url": "https://github.com/kelproject/pykube/issues/109", "id": 199707744, "node_id": "MDU6SXNzdWUxOTk3MDc3NDQ=", "number": 109, "title": "SSL cert host name check against alternative names fails", "user": {"login": "multi-io", "id": 283179, "node_id": "MDQ6VXNlcjI4MzE3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/283179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/multi-io", "html_url": "https://github.com/multi-io", "followers_url": "https://api.github.com/users/multi-io/followers", "following_url": "https://api.github.com/users/multi-io/following{/other_user}", "gists_url": "https://api.github.com/users/multi-io/gists{/gist_id}", "starred_url": "https://api.github.com/users/multi-io/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/multi-io/subscriptions", "organizations_url": "https://api.github.com/users/multi-io/orgs", "repos_url": "https://api.github.com/users/multi-io/repos", "events_url": "https://api.github.com/users/multi-io/events{/privacy}", "received_events_url": "https://api.github.com/users/multi-io/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-10T01:15:19Z", "updated_at": "2017-01-10T01:50:50Z", "closed_at": "2017-01-10T01:50:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "(running on a temporary container in the cluster)\r\n\r\n```\r\nroot@ubuntu:/# pip freeze\r\nBabel==2.3.4\r\nbackports.shutil-get-terminal-size==1.0.0\r\ndecorator==4.0.6\r\nenum34==1.1.6\r\nhttplib2==0.9.2\r\nipython==5.1.0\r\nipython-genutils==0.1.0\r\njsonpath-rw==1.4.0\r\njsonpath-rw-ext==0.1.9\r\noauth2client==4.0.0\r\noauthlib==2.0.1\r\npathlib2==2.2.0\r\npbr==1.10.0\r\npexpect==4.2.1\r\npickleshare==0.7.4\r\nply==3.7\r\nprompt-toolkit==1.0.9\r\nptyprocess==0.5.1\r\npyasn1==0.1.9\r\npyasn1-modules==0.0.8\r\nPygments==2.1.3\r\npykube==0.14.0\r\npytz==2014.10\r\nPyYAML==3.12\r\nrequests==2.12.4\r\nrequests-oauthlib==0.7.0\r\nrsa==3.4.2\r\nscandir==1.4\r\nsimplegeneric==0.8.1\r\nsix==1.10.0\r\ntraitlets==4.3.1\r\ntzlocal==1.3\r\nwcwidth==0.1.7\r\nroot@ubuntu:/#\r\nroot@ubuntu:/# cat test.py\r\nimport operator; import pykube\r\n\r\napi = pykube.HTTPClient(pykube.KubeConfig.from_service_account())\r\npods = pykube.Pod.objects(api)\r\nready_pods = filter(operator.attrgetter(\"ready\"), pods)\r\n\r\nroot@ubuntu:/# python test.py\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 5, in <module>\r\n    ready_pods = filter(operator.attrgetter(\"ready\"), pods)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pykube/query.py\", line 130, in __iter__\r\n    return iter(self.query_cache[\"objects\"])\r\n  File \"/usr/local/lib/python2.7/dist-packages/pykube/query.py\", line 120, in query_cache\r\n    cache[\"response\"] = self.execute().json()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pykube/query.py\", line 104, in execute\r\n    r = self.api.get(**kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pykube/http.py\", line 127, in get\r\n    return self.session.get(*args, **self.get_kwargs(**kwargs))\r\n  File \"/usr/local/lib/python2.7/dist-packages/requests/sessions.py\", line 501, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/requests/sessions.py\", line 488, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/requests/sessions.py\", line 609, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/requests/adapters.py\", line 497, in send\r\n    raise SSLError(e, request=request)\r\nrequests.exceptions.SSLError: hostname '10.96.0.1' doesn't match either of 'kubernetes', 'kubernetes.default', 'kubernetes.default.svc', 'kubernetes.default.svc.cluster.local', '10.0.4.5', '185.56.135.79', '10.96.0.1'\r\nroot@ubuntu:/#\r\n```\r\n\r\nAs you can see, the queried IP (10.96.0.1) is in the list. I also verified that that's the actual \"Alternative Names\" list of the server's certificate[1]. So I guess this is a bug in the client.\r\n\r\n\r\n[1]\r\n```\r\nroot@ubuntu:/# openssl s_client -showcerts -connect 10.96.0.1:443 </dev/null\r\nCONNECTED(00000003)\r\ndepth=0 CN = kube-apiserver\r\nverify error:num=20:unable to get local issuer certificate\r\nverify return:1\r\ndepth=0 CN = kube-apiserver\r\nverify error:num=21:unable to verify the first certificate\r\nverify return:1\r\n---\r\nCertificate chain\r\n 0 s:/CN=kube-apiserver\r\n   i:/CN=kubernetes\r\n-----BEGIN CERTIFICATE-----\r\nMIIDXjCCAkagAwIBAgIIQ/jBvuJbfxowDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\r\nAxMKa3ViZXJuZXRlczAeFw0xNzAxMDkwMDQ4MThaFw0xODAxMDkwMDQ4MTlaMBkx\r\nFzAVBgNVBAMTDmt1YmUtYXBpc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A\r\nMIIBCgKCAQEAtBPuR5Hnh8Ne8QJINM0VhawvxW/K4W9yYkXHg1CceyiEhOLXQ23v\r\nxIE5ZGRTY5Nx71rX0WmEsB2n+FYv7IZn9QDUhCixdkYlCSqIzTN/QzSACG6Xhkhe\r\nTiQresNZ7FpcuSAnuF0ErRN7HYxbvdFo/N0oWFgpK2ULWstAMuiKqywqxVi0GqZx\r\nYAigGCK5WB9JEADXX5dRyw/wAG3u/6ve2LLlHCO8HBoGrSf/EgCy+9TP+MtGqp28\r\njY68JrupBCr6kk2wWD9BWpy6gavf+vYOvbRgksm6JORL0KmlLXbQRo4W+EBRzy8w\r\nT3Sfhsyk8CvUTGj0d9wU3Vk3DFH74XWrjwIDAQABo4GtMIGqMA4GA1UdDwEB/wQE\r\nAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIweQYDVR0RBHIwcIIK\r\na3ViZXJuZXRlc4ISa3ViZXJuZXRlcy5kZWZhdWx0ghZrdWJlcm5ldGVzLmRlZmF1\r\nbHQuc3ZjgiRrdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWyHBAoA\r\nBAWHBLk4h0+HBApgAAEwDQYJKoZIhvcNAQELBQADggEBAHDF9QFGIs+cbOa9d1Fr\r\n+MdjM9ZD/J9Nne1C+gpgxDxGTqKW7OyilOR3IXjrnIs+5Gfd73WSanG1o0qO+8uI\r\ngUeavDtDuSAgtIVIzpq+QSEwmKpUpYEUPYwUt+wJ+YlKB1GjHXM0EC3ck0Qx8YZE\r\nPbKWHkn0b9EXLWUIm5zQeGQDoL3TX3PgYyME3s8mfw/fwpnoXZtTyaQZm0UAO5jI\r\ndv6OPulzA0cb/tCg0yjPcIFZYCjkzjvQyzxtsyoq3Tht3G8GQR2U30OedP9WNW4e\r\nv+WWovC0AtEdwNp4DwtEoxocYN6wORSTN2BFw5/Krp7zC364caBd7QPh0M2Vm09q\r\nJp8=\r\n-----END CERTIFICATE-----\r\n[....]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/106", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/106/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/106/events", "html_url": "https://github.com/kelproject/pykube/issues/106", "id": 198338827, "node_id": "MDU6SXNzdWUxOTgzMzg4Mjc=", "number": 106, "title": "Add a label to node", "user": {"login": "gangadhars", "id": 8243323, "node_id": "MDQ6VXNlcjgyNDMzMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8243323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gangadhars", "html_url": "https://github.com/gangadhars", "followers_url": "https://api.github.com/users/gangadhars/followers", "following_url": "https://api.github.com/users/gangadhars/following{/other_user}", "gists_url": "https://api.github.com/users/gangadhars/gists{/gist_id}", "starred_url": "https://api.github.com/users/gangadhars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gangadhars/subscriptions", "organizations_url": "https://api.github.com/users/gangadhars/orgs", "repos_url": "https://api.github.com/users/gangadhars/repos", "events_url": "https://api.github.com/users/gangadhars/events{/privacy}", "received_events_url": "https://api.github.com/users/gangadhars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-02T13:56:11Z", "updated_at": "2017-01-03T09:39:06Z", "closed_at": "2017-01-03T09:39:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to add a label to node?\r\n\r\nI'm not sure how to do it from pykube. Here is what I have tried:\r\n```python\r\nimport operator\r\nimport pykube\r\n\r\nobj =  {\r\n \"op\": \"add\", \"path\": \"/metadata/labels/disk\", \"value\": \"ssd\"\r\n }\r\n\r\napi = pykube.HTTPClient(pykube.KubeConfig.from_file(\"/home/user/.kube/config\"))\r\npykube.Node(api, obj).update().filter(name=\"172.16.2.152\")\r\n```\r\nAnd getting below error:\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"node_update_label.py\", line 9, in <module>\r\n    pykube.Node(api, obj).update().filter(name=\"172.16.2.152\")\r\n  File \"/usr/local/lib/python2.7/dist-packages/pykube/objects.py\", line 106, in update\r\n    data=json.dumps(self.obj),\r\n  File \"/usr/local/lib/python2.7/dist-packages/pykube/objects.py\", line 71, in api_kwargs\r\n    kw[\"url\"] = op.normpath(op.join(self.endpoint, self.name, operation))\r\n  File \"/usr/local/lib/python2.7/dist-packages/pykube/objects.py\", line 49, in name\r\n    return self.obj[\"metadata\"][\"name\"]\r\nKeyError: 'metadata'\r\n```\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/100", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/100/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/100/events", "html_url": "https://github.com/kelproject/pykube/issues/100", "id": 195257978, "node_id": "MDU6SXNzdWUxOTUyNTc5Nzg=", "number": 100, "title": "k8s 1.5 support", "user": {"login": "Oloremo", "id": 4280480, "node_id": "MDQ6VXNlcjQyODA0ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4280480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Oloremo", "html_url": "https://github.com/Oloremo", "followers_url": "https://api.github.com/users/Oloremo/followers", "following_url": "https://api.github.com/users/Oloremo/following{/other_user}", "gists_url": "https://api.github.com/users/Oloremo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Oloremo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Oloremo/subscriptions", "organizations_url": "https://api.github.com/users/Oloremo/orgs", "repos_url": "https://api.github.com/users/Oloremo/repos", "events_url": "https://api.github.com/users/Oloremo/events{/privacy}", "received_events_url": "https://api.github.com/users/Oloremo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-13T13:50:44Z", "updated_at": "2016-12-21T01:51:23Z", "closed_at": "2016-12-21T01:51:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Small change happend in the k8s 1.5 release, now it returns None in case there is nothing to return and in 1.4 it was a empty array.\r\n\r\nI did a fast ugly patch which fix this for me:\r\n\r\n```\r\ndiff -ur pykube/pykube/query.py /home/vagrant/.local/lib/python2.7/site-packages/pykube/query.py\r\n--- pykube/pykube/query.py      2016-12-13 12:03:11.924150049 +0000\r\n+++ /home/vagrant/.local/lib/python2.7/site-packages/pykube/query.py    2016-12-13 12:03:45.035794481 +0000\r\n@@ -105,17 +105,21 @@\r\n         Execute the API request and return an iterator over the objects. This\r\n         method does not use the query cache.\r\n         \"\"\"\r\n-        for obj in self.execute().json()[\"items\"]:\r\n-            yield self.api_obj_class(self.api, obj)\r\n+        if self.execute().json()[\"items\"] is not None:\r\n+            for obj in self.execute().json()[\"items\"]:\r\n+                yield self.api_obj_class(self.api, obj)\r\n\r\n     @property\r\n     def query_cache(self):\r\n         if not hasattr(self, \"_query_cache\"):\r\n             cache = {\"objects\": []}\r\n             cache[\"response\"] = self.execute().json()\r\n-            for obj in cache[\"response\"][\"items\"]:\r\n-                cache[\"objects\"].append(self.api_obj_class(self.api, obj))\r\n-            self._query_cache = cache\r\n+            if cache[\"response\"][\"items\"] is not None:\r\n+                for obj in cache[\"response\"][\"items\"]:\r\n+                    cache[\"objects\"].append(self.api_obj_class(self.api, obj))\r\n+                self._query_cache = cache\r\n+            else:\r\n+                self._query_cache = {\"objects\": {}}\r\n         return self._query_cache\r\n\r\n     def __len__(self):\r\n```\r\n\r\nPls note - it's 0.13.0 diff.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/99", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/99/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/99/events", "html_url": "https://github.com/kelproject/pykube/issues/99", "id": 193860017, "node_id": "MDU6SXNzdWUxOTM4NjAwMTc=", "number": 99, "title": "publish 0.14 to pypi?", "user": {"login": "rcoh", "id": 492903, "node_id": "MDQ6VXNlcjQ5MjkwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/492903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcoh", "html_url": "https://github.com/rcoh", "followers_url": "https://api.github.com/users/rcoh/followers", "following_url": "https://api.github.com/users/rcoh/following{/other_user}", "gists_url": "https://api.github.com/users/rcoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcoh/subscriptions", "organizations_url": "https://api.github.com/users/rcoh/orgs", "repos_url": "https://api.github.com/users/rcoh/repos", "events_url": "https://api.github.com/users/rcoh/events{/privacy}", "received_events_url": "https://api.github.com/users/rcoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-06T19:18:34Z", "updated_at": "2016-12-07T00:02:40Z", "closed_at": "2016-12-07T00:02:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The certificate problem is currently causing us issues", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/90", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/90/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/90/events", "html_url": "https://github.com/kelproject/pykube/issues/90", "id": 187594267, "node_id": "MDU6SXNzdWUxODc1OTQyNjc=", "number": 90, "title": "[Proposal] Generate API objects from swagger spec", "user": {"login": "paultiplady", "id": 18148490, "node_id": "MDQ6VXNlcjE4MTQ4NDkw", "avatar_url": "https://avatars2.githubusercontent.com/u/18148490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paultiplady", "html_url": "https://github.com/paultiplady", "followers_url": "https://api.github.com/users/paultiplady/followers", "following_url": "https://api.github.com/users/paultiplady/following{/other_user}", "gists_url": "https://api.github.com/users/paultiplady/gists{/gist_id}", "starred_url": "https://api.github.com/users/paultiplady/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paultiplady/subscriptions", "organizations_url": "https://api.github.com/users/paultiplady/orgs", "repos_url": "https://api.github.com/users/paultiplady/repos", "events_url": "https://api.github.com/users/paultiplady/events{/privacy}", "received_events_url": "https://api.github.com/users/paultiplady/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-06T22:24:33Z", "updated_at": "2017-01-20T22:40:33Z", "closed_at": "2017-01-20T22:40:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After using this library for a while, I can see a few areas in which the flow for authoring specs could be improved. Here's a sketch of a design, to get a conversation going, and to see if you guys have done any work in this area.\r\n\r\nThe general idea I'd like to propose is to load object definitions from the Swagger spec files that the k8s API exposes, and use those object definitions to generate the set of classes that can be used to build specs.\r\n\r\nA couple options:\r\n1) There are dynamic libraries like https://github.com/Yelp/bravado which load a Swagger spec into memory.\r\n2) Something like [swagger-codegen](https://github.com/swagger-api/swagger-codegen) could be used to statically compile a client, which would then give IDE autocompetion. (I favour this option).\r\n\r\nNow you can write code like\r\n\r\n```\r\nmy_pod = Pod(\r\n  containers=[\r\n    Container(name='first', image='alpine'),\r\n  ],\r\n  ..\r\n)\r\n```\r\n\r\nWith each of these objects having all fields defined by the swagger spec. Tab completion for your Kubernetes specs!\r\n\r\nThe other benefit of this approach is that you no longer need to add classes manually for each Kind, which implies less work to support a new major API version. There are some questions here though; would the static client definitions be checked in to the codebase (giving completions out of the box, without any additional build steps), or loaded by the library user so that they have the correct definitions for their cluster (this would be required to add dynamically added third-party-resources). \r\n\r\nEither way it's simple to generate the client; you can run `swagger-codegen generate -i http://kubernetes.io/kubernetes/swagger-spec/ -l python -o k8s-swagger ` to load the public swagger definition and generate a fresh client implementation. https://github.com/swagger-api/swagger-codegen#homebrew has more detailed instructions if you want to play further.\r\n\r\nI'd be interested in your thoughts on this, before I go too much further in exploring the implementation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/86", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/86/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/86/events", "html_url": "https://github.com/kelproject/pykube/issues/86", "id": 184414895, "node_id": "MDU6SXNzdWUxODQ0MTQ4OTU=", "number": 86, "title": "Error refreshing token: (invalid_scope) Bad Request", "user": {"login": "jayme-github", "id": 1632246, "node_id": "MDQ6VXNlcjE2MzIyNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1632246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayme-github", "html_url": "https://github.com/jayme-github", "followers_url": "https://api.github.com/users/jayme-github/followers", "following_url": "https://api.github.com/users/jayme-github/following{/other_user}", "gists_url": "https://api.github.com/users/jayme-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayme-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayme-github/subscriptions", "organizations_url": "https://api.github.com/users/jayme-github/orgs", "repos_url": "https://api.github.com/users/jayme-github/repos", "events_url": "https://api.github.com/users/jayme-github/events{/privacy}", "received_events_url": "https://api.github.com/users/jayme-github/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 240860837, "node_id": "MDU6TGFiZWwyNDA4NjA4Mzc=", "url": "https://api.github.com/repos/kelproject/pykube/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/kelproject/pykube/milestones/1", "html_url": "https://github.com/kelproject/pykube/milestone/1", "labels_url": "https://api.github.com/repos/kelproject/pykube/milestones/1/labels", "id": 2085124, "node_id": "MDk6TWlsZXN0b25lMjA4NTEyNA==", "number": 1, "title": "0.14.0", "description": "", "creator": {"login": "brosner", "id": 124, "node_id": "MDQ6VXNlcjEyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brosner", "html_url": "https://github.com/brosner", "followers_url": "https://api.github.com/users/brosner/followers", "following_url": "https://api.github.com/users/brosner/following{/other_user}", "gists_url": "https://api.github.com/users/brosner/gists{/gist_id}", "starred_url": "https://api.github.com/users/brosner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brosner/subscriptions", "organizations_url": "https://api.github.com/users/brosner/orgs", "repos_url": "https://api.github.com/users/brosner/repos", "events_url": "https://api.github.com/users/brosner/events{/privacy}", "received_events_url": "https://api.github.com/users/brosner/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2016-10-21T13:44:13Z", "updated_at": "2016-12-21T01:04:49Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2016-10-21T07:13:31Z", "updated_at": "2016-10-26T19:02:35Z", "closed_at": "2016-10-26T19:02:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just got the following error while creating an `HTTPClient` instance:\n\n```\n2016-10-21 09:03:10,344 (requests_oauthlib.oauth2_session.request) [DEBUG] Invoking 0 protected resource request hooks.\n2016-10-21 09:03:10,344 (requests_oauthlib.oauth2_session.request) [DEBUG] Adding token {'access_token': 'secretToken', 'token_type': 'Bearer', 'expires_in': '3600', 'refresh_token': u'refreshToken'} to request.\n2016-10-21 09:03:10,345 (requests_oauthlib.oauth2_session.request) [DEBUG] Requesting url https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=secretToken using method GET.\n2016-10-21 09:03:10,345 (requests_oauthlib.oauth2_session.request) [DEBUG] Supplying headers {u'Authorization': u'Bearer secretToken'} and data None\n2016-10-21 09:03:10,345 (requests_oauthlib.oauth2_session.request) [DEBUG] Passing through key word arguments {'allow_redirects': True}.\n2016-10-21 09:03:10,351 (requests.packages.urllib3.connectionpool._new_conn) [INFO] Starting new HTTPS connection (1): www.googleapis.com\n2016-10-21 09:03:10,602 (requests.packages.urllib3.connectionpool._make_request) [DEBUG] \"GET /oauth2/v1/tokeninfo?access_token=secretToken HTTP/1.1\" 400 None\n2016-10-21 09:03:10,605 (requests_oauthlib.oauth2_session.refresh_token) [DEBUG] Adding auto refresh key word arguments {}.\n2016-10-21 09:03:10,606 (requests_oauthlib.oauth2_session.refresh_token) [DEBUG] Prepared refresh token request body grant_type=refresh_token&client_secret=clientSecret&client_id=clientId.apps.googleusercontent.com&refresh_token=refreshToken&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcloud-platform+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fappengine.admin+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcompute+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fplus.me\n2016-10-21 09:03:10,606 (requests_oauthlib.oauth2_session.request) [DEBUG] Requesting url https://www.googleapis.com/oauth2/v4/token using method POST.\n2016-10-21 09:03:10,606 (requests_oauthlib.oauth2_session.request) [DEBUG] Supplying headers {u'Content-Type': u'application/x-www-form-urlencoded;charset=UTF-8', u'Accept': u'application/json'} and data {u'client_secret': u'clientSecret', u'grant_type': u'refresh_token', u'refresh_token': u'refreshToken', u'client_id': u'clientId.apps.googleusercontent.com', u'scope': u'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/appengine.admin https://www.googleapis.com/auth/compute https://www.googleapis.com/auth/plus.me'}\n2016-10-21 09:03:10,606 (requests_oauthlib.oauth2_session.request) [DEBUG] Passing through key word arguments {'verify': True, 'json': None, 'proxies': None, 'auth': None, 'timeout': None}.\n2016-10-21 09:03:10,818 (requests.packages.urllib3.connectionpool._make_request) [DEBUG] \"POST /oauth2/v4/token HTTP/1.1\" 400 None\n2016-10-21 09:03:10,819 (requests_oauthlib.oauth2_session.refresh_token) [DEBUG] Request to refresh token completed with status 400.\n2016-10-21 09:03:10,819 (requests_oauthlib.oauth2_session.refresh_token) [DEBUG] Response headers were {'X-XSS-Protection': '1; mode=block', 'X-Content-Type-Options': 'nosniff', 'Content-Encoding': 'gzip', 'Transfer-Encoding': 'chunked', 'Expires': 'Fri, 21 Oct 2016 07:03:10 GMT', 'Vary': 'Origin, X-Origin', 'Server': 'GSE', 'Cache-Control': 'private, max-age=0', 'Date': 'Fri, 21 Oct 2016 07:03:10 GMT', 'X-Frame-Options': 'SAMEORIGIN', 'Alt-Svc': 'quic=\":443\"; ma=2592000; v=\"36,35,34,33,32\"', 'Content-Type': 'application/json; charset=UTF-8'} and content {\n \"error\": \"invalid_scope\",\n \"error_description\": \"Bad Request\",\n \"error_uri\": \"\"\n}\n```\n\n``` pytb\n2016-10-21 09:03:10,819 (requests_oauthlib.oauth2_session.refresh_token) [DEBUG] Invoking 0 token response hooks.\nTraceback (most recent call last):\n  File \".pythonrc.py\", line 29, in <module>\n    api.session.verify = session_verify\n  File \"/home/jayme-github/code/pykube/pykube/http.py\", line 41, in session\n    self._session = build_session(self.config, self.gcloud_file)\n  File \"/home/jayme-github/code/pykube/pykube/session.py\", line 23, in build_session\n    s = _session_object(\"gcp\", config, gcloud_file)\n  File \"/home/jayme-github/code/pykube/pykube/session.py\", line 47, in _session_object\n    return GCPSession(config, gcloud_file).create()\n  File \"/home/jayme-github/code/pykube/pykube/session.py\", line 120, in create\n    self._update_token()\n  File \"/home/jayme-github/code/pykube/pykube/session.py\", line 131, in _update_token\n    refresh_token=self.credentials.get('refresh_token'))\n  File \"/home/jayme-github/.virtualenvs/pykube/local/lib/python2.7/site-packages/requests_oauthlib/oauth2_session.py\", line 309, in refresh_token\n    self.token = self._client.parse_request_body_response(r.text, scope=self.scope)\n  File \"/home/jayme-github/.virtualenvs/pykube/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 409, in parse_request_body_response\n    self.token = parse_token_response(body, scope=scope)\n  File \"/home/jayme-github/.virtualenvs/pykube/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 376, in parse_token_response\n    validate_token_parameters(params)\n  File \"/home/jayme-github/.virtualenvs/pykube/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 383, in validate_token_parameters\n    raise_from_error(params.get('error'), params)\n  File \"/home/jayme-github/.virtualenvs/pykube/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/errors.py\", line 325, in raise_from_error\n    raise cls(**kwargs)\noauthlib.oauth2.rfc6749.errors.InvalidScopeError: (invalid_scope) Bad Request\n```\n\nEverything is fine again after running one `kubectl` command (e.g. refreshing the token).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/84", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/84/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/84/events", "html_url": "https://github.com/kelproject/pykube/issues/84", "id": 184247723, "node_id": "MDU6SXNzdWUxODQyNDc3MjM=", "number": 84, "title": "Add status to Job objects", "user": {"login": "diegodelemos", "id": 9035606, "node_id": "MDQ6VXNlcjkwMzU2MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9035606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diegodelemos", "html_url": "https://github.com/diegodelemos", "followers_url": "https://api.github.com/users/diegodelemos/followers", "following_url": "https://api.github.com/users/diegodelemos/following{/other_user}", "gists_url": "https://api.github.com/users/diegodelemos/gists{/gist_id}", "starred_url": "https://api.github.com/users/diegodelemos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diegodelemos/subscriptions", "organizations_url": "https://api.github.com/users/diegodelemos/orgs", "repos_url": "https://api.github.com/users/diegodelemos/repos", "events_url": "https://api.github.com/users/diegodelemos/events{/privacy}", "received_events_url": "https://api.github.com/users/diegodelemos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-20T14:37:24Z", "updated_at": "2016-10-20T14:54:36Z", "closed_at": "2016-10-20T14:54:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would make sense to have available the status of a Job object since it is something which is run and it is expected to be completed at some point in time.\nhttps://github.com/kelproject/pykube/blob/master/pykube/objects.py#L182-L195\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/82", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/82/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/82/events", "html_url": "https://github.com/kelproject/pykube/issues/82", "id": 183046298, "node_id": "MDU6SXNzdWUxODMwNDYyOTg=", "number": 82, "title": "Using pykube inside the cluster", "user": {"login": "diegodelemos", "id": 9035606, "node_id": "MDQ6VXNlcjkwMzU2MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9035606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diegodelemos", "html_url": "https://github.com/diegodelemos", "followers_url": "https://api.github.com/users/diegodelemos/followers", "following_url": "https://api.github.com/users/diegodelemos/following{/other_user}", "gists_url": "https://api.github.com/users/diegodelemos/gists{/gist_id}", "starred_url": "https://api.github.com/users/diegodelemos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diegodelemos/subscriptions", "organizations_url": "https://api.github.com/users/diegodelemos/orgs", "repos_url": "https://api.github.com/users/diegodelemos/repos", "events_url": "https://api.github.com/users/diegodelemos/events{/privacy}", "received_events_url": "https://api.github.com/users/diegodelemos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 240860842, "node_id": "MDU6TGFiZWwyNDA4NjA4NDI=", "url": "https://api.github.com/repos/kelproject/pykube/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-14T13:11:59Z", "updated_at": "2018-06-20T01:39:47Z", "closed_at": "2016-10-20T07:40:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nIs `pykube` prepared to be executed inside a pod and make calls to the Kubernetes API? I need to query it to know the state of a Job, and if it has not ended (no successful nor fail) I would like to wait until it happens.\n\nThanks so much!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/80", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/80/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/80/events", "html_url": "https://github.com/kelproject/pykube/issues/80", "id": 182384764, "node_id": "MDU6SXNzdWUxODIzODQ3NjQ=", "number": 80, "title": "\"tlsv1 alert protocol version\" when running the example", "user": {"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-11T21:56:24Z", "updated_at": "2017-02-21T12:37:11Z", "closed_at": "2017-02-21T12:37:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the code I run in ipython with python3.5:\n\n``` python\nimport operator\nimport pykube\napi = pykube.HTTPClient(pykube.KubeConfig.from_file(\"/Users/yuefengz/.kube/config\"))\npods = pykube.Pod.objects(api).filter(namespace=\"default\")\nready_pods = filter(operator.attrgetter(\"ready\"), pods)\n```\n\nIt throws exception:\n\n```\n---------------------------------------------------------------------------\nSSLError                                  Traceback (most recent call last)\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, **response_kw)\n    594                                                   body=body, headers=headers,\n--> 595                                                   chunked=chunked)\n    596\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/packages/urllib3/connectionpool.py in _make_request(self, conn, method, url, timeout, chunked, **httplib_request_kw)\n    351         try:\n--> 352             self._validate_conn(conn)\n    353         except (SocketTimeout, BaseSSLError) as e:\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/packages/urllib3/connectionpool.py in _validate_conn(self, conn)\n    830         if not getattr(conn, 'sock', None):  # AppEngine might not have  `.sock`\n--> 831             conn.connect()\n    832\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/packages/urllib3/connection.py in connect(self)\n    288                                     server_hostname=hostname,\n--> 289                                     ssl_version=resolved_ssl_version)\n    290\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/packages/urllib3/util/ssl_.py in ssl_wrap_socket(sock, keyfile, certfile, cert_reqs, ca_certs, server_hostname, ssl_version, ciphers, ssl_context, ca_cert_dir)\n    307     if HAS_SNI:  # Platform-specific: OpenSSL with enabled SNI\n--> 308         return context.wrap_socket(sock, server_hostname=server_hostname)\n    309\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py in wrap_socket(self, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname)\n    376                          server_hostname=server_hostname,\n--> 377                          _context=self)\n    378\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py in __init__(self, sock, keyfile, certfile, server_side, cert_reqs, ssl_version, ca_certs, do_handshake_on_connect, family, type, proto, fileno, suppress_ragged_eofs, npn_protocols, ciphers, server_hostname, _context)\n    751                         raise ValueError(\"do_handshake_on_connect should not be specified for non-blocking sockets\")\n--> 752                     self.do_handshake()\n    753\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py in do_handshake(self, block)\n    987                 self.settimeout(None)\n--> 988             self._sslobj.do_handshake()\n    989         finally:\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py in do_handshake(self)\n    632         \"\"\"Start the SSL/TLS handshake.\"\"\"\n--> 633         self._sslobj.do_handshake()\n    634         if self.context.check_hostname:\n\nSSLError: [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol version (_ssl.c:645)\n\nDuring handling of the above exception, another exception occurred:\n\nSSLError                                  Traceback (most recent call last)\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\n    422                     retries=self.max_retries,\n--> 423                     timeout=timeout\n    424                 )\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, **response_kw)\n    620             clean_exit = False\n--> 621             raise SSLError(e)\n    622\n\nSSLError: [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol version (_ssl.c:645)\n\nDuring handling of the above exception, another exception occurred:\n\nSSLError                                  Traceback (most recent call last)\n<ipython-input-4-93ae656b7489> in <module>()\n      3 api = pykube.HTTPClient(pykube.KubeConfig.from_file(\"/Users/yuefengz/.kube/config\"))\n      4 pods = pykube.Pod.objects(api).filter(namespace=\"default\")\n----> 5 ready_pods = filter(operator.attrgetter(\"ready\"), pods)\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pykube/query.py in __iter__(self)\n    123\n    124     def __iter__(self):\n--> 125         return iter(self.query_cache[\"objects\"])\n    126\n    127     @property\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pykube/query.py in query_cache(self)\n    113         if not hasattr(self, \"_query_cache\"):\n    114             cache = {\"objects\": []}\n--> 115             cache[\"response\"] = self.execute().json()\n    116             for obj in cache[\"response\"][\"items\"]:\n    117                 cache[\"objects\"].append(self.api_obj_class(self.api, obj))\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pykube/query.py in execute(self)\n     97         if self.namespace is not None and self.namespace is not all_:\n     98             kwargs[\"namespace\"] = self.namespace\n---> 99         r = self.api.get(**kwargs)\n    100         r.raise_for_status()\n    101         return r\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pykube/http.py in get(self, *args, **kwargs)\n    125            - `kwargs`: Keyword arguments\n    126         \"\"\"\n--> 127         return self.session.get(*args, **self.get_kwargs(**kwargs))\n    128\n    129     def options(self, *args, **kwargs):\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/sessions.py in get(self, url, **kwargs)\n    486\n    487         kwargs.setdefault('allow_redirects', True)\n--> 488         return self.request('GET', url, **kwargs)\n    489\n    490     def options(self, url, **kwargs):\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/sessions.py in request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\n    473         }\n    474         send_kwargs.update(settings)\n--> 475         resp = self.send(prep, **send_kwargs)\n    476\n    477         return resp\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/sessions.py in send(self, request, **kwargs)\n    594\n    595         # Send the request\n--> 596         r = adapter.send(request, **kwargs)\n    597\n    598         # Total elapsed time of the request (approximately)\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\n    495         except (_SSLError, _HTTPError) as e:\n    496             if isinstance(e, _SSLError):\n--> 497                 raise SSLError(e, request=request)\n    498             elif isinstance(e, ReadTimeoutError):\n    499                 raise ReadTimeout(e, request=request)\n\nSSLError: [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol version (_ssl.c:645)\n```\n\nI was using python2.7 but switched to python3.5 because of [issue 29](https://github.com/kelproject/pykube/issues/29).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/76", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/76/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/76/events", "html_url": "https://github.com/kelproject/pykube/issues/76", "id": 180117874, "node_id": "MDU6SXNzdWUxODAxMTc4NzQ=", "number": 76, "title": "GKE auth expires and pykube does not refresh it", "user": {"login": "victorgp", "id": 593300, "node_id": "MDQ6VXNlcjU5MzMwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/593300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victorgp", "html_url": "https://github.com/victorgp", "followers_url": "https://api.github.com/users/victorgp/followers", "following_url": "https://api.github.com/users/victorgp/following{/other_user}", "gists_url": "https://api.github.com/users/victorgp/gists{/gist_id}", "starred_url": "https://api.github.com/users/victorgp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victorgp/subscriptions", "organizations_url": "https://api.github.com/users/victorgp/orgs", "repos_url": "https://api.github.com/users/victorgp/repos", "events_url": "https://api.github.com/users/victorgp/events{/privacy}", "received_events_url": "https://api.github.com/users/victorgp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-29T17:52:44Z", "updated_at": "2016-10-12T17:41:09Z", "closed_at": "2016-10-12T17:41:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is another issue in the GKE authentication. I know the full end to end authentication is not yet done, and that GKE auth works if we already have the auth token in kube config (after this is merged https://github.com/kelproject/pykube/pull/67)\n\nBut, having that token is not enough, kubectl is able to get a new token and update the 'expiry' field,  but pykube, if the token is expired, can't authenticate.\n\nI'd like to work on this but in the meantime, if someone knows how kubectl is dealing with this and share the info with me, would be helpful.\n\nIs kubectl doing any extra request to GKE k8s api servers to fetch a new token? is kubectl using gcloud cli underneath?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/74", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/74/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/74/events", "html_url": "https://github.com/kelproject/pykube/issues/74", "id": 179489861, "node_id": "MDU6SXNzdWUxNzk0ODk4NjE=", "number": 74, "title": "KubeConfig.from_service_account() fails running within a Pod", "user": {"login": "eliafengar", "id": 7359741, "node_id": "MDQ6VXNlcjczNTk3NDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7359741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eliafengar", "html_url": "https://github.com/eliafengar", "followers_url": "https://api.github.com/users/eliafengar/followers", "following_url": "https://api.github.com/users/eliafengar/following{/other_user}", "gists_url": "https://api.github.com/users/eliafengar/gists{/gist_id}", "starred_url": "https://api.github.com/users/eliafengar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eliafengar/subscriptions", "organizations_url": "https://api.github.com/users/eliafengar/orgs", "repos_url": "https://api.github.com/users/eliafengar/repos", "events_url": "https://api.github.com/users/eliafengar/events{/privacy}", "received_events_url": "https://api.github.com/users/eliafengar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-27T13:16:07Z", "updated_at": "2016-10-03T09:31:27Z", "closed_at": "2016-10-03T09:31:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Errno 13] Permission denied: '/var/run/secrets/kubernetes.io/serviceaccount/token'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/65", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/65/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/65/events", "html_url": "https://github.com/kelproject/pykube/issues/65", "id": 173868228, "node_id": "MDU6SXNzdWUxNzM4NjgyMjg=", "number": 65, "title": "GKE authentication", "user": {"login": "brosner", "id": 124, "node_id": "MDQ6VXNlcjEyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brosner", "html_url": "https://github.com/brosner", "followers_url": "https://api.github.com/users/brosner/followers", "following_url": "https://api.github.com/users/brosner/following{/other_user}", "gists_url": "https://api.github.com/users/brosner/gists{/gist_id}", "starred_url": "https://api.github.com/users/brosner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brosner/subscriptions", "organizations_url": "https://api.github.com/users/brosner/orgs", "repos_url": "https://api.github.com/users/brosner/repos", "events_url": "https://api.github.com/users/brosner/events{/privacy}", "received_events_url": "https://api.github.com/users/brosner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-29T20:45:29Z", "updated_at": "2016-09-30T15:28:51Z", "closed_at": "2016-09-30T15:28:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "pykube is not capable of authenticating against GKE clusters. Recent clusters on GKE use Google OAuth to authenticate. The user configuration in `~/.kube/config` looks like:\n\n```\nuser:\n  auth-provider:\n    name: gcp\n```\n\nOnce `kubectl` runs with that configuration it adds in the `config` key with an `access-token` and `expiry`.\n\nIn my initial research, I learned that oauth2client uses httplib which is a non-starter for integrating it with pykube. However, there's hope with https://github.com/google/oauth2client/issues/128\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/61", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/61/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/61/events", "html_url": "https://github.com/kelproject/pykube/issues/61", "id": 170817174, "node_id": "MDU6SXNzdWUxNzA4MTcxNzQ=", "number": 61, "title": "Support PetSet", "user": {"login": "tobegit3hub", "id": 2715000, "node_id": "MDQ6VXNlcjI3MTUwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobegit3hub", "html_url": "https://github.com/tobegit3hub", "followers_url": "https://api.github.com/users/tobegit3hub/followers", "following_url": "https://api.github.com/users/tobegit3hub/following{/other_user}", "gists_url": "https://api.github.com/users/tobegit3hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobegit3hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobegit3hub/subscriptions", "organizations_url": "https://api.github.com/users/tobegit3hub/orgs", "repos_url": "https://api.github.com/users/tobegit3hub/repos", "events_url": "https://api.github.com/users/tobegit3hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tobegit3hub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-12T07:51:39Z", "updated_at": "2016-08-13T01:41:18Z", "closed_at": "2016-08-12T22:38:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now we are using `PetSet` to deploy our cluster applications. We accept request in `Django` and it would be better to access `Kubernetes` with Python SDK like `pykube`.\n\nAfter reading https://github.com/kelproject/pykube/blob/99e193a81f59044e1d6f3a3b96e6e33853059749/pykube/__init__.py , I thinks `pykube` doesn't support `PetSet` yet. Is it possible to support `PetSet`? \n\nWe're also glad to test it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/58", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/58/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/58/events", "html_url": "https://github.com/kelproject/pykube/issues/58", "id": 165687378, "node_id": "MDU6SXNzdWUxNjU2ODczNzg=", "number": 58, "title": "ssl.SSLError when connecting to 1.3 GKE cluster", "user": {"login": "paultiplady", "id": 18148490, "node_id": "MDQ6VXNlcjE4MTQ4NDkw", "avatar_url": "https://avatars2.githubusercontent.com/u/18148490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paultiplady", "html_url": "https://github.com/paultiplady", "followers_url": "https://api.github.com/users/paultiplady/followers", "following_url": "https://api.github.com/users/paultiplady/following{/other_user}", "gists_url": "https://api.github.com/users/paultiplady/gists{/gist_id}", "starred_url": "https://api.github.com/users/paultiplady/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paultiplady/subscriptions", "organizations_url": "https://api.github.com/users/paultiplady/orgs", "repos_url": "https://api.github.com/users/paultiplady/repos", "events_url": "https://api.github.com/users/paultiplady/events{/privacy}", "received_events_url": "https://api.github.com/users/paultiplady/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-15T00:25:38Z", "updated_at": "2016-07-18T22:17:22Z", "closed_at": "2016-07-18T22:17:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've just upgraded my GKE cluster to version 1.3, and I'm now getting an SSL error when trying to connect using pykube:\n\n```\nINFO:requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): <snip>\nTraceback (most recent call last):\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py\", line 578, in urlopen\n    chunked=chunked)\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py\", line 351, in _make_request\n    self._validate_conn(conn)\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py\", line 814, in _validate_conn\n    conn.connect()\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/requests/packages/urllib3/connection.py\", line 289, in connect\n    ssl_version=resolved_ssl_version)\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/requests/packages/urllib3/util/ssl_.py\", line 308, in ssl_wrap_socket\n    return context.wrap_socket(sock, server_hostname=server_hostname)\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/ssl.py\", line 365, in wrap_socket\n    _context=self)\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/ssl.py\", line 583, in __init__\n    self.do_handshake()\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/ssl.py\", line 810, in do_handshake\n    self._sslobj.do_handshake()\nssl.SSLError: [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol version (_ssl.c:600)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/requests/adapters.py\", line 403, in send\n    timeout=timeout\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/requests/packages/urllib3/connectionpool.py\", line 604, in urlopen\n    raise SSLError(e)\nrequests.packages.urllib3.exceptions.SSLError: [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol version (_ssl.c:600)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"deploy.py\", line 97, in <module>\n    main()\n  File \"deploy.py\", line 90, in main\n    deploy.create_namespace()\n  File \"deploy.py\", line 29, in create_namespace\n    pykube.Namespace(self.api, {'metadata': {'name': self.namespace}}).create()\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/pykube/objects.py\", line 62, in create\n    r = self.api.post(**self.api_kwargs(data=json.dumps(self.obj), collection=True))\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/pykube/http.py\", line 153, in post\n    return self.session.post(*args, **self.get_kwargs(**kwargs))\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/requests/sessions.py\", line 518, in post\n    return self.request('POST', url, data=data, json=json, **kwargs)\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/requests/sessions.py\", line 475, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/requests/sessions.py\", line 585, in send\n    r = adapter.send(request, **kwargs)\n  File \"/Users/paul/.virtualenvs/deploy/lib/python3.4/site-packages/requests/adapters.py\", line 477, in send\n    raise SSLError(e, request=request)\nrequests.exceptions.SSLError: [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol version (_ssl.c:600)\n```\n\nI can interact with the system using `kubectl`, so doesn't look like a cluster problem at first pass.\n\nHave you tested pykube with 1.3 yet? Is there known to be work required to support the new version?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/57", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/57/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/57/events", "html_url": "https://github.com/kelproject/pykube/issues/57", "id": 165478538, "node_id": "MDU6SXNzdWUxNjU0Nzg1Mzg=", "number": 57, "title": "ssl and token issue with from_service_account", "user": {"login": "spdeshpande", "id": 20452113, "node_id": "MDQ6VXNlcjIwNDUyMTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/20452113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spdeshpande", "html_url": "https://github.com/spdeshpande", "followers_url": "https://api.github.com/users/spdeshpande/followers", "following_url": "https://api.github.com/users/spdeshpande/following{/other_user}", "gists_url": "https://api.github.com/users/spdeshpande/gists{/gist_id}", "starred_url": "https://api.github.com/users/spdeshpande/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spdeshpande/subscriptions", "organizations_url": "https://api.github.com/users/spdeshpande/orgs", "repos_url": "https://api.github.com/users/spdeshpande/repos", "events_url": "https://api.github.com/users/spdeshpande/events{/privacy}", "received_events_url": "https://api.github.com/users/spdeshpande/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-14T05:26:03Z", "updated_at": "2016-08-28T07:41:20Z", "closed_at": "2016-07-14T05:48:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nFound two issues with pykube.KubeConfig.from_service_account.\n\n1) Cannot turn SSL verification off. \n\nThere has to be a way to either specify the verify flag when calling the pykube api or set the verify to False in HttpClient.build_session() when no \"certificate-authority\" is found in self.config.cluster\n\n2) The token read in KubeConfig.from_service_account appends a newline at the end of the token making it an invalid header value. \n\nThis can be fixed with: token = fp.read().rstrip('\\n')\n\nThanks,\nSudeep\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/55", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/55/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/55/events", "html_url": "https://github.com/kelproject/pykube/issues/55", "id": 163645334, "node_id": "MDU6SXNzdWUxNjM2NDUzMzQ=", "number": 55, "title": "KeyError: 'client-certificate'", "user": {"login": "veerendra2", "id": 8393701, "node_id": "MDQ6VXNlcjgzOTM3MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8393701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veerendra2", "html_url": "https://github.com/veerendra2", "followers_url": "https://api.github.com/users/veerendra2/followers", "following_url": "https://api.github.com/users/veerendra2/following{/other_user}", "gists_url": "https://api.github.com/users/veerendra2/gists{/gist_id}", "starred_url": "https://api.github.com/users/veerendra2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veerendra2/subscriptions", "organizations_url": "https://api.github.com/users/veerendra2/orgs", "repos_url": "https://api.github.com/users/veerendra2/repos", "events_url": "https://api.github.com/users/veerendra2/events{/privacy}", "received_events_url": "https://api.github.com/users/veerendra2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-04T10:11:30Z", "updated_at": "2016-08-26T19:59:52Z", "closed_at": "2016-08-26T19:59:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI followed this [https://pypi.python.org/pypi/pykube/](https://pypi.python.org/pypi/pykube/) to query for all ready pods. I'm getting the KeyError: 'client-certificate' error.\n\n```\n>>> import operator\n>>> import pykube\n>>> api = pykube.HTTPClient(pykube.KubeConfig.from_file(\"/root/.kube/config\"))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.5/site-packages/pykube/http.py\", line 33, in __init__\n    self.session = self.build_session()\n  File \"/usr/local/lib/python3.5/site-packages/pykube/http.py\", line 57, in build_session\n    self.config.user[\"client-certificate\"].filename(),\nKeyError: 'client-certificate'\n```\n\nIm using Python 3.5\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/54", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/54/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/54/events", "html_url": "https://github.com/kelproject/pykube/issues/54", "id": 162734720, "node_id": "MDU6SXNzdWUxNjI3MzQ3MjA=", "number": 54, "title": "Ability to use pykube from inside a container running in Kubernetes", "user": {"login": "pcm32", "id": 368478, "node_id": "MDQ6VXNlcjM2ODQ3OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/368478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcm32", "html_url": "https://github.com/pcm32", "followers_url": "https://api.github.com/users/pcm32/followers", "following_url": "https://api.github.com/users/pcm32/following{/other_user}", "gists_url": "https://api.github.com/users/pcm32/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcm32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcm32/subscriptions", "organizations_url": "https://api.github.com/users/pcm32/orgs", "repos_url": "https://api.github.com/users/pcm32/repos", "events_url": "https://api.github.com/users/pcm32/events{/privacy}", "received_events_url": "https://api.github.com/users/pcm32/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-28T16:54:45Z", "updated_at": "2016-06-29T12:31:28Z", "closed_at": "2016-06-29T12:31:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you get a shell in a container that is currently running inside a kubernetes cluster, and install kubectl, you can access the Kubernetes cluster from the inside. There is however no kubeconfig file used, yet still kubectl manages to contact the master node and create API objects. The only thing exposed on the environment I found was:\n\n``` bash\nroot@my-busybox-lc4bi:~# env | grep 'KUBERNETES'\nKUBERNETES_PORT=tcp://10.100.0.1:443\nKUBERNETES_PORT_443_TCP_PORT=443\nKUBERNETES_SERVICE_PORT=443\nKUBERNETES_SERVICE_HOST=10.100.0.1\nKUBERNETES_PORT_443_TCP_PROTO=tcp\nKUBERNETES_SERVICE_PORT_HTTPS=443\nKUBERNETES_PORT_443_TCP_ADDR=10.100.0.1\nKUBERNETES_PORT_443_TCP=tcp://10.100.0.1:443\n```\n\nso I presume that kubectl must be using something like this to contact the master, but I'm not sure. It would be great if pykube could be able to contact the Kubernetes master from inside a container running in the cluster in the same way as kubectl manages to do without a kubeconfig file. We need this functionality for our main use case with the Galaxy workflow environment. I would be happy to contribute to this with some guidance, as I don't see very clearly how to approach this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/52", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/52/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/52/events", "html_url": "https://github.com/kelproject/pykube/issues/52", "id": 158840500, "node_id": "MDU6SXNzdWUxNTg4NDA1MDA=", "number": 52, "title": "Allow ability to bypass cache", "user": {"login": "yuvipanda", "id": 30430, "node_id": "MDQ6VXNlcjMwNDMw", "avatar_url": "https://avatars2.githubusercontent.com/u/30430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuvipanda", "html_url": "https://github.com/yuvipanda", "followers_url": "https://api.github.com/users/yuvipanda/followers", "following_url": "https://api.github.com/users/yuvipanda/following{/other_user}", "gists_url": "https://api.github.com/users/yuvipanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuvipanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuvipanda/subscriptions", "organizations_url": "https://api.github.com/users/yuvipanda/orgs", "repos_url": "https://api.github.com/users/yuvipanda/repos", "events_url": "https://api.github.com/users/yuvipanda/events{/privacy}", "received_events_url": "https://api.github.com/users/yuvipanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-07T05:17:55Z", "updated_at": "2016-06-14T15:50:26Z", "closed_at": "2016-06-14T15:50:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In some cases I'm polling the status of pods (due to terrible historical reasons I can not use WATCH). It would be awesome if pykube supported a parameter that'll force the query to actually happen and not hit the cache.\n\nThanks for the nice library!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/51", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/51/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/51/events", "html_url": "https://github.com/kelproject/pykube/issues/51", "id": 158767855, "node_id": "MDU6SXNzdWUxNTg3Njc4NTU=", "number": 51, "title": "Creating a deployment", "user": {"login": "Jmbrace", "id": 8965847, "node_id": "MDQ6VXNlcjg5NjU4NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8965847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jmbrace", "html_url": "https://github.com/Jmbrace", "followers_url": "https://api.github.com/users/Jmbrace/followers", "following_url": "https://api.github.com/users/Jmbrace/following{/other_user}", "gists_url": "https://api.github.com/users/Jmbrace/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jmbrace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jmbrace/subscriptions", "organizations_url": "https://api.github.com/users/Jmbrace/orgs", "repos_url": "https://api.github.com/users/Jmbrace/repos", "events_url": "https://api.github.com/users/Jmbrace/events{/privacy}", "received_events_url": "https://api.github.com/users/Jmbrace/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-06T20:31:15Z", "updated_at": "2016-06-07T13:52:54Z", "closed_at": "2016-06-06T23:09:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is most likely an issue with how I am using the module and not a bug itself.\n\nI have a little test script that attempts to create a deployment similar to the rc creation under usage section in the README. Here is my test script. \n\n``` python\nimport operator\nimport pykube\n\ndep = {\n  \"apiVersion\": \"extensions/v1beta1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"test1\"\n  },\n  \"spec\": {\n    \"replicas\": 3,\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"myApp\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [\n          {\n            \"env\": [\n              {\n                \"name\": \"ROOT_URL\",\n                \"value\": \"http://localhost:3000\"\n              },\n              {\n                \"name\": \"MONGO_URL\",\n                \"value\": \"mongodb://localhost:27017/app\"\n              },\n              {\n                \"name\": \"PORT\",\n                \"value\": \"3000\"\n              }\n            ],\n            \"image\": \"myApp:latest\",\n            \"name\": \"myApp\",\n            \"ports\": [\n              {\n                \"containerPort\": 3000\n              }\n            ]\n          },\n          {\n            \"image\": \"mongo\",\n            \"name\": \"db\",\n            \"ports\": [\n              {\n                \"containerPort\": 27017\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n\npykube.HTTPClient(pykube.KubeConfig.from_file(\"/Users/me/.kube/config\"))\npykube.Deployment(dep).create()\n```\n\nrunning this with python3\n\n``` bash\npython3 example.py\n```\n\nThis gives the following error. \n\n``` bash\nTraceback (most recent call last):\n  File \"example.py\", line 114, in <module>\n    pykube.Deployment(dep).create()\nTypeError: __init__() missing 1 required positional argument: 'obj'\n```\n\nI used pip to install the module. \n\n``` bash\npython3 -m pip install pykube\n```\n\nPython version.\n\n``` bash\nPython 3.5.1\n```\n\nWhat am I doing wrong here? Thanks in advance! \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/47", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/47/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/47/events", "html_url": "https://github.com/kelproject/pykube/issues/47", "id": 156083022, "node_id": "MDU6SXNzdWUxNTYwODMwMjI=", "number": 47, "title": "'get_by_name' does not work for Nodes", "user": {"login": "binarybana", "id": 392846, "node_id": "MDQ6VXNlcjM5Mjg0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/392846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binarybana", "html_url": "https://github.com/binarybana", "followers_url": "https://api.github.com/users/binarybana/followers", "following_url": "https://api.github.com/users/binarybana/following{/other_user}", "gists_url": "https://api.github.com/users/binarybana/gists{/gist_id}", "starred_url": "https://api.github.com/users/binarybana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binarybana/subscriptions", "organizations_url": "https://api.github.com/users/binarybana/orgs", "repos_url": "https://api.github.com/users/binarybana/repos", "events_url": "https://api.github.com/users/binarybana/events{/privacy}", "received_events_url": "https://api.github.com/users/binarybana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-21T04:23:49Z", "updated_at": "2016-07-02T14:38:42Z", "closed_at": "2016-07-02T14:38:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nx = pykube.Node.objects(api)\nx.get_by_name('ip-10-6-41-253.us-west-2.compute.internal')\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-37-199fc29ba186> in <module>()\n----> 1 x.get_by_name('ip-10-6-41-253.us-west-2.compute.internal')\n\n/usr/lib/python2.7/site-packages/pykube/query.pyc in get_by_name(self, name)\n     55         if self.api_obj_class.version:\n     56             kwargs[\"version\"] = self.api_obj_class.version\n---> 57         r = self.api.get(**kwargs)\n     58         if not r.ok:\n     59             if r.status_code == 404:\n\n/usr/lib/python2.7/site-packages/pykube/http.pyc in get(self, *args, **kwargs)\n    101            - `kwargs`: Keyword arguments\n    102         \"\"\"\n--> 103         return self.session.get(*args, **self.get_kwargs(**kwargs))\n    104 \n    105     def options(self, *args, **kwargs):\n\n/usr/lib/python2.7/site-packages/pykube/http.pyc in get_kwargs(self, **kwargs)\n     68             url = url[1:]\n     69         bits.append(url)\n---> 70         kwargs[\"url\"] = self.url + posixpath.join(*bits)\n     71         return kwargs\n     72 \n\n/usr/lib64/python2.7/posixpath.pyc in join(a, *p)\n     66     path = a\n     67     for b in p:\n---> 68         if b.startswith('/'):\n     69             path = b\n     70         elif path == '' or path.endswith('/'):\n\nAttributeError: 'NoneType' object has no attribute 'startswith'\n```\n\nThe problem is that `namespace` gets set to 'None' by the `BaseQuery` constructor, and then this 'None' value tries to get `os.path.join`ed to the API:\n\n```\nipdb> bits\n['/api', 'v1', 'namespaces', None, 'nodes/ip-10-6-41-253.us-west-2.compute.internal']\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/44", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/44/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/44/events", "html_url": "https://github.com/kelproject/pykube/issues/44", "id": 153892741, "node_id": "MDU6SXNzdWUxNTM4OTI3NDE=", "number": 44, "title": "Cannot connect?", "user": {"login": "ScubaDrew", "id": 18055237, "node_id": "MDQ6VXNlcjE4MDU1MjM3", "avatar_url": "https://avatars2.githubusercontent.com/u/18055237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ScubaDrew", "html_url": "https://github.com/ScubaDrew", "followers_url": "https://api.github.com/users/ScubaDrew/followers", "following_url": "https://api.github.com/users/ScubaDrew/following{/other_user}", "gists_url": "https://api.github.com/users/ScubaDrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/ScubaDrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ScubaDrew/subscriptions", "organizations_url": "https://api.github.com/users/ScubaDrew/orgs", "repos_url": "https://api.github.com/users/ScubaDrew/repos", "events_url": "https://api.github.com/users/ScubaDrew/events{/privacy}", "received_events_url": "https://api.github.com/users/ScubaDrew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-09T23:30:24Z", "updated_at": "2016-05-12T16:55:37Z", "closed_at": "2016-05-12T15:04:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "File \"/home/drew/.local/lib/python2.7/site-packages/requests/adapters.py\", line 477, in send\n    raise SSLError(e, request=request)\nrequests.exceptions.SSLError: hostname '52.38.116.180' doesn't match either of 'kubernetes', 'kubernetes.default', 'kubernetes.default.svc', 'kubernetes.default.svc.cluster.local', 'kubernetes-master'\n\nCan anyone help me with this error?\n\nThanks!\nDrew\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/42", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/42/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/42/events", "html_url": "https://github.com/kelproject/pykube/issues/42", "id": 152525357, "node_id": "MDU6SXNzdWUxNTI1MjUzNTc=", "number": 42, "title": "Unable to update deployment", "user": {"login": "jayme-github", "id": 1632246, "node_id": "MDQ6VXNlcjE2MzIyNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1632246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayme-github", "html_url": "https://github.com/jayme-github", "followers_url": "https://api.github.com/users/jayme-github/followers", "following_url": "https://api.github.com/users/jayme-github/following{/other_user}", "gists_url": "https://api.github.com/users/jayme-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayme-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayme-github/subscriptions", "organizations_url": "https://api.github.com/users/jayme-github/orgs", "repos_url": "https://api.github.com/users/jayme-github/repos", "events_url": "https://api.github.com/users/jayme-github/events{/privacy}", "received_events_url": "https://api.github.com/users/jayme-github/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-05-02T10:09:11Z", "updated_at": "2016-07-15T08:00:25Z", "closed_at": "2016-06-09T17:49:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried to change image versions for containers of a deployment.\nThat breaks with errors like the following:\n\n```\nHTTPError: Deployment.extensions \"deployment_name\" is invalid: spec.template.spec.containers[1].name: Duplicate value: \"container_name\"\n```\n\nI think that jsonpatch creates a broken patch in that case and created [jsonpatch/issue49](https://github.com/stefankoegl/python-json-patch/issues/49) for that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/41", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/41/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/41/events", "html_url": "https://github.com/kelproject/pykube/issues/41", "id": 149982728, "node_id": "MDU6SXNzdWUxNDk5ODI3Mjg=", "number": 41, "title": "Can't use watch with request 2.4.3", "user": {"login": "jayme-github", "id": 1632246, "node_id": "MDQ6VXNlcjE2MzIyNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1632246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayme-github", "html_url": "https://github.com/jayme-github", "followers_url": "https://api.github.com/users/jayme-github/followers", "following_url": "https://api.github.com/users/jayme-github/following{/other_user}", "gists_url": "https://api.github.com/users/jayme-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayme-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayme-github/subscriptions", "organizations_url": "https://api.github.com/users/jayme-github/orgs", "repos_url": "https://api.github.com/users/jayme-github/repos", "events_url": "https://api.github.com/users/jayme-github/events{/privacy}", "received_events_url": "https://api.github.com/users/jayme-github/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-21T06:47:58Z", "updated_at": "2016-11-17T08:14:56Z", "closed_at": "2016-11-17T08:14:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I always get strange tracebacks like the following with requests==2.4.3 (debian jessie). Upgrading to jessie-backports version (2.8.1) fixed that for me.\n\n``` pytb\n2016-04-20 20:50:09,186 (urllib3.connectionpool._make_request) [DEBUG] \"GET /api/v1/watch/nodes?resourceVersion=1152705 HTTP/1.1\" 200 None\nTraceback (most recent call last):\n  File \"/opt/path/watcher.py\", line 111, in <module>\n    main(args.output, args.context, args.targetPort)\n  File \"/opt/path/watcher.py\", line 65, in main\n    for event in wq.object_stream():\n  File \"/usr/local/lib/python2.7/dist-packages/pykube/query.py\", line 135, in object_stream\n    we = json.loads(line.decode(\"utf-8\"))\n  File \"/usr/lib/python2.7/json/__init__.py\", line 338, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib/python2.7/json/decoder.py\", line 369, in decode\n    raise ValueError(errmsg(\"Extra data\", s, end, len(s)))\nValueError: Extra data: line 1 column 3 - line 1 column 5 (char 2 - 4)\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/40", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/40/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/40/events", "html_url": "https://github.com/kelproject/pykube/issues/40", "id": 149675209, "node_id": "MDU6SXNzdWUxNDk2NzUyMDk=", "number": 40, "title": "Traceback creating WatchEvent", "user": {"login": "jayme-github", "id": 1632246, "node_id": "MDQ6VXNlcjE2MzIyNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1632246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayme-github", "html_url": "https://github.com/jayme-github", "followers_url": "https://api.github.com/users/jayme-github/followers", "following_url": "https://api.github.com/users/jayme-github/following{/other_user}", "gists_url": "https://api.github.com/users/jayme-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayme-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayme-github/subscriptions", "organizations_url": "https://api.github.com/users/jayme-github/orgs", "repos_url": "https://api.github.com/users/jayme-github/repos", "events_url": "https://api.github.com/users/jayme-github/events{/privacy}", "received_events_url": "https://api.github.com/users/jayme-github/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 240860837, "node_id": "MDU6TGFiZWwyNDA4NjA4Mzc=", "url": "https://api.github.com/repos/kelproject/pykube/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/kelproject/pykube/milestones/1", "html_url": "https://github.com/kelproject/pykube/milestone/1", "labels_url": "https://api.github.com/repos/kelproject/pykube/milestones/1/labels", "id": 2085124, "node_id": "MDk6TWlsZXN0b25lMjA4NTEyNA==", "number": 1, "title": "0.14.0", "description": "", "creator": {"login": "brosner", "id": 124, "node_id": "MDQ6VXNlcjEyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brosner", "html_url": "https://github.com/brosner", "followers_url": "https://api.github.com/users/brosner/followers", "following_url": "https://api.github.com/users/brosner/following{/other_user}", "gists_url": "https://api.github.com/users/brosner/gists{/gist_id}", "starred_url": "https://api.github.com/users/brosner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brosner/subscriptions", "organizations_url": "https://api.github.com/users/brosner/orgs", "repos_url": "https://api.github.com/users/brosner/repos", "events_url": "https://api.github.com/users/brosner/events{/privacy}", "received_events_url": "https://api.github.com/users/brosner/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2016-10-21T13:44:13Z", "updated_at": "2016-12-21T01:04:49Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2016-04-20T06:47:10Z", "updated_at": "2016-10-25T18:29:40Z", "closed_at": "2016-10-25T18:29:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems as if the response objects do not have a `type` :\n\n``` python\nwq = Node.objects(api).all().watch(now)\nfor e in wq.object_stream():\n    print(e)\n```\n\n``` pytb\nsite-packages/pykube/query.py in object_stream(self)\n    134             we = json.loads(line.decode(\"utf-8\"))\n--> 135             yield WatchEvent(type=we[\"type\"], object=self.api_obj_class(self.api, we[\"object\"]))\n    136 \n    137     def __iter__(self):\n\nKeyError: 'type'\n```\n\n//EDIT:\nMy bad. Looks as `watch()` (at least for Nodes) must be created from a \"namespace=all_\" filter for the API-URL to be computed correctly:\n\n``` py\nwq = Node.objects(api).filter(namespace=all_).watch(now)\nfor e in wq.object_stream():\n    print(e)\n```\n\nMaybe I just don't know how to use that correctly. :smile: \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/36", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/36/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/36/events", "html_url": "https://github.com/kelproject/pykube/issues/36", "id": 148402701, "node_id": "MDU6SXNzdWUxNDg0MDI3MDE=", "number": 36, "title": "Support for retrieving logs for pods", "user": {"login": "pcm32", "id": 368478, "node_id": "MDQ6VXNlcjM2ODQ3OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/368478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcm32", "html_url": "https://github.com/pcm32", "followers_url": "https://api.github.com/users/pcm32/followers", "following_url": "https://api.github.com/users/pcm32/following{/other_user}", "gists_url": "https://api.github.com/users/pcm32/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcm32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcm32/subscriptions", "organizations_url": "https://api.github.com/users/pcm32/orgs", "repos_url": "https://api.github.com/users/pcm32/repos", "events_url": "https://api.github.com/users/pcm32/events{/privacy}", "received_events_url": "https://api.github.com/users/pcm32/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-04-14T15:43:43Z", "updated_at": "2016-10-26T19:05:09Z", "closed_at": "2016-10-26T19:05:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "What would be needed to support log retrieval from pods like you do with `kubectl logs mypod`\n\nI'm happy to start coding something with some directions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/32", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/32/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/32/events", "html_url": "https://github.com/kelproject/pykube/issues/32", "id": 146309365, "node_id": "MDU6SXNzdWUxNDYzMDkzNjU=", "number": 32, "title": "Release for 1.2 Kubernetes?", "user": {"login": "cdrage", "id": 6422176, "node_id": "MDQ6VXNlcjY0MjIxNzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6422176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdrage", "html_url": "https://github.com/cdrage", "followers_url": "https://api.github.com/users/cdrage/followers", "following_url": "https://api.github.com/users/cdrage/following{/other_user}", "gists_url": "https://api.github.com/users/cdrage/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdrage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdrage/subscriptions", "organizations_url": "https://api.github.com/users/cdrage/orgs", "repos_url": "https://api.github.com/users/cdrage/repos", "events_url": "https://api.github.com/users/cdrage/events{/privacy}", "received_events_url": "https://api.github.com/users/cdrage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-06T13:11:33Z", "updated_at": "2016-04-07T13:03:49Z", "closed_at": "2016-04-06T13:17:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Now that we've got all the features from 1.2 implemented into `pykube`, is it possible to do a (even minor) release of pykube so we can pull the new version from pip?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/30", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/30/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/30/events", "html_url": "https://github.com/kelproject/pykube/issues/30", "id": 146099447, "node_id": "MDU6SXNzdWUxNDYwOTk0NDc=", "number": 30, "title": "Is there a way to skip ceritificate validation?", "user": {"login": "robertdolca", "id": 383543, "node_id": "MDQ6VXNlcjM4MzU0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/383543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertdolca", "html_url": "https://github.com/robertdolca", "followers_url": "https://api.github.com/users/robertdolca/followers", "following_url": "https://api.github.com/users/robertdolca/following{/other_user}", "gists_url": "https://api.github.com/users/robertdolca/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertdolca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertdolca/subscriptions", "organizations_url": "https://api.github.com/users/robertdolca/orgs", "repos_url": "https://api.github.com/users/robertdolca/repos", "events_url": "https://api.github.com/users/robertdolca/events{/privacy}", "received_events_url": "https://api.github.com/users/robertdolca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-05T20:21:34Z", "updated_at": "2016-04-05T20:34:58Z", "closed_at": "2016-04-05T20:34:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The error I am seeing is:\n\n```\nrequests.exceptions.SSLError: hostname 'x.x.x.x' doesn't match either of 'kubernetes', 'kubernetes.default', 'kubernetes.default.svc', 'kubernetes.default.svc.cluster.local'\n```\n\nx.x.x.x is the server's ip\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/29", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/29/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/29/events", "html_url": "https://github.com/kelproject/pykube/issues/29", "id": 145449731, "node_id": "MDU6SXNzdWUxNDU0NDk3MzE=", "number": 29, "title": "Accessing the API Server from a pod using service account causes an error", "user": {"login": "akshayl", "id": 3515060, "node_id": "MDQ6VXNlcjM1MTUwNjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3515060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akshayl", "html_url": "https://github.com/akshayl", "followers_url": "https://api.github.com/users/akshayl/followers", "following_url": "https://api.github.com/users/akshayl/following{/other_user}", "gists_url": "https://api.github.com/users/akshayl/gists{/gist_id}", "starred_url": "https://api.github.com/users/akshayl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akshayl/subscriptions", "organizations_url": "https://api.github.com/users/akshayl/orgs", "repos_url": "https://api.github.com/users/akshayl/repos", "events_url": "https://api.github.com/users/akshayl/events{/privacy}", "received_events_url": "https://api.github.com/users/akshayl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2016-04-03T03:53:04Z", "updated_at": "2017-06-28T06:54:28Z", "closed_at": "2016-04-04T15:20:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "K8S Version: 1.2\nCode:\n\n```\napi = HTTPClient(KubeConfig.from_service_account())\npods = Pod.objects(api).filter(namespace=\"gondor-system\")\nready_pods = filter(operator.attrgetter(\"ready\"), pods)\n```\n\nError message:\n\n```\nSSLError: hostname '10.3.240.1' doesn't match either of 'kubernetes', 'kubernetes.default', 'kubernetes.default.svc', 'kubernetes.default.svc.cluster.local'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/23", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/23/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/23/events", "html_url": "https://github.com/kelproject/pykube/issues/23", "id": 143825221, "node_id": "MDU6SXNzdWUxNDM4MjUyMjE=", "number": 23, "title": "List/Watch objects in all namespaces", "user": {"login": "jayme-github", "id": 1632246, "node_id": "MDQ6VXNlcjE2MzIyNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1632246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayme-github", "html_url": "https://github.com/jayme-github", "followers_url": "https://api.github.com/users/jayme-github/followers", "following_url": "https://api.github.com/users/jayme-github/following{/other_user}", "gists_url": "https://api.github.com/users/jayme-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayme-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayme-github/subscriptions", "organizations_url": "https://api.github.com/users/jayme-github/orgs", "repos_url": "https://api.github.com/users/jayme-github/repos", "events_url": "https://api.github.com/users/jayme-github/events{/privacy}", "received_events_url": "https://api.github.com/users/jayme-github/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-27T16:29:11Z", "updated_at": "2016-03-28T17:50:11Z", "closed_at": "2016-03-28T15:46:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I want to query objects in all namespaces (`GET /api/v1/services` for example). What is the correct/intended way to do so (as `NamespacedAPIObject` always sets `DEFAULT_NAMESPACE` on instantiation)?\n\nI see at least the following two possible ways:\n\nManually overwrite namespace in `ObjectManager` instance:\n\n``` py\nserviceQuery = Service.objects(api)\nserviceQuery.namespace = None # Query all namespaces\nservices = serviceQuery.all()\n```\n\nCreate a \"Non-namespaced\" version of the object class:\n\n``` py\nclass Service(APIObject):\n    version = 'v1'\n    endpoint = 'services'\n\n    @property\n    def namespace(self):\n        if self.obj['metadata'].get('namespace'):\n            return self.obj['metadata']['namespace']\n\nservices = Service.objects(api).all()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/22", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/22/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/22/events", "html_url": "https://github.com/kelproject/pykube/issues/22", "id": 143357760, "node_id": "MDU6SXNzdWUxNDMzNTc3NjA=", "number": 22, "title": "Setting a namespace!", "user": {"login": "cdrage", "id": 6422176, "node_id": "MDQ6VXNlcjY0MjIxNzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6422176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdrage", "html_url": "https://github.com/cdrage", "followers_url": "https://api.github.com/users/cdrage/followers", "following_url": "https://api.github.com/users/cdrage/following{/other_user}", "gists_url": "https://api.github.com/users/cdrage/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdrage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdrage/subscriptions", "organizations_url": "https://api.github.com/users/cdrage/orgs", "repos_url": "https://api.github.com/users/cdrage/repos", "events_url": "https://api.github.com/users/cdrage/events{/privacy}", "received_events_url": "https://api.github.com/users/cdrage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-24T20:58:55Z", "updated_at": "2016-03-28T17:12:10Z", "closed_at": "2016-03-28T15:55:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Am I doing something wrong? :( Been trying for a bit through the code (sorry, I'm still a Python n00b)\n\nJust trying to set a namespace correctly.\n\n``` py\nfrom pykube.http import HTTPClient                                                                                                                                                                                                                             \nfrom pykube.objects import Pod                                                                                                                                                                                                                                 \n\n\napi = HTTPClient(KubeConfig.from_file(\"/home/wikus/.kube/config\"))                                                                                                                                                                                             \napi.namespace = \"apples\"                                                                                                                                                                                                                                       \n\ntp = anymarkup.parse_file('hello-apache-pod.json')                                                                                                                                                                                                             \nnew = Pod(api, tp)                                                                                                                                                                                                                                             \nnew.create()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/20", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/20/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/20/events", "html_url": "https://github.com/kelproject/pykube/issues/20", "id": 143344098, "node_id": "MDU6SXNzdWUxNDMzNDQwOTg=", "number": 20, "title": "Support Ingress (Kubernetes 1.2)", "user": {"login": "cdrage", "id": 6422176, "node_id": "MDQ6VXNlcjY0MjIxNzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6422176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdrage", "html_url": "https://github.com/cdrage", "followers_url": "https://api.github.com/users/cdrage/followers", "following_url": "https://api.github.com/users/cdrage/following{/other_user}", "gists_url": "https://api.github.com/users/cdrage/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdrage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdrage/subscriptions", "organizations_url": "https://api.github.com/users/cdrage/orgs", "repos_url": "https://api.github.com/users/cdrage/repos", "events_url": "https://api.github.com/users/cdrage/events{/privacy}", "received_events_url": "https://api.github.com/users/cdrage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-24T19:57:18Z", "updated_at": "2016-04-04T14:47:27Z", "closed_at": "2016-04-04T14:47:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See:\n- http://kubernetes.io/docs/user-guide/ingress/ \n- ~~http://kubernetes.io/docs/user-guide/deployments/~~\n\nEdit: nvm, deployment is included\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/18", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/18/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/18/events", "html_url": "https://github.com/kelproject/pykube/issues/18", "id": 143042839, "node_id": "MDU6SXNzdWUxNDMwNDI4Mzk=", "number": 18, "title": "support for no-auth kube-apiserver access", "user": {"login": "davidsiefert", "id": 5030667, "node_id": "MDQ6VXNlcjUwMzA2Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5030667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidsiefert", "html_url": "https://github.com/davidsiefert", "followers_url": "https://api.github.com/users/davidsiefert/followers", "following_url": "https://api.github.com/users/davidsiefert/following{/other_user}", "gists_url": "https://api.github.com/users/davidsiefert/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidsiefert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidsiefert/subscriptions", "organizations_url": "https://api.github.com/users/davidsiefert/orgs", "repos_url": "https://api.github.com/users/davidsiefert/repos", "events_url": "https://api.github.com/users/davidsiefert/events{/privacy}", "received_events_url": "https://api.github.com/users/davidsiefert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-23T18:27:23Z", "updated_at": "2016-06-14T15:28:02Z", "closed_at": "2016-06-14T15:28:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am accessing a kubernetes cluster with no auth required for convenience.  The http client currently errors out when it cannot find the right credentials, when none are actually needed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/13", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/13/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/13/events", "html_url": "https://github.com/kelproject/pykube/issues/13", "id": 139151300, "node_id": "MDU6SXNzdWUxMzkxNTEzMDA=", "number": 13, "title": "Add new object types", "user": {"login": "paralin", "id": 534887, "node_id": "MDQ6VXNlcjUzNDg4Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/534887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paralin", "html_url": "https://github.com/paralin", "followers_url": "https://api.github.com/users/paralin/followers", "following_url": "https://api.github.com/users/paralin/following{/other_user}", "gists_url": "https://api.github.com/users/paralin/gists{/gist_id}", "starred_url": "https://api.github.com/users/paralin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paralin/subscriptions", "organizations_url": "https://api.github.com/users/paralin/orgs", "repos_url": "https://api.github.com/users/paralin/repos", "events_url": "https://api.github.com/users/paralin/events{/privacy}", "received_events_url": "https://api.github.com/users/paralin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-03-08T01:52:06Z", "updated_at": "2016-04-04T15:09:33Z", "closed_at": "2016-04-04T15:09:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We need \"PersistentVolume\", \"PersistentVolumeClaim\", and a few others, like \"HorizontalScaler\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/11", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/11/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/11/events", "html_url": "https://github.com/kelproject/pykube/issues/11", "id": 137751496, "node_id": "MDU6SXNzdWUxMzc3NTE0OTY=", "number": 11, "title": "Syntax error", "user": {"login": "chrisleck", "id": 13987499, "node_id": "MDQ6VXNlcjEzOTg3NDk5", "avatar_url": "https://avatars3.githubusercontent.com/u/13987499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisleck", "html_url": "https://github.com/chrisleck", "followers_url": "https://api.github.com/users/chrisleck/followers", "following_url": "https://api.github.com/users/chrisleck/following{/other_user}", "gists_url": "https://api.github.com/users/chrisleck/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisleck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisleck/subscriptions", "organizations_url": "https://api.github.com/users/chrisleck/orgs", "repos_url": "https://api.github.com/users/chrisleck/repos", "events_url": "https://api.github.com/users/chrisleck/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisleck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-02T02:25:00Z", "updated_at": "2016-03-25T18:40:26Z", "closed_at": "2016-03-17T14:18:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like something checked in today broke this library.\n\n  from pykube import HTTPClient\n  File \"/Users/chris/src/experimental/build/virtualenv/lib/python2.7/site-packages/pykube/**init**.py\", line 8, in <module>\n    from .objects import (  # noqa\n  File \"/Users/chris/src/experimental/build/virtualenv/lib/python2.7/site-packages/pykube/objects.py\", line 8, in <module>\n    from .query import ObjectManager\n  File \"/Users/chris/src/experimental/build/virtualenv/lib/python2.7/site-packages/pykube/query.py\", line 115\n    def **init**(self, _args, resource_version=None, *_kwargs):\n                                             ^\nSyntaxError: invalid syntax\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/10", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/10/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/10/events", "html_url": "https://github.com/kelproject/pykube/issues/10", "id": 133484381, "node_id": "MDU6SXNzdWUxMzM0ODQzODE=", "number": 10, "title": "KeyError 'conditions'", "user": {"login": "brosner", "id": 124, "node_id": "MDQ6VXNlcjEyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brosner", "html_url": "https://github.com/brosner", "followers_url": "https://api.github.com/users/brosner/followers", "following_url": "https://api.github.com/users/brosner/following{/other_user}", "gists_url": "https://api.github.com/users/brosner/gists{/gist_id}", "starred_url": "https://api.github.com/users/brosner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brosner/subscriptions", "organizations_url": "https://api.github.com/users/brosner/orgs", "repos_url": "https://api.github.com/users/brosner/repos", "events_url": "https://api.github.com/users/brosner/events{/privacy}", "received_events_url": "https://api.github.com/users/brosner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-13T23:57:25Z", "updated_at": "2016-06-14T15:41:49Z", "closed_at": "2016-06-14T15:41:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have noticed from time to time that I see this exception:\n\n```\nFile \"/Users/brian/Development/Envs/tmp-98df323c389668d/lib/python3.5/site-packages/pykube/rolling_updater.py\", line 53, in update\n    min_available, max_surge,\n  File \"/Users/brian/Development/Envs/tmp-98df323c389668d/lib/python3.5/site-packages/pykube/rolling_updater.py\", line 83, in scale_down\n    _, new_available = self.poll_for_ready_pods(old_rc, new_rc)\n  File \"/Users/brian/Development/Envs/tmp-98df323c389668d/lib/python3.5/site-packages/pykube/rolling_updater.py\", line 126, in poll_for_ready_pods\n    if pod.ready:\n  File \"/Users/brian/Development/Envs/tmp-98df323c389668d/lib/python3.5/site-packages/pykube/objects.py\", line 158, in ready\n    cs = self.obj[\"status\"][\"conditions\"]\nKeyError: 'conditions'\n```\n\nduring a rolling update. Need to investigate why `conditions` is not present.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/9", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/9/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/9/events", "html_url": "https://github.com/kelproject/pykube/issues/9", "id": 133260859, "node_id": "MDU6SXNzdWUxMzMyNjA4NTk=", "number": 9, "title": "Improve API versioning", "user": {"login": "brosner", "id": 124, "node_id": "MDQ6VXNlcjEyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brosner", "html_url": "https://github.com/brosner", "followers_url": "https://api.github.com/users/brosner/followers", "following_url": "https://api.github.com/users/brosner/following{/other_user}", "gists_url": "https://api.github.com/users/brosner/gists{/gist_id}", "starred_url": "https://api.github.com/users/brosner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brosner/subscriptions", "organizations_url": "https://api.github.com/users/brosner/orgs", "repos_url": "https://api.github.com/users/brosner/repos", "events_url": "https://api.github.com/users/brosner/events{/privacy}", "received_events_url": "https://api.github.com/users/brosner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-12T14:55:42Z", "updated_at": "2016-02-12T15:08:30Z", "closed_at": "2016-02-12T15:08:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While implementing `DaemonSet` I came across the need to fix more at the `HTTPClient` level than I expected. I knew I needed to generate a completely new URL and `HTTPClient` has the ability to override all the parts, however, doing so per-request is difficult. This is largely do to the ORM bit.\n\nThe API objects should be the one telling the `HTTPClient` which version it should be working with. To do this correctly, I will need to break some of the API of `HTTPClient`.\n\nThis project is still early days so I am not too concerned about breaking stuff :-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kelproject/pykube/issues/8", "repository_url": "https://api.github.com/repos/kelproject/pykube", "labels_url": "https://api.github.com/repos/kelproject/pykube/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/kelproject/pykube/issues/8/comments", "events_url": "https://api.github.com/repos/kelproject/pykube/issues/8/events", "html_url": "https://github.com/kelproject/pykube/issues/8", "id": 131190158, "node_id": "MDU6SXNzdWUxMzExOTAxNTg=", "number": 8, "title": "Example code fails to run with error \"ObjectManager instance has no attribute 'endpoint'\"", "user": {"login": "chrisleck", "id": 13987499, "node_id": "MDQ6VXNlcjEzOTg3NDk5", "avatar_url": "https://avatars3.githubusercontent.com/u/13987499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisleck", "html_url": "https://github.com/chrisleck", "followers_url": "https://api.github.com/users/chrisleck/followers", "following_url": "https://api.github.com/users/chrisleck/following{/other_user}", "gists_url": "https://api.github.com/users/chrisleck/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisleck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisleck/subscriptions", "organizations_url": "https://api.github.com/users/chrisleck/orgs", "repos_url": "https://api.github.com/users/chrisleck/repos", "events_url": "https://api.github.com/users/chrisleck/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisleck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-02-03T23:36:53Z", "updated_at": "2016-02-04T00:26:44Z", "closed_at": "2016-02-03T23:55:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n>>> api = HTTPClient(KubeConfig.from_file(\"/Users/<username>/.kube/config\"))\n>>> pods = Pod.objects(api).filter(namespace=\"<a valid namespace>\")\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/chris/src/experimental/build/krypton-virtualenv/lib/python2.7/site-packages/pykube/query.py\", line 83, in __call__\n    return Query(api, self.endpoint, self.api_obj_class, namespace=self.namespace)\nAttributeError: ObjectManager instance has no attribute 'endpoint'\n```\n", "performed_via_github_app": null, "score": 1.0}]}