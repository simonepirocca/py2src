{"total_count": 37, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/115", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/115/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/115/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/115", "id": 674105227, "node_id": "MDU6SXNzdWU2NzQxMDUyMjc=", "number": 115, "title": "Not compatible with Django 3.1", "user": {"login": "KrYpTeD974", "id": 1556710, "node_id": "MDQ6VXNlcjE1NTY3MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1556710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KrYpTeD974", "html_url": "https://github.com/KrYpTeD974", "followers_url": "https://api.github.com/users/KrYpTeD974/followers", "following_url": "https://api.github.com/users/KrYpTeD974/following{/other_user}", "gists_url": "https://api.github.com/users/KrYpTeD974/gists{/gist_id}", "starred_url": "https://api.github.com/users/KrYpTeD974/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KrYpTeD974/subscriptions", "organizations_url": "https://api.github.com/users/KrYpTeD974/orgs", "repos_url": "https://api.github.com/users/KrYpTeD974/repos", "events_url": "https://api.github.com/users/KrYpTeD974/events{/privacy}", "received_events_url": "https://api.github.com/users/KrYpTeD974/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-06T07:55:50Z", "updated_at": "2020-08-09T16:54:56Z", "closed_at": "2020-08-09T16:54:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The file mixins.py imports FieldDoesNotExist which has been moved to another package.\r\nfrom django.core.exceptions.\r\n\r\n`from django.core.exceptions import FieldDoesNotExist`  should be used instead of \r\n`from django.db.models import ProtectedError, FieldDoesNotExist`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/109", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/109/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/109/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/109", "id": 593857020, "node_id": "MDU6SXNzdWU1OTM4NTcwMjA=", "number": 109, "title": "Drop Python 2.7", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-04T13:20:39Z", "updated_at": "2020-04-12T03:12:05Z", "closed_at": "2020-04-12T03:12:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Django and DRF have both dropped Python 2.7. `drf-writable-nested` should consider following suit.\r\n\r\nCurrently, we must use `pytest` at `<5` in `requirements.txt` to support Python 2.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/98", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/98/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/98/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/98", "id": 542718587, "node_id": "MDU6SXNzdWU1NDI3MTg1ODc=", "number": 98, "title": "how to support three level nested json ---reverse relation about foreign key ", "user": {"login": "AlanWZHU", "id": 29098897, "node_id": "MDQ6VXNlcjI5MDk4ODk3", "avatar_url": "https://avatars3.githubusercontent.com/u/29098897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlanWZHU", "html_url": "https://github.com/AlanWZHU", "followers_url": "https://api.github.com/users/AlanWZHU/followers", "following_url": "https://api.github.com/users/AlanWZHU/following{/other_user}", "gists_url": "https://api.github.com/users/AlanWZHU/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlanWZHU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlanWZHU/subscriptions", "organizations_url": "https://api.github.com/users/AlanWZHU/orgs", "repos_url": "https://api.github.com/users/AlanWZHU/repos", "events_url": "https://api.github.com/users/AlanWZHU/events{/privacy}", "received_events_url": "https://api.github.com/users/AlanWZHU/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-27T02:24:32Z", "updated_at": "2019-12-29T02:12:11Z", "closed_at": "2019-12-29T02:12:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "eg :   profile reference user model    avatar reference profile\r\n{username:   { profile:    {avatars:[]}}} ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/93", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/93/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/93/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/93", "id": 518921357, "node_id": "MDU6SXNzdWU1MTg5MjEzNTc=", "number": 93, "title": "django.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.", "user": {"login": "aboutofpluto", "id": 2836547, "node_id": "MDQ6VXNlcjI4MzY1NDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2836547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aboutofpluto", "html_url": "https://github.com/aboutofpluto", "followers_url": "https://api.github.com/users/aboutofpluto/followers", "following_url": "https://api.github.com/users/aboutofpluto/following{/other_user}", "gists_url": "https://api.github.com/users/aboutofpluto/gists{/gist_id}", "starred_url": "https://api.github.com/users/aboutofpluto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aboutofpluto/subscriptions", "organizations_url": "https://api.github.com/users/aboutofpluto/orgs", "repos_url": "https://api.github.com/users/aboutofpluto/repos", "events_url": "https://api.github.com/users/aboutofpluto/events{/privacy}", "received_events_url": "https://api.github.com/users/aboutofpluto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-06T22:58:57Z", "updated_at": "2019-11-17T09:56:38Z", "closed_at": "2019-11-17T09:56:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI have this error message as soon as I add 'drf_writable_nested' to `INSTALLED_APPS`.\r\n\r\n** How to reproduce **\r\n\r\nMy environment is:\r\n```\r\n$ python --version\r\nPython 3.7.3\r\n\r\n$ pip freeze\r\n...\r\nDjango==2.2.7\r\n...\r\ndjangorestframework==3.10.3\r\n...\r\ndrf-writable-nested==0.5.1\r\n...\r\n```\r\n\r\nThe problem occurs with the simplest possible installation:\r\n\r\n1. Start a new project\r\n```\r\n$ django-admin startproject testproject\r\n```\r\n\r\n2. Edit settings.py to add drf and drf_writable_nested\r\n```\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'rest_framework',\r\n    'drf_writable_nested',\r\n]\r\n```\r\n\r\n3. run server (or any command actually)\r\n```\r\n$  python manage.py runserver\r\n....\r\nFile \"/home/ab/work/django/venv-django-2.2.7/lib/python3.7/site-packages/drf_writable_nested/__init__.py\", line 11, in <module>\r\n    from .mixins import NestedUpdateMixin, NestedCreateMixin, UniqueFieldsMixin\r\n  File \"/home/ab/work/django/venv-django-2.2.7/lib/python3.7/site-packages/drf_writable_nested/mixins.py\", line 4, in <module>\r\n    from django.contrib.contenttypes.fields import GenericRelation\r\n  File \"/home/ab/work/django/venv-django-2.2.7/lib/python3.7/site-packages/django/contrib/contenttypes/fields.py\", line 3, in <module>\r\n    from django.contrib.contenttypes.models import ContentType\r\n  File \"/home/ab/work/django/venv-django-2.2.7/lib/python3.7/site-packages/django/contrib/contenttypes/models.py\", line 133, in <module>\r\n    class ContentType(models.Model):\r\n  File \"/home/ab/work/django/venv-django-2.2.7/lib/python3.7/site-packages/django/db/models/base.py\", line 103, in __new__\r\n    app_config = apps.get_containing_app_config(module)\r\n  File \"/home/ab/work/django/venv-django-2.2.7/lib/python3.7/site-packages/django/apps/registry.py\", line 252, in get_containing_app_config\r\n    self.check_apps_ready()\r\n  File \"/home/ab/work/django/venv-django-2.2.7/lib/python3.7/site-packages/django/apps/registry.py\", line 135, in check_apps_ready\r\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\r\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\r\n```\r\n\r\n** Possible fix **\r\n\r\nThis can be solved by removing the `import` statements from `drf_writable_nested/__init__.py`\r\nThis fix is logical (to me at least) and simply implies to import from `serializers`:\r\n```\r\nfrom drf_writable_nested.serializers import WritableNestedModelSerializer\r\n```\r\n\r\nIf you think the fix is valid, I'll create a pull request.\r\n\r\nBest regards,\r\nab", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/92", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/92/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/92/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/92", "id": 516644293, "node_id": "MDU6SXNzdWU1MTY2NDQyOTM=", "number": 92, "title": "Validation error on nested primary key in update request", "user": {"login": "anuj9196", "id": 6560085, "node_id": "MDQ6VXNlcjY1NjAwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6560085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj9196", "html_url": "https://github.com/anuj9196", "followers_url": "https://api.github.com/users/anuj9196/followers", "following_url": "https://api.github.com/users/anuj9196/following{/other_user}", "gists_url": "https://api.github.com/users/anuj9196/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj9196/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj9196/subscriptions", "organizations_url": "https://api.github.com/users/anuj9196/orgs", "repos_url": "https://api.github.com/users/anuj9196/repos", "events_url": "https://api.github.com/users/anuj9196/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj9196/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-02T16:18:39Z", "updated_at": "2019-11-16T05:22:35Z", "closed_at": "2019-11-16T05:22:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have following model\r\n```\r\nclass Component(Model):\r\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\r\n    name = models.CharField(max_length=100, default='Unnamed')\r\n    group = models.ForeignKey(AnalyticsGroup, on_delete=models.CASCADE)\r\n\r\nclass ComponentData(Model):\r\n    component = models.ForeignKey(Component, on_delete=models.CASCADE, related_name='data')\r\n    analytics_type = models.ForeignKey(AnalyticsType, on_delete=models.PROTECT)\r\n```\r\n\r\nand serializer\r\n```\r\nclass ComponentDataSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = ComponentData\r\n        fields = [\r\n            'id',\r\n            'analytics_type',\r\n        ]\r\n\r\n\r\nclass ComponentSerializer(WritableNestedModelSerializer):\r\n\r\n    data = ComponentDataSerializer(many=True)\r\n\r\n    class Meta:\r\n        model = Component\r\n        fields = [\r\n            'name',\r\n            'group',\r\n        ]\r\n```\r\n\r\nThe `analytics_type` in the nested `data` does not need to be created again and `primary key` `id` will be used to create `ComponentData` instance.\r\n\r\nThis works fine for `create` but on `update`, this gives error\r\n```\r\n{\r\n    \"data\": [\r\n        {\r\n            \"analytics_type\": [\r\n                \"This field is required.\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n```\r\nMy `PATCH` payload is\r\n```\r\ngroup: \"2\"\r\ndata[0].analytics_type: \"3\"         # 3 is the pk of AnalyticsType object\r\n```\r\n\r\nEven if I pass `id` like `data[0].id: \"1\"` to update existing nested `ComponentData` record, it gives the same validation error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/87", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/87/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/87/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/87", "id": 475467348, "node_id": "MDU6SXNzdWU0NzU0NjczNDg=", "number": 87, "title": "Fix CI build for Django 2.2", "user": {"login": "ruscoder", "id": 3920871, "node_id": "MDQ6VXNlcjM5MjA4NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3920871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruscoder", "html_url": "https://github.com/ruscoder", "followers_url": "https://api.github.com/users/ruscoder/followers", "following_url": "https://api.github.com/users/ruscoder/following{/other_user}", "gists_url": "https://api.github.com/users/ruscoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruscoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruscoder/subscriptions", "organizations_url": "https://api.github.com/users/ruscoder/orgs", "repos_url": "https://api.github.com/users/ruscoder/repos", "events_url": "https://api.github.com/users/ruscoder/events{/privacy}", "received_events_url": "https://api.github.com/users/ruscoder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 542372797, "node_id": "MDU6TGFiZWw1NDIzNzI3OTc=", "url": "https://api.github.com/repos/beda-software/drf-writable-nested/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-01T04:37:42Z", "updated_at": "2020-04-12T03:12:05Z", "closed_at": "2020-04-12T03:12:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It seems that everything is OK with tests for 2.2 but the build fails on the CI.\r\n\r\nDjango 2.2 was temporarily removed from travis/tox https://github.com/beda-software/drf-writable-nested/commit/f06df1a2dcac222f519bb368da273150036b8323\r\nFailing build:\r\nhttps://travis-ci.org/beda-software/drf-writable-nested/jobs/547545561\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/80", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/80/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/80/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/80", "id": 439049119, "node_id": "MDU6SXNzdWU0MzkwNDkxMTk=", "number": 80, "title": "Validation problem for nested serializers with unique fields on update", "user": {"login": "ryomahan", "id": 18721016, "node_id": "MDQ6VXNlcjE4NzIxMDE2", "avatar_url": "https://avatars2.githubusercontent.com/u/18721016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryomahan", "html_url": "https://github.com/ryomahan", "followers_url": "https://api.github.com/users/ryomahan/followers", "following_url": "https://api.github.com/users/ryomahan/following{/other_user}", "gists_url": "https://api.github.com/users/ryomahan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryomahan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryomahan/subscriptions", "organizations_url": "https://api.github.com/users/ryomahan/orgs", "repos_url": "https://api.github.com/users/ryomahan/repos", "events_url": "https://api.github.com/users/ryomahan/events{/privacy}", "received_events_url": "https://api.github.com/users/ryomahan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-01T02:29:22Z", "updated_at": "2019-05-06T02:38:19Z", "closed_at": "2019-05-06T02:38:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm sorry to ask this question again, but I tried many times and it still had problems.\r\n\r\n```\r\nBasics:\r\nDjango-2.1.4\r\nDRF-3.9.2\r\ndrf-writable-nested-0.5.1\r\n```\r\n\r\n```python\r\n# model.py\r\nfrom django.db import models\r\n\r\n\r\nclass Child(models.Model):\r\n    field = models.CharField(unique=True, max_length=100)\r\n    field_two = models.CharField(max_length=100)\r\n    field_three = models.CharField(max_length=100)\r\n\r\n\r\nclass Parent(models.Model):\r\n    child = models.ForeignKey('Child', on_delete=models.CASCADE)\r\n```\r\n\r\n```python\r\n# serializers.py\r\nfrom rest_framework import serializers\r\nfrom drf_writable_nested import UniqueFieldsMixin, NestedUpdateMixin, NestedCreateMixin\r\nfrom .models import Child, Parent\r\n\r\n\r\nclass ChildSerializer(UniqueFieldsMixin, serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Child\r\n        fields = '__all__'\r\n\r\n\r\nclass ParentSerializer(NestedCreateMixin, NestedUpdateMixin, serializers.ModelSerializer):\r\n    child = ChildSerializer()\r\n\r\n    class Meta:\r\n        model = Parent\r\n        fields = '__all__'\r\n```\r\n\r\n```python\r\n# views.py\r\nfrom rest_framework.viewsets import ModelViewSet\r\n\r\nfrom .models import Parent\r\nfrom .serializers import ParentSerializer\r\n\r\n\r\nclass TestViewSet(ModelViewSet):\r\n    queryset = Parent.objects.all()\r\n    serializer_class = ParentSerializer\r\n```\r\n\r\n```python\r\n# url.py\r\n...\r\n\r\nfrom practice.views import TestViewSet\r\n\r\nrouter = DefaultRouter(trailing_slash=False)\r\nrouter.register(r'test', TestViewSet, base_name='test')\r\n\r\n...\r\n```\r\n\r\n\r\n```\r\n# POST\r\n\r\nurl: http://127.0.0.1:8000/test\r\ndata: {\r\n    \"child\": {\r\n        \"field\": \"asd\",\r\n        \"field_two\": \"asdasd\",\r\n        \"field_three\": \"asdasdasd\"\r\n    }\r\n}\r\n\r\n# return json\r\n{\r\n    \"id\": 1,\r\n    \"child\": {\r\n        \"id\": 1,\r\n        \"field\": \"asd\",\r\n        \"field_two\": \"asdasd\",\r\n        \"field_three\": \"asdasdasd\"\r\n    }\r\n}\r\n\r\n# PUT\r\nurl: http://127.0.0.1:8000/test/1\r\ndata: {\r\n    \"child\": {\r\n        \"field\": \"asd\",\r\n        \"field_two\": \"asdasd\",\r\n        \"field_three\": \"asdasdasdaaaaaaaaaa\"\r\n    }\r\n}\r\n\r\n# return json\r\n{\r\n    \"child\": {\r\n        \"field\": [\r\n            \"This field must be unique.\"\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\nI've tried most of the methods that I can Google.\r\n\r\nBut none of them can solve my problem well.\r\n\r\nI was really happy when I found this plug-in.\r\n\r\nBut it didn't work after I tried.\r\n\r\nI read about the source code, but I couldn't understand the function of the code.\r\n\r\nI'm a novice. If I make some low-level mistakes, I hope you can tell me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/74", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/74/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/74/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/74", "id": 420025575, "node_id": "MDU6SXNzdWU0MjAwMjU1NzU=", "number": 74, "title": "Integration with django-rest-polymorphic", "user": {"login": "mattkamp", "id": 29179303, "node_id": "MDQ6VXNlcjI5MTc5MzAz", "avatar_url": "https://avatars3.githubusercontent.com/u/29179303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkamp", "html_url": "https://github.com/mattkamp", "followers_url": "https://api.github.com/users/mattkamp/followers", "following_url": "https://api.github.com/users/mattkamp/following{/other_user}", "gists_url": "https://api.github.com/users/mattkamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkamp/subscriptions", "organizations_url": "https://api.github.com/users/mattkamp/orgs", "repos_url": "https://api.github.com/users/mattkamp/repos", "events_url": "https://api.github.com/users/mattkamp/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkamp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-12T14:43:22Z", "updated_at": "2019-06-19T05:19:56Z", "closed_at": "2019-06-19T05:19:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am facing an issue when i try to integrate drf-writable-nested with django-rest-polymorphic. More specifically, if my model's depth is 2 or greater, the following error is thrown: \r\n```python\r\n'ComponentA' object has no attribute '_save_kwargs'\r\n```\r\n\r\nSample code, where the event occurs, can be seen below:\r\n\r\n### Models\r\n```python\r\nfrom django.db import models\r\nfrom polymorphic.models import PolymorphicModel\r\n\r\nclass Component(PolymorphicModel):\r\n    class Meta:\r\n        verbose_name = \"Component\"\r\n\r\n\r\nclass ComponentA(Component):\r\n    class Meta:\r\n        verbose_name = \"ComponentA\"\r\n\r\n    subComponent = models.OneToOneField(\r\n        \"ComponentAA\"\r\n        on_delete=models.CASCADE\r\n    )\r\n\r\nclass ComponentAA(models.Model):\r\n    class Meta:\r\n        verbose_name = \"Corpus media\"\r\n\r\n    someText = models.Charfield(\r\n        default = \"some string\"\r\n    )\r\n```\r\n### Serializers\r\n```python\r\nfrom rest_framework import serializers, status, response\r\nfrom drf_writable_nested import WritableNestedModelSerializer\r\nfrom rest_polymorphic.serializers import PolymorphicSerializer\r\nfrom .models import Component, ComponentA, ComponentAA\r\n\r\nclass ComponentAASerializer(serializer.ModelSerializer):\r\n    class Meta:\r\n        model = ComponentAA\r\n        fields = ('id', 'someText')\r\n\r\n\r\nclass ComponentASerializer(WritableNestedModelSerializer):\r\n    subComponent = ComponentAASerializer(many=False)\r\n\r\n    class Meta:\r\n        model = ComponentA\r\n        fields = ('id', 'subComponent')\r\n\r\n\r\nclass ComponentSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Component\r\n        fields = '__all__'\r\n\r\n\r\nclass ComponentPolymorphicSerializer(PolymorphicSerializer, WritableNestedModelSerializer):\r\n    class Meta:\r\n        model = Component\r\n        fields = '__all__'\r\n\r\n    model_serializer_mapping = {\r\n        Component: ComponentSerializer,\r\n        ComponentA: ComponentASerializer\r\n    }\r\n\r\n    def to_resource_type(self, model_or_instance):\r\n        return model_or_instance._meta.object_name.lower()\r\n```\r\n\r\nAny ideas on why this is happening?\r\n\r\nThank you in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/73", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/73/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/73/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/73", "id": 405759844, "node_id": "MDU6SXNzdWU0MDU3NTk4NDQ=", "number": 73, "title": "Avoid update to other instances", "user": {"login": "rbusquet", "id": 7198302, "node_id": "MDQ6VXNlcjcxOTgzMDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7198302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbusquet", "html_url": "https://github.com/rbusquet", "followers_url": "https://api.github.com/users/rbusquet/followers", "following_url": "https://api.github.com/users/rbusquet/following{/other_user}", "gists_url": "https://api.github.com/users/rbusquet/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbusquet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbusquet/subscriptions", "organizations_url": "https://api.github.com/users/rbusquet/orgs", "repos_url": "https://api.github.com/users/rbusquet/repos", "events_url": "https://api.github.com/users/rbusquet/events{/privacy}", "received_events_url": "https://api.github.com/users/rbusquet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-01T15:53:25Z", "updated_at": "2019-06-29T09:36:23Z", "closed_at": "2019-02-11T22:12:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need help on an issue I'm having and I don't see a standalone solution for this inside this project without overriding the parent serializer.\r\n\r\nI have serializers setup like this:\r\n\r\n```python\r\nclass ChildSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Child\r\n        fields = ('pk', 'name')\r\n\r\n\r\nclass ParentSerializer(WritableNestedModelSerializer):\r\n    child = ChildSerializer()\r\n\r\n    class Meta:\r\n        model = Parent\r\n        fields = ('pk', 'name', 'child')\r\n```\r\n\r\nI have two instances of each model set up like this;\r\n\r\n```python\r\n>>> Parent.objects.values()\r\n<QuerySet [{'id': 1, 'name': 'parent 1', 'child_id': 1}, {'id': 2, 'name': 'parent 2', 'child_id': 2}]>\r\n>>> Child.objects.values()\r\n<QuerySet [{'id': 1, 'name': 'child 1'}, {'id': 2, 'name': 'child 2'}]>\r\n```\r\n\r\nIf I setup my POST or PATCH request like this:\r\n\r\n```json\r\nPOST /api/parent/1\r\n{\r\n    \"name\": \"Changing parent 1\", \r\n    \"child\": {\r\n        \"pk\": 2, \r\n        \"name\": \"Changing name of child 2\"\r\n    }\r\n}\r\n```\r\nI end-up altering the child with id 2 and setting this value on parent 1.\r\n\r\n```python\r\n>>> Parent.objects.values()\r\n<QuerySet [{'id': 1, 'name': 'Changing parent 1', 'child_id': 2}, {'id': 2, 'name': 'parent 2', 'child_id': 2}]>\r\n>>> Child.objects.values()\r\n<QuerySet [{'id': 1, 'name': 'child 1'}, {'id': 2, 'name': 'Changing name of child 2'}]>\r\n```\r\n\r\nIs there a way to avoid this? Now I have to override `validate_child` on the parent serializer and check `initial_data` to see if the pk is different.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/64", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/64/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/64/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/64", "id": 394725659, "node_id": "MDU6SXNzdWUzOTQ3MjU2NTk=", "number": 64, "title": "Nested WritableNestedModelSerializer's fail to associate model tables correctly if in reverse alphabetic order", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-28T21:49:02Z", "updated_at": "2019-01-04T14:02:36Z", "closed_at": "2019-01-04T14:02:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Minimal Example\r\n\r\nConsider this minimal example:\r\n\r\n```py\r\nfrom django.db import models\r\nfrom drf_writable_nested import WritableNestedModelSerializer\r\nfrom rest_framework.serializers import ModelSerializer\r\n\r\n\r\nclass House(models.Model):\r\n    pass\r\n\r\n\r\nclass Cat(models.Model):\r\n    house = models.ForeignKey(House, related_name='cats', on_delete=models.CASCADE, null=True)\r\n\r\n\r\nclass CatPoint(models.Model):\r\n    cat = models.ForeignKey(Cat, related_name='location', on_delete=models.CASCADE, null=True)\r\n    x = models.FloatField()\r\n    y = models.FloatField()\r\n\r\n\r\nclass CatPointSerializer(ModelSerializer):\r\n    class Meta:\r\n        model = CatPoint\r\n        fields = '__all__'\r\n\r\n\r\nclass CatSerializer(WritableNestedModelSerializer):\r\n    location = CatPointSerializer(many=True)\r\n\r\n    class Meta:\r\n        model = Cat\r\n        fields = '__all__'\r\n\r\n\r\nclass HouseSerializer(WritableNestedModelSerializer):\r\n    cats = CatSerializer(many=True)\r\n\r\n    class Meta:\r\n        model = House\r\n        fields = '__all__'\r\n\r\n\r\ndata = {\r\n    \"cats\": [\r\n        {\r\n            \"location\": [\r\n                {\r\n                    \"x\": 1.0,\r\n                    \"y\": 2.0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nserializer = HouseSerializer(data=data)\r\na = serializer.is_valid()\r\nserializer.save()\r\n```\r\n\r\nResults in the following traceback:\r\n\r\n```\r\nUnhandled exception in thread started by <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x10723b940>\r\nTraceback (most recent call last):\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/backends/sqlite3/base.py\", line 296, in execute\r\n    return Database.Cursor.execute(self, query, params)\r\nsqlite3.OperationalError: no such table: main.polls_cat__old\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pydev/_pydev_bundle/pydev_monkey.py\", line 632, in __call__\r\n    return self.original_func(*self.args, **self.kwargs)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/utils/autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/core/management/commands/runserver.py\", line 117, in inner_run\r\n    self.check(display_num_errors=True)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/core/management/base.py\", line 379, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/core/management/base.py\", line 366, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/core/checks/registry.py\", line 71, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/core/checks/urls.py\", line 13, in check_url_config\r\n    return check_resolver(resolver)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/core/checks/urls.py\", line 23, in check_resolver\r\n    return check_method()\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/urls/resolvers.py\", line 396, in check\r\n    for pattern in self.url_patterns:\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/utils/functional.py\", line 37, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/urls/resolvers.py\", line 533, in url_patterns\r\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/utils/functional.py\", line 37, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/urls/resolvers.py\", line 526, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Users/user/PycharmProjects/django-test/proj/proj/urls.py\", line 20, in <module>\r\n    path('', include('polls.urls')),\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/urls/conf.py\", line 34, in include\r\n    urlconf_module = import_module(urlconf_module)\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Users/user/PycharmProjects/django-test/proj/polls/urls.py\", line 57, in <module>\r\n    serializer.save()\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/drf_writable_nested/mixins.py\", line 220, in save\r\n    return super(BaseNestedModelSerializer, self).save(**kwargs)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/rest_framework/serializers.py\", line 214, in save\r\n    self.instance = self.create(validated_data)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/drf_writable_nested/mixins.py\", line 248, in create\r\n    self.update_or_create_reverse_relations(instance, reverse_relations)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/drf_writable_nested/mixins.py\", line 175, in update_or_create_reverse_relations\r\n    related_instance = serializer.save(**save_kwargs)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/drf_writable_nested/mixins.py\", line 220, in save\r\n    return super(BaseNestedModelSerializer, self).save(**kwargs)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/rest_framework/serializers.py\", line 214, in save\r\n    self.instance = self.create(validated_data)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/drf_writable_nested/mixins.py\", line 248, in create\r\n    self.update_or_create_reverse_relations(instance, reverse_relations)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/drf_writable_nested/mixins.py\", line 175, in update_or_create_reverse_relations\r\n    related_instance = serializer.save(**save_kwargs)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/rest_framework/serializers.py\", line 214, in save\r\n    self.instance = self.create(validated_data)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/rest_framework/serializers.py\", line 940, in create\r\n    instance = ModelClass._default_manager.create(**validated_data)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/models/manager.py\", line 82, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/models/query.py\", line 413, in create\r\n    obj.save(force_insert=True, using=self.db)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/models/base.py\", line 718, in save\r\n    force_update=force_update, update_fields=update_fields)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/models/base.py\", line 748, in save_base\r\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/models/base.py\", line 831, in _save_table\r\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/models/base.py\", line 869, in _do_insert\r\n    using=using, raw=raw)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/models/manager.py\", line 82, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/models/query.py\", line 1136, in _insert\r\n    return query.get_compiler(using=using).execute_sql(return_id)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/models/sql/compiler.py\", line 1289, in execute_sql\r\n    cursor.execute(sql, params)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/backends/utils.py\", line 100, in execute\r\n    return super().execute(sql, params)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/backends/utils.py\", line 68, in execute\r\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/backends/utils.py\", line 77, in _execute_with_wrappers\r\n    return executor(sql, params, many, context)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/utils.py\", line 89, in __exit__\r\n    raise dj_exc_value.with_traceback(traceback) from exc_value\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/Users/user/.local/share/virtualenvs/proj/lib/python3.7/site-packages/django/db/backends/sqlite3/base.py\", line 296, in execute\r\n    return Database.Cursor.execute(self, query, params)\r\ndjango.db.utils.OperationalError: no such table: main.polls_cat__old\r\n```\r\n\r\nNote the suspicious `polls_cat__old`. This seems to be triggered because how models are created alphabetically:\r\n\r\n```bash\r\n$ ./manage.py makemigrations\r\nMigrations for 'polls':\r\n  polls/migrations/0001_initial.py\r\n    - Create model Cat\r\n    - Create model CatPoint\r\n    - Create model House\r\n    - Add field house to cat\r\n```\r\n\r\nNote how because `Cat` has a `ForeignKey` to `House`, its final creation is deferred and updated until after `House` is created after `Cat`.\r\n\r\nIf the code is refactored so that `House` -> `AnimalHouse`, so that it is first alphabetically:\r\n\r\n```py\r\nfrom django.db import models\r\nfrom drf_writable_nested import WritableNestedModelSerializer\r\nfrom rest_framework.serializers import ModelSerializer\r\n\r\n\r\nclass AnimalHouse(models.Model):\r\n    pass\r\n\r\n\r\nclass Cat(models.Model):\r\n    house = models.ForeignKey(AnimalHouse, related_name='cats', on_delete=models.CASCADE, null=True)\r\n\r\n\r\nclass CatPoint(models.Model):\r\n    cat = models.ForeignKey(Cat, related_name='location', on_delete=models.CASCADE, null=True)\r\n    x = models.FloatField()\r\n    y = models.FloatField()\r\n\r\n\r\nclass CatPointSerializer(ModelSerializer):\r\n    class Meta:\r\n        model = CatPoint\r\n        fields = '__all__'\r\n\r\n\r\nclass CatSerializer(WritableNestedModelSerializer):\r\n    location = CatPointSerializer(many=True)\r\n\r\n    class Meta:\r\n        model = Cat\r\n        fields = '__all__'\r\n\r\n\r\nclass HouseSerializer(WritableNestedModelSerializer):\r\n    cats = CatSerializer(many=True)\r\n\r\n    class Meta:\r\n        model = AnimalHouse\r\n        fields = '__all__'\r\n\r\n\r\ndata = {\r\n    \"cats\": [\r\n        {\r\n            \"location\": [\r\n                {\r\n                    \"x\": 1.0,\r\n                    \"y\": 2.0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nserializer = HouseSerializer(data=data)\r\na = serializer.is_valid()\r\nserializer.save()\r\n```\r\n\r\nNote the output difference in `makemigrations`:\r\n\r\n```bash\r\n$ ./manage.py makemigrations\r\nMigrations for 'polls':\r\n  polls/migrations/0001_initial.py\r\n    - Create model AnimalHouse\r\n    - Create model Cat\r\n    - Create model CatPoint\r\n```\r\n\r\nNow the same input `data` passes.\r\n\r\n## Environment\r\n\r\nThe exact versions used:\r\n\r\n```bash\r\n$ pip freeze\r\nDjango==2.1.4\r\ndjango-rest-framework==0.1.0\r\ndjangorestframework==3.9.0\r\ndrf-writable-nested==0.5.1\r\npytz==2018.7\r\n```\r\n\r\nDatabase settings:\r\n\r\n```py\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\r\n    }\r\n}\r\n```\r\n\r\n# The Problem\r\n\r\nIs this a problem in `drf-writable-nested`, DRF itself, something else? Is`WritableNestedModelSerializer` somehow getting a reference to the temporary / old table?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/62", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/62/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/62/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/62", "id": 394639347, "node_id": "MDU6SXNzdWUzOTQ2MzkzNDc=", "number": 62, "title": "Support Python 3.7", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-28T13:39:50Z", "updated_at": "2019-01-10T11:40:42Z", "closed_at": "2019-01-10T11:40:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For Travis what is needed is: https://github.com/travis-ci/travis-ci/issues/9815#issue-336465122\r\n\r\nI tried to create a big PR to do this in #59, but some of the builds didn't work with the updated matrix, perhaps because of mismatches discussed below.\r\n\r\nSupported Django/Python versions are:\r\nhttps://docs.djangoproject.com/en/2.1/faq/install/#what-python-version-can-i-use-with-django\r\n\r\nNote that currently we test with versions of Python that aren't supported for the corresponding versions of Python. That will probably need to be fixed at some point. For example, Django 2.0 is tested with Python 2.7, but Django 2.0 doesn't officially support Python 2.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/56", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/56/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/56/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/56", "id": 378612285, "node_id": "MDU6SXNzdWUzNzg2MTIyODU=", "number": 56, "title": "many to many use through error: Cannot use add() on a ManyToManyField which specifies an intermediary model. Use backbay.Content_Tags's Manager instead.", "user": {"login": "iyuhang", "id": 14176635, "node_id": "MDQ6VXNlcjE0MTc2NjM1", "avatar_url": "https://avatars1.githubusercontent.com/u/14176635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iyuhang", "html_url": "https://github.com/iyuhang", "followers_url": "https://api.github.com/users/iyuhang/followers", "following_url": "https://api.github.com/users/iyuhang/following{/other_user}", "gists_url": "https://api.github.com/users/iyuhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/iyuhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iyuhang/subscriptions", "organizations_url": "https://api.github.com/users/iyuhang/orgs", "repos_url": "https://api.github.com/users/iyuhang/repos", "events_url": "https://api.github.com/users/iyuhang/events{/privacy}", "received_events_url": "https://api.github.com/users/iyuhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-08T07:40:31Z", "updated_at": "2018-12-08T13:48:54Z", "closed_at": "2018-12-08T13:48:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "many to many use through error: Cannot use add() on a ManyToManyField which specifies an intermediary model. Use backbay.Content_Tags's Manager instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/55", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/55/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/55/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/55", "id": 375303525, "node_id": "MDU6SXNzdWUzNzUzMDM1MjU=", "number": 55, "title": "Getting Error The `.create()` method does not support writable nested fields by default", "user": {"login": "sohaibfarooqi", "id": 13061583, "node_id": "MDQ6VXNlcjEzMDYxNTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/13061583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sohaibfarooqi", "html_url": "https://github.com/sohaibfarooqi", "followers_url": "https://api.github.com/users/sohaibfarooqi/followers", "following_url": "https://api.github.com/users/sohaibfarooqi/following{/other_user}", "gists_url": "https://api.github.com/users/sohaibfarooqi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sohaibfarooqi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sohaibfarooqi/subscriptions", "organizations_url": "https://api.github.com/users/sohaibfarooqi/orgs", "repos_url": "https://api.github.com/users/sohaibfarooqi/repos", "events_url": "https://api.github.com/users/sohaibfarooqi/events{/privacy}", "received_events_url": "https://api.github.com/users/sohaibfarooqi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-30T03:22:29Z", "updated_at": "2018-10-30T03:39:56Z", "closed_at": "2018-10-30T03:39:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nFirst of all thanks for wonderful effort in developing such a useful package. Unfortunately I am facing an issue while I try to use it. My code is below\r\n\r\n**Models**\r\n```\r\nfrom django.db import models\r\n\r\nclass A(models.Model):\r\n\tuid = models.CharField(max_length=300)\r\n\r\nclass B(models.Model):\r\n\tstreet = models.CharField(max_length=100, null=True, blank=True)\r\n\tmodel_a = models.ForeignKey(A, on_delete=models.CASCADE, related_name='matched_model')\r\n```\r\n**Serializers**\r\n```\r\nfrom rest_framework import serializers\r\nfrom drf_writable_nested import WritableNestedModelSerializer\r\n\r\nclass BSerializer(serializers.ModelSerializer):\r\n\tclass Meta:\r\n\t\tmodel = B\r\n\t\tfields = ('pk', 'street')\r\n\r\nclass ASerializer(WritableNestedModelSerializer):\r\n\tclass Meta:\r\n\t\tmodel = A\r\n\t\tfields = ('pk', 'uid', 'addrs',)\r\n\r\n\taddrs = BSerializer(many=True)\r\n```\r\n\r\nI tried with following JSON\r\n```\r\n{\r\n\t\"uid\": \"e923a7d0-2269-43c3-836e-9aa08a70d746\",\r\n\t\"addrs\": [\r\n\t      {\r\n\t\t\"street\" : \"1513 S Providence Rd, Columbia, Missouri, United States, 65211-0001\"\r\n\t       }\r\n\t]\r\n}\r\n```\r\n\r\nI get an error saying:\r\n```\r\nThe `.create()` method does not support writable nested fields by default.\r\nWrite an explicit `.create()` method for serializer `app.serializers.ASerializer`, or set `read_only=True` on nested serializer fields.\r\n```\r\n\r\nCan anyone point out what I did wrong? \r\nI am using \r\n - Django===2.1.2\r\n - Python===3.7.0\r\n - Djangorestframework===3.9.0\r\n - drf-writable-nested===0.5.1\r\n\r\nThanks in Advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/54", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/54/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/54/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/54", "id": 374062582, "node_id": "MDU6SXNzdWUzNzQwNjI1ODI=", "number": 54, "title": "Nested update validation fails when mixing partial and non-partial updates", "user": {"login": "mumumumu", "id": 1393482, "node_id": "MDQ6VXNlcjEzOTM0ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1393482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mumumumu", "html_url": "https://github.com/mumumumu", "followers_url": "https://api.github.com/users/mumumumu/followers", "following_url": "https://api.github.com/users/mumumumu/following{/other_user}", "gists_url": "https://api.github.com/users/mumumumu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mumumumu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mumumumu/subscriptions", "organizations_url": "https://api.github.com/users/mumumumu/orgs", "repos_url": "https://api.github.com/users/mumumumu/repos", "events_url": "https://api.github.com/users/mumumumu/events{/privacy}", "received_events_url": "https://api.github.com/users/mumumumu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-25T17:56:40Z", "updated_at": "2018-12-08T15:37:04Z", "closed_at": "2018-12-08T15:31:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having some issues with mixing partial and non-partial updates after upgrading to v0.5.1. I believe the problem stems from [this change](https://github.com/beda-software/drf-writable-nested/blob/v0.5.1/drf_writable_nested/mixins.py#L83). In my case I have an intermediate serializer that is being initialized as non-partial. As a result, a child serializer further down the chain is using the non-partial logic when performing validation when it should actually be partial.\r\n\r\nMy serializers are defined like this:\r\n```py\r\nclass ParentSerializer(WritableNestedModelSerializer):\r\n    intermediates = IntermediateSerializer(required=False, many=True)\r\n\r\n    class Meta:\r\n        model = Parent\r\n        fields = ('pk', 'intermediates', 'value_x', )\r\n\r\nclass IntermediateSerializer(WritableNestedModelSerializer):\r\n    child = ChildSerializer()\r\n\r\n    class Meta:\r\n        model = Intermediate\r\n        fields = ('pk', 'child', 'value_y', )\r\n\r\nclass ChildSerializer(ModelSerializer):\r\n    class Meta:\r\n        model = Child\r\n        fields = ('pk', 'value_z', )\r\n```\r\nI'm performing a patch operation on an existing `Parent` object, trying to create a new `Intermediate` object tied to an existing `Child` object with pk = 1234. The patch data would look like:\r\n```py\r\n{\r\n   'intermediates': [\r\n      {\r\n         'child': {\r\n            'pk': 1234\r\n         }\r\n      }\r\n   ]\r\n}\r\n```\r\nTrying to perform an update with this data results in the following error (`value_z` being a required field on the `Child` model):\r\n```py\r\n{\r\n    'intermediates': [\r\n        {\r\n            'child': {\r\n                'value_z': [ErrorDetail(string='This field is required.', value_z='required')]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\nThe `ChildSerializer` is trying to validate as if it's a non-partial update.\r\n\r\nAny ideas on a good solution for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/53", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/53/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/53/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/53", "id": 360760786, "node_id": "MDU6SXNzdWUzNjA3NjA3ODY=", "number": 53, "title": "Have a full validation for the child when performing a patch update on parent", "user": {"login": "yuekui", "id": 2561450, "node_id": "MDQ6VXNlcjI1NjE0NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2561450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuekui", "html_url": "https://github.com/yuekui", "followers_url": "https://api.github.com/users/yuekui/followers", "following_url": "https://api.github.com/users/yuekui/following{/other_user}", "gists_url": "https://api.github.com/users/yuekui/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuekui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuekui/subscriptions", "organizations_url": "https://api.github.com/users/yuekui/orgs", "repos_url": "https://api.github.com/users/yuekui/repos", "events_url": "https://api.github.com/users/yuekui/events{/privacy}", "received_events_url": "https://api.github.com/users/yuekui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-17T08:08:19Z", "updated_at": "2018-09-17T08:09:22Z", "closed_at": "2018-09-17T08:09:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For the optional child nodes, they may be created in a update(patch/put) operation, in such scenario, we should always perform a full validate on the child nodes, otherwise, it may fail in DB inserting.\r\n#51 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/52", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/52/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/52/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/52", "id": 360453459, "node_id": "MDU6SXNzdWUzNjA0NTM0NTk=", "number": 52, "title": "KeyError in `delete_reverse_relations_if_need`?", "user": {"login": "ckcollab", "id": 2185159, "node_id": "MDQ6VXNlcjIxODUxNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2185159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckcollab", "html_url": "https://github.com/ckcollab", "followers_url": "https://api.github.com/users/ckcollab/followers", "following_url": "https://api.github.com/users/ckcollab/following{/other_user}", "gists_url": "https://api.github.com/users/ckcollab/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckcollab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckcollab/subscriptions", "organizations_url": "https://api.github.com/users/ckcollab/orgs", "repos_url": "https://api.github.com/users/ckcollab/repos", "events_url": "https://api.github.com/users/ckcollab/events{/privacy}", "received_events_url": "https://api.github.com/users/ckcollab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-14T21:00:28Z", "updated_at": "2018-09-14T23:16:48Z", "closed_at": "2018-09-14T23:16:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Models\r\n\r\n```python\r\nclass Competition(models.Model):\r\n    ...\r\n\r\nclass Phase(models.Model):\r\n    competition = models.ForeignKey(Competition, on_delete=models.CASCADE, related_name='phases')\r\n    ...\r\n```\r\n\r\n### Serializers\r\n\r\n```\r\nclass PhaseSerializer(WritableNestedModelSerializer):\r\n    class Meta:\r\n        model = Phase\r\n        fields = (\r\n            'id',\r\n            # Competition is no longer referenced from here, I removed it some time ago to fix something,\r\n            # I believe?\r\n            # 'competition',\r\n        )\r\n\r\n\r\nclass CompetitionSerializer(WritableNestedModelSerializer):\r\n    producer = ProducerSerializer(required=False, validators=[])\r\n    phases = PhaseSerializer(required=False, many=True)\r\n    \r\n   ...\r\n\r\n    def create(self, validated_data):\r\n        \"\"\"\r\n        This creates *AND* updates based on the combination of (remote_id, producer)\r\n        \"\"\"\r\n        try:\r\n            temp_instance = Competition.objects.get(\r\n                remote_id=validated_data.get('remote_id'),\r\n                producer__id=self.context['producer'].id\r\n            )\r\n        except ObjectDoesNotExist:\r\n            temp_instance = None\r\n        # If we have an existing instance from this producer\r\n        # with the same remote_id, update it instead of making a new one\r\n        if temp_instance:\r\n            return self.update(temp_instance, validated_data)\r\n        else:\r\n            new_instance = super().create(validated_data)\r\n            new_instance.producer = self.context['producer']\r\n            new_instance.save()\r\n            return new_instance\r\n```\r\n\r\n### The problem\r\n\r\nWhen creating a competition, things work fine. However, when I try to update the competition I receive this traceback:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 35, in inner\r\n    response = get_response(request)\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/django/core/handlers/base.py\", line 128, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/django/core/handlers/base.py\", line 126, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/rest_framework/viewsets.py\", line 103, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/rest_framework/views.py\", line 483, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/rest_framework/views.py\", line 443, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/rest_framework/views.py\", line 480, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/Users/eric/src/chahub/src/apps/api/views/competitions.py\", line 43, in create\r\n    self.perform_create(serializer)\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/rest_framework/mixins.py\", line 26, in perform_create\r\n    serializer.save()\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/rest_framework/serializers.py\", line 728, in save\r\n    self.instance = self.create(validated_data)\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/rest_framework/serializers.py\", line 700, in create\r\n    self.child.create(attrs) for attrs in validated_data\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/rest_framework/serializers.py\", line 700, in <listcomp>\r\n    self.child.create(attrs) for attrs in validated_data\r\n  File \"/Users/eric/src/chahub/src/apps/api/serializers/competitions.py\", line 131, in create\r\n    return self.update(temp_instance, validated_data)\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/drf_writable_nested/mixins.py\", line 272, in update\r\n    self.delete_reverse_relations_if_need(instance, reverse_relations)\r\n  File \"/Users/eric/.virtualenvs/chahub/lib/python3.6/site-packages/drf_writable_nested/mixins.py\", line 285, in delete_reverse_relations_if_need\r\n    related_data = self.get_initial()[field_name]\r\nKeyError: 'phases'\r\n```\r\n\r\nMaybe I am doing something stupid in my create method? The serializer is meant to handle creating OR updating if the model already exists.\r\n\r\nThanks for any help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/46", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/46/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/46/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/46", "id": 337617074, "node_id": "MDU6SXNzdWUzMzc2MTcwNzQ=", "number": 46, "title": "Remove UniqueValidator from nested serializers on create method", "user": {"login": "Nekmo", "id": 740106, "node_id": "MDQ6VXNlcjc0MDEwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/740106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nekmo", "html_url": "https://github.com/Nekmo", "followers_url": "https://api.github.com/users/Nekmo/followers", "following_url": "https://api.github.com/users/Nekmo/following{/other_user}", "gists_url": "https://api.github.com/users/Nekmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nekmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nekmo/subscriptions", "organizations_url": "https://api.github.com/users/Nekmo/orgs", "repos_url": "https://api.github.com/users/Nekmo/repos", "events_url": "https://api.github.com/users/Nekmo/events{/privacy}", "received_events_url": "https://api.github.com/users/Nekmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-02T18:21:42Z", "updated_at": "2018-08-24T02:34:12Z", "closed_at": "2018-08-23T14:28:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, first of all thank you for creating this library. I think it should be included in the core!\r\n\r\nI'm having a problem with the nested user serializer. Validation prevents set an existing user on POST method:\r\n\r\n```\r\nHTTP 400 Bad Request\r\nAllow: GET, POST, HEAD, OPTIONS\r\nContent-Type: application/json\r\nVary: Accept\r\n  \r\n{\r\n    \"user\": {\r\n        \"username\": [\r\n            \"A user with that username already exists.\"\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\nMy code:\r\n\r\n```\r\nclass UserSerializer(HispaSerializerMixin, NestedCreateMixin, NestedUpdateMixin,\r\n                     serializers.HyperlinkedModelSerializer):\r\n    class Meta:\r\n        model = get_user_model()\r\n        fields = ('url', 'id', 'username', 'first_name', 'last_name', 'is_staff', 'is_active')\r\n\r\nclass GuardianUserPermSerializer(HispaSerializerMixin,\r\n                                 NestedCreateMixin, NestedUpdateMixin,\r\n                                 serializers.HyperlinkedModelSerializer):\r\n    user = UserSerializer()\r\n\r\n    class Meta:\r\n        model = UserObjectPermission\r\n        exclude = ()\r\n\r\n```\r\n\r\nI have investigated the matter a bit and have found a solution:\r\nhttps://medium.com/django-rest-framework/dealing-with-unique-constraints-in-nested-serializers-dade33b831d9\r\n\r\nHowever, drop validation is a very dirty solution. The validation should be removed only if the user already exists. \r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/43", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/43/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/43/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/43", "id": 330184388, "node_id": "MDU6SXNzdWUzMzAxODQzODg=", "number": 43, "title": "Is support PATCH ?", "user": {"login": "kentuck13", "id": 12702963, "node_id": "MDQ6VXNlcjEyNzAyOTYz", "avatar_url": "https://avatars0.githubusercontent.com/u/12702963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kentuck13", "html_url": "https://github.com/kentuck13", "followers_url": "https://api.github.com/users/kentuck13/followers", "following_url": "https://api.github.com/users/kentuck13/following{/other_user}", "gists_url": "https://api.github.com/users/kentuck13/gists{/gist_id}", "starred_url": "https://api.github.com/users/kentuck13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kentuck13/subscriptions", "organizations_url": "https://api.github.com/users/kentuck13/orgs", "repos_url": "https://api.github.com/users/kentuck13/repos", "events_url": "https://api.github.com/users/kentuck13/events{/privacy}", "received_events_url": "https://api.github.com/users/kentuck13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-07T09:13:57Z", "updated_at": "2018-07-04T19:47:01Z", "closed_at": "2018-07-04T19:47:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "This library is support PATCH ? When i tried PATCH, i got error: \r\n`django.utils.datastructures.MultiValueDictKeyError: 'my_modal_many_to_many'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/40", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/40/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/40/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/40", "id": 319183626, "node_id": "MDU6SXNzdWUzMTkxODM2MjY=", "number": 40, "title": "DRFs built-in API not working, sending POST from elsewhere does", "user": {"login": "julianflapper", "id": 24320453, "node_id": "MDQ6VXNlcjI0MzIwNDUz", "avatar_url": "https://avatars0.githubusercontent.com/u/24320453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julianflapper", "html_url": "https://github.com/julianflapper", "followers_url": "https://api.github.com/users/julianflapper/followers", "following_url": "https://api.github.com/users/julianflapper/following{/other_user}", "gists_url": "https://api.github.com/users/julianflapper/gists{/gist_id}", "starred_url": "https://api.github.com/users/julianflapper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julianflapper/subscriptions", "organizations_url": "https://api.github.com/users/julianflapper/orgs", "repos_url": "https://api.github.com/users/julianflapper/repos", "events_url": "https://api.github.com/users/julianflapper/events{/privacy}", "received_events_url": "https://api.github.com/users/julianflapper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-01T12:16:37Z", "updated_at": "2018-06-13T09:52:14Z", "closed_at": "2018-06-13T09:51:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nJust started experimenting with drf-writable-nested and I couldn't get it to work. Very simple model, almost identical to your example in the README.md.\r\n(User and Profile, profile has OneToOne with User) \r\n\r\nI couldn't just get it to work with DRFs built-in API interface. It kept setting the profile to NULL and it was extremely frustrating. Until I found another issue here that had was also fixed by using a different client to interact with the API. So I tried that, and it worked.\r\n\r\nThe first one is the entry from the DRF API interface, and the second is from another REST client.\r\n```\r\n[\r\n    {\r\n        \"pk\": 1,\r\n        \"email\": \"john@doe.com\",\r\n        \"date_joined\": \"2018-05-01\",\r\n        \"profile\": null\r\n    },\r\n    {\r\n        \"pk\": 2,\r\n        \"email\": \"jake@doe.com\",\r\n        \"date_joined\": \"2018-05-01\",\r\n        \"profile\": {\r\n            \"pk\": 1,\r\n            \"first_name\": \"Jake\",\r\n            \"last_name\": \"Doe\"\r\n        }\r\n    }\r\n]\r\n```\r\n\r\nI do like DRFs built-in client, however. \r\nIs there anything that may cause this issue, and is there any way to solve it?\r\n\r\nEDIT:\r\nVersions\r\nPython 3.6\r\nDjango 2.0.4\r\nDRF 3.8.2\r\ndrf-writable-nested 0.4.2\r\n\r\nEDIT2:\r\nMore specifically, it seems to make the profile field NULL when sent form the HTML form window in DRF, while it does work normally when sent from the Raw data tab.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/39", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/39/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/39/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/39", "id": 316223385, "node_id": "MDU6SXNzdWUzMTYyMjMzODU=", "number": 39, "title": "Removing nested objects from validated_data during create", "user": {"login": "stuartaccent", "id": 20105514, "node_id": "MDQ6VXNlcjIwMTA1NTE0", "avatar_url": "https://avatars3.githubusercontent.com/u/20105514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuartaccent", "html_url": "https://github.com/stuartaccent", "followers_url": "https://api.github.com/users/stuartaccent/followers", "following_url": "https://api.github.com/users/stuartaccent/following{/other_user}", "gists_url": "https://api.github.com/users/stuartaccent/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuartaccent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuartaccent/subscriptions", "organizations_url": "https://api.github.com/users/stuartaccent/orgs", "repos_url": "https://api.github.com/users/stuartaccent/repos", "events_url": "https://api.github.com/users/stuartaccent/events{/privacy}", "received_events_url": "https://api.github.com/users/stuartaccent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 542372799, "node_id": "MDU6TGFiZWw1NDIzNzI3OTk=", "url": "https://api.github.com/repos/beda-software/drf-writable-nested/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-20T11:00:27Z", "updated_at": "2018-04-23T04:35:27Z", "closed_at": "2018-04-23T04:35:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know this is an odd thing to do, I just want to see if its considered a bug.\r\n\r\nConsider the following:\r\n\r\n```\r\nclass ChildSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Child\r\n        fields = ('id', 'name')\r\n\r\nclass ParentSerializer(WritableNestedModelSerializer):\r\n    children = ChildSerializer(many=True)\r\n\r\n    class Meta:\r\n        model = Parent\r\n        fields = ('id', 'name', 'children')\r\n\r\n    def create(self, validated_data):\r\n        del validated_data['children'][0]\r\n        return super().create(validated_data)\r\n\r\n# TEST\r\nclass RemovingValidatedDataTests(TestCase):\r\n\r\n    def test_should_not_save_deleted(self):\r\n        data = {\r\n            'name': 'Fred Smith',\r\n            'children': [\r\n                {'name': 'Bobby'},\r\n                {'name': 'Steve'}\r\n            ]\r\n        }\r\n        serializer = ParentSerializer(data=data)\r\n        self.assertTrue(serializer.is_valid())\r\n        serializer.save()\r\n\r\n        self.assertEqual(Parent.objects.count(), 1)\r\n        self.assertEqual(Child.objects.count(), 1) . # fails is still 2\r\n```\r\n\r\nUsing the above the `Child.objects.count()` is still `2` due to the fact that the `ChildSerializer` has the `ParentSerializer.initial_data['children']` passed to it, and does not ever go near what was validated by the `ParentSerializer`.\r\n\r\nYour thoughts would be appreciated. Thanks, Stu", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/37", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/37/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/37/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/37", "id": 305764660, "node_id": "MDU6SXNzdWUzMDU3NjQ2NjA=", "number": 37, "title": "Can this package be made to not depend on contenttypes?", "user": {"login": "infintesimal", "id": 2010165, "node_id": "MDQ6VXNlcjIwMTAxNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2010165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infintesimal", "html_url": "https://github.com/infintesimal", "followers_url": "https://api.github.com/users/infintesimal/followers", "following_url": "https://api.github.com/users/infintesimal/following{/other_user}", "gists_url": "https://api.github.com/users/infintesimal/gists{/gist_id}", "starred_url": "https://api.github.com/users/infintesimal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infintesimal/subscriptions", "organizations_url": "https://api.github.com/users/infintesimal/orgs", "repos_url": "https://api.github.com/users/infintesimal/repos", "events_url": "https://api.github.com/users/infintesimal/events{/privacy}", "received_events_url": "https://api.github.com/users/infintesimal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-16T00:31:54Z", "updated_at": "2018-04-20T16:58:50Z", "closed_at": "2018-04-20T16:58:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw this package and was excited for the ease of using writable nested serializers. But then I realized it doesn't work in my app because I don't run django.contrib.contenttypes (nor do I want to for many reasons).\r\n\r\nThis is an open ended ask, I am happy to help if it can be done and if it would merit the effort.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/35", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/35/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/35/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/35", "id": 304775502, "node_id": "MDU6SXNzdWUzMDQ3NzU1MDI=", "number": 35, "title": "test", "user": {"login": "ir4y", "id": 1488983, "node_id": "MDQ6VXNlcjE0ODg5ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1488983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ir4y", "html_url": "https://github.com/ir4y", "followers_url": "https://api.github.com/users/ir4y/followers", "following_url": "https://api.github.com/users/ir4y/following{/other_user}", "gists_url": "https://api.github.com/users/ir4y/gists{/gist_id}", "starred_url": "https://api.github.com/users/ir4y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ir4y/subscriptions", "organizations_url": "https://api.github.com/users/ir4y/orgs", "repos_url": "https://api.github.com/users/ir4y/repos", "events_url": "https://api.github.com/users/ir4y/events{/privacy}", "received_events_url": "https://api.github.com/users/ir4y/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-13T13:57:56Z", "updated_at": "2018-03-15T03:50:52Z", "closed_at": "2018-03-15T03:50:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/34", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/34/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/34/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/34", "id": 304278794, "node_id": "MDU6SXNzdWUzMDQyNzg3OTQ=", "number": 34, "title": "OneToOne field partial_update with unique tel get unique error.", "user": {"login": "yinkh", "id": 8170059, "node_id": "MDQ6VXNlcjgxNzAwNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8170059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinkh", "html_url": "https://github.com/yinkh", "followers_url": "https://api.github.com/users/yinkh/followers", "following_url": "https://api.github.com/users/yinkh/following{/other_user}", "gists_url": "https://api.github.com/users/yinkh/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinkh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinkh/subscriptions", "organizations_url": "https://api.github.com/users/yinkh/orgs", "repos_url": "https://api.github.com/users/yinkh/repos", "events_url": "https://api.github.com/users/yinkh/events{/privacy}", "received_events_url": "https://api.github.com/users/yinkh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-12T08:32:17Z", "updated_at": "2018-04-23T10:11:00Z", "closed_at": "2018-04-23T10:11:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "`models.py`:\r\n```\r\nclass User(AbstractBaseUser, PermissionsMixin):\r\n    tel = CharNullField(max_length=20,\r\n                        unique=True,\r\n                        null=True,\r\n                        error_messages={\r\n                            'unique': \"The number is registered.\",\r\n                        },\r\n                        verbose_name='tel')\r\n\r\nclass Staff(models.Model):\r\n    user = models.OneToOneField('user.User',\r\n                                null=True,\r\n                                on_delete=models.CASCADE,\r\n                                verbose_name='user ')\r\n```\r\n\r\n`serializers.py`:\r\n\r\n```\r\nclass StaffUserCreateSerializer(ModelSerializer):\r\n\r\n    def create(self, validated_data):\r\n        groups = validated_data.pop('groups')\r\n        instance = User.objects.create_user(**validated_data)\r\n        instance.groups.add(*groups)\r\n        return instance\r\n\r\n    def update(self, instance, validated_data):\r\n        password = validated_data.pop('password')\r\n        super(StaffUserCreateSerializer, self).update(instance, validated_data)\r\n        instance.set_password(password)\r\n        instance.save()\r\n        return instance\r\n\r\n    def validate_password(self, value):\r\n        password_validation.validate_password(value)\r\n        return value\r\n\r\n    class Meta:\r\n        model = User\r\n        fields = ('id', 'name', 'tel', 'email', 'password', 'is_active', 'is_staff', 'groups')\r\n\r\nclass StaffModifySerializer(WritableNestedModelSerializer):\r\n    user = StaffUserCreateSerializer(label='User', partial=True)\r\n\r\n    class Meta:\r\n        model = Staff\r\n        fields = ('user', 'job_state', 'bank_no', 'social_security_no', 'on_job')\r\n```\r\n`tests.py`:\r\n\r\n```\r\nclass StaffTests(APITestCase):\r\n    def setUp(self):\r\n        self.user = User.objects.create_user(tel='18094213193', password='123456')\r\n        self.user.user_permissions.add(*get_model_permission(Staff))\r\n        token, _ = Token.objects.get_or_create(user=self.user)\r\n        self.access_token = token.access_token\r\n        self.group = Group.objects.create(name='test')\r\n        self.data = {\r\n            'user': {'name': 'YKH', 'tel': '17749503263',  'password': 'YKH123456']},\r\n        }\r\n\r\n    def test_staff_update(self):\r\n        \"\"\"update\"\"\"\r\n        user = User.objects.create_user(tel='17749503263', password='YKH123456')\r\n        instance = Staff.objects.create(user=user, no='17749503263')\r\n        print('original\uff1a', instance.user.id)\r\n        url = reverse('staff-detail', kwargs={'pk': instance.id})\r\n        self.client.credentials(HTTP_AUTHORIZATION='Token ' + self.access_token)\r\n        data = {\r\n            'user': {'id': 2, 'name': 'YKH1', 'tel': '17749503263', 'password': 'YKH654321'}\r\n        }\r\n        response = self.client.patch(url, data, format='json')\r\n        print('update', json.dumps(response.data, ensure_ascii=False, indent=2))\r\n        self.assertEqual(response.status_code, status.HTTP_200_OK)\r\n```\r\n\r\nwhen I run  `test_staff_update` which update nested user with same tel,I get the error ```\r\ndata\": {\r\n    \"user\": {\r\n      \"tel\": [\r\n        \"The number is registered.\"\r\n      ]\r\n    }\r\n```, I know when use `partial_update  `method you shouldn't pass the data do not need change,but i don't want do it in front end which use `VUE`.And I know this problem is cause by when get child field `user`,DRF don't pass instance kwargs to it.So i change my `StaffModifySerializer `to:\r\n\r\n```\r\nclass StaffModifySerializer(WritableNestedModelSerializer):\r\n    user = StaffUserCreateSerializer(label='user', partial=True)\r\n\r\n    class Meta:\r\n        model = Staff\r\n        fields = ('user', 'job_state', 'bank_no', 'social_security_no', 'on_job')\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super(StaffModifySerializer, self).__init__(*args, **kwargs)\r\n        import copy\r\n        initial_data = copy.deepcopy(self.initial_data)\r\n        relations, reverse_relations = self._extract_relations(initial_data)\r\n\r\n        for field_name, (field, field_source) in relations.items():\r\n            data = self.initial_data[field_name]\r\n            model_class = field.Meta.model\r\n            pk = self._get_related_pk(data, model_class)\r\n            try:\r\n                obj = model_class.objects.get(pk=pk, )\r\n\r\n                self.fields[field_name] = self._get_serializer_for_field(\r\n                    self.fields[field_name], instance=obj, data=data)\r\n            except (model_class.DoesNotExist, ValueError):\r\n                pass\r\n\r\n```\r\nthe king mind is replace field `user(StaffUserCreateSerializer(partial=True))` to new field `user(StaffUserCreateSerializer(instance=User_by_id, partial=True))`, I want to witre it inside `WritableNestedModelSerializer ` but get error when use nested `many_to_many`,when I\u2018m free\uff0cI will try to write PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/33", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/33/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/33/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/33", "id": 292475461, "node_id": "MDU6SXNzdWUyOTI0NzU0NjE=", "number": 33, "title": "RecursionError maximum recursion depth exceeded while calling a python object", "user": {"login": "igabice", "id": 14920195, "node_id": "MDQ6VXNlcjE0OTIwMTk1", "avatar_url": "https://avatars1.githubusercontent.com/u/14920195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igabice", "html_url": "https://github.com/igabice", "followers_url": "https://api.github.com/users/igabice/followers", "following_url": "https://api.github.com/users/igabice/following{/other_user}", "gists_url": "https://api.github.com/users/igabice/gists{/gist_id}", "starred_url": "https://api.github.com/users/igabice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igabice/subscriptions", "organizations_url": "https://api.github.com/users/igabice/orgs", "repos_url": "https://api.github.com/users/igabice/repos", "events_url": "https://api.github.com/users/igabice/events{/privacy}", "received_events_url": "https://api.github.com/users/igabice/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-29T16:37:49Z", "updated_at": "2018-01-30T09:14:04Z", "closed_at": "2018-01-30T08:07:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "i get this error \"RecursionError maximum recursion depth exceeded while calling a python object\" when calling serializer.save() method on SealCertificateSerializer\r\nbelow is my serializers.\r\n\r\n\r\n\r\nclass MeterSerializer(serializers.ModelSerializer):\r\n  class Meta:\r\n        model = Meter\r\n        fields = '__all__'\r\n\r\n\r\n\r\nclass SealSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Seal\r\n        fields = '__all__'\r\n\r\nclass SealProfileSerializer(serializers.ModelSerializer):\r\n    \r\n    class Meta:\r\n        model = Profile\r\n        fields = ( 'name', 'phone', 'signature', 'email', )\r\n\r\nclass SealCertificateSerializer(WritableNestedModelSerializer):\r\n    old_seal = SealSerializer(allow_null=True, many=False)\r\n    new_seal = SealSerializer(allow_null=True, many=False)\r\n    ibedc_rep = SealProfileSerializer(allow_null=True, many=False)\r\n    customer_rep = SealProfileSerializer(allow_null=True, many=False)\r\n    meter = MeterSerializer(allow_null=True, many=False)\r\n\r\n    \r\n    class Meta:\r\n        model = SealCertificate\r\n        fields = ('account_number', 'customer_name', 'address', 'region', 'b_hub', 'auth_code', 'lat', 'lng', 'meter', 'old_seal', 'new_seal', 'ibedc_rep', 'customer_rep',)\r\n\r\n    def create(self, validated_data):\r\n        sealcertificate_serializer = SealCertificateSerializer(data=validated_data)\r\n        sealcertificate_serializer.is_valid(raise_exception=True)\r\n        cert =sealcertificate_serializer.save()\r\n        return cert.data`\r\n\r\nthanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/32", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/32/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/32/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/32", "id": 282898973, "node_id": "MDU6SXNzdWUyODI4OTg5NzM=", "number": 32, "title": "TypeError: Arguments to nested serializer's `save` must be dict's problem with POST request", "user": {"login": "LegerG", "id": 23694617, "node_id": "MDQ6VXNlcjIzNjk0NjE3", "avatar_url": "https://avatars3.githubusercontent.com/u/23694617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LegerG", "html_url": "https://github.com/LegerG", "followers_url": "https://api.github.com/users/LegerG/followers", "following_url": "https://api.github.com/users/LegerG/following{/other_user}", "gists_url": "https://api.github.com/users/LegerG/gists{/gist_id}", "starred_url": "https://api.github.com/users/LegerG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LegerG/subscriptions", "organizations_url": "https://api.github.com/users/LegerG/orgs", "repos_url": "https://api.github.com/users/LegerG/repos", "events_url": "https://api.github.com/users/LegerG/events{/privacy}", "received_events_url": "https://api.github.com/users/LegerG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-18T14:35:25Z", "updated_at": "2018-01-09T09:28:07Z", "closed_at": "2018-01-09T03:47:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI have problem with nested serializers.\r\nWhen I try to save nested objects from json, I have this following error :\r\n\r\n```TypeError: Arguments to nested serializer's `save` must be dict's```\r\n\r\nThe argument passed to save is an instance of `ComponentsParent`\r\n\r\nsnippet of mixin.py (line 183)\r\n```python\r\n...\r\ndef get_save_kwargs(self, field_name):\r\n        save_kwargs = self.save_kwargs[field_name]\r\n        print(type(save_kwargs))\r\n        if not isinstance(save_kwargs, dict):\r\n            raise TypeError(\r\n                _(\"Arguments to nested serializer's `save` must be dict's\")\r\n            )\r\n\r\n        return save_kwargs\r\n...\r\n```\r\n\r\nAnd the print returned is ```<class 'my_app.models.ComponentsParent'>```\r\n\r\nMy json\r\n```json\r\n{\r\n    \"components\": {\r\n        \"name\": \"Some Name\",\r\n        \"coloring\": [{\r\n            \"color\": \"#FFFFFF\",\r\n            \"components\": [{\r\n                \"value\": \"Some Value\"\r\n            }]\r\n        },\r\n        {\r\n            \"color\": \"#000000\",\r\n            \"components\": [{\r\n                \"value\": \"Another Value\"\r\n            }]\r\n        }]\r\n    }\r\n}\r\n```\r\n\r\nmodels.py\r\n\r\n```python\r\nfrom django.db import models\r\n\r\n\r\nclass Master(models.Model):\r\n    components = models.ForeignKey('ComponentsParent', on_delete=models.CASCADE)\r\n\r\n\r\nclass ComponentsParent(models.Model):\r\n    name = models.CharField(max_length=255)\r\n\r\n\r\nclass Coloring(models.Model):\r\n    color = models.CharField(max_length=255)\r\n    components = models.ForeignKey('ComponentsParent', on_delete=models.CASCADE, related_name='coloring')\r\n\r\nclass ComponentChild(models.Model):\r\n    value = models.CharField(max_length=255)\r\n    coloring = models.ForeignKey('Coloring', on_delete=models.CASCADE, null=True, blank=True, related_name='coloring_components')\r\n```\r\n\r\nviews.py\r\n```python\r\nfrom rest_framework import viewsets\r\nfrom my_app.serializers import MasterSerializer\r\nfrom my_app.models import Master\r\n\r\n\r\nclass MasterViewSet(viewsets.ModelViewSet):\r\n    serializer_class = MasterSerializer\r\n\r\n    def get_queryset(self):\r\n        return Master.objects.all()\r\n```\r\n\r\nserializers.py\r\n```python\r\nfrom drf_writable_nested import WritableNestedModelSerializer\r\nfrom my_app.models import ComponentsParent, Coloring, ComponentChild, Master\r\n\r\n\r\nclass ComponentChildSerializer(WritableNestedModelSerializer):\r\n    class Meta:\r\n        model = ComponentChild\r\n        fields = ('value',)\r\n\r\n\r\nclass ColoringSerializer(WritableNestedModelSerializer):\r\n    components = ComponentChildSerializer(many=True, source='coloring_components')\r\n\r\n    class Meta:\r\n        model = Coloring\r\n        fields = ('color', 'components')\r\n\r\n\r\nclass ComponentsParentSerializer(WritableNestedModelSerializer):\r\n    coloring = ColoringSerializer(many=True)\r\n\r\n    class Meta:\r\n        model = ComponentsParent\r\n        fields = ('coloring', 'name')\r\n\r\n\r\nclass MasterSerializer(WritableNestedModelSerializer):\r\n    components = ComponentsParentSerializer()\r\n\r\n    class Meta:\r\n        model = Master\r\n        fields = ('components',)\r\n```\r\n\r\nurls.py\r\n\r\n```python\r\nfrom my_app import views\r\nfrom django.conf.urls import url\r\nfrom rest_framework.routers import DefaultRouter\r\n\r\nurlpatterns = [\r\n    url(r'$', views.MasterViewSet.as_view({'get': 'list', 'post': 'create'}))\r\n]\r\n\r\nrouter = DefaultRouter()\r\n```\r\n\r\nIf you want more details, i'm here.\r\n\r\nNice day :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/24", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/24/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/24/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/24", "id": 265175727, "node_id": "MDU6SXNzdWUyNjUxNzU3Mjc=", "number": 24, "title": "Support relation fields that do not have `related_name` specified ", "user": {"login": "ruscoder", "id": 3920871, "node_id": "MDQ6VXNlcjM5MjA4NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3920871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruscoder", "html_url": "https://github.com/ruscoder", "followers_url": "https://api.github.com/users/ruscoder/followers", "following_url": "https://api.github.com/users/ruscoder/following{/other_user}", "gists_url": "https://api.github.com/users/ruscoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruscoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruscoder/subscriptions", "organizations_url": "https://api.github.com/users/ruscoder/orgs", "repos_url": "https://api.github.com/users/ruscoder/repos", "events_url": "https://api.github.com/users/ruscoder/events{/privacy}", "received_events_url": "https://api.github.com/users/ruscoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-13T05:42:50Z", "updated_at": "2017-11-19T06:14:40Z", "closed_at": "2017-11-19T06:11:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/23", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/23/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/23/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/23", "id": 265175670, "node_id": "MDU6SXNzdWUyNjUxNzU2NzA=", "number": 23, "title": "Add Django 2.0 support", "user": {"login": "ruscoder", "id": 3920871, "node_id": "MDQ6VXNlcjM5MjA4NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3920871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruscoder", "html_url": "https://github.com/ruscoder", "followers_url": "https://api.github.com/users/ruscoder/followers", "following_url": "https://api.github.com/users/ruscoder/following{/other_user}", "gists_url": "https://api.github.com/users/ruscoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruscoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruscoder/subscriptions", "organizations_url": "https://api.github.com/users/ruscoder/orgs", "repos_url": "https://api.github.com/users/ruscoder/repos", "events_url": "https://api.github.com/users/ruscoder/events{/privacy}", "received_events_url": "https://api.github.com/users/ruscoder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 542372796, "node_id": "MDU6TGFiZWw1NDIzNzI3OTY=", "url": "https://api.github.com/repos/beda-software/drf-writable-nested/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-13T05:42:21Z", "updated_at": "2018-01-20T04:57:48Z", "closed_at": "2018-01-20T04:57:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/22", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/22/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/22/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/22", "id": 265051808, "node_id": "MDU6SXNzdWUyNjUwNTE4MDg=", "number": 22, "title": "AssertionError: The `.create()` method does not support writable nested fields by default.", "user": {"login": "beautifulDrifter", "id": 32745191, "node_id": "MDQ6VXNlcjMyNzQ1MTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/32745191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beautifulDrifter", "html_url": "https://github.com/beautifulDrifter", "followers_url": "https://api.github.com/users/beautifulDrifter/followers", "following_url": "https://api.github.com/users/beautifulDrifter/following{/other_user}", "gists_url": "https://api.github.com/users/beautifulDrifter/gists{/gist_id}", "starred_url": "https://api.github.com/users/beautifulDrifter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beautifulDrifter/subscriptions", "organizations_url": "https://api.github.com/users/beautifulDrifter/orgs", "repos_url": "https://api.github.com/users/beautifulDrifter/repos", "events_url": "https://api.github.com/users/beautifulDrifter/events{/privacy}", "received_events_url": "https://api.github.com/users/beautifulDrifter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-10-12T19:05:23Z", "updated_at": "2017-10-17T06:11:36Z", "closed_at": "2017-10-13T04:01:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having trouble getting this to work.  I am still getting the following but I can very clearly see the .create in your code.\r\n\r\n> AssertionError: The `.create()` method does not support writable nested fields by default.\r\n\r\nI am hoping you can help me as this is exactly what I need.  I have tinkered this with for 2 days and have not been able to get around this AssertionError.  Below is the code to reproduce.  The data all looks correct, it just won't let me save it.\r\n\r\n\r\n\r\n\r\n```\r\nclass category(models.Model):\r\n    name = models.CharField(max_length=255, help_text=\"\",blank=True)\r\n    short_name = models.CharField(max_length=255, help_text=\"\",blank=True)\r\n    external_id = models.CharField(max_length=255, help_text=\"\",blank=True)\r\n   def __str__(self):\r\n        return self.name\r\n\r\nclass response_log(models.Model):\r\n    timestamp = models.DateTimeField()\r\n    status = models.CharField(max_length = 25)\r\n  \r\nclass response_log_detail(models.Model):\r\n    response_log = models.ForeignKey(response_log)\r\n    category = models.ManyToManyField(category)\r\n```\r\n\r\n\r\n```\r\nfrom rest_framework import serializers as s\r\nfrom drf_writable_nested import WritableNestedModelSerializer\r\n\r\nclass categoryArray(s.ModelSerializer):\r\n    # Fields #\r\n    categoryId = s.IntegerField(source='external_id')\r\n    categoryName = s.CharField(source='name')\r\n    categoryBriefName = s.CharField(source='short_name')\r\n\r\n    class Meta:\r\n        model = category\r\n        fields = (\r\n                'categoryId',\r\n                'categoryName',\r\n                'categoryBriefName',\r\n                )\r\n\r\nclass getCategoriesResponse(WritableNestedModelSerializer):\r\n    # Fields #\r\n    categoryArray = categoryArray(many=True)\r\n    # errorMessage = bonanzaErrorMessage()\r\n    # warnings = bonanzaWarnings()\r\n    class Meta:\r\n        model = response_log_detail\r\n        fields = (\r\n                'pk',\r\n                'categoryArray',\r\n                # 'errorMessage',\r\n                # 'warnings',\r\n                )\r\nclass responseSerializer(WritableNestedModelSerializer):\r\n    # Fields #\r\n    getCategoriesResponse = getCategoriesResponse()\r\n    ack = s.CharField(source='status')\r\n    class Meta:\r\n        model = response_log\r\n        fields = (\r\n        'pk',\r\n        'ack',\r\n        'getCategoriesResponse',\r\n        'timestamp',\r\n        )\r\n```\r\n\r\n```\r\nresponse = {'ack': 'Success',\r\n 'getCategoriesResponse': {'categoryArray': [{'categoryBriefName': 'Collectibles',\r\n    'categoryId': 1,\r\n    'categoryLevel': 1,\r\n    'categoryName': 'Collectibles',\r\n    'leafCategory': 'false',\r\n    'traitCount': 1},\r\n   {'categoryBriefName': 'Everything Else',\r\n    'categoryId': 99,\r\n    'categoryLevel': 1,\r\n    'categoryName': 'Everything Else',\r\n    'leafCategory': 'false',\r\n    'traitCount': 5}]},\r\n 'timestamp': '2017-10-12T12:00:40.000Z',\r\n 'version': '1.0'}\r\n\r\nserializer = responseSerializer(data = response)\r\nserializer.is_valid(raise_exception=True)\r\nresponse_log = serializer.save()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/21", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/21/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/21/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/21", "id": 264292156, "node_id": "MDU6SXNzdWUyNjQyOTIxNTY=", "number": 21, "title": "test against django 1.11, 2.0 and latest drf rleases", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-10T16:23:44Z", "updated_at": "2017-10-13T05:41:56Z", "closed_at": "2017-10-13T05:41:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/20", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/20/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/20/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/20", "id": 253994548, "node_id": "MDU6SXNzdWUyNTM5OTQ1NDg=", "number": 20, "title": "Problem with User (out of the django box).", "user": {"login": "danilke", "id": 2322829, "node_id": "MDQ6VXNlcjIzMjI4Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2322829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danilke", "html_url": "https://github.com/danilke", "followers_url": "https://api.github.com/users/danilke/followers", "following_url": "https://api.github.com/users/danilke/following{/other_user}", "gists_url": "https://api.github.com/users/danilke/gists{/gist_id}", "starred_url": "https://api.github.com/users/danilke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danilke/subscriptions", "organizations_url": "https://api.github.com/users/danilke/orgs", "repos_url": "https://api.github.com/users/danilke/repos", "events_url": "https://api.github.com/users/danilke/events{/privacy}", "received_events_url": "https://api.github.com/users/danilke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-30T13:13:48Z", "updated_at": "2017-08-30T13:31:43Z", "closed_at": "2017-08-30T13:31:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I tried to create User with profile: \r\n\r\nin model.py: \r\n\r\n```\r\nfrom django.contrib.auth.models import User\r\n\r\nclass Profile(models.Model):\r\n    user = models.OneToOneField(User, related_name='profile')\r\n    city = models.CharField(max_length=250, blank=True, default='')\r\n```\r\n\r\nin serializers.py: \r\n\r\n```\r\nclass ProfileSerializer(WritableNestedModelSerializer):\r\n    class Meta:\r\n        model = Profile\r\n        fields = (\r\n            'id',\r\n            'city',\r\n        )\r\n\r\nclass UserSerializer(WritableNestedModelSerializer):\r\n    profile = ProfileSerializer()\r\n\r\n    class Meta:\r\n        model = User\r\n        fields = (\r\n            'id',\r\n            'username',\r\n            'email',\r\n            'first_name',\r\n            'last_name',\r\n            'profile',\r\n            'password',\r\n        )\r\n        extra_kwargs = {\r\n            'password': {'write_only': True},\r\n        }\r\n\r\n```\r\n\r\nthen when I send it via Postman or shell, profile doesn't create. \r\n\r\n\r\nto `http://localhost:8000/api/users/` I send: \r\n``` \r\n{\r\n    \"username\": \"wqeweeeeee\",\r\n    \"email\": \"eee@fff.eu\",\r\n    \"first_name\": \"w\",\r\n    \"last_name\": \"w\",\r\n    \"profile\": {\r\n        \"city\": \"e\"\r\n    },\r\n    \"password\": \"askdmkl\"\r\n}\r\n```\r\nand result is: \r\n```\r\n{\r\n    \"id\": 14,\r\n    \"username\": \"wqeweeeeee\",\r\n    \"email\": \"eee@fff.eu\",\r\n    \"first_name\": \"w\",\r\n    \"last_name\": \"w\",\r\n    \"profile\": null\r\n}\r\n```\r\n\r\n Other things works fine, where can be problem?  Thank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/11", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/11/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/11/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/11", "id": 235575364, "node_id": "MDU6SXNzdWUyMzU1NzUzNjQ=", "number": 11, "title": "How to do a PUT request with nested object?", "user": {"login": "danilke", "id": 2322829, "node_id": "MDQ6VXNlcjIzMjI4Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2322829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danilke", "html_url": "https://github.com/danilke", "followers_url": "https://api.github.com/users/danilke/followers", "following_url": "https://api.github.com/users/danilke/following{/other_user}", "gists_url": "https://api.github.com/users/danilke/gists{/gist_id}", "starred_url": "https://api.github.com/users/danilke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danilke/subscriptions", "organizations_url": "https://api.github.com/users/danilke/orgs", "repos_url": "https://api.github.com/users/danilke/repos", "events_url": "https://api.github.com/users/danilke/events{/privacy}", "received_events_url": "https://api.github.com/users/danilke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-13T14:32:31Z", "updated_at": "2017-06-22T07:51:38Z", "closed_at": "2017-06-14T08:39:40Z", "author_association": "NONE", "active_lock_reason": null, "body": " Hi, for example I have object Addreess: \r\n`` '{\r\n    \"zip\": 122200,\r\n    \"country\": {\r\n        \"id\": 1,\r\n        \"title\": \"Italy\"\r\n    }  \r\n}'``\r\n\r\nAnd I want to change address country to existing object France:\r\n``\"country\": {\r\n        \"id\": 2,\r\n        \"title\": \"France\"\r\n    }  ``\r\n\r\n\r\nw can I do PUT request to object without creating new column in DB? Thank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/10", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/10/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/10/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/10", "id": 233048091, "node_id": "MDU6SXNzdWUyMzMwNDgwOTE=", "number": 10, "title": "Add support for custom primary key field", "user": {"login": "ruscoder", "id": 3920871, "node_id": "MDQ6VXNlcjM5MjA4NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3920871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruscoder", "html_url": "https://github.com/ruscoder", "followers_url": "https://api.github.com/users/ruscoder/followers", "following_url": "https://api.github.com/users/ruscoder/following{/other_user}", "gists_url": "https://api.github.com/users/ruscoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruscoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruscoder/subscriptions", "organizations_url": "https://api.github.com/users/ruscoder/orgs", "repos_url": "https://api.github.com/users/ruscoder/repos", "events_url": "https://api.github.com/users/ruscoder/events{/privacy}", "received_events_url": "https://api.github.com/users/ruscoder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 542372797, "node_id": "MDU6TGFiZWw1NDIzNzI3OTc=", "url": "https://api.github.com/repos/beda-software/drf-writable-nested/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-02T00:47:42Z", "updated_at": "2017-06-22T03:01:29Z", "closed_at": "2017-06-22T03:01:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We have some issues (#9 #3) which caused by using `id` instead of `pk`.\r\n\r\nAlso, there is no way to use a custom primary key field.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/9", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/9/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/9/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/9", "id": 233038170, "node_id": "MDU6SXNzdWUyMzMwMzgxNzA=", "number": 9, "title": "Update doesn't really update", "user": {"login": "chezwhite", "id": 9041169, "node_id": "MDQ6VXNlcjkwNDExNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9041169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chezwhite", "html_url": "https://github.com/chezwhite", "followers_url": "https://api.github.com/users/chezwhite/followers", "following_url": "https://api.github.com/users/chezwhite/following{/other_user}", "gists_url": "https://api.github.com/users/chezwhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/chezwhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chezwhite/subscriptions", "organizations_url": "https://api.github.com/users/chezwhite/orgs", "repos_url": "https://api.github.com/users/chezwhite/repos", "events_url": "https://api.github.com/users/chezwhite/events{/privacy}", "received_events_url": "https://api.github.com/users/chezwhite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-01T23:29:15Z", "updated_at": "2017-06-06T02:48:19Z", "closed_at": "2017-06-06T02:48:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I installed drf-writable-nested serializers on my Django REST API and I've seen that it doesn't really update the Reverse FK relations. I have these models:\r\n```\r\nclass Question(models.Model):\r\n    title = models.CharField(max_length=500)\r\n    last_modified = models.DateField(auto_now=True)\r\n    chapter = models.ForeignKey(Chapter, on_delete=models.CASCADE, related_name='questions')\r\n\r\n    def __str__(self):\r\n        return self.title\r\n\r\n    class Meta:\r\n        unique_together = ((\"id\", \"chapter\"),)\r\n        ordering = ['id']\r\n\r\nclass Answer(models.Model):\r\n    title = models.CharField(max_length=1000)\r\n    correct = models.BooleanField(default=False)\r\n    question = models.ForeignKey(Question, on_delete=models.CASCADE, related_name='answers')\r\n\r\n    def __str__(self):\r\n        return self.title\r\n\r\n    class Meta:\r\n        unique_together = ((\"id\", \"question\"),)\r\n        ordering = ['id']\r\n```\r\nAnd these are my serializers:\r\n```\r\nclass AnswerDetailSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Answer\r\n        fields = ('id', 'title', 'correct')\r\n\r\nclass QuestionDetailSerializer(WritableNestedModelSerializer):\r\n    answers = AnswerDetailSerializer(many=True)\r\n    class Meta:\r\n        model = Question\r\n        fields = ('__all__')\r\n\r\n```\r\nSo when I update a question with nested answers it just deletes all answers and create new ones, which gives me problems since I am also using the model Answers in another ManyToMany relation saving answers in Tests.\r\n\r\nIs it because I use it wrong or it is just not updating but just delete and create? In that case I will have to write my own writable nested serializer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/4", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/4/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/4/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/4", "id": 225052329, "node_id": "MDU6SXNzdWUyMjUwNTIzMjk=", "number": 4, "title": "Can't add extra fields to serializer that is not on the model", "user": {"login": "tjwalch", "id": 1711421, "node_id": "MDQ6VXNlcjE3MTE0MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1711421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjwalch", "html_url": "https://github.com/tjwalch", "followers_url": "https://api.github.com/users/tjwalch/followers", "following_url": "https://api.github.com/users/tjwalch/following{/other_user}", "gists_url": "https://api.github.com/users/tjwalch/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjwalch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjwalch/subscriptions", "organizations_url": "https://api.github.com/users/tjwalch/orgs", "repos_url": "https://api.github.com/users/tjwalch/repos", "events_url": "https://api.github.com/users/tjwalch/events{/privacy}", "received_events_url": "https://api.github.com/users/tjwalch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-28T11:20:38Z", "updated_at": "2017-05-07T05:35:04Z", "closed_at": "2017-05-07T05:22:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sometimes you need more information on the serializer than you are going to be saved on the model. This can't be done on serializers that inherit from the drf-writable-nested one's as it expects all serializer fields to be model fields as well. This is what happens if I e g add a field called `custom_field`:\r\n```\r\nFile \"/path/to/drf_writable_nested/mixins.py\", line 73, in create\r\n    relations, reverse_relations = self._extract_relations(validated_data)\r\nFile \"/path/to/drf_writable_nested/mixins.py\", line 19, in _extract_relations\r\n    related_field, direct = self._get_related_field(field)\r\nFile \"/path/to/drf_writable_nested/mixins.py\", line 55, in _get_related_field\r\n    related_field = model_class._meta.get_field(field.source)\r\nFile \"/path/to/django/db/models/options.py\", line 619, in get_field\r\n    raise FieldDoesNotExist(\"%s has no field named '%s'\" % (self.object_name, field_name))\r\ndjango.core.exceptions.FieldDoesNotExist: Project has no field named 'custom_field'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/3", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/3/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/3/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/3", "id": 219469317, "node_id": "MDU6SXNzdWUyMTk0NjkzMTc=", "number": 3, "title": "Update on nested serializer updates pk", "user": {"login": "bluehawk27", "id": 7444851, "node_id": "MDQ6VXNlcjc0NDQ4NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7444851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluehawk27", "html_url": "https://github.com/bluehawk27", "followers_url": "https://api.github.com/users/bluehawk27/followers", "following_url": "https://api.github.com/users/bluehawk27/following{/other_user}", "gists_url": "https://api.github.com/users/bluehawk27/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluehawk27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluehawk27/subscriptions", "organizations_url": "https://api.github.com/users/bluehawk27/orgs", "repos_url": "https://api.github.com/users/bluehawk27/repos", "events_url": "https://api.github.com/users/bluehawk27/events{/privacy}", "received_events_url": "https://api.github.com/users/bluehawk27/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-05T05:02:13Z", "updated_at": "2017-04-12T01:59:15Z", "closed_at": "2017-04-12T01:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When updating a nested resource the pk/id is auto incremented as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/2", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/2/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/2/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/2", "id": 213607242, "node_id": "MDU6SXNzdWUyMTM2MDcyNDI=", "number": 2, "title": "Validation problem: custom validation errors raised from the nested serializer have a wrong path", "user": {"login": "ruscoder", "id": 3920871, "node_id": "MDQ6VXNlcjM5MjA4NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3920871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruscoder", "html_url": "https://github.com/ruscoder", "followers_url": "https://api.github.com/users/ruscoder/followers", "following_url": "https://api.github.com/users/ruscoder/following{/other_user}", "gists_url": "https://api.github.com/users/ruscoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruscoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruscoder/subscriptions", "organizations_url": "https://api.github.com/users/ruscoder/orgs", "repos_url": "https://api.github.com/users/ruscoder/repos", "events_url": "https://api.github.com/users/ruscoder/events{/privacy}", "received_events_url": "https://api.github.com/users/ruscoder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 542372796, "node_id": "MDU6TGFiZWw1NDIzNzI3OTY=", "url": "https://api.github.com/repos/beda-software/drf-writable-nested/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-12T14:14:42Z", "updated_at": "2018-08-23T10:06:40Z", "closed_at": "2018-08-23T10:03:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I've used a custom validation method inside nested serializer and raised ValidationError.\r\nFor example:\r\n```\r\nclass NestedSerializer(...):\r\n    def validate_email(self, email):\r\n        raise ValidationError(...)\r\n\r\n\r\nclass MySerializer(...):\r\n    nested = NestedSerializer()\r\n```\r\n\r\nUsually, when DRF validated data with nested serializers, generic errors have correct path (e.g. `{ nested: { email: '' } }`)\r\nIn my example, errors have wrong path (e.g. `{ email: '' }`)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/1", "repository_url": "https://api.github.com/repos/beda-software/drf-writable-nested", "labels_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/1/comments", "events_url": "https://api.github.com/repos/beda-software/drf-writable-nested/issues/1/events", "html_url": "https://github.com/beda-software/drf-writable-nested/issues/1", "id": 213605980, "node_id": "MDU6SXNzdWUyMTM2MDU5ODA=", "number": 1, "title": "Validation problem: `parent` isn't set for nested serializer's fields on the validation stage", "user": {"login": "ruscoder", "id": 3920871, "node_id": "MDQ6VXNlcjM5MjA4NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3920871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruscoder", "html_url": "https://github.com/ruscoder", "followers_url": "https://api.github.com/users/ruscoder/followers", "following_url": "https://api.github.com/users/ruscoder/following{/other_user}", "gists_url": "https://api.github.com/users/ruscoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruscoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruscoder/subscriptions", "organizations_url": "https://api.github.com/users/ruscoder/orgs", "repos_url": "https://api.github.com/users/ruscoder/repos", "events_url": "https://api.github.com/users/ruscoder/events{/privacy}", "received_events_url": "https://api.github.com/users/ruscoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-12T13:53:30Z", "updated_at": "2018-09-07T10:32:06Z", "closed_at": "2018-08-23T10:05:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I had found a problem on the validation stage when I used `UniqueValidator` for nested serializer's field.\r\nI've found the root of the problem - parent isn't set on the validation stage.", "performed_via_github_app": null, "score": 1.0}]}