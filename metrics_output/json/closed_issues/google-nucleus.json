{"total_count": 25, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/google/nucleus/issues/29", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/29/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/29/events", "html_url": "https://github.com/google/nucleus/issues/29", "id": 672978562, "node_id": "MDU6SXNzdWU2NzI5Nzg1NjI=", "number": 29, "title": "Is there any limitation for calling rare mutation?", "user": {"login": "WeiweiBian", "id": 42198522, "node_id": "MDQ6VXNlcjQyMTk4NTIy", "avatar_url": "https://avatars2.githubusercontent.com/u/42198522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WeiweiBian", "html_url": "https://github.com/WeiweiBian", "followers_url": "https://api.github.com/users/WeiweiBian/followers", "following_url": "https://api.github.com/users/WeiweiBian/following{/other_user}", "gists_url": "https://api.github.com/users/WeiweiBian/gists{/gist_id}", "starred_url": "https://api.github.com/users/WeiweiBian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WeiweiBian/subscriptions", "organizations_url": "https://api.github.com/users/WeiweiBian/orgs", "repos_url": "https://api.github.com/users/WeiweiBian/repos", "events_url": "https://api.github.com/users/WeiweiBian/events{/privacy}", "received_events_url": "https://api.github.com/users/WeiweiBian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-04T18:07:34Z", "updated_at": "2020-08-07T11:26:42Z", "closed_at": "2020-08-06T09:51:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nThanks for the magic library you developed.\r\nI wonder whether this can be used for rare mutation calling with MAF around or below 1%. I remember that there is a limitation from Deepvariant that the maximum read depth is 362 due to the Inception v3. I wonder whether this limitation also works with Nucleus.\r\nThanks!\r\nBest,\r\nWeiwei  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/28", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/28/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/28/events", "html_url": "https://github.com/google/nucleus/issues/28", "id": 635745235, "node_id": "MDU6SXNzdWU2MzU3NDUyMzU=", "number": 28, "title": "hdf5 file format not supported", "user": {"login": "tkolarik", "id": 65197733, "node_id": "MDQ6VXNlcjY1MTk3NzMz", "avatar_url": "https://avatars2.githubusercontent.com/u/65197733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkolarik", "html_url": "https://github.com/tkolarik", "followers_url": "https://api.github.com/users/tkolarik/followers", "following_url": "https://api.github.com/users/tkolarik/following{/other_user}", "gists_url": "https://api.github.com/users/tkolarik/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkolarik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkolarik/subscriptions", "organizations_url": "https://api.github.com/users/tkolarik/orgs", "repos_url": "https://api.github.com/users/tkolarik/repos", "events_url": "https://api.github.com/users/tkolarik/events{/privacy}", "received_events_url": "https://api.github.com/users/tkolarik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 880316537, "node_id": "MDU6TGFiZWw4ODAzMTY1Mzc=", "url": "https://api.github.com/repos/google/nucleus/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-09T20:42:47Z", "updated_at": "2020-06-12T15:21:05Z", "closed_at": "2020-06-12T15:21:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a common format for sequencing data storage in my field, I hope you will consider supporting it!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/27", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/27/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/27/events", "html_url": "https://github.com/google/nucleus/issues/27", "id": 567799181, "node_id": "MDU6SXNzdWU1Njc3OTkxODE=", "number": 27, "title": "User Menu for Nucleus", "user": {"login": "KuangXY3", "id": 34657428, "node_id": "MDQ6VXNlcjM0NjU3NDI4", "avatar_url": "https://avatars2.githubusercontent.com/u/34657428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KuangXY3", "html_url": "https://github.com/KuangXY3", "followers_url": "https://api.github.com/users/KuangXY3/followers", "following_url": "https://api.github.com/users/KuangXY3/following{/other_user}", "gists_url": "https://api.github.com/users/KuangXY3/gists{/gist_id}", "starred_url": "https://api.github.com/users/KuangXY3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KuangXY3/subscriptions", "organizations_url": "https://api.github.com/users/KuangXY3/orgs", "repos_url": "https://api.github.com/users/KuangXY3/repos", "events_url": "https://api.github.com/users/KuangXY3/events{/privacy}", "received_events_url": "https://api.github.com/users/KuangXY3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-19T19:39:18Z", "updated_at": "2020-03-02T19:58:15Z", "closed_at": "2020-03-02T19:50:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nDo you have user menu for nucleus, which explain each class, function and argument?\r\nFor example, what are nucleus.protos and reads_pb2.\r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/25", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/25/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/25/events", "html_url": "https://github.com/google/nucleus/issues/25", "id": 550117313, "node_id": "MDU6SXNzdWU1NTAxMTczMTM=", "number": 25, "title": "Install process is completely broken in presence of existing tensorflow install, and breaks that also", "user": {"login": "amit-jain-SBG", "id": 8313039, "node_id": "MDQ6VXNlcjgzMTMwMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8313039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amit-jain-SBG", "html_url": "https://github.com/amit-jain-SBG", "followers_url": "https://api.github.com/users/amit-jain-SBG/followers", "following_url": "https://api.github.com/users/amit-jain-SBG/following{/other_user}", "gists_url": "https://api.github.com/users/amit-jain-SBG/gists{/gist_id}", "starred_url": "https://api.github.com/users/amit-jain-SBG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amit-jain-SBG/subscriptions", "organizations_url": "https://api.github.com/users/amit-jain-SBG/orgs", "repos_url": "https://api.github.com/users/amit-jain-SBG/repos", "events_url": "https://api.github.com/users/amit-jain-SBG/events{/privacy}", "received_events_url": "https://api.github.com/users/amit-jain-SBG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "pichuan", "id": 471813, "node_id": "MDQ6VXNlcjQ3MTgxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/471813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pichuan", "html_url": "https://github.com/pichuan", "followers_url": "https://api.github.com/users/pichuan/followers", "following_url": "https://api.github.com/users/pichuan/following{/other_user}", "gists_url": "https://api.github.com/users/pichuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pichuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pichuan/subscriptions", "organizations_url": "https://api.github.com/users/pichuan/orgs", "repos_url": "https://api.github.com/users/pichuan/repos", "events_url": "https://api.github.com/users/pichuan/events{/privacy}", "received_events_url": "https://api.github.com/users/pichuan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pichuan", "id": 471813, "node_id": "MDQ6VXNlcjQ3MTgxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/471813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pichuan", "html_url": "https://github.com/pichuan", "followers_url": "https://api.github.com/users/pichuan/followers", "following_url": "https://api.github.com/users/pichuan/following{/other_user}", "gists_url": "https://api.github.com/users/pichuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pichuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pichuan/subscriptions", "organizations_url": "https://api.github.com/users/pichuan/orgs", "repos_url": "https://api.github.com/users/pichuan/repos", "events_url": "https://api.github.com/users/pichuan/events{/privacy}", "received_events_url": "https://api.github.com/users/pichuan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-01-15T11:03:41Z", "updated_at": "2020-01-19T11:46:20Z", "closed_at": "2020-01-19T11:46:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "-start with a blank machine\r\n-install tensorflow 2\r\n\r\n$`pip3 install --user google-nucleus==0.5.0`\r\n```\r\nBuilding wheels for collected packages: google-nucleus\r\n  Building wheel for google-nucleus (setup.py) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /usr/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-gd0b47d0/google-nucleus/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-gd0b47d0/google-nucleus/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-fjnjhmg0 --python-tag cp38\r\n       cwd: /tmp/pip-install-gd0b47d0/google-nucleus/\r\n  Complete output (3 lines):\r\n  /usr/lib/python3.8/site-packages/setuptools/version.py:1: UserWarning: Module google was already imported from /home/amit/.local/lib/python3.8/site-packages/google/__init__.py, but /tmp/pip-install-gd0b47d0/google-nucleus is being added to sys.path\r\n    import pkg_resources\r\n  This package does not support wheel creation.\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for google-nucleus\r\n  Running setup.py clean for google-nucleus\r\nFailed to build google-nucleus\r\nInstalling collected packages: google-nucleus\r\n    Running setup.py install for google-nucleus ... done\r\n  WARNING: Could not find .egg-info directory in install record for google-nucleus==0.5.0 from https://files.pythonhosted.org/packages/28/04/5da4ba708671d62100d7df3ce053718af58c4635080ef10d35dac7cc7c5e/google_nucleus-0.5.0.tar.gz#sha256=74b1a280a67f03c2ff751c5dcbc6a902ca5be590360b02086e8f8b55d963acfd\r\nSuccessfully installed google-nucleus\r\n```\r\nThere is a closed log explaining that this is OK.\r\n\r\nHowever, \r\n`import tensorflow as tf`\r\n```\r\nFile \"~/.local/lib/python3.8/site-packages/google/protobuf/descriptor.py\", line 530, in __new__\r\n    _message.Message._CheckCalledFromGeneratedFile()\r\nTypeError: Descriptors should not be created directly, but only retrieved from their parent.\r\n```\r\n`from nucleus.io import vcf`\r\n```\r\nFile \"~/.local/lib/python3.8/site-packages/google/protobuf/descriptor.py\", line 530, in __new__\r\n    _message.Message._CheckCalledFromGeneratedFile()\r\nTypeError: Descriptors should not be created directly, but only retrieved from their parent.\r\n```\r\nFurther,\r\n$`pip3 uninstall google-nucleus`\r\n```\r\nWARNING: Skipping google-nucleus as it is not installed.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/24", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/24/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/24/events", "html_url": "https://github.com/google/nucleus/issues/24", "id": 541839792, "node_id": "MDU6SXNzdWU1NDE4Mzk3OTI=", "number": 24, "title": "Question: How to cite Nucleus", "user": {"login": "aloraine", "id": 1826634, "node_id": "MDQ6VXNlcjE4MjY2MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1826634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloraine", "html_url": "https://github.com/aloraine", "followers_url": "https://api.github.com/users/aloraine/followers", "following_url": "https://api.github.com/users/aloraine/following{/other_user}", "gists_url": "https://api.github.com/users/aloraine/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloraine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloraine/subscriptions", "organizations_url": "https://api.github.com/users/aloraine/orgs", "repos_url": "https://api.github.com/users/aloraine/repos", "events_url": "https://api.github.com/users/aloraine/events{/privacy}", "received_events_url": "https://api.github.com/users/aloraine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-23T17:21:31Z", "updated_at": "2020-01-06T13:22:59Z", "closed_at": "2020-01-06T13:22:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a published article that other articles can use to cite Nucleus? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/23", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/23/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/23/events", "html_url": "https://github.com/google/nucleus/issues/23", "id": 512764098, "node_id": "MDU6SXNzdWU1MTI3NjQwOTg=", "number": 23, "title": "Shipped protobuf package is not compatible with current tf 2.0 pip install", "user": {"login": "jamesthegiantpeach", "id": 52935149, "node_id": "MDQ6VXNlcjUyOTM1MTQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/52935149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesthegiantpeach", "html_url": "https://github.com/jamesthegiantpeach", "followers_url": "https://api.github.com/users/jamesthegiantpeach/followers", "following_url": "https://api.github.com/users/jamesthegiantpeach/following{/other_user}", "gists_url": "https://api.github.com/users/jamesthegiantpeach/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesthegiantpeach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesthegiantpeach/subscriptions", "organizations_url": "https://api.github.com/users/jamesthegiantpeach/orgs", "repos_url": "https://api.github.com/users/jamesthegiantpeach/repos", "events_url": "https://api.github.com/users/jamesthegiantpeach/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesthegiantpeach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-26T00:05:34Z", "updated_at": "2019-12-18T00:25:40Z", "closed_at": "2019-10-30T15:50:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Problem:\r\nIf you install tf 2.0 using `pip install tensorflow-gpu`, then the tensorflow package will import fine, but if you import nucleus after `pip install google-nucleus` the old version of protobuf is removed, and this causes tensorflow imports to result in \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.7/site-packages/IPython/core/interactiveshell.py\", line 3326, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-1-b56a16b58840>\", line 2, in <module>\r\n    import tensorflow as tf\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow/__init__.py\", line 98, in <module>\r\n    from tensorflow_core import *\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/__init__.py\", line 40, in <module>\r\n    from tensorflow.python.tools import module_util as _module_util\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 959, in _find_and_load_unlocked\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow/__init__.py\", line 50, in __getattr__\r\n    module = self._load()\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow/__init__.py\", line 44, in _load\r\n    module = _importlib.import_module(self.__name__)\r\n  File \"/opt/conda/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/python/__init__.py\", line 52, in <module>\r\n    from tensorflow.core.framework.graph_pb2 import *\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/core/framework/graph_pb2.py\", line 16, in <module>\r\n    from tensorflow.core.framework import node_def_pb2 as tensorflow_dot_core_dot_framework_dot_node__def__pb2\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/core/framework/node_def_pb2.py\", line 16, in <module>\r\n    from tensorflow.core.framework import attr_value_pb2 as tensorflow_dot_core_dot_framework_dot_attr__value__pb2\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/core/framework/attr_value_pb2.py\", line 16, in <module>\r\n    from tensorflow.core.framework import tensor_pb2 as tensorflow_dot_core_dot_framework_dot_tensor__pb2\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/core/framework/tensor_pb2.py\", line 16, in <module>\r\n    from tensorflow.core.framework import resource_handle_pb2 as tensorflow_dot_core_dot_framework_dot_resource__handle__pb2\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/core/framework/resource_handle_pb2.py\", line 45, in <module>\r\n    serialized_options=None, file=DESCRIPTOR),\r\n  File \"/opt/conda/lib/python3.7/site-packages/google/protobuf/descriptor.py\", line 534, in __new__\r\n    return _message.default_pool.FindFieldByName(full_name)\r\nKeyError: \"Couldn't find field tensorflow.ResourceHandleProto.DtypeAndShape.dtype\"\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.7/site-packages/IPython/core/interactiveshell.py\", line 2040, in showtraceback\r\n    stb = value._render_traceback_()\r\nAttributeError: 'KeyError' object has no attribute '_render_traceback_'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.7/site-packages/IPython/core/ultratb.py\", line 1101, in get_records\r\n    return _fixed_getinnerframes(etb, number_of_lines_of_context, tb_offset)\r\n  File \"/opt/conda/lib/python3.7/site-packages/IPython/core/ultratb.py\", line 319, in wrapped\r\n    return f(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.7/site-packages/IPython/core/ultratb.py\", line 353, in _fixed_getinnerframes\r\n    records = fix_frame_records_filenames(inspect.getinnerframes(etb, context))\r\n  File \"/opt/conda/lib/python3.7/inspect.py\", line 1502, in getinnerframes\r\n    frameinfo = (tb.tb_frame,) + getframeinfo(tb, context)\r\n  File \"/opt/conda/lib/python3.7/inspect.py\", line 1460, in getframeinfo\r\n    filename = getsourcefile(frame) or getfile(frame)\r\n  File \"/opt/conda/lib/python3.7/inspect.py\", line 696, in getsourcefile\r\n    if getattr(getmodule(object, filename), '__loader__', None) is not None:\r\n  File \"/opt/conda/lib/python3.7/inspect.py\", line 733, in getmodule\r\n    if ismodule(module) and hasattr(module, '__file__'):\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow/__init__.py\", line 50, in __getattr__\r\n    module = self._load()\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow/__init__.py\", line 44, in _load\r\n    module = _importlib.import_module(self.__name__)\r\n  File \"/opt/conda/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 953, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/__init__.py\", line 42, in <module>\r\n    from . _api.v2 import audio\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/_api/v2/audio/__init__.py\", line 10, in <module>\r\n    from tensorflow.python.ops.gen_audio_ops import decode_wav\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/python/ops/gen_audio_ops.py\", line 11, in <module>\r\n    from tensorflow.python.eager import context as _context\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/python/eager/context.py\", line 29, in <module>\r\n    from tensorflow.core.protobuf import config_pb2\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/core/protobuf/config_pb2.py\", line 17, in <module>\r\n    from tensorflow.core.framework import graph_pb2 as tensorflow_dot_core_dot_framework_dot_graph__pb2\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/core/framework/graph_pb2.py\", line 16, in <module>\r\n    from tensorflow.core.framework import node_def_pb2 as tensorflow_dot_core_dot_framework_dot_node__def__pb2\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/core/framework/node_def_pb2.py\", line 16, in <module>\r\n    from tensorflow.core.framework import attr_value_pb2 as tensorflow_dot_core_dot_framework_dot_attr__value__pb2\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/core/framework/attr_value_pb2.py\", line 16, in <module>\r\n    from tensorflow.core.framework import tensor_pb2 as tensorflow_dot_core_dot_framework_dot_tensor__pb2\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/core/framework/tensor_pb2.py\", line 16, in <module>\r\n    from tensorflow.core.framework import resource_handle_pb2 as tensorflow_dot_core_dot_framework_dot_resource__handle__pb2\r\n  File \"/opt/conda/lib/python3.7/site-packages/tensorflow_core/core/framework/resource_handle_pb2.py\", line 45, in <module>\r\n    serialized_options=None, file=DESCRIPTOR),\r\n  File \"/opt/conda/lib/python3.7/site-packages/google/protobuf/descriptor.py\", line 534, in __new__\r\n    return _message.default_pool.FindFieldByName(full_name)\r\nKeyError: \"Couldn't find field tensorflow.ResourceHandleProto.DtypeAndShape.dtype\"\r\n```\r\n\r\nI think this could be resolved by updating the protobuf version shipping with `pip install google-nucleus`. Not sure though", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/22", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/22/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/22/events", "html_url": "https://github.com/google/nucleus/issues/22", "id": 511503713, "node_id": "MDU6SXNzdWU1MTE1MDM3MTM=", "number": 22, "title": "Error importing", "user": {"login": "daquang", "id": 3432272, "node_id": "MDQ6VXNlcjM0MzIyNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3432272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daquang", "html_url": "https://github.com/daquang", "followers_url": "https://api.github.com/users/daquang/followers", "following_url": "https://api.github.com/users/daquang/following{/other_user}", "gists_url": "https://api.github.com/users/daquang/gists{/gist_id}", "starred_url": "https://api.github.com/users/daquang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daquang/subscriptions", "organizations_url": "https://api.github.com/users/daquang/orgs", "repos_url": "https://api.github.com/users/daquang/repos", "events_url": "https://api.github.com/users/daquang/events{/privacy}", "received_events_url": "https://api.github.com/users/daquang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-23T18:41:47Z", "updated_at": "2019-10-24T07:20:36Z", "closed_at": "2019-10-24T07:20:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error while important. I am using Mac OS X  10.14.6 Mojave with the latest version of anaconda.\r\n\r\n```In [1]: from nucleus.io import vcf                                                                                                                                                                                            \r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-1-d1c328622acf> in <module>\r\n----> 1 from nucleus.io import vcf\r\n\r\n~/anaconda3/lib/python3.7/site-packages/nucleus/io/vcf.py in <module>\r\n     62 from __future__ import print_function\r\n     63 \r\n---> 64 from nucleus.io import genomics_reader\r\n     65 from nucleus.io import genomics_writer\r\n     66 from nucleus.io.python import vcf_reader\r\n\r\n~/anaconda3/lib/python3.7/site-packages/nucleus/io/genomics_reader.py in <module>\r\n     66 import six\r\n     67 \r\n---> 68 from nucleus.io.python import tfrecord_reader\r\n     69 \r\n     70 \r\n\r\nImportError: dlopen(/Users/dquang/anaconda3/lib/python3.7/site-packages/nucleus/io/python/tfrecord_reader.so, 2): no suitable image found.  Did find:\r\n\t/Users/dquang/anaconda3/lib/python3.7/site-packages/nucleus/io/python/tfrecord_reader.so: unknown file type, first eight bytes: 0x7F 0x45 0x4C 0x46 0x02 0x01 0x01 0x00\r\n\t/Users/dquang/anaconda3/lib/python3.7/site-packages/google/protobuf/pyext/_message.so: unknown file type, first eight bytes: 0x7F 0x45 0x4C 0x46 0x02 0x01 0x01 0x00```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/21", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/21/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/21/events", "html_url": "https://github.com/google/nucleus/issues/21", "id": 484738556, "node_id": "MDU6SXNzdWU0ODQ3Mzg1NTY=", "number": 21, "title": "Install nucleas on air-gapped computer", "user": {"login": "Santy-8128", "id": 8095752, "node_id": "MDQ6VXNlcjgwOTU3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8095752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Santy-8128", "html_url": "https://github.com/Santy-8128", "followers_url": "https://api.github.com/users/Santy-8128/followers", "following_url": "https://api.github.com/users/Santy-8128/following{/other_user}", "gists_url": "https://api.github.com/users/Santy-8128/gists{/gist_id}", "starred_url": "https://api.github.com/users/Santy-8128/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Santy-8128/subscriptions", "organizations_url": "https://api.github.com/users/Santy-8128/orgs", "repos_url": "https://api.github.com/users/Santy-8128/repos", "events_url": "https://api.github.com/users/Santy-8128/events{/privacy}", "received_events_url": "https://api.github.com/users/Santy-8128/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-23T22:42:36Z", "updated_at": "2019-08-27T21:28:15Z", "closed_at": "2019-08-27T21:28:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I thought that moving the tarball of the git-repo to an air-gapped system and doing `source install.sh` would install it, but as I see it still require apt-get to try to install packages from the internet. \r\n\r\nIs there any way to make a tarball that has all the dependencies ? Or any other suggestions on how to install it without internet ? \r\n\r\nReally appreciate the help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/20", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/20/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/20/events", "html_url": "https://github.com/google/nucleus/issues/20", "id": 457654039, "node_id": "MDU6SXNzdWU0NTc2NTQwMzk=", "number": 20, "title": "Apache Beam integration", "user": {"login": "TimSmole", "id": 3829086, "node_id": "MDQ6VXNlcjM4MjkwODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3829086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimSmole", "html_url": "https://github.com/TimSmole", "followers_url": "https://api.github.com/users/TimSmole/followers", "following_url": "https://api.github.com/users/TimSmole/following{/other_user}", "gists_url": "https://api.github.com/users/TimSmole/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimSmole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimSmole/subscriptions", "organizations_url": "https://api.github.com/users/TimSmole/orgs", "repos_url": "https://api.github.com/users/TimSmole/repos", "events_url": "https://api.github.com/users/TimSmole/events{/privacy}", "received_events_url": "https://api.github.com/users/TimSmole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-18T19:23:30Z", "updated_at": "2019-06-18T21:16:43Z", "closed_at": "2019-06-18T21:16:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a question regarding Nucleus and Apache Beam integration. I've recently [read](https://issues.apache.org/jira/browse/BEAM-5628) that Nucleus will not replace [PyVCF](https://github.com/jamescasbon/PyVCF) that is currently used by Apache Beam and so \r\n\r\n> Beam might have to drop support for VCF IO once Beam drops support of Python 2\r\n\r\nI am curious if there are any plans for Nucleus-Beam integration or perhaps any suggestions on how to read VCF files with Nucleus and serve them to Beam Pipeline? Should one first read the VCFs with Nucleus write it as TFRecord and then use Beam's [tfrecordio module](https://github.com/apache/beam/blob/master/sdks/python/apache_beam/io/tfrecordio.py) to read those? This seems a bit clumsy and counter-intuitive. Any advice on how to approach this more elegantly will be highly appreciated.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/19", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/19/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/19/events", "html_url": "https://github.com/google/nucleus/issues/19", "id": 454595848, "node_id": "MDU6SXNzdWU0NTQ1OTU4NDg=", "number": 19, "title": "python2 import error", "user": {"login": "paradisebee", "id": 5229112, "node_id": "MDQ6VXNlcjUyMjkxMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5229112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paradisebee", "html_url": "https://github.com/paradisebee", "followers_url": "https://api.github.com/users/paradisebee/followers", "following_url": "https://api.github.com/users/paradisebee/following{/other_user}", "gists_url": "https://api.github.com/users/paradisebee/gists{/gist_id}", "starred_url": "https://api.github.com/users/paradisebee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paradisebee/subscriptions", "organizations_url": "https://api.github.com/users/paradisebee/orgs", "repos_url": "https://api.github.com/users/paradisebee/repos", "events_url": "https://api.github.com/users/paradisebee/events{/privacy}", "received_events_url": "https://api.github.com/users/paradisebee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-11T10:01:21Z", "updated_at": "2019-06-12T17:33:56Z", "closed_at": "2019-06-11T14:10:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Have tried to install with pip and pip2.\r\n\r\nImport nucleus in **Python3** works fine. \r\nImport nucleus in **Python2** fails with the following error:\r\n\r\nPython 2.7.16 |Anaconda, Inc.| (default, Mar 14 2019, 21:00:58) \r\n[GCC 7.3.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import nucleus\r\n>>> from nucleus.io import vcf\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/.local/lib/python2.7/site-packages/nucleus/io/vcf.py\", line 64, in <module>\r\n    from nucleus.io import genomics_reader\r\n  File \"/home/user/.local/lib/python2.7/site-packages/nucleus/io/genomics_reader.py\", line 68, in <module>\r\n    from nucleus.io.python import tfrecord_reader\r\nImportError: /home/user/.local/lib/python2.7/site-packages/nucleus/io/python/tfrecord_reader.so: undefined symbol: _Py_FalseStruct\r\n>>>\r\n\r\nI found an answer to this error:\r\n https://github.com/tensorflow/tensorflow/issues/16720#issuecomment-363509113\r\n\r\nbut I am not sure what I did wrong.\r\nI have removed and recreated the environment many times.\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/18", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/18/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/18/events", "html_url": "https://github.com/google/nucleus/issues/18", "id": 454581136, "node_id": "MDU6SXNzdWU0NTQ1ODExMzY=", "number": 18, "title": "Can't uninstall?", "user": {"login": "paradisebee", "id": 5229112, "node_id": "MDQ6VXNlcjUyMjkxMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5229112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paradisebee", "html_url": "https://github.com/paradisebee", "followers_url": "https://api.github.com/users/paradisebee/followers", "following_url": "https://api.github.com/users/paradisebee/following{/other_user}", "gists_url": "https://api.github.com/users/paradisebee/gists{/gist_id}", "starred_url": "https://api.github.com/users/paradisebee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paradisebee/subscriptions", "organizations_url": "https://api.github.com/users/paradisebee/orgs", "repos_url": "https://api.github.com/users/paradisebee/repos", "events_url": "https://api.github.com/users/paradisebee/events{/privacy}", "received_events_url": "https://api.github.com/users/paradisebee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-11T09:31:53Z", "updated_at": "2019-06-11T14:15:35Z", "closed_at": "2019-06-11T14:15:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed nucleus with:\r\n\r\npip install --user google-nucleus\r\n\r\nIt threw out this error as well as successfully installed message:\r\n\r\n\r\nBuilding wheel for google-nucleus (setup.py) ... error\r\n  ERROR: Complete output from command /home/user/miniconda3/envs/py2/bin/python -u -c 'import setuptools, tokenize;__file__='\"'\"'/tmp/pip-install-80mPYb/google-nucleus/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-2P701B --python-tag cp27:\r\n  ERROR: /home/user/miniconda3/envs/py2/lib/python2.7/site-packages/setuptools/version.py:1: UserWarning: Module google was already imported from None, but /tmp/pip-install-80mPYb/google-nucleus is being added to sys.path\r\n    import pkg_resources\r\n  This package does not support wheel creation.\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for google-nucleus\r\n  Running setup.py clean for google-nucleus\r\nFailed to build google-nucleus\r\nInstalling collected packages: google-nucleus\r\n  Running setup.py install for google-nucleus ... done\r\n  WARNING: Could not find .egg-info directory in install record for google-nucleus from https://files.pythonhosted.org/packages/4c/98/24e36281ccae0879a94a5de17a7769fe43937622a5b57afde6c18e6671bd/google_nucleus-0.4.1.tar.gz#sha256=eaedc19ae573d27d204192ff21014bbb2fe28c85fe4e27b328cd10b299fa6871\r\nSuccessfully installed google-nucleus\r\n\r\n\r\nI could find \"google\" and \"nucleus\" directories in /home/user/.local/lib/python2.7/site-packages,\r\nbut when I do \"pip list\" or \"pip2 list\", they are not there.\r\n\r\nNow I want to uninstall them:\r\n\r\npip/pip2 uninstall google\r\nCannot uninstall requirement google, not installed\r\n\r\npip/pip2 uninstall nucleus\r\nCannot uninstall requirement nucleus, not installed\r\n\r\npip/pip2 uninstall google-nucleus\r\nCannot uninstall requirement google-nucleus, not installed\r\n\r\n\r\nWhat should I do??", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/15", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/15/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/15/events", "html_url": "https://github.com/google/nucleus/issues/15", "id": 450224237, "node_id": "MDU6SXNzdWU0NTAyMjQyMzc=", "number": 15, "title": "RuntimeError: Could not load PyProto API (Python 3)", "user": {"login": "TimSmole", "id": 3829086, "node_id": "MDQ6VXNlcjM4MjkwODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3829086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimSmole", "html_url": "https://github.com/TimSmole", "followers_url": "https://api.github.com/users/TimSmole/followers", "following_url": "https://api.github.com/users/TimSmole/following{/other_user}", "gists_url": "https://api.github.com/users/TimSmole/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimSmole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimSmole/subscriptions", "organizations_url": "https://api.github.com/users/TimSmole/orgs", "repos_url": "https://api.github.com/users/TimSmole/repos", "events_url": "https://api.github.com/users/TimSmole/events{/privacy}", "received_events_url": "https://api.github.com/users/TimSmole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2019-05-30T09:53:24Z", "updated_at": "2020-06-01T20:00:01Z", "closed_at": "2020-06-01T19:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nWith release 0.4.0 google-nucleus Python 3-compatible package [suppose to be](https://github.com/google/nucleus/issues/9#issuecomment-497048306) available through pip. \r\n\r\nInstalling it with \r\n\r\n> pip3 install google-nucleus==0.4.0\r\n\r\nresults in: \r\n\r\n```\r\nBuilding wheels for collected packages: google-nucleus\r\n  Building wheel for google-nucleus (setup.py) ... error\r\n  ERROR: Failed building wheel for google-nucleus\r\n  Running setup.py clean for google-nucleus\r\nFailed to build google-nucleus\r\nInstalling collected packages: google-nucleus\r\n  Running setup.py install for google-nucleus ... done\r\n  WARNING: Could not find .egg-info directory in install record for google-nucleus==0.4.0 from https://files.pythonhosted.org/packages/67/a3/2e0c0d660c5cf2806f5fffd4ba316d9609b251a75029a55449dddfe63818/google_nucleus-0.4.0.tar.gz#sha256=288bac1e1b6dd0f934a09ce2f08f0a27d00040357e8cbf970c7d564ecb733c7d\r\nSuccessfully installed google-nucleus\r\n```\r\n\r\nEven though an error is encountered during the installation I can still import it, but when running a simple example it throws the following RuntimeError:\r\n```\r\n/usr/local/lib/python3.6/dist-packages/nucleus/io/clif_postproc.py in _raw_next(self)\r\n    132   def _raw_next(self):\r\n    133     record = variants_pb2.Variant()\r\n--> 134     not_done = self._cc_iterable.PythonNext(record)\r\n    135     return record, not_done\r\n\r\nRuntimeError: PythonNext() argument variant is not valid: Could not load PyProto API\r\n```\r\n\r\nAm I missing something? \r\n\r\nI made [Colab Notebook](https://colab.research.google.com/drive/1wDUvy-sYP0Xm4ZUL8zdo5SfhNWV0S82T#scrollTo=bwI03p1z7Slz) that shows steps that lead to the error. \r\n\r\nThanks for you help!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/14", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/14/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/14/events", "html_url": "https://github.com/google/nucleus/issues/14", "id": 436722605, "node_id": "MDU6SXNzdWU0MzY3MjI2MDU=", "number": 14, "title": "cannot import name 'tfrecord_reader' (python3)", "user": {"login": "TimSmole", "id": 3829086, "node_id": "MDQ6VXNlcjM4MjkwODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3829086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimSmole", "html_url": "https://github.com/TimSmole", "followers_url": "https://api.github.com/users/TimSmole/followers", "following_url": "https://api.github.com/users/TimSmole/following{/other_user}", "gists_url": "https://api.github.com/users/TimSmole/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimSmole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimSmole/subscriptions", "organizations_url": "https://api.github.com/users/TimSmole/orgs", "repos_url": "https://api.github.com/users/TimSmole/repos", "events_url": "https://api.github.com/users/TimSmole/events{/privacy}", "received_events_url": "https://api.github.com/users/TimSmole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-24T14:13:03Z", "updated_at": "2019-11-28T21:28:40Z", "closed_at": "2019-05-03T20:19:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Problem:\r\nWhen I try to import the vcf module I get the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/nucleus-0.3.0/nucleus/io/vcf.py\", line 64, in <module>\r\n    from nucleus.io import genomics_reader\r\n  File \"/usr/local/lib/python3.5/dist-packages/nucleus-0.3.0/nucleus/io/genomics_reader.py\", line 68, in <module>\r\n    from nucleus.io.python import tfrecord_reader\r\nImportError: cannot import name 'tfrecord_reader'\r\n```\r\n\r\nI installed google-nucleus library from source, since it is not available through pip3 as described in issue #9 .\r\n\r\n### Steps to reproduce:\r\n\r\nDockerfile:\r\n```\r\nFROM tensorflow/tensorflow:1.13.1-gpu-py3-jupyter\r\n\r\nRUN apt-get update && apt-get install -y --no-install-recommends sudo\r\n\r\n# Install nucleus from source since it is not available through pip3\r\nRUN cd /usr/local/lib/python3.5/dist-packages/ && \\\r\n    curl -SL https://github.com/google/nucleus/archive/0.3.0.tar.gz | tar xz && \\\r\n    cd nucleus-0.3.0 && source install.sh\r\n\r\nENV PYTHONPATH=\"$PYTHONPATH:/usr/local/lib/python3.5/dist-packages/nucleus-0.3.0/\"\r\n\r\n# Try to import vcf to reproduce an error\r\nCMD [\"python\", \"-c\", \"from nucleus.io import vcf\"]\r\n```\r\n\r\nwithin the directory containing the Dockerfile run:\r\n```\r\ndocker build -t test .\r\ndocker run test\r\n```\r\n\r\nAny help would by highly appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/13", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/13/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/13/events", "html_url": "https://github.com/google/nucleus/issues/13", "id": 433901294, "node_id": "MDU6SXNzdWU0MzM5MDEyOTQ=", "number": 13, "title": "Move protocol-buffer-matchers.h to gMock", "user": {"login": "letmaik", "id": 530988, "node_id": "MDQ6VXNlcjUzMDk4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/530988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/letmaik", "html_url": "https://github.com/letmaik", "followers_url": "https://api.github.com/users/letmaik/followers", "following_url": "https://api.github.com/users/letmaik/following{/other_user}", "gists_url": "https://api.github.com/users/letmaik/gists{/gist_id}", "starred_url": "https://api.github.com/users/letmaik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/letmaik/subscriptions", "organizations_url": "https://api.github.com/users/letmaik/orgs", "repos_url": "https://api.github.com/users/letmaik/repos", "events_url": "https://api.github.com/users/letmaik/events{/privacy}", "received_events_url": "https://api.github.com/users/letmaik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-16T17:31:34Z", "updated_at": "2019-07-02T18:43:44Z", "closed_at": "2019-07-02T18:43:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "See also https://github.com/google/googletest/issues/1761. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/12", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/12/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/12/events", "html_url": "https://github.com/google/nucleus/issues/12", "id": 412549811, "node_id": "MDU6SXNzdWU0MTI1NDk4MTE=", "number": 12, "title": "Example Binaries", "user": {"login": "kmanikumar", "id": 14246636, "node_id": "MDQ6VXNlcjE0MjQ2NjM2", "avatar_url": "https://avatars3.githubusercontent.com/u/14246636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmanikumar", "html_url": "https://github.com/kmanikumar", "followers_url": "https://api.github.com/users/kmanikumar/followers", "following_url": "https://api.github.com/users/kmanikumar/following{/other_user}", "gists_url": "https://api.github.com/users/kmanikumar/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmanikumar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmanikumar/subscriptions", "organizations_url": "https://api.github.com/users/kmanikumar/orgs", "repos_url": "https://api.github.com/users/kmanikumar/repos", "events_url": "https://api.github.com/users/kmanikumar/events{/privacy}", "received_events_url": "https://api.github.com/users/kmanikumar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-20T17:44:55Z", "updated_at": "2019-02-27T16:54:47Z", "closed_at": "2019-02-26T14:01:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are the example binaries compiled if I install nucleus via pip? If so, where can I find them?\r\n\r\nIf not, do I have to run the install.sh script to build the example binaries?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/11", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/11/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/11/events", "html_url": "https://github.com/google/nucleus/issues/11", "id": 391155891, "node_id": "MDU6SXNzdWUzOTExNTU4OTE=", "number": 11, "title": "libbz2.so.1.0 cannot open shared object file", "user": {"login": "simoncchu", "id": 3340363, "node_id": "MDQ6VXNlcjMzNDAzNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3340363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simoncchu", "html_url": "https://github.com/simoncchu", "followers_url": "https://api.github.com/users/simoncchu/followers", "following_url": "https://api.github.com/users/simoncchu/following{/other_user}", "gists_url": "https://api.github.com/users/simoncchu/gists{/gist_id}", "starred_url": "https://api.github.com/users/simoncchu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simoncchu/subscriptions", "organizations_url": "https://api.github.com/users/simoncchu/orgs", "repos_url": "https://api.github.com/users/simoncchu/repos", "events_url": "https://api.github.com/users/simoncchu/events{/privacy}", "received_events_url": "https://api.github.com/users/simoncchu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-12-14T15:30:36Z", "updated_at": "2019-08-27T20:30:06Z", "closed_at": "2019-05-03T20:20:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I met an issue after finished installing nucleus using command (no error happens):\r\n`pip install --user google-nucleus`\r\n\r\nHowever, when I try to run the following demo code, I got error:\r\n```\r\nfrom nucleus.io import vcf\r\nsf_vcf=\"test_nist.b37_chr20_100kbp_at_10mb.vcf.gz\"\r\nwith vcf.VcfReader(sf_vcf) as reader:\r\n    print('Sample names in VCF: ', ' '.join(reader.header.sample_names))\r\n```\r\n\r\n`libbz2.so.1.0: cannot open shared object file: No such file or directory`\r\n\r\nAny suggestion for solving the issue? Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/10", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/10/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/10/events", "html_url": "https://github.com/google/nucleus/issues/10", "id": 390199072, "node_id": "MDU6SXNzdWUzOTAxOTkwNzI=", "number": 10, "title": "Support MAF files", "user": {"login": "alirezaomidi", "id": 5087377, "node_id": "MDQ6VXNlcjUwODczNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5087377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alirezaomidi", "html_url": "https://github.com/alirezaomidi", "followers_url": "https://api.github.com/users/alirezaomidi/followers", "following_url": "https://api.github.com/users/alirezaomidi/following{/other_user}", "gists_url": "https://api.github.com/users/alirezaomidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/alirezaomidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alirezaomidi/subscriptions", "organizations_url": "https://api.github.com/users/alirezaomidi/orgs", "repos_url": "https://api.github.com/users/alirezaomidi/repos", "events_url": "https://api.github.com/users/alirezaomidi/events{/privacy}", "received_events_url": "https://api.github.com/users/alirezaomidi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-12T12:14:22Z", "updated_at": "2019-05-29T18:07:43Z", "closed_at": "2019-05-29T18:07:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nAre MAF files (Described [Here](https://docs.gdc.cancer.gov/Data/File_Formats/MAF_Format/)) supported by Nucleus?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/9", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/9/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/9/events", "html_url": "https://github.com/google/nucleus/issues/9", "id": 385976336, "node_id": "MDU6SXNzdWUzODU5NzYzMzY=", "number": 9, "title": "pip install error", "user": {"login": "fpreimesberger", "id": 8595484, "node_id": "MDQ6VXNlcjg1OTU0ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8595484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fpreimesberger", "html_url": "https://github.com/fpreimesberger", "followers_url": "https://api.github.com/users/fpreimesberger/followers", "following_url": "https://api.github.com/users/fpreimesberger/following{/other_user}", "gists_url": "https://api.github.com/users/fpreimesberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/fpreimesberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fpreimesberger/subscriptions", "organizations_url": "https://api.github.com/users/fpreimesberger/orgs", "repos_url": "https://api.github.com/users/fpreimesberger/repos", "events_url": "https://api.github.com/users/fpreimesberger/events{/privacy}", "received_events_url": "https://api.github.com/users/fpreimesberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-11-29T23:45:59Z", "updated_at": "2019-05-29T18:09:11Z", "closed_at": "2019-01-14T21:09:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "With `pip install --user google-nucleus` it gives the error  \r\n\r\n> Could not find a version that satisfies the requirement google-nucleus (from versions: )\r\nNo matching distribution found for google-nucleus  \r\n\r\n\r\nIs there a fix for this?  Machine is 18.04 Ubuntu\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/8", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/8/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/8/events", "html_url": "https://github.com/google/nucleus/issues/8", "id": 382408855, "node_id": "MDU6SXNzdWUzODI0MDg4NTU=", "number": 8, "title": "pip installation check", "user": {"login": "cschin", "id": 1320747, "node_id": "MDQ6VXNlcjEzMjA3NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1320747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cschin", "html_url": "https://github.com/cschin", "followers_url": "https://api.github.com/users/cschin/followers", "following_url": "https://api.github.com/users/cschin/following{/other_user}", "gists_url": "https://api.github.com/users/cschin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cschin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cschin/subscriptions", "organizations_url": "https://api.github.com/users/cschin/orgs", "repos_url": "https://api.github.com/users/cschin/repos", "events_url": "https://api.github.com/users/cschin/events{/privacy}", "received_events_url": "https://api.github.com/users/cschin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-19T21:55:46Z", "updated_at": "2018-11-27T02:17:18Z", "closed_at": "2018-11-27T02:17:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just tried this\r\n\r\n```\r\npip install --user google-nucleus\r\n```\r\n\r\nI got \r\n```\r\ncollecting google-nucleus\r\n  Could not find a version that satisfies the requirement google-nucleus (from versions: )\r\nNo matching distribution found for google-nucleus\r\n```\r\n\r\nJust like to check if the package is properly set-up in PyPi.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/7", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/7/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/7/events", "html_url": "https://github.com/google/nucleus/issues/7", "id": 319441054, "node_id": "MDU6SXNzdWUzMTk0NDEwNTQ=", "number": 7, "title": "Any help with parsing .geno , .ind and .snp files?", "user": {"login": "vinayprabhu", "id": 7390549, "node_id": "MDQ6VXNlcjczOTA1NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7390549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinayprabhu", "html_url": "https://github.com/vinayprabhu", "followers_url": "https://api.github.com/users/vinayprabhu/followers", "following_url": "https://api.github.com/users/vinayprabhu/following{/other_user}", "gists_url": "https://api.github.com/users/vinayprabhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinayprabhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinayprabhu/subscriptions", "organizations_url": "https://api.github.com/users/vinayprabhu/orgs", "repos_url": "https://api.github.com/users/vinayprabhu/repos", "events_url": "https://api.github.com/users/vinayprabhu/events{/privacy}", "received_events_url": "https://api.github.com/users/vinayprabhu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-02T07:36:54Z", "updated_at": "2018-05-04T17:51:35Z", "closed_at": "2018-05-04T17:51:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Nucleus team,\r\nThe genotype- datasets shared on David Reich's repository here: https://reich.hms.harvard.edu/datasets\r\nhave (.geno, .ind, .snp) files and are parsable using only his lab's Eigensoft package: \r\nhttps://github.com/argriffing/eigensoft\r\n\r\nDo you have any plans to support parsing these file formats?\r\n\r\nAny help/advice in this regard would be much appreciated.\r\nThanks!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/6", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/6/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/6/events", "html_url": "https://github.com/google/nucleus/issues/6", "id": 314663166, "node_id": "MDU6SXNzdWUzMTQ2NjMxNjY=", "number": 6, "title": "[DOC Request] Performance metrics for *Reader", "user": {"login": "gamazeps", "id": 4716134, "node_id": "MDQ6VXNlcjQ3MTYxMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4716134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gamazeps", "html_url": "https://github.com/gamazeps", "followers_url": "https://api.github.com/users/gamazeps/followers", "following_url": "https://api.github.com/users/gamazeps/following{/other_user}", "gists_url": "https://api.github.com/users/gamazeps/gists{/gist_id}", "starred_url": "https://api.github.com/users/gamazeps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gamazeps/subscriptions", "organizations_url": "https://api.github.com/users/gamazeps/orgs", "repos_url": "https://api.github.com/users/gamazeps/repos", "events_url": "https://api.github.com/users/gamazeps/events{/privacy}", "received_events_url": "https://api.github.com/users/gamazeps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-16T13:58:19Z", "updated_at": "2019-09-04T17:39:46Z", "closed_at": "2019-09-04T17:39:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "\u2028\u2028First of all, thanks for open sourcing this software !\r\n\r\nIt would be great if a performance analysis of nucleus on basic tasks were available, with comparaisons to [pysam](http://pysam.readthedocs.io/en/latest/index.html) and samtools/htslib.\r\n\r\nIn particular the costs of:\r\n- Iteration over all reads/records in a large BAM/VCF file.\r\n- Filtering variants based on a simple condition.\r\n- Iterate over reads in a range (`samtools view` like)\r\n- Cost for random access of a single read.\r\n- How well it supports parallel access to a single VCF/BAM file.\r\n\r\nSome metrics that could be interesting are:\r\n- Time spent in IO.\r\n- Memory footprint.\r\n- Time to execute\r\n- Cost depending on batch size (I imagine the cost of a fetch is an affine function in the number of reads to extract).\r\n\r\nThe rational behind this is that when using reads for building tensors to feed a machine learning algorithm, as you did in [deep variant](https://github.com/google/deepvariant/blob/r0.6/deepvariant/pileup_image.py#L159-L160).\u2028If the tensors are generated on the fly, reads are fetched once per epoch and the cost can add up.\r\n\r\nI imagine that nucleus is less efficient than samtools as you have to pay for the python overhead, however I am curious about how pysam fares relative to nucleus as it seems to be the current standard for analyzing sequencing data in python.\r\n\r\nCheers,\r\nFelix", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/5", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/5/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/5/events", "html_url": "https://github.com/google/nucleus/issues/5", "id": 312109777, "node_id": "MDU6SXNzdWUzMTIxMDk3Nzc=", "number": 5, "title": "bigWig parser would be greatly appreciated", "user": {"login": "daquang", "id": 3432272, "node_id": "MDQ6VXNlcjM0MzIyNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3432272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daquang", "html_url": "https://github.com/daquang", "followers_url": "https://api.github.com/users/daquang/followers", "following_url": "https://api.github.com/users/daquang/following{/other_user}", "gists_url": "https://api.github.com/users/daquang/gists{/gist_id}", "starred_url": "https://api.github.com/users/daquang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daquang/subscriptions", "organizations_url": "https://api.github.com/users/daquang/orgs", "repos_url": "https://api.github.com/users/daquang/repos", "events_url": "https://api.github.com/users/daquang/events{/privacy}", "received_events_url": "https://api.github.com/users/daquang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 880316537, "node_id": "MDU6TGFiZWw4ODAzMTY1Mzc=", "url": "https://api.github.com/repos/google/nucleus/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-06T20:37:12Z", "updated_at": "2020-06-12T15:22:01Z", "closed_at": "2020-06-12T15:22:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Especially if it's faster than pyBigWig", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/4", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/4/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/4/events", "html_url": "https://github.com/google/nucleus/issues/4", "id": 311150951, "node_id": "MDU6SXNzdWUzMTExNTA5NTE=", "number": 4, "title": "Use FASTQ test suite from Cock et al?", "user": {"login": "peterjc", "id": 63959, "node_id": "MDQ6VXNlcjYzOTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/63959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc", "html_url": "https://github.com/peterjc", "followers_url": "https://api.github.com/users/peterjc/followers", "following_url": "https://api.github.com/users/peterjc/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc/subscriptions", "organizations_url": "https://api.github.com/users/peterjc/orgs", "repos_url": "https://api.github.com/users/peterjc/repos", "events_url": "https://api.github.com/users/peterjc/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-04T09:24:53Z", "updated_at": "2020-06-13T12:05:13Z", "closed_at": "2020-06-12T15:28:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a little self promotion, but I'd encourage you to use the problematic FASTQ files (tar-ball) provided as supplementary material in our paper about the file format for your test suite:\r\n\r\nThe Sanger FASTQ file format for sequences with quality scores, and the Solexa/Illumina FASTQ variants. P.J.A. Cock, C.J. Fields, N. Goto, M.L. Heuer and P.M. Rice. *Nucleic Acids Research*, 2010, 38(6), 1767-1771. http://dx.doi.org/10.1093/nar/gkp1137\r\n\r\nNote that Illumina moved over to the standard Sanger quality encoding as of v1.8 of their pipeline, see also https://en.wikipedia.org/wiki/FASTQ_format", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/3", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/3/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/3/events", "html_url": "https://github.com/google/nucleus/issues/3", "id": 310496957, "node_id": "MDU6SXNzdWUzMTA0OTY5NTc=", "number": 3, "title": "FASTQ parser does not validate + line", "user": {"login": "peterjc", "id": 63959, "node_id": "MDQ6VXNlcjYzOTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/63959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc", "html_url": "https://github.com/peterjc", "followers_url": "https://api.github.com/users/peterjc/followers", "following_url": "https://api.github.com/users/peterjc/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc/subscriptions", "organizations_url": "https://api.github.com/users/peterjc/orgs", "repos_url": "https://api.github.com/users/peterjc/repos", "events_url": "https://api.github.com/users/peterjc/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-02T14:17:26Z", "updated_at": "2018-04-03T19:04:33Z", "closed_at": "2018-04-03T19:04:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "You define a constant ``SEQUENCE_AND_QUALITY_SEPARATOR_SYMBOL`` but never confirm that the third line of each FASTQ record starts with this (nor any further sanity tests of this line):\r\n\r\nhttps://github.com/google/nucleus/blob/163820ee1f27d3b50f596ac532de1ac2c723ddf4/nucleus/io/fastq_reader.cc#L44", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/nucleus/issues/2", "repository_url": "https://api.github.com/repos/google/nucleus", "labels_url": "https://api.github.com/repos/google/nucleus/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/google/nucleus/issues/2/comments", "events_url": "https://api.github.com/repos/google/nucleus/issues/2/events", "html_url": "https://github.com/google/nucleus/issues/2", "id": 310225620, "node_id": "MDU6SXNzdWUzMTAyMjU2MjA=", "number": 2, "title": "Packaging with conda", "user": {"login": "Avsecz", "id": 10011161, "node_id": "MDQ6VXNlcjEwMDExMTYx", "avatar_url": "https://avatars3.githubusercontent.com/u/10011161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avsecz", "html_url": "https://github.com/Avsecz", "followers_url": "https://api.github.com/users/Avsecz/followers", "following_url": "https://api.github.com/users/Avsecz/following{/other_user}", "gists_url": "https://api.github.com/users/Avsecz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avsecz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avsecz/subscriptions", "organizations_url": "https://api.github.com/users/Avsecz/orgs", "repos_url": "https://api.github.com/users/Avsecz/repos", "events_url": "https://api.github.com/users/Avsecz/events{/privacy}", "received_events_url": "https://api.github.com/users/Avsecz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-31T09:02:23Z", "updated_at": "2019-10-22T20:57:30Z", "closed_at": "2019-10-22T20:57:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great to package nucleus with conda for easier installation, best through bioconda: https://github.com/bioconda/bioconda-recipes", "performed_via_github_app": null, "score": 1.0}]}