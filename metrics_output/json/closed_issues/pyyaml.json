{"total_count": 163, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/yaml/pyyaml/issues/428", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/428/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/428/events", "html_url": "https://github.com/yaml/pyyaml/issues/428", "id": 680559596, "node_id": "MDU6SXNzdWU2ODA1NTk1OTY=", "number": 428, "title": "index-key ? in libs/yaml/scanner.py", "user": {"login": "FrankC01", "id": 5435165, "node_id": "MDQ6VXNlcjU0MzUxNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5435165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrankC01", "html_url": "https://github.com/FrankC01", "followers_url": "https://api.github.com/users/FrankC01/followers", "following_url": "https://api.github.com/users/FrankC01/following{/other_user}", "gists_url": "https://api.github.com/users/FrankC01/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrankC01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrankC01/subscriptions", "organizations_url": "https://api.github.com/users/FrankC01/orgs", "repos_url": "https://api.github.com/users/FrankC01/repos", "events_url": "https://api.github.com/users/FrankC01/events{/privacy}", "received_events_url": "https://api.github.com/users/FrankC01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-17T22:19:56Z", "updated_at": "2020-08-18T08:46:11Z", "closed_at": "2020-08-18T08:46:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `def stale_possible_simple_keys...` there is reference to `index-key`... where is that defined?\r\n\r\n```python\r\nif key.line != self.line  \\\r\n       or self.index-key.index > 1024:\r\n```\r\n\r\nHmmm... am I looking at `or (self.index - key.index) > 1024` ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/427", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/427/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/427/events", "html_url": "https://github.com/yaml/pyyaml/issues/427", "id": 680366986, "node_id": "MDU6SXNzdWU2ODAzNjY5ODY=", "number": 427, "title": "Provide PYYAML_DEFAULT_LOADER env var", "user": {"login": "GProst", "id": 18051055, "node_id": "MDQ6VXNlcjE4MDUxMDU1", "avatar_url": "https://avatars0.githubusercontent.com/u/18051055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GProst", "html_url": "https://github.com/GProst", "followers_url": "https://api.github.com/users/GProst/followers", "following_url": "https://api.github.com/users/GProst/following{/other_user}", "gists_url": "https://api.github.com/users/GProst/gists{/gist_id}", "starred_url": "https://api.github.com/users/GProst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GProst/subscriptions", "organizations_url": "https://api.github.com/users/GProst/orgs", "repos_url": "https://api.github.com/users/GProst/repos", "events_url": "https://api.github.com/users/GProst/events{/privacy}", "received_events_url": "https://api.github.com/users/GProst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-17T16:36:44Z", "updated_at": "2020-08-17T17:21:38Z", "closed_at": "2020-08-17T17:21:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use `!!python/object/apply` in Django fixtures (using Python 3.8) and seems like now it's required to provide a loader explicitly.\r\n\r\nI'm not really sure how Django parses .yaml files for fixtures but I assume that they certainly don't use `UnsafeLoader` there.\r\nHaving issues like:\r\n```\r\nyaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/object/apply:time.time'\r\n```\r\n\r\nSo, I'm curious if it would be possible to define some `PYYAML_DEFAULT_LOADER` that would set a default loader to use if it's not provided explicitly?\r\n\r\nThank you in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/425", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/425/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/425/events", "html_url": "https://github.com/yaml/pyyaml/issues/425", "id": 676831444, "node_id": "MDU6SXNzdWU2NzY4MzE0NDQ=", "number": 425, "title": "Huntr ", "user": {"login": "Jonny5stillalive", "id": 65462120, "node_id": "MDQ6VXNlcjY1NDYyMTIw", "avatar_url": "https://avatars0.githubusercontent.com/u/65462120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jonny5stillalive", "html_url": "https://github.com/Jonny5stillalive", "followers_url": "https://api.github.com/users/Jonny5stillalive/followers", "following_url": "https://api.github.com/users/Jonny5stillalive/following{/other_user}", "gists_url": "https://api.github.com/users/Jonny5stillalive/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jonny5stillalive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jonny5stillalive/subscriptions", "organizations_url": "https://api.github.com/users/Jonny5stillalive/orgs", "repos_url": "https://api.github.com/users/Jonny5stillalive/repos", "events_url": "https://api.github.com/users/Jonny5stillalive/events{/privacy}", "received_events_url": "https://api.github.com/users/Jonny5stillalive/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-11T12:19:50Z", "updated_at": "2020-08-11T12:27:51Z", "closed_at": "2020-08-11T12:27:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "git clone https://github.com/Jonny5stillalive/pyyaml.git", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/424", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/424/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/424/events", "html_url": "https://github.com/yaml/pyyaml/issues/424", "id": 675086482, "node_id": "MDU6SXNzdWU2NzUwODY0ODI=", "number": 424, "title": "Inconsistent dump of strings representing numbers", "user": {"login": "blaiseli", "id": 3380503, "node_id": "MDQ6VXNlcjMzODA1MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3380503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blaiseli", "html_url": "https://github.com/blaiseli", "followers_url": "https://api.github.com/users/blaiseli/followers", "following_url": "https://api.github.com/users/blaiseli/following{/other_user}", "gists_url": "https://api.github.com/users/blaiseli/gists{/gist_id}", "starred_url": "https://api.github.com/users/blaiseli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blaiseli/subscriptions", "organizations_url": "https://api.github.com/users/blaiseli/orgs", "repos_url": "https://api.github.com/users/blaiseli/repos", "events_url": "https://api.github.com/users/blaiseli/events{/privacy}", "received_events_url": "https://api.github.com/users/blaiseli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-07T15:21:32Z", "updated_at": "2020-08-07T16:14:43Z", "closed_at": "2020-08-07T16:14:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "In an ipython session:\r\n\r\n```\r\nIn [15]: d                                                                                                                                    \r\nOut[15]: \r\n{'A': '01',\r\n 'B': '02',\r\n 'C': '02',\r\n 'D': '04',\r\n 'E': '05',\r\n 'F': '06',\r\n 'G': '07',\r\n 'H': '08',\r\n 'I': '09',\r\n 'J': '10',\r\n 'K': '11',\r\n 'L': '12'}\r\n\r\nIn [16]: print(dump(d))                                                                                                                       \r\nA: '01'\r\nB: '02'\r\nC: '02'\r\nD: '04'\r\nE: '05'\r\nF: '06'\r\nG: '07'\r\nH: 08\r\nI: 09\r\nJ: '10'\r\nK: '11'\r\nL: '12'\r\n\r\n\r\nIn [17]: yaml.__version__                                                                                                                     \r\nOut[17]: '5.1.2'\r\n```\r\n\r\n\"08\" and \"09\" are not quoted in the dump. The other numbers are.\r\n\r\nIn the original dict, all values are strings representing numbers. I expect a consistent result when dumping: either all numbers or all quoted strings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/423", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/423/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/423/events", "html_url": "https://github.com/yaml/pyyaml/issues/423", "id": 670294582, "node_id": "MDU6SXNzdWU2NzAyOTQ1ODI=", "number": 423, "title": "[cython] AttributeError: type object '_yaml.Mark' has no attribute '__reduce_cython__'", "user": {"login": "seanyen", "id": 25241284, "node_id": "MDQ6VXNlcjI1MjQxMjg0", "avatar_url": "https://avatars2.githubusercontent.com/u/25241284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanyen", "html_url": "https://github.com/seanyen", "followers_url": "https://api.github.com/users/seanyen/followers", "following_url": "https://api.github.com/users/seanyen/following{/other_user}", "gists_url": "https://api.github.com/users/seanyen/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanyen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanyen/subscriptions", "organizations_url": "https://api.github.com/users/seanyen/orgs", "repos_url": "https://api.github.com/users/seanyen/repos", "events_url": "https://api.github.com/users/seanyen/events{/privacy}", "received_events_url": "https://api.github.com/users/seanyen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-31T22:26:47Z", "updated_at": "2020-07-31T22:56:31Z", "closed_at": "2020-07-31T22:53:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "This environment is not a typical one.\r\n\r\nSo I have a program which is using Python\\C API to embed Python execution in a C\\C++ native program. And one activity is to use \"PyImport_ImportModule\" to import a Python module for later use in C\\C++ space. And for the python module to include, it depends on `PyYaml`. As it is importing, it fails at this call stack:\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\opt\\ros\\melodic\\x64\\lib\\site-packages\\sensor_msgs\\msg\\__init__.py\", line 1, in <module>\r\n    from ._BatteryState import *\r\n  File \"C:\\opt\\ros\\melodic\\x64\\lib\\site-packages\\sensor_msgs\\msg\\_BatteryState.py\", line 5, in <module>\r\n    import genpy\r\n  File \"C:\\opt\\ros\\melodic\\x64\\lib\\site-packages\\genpy\\__init__.py\", line 34, in <module>\r\n    from . message import Message, SerializationError, DeserializationError, MessageException, struct_I\r\n  File \"C:\\opt\\ros\\melodic\\x64\\lib\\site-packages\\genpy\\message.py\", line 47, in <module>\r\n    import yaml\r\n  File \"C:\\opt\\python27amd64\\lib\\site-packages\\yaml\\__init__.py\", line 14, in <module>\r\n    from cyaml import *\r\n  File \"C:\\opt\\python27amd64\\lib\\site-packages\\yaml\\cyaml.py\", line 5, in <module>\r\n    from _yaml import CParser, CEmitter\r\n  File \"ext\\_yaml.pyx\", line 64, in init _yaml\r\nAttributeError: type object '_yaml.Mark' has no attribute '__reduce_cython__'\r\n```\r\n\r\nBy online searching for `AttributeError: type object 'xxx' has no attribute '__reduce_cython__'`, I saw many similar discussions and issues reported:\r\nhttps://github.com/cython/cython/issues/1953\r\nhttps://github.com/pynbody/pynbody/issues/503\r\n\r\nIf I understand it correctly, the actual cause is on `cython` side and the wheel built with the faulting version of `cython` will exhibit this behavior in the embedded environment.\r\n\r\nFor `PyYaml`, I confirmed this is a regression since `3.13` (yup, the problem existed for a while) and the last known good version for this problem is `3.12`.\r\n\r\nI would suggest to pin a LKG version of `cython` as building the wheel for the next release. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/422", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/422/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/422/events", "html_url": "https://github.com/yaml/pyyaml/issues/422", "id": 670028480, "node_id": "MDU6SXNzdWU2NzAwMjg0ODA=", "number": 422, "title": "List item type error in dump", "user": {"login": "ElonH", "id": 32666230, "node_id": "MDQ6VXNlcjMyNjY2MjMw", "avatar_url": "https://avatars0.githubusercontent.com/u/32666230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ElonH", "html_url": "https://github.com/ElonH", "followers_url": "https://api.github.com/users/ElonH/followers", "following_url": "https://api.github.com/users/ElonH/following{/other_user}", "gists_url": "https://api.github.com/users/ElonH/gists{/gist_id}", "starred_url": "https://api.github.com/users/ElonH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ElonH/subscriptions", "organizations_url": "https://api.github.com/users/ElonH/orgs", "repos_url": "https://api.github.com/users/ElonH/repos", "events_url": "https://api.github.com/users/ElonH/events{/privacy}", "received_events_url": "https://api.github.com/users/ElonH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-31T17:14:19Z", "updated_at": "2020-08-01T14:43:24Z", "closed_at": "2020-07-31T23:14:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "pyyaml version: 5.3.1\r\n\r\ncode:\r\n```python\r\nimport yaml\r\n\r\n\r\ndata = {\r\n    'id': ['{:0>2}'.format(i) for i in range(1, 1 + 20)],\r\n}\r\n\r\nprint(data)\r\nprint(yaml.dump(data))\r\n\r\n```\r\n\r\noutput:\r\n```\r\n{'id': ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']}\r\nid:\r\n- '01'\r\n- '02'\r\n- '03'\r\n- '04'\r\n- '05'\r\n- '06'\r\n- '07'\r\n- 08\r\n- 09\r\n- '10'\r\n- '11'\r\n- '12'\r\n- '13'\r\n- '14'\r\n- '15'\r\n- '16'\r\n- '17'\r\n- '18'\r\n- '19'\r\n- '20'\r\n\r\n```\r\n\r\nexpect:\r\n`08` and `09` should be quoted", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/417", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/417/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/417/events", "html_url": "https://github.com/yaml/pyyaml/issues/417", "id": 655066254, "node_id": "MDU6SXNzdWU2NTUwNjYyNTQ=", "number": 417, "title": "Failing to roundtrip a string that looks like a big float", "user": {"login": "omry", "id": 376455, "node_id": "MDQ6VXNlcjM3NjQ1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/376455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omry", "html_url": "https://github.com/omry", "followers_url": "https://api.github.com/users/omry/followers", "following_url": "https://api.github.com/users/omry/following{/other_user}", "gists_url": "https://api.github.com/users/omry/gists{/gist_id}", "starred_url": "https://api.github.com/users/omry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omry/subscriptions", "organizations_url": "https://api.github.com/users/omry/orgs", "repos_url": "https://api.github.com/users/omry/repos", "events_url": "https://api.github.com/users/omry/events{/privacy}", "received_events_url": "https://api.github.com/users/omry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-10T22:22:44Z", "updated_at": "2020-07-11T00:03:48Z", "closed_at": "2020-07-11T00:03:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nIn [29]: yaml.load(yaml.dump({\"gitrev\": \"695e0514\"}), Loader=yaml.loader.SafeLoader)\r\nOut[29]: {'gitrev': inf}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/412", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/412/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/412/events", "html_url": "https://github.com/yaml/pyyaml/issues/412", "id": 640053533, "node_id": "MDU6SXNzdWU2NDAwNTM1MzM=", "number": 412, "title": "Suckport", "user": {"login": "qa8302", "id": 39299432, "node_id": "MDQ6VXNlcjM5Mjk5NDMy", "avatar_url": "https://avatars1.githubusercontent.com/u/39299432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qa8302", "html_url": "https://github.com/qa8302", "followers_url": "https://api.github.com/users/qa8302/followers", "following_url": "https://api.github.com/users/qa8302/following{/other_user}", "gists_url": "https://api.github.com/users/qa8302/gists{/gist_id}", "starred_url": "https://api.github.com/users/qa8302/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qa8302/subscriptions", "organizations_url": "https://api.github.com/users/qa8302/orgs", "repos_url": "https://api.github.com/users/qa8302/repos", "events_url": "https://api.github.com/users/qa8302/events{/privacy}", "received_events_url": "https://api.github.com/users/qa8302/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-17T00:27:18Z", "updated_at": "2020-06-17T16:36:08Z", "closed_at": "2020-06-17T16:36:08Z", "author_association": "NONE", "active_lock_reason": "spam", "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/408", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/408/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/408/events", "html_url": "https://github.com/yaml/pyyaml/issues/408", "id": 625189521, "node_id": "MDU6SXNzdWU2MjUxODk1MjE=", "number": 408, "title": "stop printing `!!python/object:` first line when dumping custom YAMLObject", "user": {"login": "rivison", "id": 6190770, "node_id": "MDQ6VXNlcjYxOTA3NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6190770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rivison", "html_url": "https://github.com/rivison", "followers_url": "https://api.github.com/users/rivison/followers", "following_url": "https://api.github.com/users/rivison/following{/other_user}", "gists_url": "https://api.github.com/users/rivison/gists{/gist_id}", "starred_url": "https://api.github.com/users/rivison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rivison/subscriptions", "organizations_url": "https://api.github.com/users/rivison/orgs", "repos_url": "https://api.github.com/users/rivison/repos", "events_url": "https://api.github.com/users/rivison/events{/privacy}", "received_events_url": "https://api.github.com/users/rivison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-26T20:49:41Z", "updated_at": "2020-08-12T19:40:14Z", "closed_at": "2020-08-12T19:40:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI've made a YAMLObject class:\r\n```{python}\r\nclass Sample(YAMLObject):\r\n    yaml_loader = SafeLoader\r\n    yaml_dumper = SafeDumper\r\n\r\n    def __init__(self, peakset):\r\n        self.name = peakset[\"name\"]\r\n        self.species = species\r\n        self.technology = technology\r\n        # ... other attributes \r\n```\r\nWhen I call `dump(sample_obj, out_file)`, the first line of the output file is `!!python/object:__main__.Sample`.\r\n\r\nHow can I stop this line from being printed?\r\n\r\nThank you for your help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/406", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/406/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/406/events", "html_url": "https://github.com/yaml/pyyaml/issues/406", "id": 622260785, "node_id": "MDU6SXNzdWU2MjIyNjA3ODU=", "number": 406, "title": "newlines inserted after loading yaml", "user": {"login": "BardiaAfshin", "id": 1905150, "node_id": "MDQ6VXNlcjE5MDUxNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1905150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BardiaAfshin", "html_url": "https://github.com/BardiaAfshin", "followers_url": "https://api.github.com/users/BardiaAfshin/followers", "following_url": "https://api.github.com/users/BardiaAfshin/following{/other_user}", "gists_url": "https://api.github.com/users/BardiaAfshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/BardiaAfshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BardiaAfshin/subscriptions", "organizations_url": "https://api.github.com/users/BardiaAfshin/orgs", "repos_url": "https://api.github.com/users/BardiaAfshin/repos", "events_url": "https://api.github.com/users/BardiaAfshin/events{/privacy}", "received_events_url": "https://api.github.com/users/BardiaAfshin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-21T05:37:16Z", "updated_at": "2020-05-21T11:18:41Z", "closed_at": "2020-05-21T11:18:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "after loading yaml \r\n\r\n```\r\n.yay:\r\n  script: &yay\r\n    - |\r\n      # ------------------------------------------------------------------------\r\n      echo \"yay is here\"\r\n```\r\n\r\n\r\nvia code\r\n\r\n```\r\nwith open(test_file, mode=\"r\", encoding='utf-8') as t:\r\n    contents = t.read()\r\n    ci = yaml.safe_load(contents)\r\n```\r\n\r\nI get the following\r\n\r\n\r\n```\r\npprint(ci.get('.yay'))\r\n{'script': ['# '\r\n            '------------------------------------------------------------------------\\n'\r\n            'echo \"yay is here\"\\n']}\r\n```\r\n\r\n\r\nnotice the newline that is inserted,\r\n'echo \"yay is here\"**\\n'**]}\r\n\r\n this is undesired", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/405", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/405/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/405/events", "html_url": "https://github.com/yaml/pyyaml/issues/405", "id": 622253302, "node_id": "MDU6SXNzdWU2MjIyNTMzMDI=", "number": 405, "title": "yaml anchors are ignored", "user": {"login": "BardiaAfshin", "id": 1905150, "node_id": "MDQ6VXNlcjE5MDUxNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1905150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BardiaAfshin", "html_url": "https://github.com/BardiaAfshin", "followers_url": "https://api.github.com/users/BardiaAfshin/followers", "following_url": "https://api.github.com/users/BardiaAfshin/following{/other_user}", "gists_url": "https://api.github.com/users/BardiaAfshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/BardiaAfshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BardiaAfshin/subscriptions", "organizations_url": "https://api.github.com/users/BardiaAfshin/orgs", "repos_url": "https://api.github.com/users/BardiaAfshin/repos", "events_url": "https://api.github.com/users/BardiaAfshin/events{/privacy}", "received_events_url": "https://api.github.com/users/BardiaAfshin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-21T05:16:25Z", "updated_at": "2020-05-21T17:36:15Z", "closed_at": "2020-05-21T11:18:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "when loading a yaml with anchors ie\r\n\r\ninput.yaml\r\n```\r\nbase: &base\r\n  name: Everyone has same name\r\n```\r\n\r\ncode:\r\n```\r\nwith open(test_file, mode=\"r\", encoding='utf-8') as t:\r\n    contents = t.read()\r\n    ci = yaml.safe_load(contents)\r\n\r\n```\r\noutput in console\r\n\r\n`{'base': {'name': 'Everyone has same name'}}`\r\n\r\nand when written out\r\n\r\ncode:\r\n```\r\ncwd=Path.cwd()\r\n... outfile = f\"{cwd}/output.yaml\"\r\n... with open(\"output.yaml\", mode=\"w\", newline='') as file:\r\n...     yaml.dump(ci, file)\r\n```\r\n\r\noutput.yaml\r\n```base:\r\n  name: Everyone has same name\r\n```\r\n\r\n\r\nobserve: the anchor **&base** is not in the output file, or console output\r\n\r\nsample anchor is taken from here -> https://learnxinyminutes.com/docs/yaml/\r\n\r\nedit: code blocks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/399", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/399/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/399/events", "html_url": "https://github.com/yaml/pyyaml/issues/399", "id": 617252556, "node_id": "MDU6SXNzdWU2MTcyNTI1NTY=", "number": 399, "title": "Having problems with tag !!python/name (plus others)", "user": {"login": "mosesontheweb", "id": 6360498, "node_id": "MDQ6VXNlcjYzNjA0OTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6360498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mosesontheweb", "html_url": "https://github.com/mosesontheweb", "followers_url": "https://api.github.com/users/mosesontheweb/followers", "following_url": "https://api.github.com/users/mosesontheweb/following{/other_user}", "gists_url": "https://api.github.com/users/mosesontheweb/gists{/gist_id}", "starred_url": "https://api.github.com/users/mosesontheweb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mosesontheweb/subscriptions", "organizations_url": "https://api.github.com/users/mosesontheweb/orgs", "repos_url": "https://api.github.com/users/mosesontheweb/repos", "events_url": "https://api.github.com/users/mosesontheweb/events{/privacy}", "received_events_url": "https://api.github.com/users/mosesontheweb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-13T08:31:14Z", "updated_at": "2020-05-13T13:50:11Z", "closed_at": "2020-05-13T13:37:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI just try to get familiar with PyYAML and came across a problem which I'm not able to solve.\r\nHere's my YAML File:\r\n```yaml\r\nhome: !ENV ${HOME}\r\ndump: !!python/name:yaml.dump\r\n```\r\nMy code:\r\n```python\r\nimport yaml\r\nimport re\r\nimport os\r\n\r\ndef parse_config(data):\r\n    tag = '!ENV'\r\n    pattern = re.compile(r'.*?\\${([A-Z0-9_]+)}.*?')\r\n    loader = yaml.SafeLoader\r\n\r\n    loader.add_implicit_resolver(tag, pattern, None)\r\n\r\n    def constructor_env_variables(loader, node):\r\n        value = loader.construct_scalar(node)\r\n        match = pattern.findall(value)  # to find all env variables in line\r\n        if match:\r\n            full_value = value\r\n            for g in match:\r\n                full_value = full_value.replace(\r\n                    f'${{{g}}}', os.environ.get(g, g)\r\n                )\r\n            return full_value\r\n        return value\r\n\r\n    loader.add_constructor(tag, constructor_env_variables)\r\n\r\n    with open(data) as conf_data:\r\n        return yaml.safe_load(conf_data)\r\n\r\n\r\nif __name__ == '__main__':\r\n    config = parse_config('config.yml')\r\n```\r\nThe output:\r\n```\r\nyaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/name:yaml.dump'\r\n  in \"config.yml\", line 2, column 7\r\n```\r\nI can't see any reason why it should not work. I also though it might depend on the custom constructor, but commenting it out also won't do it.\r\n\r\nAny ideas what I'm doing wrong here? PyYAML is 5.3.\r\n\r\nRegards, Thomas", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/397", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/397/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/397/events", "html_url": "https://github.com/yaml/pyyaml/issues/397", "id": 611379902, "node_id": "MDU6SXNzdWU2MTEzNzk5MDI=", "number": 397, "title": "yaml.reader.ReaderError: unacceptable character", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-03T10:27:52Z", "updated_at": "2020-05-03T10:37:45Z", "closed_at": "2020-05-03T10:37:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that even the latest 5.3 version would raise an exception when trying to load blocks with ESC (0x1b) code in them. YAML spec is clear that the pipe-blocks must be loaded as-is, without any escaping being needed or possible.\r\n\r\n```\r\n>>> f = open('a.yml')\r\n>>> x = yaml.safe_load(f)\r\n>>> Traceback (most recent call last):\r\nFile \"<stdin>\", line 1, in <module>\r\nFile \"/Users/ssbarnea/.pyenv/versions/3.7.6/lib/python3.7/site-packages/yaml/__init__.py\", line 162, in safe_load\r\nreturn load(stream, SafeLoader)\r\nFile \"/Users/ssbarnea/.pyenv/versions/3.7.6/lib/python3.7/site-packages/yaml/__init__.py\", line 112, in load\r\nloader = Loader(stream)\r\nFile \"/Users/ssbarnea/.pyenv/versions/3.7.6/lib/python3.7/site-packages/yaml/loader.py\", line 34, in __init__\r\nReader.__init__(self, stream)\r\nFile \"/Users/ssbarnea/.pyenv/versions/3.7.6/lib/python3.7/site-packages/yaml/reader.py\", line 85, in __init__\r\nself.determine_encoding()\r\nFile \"/Users/ssbarnea/.pyenv/versions/3.7.6/lib/python3.7/site-packages/yaml/reader.py\", line 135, in determine_encoding\r\nself.update(1)\r\nFile \"/Users/ssbarnea/.pyenv/versions/3.7.6/lib/python3.7/site-packages/yaml/reader.py\", line 169, in update\r\nself.check_printable(data)\r\nFile \"/Users/ssbarnea/.pyenv/versions/3.7.6/lib/python3.7/site-packages/yaml/reader.py\", line 144, in check_printable\r\n'unicode', \"special characters are not allowed\")\r\nyaml.reader.ReaderError: unacceptable character #x001b: special characters are not allowed\r\nin \"a.yml\", position 183\r\n```\r\n\r\nThe file containing the special character can be loaded from https://gist.githubusercontent.com/ssbarnea/c162d9c96efd7d2a52e455892183b649/raw/88a8d4f8ce5ec0410b491dab53593428a859efc9/a.yml", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/396", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/396/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/396/events", "html_url": "https://github.com/yaml/pyyaml/issues/396", "id": 600373393, "node_id": "MDU6SXNzdWU2MDAzNzMzOTM=", "number": 396, "title": "Test failures with libyaml 0.2.3", "user": {"login": "jeckersb", "id": 15802, "node_id": "MDQ6VXNlcjE1ODAy", "avatar_url": "https://avatars2.githubusercontent.com/u/15802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeckersb", "html_url": "https://github.com/jeckersb", "followers_url": "https://api.github.com/users/jeckersb/followers", "following_url": "https://api.github.com/users/jeckersb/following{/other_user}", "gists_url": "https://api.github.com/users/jeckersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeckersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeckersb/subscriptions", "organizations_url": "https://api.github.com/users/jeckersb/orgs", "repos_url": "https://api.github.com/users/jeckersb/repos", "events_url": "https://api.github.com/users/jeckersb/events{/privacy}", "received_events_url": "https://api.github.com/users/jeckersb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-15T15:11:17Z", "updated_at": "2020-04-19T11:32:15Z", "closed_at": "2020-04-19T11:32:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-07-09.data, tests/data/spec-07-09.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib3/test_appliance.py\", line 59, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib3/test_yaml_ext.py\", line 256, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib3/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib3/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='foo'),\r\n ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='foo %YAML 1.1'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-09.data:\r\n---\r\nfoo\r\n...\r\n# Repeated end marker.\r\n...\r\n---\r\nbar\r\n# No end marker.\r\n---\r\nbaz\r\n...\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-09.canonical:\r\n%YAML 1.1\r\n---\r\n!!str \"foo\"\r\n%YAML 1.1\r\n---\r\n!!str \"bar\"\r\n%YAML 1.1\r\n---\r\n!!str \"baz\"\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-07-10.data, tests/data/spec-07-10.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib3/test_appliance.py\", line 59, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib3/test_yaml_ext.py\", line 256, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib3/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib3/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='Root flow scalar'),\r\n ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='Root flow scalar %YAML 1.1'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-10.data:\r\n\"Root flow\r\n scalar\"\r\n--- !!str >\r\n Root block\r\n scalar\r\n---\r\n# Root collection:\r\nfoo : bar\r\n... # Is optional.\r\n---\r\n# Explicit document may be empty.\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-10.canonical:\r\n%YAML 1.1\r\n---\r\n!!str \"Root flow scalar\"\r\n%YAML 1.1\r\n---\r\n!!str \"Root block scalar\\n\"\r\n%YAML 1.1\r\n---\r\n!!map {\r\n  ? !!str \"foo\"\r\n  : !!str \"bar\"\r\n}\r\n---\r\n#!!str \"\"\r\n!!null \"\"\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-07-13.data, tests/data/spec-07-13.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib3/test_appliance.py\", line 59, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib3/test_yaml_ext.py\", line 256, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib3/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib3/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag='!foo', implicit=(False, False), value='No directives'),\r\n ScalarEvent(anchor=None, tag='!foo', implicit=(False, False), value='No directives %TAG ! %21foo'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-13.data:\r\n! \"First document\"\r\n---\r\n!foo \"No directives\"\r\n%TAG ! !foo\r\n---\r\n!bar \"With directives\"\r\n%YAML 1.1\r\n---\r\n!baz \"Reset settings\"\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-13.canonical:\r\n%YAML 1.1\r\n---\r\n!!str \"First document\"\r\n---\r\n!<!foo> \"No directives\"\r\n---\r\n!<!foobar> \"With directives\"\r\n---\r\n!<!baz> \"Reset settings\"\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-08-08.data, tests/data/spec-08-08.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib3/test_appliance.py\", line 59, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib3/test_yaml_ext.py\", line 256, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib3/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib3/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='foo bar'),\r\n ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='foo bar %YAML 1.1'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-08-08.data:\r\n---\r\nfoo:\r\n \"bar\r\n baz\"\r\n---\r\n\"foo\r\n bar\"\r\n---\r\nfoo\r\n bar\r\n--- |\r\n foo\r\n...\r\n---------------------------------------------------------------------------\r\ntests/data/spec-08-08.canonical:\r\n%YAML 1.1\r\n---\r\n!!map {\r\n  ? !!str \"foo\"\r\n  : !!str \"bar baz\"\r\n}\r\n%YAML 1.1\r\n---\r\n!!str \"foo bar\"\r\n%YAML 1.1\r\n---\r\n!!str \"foo bar\"\r\n%YAML 1.1\r\n---\r\n!!str \"foo\\n\"\r\n===========================================================================\r\nTESTS: 2614\r\nFAILURES: 4\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/395", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/395/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/395/events", "html_url": "https://github.com/yaml/pyyaml/issues/395", "id": 598440348, "node_id": "MDU6SXNzdWU1OTg0NDAzNDg=", "number": 395, "title": "FullLoader returns unexpected number for value 1:10", "user": {"login": "lochbrunner", "id": 17703372, "node_id": "MDQ6VXNlcjE3NzAzMzcy", "avatar_url": "https://avatars3.githubusercontent.com/u/17703372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lochbrunner", "html_url": "https://github.com/lochbrunner", "followers_url": "https://api.github.com/users/lochbrunner/followers", "following_url": "https://api.github.com/users/lochbrunner/following{/other_user}", "gists_url": "https://api.github.com/users/lochbrunner/gists{/gist_id}", "starred_url": "https://api.github.com/users/lochbrunner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lochbrunner/subscriptions", "organizations_url": "https://api.github.com/users/lochbrunner/orgs", "repos_url": "https://api.github.com/users/lochbrunner/repos", "events_url": "https://api.github.com/users/lochbrunner/events{/privacy}", "received_events_url": "https://api.github.com/users/lochbrunner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-12T08:52:57Z", "updated_at": "2020-04-12T10:03:10Z", "closed_at": "2020-04-12T10:03:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code:\r\n\r\n```python\r\nimport yaml\r\nyaml.load('a: 1:10', Loader=yaml.FullLoader)\r\n```\r\n\r\nreturns the object `{'a': 70}`\r\n\r\nThe expected result would either be `{'a': '1:10'}` (as the BaseLoader does) or an exception if the yaml code is invalid.\r\n\r\n# Environment\r\n\r\n* Yaml version: 5.1.2\r\n* Python version: 3.7.5\r\n* OS: Ubuntu 19.10\r\n\r\nWhat is the reason for the number `70`? Is this behavior intended or is this a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/393", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/393/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/393/events", "html_url": "https://github.com/yaml/pyyaml/issues/393", "id": 595403715, "node_id": "MDU6SXNzdWU1OTU0MDM3MTU=", "number": 393, "title": "dump() converts strings with exponential number to numbers", "user": {"login": "MadVikingGod", "id": 3766680, "node_id": "MDQ6VXNlcjM3NjY2ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3766680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MadVikingGod", "html_url": "https://github.com/MadVikingGod", "followers_url": "https://api.github.com/users/MadVikingGod/followers", "following_url": "https://api.github.com/users/MadVikingGod/following{/other_user}", "gists_url": "https://api.github.com/users/MadVikingGod/gists{/gist_id}", "starred_url": "https://api.github.com/users/MadVikingGod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MadVikingGod/subscriptions", "organizations_url": "https://api.github.com/users/MadVikingGod/orgs", "repos_url": "https://api.github.com/users/MadVikingGod/repos", "events_url": "https://api.github.com/users/MadVikingGod/events{/privacy}", "received_events_url": "https://api.github.com/users/MadVikingGod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-06T20:24:45Z", "updated_at": "2020-04-08T14:55:43Z", "closed_at": "2020-04-08T14:55:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "PyYAML version: 5.3.1\r\n\r\nCurrently, when trying to output yaml some string with exponential numbers are converted to numbers.\r\nThis seems to only be scoped with outputting, ie. it loads into an obj as a string.\r\n  \r\nWhen running:\r\n```\r\nimport yaml\r\nobj = {\"int\": \"1\", \"exp\": \"1e6\"}\r\nprint(yaml.dump(obj))\r\n```\r\nThe current output is \r\n```\r\nexp: 1e6\r\nint: '1'\r\n```\r\nThe Expected output is:\r\n```\r\nexp: '1e6'\r\nint: '1'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/391", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/391/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/391/events", "html_url": "https://github.com/yaml/pyyaml/issues/391", "id": 592845280, "node_id": "MDU6SXNzdWU1OTI4NDUyODA=", "number": 391, "title": "Confused by \"PyYAML yaml.load(input) Deprecation\" doc", "user": {"login": "anentropic", "id": 147840, "node_id": "MDQ6VXNlcjE0Nzg0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anentropic", "html_url": "https://github.com/anentropic", "followers_url": "https://api.github.com/users/anentropic/followers", "following_url": "https://api.github.com/users/anentropic/following{/other_user}", "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}", "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions", "organizations_url": "https://api.github.com/users/anentropic/orgs", "repos_url": "https://api.github.com/users/anentropic/repos", "events_url": "https://api.github.com/users/anentropic/events{/privacy}", "received_events_url": "https://api.github.com/users/anentropic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-02T18:37:40Z", "updated_at": "2020-04-02T22:18:38Z", "closed_at": "2020-04-02T19:24:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/yaml/pyyaml/wiki/PyYAML-yaml.load(input)-Deprecation\r\n\r\n> - `SafeLoader`\r\n>   Loads a subset of the YAML language, safely. This is recommended for loading untrusted input.\r\n> - `FullLoader`\r\n>   Loads the full YAML language. Avoids arbitrary code execution. This is currently (PyYAML 5.1) the default loader called by `yaml.load(input)` (after issuing the warning).\r\n> - `UnsafeLoader` (also called `Loader` for backwards compatability)\r\n>    The original Loader code that could be easily exploitable by untrusted data input.\r\n\r\nIt is not clear from this whether `FullLoader` is safe or not?\r\n\r\nIt says it \"avoids arbitrary code execution\"... which sounds safe.\r\n\r\nBut it also issues a warning which says \"the default Loader is unsafe\"... and `FullLoader` is the default Loader. So it's unsafe?\r\n\r\n(And `UnsafeLoader` is... for people who were using arbitrary code execution as a feature?)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/390", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/390/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/390/events", "html_url": "https://github.com/yaml/pyyaml/issues/390", "id": 591883849, "node_id": "MDU6SXNzdWU1OTE4ODM4NDk=", "number": 390, "title": "help me !!!!!   I want to show you how do we do that", "user": {"login": "feixia5712", "id": 12670758, "node_id": "MDQ6VXNlcjEyNjcwNzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/12670758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feixia5712", "html_url": "https://github.com/feixia5712", "followers_url": "https://api.github.com/users/feixia5712/followers", "following_url": "https://api.github.com/users/feixia5712/following{/other_user}", "gists_url": "https://api.github.com/users/feixia5712/gists{/gist_id}", "starred_url": "https://api.github.com/users/feixia5712/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feixia5712/subscriptions", "organizations_url": "https://api.github.com/users/feixia5712/orgs", "repos_url": "https://api.github.com/users/feixia5712/repos", "events_url": "https://api.github.com/users/feixia5712/events{/privacy}", "received_events_url": "https://api.github.com/users/feixia5712/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-01T12:38:45Z", "updated_at": "2020-04-02T16:34:08Z", "closed_at": "2020-04-02T16:33:58Z", "author_association": "NONE", "active_lock_reason": "off-topic", "body": "`NOW  this is dict\r\ndict1={\"xxxxx\":\r\n     [\r\n\t [\"hello\":1],[\"hello2\":2]\r\n\t ]\r\n}\r\n-------------------------------------------------------------\r\nI want get this\r\nxxxxx:\r\n  - [hello:1]\r\n  - [hello2:2]\r\n  \r\nbut i get\r\nxxxxx:\r\n  - - hello\r\n    - 1\r\n  - - hello2\r\n    - 2\r\n\t\r\nwhat should I do?\t\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/385", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/385/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/385/events", "html_url": "https://github.com/yaml/pyyaml/issues/385", "id": 569289857, "node_id": "MDU6SXNzdWU1NjkyODk4NTc=", "number": 385, "title": "sligth difference on github package and pyyaml.org package: missing _yaml.c file", "user": {"login": "blue-devil", "id": 10853207, "node_id": "MDQ6VXNlcjEwODUzMjA3", "avatar_url": "https://avatars2.githubusercontent.com/u/10853207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blue-devil", "html_url": "https://github.com/blue-devil", "followers_url": "https://api.github.com/users/blue-devil/followers", "following_url": "https://api.github.com/users/blue-devil/following{/other_user}", "gists_url": "https://api.github.com/users/blue-devil/gists{/gist_id}", "starred_url": "https://api.github.com/users/blue-devil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blue-devil/subscriptions", "organizations_url": "https://api.github.com/users/blue-devil/orgs", "repos_url": "https://api.github.com/users/blue-devil/repos", "events_url": "https://api.github.com/users/blue-devil/events{/privacy}", "received_events_url": "https://api.github.com/users/blue-devil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-22T06:19:15Z", "updated_at": "2020-02-22T21:07:07Z", "closed_at": "2020-02-22T20:54:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\nThere is no \"_yaml.c\" file in the github package. But there is in the package where i have downloaded from www.pyyaml.org.\r\nWhen i try to compile code from github, compiler complain about the mising file  : `_yaml.c`\r\nWhen i try to compile sources from pyyaml, no complaint from compiler.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/384", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/384/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/384/events", "html_url": "https://github.com/yaml/pyyaml/issues/384", "id": 567712694, "node_id": "MDU6SXNzdWU1Njc3MTI2OTQ=", "number": 384, "title": "Error during Pip install on python 3.8 virtual environment on ubuntu 18.04.3", "user": {"login": "spbrogan", "id": 2954441, "node_id": "MDQ6VXNlcjI5NTQ0NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2954441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spbrogan", "html_url": "https://github.com/spbrogan", "followers_url": "https://api.github.com/users/spbrogan/followers", "following_url": "https://api.github.com/users/spbrogan/following{/other_user}", "gists_url": "https://api.github.com/users/spbrogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/spbrogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spbrogan/subscriptions", "organizations_url": "https://api.github.com/users/spbrogan/orgs", "repos_url": "https://api.github.com/users/spbrogan/repos", "events_url": "https://api.github.com/users/spbrogan/events{/privacy}", "received_events_url": "https://api.github.com/users/spbrogan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-19T17:19:36Z", "updated_at": "2020-03-04T20:09:39Z", "closed_at": "2020-02-19T17:30:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running an ubuntu 18.04.3 docker container on Windows 10.  \r\nPython 3.8 virtual environment. \r\nInstalling pyyaml dependency using pip-requirements file\r\n\r\n\r\nUsing cached https://files.pythonhosted.org/packages/3d/d9/ea9816aea31beeadccd03f1f8b625ecf8f645bd66744484d162d84803ce5/PyYAML-5.3.tar.gz\r\nBuilding wheels for collected packages: pyyaml\r\n  Running setup.py bdist_wheel for pyyaml ... error\r\n  Complete output from command /opt/src/edk2/venv/bin/python3.8 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-wmn69y4d/pyyaml/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /tmp/tmpvap4p3l3pip-wheel- --python-tag cp38:\r\n  usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\r\n     or: -c --help [cmd1 cmd2 ...]\r\n     or: -c --help-commands\r\n     or: -c cmd --help\r\n\r\n  error: invalid command 'bdist_wheel'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/381", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/381/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/381/events", "html_url": "https://github.com/yaml/pyyaml/issues/381", "id": 557463362, "node_id": "MDU6SXNzdWU1NTc0NjMzNjI=", "number": 381, "title": "yaml.dump appends a line at the end of the file", "user": {"login": "NargiT", "id": 3153333, "node_id": "MDQ6VXNlcjMxNTMzMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3153333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NargiT", "html_url": "https://github.com/NargiT", "followers_url": "https://api.github.com/users/NargiT/followers", "following_url": "https://api.github.com/users/NargiT/following{/other_user}", "gists_url": "https://api.github.com/users/NargiT/gists{/gist_id}", "starred_url": "https://api.github.com/users/NargiT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NargiT/subscriptions", "organizations_url": "https://api.github.com/users/NargiT/orgs", "repos_url": "https://api.github.com/users/NargiT/repos", "events_url": "https://api.github.com/users/NargiT/events{/privacy}", "received_events_url": "https://api.github.com/users/NargiT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-01-30T12:32:49Z", "updated_at": "2020-01-30T14:02:40Z", "closed_at": "2020-01-30T13:36:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\n`yaml.dump()` adds a new line at the end of a file. here an example to illustrate my problem.\r\n\r\ntest.yaml\r\n\r\n```yaml\r\nfoo:\r\n  bar: hello\r\n  loul: world\r\n```\r\nNo new line after `loul: world`\r\n\r\n```python\r\nfrom pathlib import Path\r\n\r\nimport yaml\r\n\r\ndef read_text():\r\n    with open(\"test.yaml\") as file:\r\n        data = yaml.safe_load(file)\r\n    \r\n    with open(\"test2.yaml\", mode=\"w\") as file:\r\n        yaml.safe_dump(data, file, default_flow_style=False, sort_keys=False)\r\n\r\n    file_text = Path(\"test.yaml\").read_text()\r\n    new_file_text = Path(\"test2.yaml\").read_text()\r\n    \r\n    assert file_text == new_file_text\r\n    # Raise AssertionError\r\n\r\nif __name__ == '__main__':\r\n    read_text()\r\n```\r\n\r\ntest2.yaml\r\n```yaml\r\nfoo:\r\n  bar: hello\r\n  loul: world\r\n# this line is added\r\n```\r\n\r\nIs this correct ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/377", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/377/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/377/events", "html_url": "https://github.com/yaml/pyyaml/issues/377", "id": 552603107, "node_id": "MDU6SXNzdWU1NTI2MDMxMDc=", "number": 377, "title": "Skip loading part of the YAML file", "user": {"login": "mitar", "id": 585279, "node_id": "MDQ6VXNlcjU4NTI3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/585279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitar", "html_url": "https://github.com/mitar", "followers_url": "https://api.github.com/users/mitar/followers", "following_url": "https://api.github.com/users/mitar/following{/other_user}", "gists_url": "https://api.github.com/users/mitar/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitar/subscriptions", "organizations_url": "https://api.github.com/users/mitar/orgs", "repos_url": "https://api.github.com/users/mitar/repos", "events_url": "https://api.github.com/users/mitar/events{/privacy}", "received_events_url": "https://api.github.com/users/mitar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-21T03:25:19Z", "updated_at": "2020-01-21T18:35:16Z", "closed_at": "2020-01-21T17:30:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have very large YAML files (300 MB plus) with known schema. When loading them, in many cases we know which part of the YAML file we want, and not the full YAML file. Is there a way to load YAML file but skip loading some parts of the YAML file (like that they would not even exist in the source YAML file)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/376", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/376/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/376/events", "html_url": "https://github.com/yaml/pyyaml/issues/376", "id": 552041478, "node_id": "MDU6SXNzdWU1NTIwNDE0Nzg=", "number": 376, "title": "`on` is loaded as True instead of a string", "user": {"login": "StrayDragon", "id": 26061593, "node_id": "MDQ6VXNlcjI2MDYxNTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/26061593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StrayDragon", "html_url": "https://github.com/StrayDragon", "followers_url": "https://api.github.com/users/StrayDragon/followers", "following_url": "https://api.github.com/users/StrayDragon/following{/other_user}", "gists_url": "https://api.github.com/users/StrayDragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/StrayDragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StrayDragon/subscriptions", "organizations_url": "https://api.github.com/users/StrayDragon/orgs", "repos_url": "https://api.github.com/users/StrayDragon/repos", "events_url": "https://api.github.com/users/StrayDragon/events{/privacy}", "received_events_url": "https://api.github.com/users/StrayDragon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-20T03:09:47Z", "updated_at": "2020-01-23T09:10:50Z", "closed_at": "2020-01-20T10:53:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Minimum reproducible situation, [complete code here](https://github.com/actions/starter-workflows/blob/master/ci/python-app.yml)\r\n\r\nUse PyYaml 5.3 and CPython 3.8.1\r\n```python\r\nimport yaml\r\ns = \"\"\"on: [push]\"\"\"\r\no = yaml.safe_load(s)\r\nprint(o)\r\n```\r\nwill output:\r\n```\r\n{True: ['push']}\r\n```\r\nObviously, it's a wrong answer... and expect `{'on': ['push']}`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/371", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/371/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/371/events", "html_url": "https://github.com/yaml/pyyaml/issues/371", "id": 547832934, "node_id": "MDU6SXNzdWU1NDc4MzI5MzQ=", "number": 371, "title": "load list of string with ':' in it, get different result with BaseLoader and SafeLoader", "user": {"login": "beegerous", "id": 7530677, "node_id": "MDQ6VXNlcjc1MzA2Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/7530677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beegerous", "html_url": "https://github.com/beegerous", "followers_url": "https://api.github.com/users/beegerous/followers", "following_url": "https://api.github.com/users/beegerous/following{/other_user}", "gists_url": "https://api.github.com/users/beegerous/gists{/gist_id}", "starred_url": "https://api.github.com/users/beegerous/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beegerous/subscriptions", "organizations_url": "https://api.github.com/users/beegerous/orgs", "repos_url": "https://api.github.com/users/beegerous/repos", "events_url": "https://api.github.com/users/beegerous/events{/privacy}", "received_events_url": "https://api.github.com/users/beegerous/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-10T02:44:00Z", "updated_at": "2020-01-10T11:52:54Z", "closed_at": "2020-01-10T11:52:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "file content:\r\n``` cpp\r\na: 1\r\nb:\r\n  - 10:0\r\n  - 100:0\r\n```\r\n\r\nmy code\r\n``` python\r\nimport yaml\r\n\r\nprint(yaml.__version__)\r\nc = yaml.safe_load(open(\"./in\"))\r\nprint(c)\r\nc = yaml.unsafe_load(open(\"./in\"))\r\nprint(c)\r\nc = yaml.full_load(open(\"./in\"))\r\nprint(c)\r\nc = yaml.load(open(\"./in\"), Loader=yaml.BaseLoader)\r\nprint(c)\r\n```\r\n\r\nand get result:\r\n\r\n``` cpp\r\n5.3\r\n{'a': 1, 'b': [600, 6000]}\r\n{'a': 1, 'b': [600, 6000]}\r\n{'a': 1, 'b': [600, 6000]}\r\n{'a': '1', 'b': ['10:0', '100:0']}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/367", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/367/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/367/events", "html_url": "https://github.com/yaml/pyyaml/issues/367", "id": 543525644, "node_id": "MDU6SXNzdWU1NDM1MjU2NDQ=", "number": 367, "title": "yaml.dump does not work with defaultdict", "user": {"login": "schrockn", "id": 28738937, "node_id": "MDQ6VXNlcjI4NzM4OTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/28738937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schrockn", "html_url": "https://github.com/schrockn", "followers_url": "https://api.github.com/users/schrockn/followers", "following_url": "https://api.github.com/users/schrockn/following{/other_user}", "gists_url": "https://api.github.com/users/schrockn/gists{/gist_id}", "starred_url": "https://api.github.com/users/schrockn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schrockn/subscriptions", "organizations_url": "https://api.github.com/users/schrockn/orgs", "repos_url": "https://api.github.com/users/schrockn/repos", "events_url": "https://api.github.com/users/schrockn/events{/privacy}", "received_events_url": "https://api.github.com/users/schrockn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-29T19:06:56Z", "updated_at": "2020-07-28T23:03:49Z", "closed_at": "2019-12-29T20:43:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.7.4\r\nPyYAML 3.13\r\n\r\n```\r\n>>> yaml.dump(defaultdict(), default_flow_style=False)\r\n'!!python/object/apply:collections.defaultdict []\\n'\r\n```\r\n\r\nNested ones can crash:\r\n\r\n```\r\n>>> dddict = defaultdict(lambda: defaultdict(dict))\r\n>>> dddict['foo']['bar'] = 'baaz'\r\n>>> yaml.dump(dddict, default_flow_style=False)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/__init__.py\", line 200, in dump\r\n    return dump_all([data], stream, Dumper=Dumper, **kwds)\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/__init__.py\", line 188, in dump_all\r\n    dumper.represent(data)\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/representer.py\", line 27, in represent\r\n    self.serialize(node)\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/serializer.py\", line 54, in serialize\r\n    self.serialize_node(node, None, None)\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/serializer.py\", line 108, in serialize_node\r\n    self.serialize_node(value, node, key)\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/serializer.py\", line 100, in serialize_node\r\n    self.emit(SequenceEndEvent())\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/emitter.py\", line 115, in emit\r\n    self.state()\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/emitter.py\", line 374, in expect_first_block_sequence_item\r\n    return self.expect_block_sequence_item(first=True)\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/emitter.py\", line 384, in expect_block_sequence_item\r\n    self.expect_node(sequence=True)\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/emitter.py\", line 242, in expect_node\r\n    self.process_tag()\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/emitter.py\", line 489, in process_tag\r\n    self.prepared_tag = self.prepare_tag(tag)\r\n  File \"/Users/schrockn/venvs/prezi-dagster-dec-4/lib/python3.7/site-packages/yaml/emitter.py\", line 607, in prepare_tag\r\n    chunks.append('%%%02X' % ord(ch))\r\nTypeError: ord() expected string of length 1, but int found\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/365", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/365/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/365/events", "html_url": "https://github.com/yaml/pyyaml/issues/365", "id": 542860311, "node_id": "MDU6SXNzdWU1NDI4NjAzMTE=", "number": 365, "title": "number loaded error when number startswith 0", "user": {"login": "394659383", "id": 50472952, "node_id": "MDQ6VXNlcjUwNDcyOTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/50472952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/394659383", "html_url": "https://github.com/394659383", "followers_url": "https://api.github.com/users/394659383/followers", "following_url": "https://api.github.com/users/394659383/following{/other_user}", "gists_url": "https://api.github.com/users/394659383/gists{/gist_id}", "starred_url": "https://api.github.com/users/394659383/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/394659383/subscriptions", "organizations_url": "https://api.github.com/users/394659383/orgs", "repos_url": "https://api.github.com/users/394659383/repos", "events_url": "https://api.github.com/users/394659383/events{/privacy}", "received_events_url": "https://api.github.com/users/394659383/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-27T12:29:09Z", "updated_at": "2019-12-31T16:08:14Z", "closed_at": "2019-12-31T16:07:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a number isn't startswith 0,like 54321,yaml can load the right nunber.\r\nBuf if it is startswith 0,like 0054321,yaml cannot load the right number.\r\nmy code:        \r\n```\r\n'''\r\n        hexNumber,reValue=getValue(index)\r\n        itemContent=re.sub('TriggerIds: .*\\n',reValue,itemContent)\r\n        loadDict = yaml.load(itemContent, Loader=yaml.FullLoader)\r\n        transValue=loadDict['_configs']['configs'][0]['levelConfigs'][0]['TriggerIds']\r\n        print(index,hexNumber,transValue,type(transValue))\r\n'''\r\n```\r\nHere is some result loaded by ymal,the first col is the decimal number,the second col is the hexadecimal number and it is also the number need to be load in yaml,the third col is the value in data which is loaded by yaml,and the fourth col is the type of the value.\r\ncan you tell me if it is a bug or i used yaml at a worng way?\r\n```\r\n0 0000000 0 <class 'int'>\r\n1 0000001 1 <class 'int'>\r\n2 0000002 2 <class 'int'>\r\n3 0000003 3 <class 'int'>\r\n4 0000004 4 <class 'int'>\r\n5 0000005 5 <class 'int'>\r\n6 0000006 6 <class 'int'>\r\n7 0000007 7 <class 'int'>\r\n8 0000008 0000008 <class 'str'>\r\n9 0000009 0000009 <class 'str'>\r\n10 000000a 000000a <class 'str'>\r\n11 000000b 000000b <class 'str'>\r\n12 000000c 000000c <class 'str'>\r\n13 000000d 000000d <class 'str'>\r\n14 000000e 000000e <class 'str'>\r\n15 000000f 000000f <class 'str'>\r\n16 0000010 8 <class 'int'>\r\n17 0000011 9 <class 'int'>\r\n18 0000012 10 <class 'int'>\r\n19 0000013 11 <class 'int'>\r\n20 0000014 12 <class 'int'>\r\n21 0000015 13 <class 'int'>\r\n22 0000016 14 <class 'int'>\r\n23 0000017 15 <class 'int'>\r\n24 0000018 0000018 <class 'str'>\r\n25 0000019 0000019 <class 'str'>\r\n26 000001a 000001a <class 'str'>\r\n27 000001b 000001b <class 'str'>\r\n28 000001c 000001c <class 'str'>\r\n29 000001d 000001d <class 'str'>\r\n30 000001e 000001e <class 'str'>\r\n31 000001f 000001f <class 'str'>\r\n32 0000020 16 <class 'int'>\r\n33 0000021 17 <class 'int'>\r\n34 0000022 18 <class 'int'>\r\n35 0000023 19 <class 'int'>\r\n36 0000024 20 <class 'int'>\r\n37 0000025 21 <class 'int'>\r\n38 0000026 22 <class 'int'>\r\n39 0000027 23 <class 'int'>\r\n40 0000028 0000028 <class 'str'>\r\n41 0000029 0000029 <class 'str'>\r\n42 000002a 000002a <class 'str'>\r\n43 000002b 000002b <class 'str'>\r\n44 000002c 000002c <class 'str'>\r\n45 000002d 000002d <class 'str'>\r\n46 000002e 000002e <class 'str'>\r\n47 000002f 000002f <class 'str'>\r\n48 0000030 24 <class 'int'>\r\n49 0000031 25 <class 'int'>\r\n50 0000032 26 <class 'int'>\r\n51 0000033 27 <class 'int'>\r\n52 0000034 28 <class 'int'>\r\n53 0000035 29 <class 'int'>\r\n54 0000036 30 <class 'int'>\r\n55 0000037 31 <class 'int'>\r\n56 0000038 0000038 <class 'str'>\r\n57 0000039 0000039 <class 'str'>\r\n58 000003a 000003a <class 'str'>\r\n59 000003b 000003b <class 'str'>\r\n60 000003c 000003c <class 'str'>\r\n61 000003d 000003d <class 'str'>\r\n62 000003e 000003e <class 'str'>\r\n63 000003f 000003f <class 'str'>\r\n64 0000040 32 <class 'int'>\r\n65 0000041 33 <class 'int'>\r\n66 0000042 34 <class 'int'>\r\n67 0000043 35 <class 'int'>\r\n68 0000044 36 <class 'int'>\r\n69 0000045 37 <class 'int'>\r\n70 0000046 38 <class 'int'>\r\n71 0000047 39 <class 'int'>\r\n72 0000048 0000048 <class 'str'>\r\n73 0000049 0000049 <class 'str'>\r\n74 000004a 000004a <class 'str'>\r\n75 000004b 000004b <class 'str'>\r\n76 000004c 000004c <class 'str'>\r\n77 000004d 000004d <class 'str'>\r\n78 000004e 000004e <class 'str'>\r\n79 000004f 000004f <class 'str'>\r\n80 0000050 40 <class 'int'>\r\n81 0000051 41 <class 'int'>\r\n82 0000052 42 <class 'int'>\r\n83 0000053 43 <class 'int'>\r\n84 0000054 44 <class 'int'>\r\n85 0000055 45 <class 'int'>\r\n86 0000056 46 <class 'int'>\r\n87 0000057 47 <class 'int'>\r\n88 0000058 0000058 <class 'str'>\r\n89 0000059 0000059 <class 'str'>\r\n90 000005a 000005a <class 'str'>\r\n91 000005b 000005b <class 'str'>\r\n92 000005c 000005c <class 'str'>\r\n93 000005d 000005d <class 'str'>\r\n94 000005e 000005e <class 'str'>\r\n95 000005f 000005f <class 'str'>\r\n96 0000060 48 <class 'int'>\r\n97 0000061 49 <class 'int'>\r\n98 0000062 50 <class 'int'>\r\n99 0000063 51 <class 'int'>\r\n100 0000064 52 <class 'int'>\r\n101 0000065 53 <class 'int'>\r\n102 0000066 54 <class 'int'>\r\n103 0000067 55 <class 'int'>\r\n104 0000068 0000068 <class 'str'>\r\n105 0000069 0000069 <class 'str'>\r\n106 000006a 000006a <class 'str'>\r\n107 000006b 000006b <class 'str'>\r\n108 000006c 000006c <class 'str'>\r\n109 000006d 000006d <class 'str'>\r\n110 000006e 000006e <class 'str'>\r\n111 000006f 000006f <class 'str'>\r\n112 0000070 56 <class 'int'>\r\n113 0000071 57 <class 'int'>\r\n114 0000072 58 <class 'int'>\r\n115 0000073 59 <class 'int'>\r\n116 0000074 60 <class 'int'>\r\n117 0000075 61 <class 'int'>\r\n118 0000076 62 <class 'int'>\r\n119 0000077 63 <class 'int'>\r\n120 0000078 0000078 <class 'str'>\r\n121 0000079 0000079 <class 'str'>\r\n122 000007a 000007a <class 'str'>\r\n123 000007b 000007b <class 'str'>\r\n124 000007c 000007c <class 'str'>\r\n125 000007d 000007d <class 'str'>\r\n126 000007e 000007e <class 'str'>\r\n127 000007f 000007f <class 'str'>\r\n128 0000080 0000080 <class 'str'>\r\n129 0000081 0000081 <class 'str'>\r\n130 0000082 0000082 <class 'str'>\r\n131 0000083 0000083 <class 'str'>\r\n132 0000084 0000084 <class 'str'>\r\n133 0000085 0000085 <class 'str'>\r\n134 0000086 0000086 <class 'str'>\r\n135 0000087 0000087 <class 'str'>\r\n136 0000088 0000088 <class 'str'>\r\n137 0000089 0000089 <class 'str'>\r\n138 000008a 000008a <class 'str'>\r\n139 000008b 000008b <class 'str'>\r\n140 000008c 000008c <class 'str'>\r\n141 000008d 000008d <class 'str'>\r\n142 000008e 000008e <class 'str'>\r\n143 000008f 000008f <class 'str'>\r\n144 0000090 0000090 <class 'str'>\r\n145 0000091 0000091 <class 'str'>\r\n146 0000092 0000092 <class 'str'>\r\n147 0000093 0000093 <class 'str'>\r\n148 0000094 0000094 <class 'str'>\r\n149 0000095 0000095 <class 'str'>\r\n150 0000096 0000096 <class 'str'>\r\n151 0000097 0000097 <class 'str'>\r\n152 0000098 0000098 <class 'str'>\r\n153 0000099 0000099 <class 'str'>\r\n154 000009a 000009a <class 'str'>\r\n155 000009b 000009b <class 'str'>\r\n156 000009c 000009c <class 'str'>\r\n157 000009d 000009d <class 'str'>\r\n158 000009e 000009e <class 'str'>\r\n159 000009f 000009f <class 'str'>\r\n160 00000a0 00000a0 <class 'str'>\r\n161 00000a1 00000a1 <class 'str'>\r\n162 00000a2 00000a2 <class 'str'>\r\n163 00000a3 00000a3 <class 'str'>\r\n164 00000a4 00000a4 <class 'str'>\r\n165 00000a5 00000a5 <class 'str'>\r\n166 00000a6 00000a6 <class 'str'>\r\n167 00000a7 00000a7 <class 'str'>\r\n168 00000a8 00000a8 <class 'str'>\r\n169 00000a9 00000a9 <class 'str'>\r\n170 00000aa 00000aa <class 'str'>\r\n171 00000ab 00000ab <class 'str'>\r\n172 00000ac 00000ac <class 'str'>\r\n173 00000ad 00000ad <class 'str'>\r\n174 00000ae 00000ae <class 'str'>\r\n175 00000af 00000af <class 'str'>\r\n176 00000b0 00000b0 <class 'str'>\r\n177 00000b1 00000b1 <class 'str'>\r\n178 00000b2 00000b2 <class 'str'>\r\n179 00000b3 00000b3 <class 'str'>\r\n180 00000b4 00000b4 <class 'str'>\r\n181 00000b5 00000b5 <class 'str'>\r\n182 00000b6 00000b6 <class 'str'>\r\n183 00000b7 00000b7 <class 'str'>\r\n184 00000b8 00000b8 <class 'str'>\r\n185 00000b9 00000b9 <class 'str'>\r\n186 00000ba 00000ba <class 'str'>\r\n187 00000bb 00000bb <class 'str'>\r\n188 00000bc 00000bc <class 'str'>\r\n189 00000bd 00000bd <class 'str'>\r\n190 00000be 00000be <class 'str'>\r\n191 00000bf 00000bf <class 'str'>\r\n192 00000c0 00000c0 <class 'str'>\r\n193 00000c1 00000c1 <class 'str'>\r\n194 00000c2 00000c2 <class 'str'>\r\n195 00000c3 00000c3 <class 'str'>\r\n196 00000c4 00000c4 <class 'str'>\r\n197 00000c5 00000c5 <class 'str'>\r\n198 00000c6 00000c6 <class 'str'>\r\n199 00000c7 00000c7 <class 'str'>\r\n200 00000c8 00000c8 <class 'str'>\r\n201 00000c9 00000c9 <class 'str'>\r\n202 00000ca 00000ca <class 'str'>\r\n203 00000cb 00000cb <class 'str'>\r\n204 00000cc 00000cc <class 'str'>\r\n205 00000cd 00000cd <class 'str'>\r\n206 00000ce 00000ce <class 'str'>\r\n207 00000cf 00000cf <class 'str'>\r\n208 00000d0 00000d0 <class 'str'>\r\n209 00000d1 00000d1 <class 'str'>\r\n210 00000d2 00000d2 <class 'str'>\r\n211 00000d3 00000d3 <class 'str'>\r\n212 00000d4 00000d4 <class 'str'>\r\n213 00000d5 00000d5 <class 'str'>\r\n214 00000d6 00000d6 <class 'str'>\r\n215 00000d7 00000d7 <class 'str'>\r\n216 00000d8 00000d8 <class 'str'>\r\n217 00000d9 00000d9 <class 'str'>\r\n218 00000da 00000da <class 'str'>\r\n219 00000db 00000db <class 'str'>\r\n220 00000dc 00000dc <class 'str'>\r\n221 00000dd 00000dd <class 'str'>\r\n222 00000de 00000de <class 'str'>\r\n223 00000df 00000df <class 'str'>\r\n224 00000e0 00000e0 <class 'str'>\r\n225 00000e1 00000e1 <class 'str'>\r\n226 00000e2 00000e2 <class 'str'>\r\n227 00000e3 00000e3 <class 'str'>\r\n228 00000e4 00000e4 <class 'str'>\r\n229 00000e5 00000e5 <class 'str'>\r\n230 00000e6 00000e6 <class 'str'>\r\n231 00000e7 00000e7 <class 'str'>\r\n232 00000e8 00000e8 <class 'str'>\r\n233 00000e9 00000e9 <class 'str'>\r\n234 00000ea 00000ea <class 'str'>\r\n235 00000eb 00000eb <class 'str'>\r\n236 00000ec 00000ec <class 'str'>\r\n237 00000ed 00000ed <class 'str'>\r\n238 00000ee 00000ee <class 'str'>\r\n239 00000ef 00000ef <class 'str'>\r\n240 00000f0 00000f0 <class 'str'>\r\n241 00000f1 00000f1 <class 'str'>\r\n242 00000f2 00000f2 <class 'str'>\r\n243 00000f3 00000f3 <class 'str'>\r\n244 00000f4 00000f4 <class 'str'>\r\n245 00000f5 00000f5 <class 'str'>\r\n246 00000f6 00000f6 <class 'str'>\r\n247 00000f7 00000f7 <class 'str'>\r\n248 00000f8 00000f8 <class 'str'>\r\n249 00000f9 00000f9 <class 'str'>\r\n250 00000fa 00000fa <class 'str'>\r\n251 00000fb 00000fb <class 'str'>\r\n252 00000fc 00000fc <class 'str'>\r\n253 00000fd 00000fd <class 'str'>\r\n254 00000fe 00000fe <class 'str'>\r\n255 00000ff 00000ff <class 'str'>\r\n256 0000100 64 <class 'int'>\r\n257 0000101 65 <class 'int'>\r\n258 0000102 66 <class 'int'>\r\n```\r\n\r\nedit @perlpunk add code markers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/353", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/353/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/353/events", "html_url": "https://github.com/yaml/pyyaml/issues/353", "id": 530697981, "node_id": "MDU6SXNzdWU1MzA2OTc5ODE=", "number": 353, "title": "String Formating with Anchor References", "user": {"login": "q4Zar", "id": 47315555, "node_id": "MDQ6VXNlcjQ3MzE1NTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/47315555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/q4Zar", "html_url": "https://github.com/q4Zar", "followers_url": "https://api.github.com/users/q4Zar/followers", "following_url": "https://api.github.com/users/q4Zar/following{/other_user}", "gists_url": "https://api.github.com/users/q4Zar/gists{/gist_id}", "starred_url": "https://api.github.com/users/q4Zar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/q4Zar/subscriptions", "organizations_url": "https://api.github.com/users/q4Zar/orgs", "repos_url": "https://api.github.com/users/q4Zar/repos", "events_url": "https://api.github.com/users/q4Zar/events{/privacy}", "received_events_url": "https://api.github.com/users/q4Zar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-01T09:05:01Z", "updated_at": "2019-12-01T16:38:05Z", "closed_at": "2019-12-01T16:38:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to combine functionnalities and avoid hardcoding things but i can't find solutions so i'm asking here.\r\n\r\nExample talks better than words :\r\n\r\n```yaml\r\n\r\nmaster_grid:\r\n  \r\n  values:\r\n    default:        &vd       100/34\r\n    default-gtc:    &dvgtc    \"repeat(34, {{*vd}})\"\r\n\r\n```\r\nthen loading :\r\n\r\n```python\r\nwith open('./psych_datamodel.yml', 'r') as yml:\r\n  data_model = yaml.load(yml, Loader=yaml.FullLoader)\r\n```\r\n\r\nthe result is obviously \r\n\r\n```python\r\n{'master_grid': {'styles': {'template': {'display': 'grid'}},\r\n                 'values': {'default': '100/34',\r\n                 'default-gtc': 'repeat(34, {{*vd}})'}}}\r\n```\r\n\r\nWhen i'm looking to have a result like \r\n\r\n```python\r\n{'master_grid': {'styles': {'template': {'display': 'grid'}},\r\n                 'values': {'default': '100/34',\r\n                 'default-gtc': 'repeat(34, {{2.9411764705882355}})'}}}\r\n```\r\n\r\nwhere *vd = 100/34 = 2.9411764705882355\r\n\r\nDo someone can orientate me through a possible solutions to do that natively with yaml ? \r\nOr do i need to use another layer like Jinja ...\r\n\r\nThanks for listening and see you soon!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/350", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/350/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/350/events", "html_url": "https://github.com/yaml/pyyaml/issues/350", "id": 525887317, "node_id": "MDU6SXNzdWU1MjU4ODczMTc=", "number": 350, "title": "Support for certain unicode literals depends on sys.maxunicode", "user": {"login": "anishathalye", "id": 3526486, "node_id": "MDQ6VXNlcjM1MjY0ODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3526486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anishathalye", "html_url": "https://github.com/anishathalye", "followers_url": "https://api.github.com/users/anishathalye/followers", "following_url": "https://api.github.com/users/anishathalye/following{/other_user}", "gists_url": "https://api.github.com/users/anishathalye/gists{/gist_id}", "starred_url": "https://api.github.com/users/anishathalye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anishathalye/subscriptions", "organizations_url": "https://api.github.com/users/anishathalye/orgs", "repos_url": "https://api.github.com/users/anishathalye/repos", "events_url": "https://api.github.com/users/anishathalye/events{/privacy}", "received_events_url": "https://api.github.com/users/anishathalye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-20T15:45:28Z", "updated_at": "2020-01-06T20:27:17Z", "closed_at": "2020-01-06T20:27:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that support for unicode literals over code point `0xffff`, introduced in cf1c86cb86db74206085e6f83e4586ddc7db9ac2, depends on `sys.maxunicode`. So for example, it'll work with standard Python 3 builds, but won't work with standard Python 2 builds, where `sys.maxunicode` is `2**16-1` (built with UCS-2).\r\n\r\nHere's a simple test program that works on Python 3, but not on a standard Python 2 build:\r\n\r\n```python\r\n# coding=utf8\r\nimport yaml\r\n\r\ns = '''\r\n\"\ud83d\ude22\"\r\n'''\r\n\r\nassert yaml.safe_load(s) == '\ud83d\ude22'\r\n```\r\n\r\nIt produces the following error on Python 2:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"pyyaml_unicode.py\", line 8, in <module>\r\n    assert yaml.safe_load(s) == '\ud83d\ude22'\r\n  File \"/usr/local/lib/python2.7/site-packages/yaml/__init__.py\", line 162, in safe_load\r\n    return load(stream, SafeLoader)\r\n  File \"/usr/local/lib/python2.7/site-packages/yaml/__init__.py\", line 112, in load\r\n    loader = Loader(stream)\r\n  File \"/usr/local/lib/python2.7/site-packages/yaml/loader.py\", line 34, in __init__\r\n    Reader.__init__(self, stream)\r\n  File \"/usr/local/lib/python2.7/site-packages/yaml/reader.py\", line 81, in __init__\r\n    self.determine_encoding()\r\n  File \"/usr/local/lib/python2.7/site-packages/yaml/reader.py\", line 137, in determine_encoding\r\n    self.update(1)\r\n  File \"/usr/local/lib/python2.7/site-packages/yaml/reader.py\", line 174, in update\r\n    self.check_printable(data)\r\n  File \"/usr/local/lib/python2.7/site-packages/yaml/reader.py\", line 149, in check_printable\r\n    'unicode', \"special characters are not allowed\")\r\nyaml.reader.ReaderError: unacceptable character #xd83d: special characters are not allowed\r\n  in \"<string>\", position 2\r\n```\r\n\r\nIs there any reasonable way to support this functionality on Python 2 as well?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/348", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/348/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/348/events", "html_url": "https://github.com/yaml/pyyaml/issues/348", "id": 524572253, "node_id": "MDU6SXNzdWU1MjQ1NzIyNTM=", "number": 348, "title": "encoding bug or missue?", "user": {"login": "jflorian", "id": 101996, "node_id": "MDQ6VXNlcjEwMTk5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/101996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jflorian", "html_url": "https://github.com/jflorian", "followers_url": "https://api.github.com/users/jflorian/followers", "following_url": "https://api.github.com/users/jflorian/following{/other_user}", "gists_url": "https://api.github.com/users/jflorian/gists{/gist_id}", "starred_url": "https://api.github.com/users/jflorian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jflorian/subscriptions", "organizations_url": "https://api.github.com/users/jflorian/orgs", "repos_url": "https://api.github.com/users/jflorian/repos", "events_url": "https://api.github.com/users/jflorian/events{/privacy}", "received_events_url": "https://api.github.com/users/jflorian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-18T19:31:17Z", "updated_at": "2019-11-18T21:31:06Z", "closed_at": "2019-11-18T20:24:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an input file containing:\r\n~~~\r\n78:\r\n    city:           Atlacomulco\r\n    region:         M\u00e9x\r\n    country:        Mexico\r\n~~~\r\nAnd this tidbit of code:\r\n~~~\r\n#!/usr/bin/python3.7\r\n\r\nimport yaml\r\nwith open('input.yaml') as f:\r\n    data = yaml.safe_load(f)\r\nwith open('output.yaml', 'w') as f:\r\n    yaml.dump(data, f)\r\n~~~\r\nIn the resultant output, I see the _region_ value mutates:\r\n~~~\r\n$ grep region input.yaml | od -c\r\n0000000                   r   e   g   i   o   n   :\r\n0000020                   M 303 251   x  \\n\r\n0000031\r\n$ grep region output.yaml | od -c\r\n0000000           r   e   g   i   o   n   :       \"   M   \\   x   E   9\r\n0000020   x   \"  \\n\r\n0000023\r\n~~~\r\nThis mutation looks like a bug, but I'm a dumb American who stopped paying attention past ASCII so I could easily be doing something wrong here.  If so, help would be greatly appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/342", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/342/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/342/events", "html_url": "https://github.com/yaml/pyyaml/issues/342", "id": 514447786, "node_id": "MDU6SXNzdWU1MTQ0NDc3ODY=", "number": 342, "title": "Could I specify a prefix and load to a class instance?", "user": {"login": "fy-kenny", "id": 1905343, "node_id": "MDQ6VXNlcjE5MDUzNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1905343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fy-kenny", "html_url": "https://github.com/fy-kenny", "followers_url": "https://api.github.com/users/fy-kenny/followers", "following_url": "https://api.github.com/users/fy-kenny/following{/other_user}", "gists_url": "https://api.github.com/users/fy-kenny/gists{/gist_id}", "starred_url": "https://api.github.com/users/fy-kenny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fy-kenny/subscriptions", "organizations_url": "https://api.github.com/users/fy-kenny/orgs", "repos_url": "https://api.github.com/users/fy-kenny/repos", "events_url": "https://api.github.com/users/fy-kenny/events{/privacy}", "received_events_url": "https://api.github.com/users/fy-kenny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-30T07:16:54Z", "updated_at": "2019-12-09T16:36:47Z", "closed_at": "2019-12-09T16:36:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n```yaml\r\na:\r\n  b:\r\n     c:\r\n        d: xxxx\r\n        e: yyyyy\r\n              f: nnnnn\r\n              g: mmmm\r\n```\r\n#####\r\nI come from java. so could I use it like java AutoConfiguration\r\n```python\r\nclass YamlConfig(prefix=\"a.b.c\"):\r\n.....\r\n```\r\n\r\n#####\r\n```python\r\nyamlConfig = YamlConifg()\r\n\r\nyamlConfig = yaml.load()\r\nor yaml.load(yamlConifg)\r\nor yamlConfig = yaml.load(YamlConfig.class)\r\n```\r\n#####\r\nAnd then I can use like this:\r\n```python\r\nyamlConfig.d\r\nor yamlConfig.e()\r\nor yamlConfig.e.f\r\nor yamlConfig.e().f()\r\nor yamlConifg.e.f()\r\n```\r\n###\r\n**Could you tell me you have already been implemented like this? And how can I found the docuemnt? or detail examples ,  or which version?**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/340", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/340/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/340/events", "html_url": "https://github.com/yaml/pyyaml/issues/340", "id": 496248069, "node_id": "MDU6SXNzdWU0OTYyNDgwNjk=", "number": 340, "title": "Using yaml.load(stream, Loader=yaml.SafeLoader) still prints deprecation warning", "user": {"login": "licht1stein", "id": 35418634, "node_id": "MDQ6VXNlcjM1NDE4NjM0", "avatar_url": "https://avatars2.githubusercontent.com/u/35418634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/licht1stein", "html_url": "https://github.com/licht1stein", "followers_url": "https://api.github.com/users/licht1stein/followers", "following_url": "https://api.github.com/users/licht1stein/following{/other_user}", "gists_url": "https://api.github.com/users/licht1stein/gists{/gist_id}", "starred_url": "https://api.github.com/users/licht1stein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/licht1stein/subscriptions", "organizations_url": "https://api.github.com/users/licht1stein/orgs", "repos_url": "https://api.github.com/users/licht1stein/repos", "events_url": "https://api.github.com/users/licht1stein/events{/privacy}", "received_events_url": "https://api.github.com/users/licht1stein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-20T09:30:41Z", "updated_at": "2019-11-18T11:37:03Z", "closed_at": "2019-11-18T11:37:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code:\r\n\r\n![image](https://user-images.githubusercontent.com/35418634/65316311-63f9a200-dba2-11e9-9143-d72ab1fb4179.png)\r\n\r\nError:\r\n\r\n![image](https://user-images.githubusercontent.com/35418634/65316348-74aa1800-dba2-11e9-89ef-e2541383ac5a.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/338", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/338/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/338/events", "html_url": "https://github.com/yaml/pyyaml/issues/338", "id": 493941618, "node_id": "MDU6SXNzdWU0OTM5NDE2MTg=", "number": 338, "title": "Unable to transform OrderedDict data into yaml format", "user": {"login": "kcorlidy", "id": 13376295, "node_id": "MDQ6VXNlcjEzMzc2Mjk1", "avatar_url": "https://avatars2.githubusercontent.com/u/13376295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcorlidy", "html_url": "https://github.com/kcorlidy", "followers_url": "https://api.github.com/users/kcorlidy/followers", "following_url": "https://api.github.com/users/kcorlidy/following{/other_user}", "gists_url": "https://api.github.com/users/kcorlidy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcorlidy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcorlidy/subscriptions", "organizations_url": "https://api.github.com/users/kcorlidy/orgs", "repos_url": "https://api.github.com/users/kcorlidy/repos", "events_url": "https://api.github.com/users/kcorlidy/events{/privacy}", "received_events_url": "https://api.github.com/users/kcorlidy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-16T09:34:44Z", "updated_at": "2020-04-07T12:53:00Z", "closed_at": "2020-04-07T12:53:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "pyyaml can transform ordinary dict to yaml. But when i transform `OrderedDict` data into yaml format i got unexpected output.\r\nIs there any way can help me complete it successfully? Or i missed some issues?\r\n\r\n\timport yaml\r\n\tfrom pprint import pprint\r\n\tfrom collections import OrderedDict\r\n\timport sys\r\n\r\n\tdoc = \"\"\"\r\n\tServer:\r\n\t  - Name: test\r\n\t    Domain: test.com\r\n\t    Specs:\r\n\t      - Hostname: A\r\n\t      - Hostname: B\r\n\t\"\"\"\r\n\tdata = yaml.load(doc)\r\n\tnew_data = OrderedDict(\r\n\t\tServer=OrderedDict([('Name','test'),\r\n\t\t\t\t\t\t('Domain','test.com'),\r\n\t            \t\t('Specs',[{'Hostname': 'A'}, {'Hostname': 'B'}])]))\r\n\tpprint(data)\r\n\tprint(yaml.dump(data, default_flow_style=False))\r\n\r\n\tpprint(new_data)\r\n\tprint(new_data.get(\"Server\").get(\"Name\") == \"test\")\r\n\tprint(yaml.dump(new_data, default_flow_style=False))\r\n\r\n\tprint(yaml.__version__)\r\n\tprint(sys.version)\r\n\r\nOutput\r\n\r\n\tC:\\Users\\kcorlidy\\Desktop\\1.py:14: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\r\n\t  data = yaml.load(doc)\r\n\t{'Server': [{'Domain': 'test.com',\r\n\t             'Name': 'test',\r\n\t             'Specs': [{'Hostname': 'A'}, {'Hostname': 'B'}]}]}\r\n\tServer:\r\n\t- Domain: test.com\r\n\t  Name: test\r\n\t  Specs:\r\n\t  - Hostname: A\r\n\t  - Hostname: B\r\n\r\n\tOrderedDict([('Server',\r\n\t              OrderedDict([('Name', 'test'),\r\n\t                           ('Domain', 'test.com'),\r\n\t                           ('Specs',\r\n\t                            [{'Hostname': 'A'}, {'Hostname': 'B'}])]))])\r\n\tTrue\r\n\t!!python/object/apply:collections.OrderedDict\r\n\t- - - Server\r\n\t    - !!python/object/apply:collections.OrderedDict\r\n\t      - - - Name\r\n\t          - test\r\n\t        - - Domain\r\n\t          - test.com\r\n\t        - - Specs\r\n\t          - - Hostname: A\r\n\t            - Hostname: B\r\n\r\n\t5.1.2\r\n\t3.7.1 (default, Oct 28 2018, 08:39:03) [MSC v.1912 64 bit (AMD64)]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/337", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/337/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/337/events", "html_url": "https://github.com/yaml/pyyaml/issues/337", "id": 492964780, "node_id": "MDU6SXNzdWU0OTI5NjQ3ODA=", "number": 337, "title": "Is there any bug bounty program for finding security bugs in pyyaml module", "user": {"login": "j0lt-github", "id": 34833539, "node_id": "MDQ6VXNlcjM0ODMzNTM5", "avatar_url": "https://avatars0.githubusercontent.com/u/34833539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j0lt-github", "html_url": "https://github.com/j0lt-github", "followers_url": "https://api.github.com/users/j0lt-github/followers", "following_url": "https://api.github.com/users/j0lt-github/following{/other_user}", "gists_url": "https://api.github.com/users/j0lt-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/j0lt-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j0lt-github/subscriptions", "organizations_url": "https://api.github.com/users/j0lt-github/orgs", "repos_url": "https://api.github.com/users/j0lt-github/repos", "events_url": "https://api.github.com/users/j0lt-github/events{/privacy}", "received_events_url": "https://api.github.com/users/j0lt-github/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-12T18:36:24Z", "updated_at": "2020-01-20T11:18:02Z", "closed_at": "2020-01-20T11:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi , \r\ni just want to know , is there any bug bounty program for finding security bugs in pyyaml module.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/336", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/336/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/336/events", "html_url": "https://github.com/yaml/pyyaml/issues/336", "id": 492343756, "node_id": "MDU6SXNzdWU0OTIzNDM3NTY=", "number": 336, "title": "Cut a 5.2 release?", "user": {"login": "dthkao", "id": 11166458, "node_id": "MDQ6VXNlcjExMTY2NDU4", "avatar_url": "https://avatars1.githubusercontent.com/u/11166458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dthkao", "html_url": "https://github.com/dthkao", "followers_url": "https://api.github.com/users/dthkao/followers", "following_url": "https://api.github.com/users/dthkao/following{/other_user}", "gists_url": "https://api.github.com/users/dthkao/gists{/gist_id}", "starred_url": "https://api.github.com/users/dthkao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dthkao/subscriptions", "organizations_url": "https://api.github.com/users/dthkao/orgs", "repos_url": "https://api.github.com/users/dthkao/repos", "events_url": "https://api.github.com/users/dthkao/events{/privacy}", "received_events_url": "https://api.github.com/users/dthkao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-09-11T16:32:14Z", "updated_at": "2020-04-21T09:13:13Z", "closed_at": "2020-04-21T09:13:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The open issues mentioned in #265 appear to be resolved. Is there a plan to actually release 5.2? There haven't been any commits since March.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/335", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/335/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/335/events", "html_url": "https://github.com/yaml/pyyaml/issues/335", "id": 492010752, "node_id": "MDU6SXNzdWU0OTIwMTA3NTI=", "number": 335, "title": "Handle invisible spaces", "user": {"login": "sivasama", "id": 28474749, "node_id": "MDQ6VXNlcjI4NDc0NzQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/28474749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sivasama", "html_url": "https://github.com/sivasama", "followers_url": "https://api.github.com/users/sivasama/followers", "following_url": "https://api.github.com/users/sivasama/following{/other_user}", "gists_url": "https://api.github.com/users/sivasama/gists{/gist_id}", "starred_url": "https://api.github.com/users/sivasama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sivasama/subscriptions", "organizations_url": "https://api.github.com/users/sivasama/orgs", "repos_url": "https://api.github.com/users/sivasama/repos", "events_url": "https://api.github.com/users/sivasama/events{/privacy}", "received_events_url": "https://api.github.com/users/sivasama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-11T04:29:35Z", "updated_at": "2019-12-31T16:04:02Z", "closed_at": "2019-12-31T16:04:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "In YAML which uses invisible spaces like em_space / en_space, the parsing does not work as expected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/331", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/331/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/331/events", "html_url": "https://github.com/yaml/pyyaml/issues/331", "id": 489846095, "node_id": "MDU6SXNzdWU0ODk4NDYwOTU=", "number": 331, "title": "Unexpected dump result", "user": {"login": "whiteskylife", "id": 22437514, "node_id": "MDQ6VXNlcjIyNDM3NTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/22437514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whiteskylife", "html_url": "https://github.com/whiteskylife", "followers_url": "https://api.github.com/users/whiteskylife/followers", "following_url": "https://api.github.com/users/whiteskylife/following{/other_user}", "gists_url": "https://api.github.com/users/whiteskylife/gists{/gist_id}", "starred_url": "https://api.github.com/users/whiteskylife/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whiteskylife/subscriptions", "organizations_url": "https://api.github.com/users/whiteskylife/orgs", "repos_url": "https://api.github.com/users/whiteskylife/repos", "events_url": "https://api.github.com/users/whiteskylife/events{/privacy}", "received_events_url": "https://api.github.com/users/whiteskylife/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-05T15:42:29Z", "updated_at": "2019-11-23T13:26:02Z", "closed_at": "2019-11-23T13:25:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "this is my code:\r\n\r\n```\r\nimport yaml\r\ntarget_file = open('result.yaml','w',encoding='utf-8')\r\n\r\ns_content = \"\"\"\r\nlogin-provider:\r\n    k8s:\r\n        helm_template_name: zhenai-crm-demo-provider\r\n        livenessProbe:\r\n          tcpSocket:\r\n            port: 5089\r\n        readinessProbe:\r\n          tcpSocket:\r\n            port: 5089\r\n        \r\n\"\"\"\r\n\r\ncontent = yaml.load(s_content, Loader=yaml.FullLoader)\r\ncontent['login-provider']['k8s']['new_arg'] = content['login-provider']['k8s']['readinessProbe']\r\n\r\nprint(content)\r\nyaml.dump(content, target_file)\r\n```\r\n\r\noutput is OK like this:\r\n```\r\n{'login-provider': {'k8s': {'helm_template_name': 'zhenai-crm-demo-provider', 'livenessProbe': {'tcpSocket': {'port': 5089}}, 'readinessProbe': {'tcpSocket': {'port': 5089}}, 'new_arg': {'tcpSocket': {'port': 5089}}}}}\r\n```\r\nbut the result.yaml is terrible\uff1a\r\n```\r\nlogin-provider:\r\n  k8s:\r\n    helm_template_name: zhenai-crm-demo-provider\r\n    livenessProbe:\r\n      tcpSocket:\r\n        port: 5089\r\n    new_arg: &id001\r\n      tcpSocket:\r\n        port: 5089\r\n    readinessProbe: *id001\r\n```\r\n\r\n\u201c&id001\u201d and \u201c*id001\u201d is not the result I want\uff0cpls help me \uff0cthx\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/330", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/330/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/330/events", "html_url": "https://github.com/yaml/pyyaml/issues/330", "id": 487780741, "node_id": "MDU6SXNzdWU0ODc3ODA3NDE=", "number": 330, "title": "does the passed stream need to be closed", "user": {"login": "hivemall", "id": 30777961, "node_id": "MDQ6VXNlcjMwNzc3OTYx", "avatar_url": "https://avatars3.githubusercontent.com/u/30777961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hivemall", "html_url": "https://github.com/hivemall", "followers_url": "https://api.github.com/users/hivemall/followers", "following_url": "https://api.github.com/users/hivemall/following{/other_user}", "gists_url": "https://api.github.com/users/hivemall/gists{/gist_id}", "starred_url": "https://api.github.com/users/hivemall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hivemall/subscriptions", "organizations_url": "https://api.github.com/users/hivemall/orgs", "repos_url": "https://api.github.com/users/hivemall/repos", "events_url": "https://api.github.com/users/hivemall/events{/privacy}", "received_events_url": "https://api.github.com/users/hivemall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-31T15:23:07Z", "updated_at": "2019-09-09T23:11:43Z", "closed_at": "2019-09-09T23:11:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "so simple, yet the doc is silent if i need to close stream \r\n```\r\ndata = yaml.safe_load(open('defaults.yaml'))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/325", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/325/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/325/events", "html_url": "https://github.com/yaml/pyyaml/issues/325", "id": 475368115, "node_id": "MDU6SXNzdWU0NzUzNjgxMTU=", "number": 325, "title": "5.1.2 released on pypi without first having a tag on github", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-31T21:34:28Z", "updated_at": "2019-08-05T12:01:10Z", "closed_at": "2019-08-01T17:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that version 5.1.2 popped up today on https://pypi.org/project/PyYAML/ but there is not git tag present, not a release file on github.\r\n\r\nThis should count as a security issue as it could also be result of having the PYPI account hacked.\r\n\r\nPYPI and github relases should be done only by the CI system once the tag is created (or pushed), the the other way around.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/323", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/323/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/323/events", "html_url": "https://github.com/yaml/pyyaml/issues/323", "id": 474173829, "node_id": "MDU6SXNzdWU0NzQxNzM4Mjk=", "number": 323, "title": "Syntax errors when running compileall - 5.1.1", "user": {"login": "JasonLewis23", "id": 9615766, "node_id": "MDQ6VXNlcjk2MTU3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9615766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JasonLewis23", "html_url": "https://github.com/JasonLewis23", "followers_url": "https://api.github.com/users/JasonLewis23/followers", "following_url": "https://api.github.com/users/JasonLewis23/following{/other_user}", "gists_url": "https://api.github.com/users/JasonLewis23/gists{/gist_id}", "starred_url": "https://api.github.com/users/JasonLewis23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JasonLewis23/subscriptions", "organizations_url": "https://api.github.com/users/JasonLewis23/orgs", "repos_url": "https://api.github.com/users/JasonLewis23/repos", "events_url": "https://api.github.com/users/JasonLewis23/events{/privacy}", "received_events_url": "https://api.github.com/users/JasonLewis23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-29T17:40:24Z", "updated_at": "2019-07-30T18:45:11Z", "closed_at": "2019-07-30T18:05:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing syntax errors during compilation of pyyaml-5.1.1 (using compileall) in various python2 and python3 versions (more worried about the syntax errors that are not located in the tests/ folder).\r\n\r\nContext - In our environment, we package/re-package pypi packages that are needed on Debian distributions if Debian does not contain a more recent version that we require or if Debian is missing the package entirely. This is done using the stdeb pypi package. This package inserts a compileall command (see example below) into the post installation step of the resulting Debian package so that the installation step fails if there are any syntax errors in the package. \r\n\r\nSystem Info - The attached logs are from a server running Debian Jessie (python 2.7.9 and 3.4.2). Similar syntax errors are also seen on Debian Stretch (python 2.7.13 and 3.5.3) as well as Debian buster (python 3.7.3).\r\n\r\ncommands to reproduce:\r\n-     pull down tarball\r\n-     tar -xvf  PyYAML-5.1.1.tar.gz\r\n-     cd PyYAML-5.1.1/\r\n-     python -m compileall ./\r\n-     python3 -m compileall ./\r\n\r\n[pyyaml_syntaxerrs_debianjessie.txt](https://github.com/yaml/pyyaml/files/3443563/pyyaml_syntaxerrs_debianjessie.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/322", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/322/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/322/events", "html_url": "https://github.com/yaml/pyyaml/issues/322", "id": 471713290, "node_id": "MDU6SXNzdWU0NzE3MTMyOTA=", "number": 322, "title": "Build on Python 3.8 fails", "user": {"login": "MeggyCal", "id": 23431872, "node_id": "MDQ6VXNlcjIzNDMxODcy", "avatar_url": "https://avatars0.githubusercontent.com/u/23431872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MeggyCal", "html_url": "https://github.com/MeggyCal", "followers_url": "https://api.github.com/users/MeggyCal/followers", "following_url": "https://api.github.com/users/MeggyCal/following{/other_user}", "gists_url": "https://api.github.com/users/MeggyCal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MeggyCal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MeggyCal/subscriptions", "organizations_url": "https://api.github.com/users/MeggyCal/orgs", "repos_url": "https://api.github.com/users/MeggyCal/repos", "events_url": "https://api.github.com/users/MeggyCal/events{/privacy}", "received_events_url": "https://api.github.com/users/MeggyCal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-23T13:56:58Z", "updated_at": "2019-08-01T13:30:51Z", "closed_at": "2019-08-01T13:16:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I build PyYAML with Python 3.8 I get following error (among tons of warnings):\r\n\r\n[   12s] ext/_yaml.c:318:75: note: in definition of macro \u2018__Pyx_PyCode_New\u2019\r\n[   12s]   318 |           PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n[   12s]       |                                                                           ^~~~~\r\n[   12s] In file included from /usr/include/python3.8/compile.h:5,\r\n[   12s]                  from /usr/include/python3.8/Python.h:138,\r\n[   12s]                  from ext/_yaml.c:4:\r\n[   12s] /usr/include/python3.8/code.h:122:28: note: expected \u2018PyObject *\u2019 {aka \u2018struct _object *\u2019} but argument is of type \u2018int\u2019\r\n[   12s]   122 | PyAPI_FUNC(PyCodeObject *) PyCode_New(\r\n[   12s]       |                            ^~~~~~~~~~\r\n[   12s] ext/_yaml.c:318:11: error: too many arguments to function \u2018PyCode_New\u2019\r\n[   12s]   318 |           PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\r\n[   12s]       |           ^~~~~~~~~~\r\n\r\nThis Cython issue might solve similar problem: https://github.com/cython/cython/issues/2938", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/321", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/321/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/321/events", "html_url": "https://github.com/yaml/pyyaml/issues/321", "id": 468594951, "node_id": "MDU6SXNzdWU0Njg1OTQ5NTE=", "number": 321, "title": "FullLoader is not much safer than UnsafeLoader", "user": {"login": "jamespic", "id": 614635, "node_id": "MDQ6VXNlcjYxNDYzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/614635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamespic", "html_url": "https://github.com/jamespic", "followers_url": "https://api.github.com/users/jamespic/followers", "following_url": "https://api.github.com/users/jamespic/following{/other_user}", "gists_url": "https://api.github.com/users/jamespic/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamespic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamespic/subscriptions", "organizations_url": "https://api.github.com/users/jamespic/orgs", "repos_url": "https://api.github.com/users/jamespic/repos", "events_url": "https://api.github.com/users/jamespic/events{/privacy}", "received_events_url": "https://api.github.com/users/jamespic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-07-16T11:15:02Z", "updated_at": "2019-12-02T23:25:13Z", "closed_at": "2019-12-02T22:31:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [documentation](https://github.com/yaml/pyyaml/wiki/PyYAML-yaml.load(input)-Deprecation) on `yaml.load` deprecation suggests that using `FullLoader` is safer than using `UnsafeLoader`. Whilst it's true that `FullLoader` is not vulnerable to the YAML given on that page, there are other payloads that trigger remote code execution or other problematic behaviour using only standard library modules:\r\n\r\n```\r\n# Executes arbitrary code - does rely on subprocess being used somewhere in the vulnerable application, but see forced import hack\r\nyaml.load('!!python/object/apply:subprocess.Popen [[\"echo\", \"Hello World\"]]')\r\n\r\n# Allows reading arbitrary files - notably, does not rely on any modules being loaded beyond those used by PyYAML\r\nyaml.load('!!python/object/apply:list [!!python/object/apply:io.FileIO [\"/etc/passwd\", \"r\"]]')\r\n\r\n# Writes to an arbitrary file - again, only uses modules that are imported by PyYAML\r\nyaml.load('!!python/object/apply:list [!!python/object/apply:map [!!python/object/apply:operator.methodcaller [\"write\", \"Hello World\"], [!!python/object/apply:io.FileIO [\"/tmp/output\", \"w\"]]]]')\r\n\r\n# Forcibly load a module that is not currently imported - only uses existing PyYAML dependencies\r\nyaml.load('!!python/object/apply:list [!!python/object/apply:map [!!python/object/apply:operator.methodcaller [\"load_module\", \"subprocess\"], [!!python/object/apply:itertools.__loader__ []]]]')\r\n```\r\n\r\nEither the documentation should be made clearer about the relative safety of `FullLoader`, or `FullLoader` should be tightened to prevent these cases.\r\n\r\nYou can summarise which types are available for use in exploits with the following snippet:\r\n```\r\nimport sys, yaml\r\nfor modulename, module in sys.modules.items():\r\n    for itemname, value in module.__dict__.items():\r\n        if isinstance(value, type):\r\n            print(modulename + \".\" + itemname)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/320", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/320/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/320/events", "html_url": "https://github.com/yaml/pyyaml/issues/320", "id": 468097991, "node_id": "MDU6SXNzdWU0NjgwOTc5OTE=", "number": 320, "title": "Test failures with 5.1 and libyaml 0.2.2", "user": {"login": "FRidh", "id": 2129135, "node_id": "MDQ6VXNlcjIxMjkxMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FRidh", "html_url": "https://github.com/FRidh", "followers_url": "https://api.github.com/users/FRidh/followers", "following_url": "https://api.github.com/users/FRidh/following{/other_user}", "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions", "organizations_url": "https://api.github.com/users/FRidh/orgs", "repos_url": "https://api.github.com/users/FRidh/repos", "events_url": "https://api.github.com/users/FRidh/events{/privacy}", "received_events_url": "https://api.github.com/users/FRidh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-07-15T12:25:22Z", "updated_at": "2019-07-16T10:31:51Z", "closed_at": "2019-07-16T09:09:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "The issue occurs with both 2.7.16 and 3.7.4 of the Python interpreter.\r\n```\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-07-09.data, tests/data/spec-07-09.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib3/test_appliance.py\", line 59, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib3/test_yaml_ext.py\", line 240, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib3/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib3/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='foo'),\r\n ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='foo %YAML 1.1'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-09.data:\r\n---\r\nfoo\r\n...\r\n# Repeated end marker.\r\n...\r\n---\r\nbar\r\n# No end marker.\r\n---\r\nbaz\r\n...\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-09.canonical:\r\n%YAML 1.1\r\n---\r\n!!str \"foo\"\r\n%YAML 1.1\r\n---\r\n!!str \"bar\"\r\n%YAML 1.1\r\n---\r\n!!str \"baz\"\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-07-10.data, tests/data/spec-07-10.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib3/test_appliance.py\", line 59, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib3/test_yaml_ext.py\", line 240, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib3/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib3/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='Root flow scalar'),\r\n ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='Root flow scalar %YAML 1.1'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-10.data:\r\n\"Root flow\r\n scalar\"\r\n--- !!str >\r\n Root block\r\n scalar\r\n---\r\n# Root collection:\r\nfoo : bar\r\n... # Is optional.\r\n---\r\n# Explicit document may be empty.\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-10.canonical:\r\n%YAML 1.1\r\n---\r\n!!str \"Root flow scalar\"\r\n%YAML 1.1\r\n---\r\n!!str \"Root block scalar\\n\"\r\n%YAML 1.1\r\n---\r\n!!map {\r\n  ? !!str \"foo\"\r\n  : !!str \"bar\"\r\n}\r\n---\r\n#!!str \"\"\r\n!!null \"\"\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-07-13.data, tests/data/spec-07-13.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib3/test_appliance.py\", line 59, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib3/test_yaml_ext.py\", line 240, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib3/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib3/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag='!foo', implicit=(False, False), value='No directives'),\r\n ScalarEvent(anchor=None, tag='!foo', implicit=(False, False), value='No directives %TAG ! %21foo'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-13.data:\r\n! \"First document\"\r\n---\r\n!foo \"No directives\"\r\n%TAG ! !foo\r\n---\r\n!bar \"With directives\"\r\n%YAML 1.1\r\n---\r\n!baz \"Reset settings\"\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-13.canonical:\r\n%YAML 1.1\r\n---\r\n!!str \"First document\"\r\n---\r\n!<!foo> \"No directives\"\r\n---\r\n!<!foobar> \"With directives\"\r\n---\r\n!<!baz> \"Reset settings\"\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-08-08.data, tests/data/spec-08-08.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib3/test_appliance.py\", line 59, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib3/test_yaml_ext.py\", line 240, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib3/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib3/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='foo bar'),\r\n ScalarEvent(anchor=None, tag='tag:yaml.org,2002:str', implicit=(False, False), value='foo bar %YAML 1.1'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-08-08.data:\r\n---\r\nfoo:\r\n \"bar\r\n baz\"\r\n---\r\n\"foo\r\n bar\"\r\n---\r\nfoo\r\n bar\r\n--- |\r\n foo\r\n...\r\n---------------------------------------------------------------------------\r\ntests/data/spec-08-08.canonical:\r\n%YAML 1.1\r\n---\r\n!!map {\r\n  ? !!str \"foo\"\r\n  : !!str \"bar baz\"\r\n}\r\n%YAML 1.1\r\n---\r\n!!str \"foo bar\"\r\n%YAML 1.1\r\n---\r\n!!str \"foo bar\"\r\n%YAML 1.1\r\n---\r\n!!str \"foo\\n\"\r\n===========================================================================\r\nTESTS: 2602\r\nFAILURES: 4\r\nerror: Tests failed\r\nbuilder for '/nix/store/dm5kjkylawq31ag4v289s2p1danf5n5m-python3.7-PyYAML-5.1.drv' failed with exit code 1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/319", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/319/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/319/events", "html_url": "https://github.com/yaml/pyyaml/issues/319", "id": 468037608, "node_id": "MDU6SXNzdWU0NjgwMzc2MDg=", "number": 319, "title": "Fail to install with pip and python 2.7.10 on OSx 10.14.5", "user": {"login": "sedurCode", "id": 25512064, "node_id": "MDQ6VXNlcjI1NTEyMDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/25512064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sedurCode", "html_url": "https://github.com/sedurCode", "followers_url": "https://api.github.com/users/sedurCode/followers", "following_url": "https://api.github.com/users/sedurCode/following{/other_user}", "gists_url": "https://api.github.com/users/sedurCode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sedurCode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sedurCode/subscriptions", "organizations_url": "https://api.github.com/users/sedurCode/orgs", "repos_url": "https://api.github.com/users/sedurCode/repos", "events_url": "https://api.github.com/users/sedurCode/events{/privacy}", "received_events_url": "https://api.github.com/users/sedurCode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-15T09:53:06Z", "updated_at": "2019-07-30T01:50:40Z", "closed_at": "2019-07-30T01:50:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Attempting to install pyyaml on a mac running osx 10.15.5 using latest pip and python 2.7.10.\r\nThis package installed correctly using pip3 for python3.\r\nPlease see console dump:\r\n`\r\nInstalling collected packages: pyyaml, futures, singledispatch, backports-abc, tornado, nose\r\n  Running setup.py install for pyyaml ... error\r\n    ERROR: Complete output from command /usr/bin/python -u -c 'import setuptools, tokenize;__file__='\"'\"'/private/var/folders/gq/x_5hwdvx40vfnmgjk7rd239c0000gn/T/pip-install-zpwUpq/pyyaml/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /private/var/folders/gq/x_5hwdvx40vfnmgjk7rd239c0000gn/T/pip-record-b4OnNS/install-record.txt --single-version-externally-managed --compile:\r\n    ERROR: /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\r\n      warnings.warn(msg)\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.macosx-10.14-intel-2.7\r\n    creating build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/scanner.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/error.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/constructor.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/composer.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/events.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/__init__.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/representer.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/tokens.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/dumper.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/cyaml.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/parser.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/reader.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/loader.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/resolver.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/serializer.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/nodes.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    copying lib/yaml/emitter.py -> build/lib.macosx-10.14-intel-2.7/yaml\r\n    running build_ext\r\n    building '_yaml' extension\r\n    creating build/temp.macosx-10.14-intel-2.7\r\n    creating build/temp.macosx-10.14-intel-2.7/ext\r\n    cc -fno-strict-aliasing -fno-common -dynamic -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch x86_64 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c ext/_yaml.c -o build/temp.macosx-10.14-intel-2.7/ext/_yaml.o\r\n    In file included from ext/_yaml.c:596:\r\n    ext/_yaml.h:2:10: fatal error: 'yaml.h' file not found\r\n    #include <yaml.h>\r\n             ^~~~~~~~\r\n    1 error generated.\r\n    Error compiling module, falling back to pure Python\r\n    running install_lib\r\n    creating /Library/Python/2.7/site-packages/yaml\r\n    error: could not create '/Library/Python/2.7/site-packages/yaml': Permission denied\r\n    ----------------------------------------\r\nERROR: Command \"/usr/bin/python -u -c 'import setuptools, tokenize;__file__='\"'\"'/private/var/folders/gq/x_5hwdvx40vfnmgjk7rd239c0000gn/T/pip-install-zpwUpq/pyyaml/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /private/var/folders/gq/x_5hwdvx40vfnmgjk7rd239c0000gn/T/pip-record-b4OnNS/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /private/var/folders/gq/x_5hwdvx40vfnmgjk7rd239c0000gn/T/pip-install-zpwUpq/pyyaml/\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/318", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/318/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/318/events", "html_url": "https://github.com/yaml/pyyaml/issues/318", "id": 463820469, "node_id": "MDU6SXNzdWU0NjM4MjA0Njk=", "number": 318, "title": "Valid .yaml generates error \"yaml.scanner.ScannerError: mapping values are not allowed here\"", "user": {"login": "stefanodallapalma", "id": 18099827, "node_id": "MDQ6VXNlcjE4MDk5ODI3", "avatar_url": "https://avatars2.githubusercontent.com/u/18099827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanodallapalma", "html_url": "https://github.com/stefanodallapalma", "followers_url": "https://api.github.com/users/stefanodallapalma/followers", "following_url": "https://api.github.com/users/stefanodallapalma/following{/other_user}", "gists_url": "https://api.github.com/users/stefanodallapalma/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanodallapalma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanodallapalma/subscriptions", "organizations_url": "https://api.github.com/users/stefanodallapalma/orgs", "repos_url": "https://api.github.com/users/stefanodallapalma/repos", "events_url": "https://api.github.com/users/stefanodallapalma/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanodallapalma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-03T15:32:32Z", "updated_at": "2019-07-03T16:59:05Z", "closed_at": "2019-07-03T16:58:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the following yaml file:\r\n\r\n```yaml\r\n- include: ../common_playbooks/validate_environment.yml\r\n  gather_facts: false\r\n```\r\n\r\nrunning the following python script \r\n\r\n```python\r\n\r\nimport yaml\r\n\r\ns = '- include: ../common_playbooks/validate_environment.yml\\\r\n- gather_facts: false'\r\n\r\nyaml.safe_load(s)\r\n```\r\n\r\nproduces the following output:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/__init__.py\", line 162, in safe_load\r\n    return load(stream, SafeLoader)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/__init__.py\", line 114, in load\r\n    return loader.get_single_data()\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/constructor.py\", line 41, in get_single_data\r\n    node = self.get_single_node()\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/composer.py\", line 36, in get_single_node\r\n    document = self.compose_document()\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/composer.py\", line 55, in compose_document\r\n    node = self.compose_node(None, None)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/composer.py\", line 82, in compose_node\r\n    node = self.compose_sequence_node(anchor)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/composer.py\", line 111, in compose_sequence_node\r\n    node.value.append(self.compose_node(node, index))\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/composer.py\", line 84, in compose_node\r\n    node = self.compose_mapping_node(anchor)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/composer.py\", line 127, in compose_mapping_node\r\n    while not self.check_event(MappingEndEvent):\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/parser.py\", line 98, in check_event\r\n    self.current_event = self.state()\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/parser.py\", line 428, in parse_block_mapping_key\r\n    if self.check_token(KeyToken):\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/scanner.py\", line 116, in check_token\r\n    self.fetch_more_tokens()\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/scanner.py\", line 223, in fetch_more_tokens\r\n    return self.fetch_value()\r\n  File \"/home/user/.local/lib/python3.6/site-packages/yaml/scanner.py\", line 579, in fetch_value\r\n    self.get_mark())\r\nyaml.scanner.ScannerError: mapping values are not allowed here\r\n  in \"<unicode string>\", line 1, column 70:\r\n     ... te_environment.yml- gather_facts: false\r\n                                                              ^\r\n```\r\n\r\nDo you have any idea? By the way, the yaml seems to be valid for [this yaml lint](http://www.yamllint.com).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/317", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/317/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/317/events", "html_url": "https://github.com/yaml/pyyaml/issues/317", "id": 463699470, "node_id": "MDU6SXNzdWU0NjM2OTk0NzA=", "number": 317, "title": "Setting default multiconstructor results in an TypeError", "user": {"login": "Losik", "id": 626021, "node_id": "MDQ6VXNlcjYyNjAyMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/626021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Losik", "html_url": "https://github.com/Losik", "followers_url": "https://api.github.com/users/Losik/followers", "following_url": "https://api.github.com/users/Losik/following{/other_user}", "gists_url": "https://api.github.com/users/Losik/gists{/gist_id}", "starred_url": "https://api.github.com/users/Losik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Losik/subscriptions", "organizations_url": "https://api.github.com/users/Losik/orgs", "repos_url": "https://api.github.com/users/Losik/repos", "events_url": "https://api.github.com/users/Losik/events{/privacy}", "received_events_url": "https://api.github.com/users/Losik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-03T11:30:53Z", "updated_at": "2020-01-06T20:27:33Z", "closed_at": "2020-01-06T20:27:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "The issue is about the following lines in `construct_object` method of `BaseConstructor` class \r\nhttps://github.com/yaml/pyyaml/blob/5986257f9fc978d4a61b6e0001df554f80e565cb/lib/yaml/constructor.py#L76-L84\r\n\r\nI wanted to set up a multiconstructor for unknows tags. It seems like these lines are responsible for picking a default multiconstructor and therefore to define one I had to add a multiconstructor for `None` value as a `tag_prefix`\r\nhttps://github.com/yaml/pyyaml/blob/5986257f9fc978d4a61b6e0001df554f80e565cb/lib/yaml/constructor.py#L82-L84\r\n\r\nAt the very least the lines hint that `None` is considered a valid key for `self.yaml_multi_constructors`. But the only way the execution can reach these lines is by traversing all the keys in `self.yaml_multi_constructors` first. \r\n\r\nNow, if None is one of the keys, we get an exception ```TypeError: startswith first arg must be str, unicode, or tuple, not NoneType``` on line 77 making lines 83-84 effectively unreachable\r\nhttps://github.com/yaml/pyyaml/blob/5986257f9fc978d4a61b6e0001df554f80e565cb/lib/yaml/constructor.py#L77\r\n\r\nMinimal non-working example:\r\n```Python\r\nimport yaml\r\n\r\nclass MyLoader(yaml.loader.Loader):\r\n    pass\r\n\r\ndef default_multi_constructor(loader, tag_suffix, node):\r\n    return node.tag\r\n\r\nMyLoader.add_multi_constructor(None, default_multi_constructor)\r\n\r\nif __name__ == '__main__':\r\n    print yaml.load('''!som:multitag {}''', MyLoader)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/316", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/316/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/316/events", "html_url": "https://github.com/yaml/pyyaml/issues/316", "id": 462456555, "node_id": "MDU6SXNzdWU0NjI0NTY1NTU=", "number": 316, "title": "Fix up small typo replace intendation with indentation.", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-30T23:08:20Z", "updated_at": "2020-01-06T20:28:50Z", "closed_at": "2020-01-06T20:28:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Appears in two files in a handful of locations.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/311", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/311/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/311/events", "html_url": "https://github.com/yaml/pyyaml/issues/311", "id": 460647987, "node_id": "MDU6SXNzdWU0NjA2NDc5ODc=", "number": 311, "title": "Using libyaml from pyyaml on Windows", "user": {"login": "albertvaka", "id": 980842, "node_id": "MDQ6VXNlcjk4MDg0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/980842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertvaka", "html_url": "https://github.com/albertvaka", "followers_url": "https://api.github.com/users/albertvaka/followers", "following_url": "https://api.github.com/users/albertvaka/following{/other_user}", "gists_url": "https://api.github.com/users/albertvaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertvaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertvaka/subscriptions", "organizations_url": "https://api.github.com/users/albertvaka/orgs", "repos_url": "https://api.github.com/users/albertvaka/repos", "events_url": "https://api.github.com/users/albertvaka/events{/privacy}", "received_events_url": "https://api.github.com/users/albertvaka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T21:18:34Z", "updated_at": "2019-08-01T18:25:02Z", "closed_at": "2019-08-01T18:25:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Windows, the C extension (`_yaml.pyd`) never loads libyaml (`libyaml-0-2.dll`) even if the DLL is installed (eg: in `System32`). \r\n\r\nIs there any way to make pyyaml use the C implementation from libyaml on Windows?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/308", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/308/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/308/events", "html_url": "https://github.com/yaml/pyyaml/issues/308", "id": 459355351, "node_id": "MDU6SXNzdWU0NTkzNTUzNTE=", "number": 308, "title": "Print to file exclamation mark", "user": {"login": "TebanSierra", "id": 8109040, "node_id": "MDQ6VXNlcjgxMDkwNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8109040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TebanSierra", "html_url": "https://github.com/TebanSierra", "followers_url": "https://api.github.com/users/TebanSierra/followers", "following_url": "https://api.github.com/users/TebanSierra/following{/other_user}", "gists_url": "https://api.github.com/users/TebanSierra/gists{/gist_id}", "starred_url": "https://api.github.com/users/TebanSierra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TebanSierra/subscriptions", "organizations_url": "https://api.github.com/users/TebanSierra/orgs", "repos_url": "https://api.github.com/users/TebanSierra/repos", "events_url": "https://api.github.com/users/TebanSierra/events{/privacy}", "received_events_url": "https://api.github.com/users/TebanSierra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-21T20:11:52Z", "updated_at": "2019-11-19T20:12:21Z", "closed_at": "2019-11-19T20:12:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm creating a tempalte from a json object where the value of a key might start with an exclamation mark (!) as follows\r\n\r\n```python\r\ndata = {\r\n    \"Resource\": [\"arn:aws:logs:*:*:*\", \"!GetAtt LambdaFunctionName.Arn\"]\r\n}\r\n```\r\nWhen executing:\r\n```python\r\nwith open('./template.yaml', 'w') as out_f:\r\n            yaml.safe_dump(data, out_f, default_flow_style=False, sort_keys=False)\r\n```\r\n\r\nMy `template.yaml` is like this\r\n```yaml\r\nResource:\r\n- arn:aws:logs:*:*:*\r\n- '!GetAtt LambdaFunctionName.Arn'\r\n```\r\nEven it seems good I can't have the GetAtt line within quote marks. Is there any other argument I can use in either `dump()` or `safe_dump()` to force printing without quotes?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/307", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/307/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/307/events", "html_url": "https://github.com/yaml/pyyaml/issues/307", "id": 458941539, "node_id": "MDU6SXNzdWU0NTg5NDE1Mzk=", "number": 307, "title": "Starting value with double quotes at the begining", "user": {"login": "vrst37", "id": 34431050, "node_id": "MDQ6VXNlcjM0NDMxMDUw", "avatar_url": "https://avatars0.githubusercontent.com/u/34431050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrst37", "html_url": "https://github.com/vrst37", "followers_url": "https://api.github.com/users/vrst37/followers", "following_url": "https://api.github.com/users/vrst37/following{/other_user}", "gists_url": "https://api.github.com/users/vrst37/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrst37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrst37/subscriptions", "organizations_url": "https://api.github.com/users/vrst37/orgs", "repos_url": "https://api.github.com/users/vrst37/repos", "events_url": "https://api.github.com/users/vrst37/events{/privacy}", "received_events_url": "https://api.github.com/users/vrst37/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-20T23:58:33Z", "updated_at": "2019-11-19T20:13:30Z", "closed_at": "2019-11-19T20:13:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI want to dump the following yaml file using this module:\r\n\r\n```\r\nnetwork:\r\n  renderer: NetworkManager\r\n  version: 2\r\n  wifis:\r\n    wlp58s0:\r\n      access-points:\r\n        \"apn\":\r\n          password: \"pwd\"\r\n```\r\n\r\nNotice the double quotes aroudn apn and pwd.\r\n\r\nNow I have tried to do this using escape characters, and a few other tricks, and I am unable to do this.\r\n\r\nimport yaml\r\n\r\n```\r\nd = {\r\n    'network': {\r\n        'version': 2,\r\n        'renderer': 'NetworkManager',\r\n        'wifis': {\r\n            'wlp58s0': {\r\n                'access-points': {\r\n                    'apn': {\r\n                        'password': 'pwd'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nwith open('/home/edyza/result.yml', 'w') as yaml_file:\r\n    yaml.dump(d, yaml_file, default_flow_style=False, default_style=None)\r\n\r\n```\r\nBut I get the following:\r\n\r\n```\r\nnetwork:\r\n  renderer: NetworkManager\r\n  version: 2\r\n  wifis:\r\n    wlp58s0:\r\n      access-points:\r\n        apn:\r\n          password: pwd\r\n```\r\n\r\nWhen I try:\r\n\r\n```\r\nimport yaml\r\n\r\nd = {\r\n    'network': {\r\n        'version': 2,\r\n        'renderer': 'NetworkManager',\r\n        'wifis': {\r\n            'wlp58s0': {\r\n                'access-points': {\r\n                    '\"apn\"': {\r\n                        'password': \"\\\"pwd\\\"\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nwith open('/home/edyza/result.yml', 'w') as yaml_file:\r\n    yaml.dump(d, yaml_file, default_flow_style=False, default_style=None)\r\n\r\n```\r\n\r\nI get \r\n```\r\nnetwork:\r\n  renderer: NetworkManager\r\n  version: 2\r\n  wifis:\r\n    wlp58s0:\r\n      access-points:\r\n        '\"apn\"':\r\n          password: '\"pwd\"'\r\n```\r\n\r\nHow to achieve this?\r\n\r\nSO Link [here](https://stackoverflow.com/questions/56694257/generate-yaml-file-from-python-with-certain-keys-and-values-with-double-quotes)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/302", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/302/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/302/events", "html_url": "https://github.com/yaml/pyyaml/issues/302", "id": 448765085, "node_id": "MDU6SXNzdWU0NDg3NjUwODU=", "number": 302, "title": "Extra single quotation marks with datetime strings ", "user": {"login": "JoonaFinland", "id": 43171241, "node_id": "MDQ6VXNlcjQzMTcxMjQx", "avatar_url": "https://avatars0.githubusercontent.com/u/43171241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoonaFinland", "html_url": "https://github.com/JoonaFinland", "followers_url": "https://api.github.com/users/JoonaFinland/followers", "following_url": "https://api.github.com/users/JoonaFinland/following{/other_user}", "gists_url": "https://api.github.com/users/JoonaFinland/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoonaFinland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoonaFinland/subscriptions", "organizations_url": "https://api.github.com/users/JoonaFinland/orgs", "repos_url": "https://api.github.com/users/JoonaFinland/repos", "events_url": "https://api.github.com/users/JoonaFinland/events{/privacy}", "received_events_url": "https://api.github.com/users/JoonaFinland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-27T09:47:11Z", "updated_at": "2019-05-27T10:03:44Z", "closed_at": "2019-05-27T10:03:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When dumping a dictionary with string values that are in the format of YYYY-MM-DD HH:MM:SS, the string has extra single quotes around it. \r\n```\r\nimport yaml\r\ndict = {\"Date1\": '2019-12-22 11:11:11',\r\n\t\t\"Date2\": '2019-12-22 11:11.11',\r\n\t\t\"Date3\": '11:11:11',\r\n\t\t\"Date4\": '2019-12-22',\r\n\t\t\"Date5\": '2019/12/22 11:11:11'}\r\ndumped = yaml.dump(dict, default_flow_style = False)\r\nprint(dumped)\r\n```\r\nresults to:\r\n```\r\nDate1: '2019-12-22 11:11:11'\r\nDate2: 2019-12-22 11:11.11\r\nDate3: '11:11:11'\r\nDate4: '2019-12-22'\r\nDate5: 2019/12/22 11:11:11\r\n```\r\nEven just a 4 digit string results in extra single quotes.\r\n\r\nedit @perlpunk fix code markers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/298", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/298/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/298/events", "html_url": "https://github.com/yaml/pyyaml/issues/298", "id": 440784815, "node_id": "MDU6SXNzdWU0NDA3ODQ4MTU=", "number": 298, "title": "AssertionError: 'expected an exception'", "user": {"login": "kyrios123", "id": 7815316, "node_id": "MDQ6VXNlcjc4MTUzMTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7815316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyrios123", "html_url": "https://github.com/kyrios123", "followers_url": "https://api.github.com/users/kyrios123/followers", "following_url": "https://api.github.com/users/kyrios123/following{/other_user}", "gists_url": "https://api.github.com/users/kyrios123/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyrios123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyrios123/subscriptions", "organizations_url": "https://api.github.com/users/kyrios123/orgs", "repos_url": "https://api.github.com/users/kyrios123/repos", "events_url": "https://api.github.com/users/kyrios123/events{/privacy}", "received_events_url": "https://api.github.com/users/kyrios123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-06T16:37:34Z", "updated_at": "2019-11-19T20:09:38Z", "closed_at": "2019-11-19T20:09:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got the following errors during the tests\r\n- libyaml:  0.2.2\r\n- pyyaml: 3.13\r\n- python: 2.7.16 and 3.6.8\r\n- x86_64 GNU/Linux 5.0.7\r\n```\r\n===========================================================================\r\ntest_loader_error_ext(tests/data/colon-in-flow-context.loader-error): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib/test_appliance.py\", line 65, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib/test_yaml_ext.py\", line 240, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib/test_errors.py\", line 11, in test_loader_error\r\n    raise AssertionError(\"expected an exception\")\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n'expected an exception'\r\n---------------------------------------------------------------------------\r\ntests/data/colon-in-flow-context.loader-error:\r\n{ foo:bar }\r\n===========================================================================\r\ntest_loader_error_string_ext(tests/data/colon-in-flow-context.loader-error): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib/test_appliance.py\", line 65, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib/test_yaml_ext.py\", line 240, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib/test_errors.py\", line 22, in test_loader_error_string\r\n    raise AssertionError(\"expected an exception\")\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n'expected an exception'\r\n---------------------------------------------------------------------------\r\ntests/data/colon-in-flow-context.loader-error:\r\n{ foo:bar }\r\n===========================================================================\r\nTESTS: 2573\r\nFAILURES: 2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/295", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/295/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/295/events", "html_url": "https://github.com/yaml/pyyaml/issues/295", "id": 437296764, "node_id": "MDU6SXNzdWU0MzcyOTY3NjQ=", "number": 295, "title": "Extremely basic example does not load", "user": {"login": "felix-schneider", "id": 208336, "node_id": "MDQ6VXNlcjIwODMzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/208336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felix-schneider", "html_url": "https://github.com/felix-schneider", "followers_url": "https://api.github.com/users/felix-schneider/followers", "following_url": "https://api.github.com/users/felix-schneider/following{/other_user}", "gists_url": "https://api.github.com/users/felix-schneider/gists{/gist_id}", "starred_url": "https://api.github.com/users/felix-schneider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felix-schneider/subscriptions", "organizations_url": "https://api.github.com/users/felix-schneider/orgs", "repos_url": "https://api.github.com/users/felix-schneider/repos", "events_url": "https://api.github.com/users/felix-schneider/events{/privacy}", "received_events_url": "https://api.github.com/users/felix-schneider/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-25T16:43:28Z", "updated_at": "2019-04-26T09:09:42Z", "closed_at": "2019-04-26T09:09:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following example does not work for me:\r\n\r\n```python\r\nimport yaml\r\n\r\nclass Test(yaml.YAMLObject):\r\n    yaml_tag = \"!Test\"\r\n\r\nyaml.unsafe_load(\"!Test\")\r\n```\r\n\r\nI am getting this error:\r\n\r\n```\r\nyaml.constructor.ConstructorError: could not determine a constructor for the tag '!Test'\r\n  in \"<unicode string>\", line 1, column 1:\r\n    !Test\r\n```\r\n\r\nI am using Python 3.7 and pyyaml 5.1 (installed through anaconda)\r\n\r\nI feel like I'm missing something incredibly obvious, but even copy-pasting the example from the docs (with the Cave Spider) raises the same error.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/294", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/294/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/294/events", "html_url": "https://github.com/yaml/pyyaml/issues/294", "id": 435553062, "node_id": "MDU6SXNzdWU0MzU1NTMwNjI=", "number": 294, "title": "Implicit Resolvers do not appear to work with PyYAML 5.1", "user": {"login": "cfeenstra67", "id": 24579331, "node_id": "MDQ6VXNlcjI0NTc5MzMx", "avatar_url": "https://avatars0.githubusercontent.com/u/24579331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cfeenstra67", "html_url": "https://github.com/cfeenstra67", "followers_url": "https://api.github.com/users/cfeenstra67/followers", "following_url": "https://api.github.com/users/cfeenstra67/following{/other_user}", "gists_url": "https://api.github.com/users/cfeenstra67/gists{/gist_id}", "starred_url": "https://api.github.com/users/cfeenstra67/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cfeenstra67/subscriptions", "organizations_url": "https://api.github.com/users/cfeenstra67/orgs", "repos_url": "https://api.github.com/users/cfeenstra67/repos", "events_url": "https://api.github.com/users/cfeenstra67/events{/privacy}", "received_events_url": "https://api.github.com/users/cfeenstra67/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-04-21T22:18:58Z", "updated_at": "2019-12-02T22:29:17Z", "closed_at": "2019-12-02T22:29:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've noticed that with PyYAML 5.1 implicit resolvers do not seem to work at all. Using this example script:\r\n```python\r\nimport re\r\nimport uuid\r\nimport yaml\r\n\r\nregex = re.compile(r'^UUID\\((.+)\\)$')\r\nyaml.add_implicit_resolver('!uuid', regex)\r\n\r\ndef convert_uuid(loader, node):\r\n    value = loader.construct_scalar(node)\r\n    str_value = regex.match(value).group(1)\r\n    return uuid.UUID(str_value)\r\n\r\nyaml.add_constructor('!uuid', convert_uuid)\r\n\r\nprint(yaml.load('''\r\n    config:\r\n        abc: UUID(6a02171e-6482-11e9-ab43-f2189845f1cc)\r\n        def: abc\r\n'''))\r\n```\r\nI confirmed that w/ 3.13 we correctly get the `uuid.UUID` object, while it is a string with 5.1 is it just the string `'UUID(6a02171e-6482-11e9-ab43-f2189845f1cc)'`. The way I found this was that it broke the environment variable interpolation that `elasticsearch-curator` provides. \r\n\r\nSorry if this is a duplicate, I searched around and could not find an equivalent issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/291", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/291/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/291/events", "html_url": "https://github.com/yaml/pyyaml/issues/291", "id": 432978076, "node_id": "MDU6SXNzdWU0MzI5NzgwNzY=", "number": 291, "title": "ModuleNotFoundError: No module named 'yaml'", "user": {"login": "marcosschroh", "id": 2828842, "node_id": "MDQ6VXNlcjI4Mjg4NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2828842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcosschroh", "html_url": "https://github.com/marcosschroh", "followers_url": "https://api.github.com/users/marcosschroh/followers", "following_url": "https://api.github.com/users/marcosschroh/following{/other_user}", "gists_url": "https://api.github.com/users/marcosschroh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcosschroh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcosschroh/subscriptions", "organizations_url": "https://api.github.com/users/marcosschroh/orgs", "repos_url": "https://api.github.com/users/marcosschroh/repos", "events_url": "https://api.github.com/users/marcosschroh/events{/privacy}", "received_events_url": "https://api.github.com/users/marcosschroh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2019-04-14T13:38:36Z", "updated_at": "2020-03-17T00:10:16Z", "closed_at": "2019-09-04T00:37:13Z", "author_association": "NONE", "active_lock_reason": "off-topic", "body": "Hi,\r\n\r\nI have updated to the newest version `5.1` but `yaml` module is not available:\r\n\r\n`yaml version`: `5.1`\r\n`python version`: `Python 3.7.1`\r\n`OS version`:  `macOS Sierra 10.13.6`\r\n\r\nAny idea? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/288", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/288/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/288/events", "html_url": "https://github.com/yaml/pyyaml/issues/288", "id": 427008143, "node_id": "MDU6SXNzdWU0MjcwMDgxNDM=", "number": 288, "title": "WindowsErr", "user": {"login": "AdamLouly", "id": 27873459, "node_id": "MDQ6VXNlcjI3ODczNDU5", "avatar_url": "https://avatars3.githubusercontent.com/u/27873459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamLouly", "html_url": "https://github.com/AdamLouly", "followers_url": "https://api.github.com/users/AdamLouly/followers", "following_url": "https://api.github.com/users/AdamLouly/following{/other_user}", "gists_url": "https://api.github.com/users/AdamLouly/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamLouly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamLouly/subscriptions", "organizations_url": "https://api.github.com/users/AdamLouly/orgs", "repos_url": "https://api.github.com/users/AdamLouly/repos", "events_url": "https://api.github.com/users/AdamLouly/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamLouly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-29T14:16:17Z", "updated_at": "2019-12-09T16:42:03Z", "closed_at": "2019-12-09T16:42:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/286", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/286/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/286/events", "html_url": "https://github.com/yaml/pyyaml/issues/286", "id": 424202908, "node_id": "MDU6SXNzdWU0MjQyMDI5MDg=", "number": 286, "title": "Yaml-5.1 fails with Numpy objects", "user": {"login": "saimn", "id": 311639, "node_id": "MDQ6VXNlcjMxMTYzOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/311639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saimn", "html_url": "https://github.com/saimn", "followers_url": "https://api.github.com/users/saimn/followers", "following_url": "https://api.github.com/users/saimn/following{/other_user}", "gists_url": "https://api.github.com/users/saimn/gists{/gist_id}", "starred_url": "https://api.github.com/users/saimn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saimn/subscriptions", "organizations_url": "https://api.github.com/users/saimn/orgs", "repos_url": "https://api.github.com/users/saimn/repos", "events_url": "https://api.github.com/users/saimn/events{/privacy}", "received_events_url": "https://api.github.com/users/saimn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-22T13:13:21Z", "updated_at": "2019-03-22T14:34:13Z", "closed_at": "2019-03-22T14:21:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "#177 is similar, but was closed as fixed, so I'm opening a new issue.\r\n\r\n```\r\nIn [1]: import yaml                                                                            \r\n\r\nIn [2]: import numpy                                                                           \r\n\r\nIn [3]: yaml.dump({'value': numpy.float64(1.234)})                                             \r\nOut[3]: 'value: !!python/object/apply:numpy.core.multiarray.scalar\\n- !!python/object/apply:numpy.dtype\\n  args:\\n  - f8\\n  - 0\\n  - 1\\n  state: !!python/tuple\\n  - 3\\n  - <\\n  - null\\n  - null\\n  - null\\n  - -1\\n  - -1\\n  - 0\\n- !!binary |\\n  WDm0yHa+8z8=\\n'\r\n\r\nIn [4]: yaml.full_load(yaml.dump({'value': numpy.float64(1.234)}))                             \r\n---------------------------------------------------------------------------\r\nConstructorError                          Traceback (most recent call last)\r\n<ipython-input-4-9a96300ff2cc> in <module>\r\n----> 1 yaml.full_load(yaml.dump({'value': numpy.float64(1.234)}))\r\n\r\n~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/yaml/__init__.py in full_load(stream)\r\n    140     unsafe on untrusted input.\r\n    141     \"\"\"\r\n--> 142     return load(stream, FullLoader)\r\n    143 \r\n    144 def full_load_all(stream):\r\n\r\n~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/yaml/__init__.py in load(stream, Loader)\r\n    112     loader = Loader(stream)\r\n    113     try:\r\n--> 114         return loader.get_single_data()\r\n    115     finally:\r\n    116         loader.dispose()\r\n\r\n~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/yaml/constructor.py in get_single_data(self)\r\n     41         node = self.get_single_node()\r\n     42         if node is not None:\r\n---> 43             return self.construct_document(node)\r\n     44         return None\r\n     45 \r\n\r\n~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/yaml/constructor.py in construct_document(self, node)\r\n     50             self.state_generators = []\r\n     51             for generator in state_generators:\r\n---> 52                 for dummy in generator:\r\n     53                     pass\r\n     54         self.constructed_objects = {}\r\n\r\n~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/yaml/constructor.py in construct_yaml_map(self, node)\r\n    402         data = {}\r\n    403         yield data\r\n--> 404         value = self.construct_mapping(node)\r\n    405         data.update(value)\r\n    406 \r\n\r\n~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/yaml/constructor.py in construct_mapping(self, node, deep)\r\n    208         if isinstance(node, MappingNode):\r\n    209             self.flatten_mapping(node)\r\n--> 210         return super().construct_mapping(node, deep=deep)\r\n    211 \r\n    212     def construct_yaml_null(self, node):\r\n\r\n~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/yaml/constructor.py in construct_mapping(self, node, deep)\r\n    133                 raise ConstructorError(\"while constructing a mapping\", node.start_mark,\r\n    134                         \"found unhashable key\", key_node.start_mark)\r\n--> 135             value = self.construct_object(value_node, deep=deep)\r\n    136             mapping[key] = value\r\n    137         return mapping\r\n\r\n~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/yaml/constructor.py in construct_object(self, node, deep)\r\n     92             data = constructor(self, node)\r\n     93         else:\r\n---> 94             data = constructor(self, tag_suffix, node)\r\n     95         if isinstance(data, types.GeneratorType):\r\n     96             generator = data\r\n\r\n~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/yaml/constructor.py in construct_python_object_apply(self, suffix, node, newobj)\r\n    622             listitems = value.get('listitems', [])\r\n    623             dictitems = value.get('dictitems', {})\r\n--> 624         instance = self.make_python_instance(suffix, node, args, kwds, newobj)\r\n    625         if state:\r\n    626             self.set_python_instance_state(instance, state)\r\n\r\n~/.pyenv/versions/3.7.2/lib/python3.7/site-packages/yaml/constructor.py in make_python_instance(self, suffix, node, args, kwds, newobj, unsafe)\r\n    568             raise ConstructorError(\"while constructing a Python instance\", node.start_mark,\r\n    569                     \"expected a class, but found %r\" % type(cls),\r\n--> 570                     node.start_mark)\r\n    571         if newobj and isinstance(cls, type):\r\n    572             return cls.__new__(cls, *args, **kwds)\r\n\r\nConstructorError: while constructing a Python instance\r\nexpected a class, but found <class 'builtin_function_or_method'>\r\n  in \"<unicode string>\", line 1, column 8:\r\n    value: !!python/object/apply:numpy.core ... \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/284", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/284/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/284/events", "html_url": "https://github.com/yaml/pyyaml/issues/284", "id": 423650327, "node_id": "MDU6SXNzdWU0MjM2NTAzMjc=", "number": 284, "title": "dump a object with __slots__ then load it will throw TypeError", "user": {"login": "Hanaasagi", "id": 9482395, "node_id": "MDQ6VXNlcjk0ODIzOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9482395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hanaasagi", "html_url": "https://github.com/Hanaasagi", "followers_url": "https://api.github.com/users/Hanaasagi/followers", "following_url": "https://api.github.com/users/Hanaasagi/following{/other_user}", "gists_url": "https://api.github.com/users/Hanaasagi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hanaasagi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hanaasagi/subscriptions", "organizations_url": "https://api.github.com/users/Hanaasagi/orgs", "repos_url": "https://api.github.com/users/Hanaasagi/repos", "events_url": "https://api.github.com/users/Hanaasagi/events{/privacy}", "received_events_url": "https://api.github.com/users/Hanaasagi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-21T10:05:09Z", "updated_at": "2020-01-06T20:30:23Z", "closed_at": "2020-01-06T20:30:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nBoth\r\n\r\n- PyYAML-3.12\r\n- PyYAML-5.1\r\n\r\nFollowing code will crash.\r\n\r\n```Python\r\nimport yaml\r\n\r\n\r\nclass A:\r\n    __slots__ = ('c', )\r\n\r\n    def __init__(self):\r\n        self.c = 3\r\n\r\n\r\ndata = yaml.dump({'a': A()})\r\nd = yaml.load(data)\r\n```\r\n\r\nOutput\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"t.py\", line 12, in <module>\r\n    d = yaml.load(data)\r\n  File \"/root/py36/lib/python3.7/site-packages/yaml/__init__.py\", line 72, in load\r\n    return loader.get_single_data()\r\n  File \"/root/py36/lib/python3.7/site-packages/yaml/constructor.py\", line 37, in get_single_data\r\n    return self.construct_document(node)\r\n  File \"/root/py36/lib/python3.7/site-packages/yaml/constructor.py\", line 46, in construct_document\r\n    for dummy in generator:\r\n  File \"/root/py36/lib/python3.7/site-packages/yaml/constructor.py\", line 398, in construct_yaml_map\r\n    value = self.construct_mapping(node)\r\n  File \"/root/py36/lib/python3.7/site-packages/yaml/constructor.py\", line 204, in construct_mapping\r\n    return super().construct_mapping(node, deep=deep)\r\n  File \"/root/py36/lib/python3.7/site-packages/yaml/constructor.py\", line 129, in construct_mapping\r\n    value = self.construct_object(value_node, deep=deep)\r\n  File \"/root/py36/lib/python3.7/site-packages/yaml/constructor.py\", line 88, in construct_object\r\n    data = constructor(self, tag_suffix, node)\r\n  File \"/root/py36/lib/python3.7/site-packages/yaml/constructor.py\", line 617, in construct_python_object_new\r\n    return self.construct_python_object_apply(suffix, node, newobj=True)\r\n  File \"/root/py36/lib/python3.7/site-packages/yaml/constructor.py\", line 608, in construct_python_object_apply\r\n    self.set_python_instance_state(instance, state)\r\n  File \"/root/py36/lib/python3.7/site-packages/yaml/constructor.py\", line 570, in set_python_instance_state\r\n    setattr(object, key, value)\r\nTypeError: can't set attributes of built-in/extension type 'object'\r\n```\r\n\r\nI have opened a pull request #258, but no one has time to see. And I really want this fix to appear in next version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/283", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/283/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/283/events", "html_url": "https://github.com/yaml/pyyaml/issues/283", "id": 423643753, "node_id": "MDU6SXNzdWU0MjM2NDM3NTM=", "number": 283, "title": "Unable to dump with the same format loaded", "user": {"login": "Peque", "id": 526577, "node_id": "MDQ6VXNlcjUyNjU3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/526577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peque", "html_url": "https://github.com/Peque", "followers_url": "https://api.github.com/users/Peque/followers", "following_url": "https://api.github.com/users/Peque/following{/other_user}", "gists_url": "https://api.github.com/users/Peque/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peque/subscriptions", "organizations_url": "https://api.github.com/users/Peque/orgs", "repos_url": "https://api.github.com/users/Peque/repos", "events_url": "https://api.github.com/users/Peque/events{/privacy}", "received_events_url": "https://api.github.com/users/Peque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-21T09:49:33Z", "updated_at": "2019-03-21T10:13:43Z", "closed_at": "2019-03-21T10:04:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let us load a simple string that contains a `!!timestamp`:\r\n\r\n```python\r\n>>> x = yaml.safe_load('begin: !!timestamp 2015-1-1')\r\n>>> x\r\n{'begin': datetime.date(2015, 1, 1)}\r\n```\r\n\r\nNow, `safe_dump` would convert the `datetime` to `str`:\r\n\r\n```python\r\n>>> yaml.safe_dump(x)\r\n'begin: 2015-01-01\\n'\r\n```\r\n\r\nHow can I change that? I have also tried:\r\n\r\n```python\r\n>>> yaml.dump(x, Dumper=yaml.dumper.SafeRepresenter)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/peque/.conda/envs/python36/lib/python3.6/site-packages/yaml/__init__.py\", line 290, in dump\r\n    return dump_all([data], stream, Dumper=Dumper, **kwds)\r\n  File \"/home/peque/.conda/envs/python36/lib/python3.6/site-packages/yaml/__init__.py\", line 274, in dump_all\r\n    explicit_start=explicit_start, explicit_end=explicit_end, sort_keys=sort_keys)\r\nTypeError: __init__() got multiple values for argument 'default_style'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/275", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/275/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/275/events", "html_url": "https://github.com/yaml/pyyaml/issues/275", "id": 421920469, "node_id": "MDU6SXNzdWU0MjE5MjA0Njk=", "number": 275, "title": "Version 5.1 dumps strings differently on different platforms", "user": {"login": "undera", "id": 2026469, "node_id": "MDQ6VXNlcjIwMjY0Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2026469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/undera", "html_url": "https://github.com/undera", "followers_url": "https://api.github.com/users/undera/followers", "following_url": "https://api.github.com/users/undera/following{/other_user}", "gists_url": "https://api.github.com/users/undera/gists{/gist_id}", "starred_url": "https://api.github.com/users/undera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/undera/subscriptions", "organizations_url": "https://api.github.com/users/undera/orgs", "repos_url": "https://api.github.com/users/undera/repos", "events_url": "https://api.github.com/users/undera/events{/privacy}", "received_events_url": "https://api.github.com/users/undera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-03-17T13:10:04Z", "updated_at": "2019-12-02T22:28:26Z", "closed_at": "2019-12-02T22:28:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "After 5.1 has been released, our CI builds started to fail. The reason is different outputs on Linux, Mac and Windows, depending on Python version.\r\nThe problem displays as different way to dump string containing tabs, on different platforms. I'd accept any of dump variants from 5.1 if it would be consistent across platforms. But having it different creates a mess with automated tests.\r\n\r\nI have made simple unit test to reproduce the problem (https://github.com/Blazemeter/taurus/pull/1076). The code to reproduce is:\r\n```python\r\nclass MyTestCase(unittest.TestCase):\r\n    def test_case(self):\r\n        data = {\"str\": \"\\tpart1\\tpart2\\t\"}\r\n        res = yaml.safe_dump(data,\r\n                             default_flow_style=False, explicit_start=True, canonical=False,\r\n                             allow_unicode=True, encoding='utf-8', width=float(\"inf\"))\r\n        res = res.decode('utf8')\r\n        self.assertEqual('---\\nstr: \"\\\\tpart1\\\\tpart2\\\\t\\\"\\n', res)\r\n```\r\n\r\nThis test works fine on Linux with any Python version, Windows with Python 3.\r\nIt fails on MacOS with Python 2.7 and on Windows with Python 2.7.\r\n\r\nI double-checked that version of PyYAML is 5.1 on all builds.\r\n\r\nRelevant CI links:\r\nLinux and Mac: https://travis-ci.org/Blazemeter/taurus/builds/507459846\r\nWindows: https://ci.appveyor.com/project/undera/taurus/builds/23134929", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/272", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/272/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/272/events", "html_url": "https://github.com/yaml/pyyaml/issues/272", "id": 421823357, "node_id": "MDU6SXNzdWU0MjE4MjMzNTc=", "number": 272, "title": "Implicit conversion of 'M:S' to seconds", "user": {"login": "gar1t", "id": 184949, "node_id": "MDQ6VXNlcjE4NDk0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/184949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gar1t", "html_url": "https://github.com/gar1t", "followers_url": "https://api.github.com/users/gar1t/followers", "following_url": "https://api.github.com/users/gar1t/following{/other_user}", "gists_url": "https://api.github.com/users/gar1t/gists{/gist_id}", "starred_url": "https://api.github.com/users/gar1t/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gar1t/subscriptions", "organizations_url": "https://api.github.com/users/gar1t/orgs", "repos_url": "https://api.github.com/users/gar1t/repos", "events_url": "https://api.github.com/users/gar1t/events{/privacy}", "received_events_url": "https://api.github.com/users/gar1t/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-16T16:02:53Z", "updated_at": "2019-05-15T14:07:39Z", "closed_at": "2019-03-16T16:08:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> yaml.safe_load(\"1:1\")\r\n61\r\n```\r\n\r\nOther strings with a similar pattern:\r\n\r\n```\r\n>>> yaml.safe_load(\"1:foo\")\r\n'1:foo'\r\n>>> yaml.safe_load(\"1:1:1\")\r\n3661\r\n>>> yaml.safe_load(\"1:1:1:1\")\r\n219661\r\n>>> yaml.safe_load(\"0:0\")\r\n'0:0'\r\n>>> yaml.safe_load(\"0:1\")\r\n'0:1'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/271", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/271/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/271/events", "html_url": "https://github.com/yaml/pyyaml/issues/271", "id": 421680684, "node_id": "MDU6SXNzdWU0MjE2ODA2ODQ=", "number": 271, "title": "convenience methods in __init__.py should modify FullLoader instead of Loader", "user": {"login": "dthkao", "id": 11166458, "node_id": "MDQ6VXNlcjExMTY2NDU4", "avatar_url": "https://avatars1.githubusercontent.com/u/11166458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dthkao", "html_url": "https://github.com/dthkao", "followers_url": "https://api.github.com/users/dthkao/followers", "following_url": "https://api.github.com/users/dthkao/following{/other_user}", "gists_url": "https://api.github.com/users/dthkao/gists{/gist_id}", "starred_url": "https://api.github.com/users/dthkao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dthkao/subscriptions", "organizations_url": "https://api.github.com/users/dthkao/orgs", "repos_url": "https://api.github.com/users/dthkao/repos", "events_url": "https://api.github.com/users/dthkao/events{/privacy}", "received_events_url": "https://api.github.com/users/dthkao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-15T19:54:21Z", "updated_at": "2019-12-09T16:43:11Z", "closed_at": "2019-12-09T16:43:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For example `add_constructor()` in 5.1 is a no-op for legacy code since it adds the constructor to Loader but FullLoader is the one used in load(input).\r\n\r\nhttps://github.com/yaml/pyyaml/blob/master/lib3/yaml/__init__.py#L329-L344", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/267", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/267/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/267/events", "html_url": "https://github.com/yaml/pyyaml/issues/267", "id": 421349065, "node_id": "MDU6SXNzdWU0MjEzNDkwNjU=", "number": 267, "title": "Line break without quote, literal and fold.", "user": {"login": "junjihashimoto", "id": 2469618, "node_id": "MDQ6VXNlcjI0Njk2MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2469618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junjihashimoto", "html_url": "https://github.com/junjihashimoto", "followers_url": "https://api.github.com/users/junjihashimoto/followers", "following_url": "https://api.github.com/users/junjihashimoto/following{/other_user}", "gists_url": "https://api.github.com/users/junjihashimoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/junjihashimoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junjihashimoto/subscriptions", "organizations_url": "https://api.github.com/users/junjihashimoto/orgs", "repos_url": "https://api.github.com/users/junjihashimoto/repos", "events_url": "https://api.github.com/users/junjihashimoto/events{/privacy}", "received_events_url": "https://api.github.com/users/junjihashimoto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-15T04:30:24Z", "updated_at": "2019-03-15T09:43:16Z", "closed_at": "2019-03-15T08:52:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "[yaml.dump of pytorch's script](https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/gen.py#L244-L252) outputs following codes.\r\n\r\n```\r\n- name: addr_out\r\n  matches_jit_signature: true\r\n  schema_string: aten::addr(Tensor self, Tensor vec1, Tensor vec2, *, Scalar beta=1,\r\n    Scalar alpha=1, Tensor(a!) out) -> Tensor(a!)\r\n  method_prefix_derived: ''\r\n```\r\n\r\nIs this valid yaml? \r\nIt seems that the \u201c>\u201d indicator or single/double quote is required to insert line-break on yaml-spec.\r\nhttps://yaml.org/spec/1.2/spec.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/266", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/266/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/266/events", "html_url": "https://github.com/yaml/pyyaml/issues/266", "id": 421060310, "node_id": "MDU6SXNzdWU0MjEwNjAzMTA=", "number": 266, "title": "ConstructorError - could not determine a constructor for custom tag (5.1)", "user": {"login": "kgutwin", "id": 6315798, "node_id": "MDQ6VXNlcjYzMTU3OTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6315798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kgutwin", "html_url": "https://github.com/kgutwin", "followers_url": "https://api.github.com/users/kgutwin/followers", "following_url": "https://api.github.com/users/kgutwin/following{/other_user}", "gists_url": "https://api.github.com/users/kgutwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kgutwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kgutwin/subscriptions", "organizations_url": "https://api.github.com/users/kgutwin/orgs", "repos_url": "https://api.github.com/users/kgutwin/repos", "events_url": "https://api.github.com/users/kgutwin/events{/privacy}", "received_events_url": "https://api.github.com/users/kgutwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2019-03-14T14:43:37Z", "updated_at": "2020-03-18T16:38:02Z", "closed_at": "2019-12-02T22:23:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code was working on 3.13 but no longer works in 5.1:\r\n\r\n    import yaml\r\n    \r\n    class Ref(yaml.YAMLObject):\r\n        yaml_tag = '!Ref'\r\n        def __init__(self, val):\r\n            self.val = val\r\n\r\n        @classmethod\r\n        def from_yaml(cls, loader, node):\r\n            return cls(node.value)\r\n\r\n    yaml.load('Foo: !Ref bar')\r\n\r\nI get the following exception on 5.1:\r\n\r\n    yaml.constructor.ConstructorError: could not determine a constructor for the tag '!Ref'\r\n      in \"<unicode string>\", line 1, column 6:\r\n        Foo: !Ref bar\r\n\r\nThis is true whether I use `yaml.load`, `yaml.full_load` or `yaml.unsafe_load`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/262", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/262/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/262/events", "html_url": "https://github.com/yaml/pyyaml/issues/262", "id": 419040994, "node_id": "MDU6SXNzdWU0MTkwNDA5OTQ=", "number": 262, "title": "Unable to load map with key containing colon", "user": {"login": "Just4test", "id": 4363275, "node_id": "MDQ6VXNlcjQzNjMyNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4363275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Just4test", "html_url": "https://github.com/Just4test", "followers_url": "https://api.github.com/users/Just4test/followers", "following_url": "https://api.github.com/users/Just4test/following{/other_user}", "gists_url": "https://api.github.com/users/Just4test/gists{/gist_id}", "starred_url": "https://api.github.com/users/Just4test/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Just4test/subscriptions", "organizations_url": "https://api.github.com/users/Just4test/orgs", "repos_url": "https://api.github.com/users/Just4test/repos", "events_url": "https://api.github.com/users/Just4test/events{/privacy}", "received_events_url": "https://api.github.com/users/Just4test/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-09T06:43:22Z", "updated_at": "2019-03-09T14:47:59Z", "closed_at": "2019-03-09T14:47:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can't Load \"{Fn::GetAZs: ''}\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/259", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/259/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/259/events", "html_url": "https://github.com/yaml/pyyaml/issues/259", "id": 418379639, "node_id": "MDU6SXNzdWU0MTgzNzk2Mzk=", "number": 259, "title": "Plans to cut stable release?", "user": {"login": "kdelee", "id": 29239279, "node_id": "MDQ6VXNlcjI5MjM5Mjc5", "avatar_url": "https://avatars1.githubusercontent.com/u/29239279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdelee", "html_url": "https://github.com/kdelee", "followers_url": "https://api.github.com/users/kdelee/followers", "following_url": "https://api.github.com/users/kdelee/following{/other_user}", "gists_url": "https://api.github.com/users/kdelee/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdelee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdelee/subscriptions", "organizations_url": "https://api.github.com/users/kdelee/orgs", "repos_url": "https://api.github.com/users/kdelee/repos", "events_url": "https://api.github.com/users/kdelee/events{/privacy}", "received_events_url": "https://api.github.com/users/kdelee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-07T15:47:28Z", "updated_at": "2019-03-13T17:11:33Z", "closed_at": "2019-03-13T17:11:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "requirements.io has been yelling at this project I've been helping maintain, https://github.com/jlaska/pytest-github because we have `pyYAML` in our requirements file, but this gets 3.13 from pypi because the subsequent releases have been marked as `pre-releases` \r\n\r\nhttps://pypi.org/project/PyYAML/#history\r\n\r\nDo you have plans to cut another stable release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/250", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/250/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/250/events", "html_url": "https://github.com/yaml/pyyaml/issues/250", "id": 408213605, "node_id": "MDU6SXNzdWU0MDgyMTM2MDU=", "number": 250, "title": "parser regression: yaml.reader.ReaderError: unacceptable character #x1f64b: special characters are not allowed", "user": {"login": "CarlFK", "id": 23225, "node_id": "MDQ6VXNlcjIzMjI1", "avatar_url": "https://avatars1.githubusercontent.com/u/23225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarlFK", "html_url": "https://github.com/CarlFK", "followers_url": "https://api.github.com/users/CarlFK/followers", "following_url": "https://api.github.com/users/CarlFK/following{/other_user}", "gists_url": "https://api.github.com/users/CarlFK/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarlFK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarlFK/subscriptions", "organizations_url": "https://api.github.com/users/CarlFK/orgs", "repos_url": "https://api.github.com/users/CarlFK/repos", "events_url": "https://api.github.com/users/CarlFK/events{/privacy}", "received_events_url": "https://api.github.com/users/CarlFK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-08T15:57:16Z", "updated_at": "2020-07-10T17:14:21Z", "closed_at": "2019-02-12T19:15:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nwget https://latin.grep.be/~wouter/released.yml \r\npython -m pip install PyYAML\r\n>>> yaml.safe_load(open('released.yml'))\r\n...\r\n  yaml.reader.ReaderError: unacceptable character #x1f64b \r\n```\r\nin #python Yhg1s: I don't get that error with Python 3.6 and PyYAML 3.12, but I do with 3.13.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/249", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/249/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/249/events", "html_url": "https://github.com/yaml/pyyaml/issues/249", "id": 407299651, "node_id": "MDU6SXNzdWU0MDcyOTk2NTE=", "number": 249, "title": "Anchor injection does not work in .load", "user": {"login": "psarka", "id": 1212244, "node_id": "MDQ6VXNlcjEyMTIyNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1212244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psarka", "html_url": "https://github.com/psarka", "followers_url": "https://api.github.com/users/psarka/followers", "following_url": "https://api.github.com/users/psarka/following{/other_user}", "gists_url": "https://api.github.com/users/psarka/gists{/gist_id}", "starred_url": "https://api.github.com/users/psarka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psarka/subscriptions", "organizations_url": "https://api.github.com/users/psarka/orgs", "repos_url": "https://api.github.com/users/psarka/repos", "events_url": "https://api.github.com/users/psarka/events{/privacy}", "received_events_url": "https://api.github.com/users/psarka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-06T15:48:36Z", "updated_at": "2019-02-18T08:44:55Z", "closed_at": "2019-02-15T18:45:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following `test.yaml` file:\r\n\r\n```yaml\r\nfoo: &anchor\r\n  K1: \"One\"\r\n  K2: \"Two\"\r\n\r\nbar:\r\n  <<: *anchor\r\n  K2: \"Deuce\"\r\n  K3: \"Three\"\r\n```\r\n\r\nThe call `yaml.safe_load(open('test.yaml'))` loads it successfully and returns an expected object:\r\n```python\r\n{'foo': {'K1': 'One', 'K2': 'Two'},\r\n 'bar': {'K1': 'One', 'K2': 'Deuce', 'K3': 'Three'}}\r\n```\r\n\r\nThe call `yaml.load(open('test.yaml'))`, however, crashes with an exception:\r\n\r\n```\r\nConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:merge'\r\n  in \"test.yaml\", line 6, column 3\r\n```\r\n\r\nI would expect it to also succeed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/246", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/246/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/246/events", "html_url": "https://github.com/yaml/pyyaml/issues/246", "id": 403490602, "node_id": "MDU6SXNzdWU0MDM0OTA2MDI=", "number": 246, "title": "Dumping multiline string gives incorrect result", "user": {"login": "rjekker", "id": 3437942, "node_id": "MDQ6VXNlcjM0Mzc5NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3437942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjekker", "html_url": "https://github.com/rjekker", "followers_url": "https://api.github.com/users/rjekker/followers", "following_url": "https://api.github.com/users/rjekker/following{/other_user}", "gists_url": "https://api.github.com/users/rjekker/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjekker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjekker/subscriptions", "organizations_url": "https://api.github.com/users/rjekker/orgs", "repos_url": "https://api.github.com/users/rjekker/repos", "events_url": "https://api.github.com/users/rjekker/events{/privacy}", "received_events_url": "https://api.github.com/users/rjekker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-26T22:26:54Z", "updated_at": "2020-05-04T12:45:56Z", "closed_at": "2019-01-27T13:14:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "(This is related to issue #240). Dumping a multiline string adds newlines, so the dumped data is different from the actual data. Consider the following:\r\n\r\nInput.yaml\r\n```\r\n---\r\n- |\r\n  Hi!\r\n  Second Line\r\n  Another Line\r\n```\r\n\r\nMy program:\r\n```\r\nimport yaml\r\nwith open(\"input.yaml\") as db:\r\n    data = yaml.load(db)\r\n    print(yaml.dump(data, default_flow_style=False))\r\n```\r\n\r\nThe output:\r\n```\r\n- 'Hi!\r\n\r\n  Second Line\r\n\r\n  Another Line\r\n\r\n  '\r\n```\r\n\r\nThis is clearly incorrect: this simple program changes my data even though I am simply reading and dumping it\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/243", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/243/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/243/events", "html_url": "https://github.com/yaml/pyyaml/issues/243", "id": 396024037, "node_id": "MDU6SXNzdWUzOTYwMjQwMzc=", "number": 243, "title": "Security fixe reported by github", "user": {"login": "prsolucoes", "id": 395096, "node_id": "MDQ6VXNlcjM5NTA5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/395096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prsolucoes", "html_url": "https://github.com/prsolucoes", "followers_url": "https://api.github.com/users/prsolucoes/followers", "following_url": "https://api.github.com/users/prsolucoes/following{/other_user}", "gists_url": "https://api.github.com/users/prsolucoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/prsolucoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prsolucoes/subscriptions", "organizations_url": "https://api.github.com/users/prsolucoes/orgs", "repos_url": "https://api.github.com/users/prsolucoes/repos", "events_url": "https://api.github.com/users/prsolucoes/events{/privacy}", "received_events_url": "https://api.github.com/users/prsolucoes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2019-01-04T18:33:56Z", "updated_at": "2019-02-11T15:03:17Z", "closed_at": "2019-01-24T22:48:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI received this warning message:\r\n\r\n![image](https://user-images.githubusercontent.com/395096/50704435-82346780-103e-11e9-9635-6fadea9e411f.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/239", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/239/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/239/events", "html_url": "https://github.com/yaml/pyyaml/issues/239", "id": 393799333, "node_id": "MDU6SXNzdWUzOTM3OTkzMzM=", "number": 239, "title": "executed by two times", "user": {"login": "Freakwill", "id": 30965609, "node_id": "MDQ6VXNlcjMwOTY1NjA5", "avatar_url": "https://avatars3.githubusercontent.com/u/30965609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Freakwill", "html_url": "https://github.com/Freakwill", "followers_url": "https://api.github.com/users/Freakwill/followers", "following_url": "https://api.github.com/users/Freakwill/following{/other_user}", "gists_url": "https://api.github.com/users/Freakwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/Freakwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Freakwill/subscriptions", "organizations_url": "https://api.github.com/users/Freakwill/orgs", "repos_url": "https://api.github.com/users/Freakwill/repos", "events_url": "https://api.github.com/users/Freakwill/events{/privacy}", "received_events_url": "https://api.github.com/users/Freakwill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-24T02:40:28Z", "updated_at": "2018-12-25T12:38:53Z", "closed_at": "2018-12-25T12:38:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I depend on yaml for storing data, and `pyyaml` is what I want.\r\n\r\nFollowing is the code. When I run it (using yaml), I got an unwanted result. It seems that the file was executed two times according the output. But it is unable to explain the order of the output. It only happened when I used `yaml` in this case (with `__setstate__`). I am not sure that it is a problem of pyyaml or a bug of Python.\r\n\r\nCould you explain it and help me?\r\n\r\noutput (in the very order):\r\n> start loading start loading end 3 end 3\r\n\r\nIf I print the quotes, then they will be printed two times, in the given order.\r\n\r\n```python\r\n    # -*- coding: utf-8 -*-\r\n    \r\n    class Quote(object):\r\n        \"\"\"Quotes of famous peaple\"\"\"\r\n        \r\n        __slots__ = ('content', 'topic', 'author', 'info')\r\n    \r\n        def __init__(self, content='', topic='', author='', info=''):\r\n            \"\"\"\r\n                content {str} -- [content of the quote] (default: {''})\r\n                topic {str} -- [topic of the quote] (default: {''})\r\n                author {str} -- [the author] (default: {''})\r\n                info {str} -- related information (default: {''})\r\n            \"\"\"\r\n            self.content = content\r\n            self.topic = topic\r\n            self.author = author\r\n            self.info = info\r\n    \r\n        def __str__(self):\r\n            return '{0:tight}'.format(self)\r\n    \r\n        def __format__(self, spec):\r\n            if spec == 'signature':\r\n                return ('--- ' + self.author).rjust(len(self.content))\r\n            elif spec == 'tight':\r\n                return '{0.content} --- {0.author}'.format(self)\r\n            else:\r\n                L = len(self.content)\r\n                return '{0:content}\\n{0:signature}'.format(self)\r\n    \r\n        def __getstate__(self):\r\n            return self.content, self.topic, self.author, self.info\r\n    \r\n        def __setstate__(self, state):\r\n            if isinstance(state, dict):\r\n                for prop in Quote.__slots__:\r\n                    setattr(self, prop, state.get(prop, \"\"))\r\n            else:\r\n                self.content, self.topic, self.author, self.info = state\r\n    \r\n        @staticmethod\r\n        def read_yaml(fname, topic=None):\r\n            print('loading')\r\n            with open(fname) as fo:\r\n                quotes = yaml.load(fo)\r\n            return quotes\r\n    \r\n    print('start')\r\n    import yaml\r\n    quotes = Quote.read_yaml('../quotes.yaml')\r\n    print('end')\r\n    print(len(quotes))\r\n```\r\nFollowing is the yaml file that could be parsed successively.\r\n```yaml\r\n    - !!python/object:pybrainyquote.Quote\r\n      content: >\r\n        No one has ever read a book, only one in the book to read themselves, to find themselves or to check their own.\r\n      topic: Unknown\r\n      author: Roman Rollan\r\n    \r\n    \r\n    - !!python/object:pybrainyquote.Quote\r\n      content: Je pense, donc je suis.\r\n      topic: Science\r\n      author: Rene Descartes\r\n    \r\n    \r\n    - !!python/object:pybrainyquote.Quote\r\n      content: >\r\n        To show off what he needed anything; hide anything, what self-esteem. \r\n        The so-called normal people, good people just self-defense. The real mental health, is defenseless without victimization.\r\n      topic: Personality\r\n      author: Unknown \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/238", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/238/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/238/events", "html_url": "https://github.com/yaml/pyyaml/issues/238", "id": 392748574, "node_id": "MDU6SXNzdWUzOTI3NDg1NzQ=", "number": 238, "title": "Custom tags fail in block scalars", "user": {"login": "christianbioinf", "id": 10414269, "node_id": "MDQ6VXNlcjEwNDE0MjY5", "avatar_url": "https://avatars1.githubusercontent.com/u/10414269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christianbioinf", "html_url": "https://github.com/christianbioinf", "followers_url": "https://api.github.com/users/christianbioinf/followers", "following_url": "https://api.github.com/users/christianbioinf/following{/other_user}", "gists_url": "https://api.github.com/users/christianbioinf/gists{/gist_id}", "starred_url": "https://api.github.com/users/christianbioinf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christianbioinf/subscriptions", "organizations_url": "https://api.github.com/users/christianbioinf/orgs", "repos_url": "https://api.github.com/users/christianbioinf/repos", "events_url": "https://api.github.com/users/christianbioinf/events{/privacy}", "received_events_url": "https://api.github.com/users/christianbioinf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-19T19:37:41Z", "updated_at": "2019-11-19T20:07:19Z", "closed_at": "2019-11-19T20:07:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using custom tags in order to replace environment variables on load which does not seem to work together with block scalars. The toy example code below illustrates this as the custom tag is not detected in presence of block scalars, neither (i) implicitely by the pattern nor (ii) explicitely via using the tag notation (tested with python 3.6.5. and PyYAML 3.13).\r\n\r\n```\r\nimport re\r\n\r\npattern = re.compile(r'^\\$ENV\\{([^$]*)\\}(.*)$')\r\nyaml.add_implicit_resolver(\"!envext\", pattern)\r\n\r\ndef construct_envext(loader, node):\r\n    value = loader.construct_scalar(node)\r\n    env_var, remainder = pattern.match(value).groups()\r\n    # for testing purposes:\r\n    return {'temp':'/tmp'}[env_var] + remainder\r\n    # for real applications:\r\n    # return os.environ[env_var] + remainder\r\n\r\nyaml.add_constructor('!envext', construct_envext)\r\n\r\ndata = \"\"\"\r\nfile1: $ENV{temp}/file1\r\nfile2: !envext $ENV{temp}/file2\r\nfile3: >-\r\n  $ENV{temp}/file3\r\nfile4: |-\r\n  !envext $ENV{temp}/file4\r\n\"\"\"\r\n\r\nprint(yaml.load(data))\r\n```\r\n\r\nI tried to track down the issue and it seems that for (i) implicit resolvers, only plain scalars are tested and block scalars are set as not plain whereas (ii) the use of explicit tags does not seem to work since due to the missing tag at the beginning (since the first characters are the block scalar indicators) it is not categorized as TagToken but ScalarToken and afterwards there is basically no going back to recognizing the tag.\r\n\r\nI was wondering whether it is possible to treat block scalars similarly to other blocks like sequence and mapping and simply parse the inner part (i.e. the multi-line string build according to the block scalar indicators) independently from the outer part (i.e. the block scalar indicators).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/235", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/235/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/235/events", "html_url": "https://github.com/yaml/pyyaml/issues/235", "id": 383812778, "node_id": "MDU6SXNzdWUzODM4MTI3Nzg=", "number": 235, "title": "Billion laughs attack", "user": {"login": "jonasw234", "id": 15037703, "node_id": "MDQ6VXNlcjE1MDM3NzAz", "avatar_url": "https://avatars3.githubusercontent.com/u/15037703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonasw234", "html_url": "https://github.com/jonasw234", "followers_url": "https://api.github.com/users/jonasw234/followers", "following_url": "https://api.github.com/users/jonasw234/following{/other_user}", "gists_url": "https://api.github.com/users/jonasw234/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonasw234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonasw234/subscriptions", "organizations_url": "https://api.github.com/users/jonasw234/orgs", "repos_url": "https://api.github.com/users/jonasw234/repos", "events_url": "https://api.github.com/users/jonasw234/events{/privacy}", "received_events_url": "https://api.github.com/users/jonasw234/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-23T12:47:09Z", "updated_at": "2018-11-23T17:56:53Z", "closed_at": "2018-11-23T17:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to disable anchors and aliases or cap the number of characters that can be created through expansions?\r\nRight now PyYAML seems to be [susceptible to billion laughs attacks](https://interviewbubble.com/billion-laughs-attack-yaml-bomb/).\r\n@guyskk created a new version in #37 that prevents that but it also uses `OrderedDict` and `SafeLoader`, so it might be a good idea to implement just this functionality like the `ignore_aliases=True` flag in #104 for `yaml.load`/`yaml.safe_load`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/233", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/233/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/233/events", "html_url": "https://github.com/yaml/pyyaml/issues/233", "id": 382457350, "node_id": "MDU6SXNzdWUzODI0NTczNTA=", "number": 233, "title": "Explicit tags in long form are not supported", "user": {"login": "cdobbyn", "id": 8264498, "node_id": "MDQ6VXNlcjgyNjQ0OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8264498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdobbyn", "html_url": "https://github.com/cdobbyn", "followers_url": "https://api.github.com/users/cdobbyn/followers", "following_url": "https://api.github.com/users/cdobbyn/following{/other_user}", "gists_url": "https://api.github.com/users/cdobbyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdobbyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdobbyn/subscriptions", "organizations_url": "https://api.github.com/users/cdobbyn/orgs", "repos_url": "https://api.github.com/users/cdobbyn/repos", "events_url": "https://api.github.com/users/cdobbyn/events{/privacy}", "received_events_url": "https://api.github.com/users/cdobbyn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-20T01:12:03Z", "updated_at": "2018-11-22T17:23:11Z", "closed_at": "2018-11-22T17:23:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pyyaml does not seem to support explicit tags in long form, only shorthand. This is only minor inconvenience as going from `!!string` to `!!str` isn't really that hard.\r\n\r\n```\r\nyaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:string'\r\n  in \"<unicode string>\", line 63, column 18:\r\n              value: !!string bar\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/232", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/232/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/232/events", "html_url": "https://github.com/yaml/pyyaml/issues/232", "id": 381845962, "node_id": "MDU6SXNzdWUzODE4NDU5NjI=", "number": 232, "title": "[slots] it may be a bug in file constructor.py", "user": {"login": "Freakwill", "id": 30965609, "node_id": "MDQ6VXNlcjMwOTY1NjA5", "avatar_url": "https://avatars3.githubusercontent.com/u/30965609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Freakwill", "html_url": "https://github.com/Freakwill", "followers_url": "https://api.github.com/users/Freakwill/followers", "following_url": "https://api.github.com/users/Freakwill/following{/other_user}", "gists_url": "https://api.github.com/users/Freakwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/Freakwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Freakwill/subscriptions", "organizations_url": "https://api.github.com/users/Freakwill/orgs", "repos_url": "https://api.github.com/users/Freakwill/repos", "events_url": "https://api.github.com/users/Freakwill/events{/privacy}", "received_events_url": "https://api.github.com/users/Freakwill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-17T09:27:41Z", "updated_at": "2020-01-06T20:30:10Z", "closed_at": "2020-01-06T20:30:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the following code is triggered, then you will be told that there is a TypeError: can't set attributes of built-in/extension type 'object'. I guess it should be setattr(instance, key, value).\r\n```\r\n    def set_python_instance_state(self, instance, state):\r\n        ......\r\n            for key, value in slotstate.items():\r\n                setattr(object, key, value)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/231", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/231/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/231/events", "html_url": "https://github.com/yaml/pyyaml/issues/231", "id": 379804528, "node_id": "MDU6SXNzdWUzNzk4MDQ1Mjg=", "number": 231, "title": "Release_3.13: Dict leading zeros results in 0-7, then \"08\", \"09\" ...", "user": {"login": "pacman2011", "id": 6663672, "node_id": "MDQ6VXNlcjY2NjM2NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6663672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pacman2011", "html_url": "https://github.com/pacman2011", "followers_url": "https://api.github.com/users/pacman2011/followers", "following_url": "https://api.github.com/users/pacman2011/following{/other_user}", "gists_url": "https://api.github.com/users/pacman2011/gists{/gist_id}", "starred_url": "https://api.github.com/users/pacman2011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pacman2011/subscriptions", "organizations_url": "https://api.github.com/users/pacman2011/orgs", "repos_url": "https://api.github.com/users/pacman2011/repos", "events_url": "https://api.github.com/users/pacman2011/events{/privacy}", "received_events_url": "https://api.github.com/users/pacman2011/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-12T14:35:39Z", "updated_at": "2018-11-12T18:01:27Z", "closed_at": "2018-11-12T18:01:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hoping i put this in the correct spot, feel free to move it if I haven't.\r\n\r\n**Description:**\r\nIn python 2.7.15, using PyYaml 3.13.\r\nWhen creating a dictionary in the config file, leading zeros are stripped correctly for numbers 0 though 7. However, 8 and 9 are treated as strings.\r\n\r\n**Code to Reproduce:**\r\n``` python\r\nimport yaml\r\nfrom pprint import pprint\r\nconfig_text = \"\"\"my_dict:\r\n    00: zero\r\n    01: one\r\n    02: two\r\n    03: three\r\n    04: four\r\n    05: five\r\n    06: six\r\n    07: seven\r\n    08: eight\r\n    09: nine\r\n    10: ten\r\n\"\"\"\r\nconfig = yaml.load(config_text)\r\npprint(config)\r\n```\r\n\r\n**Output:**\r\n```\r\n{'my_dict': {0: 'zero',\r\n             1: 'one',\r\n             2: 'two',\r\n             3: 'three',\r\n             4: 'four',\r\n             5: 'five',\r\n             6: 'six',\r\n             7: 'seven',\r\n             10: 'ten',\r\n             '08': 'eight',\r\n             '09': 'nine'}}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/230", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/230/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/230/events", "html_url": "https://github.com/yaml/pyyaml/issues/230", "id": 379516286, "node_id": "MDU6SXNzdWUzNzk1MTYyODY=", "number": 230, "title": "Should pyyaml really try to match hash key aggressively in list items ?", "user": {"login": "jpic", "id": 94636, "node_id": "MDQ6VXNlcjk0NjM2", "avatar_url": "https://avatars3.githubusercontent.com/u/94636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpic", "html_url": "https://github.com/jpic", "followers_url": "https://api.github.com/users/jpic/followers", "following_url": "https://api.github.com/users/jpic/following{/other_user}", "gists_url": "https://api.github.com/users/jpic/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpic/subscriptions", "organizations_url": "https://api.github.com/users/jpic/orgs", "repos_url": "https://api.github.com/users/jpic/repos", "events_url": "https://api.github.com/users/jpic/events{/privacy}", "received_events_url": "https://api.github.com/users/jpic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-11T12:04:28Z", "updated_at": "2018-11-11T15:00:48Z", "closed_at": "2018-11-11T14:58:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given a doc like this:\r\n\r\n```\r\n---\r\nname: dumpdata\r\nscript:\r\n- django-admin mrsstat --refresh\r\n- django-admin\r\n    dumpdata\r\n    --indent=4 $(grep model src/mrs/tests/data.json | sort -u | sed 's/.*model\": \"\\([^\"]*\\)\",*/\\1/')\r\n    > src/mrs/tests/data.json\r\n```\r\n\r\nPyYaml will fail as such:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jpic/.local/bin/autoplay\", line 11, in <module>\r\n    load_entry_point('autoplay', 'console_scripts', 'autoplay')()\r\n  File \"/home/jpic/src/autoplay/autoplay/cli.py\", line 41, in main\r\n    schema = Schema.cli()\r\n  File \"/home/jpic/src/autoplay/autoplay/schema.py\", line 38, in cli\r\n    self.parse(path)\r\n  File \"/home/jpic/src/autoplay/autoplay/schema.py\", line 12, in parse\r\n    docs = [yaml.load(i) for i in f.read().split('---')]\r\n  File \"/home/jpic/src/autoplay/autoplay/schema.py\", line 12, in <listcomp>\r\n    docs = [yaml.load(i) for i in f.read().split('---')]\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/__init__.py\", line 72, in load\r\n    return loader.get_single_data()\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/constructor.py\", line 35, in get_single_data\r\n    node = self.get_single_node()\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/composer.py\", line 36, in get_single_node\r\n    document = self.compose_document()\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/composer.py\", line 55, in compose_document\r\n    node = self.compose_node(None, None)\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/composer.py\", line 84, in compose_node\r\n    node = self.compose_mapping_node(anchor)\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/composer.py\", line 133, in compose_mapping_node\r\n    item_value = self.compose_node(node, item_key)\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/composer.py\", line 82, in compose_node\r\n    node = self.compose_sequence_node(anchor)\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/composer.py\", line 110, in compose_sequence_node\r\n    while not self.check_event(SequenceEndEvent):\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/parser.py\", line 98, in check_event\r\n    self.current_event = self.state()\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/parser.py\", line 403, in parse_indentless_sequence_entry\r\n    if self.check_token(BlockEntryToken):\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/scanner.py\", line 116, in check_token\r\n    self.fetch_more_tokens()\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/scanner.py\", line 220, in fetch_more_tokens\r\n    return self.fetch_value()\r\n  File \"/home/jpic/.local/lib/python3.7/site-packages/yaml/scanner.py\", line 576, in fetch_value\r\n    self.get_mark())\r\nyaml.scanner.ScannerError: mapping values are not allowed here\r\n  in \"<unicode string>\", line 7, column 80:\r\n     ... json | sort -u | sed 's/.*model\": \"\\([^\"]*\\)\",*/\\1/')\r\n                                         ^\r\n```\r\n\r\nI suppose it's trying to match a multiline hash key in that list item, at the same time that means that you may not have list item string that contains `:`\r\n\r\nWhat do you think ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/229", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/229/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/229/events", "html_url": "https://github.com/yaml/pyyaml/issues/229", "id": 377589590, "node_id": "MDU6SXNzdWUzNzc1ODk1OTA=", "number": 229, "title": "Feature Request: Support Nuitka", "user": {"login": "Jeeppler", "id": 2007739, "node_id": "MDQ6VXNlcjIwMDc3Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2007739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeeppler", "html_url": "https://github.com/Jeeppler", "followers_url": "https://api.github.com/users/Jeeppler/followers", "following_url": "https://api.github.com/users/Jeeppler/following{/other_user}", "gists_url": "https://api.github.com/users/Jeeppler/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeeppler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeeppler/subscriptions", "organizations_url": "https://api.github.com/users/Jeeppler/orgs", "repos_url": "https://api.github.com/users/Jeeppler/repos", "events_url": "https://api.github.com/users/Jeeppler/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeeppler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-05T21:27:08Z", "updated_at": "2019-02-28T16:46:34Z", "closed_at": "2019-02-28T16:46:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Nuitka](http://nuitka.net/pages/overview.html) is a Python to C cross-compiler. I want to use Nuitka for a command line tool. This command line tool uses PyYaml. However, there is one problem PyYaml uses dynamic import statements. Nuitka does not run the code and therefore is not able to figure out what should be imported, when dynamic imports are used.\r\n\r\nChevron has import fails in PyYAML:\r\n\r\n```\r\n$ python3 -m nuitka --follow-imports mycli.py \r\nNuitka:WARNING:/usr/local/lib/python3.6/dist-packages/yaml/cyaml.py:5: Cannot find '_yaml' in package 'yaml' as absolute import (tried _yaml).\r\nNuitka:WARNING:Unresolved '__import__' call at '/usr/local/lib/python3.6/dist-packages/yaml/constructor.py:521' may require use of '--include-plugin-directory' or '--include-plugin-files'.\r\n```\r\n\r\nIt would be nice if PyYaml could use static imports or find another way supporting Nuitka.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/222", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/222/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/222/events", "html_url": "https://github.com/yaml/pyyaml/issues/222", "id": 373886419, "node_id": "MDU6SXNzdWUzNzM4ODY0MTk=", "number": 222, "title": "[pyyaml 3.13] TypeError while dumping lambda in Python 3", "user": {"login": "NiklasRosenstein", "id": 1318438, "node_id": "MDQ6VXNlcjEzMTg0Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1318438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NiklasRosenstein", "html_url": "https://github.com/NiklasRosenstein", "followers_url": "https://api.github.com/users/NiklasRosenstein/followers", "following_url": "https://api.github.com/users/NiklasRosenstein/following{/other_user}", "gists_url": "https://api.github.com/users/NiklasRosenstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/NiklasRosenstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NiklasRosenstein/subscriptions", "organizations_url": "https://api.github.com/users/NiklasRosenstein/orgs", "repos_url": "https://api.github.com/users/NiklasRosenstein/repos", "events_url": "https://api.github.com/users/NiklasRosenstein/events{/privacy}", "received_events_url": "https://api.github.com/users/NiklasRosenstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-25T10:48:10Z", "updated_at": "2019-11-19T19:58:12Z", "closed_at": "2019-11-19T19:58:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport yaml\r\nprint(yaml.dump(lambda: None))\r\n```\r\n\r\nThis fails with a TypeError in Python 3 (not in Python 2).\r\n\r\n```\r\n[...]\r\n  File \"/Users/nrosenstein/Projects/.venv/lib/python3.7/site-packages/yaml/emitter.py\", line 228, in expect_document_root\r\n    self.expect_node(root=True)\r\n  File \"/Users/nrosenstein/Projects/.venv/lib/python3.7/site-packages/yaml/emitter.py\", line 242, in expect_node\r\n    self.process_tag()\r\n  File \"/Users/nrosenstein/Projects/.venv/lib/python3.7/site-packages/yaml/emitter.py\", line 489, in process_tag\r\n    self.prepared_tag = self.prepare_tag(tag)\r\n  File \"/Users/nrosenstein/Projects/.venv/lib/python3.7/site-packages/yaml/emitter.py\", line 607, in prepare_tag\r\n    for ch in data:\r\nTypeError: ord() expected string of length 1, but int found\r\n```\r\n\r\nFor reference:\r\n\r\nhttps://github.com/yaml/pyyaml/blob/a2d481b8dbd2b352cb001f07091ccf669227290f/lib3/yaml/emitter.py#L569-L575\r\n\r\n*On a side note, I don't know how the line numbers don't match. I have PyYAML 3.13 installed and this references the commit on the 3.13 tag*.\r\n\r\n`str.encode()` returns a `bytes` object in Python 3, which in turn yields integers and no substrings when iterated over, leading `ord()` to fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/215", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/215/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/215/events", "html_url": "https://github.com/yaml/pyyaml/issues/215", "id": 358803930, "node_id": "MDU6SXNzdWUzNTg4MDM5MzA=", "number": 215, "title": "Link to YAML cookbook is broken", "user": {"login": "Muffo", "id": 538925, "node_id": "MDQ6VXNlcjUzODkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/538925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Muffo", "html_url": "https://github.com/Muffo", "followers_url": "https://api.github.com/users/Muffo/followers", "following_url": "https://api.github.com/users/Muffo/following{/other_user}", "gists_url": "https://api.github.com/users/Muffo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Muffo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Muffo/subscriptions", "organizations_url": "https://api.github.com/users/Muffo/orgs", "repos_url": "https://api.github.com/users/Muffo/repos", "events_url": "https://api.github.com/users/Muffo/events{/privacy}", "received_events_url": "https://api.github.com/users/Muffo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-10T21:36:20Z", "updated_at": "2019-11-19T19:55:11Z", "closed_at": "2019-11-19T19:55:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [documentation ](https://pyyaml.org/wiki/PyYAMLDocumentation) includes a link to the YAML cookbook which does not seem to be working: http://yaml4r.sourceforge.net/cookbook/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/214", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/214/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/214/events", "html_url": "https://github.com/yaml/pyyaml/issues/214", "id": 354248396, "node_id": "MDU6SXNzdWUzNTQyNDgzOTY=", "number": 214, "title": "Version 3.13 fails test suite after libyaml update to 0.2.1", "user": {"login": "peti", "id": 28323, "node_id": "MDQ6VXNlcjI4MzIz", "avatar_url": "https://avatars3.githubusercontent.com/u/28323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peti", "html_url": "https://github.com/peti", "followers_url": "https://api.github.com/users/peti/followers", "following_url": "https://api.github.com/users/peti/following{/other_user}", "gists_url": "https://api.github.com/users/peti/gists{/gist_id}", "starred_url": "https://api.github.com/users/peti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peti/subscriptions", "organizations_url": "https://api.github.com/users/peti/orgs", "repos_url": "https://api.github.com/users/peti/repos", "events_url": "https://api.github.com/users/peti/events{/privacy}", "received_events_url": "https://api.github.com/users/peti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-27T09:34:21Z", "updated_at": "2018-08-27T12:33:11Z", "closed_at": "2018-08-27T12:33:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nwe're trying to upgrade our `libyaml` in NixOS to version 0.2.1 (https://github.com/NixOS/nixpkgs/pull/45560), but we're having trouble because [that update breaks the test suite of `pyyaml`](https://github.com/NixOS/nixpkgs/pull/45560#issuecomment-416151111), which feels like that's not something that's supposed to happen. The complete build log is visible at https://logs.nix.ci/?key=nixos/nixpkgs.45560&attempt_id=1ccf9c4d-e201-4f4c-a9f5-d84a1ede48be, and the relevant bits are:\r\n\r\n    running install tests\r\n    running test\r\n    running build_py\r\n    running build_ext\r\nr\n    ===========================================================================\r\n    test_emitter_styles_ext(tests/data/spec-07-09.data, tests/data/spec-07-09.canonical): FAILURE\r\n    Traceback (most recent call last):\r\n      File \"tests/lib/test_appliance.py\", line 65, in execute\r\n\tfunction(verbose=verbose, *filenames)\r\n      File \"tests/lib/test_yaml_ext.py\", line 240, in wrapper\r\n\tfunction(*args, **kwds)\r\n      File \"tests/lib/test_emitter.py\", line 62, in test_emitter_styles\r\n\t_compare_events(events, new_events)\r\n      File \"tests/lib/test_emitter.py\", line 15, in _compare_events\r\n\tassert event1.value == event2.value, (event1, event2)\r\n    AssertionError: see below\r\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    (ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'foo'),\r\n     ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'foo %YAML 1.1'))\r\n    ---------------------------------------------------------------------------\r\n    tests/data/spec-07-09.data:\r\n    ---\r\n    foo\r\n    ...\r\n    # Repeated end marker.\r\n    ...\r\n    ---\r\n    bar\r\n    # No end marker.\r\n    ---\r\n    baz\r\n    ...\r\n    ---------------------------------------------------------------------------\r\n    tests/data/spec-07-09.canonical:\r\n    %YAML 1.1\r\n    ---\r\n    !!str \"foo\"\r\n    %YAML 1.1\r\n    ---\r\n    !!str \"bar\"\r\n    %YAML 1.1\r\n    ---\r\n    !!str \"baz\"\r\n    ===========================================================================\r\n    test_emitter_styles_ext(tests/data/spec-07-10.data, tests/data/spec-07-10.canonical): FAILURE\r\n    Traceback (most recent call last):\r\n      File \"tests/lib/test_appliance.py\", line 65, in execute\r\n\tfunction(verbose=verbose, *filenames)\r\n      File \"tests/lib/test_yaml_ext.py\", line 240, in wrapper\r\n\tfunction(*args, **kwds)\r\n      File \"tests/lib/test_emitter.py\", line 62, in test_emitter_styles\r\n\t_compare_events(events, new_events)\r\n      File \"tests/lib/test_emitter.py\", line 15, in _compare_events\r\n\tassert event1.value == event2.value, (event1, event2)\r\n    AssertionError: see below\r\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    (ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'Root flow scalar'),\r\n     ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'Root flow scalar %YAML 1.1'))\r\n    ---------------------------------------------------------------------------\r\n    tests/data/spec-07-10.data:\r\n    \"Root flow\r\n     scalar\"\r\n    --- !!str >\r\n     Root block\r\n     scalar\r\n    ---\r\n    # Root collection:\r\n    foo : bar\r\n    ... # Is optional.\r\n    ---\r\n    # Explicit document may be empty.\r\n    ---------------------------------------------------------------------------\r\n    tests/data/spec-07-10.canonical:\r\n    %YAML 1.1\r\n    ---\r\n    !!str \"Root flow scalar\"\r\n    %YAML 1.1\r\n    ---\r\n    !!str \"Root block scalar\\n\"\r\n    %YAML 1.1\r\n    ---\r\n    !!map {\r\n      ? !!str \"foo\"\r\n      : !!str \"bar\"\r\n    }\r\n    ---\r\n    #!!str \"\"\r\n    !!null \"\"\r\n    ===========================================================================\r\n    test_emitter_styles_ext(tests/data/spec-07-13.data, tests/data/spec-07-13.canonical): FAILURE\r\n    Traceback (most recent call last):\r\n      File \"tests/lib/test_appliance.py\", line 65, in execute\r\n\tfunction(verbose=verbose, *filenames)\r\n      File \"tests/lib/test_yaml_ext.py\", line 240, in wrapper\r\n\tfunction(*args, **kwds)\r\n      File \"tests/lib/test_emitter.py\", line 62, in test_emitter_styles\r\n\t_compare_events(events, new_events)\r\n      File \"tests/lib/test_emitter.py\", line 15, in _compare_events\r\n\tassert event1.value == event2.value, (event1, event2)\r\n    AssertionError: see below\r\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    (ScalarEvent(anchor=None, tag=u'!foo', implicit=(False, False), value=u'No directives'),\r\n     ScalarEvent(anchor=None, tag=u'!foo', implicit=(False, False), value=u'No directives %TAG ! %21foo'))\r\n    ---------------------------------------------------------------------------\r\n    tests/data/spec-07-13.data:\r\n    ! \"First document\"\r\n    ---\r\n    !foo \"No directives\"\r\n    %TAG ! !foo\r\n    ---\r\n    !bar \"With directives\"\r\n    %YAML 1.1\r\n    ---\r\n    !baz \"Reset settings\"\r\n    ---------------------------------------------------------------------------\r\n    tests/data/spec-07-13.canonical:\r\n    %YAML 1.1\r\n    ---\r\n    !!str \"First document\"\r\n    ---\r\n    !<!foo> \"No directives\"\r\n    ---\r\n    !<!foobar> \"With directives\"\r\n    ---\r\n    !<!baz> \"Reset settings\"\r\n    ===========================================================================\r\n    test_emitter_styles_ext(tests/data/spec-08-08.data, tests/data/spec-08-08.canonical): FAILURE\r\n    Traceback (most recent call last):\r\n      File \"tests/lib/test_appliance.py\", line 65, in execute\r\n\tfunction(verbose=verbose, *filenames)\r\n      File \"tests/lib/test_yaml_ext.py\", line 240, in wrapper\r\n\tfunction(*args, **kwds)\r\n      File \"tests/lib/test_emitter.py\", line 62, in test_emitter_styles\r\n\t_compare_events(events, new_events)\r\n      File \"tests/lib/test_emitter.py\", line 15, in _compare_events\r\n\tassert event1.value == event2.value, (event1, event2)\r\n    AssertionError: see below\r\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    (ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'foo bar'),\r\n     ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'foo bar %YAML 1.1'))\r\n    ---------------------------------------------------------------------------\r\n    tests/data/spec-08-08.data:\r\n    ---\r\n    foo:\r\n     \"bar\r\n     baz\"\r\n    ---\r\n    \"foo\r\n     bar\"\r\n    ---\r\n    foo\r\n     bar\r\n    --- |\r\n     foo\r\n    ...\r\n    ---------------------------------------------------------------------------\r\n    tests/data/spec-08-08.canonical:\r\n    %YAML 1.1\r\n    ---\r\n    !!map {\r\n      ? !!str \"foo\"\r\n      : !!str \"bar baz\"\r\n    }\r\n    %YAML 1.1\r\n    ---\r\n    !!str \"foo bar\"\r\n    %YAML 1.1\r\n    ---\r\n    !!str \"foo bar\"\r\n    %YAML 1.1\r\n    ---\r\n    !!str \"foo\\n\"\r\n    ===========================================================================\r\n    TESTS: 2573\r\n    FAILURES: 4\r\n    error: Tests failed\r\n\r\nWe are not sure how to proceed. Could you please advice what those errors mean and how we could possibly fix them?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/213", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/213/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/213/events", "html_url": "https://github.com/yaml/pyyaml/issues/213", "id": 354002167, "node_id": "MDU6SXNzdWUzNTQwMDIxNjc=", "number": 213, "title": "Please provide manylinux wheels", "user": {"login": "hroncok", "id": 2401856, "node_id": "MDQ6VXNlcjI0MDE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2401856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroncok", "html_url": "https://github.com/hroncok", "followers_url": "https://api.github.com/users/hroncok/followers", "following_url": "https://api.github.com/users/hroncok/following{/other_user}", "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions", "organizations_url": "https://api.github.com/users/hroncok/orgs", "repos_url": "https://api.github.com/users/hroncok/repos", "events_url": "https://api.github.com/users/hroncok/events{/privacy}", "received_events_url": "https://api.github.com/users/hroncok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-25T10:28:32Z", "updated_at": "2018-10-27T16:40:11Z", "closed_at": "2018-10-27T16:40:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "PyPI has only Windows wheels. Can we please have manylinux ones as well? If it's desired, I can try to get it done via [cibuildweel](https://pypi.org/project/cibuildweel).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/211", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/211/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/211/events", "html_url": "https://github.com/yaml/pyyaml/issues/211", "id": 351281594, "node_id": "MDU6SXNzdWUzNTEyODE1OTQ=", "number": 211, "title": "can you rename 4.1 tag?", "user": {"login": "jrmarino", "id": 1125622, "node_id": "MDQ6VXNlcjExMjU2MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1125622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrmarino", "html_url": "https://github.com/jrmarino", "followers_url": "https://api.github.com/users/jrmarino/followers", "following_url": "https://api.github.com/users/jrmarino/following{/other_user}", "gists_url": "https://api.github.com/users/jrmarino/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrmarino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrmarino/subscriptions", "organizations_url": "https://api.github.com/users/jrmarino/orgs", "repos_url": "https://api.github.com/users/jrmarino/repos", "events_url": "https://api.github.com/users/jrmarino/events{/privacy}", "received_events_url": "https://api.github.com/users/jrmarino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-16T16:35:21Z", "updated_at": "2018-08-26T19:16:52Z", "closed_at": "2018-08-26T19:16:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The official site and other evidence suggests that 3.13 is the latest release.\r\n    https://pyyaml.org/wiki/PyYAML\r\n    https://pypi.org/project/PyYAML/#history\r\n\r\nHowever, the 4.1 release tag (which is apparently a tag for showing prep work on 4.1?  or maybe a pre/beta release) is making it appear that 4.1 is the latest\r\nhttps://repology.org/metapackage/python:pyyaml/versions\r\nThe repology maintainer won't ignore Alpine because of this tag.\r\n\r\nIf you can't rename the tag to something more accurate, can you at least state that 4.1 has either not been released, or if it's bogus, beta, whatever?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/207", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/207/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/207/events", "html_url": "https://github.com/yaml/pyyaml/issues/207", "id": 342061076, "node_id": "MDU6SXNzdWUzNDIwNjEwNzY=", "number": 207, "title": "CVE-2017-18342 status", "user": {"login": "Jwomers", "id": 89922, "node_id": "MDQ6VXNlcjg5OTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/89922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jwomers", "html_url": "https://github.com/Jwomers", "followers_url": "https://api.github.com/users/Jwomers/followers", "following_url": "https://api.github.com/users/Jwomers/following{/other_user}", "gists_url": "https://api.github.com/users/Jwomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jwomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jwomers/subscriptions", "organizations_url": "https://api.github.com/users/Jwomers/orgs", "repos_url": "https://api.github.com/users/Jwomers/repos", "events_url": "https://api.github.com/users/Jwomers/events{/privacy}", "received_events_url": "https://api.github.com/users/Jwomers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-07-17T19:53:33Z", "updated_at": "2019-03-13T17:15:50Z", "closed_at": "2019-03-13T17:15:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am maintaining the safety database at PyUp, and I want to get clarity on which version of PyYAML fixes CVE-2017-18342? I know 4.1 was released and then retracted from PyPi. \r\n\r\nDoes 3.13 fix CVE-2017-18342?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/205", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/205/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/205/events", "html_url": "https://github.com/yaml/pyyaml/issues/205", "id": 341731618, "node_id": "MDU6SXNzdWUzNDE3MzE2MTg=", "number": 205, "title": "pyyaml can't be installed via pip", "user": {"login": "estiens", "id": 4022668, "node_id": "MDQ6VXNlcjQwMjI2Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4022668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estiens", "html_url": "https://github.com/estiens", "followers_url": "https://api.github.com/users/estiens/followers", "following_url": "https://api.github.com/users/estiens/following{/other_user}", "gists_url": "https://api.github.com/users/estiens/gists{/gist_id}", "starred_url": "https://api.github.com/users/estiens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estiens/subscriptions", "organizations_url": "https://api.github.com/users/estiens/orgs", "repos_url": "https://api.github.com/users/estiens/repos", "events_url": "https://api.github.com/users/estiens/events{/privacy}", "received_events_url": "https://api.github.com/users/estiens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-17T01:20:40Z", "updated_at": "2018-07-17T04:03:21Z", "closed_at": "2018-07-17T04:03:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "`pip install pyyaml`\r\n\r\n```\r\n  HTTP error 404 while getting https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff (from https://www.piwheels.org/simple/pyyaml/)\r\n  Could not install requirement pyyaml from https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff (from BiblioPixel==3.4.18) because of error 404 Client Error: Not Found for url: https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl\r\nCould not install requirement pyyaml from https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff (from BiblioPixel==3.4.18) because of HTTP error 404 Client Error: Not Found for url: https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl for URL https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff (from https://www.piwheels.org/simple/pyyaml/)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/204", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/204/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/204/events", "html_url": "https://github.com/yaml/pyyaml/issues/204", "id": 340974963, "node_id": "MDU6SXNzdWUzNDA5NzQ5NjM=", "number": 204, "title": " HTTP error 404 while getting https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl", "user": {"login": "peterpanstechland", "id": 4452826, "node_id": "MDQ6VXNlcjQ0NTI4MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4452826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterpanstechland", "html_url": "https://github.com/peterpanstechland", "followers_url": "https://api.github.com/users/peterpanstechland/followers", "following_url": "https://api.github.com/users/peterpanstechland/following{/other_user}", "gists_url": "https://api.github.com/users/peterpanstechland/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterpanstechland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterpanstechland/subscriptions", "organizations_url": "https://api.github.com/users/peterpanstechland/orgs", "repos_url": "https://api.github.com/users/peterpanstechland/repos", "events_url": "https://api.github.com/users/peterpanstechland/events{/privacy}", "received_events_url": "https://api.github.com/users/peterpanstechland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-13T10:56:22Z", "updated_at": "2018-07-14T16:50:08Z", "closed_at": "2018-07-14T16:50:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting errors try to pip3 install PyYAML,\r\nthe error message is\r\n\r\n  HTTP error 404 while getting https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff (from https://www.piwheels.org/simple/pyyaml/)\r\n  Could not install requirement PyYAML from https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff because of error 404 Client Error: Not Found for url: https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl\r\nCould not install requirement PyYAML from https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff because of HTTP error 404 Client Error: Not Found for url: https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl for URL https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff (from https://www.piwheels.org/simple/pyyaml/)\r\n\r\nso I checked the https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl, it returns PyYAML-4.1-cp35-cp35m-linux_armv7l.whl was not found on this server.\r\nit seems like the file has been removed", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/203", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/203/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/203/events", "html_url": "https://github.com/yaml/pyyaml/issues/203", "id": 339922589, "node_id": "MDU6SXNzdWUzMzk5MjI1ODk=", "number": 203, "title": "Can't install pyyaml on RaspberryPi3 with python3", "user": {"login": "JosefProbst", "id": 34884555, "node_id": "MDQ6VXNlcjM0ODg0NTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/34884555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JosefProbst", "html_url": "https://github.com/JosefProbst", "followers_url": "https://api.github.com/users/JosefProbst/followers", "following_url": "https://api.github.com/users/JosefProbst/following{/other_user}", "gists_url": "https://api.github.com/users/JosefProbst/gists{/gist_id}", "starred_url": "https://api.github.com/users/JosefProbst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JosefProbst/subscriptions", "organizations_url": "https://api.github.com/users/JosefProbst/orgs", "repos_url": "https://api.github.com/users/JosefProbst/repos", "events_url": "https://api.github.com/users/JosefProbst/events{/privacy}", "received_events_url": "https://api.github.com/users/JosefProbst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-10T16:41:57Z", "updated_at": "2018-07-11T20:38:33Z", "closed_at": "2018-07-11T20:38:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "`$ pip3 install pyyaml\r\nCollecting pyyaml\r\n  HTTP error 404 while getting https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff (from https://www.piwheels.org/simple/pyyaml/)\r\n  Could not install requirement pyyaml from https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff because of error 404 Client Error: Not Found for url: https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl\r\nCould not install requirement pyyaml from https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff because of HTTP error 404 Client Error: Not Found for url: https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl for URL https://www.piwheels.org/simple/pyyaml/PyYAML-4.1-cp35-cp35m-linux_armv7l.whl#sha256=a5b125a24244830d574ccfd8fab861198d2ffe491b73179ffd75abf78caee6ff (from https://www.piwheels.org/simple/pyyaml/)\r\n`\r\n\r\nIf I manuall open [https://www.piwheels.org/simple/pyyaml/](url) in my browser I can download every \".whl\" but the 4.1 versions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/202", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/202/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/202/events", "html_url": "https://github.com/yaml/pyyaml/issues/202", "id": 339873936, "node_id": "MDU6SXNzdWUzMzk4NzM5MzY=", "number": 202, "title": "Collections Deprecation Warning", "user": {"login": "jeoffridavis", "id": 9093200, "node_id": "MDQ6VXNlcjkwOTMyMDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9093200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeoffridavis", "html_url": "https://github.com/jeoffridavis", "followers_url": "https://api.github.com/users/jeoffridavis/followers", "following_url": "https://api.github.com/users/jeoffridavis/following{/other_user}", "gists_url": "https://api.github.com/users/jeoffridavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeoffridavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeoffridavis/subscriptions", "organizations_url": "https://api.github.com/users/jeoffridavis/orgs", "repos_url": "https://api.github.com/users/jeoffridavis/repos", "events_url": "https://api.github.com/users/jeoffridavis/events{/privacy}", "received_events_url": "https://api.github.com/users/jeoffridavis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-10T14:41:28Z", "updated_at": "2019-03-14T10:47:37Z", "closed_at": "2019-03-14T10:47:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Warning**\r\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/yaml/constructor.py:126: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n\r\n**Offending Code**\r\nIn constructor.py , line 126:\r\n`  if not isinstance(key, collections.Hashable):`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/201", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/201/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/201/events", "html_url": "https://github.com/yaml/pyyaml/issues/201", "id": 338306105, "node_id": "MDU6SXNzdWUzMzgzMDYxMDU=", "number": 201, "title": "4.1 Tagged Release Missing on PyPI", "user": {"login": "vertexmc", "id": 25180408, "node_id": "MDQ6VXNlcjI1MTgwNDA4", "avatar_url": "https://avatars1.githubusercontent.com/u/25180408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vertexmc", "html_url": "https://github.com/vertexmc", "followers_url": "https://api.github.com/users/vertexmc/followers", "following_url": "https://api.github.com/users/vertexmc/following{/other_user}", "gists_url": "https://api.github.com/users/vertexmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/vertexmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vertexmc/subscriptions", "organizations_url": "https://api.github.com/users/vertexmc/orgs", "repos_url": "https://api.github.com/users/vertexmc/repos", "events_url": "https://api.github.com/users/vertexmc/events{/privacy}", "received_events_url": "https://api.github.com/users/vertexmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-04T14:54:35Z", "updated_at": "2018-07-04T15:16:29Z", "closed_at": "2018-07-04T15:16:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "The 4.1 release seems to be missing from PyPI. Was it removed intentionally?\r\n\r\nThanks!\r\n\r\nEDIT: Sorry if this is the wrong place to post this concern.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/199", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/199/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/199/events", "html_url": "https://github.com/yaml/pyyaml/issues/199", "id": 337989266, "node_id": "MDU6SXNzdWUzMzc5ODkyNjY=", "number": 199, "title": "Change dump(..., default_flow_style=...) default to False", "user": {"login": "ingydotnet", "id": 21826, "node_id": "MDQ6VXNlcjIxODI2", "avatar_url": "https://avatars2.githubusercontent.com/u/21826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ingydotnet", "html_url": "https://github.com/ingydotnet", "followers_url": "https://api.github.com/users/ingydotnet/followers", "following_url": "https://api.github.com/users/ingydotnet/following{/other_user}", "gists_url": "https://api.github.com/users/ingydotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ingydotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ingydotnet/subscriptions", "organizations_url": "https://api.github.com/users/ingydotnet/orgs", "repos_url": "https://api.github.com/users/ingydotnet/repos", "events_url": "https://api.github.com/users/ingydotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/ingydotnet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-03T17:23:11Z", "updated_at": "2020-04-10T08:14:55Z", "closed_at": "2019-03-14T10:47:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is probably the most annoying default in PyYAML. It's the only PyYAML FAQ\nentry: https://pyyaml.org/wiki/PyYAMLDocumentation#frequently-asked-questions\n\nChanging the default to always prefer indented/block style would be good, but\nis not back compatible. Since we will be breaking backwards compat big time\nwith the upcoming safe-load-by-default changes, this change should probably be\ntimed with that one.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/193", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/193/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/193/events", "html_url": "https://github.com/yaml/pyyaml/issues/193", "id": 337099631, "node_id": "MDU6SXNzdWUzMzcwOTk2MzE=", "number": 193, "title": "PyYAML 4.2 Release Plan", "user": {"login": "ingydotnet", "id": 21826, "node_id": "MDQ6VXNlcjIxODI2", "avatar_url": "https://avatars2.githubusercontent.com/u/21826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ingydotnet", "html_url": "https://github.com/ingydotnet", "followers_url": "https://api.github.com/users/ingydotnet/followers", "following_url": "https://api.github.com/users/ingydotnet/following{/other_user}", "gists_url": "https://api.github.com/users/ingydotnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ingydotnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ingydotnet/subscriptions", "organizations_url": "https://api.github.com/users/ingydotnet/orgs", "repos_url": "https://api.github.com/users/ingydotnet/repos", "events_url": "https://api.github.com/users/ingydotnet/events{/privacy}", "received_events_url": "https://api.github.com/users/ingydotnet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 46, "created_at": "2018-06-29T18:44:32Z", "updated_at": "2019-03-14T09:26:02Z", "closed_at": "2019-02-28T07:03:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "# Synopsis\r\n\r\nSee the project planning page: https://github.com/yaml/pyyaml/projects/1\r\n\r\n* Make release/4.2 with current master\r\n* Make PR to revert #74 ( #194 )\r\n* PyYAML team fixes broken pyyaml-build system\r\n  * Builds wheels with libyaml-2.1 linked in\r\n* Fix any other 4.2 blocker issues\r\n* Merge in successor to (#74, #189) **_IF_** it reaches approval consensus\r\n* Release 4.2 to PyPI\r\n* Continue to work on successor if not part of 4.2\r\n  * Bump version to 5.1 when merged\r\n\r\n# The PyYAML Release Situation\r\n\r\nThe most recent PyYAML, 3.12, was released Aug 2016. At that time, Kirill\r\nturned over maintenance of PyYAML and LibYAML to @sigmavirus24  and @ingy .\r\nSince then about 20 PRs have been applied to PyYAML and about 40 to LibYAML.\r\n\r\nPyYAML has a release builder: https://github.com/yaml/pyyaml-build\r\nIt builds PyYAML wheels against specific versions combinations of\r\n(Python, PyYAML, LibYAML).\r\n\r\nThis builder no longer works and it's complicated by the fact that the build\r\nprocess for libyaml has been changed. The PyYAML team is working hard to fix it.\r\n\r\nThe 4.1 release attempt was rushed out because we knew that PyYAML 3.12 doesn't\r\nwork with Python 3.7 which went out this week. We had a fix for that in master,\r\nand so we tried to get it out in time for 3.7.\r\n\r\nWe thought we had a Jenkins build system that would build the wheels as soon as\r\nthe sdist was uploaded. So we pushed the release only to find out minutes later\r\nthat this build system wasn't set up to build with libyaml. We were going to\r\nhave to use the pyyaml-build system.\r\n\r\nAfter 48 hours of work on the windows/wheels system we decided to pull the plug\r\non 4.1. We didn't have wheels and we were getting reports of other things that\r\nwere wrong. We didn't have a sense that the build system was going to get fixed\r\nsoon, and we are all volunteers with limited time.\r\n\r\nSoon after the release I learned about PR #74 and was completely surprised to\r\nfind that something this big went in without my seeing it. Looking back now I\r\nremember that I had a lot going on in my life at that specific time.\r\n\r\n#74 is a non backwards compatible change at the most basic level. It changes\r\nhow the dump and load functions behave.\r\n\r\nThe intent of the change is a good one:\r\n\r\n* Currently PyYAML has the sugar-API: dump, load, safe_dump, safe_load\r\n* PyYAML has had that API since version 3.1 (April 2006)\r\n* load() is trivial to exploit on untrusted data\r\n* Change load and dump to be aliases to safe_load and safe_dump\r\n* Add alarming (danger_*) new functions for the old load and dump\r\n\r\nBut this change has contentions:\r\n\r\n* It's non-back-compat and is going to affect a ton of existing code\r\n* The name danger is misleading when used in completely safe ways\r\n  * In addition, danger_dump is not known to be exploitable in any way\r\n* PyYAML has known about this and had a safe_ solution in place from the start\r\n  * People are just not feeling comfortable with the defaults\r\n\r\nThe change is important, worthy of a major release, but is not ready to\r\nbe part of PyYAML in its current form. A new PR, building from #74 and #189 \r\nshould be worked on.\r\n\r\n# The Current Plan Forward\r\n\r\nWe need to get PyYAML released soon, if only for the Python 3.7 release. We\r\ncan't make any release at all until the build system works again. IOW, we\r\ncouldn't even re-release 3.12 right now.\r\n\r\nThe #74 API change is big and it is more important to get it right than to rush\r\nit out. ie It load() may be a big can of gasoline, but nothing's on fire. ie\r\n#74 doesn't \"fix\" anything. It just changes a default to something that's\r\nalways been safe and available.\r\n\r\nThere are 60 other changes that I'd like to tackle in the next release, while\r\nat the same time taming a broken release process. My hope is that when we\r\nfigure this out, it will be easy to put out PyYAML releases on a regular basis.\r\n\r\nWe went from 3.12 to 4.x because this was a big release. It's big with or\r\nwithout #74. I would like to see PyYAML 4.2 get out in the next few days.\r\n\r\nIf the successor to #74 / #189 is ready and approved by the time we are ready\r\nto upload 4.2, it can go in.\r\n\r\nIf not, then I think it should be the focus of a 5.1 release. It's a big enough\r\nchange to trigger a major release. It should be in the first release of either\r\n4.x or 5.x.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/192", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/192/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/192/events", "html_url": "https://github.com/yaml/pyyaml/issues/192", "id": 336873278, "node_id": "MDU6SXNzdWUzMzY4NzMyNzg=", "number": 192, "title": "removal of 4.1 broke downstream gates", "user": {"login": "prometheanfire", "id": 1869923, "node_id": "MDQ6VXNlcjE4Njk5MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1869923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prometheanfire", "html_url": "https://github.com/prometheanfire", "followers_url": "https://api.github.com/users/prometheanfire/followers", "following_url": "https://api.github.com/users/prometheanfire/following{/other_user}", "gists_url": "https://api.github.com/users/prometheanfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/prometheanfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prometheanfire/subscriptions", "organizations_url": "https://api.github.com/users/prometheanfire/orgs", "repos_url": "https://api.github.com/users/prometheanfire/repos", "events_url": "https://api.github.com/users/prometheanfire/events{/privacy}", "received_events_url": "https://api.github.com/users/prometheanfire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-29T06:01:29Z", "updated_at": "2018-06-29T22:42:10Z", "closed_at": "2018-06-29T22:42:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://logs.openstack.org/91/578291/2/check/requirements-tox-py27-check-uc/d6c84fe/job-output.txt.gz#_2018-06-29_05_13_33_345222", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/190", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/190/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/190/events", "html_url": "https://github.com/yaml/pyyaml/issues/190", "id": 336836937, "node_id": "MDU6SXNzdWUzMzY4MzY5Mzc=", "number": 190, "title": "4.1 release unpublished from PyPI?", "user": {"login": "alexbecker", "id": 3656258, "node_id": "MDQ6VXNlcjM2NTYyNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3656258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexbecker", "html_url": "https://github.com/alexbecker", "followers_url": "https://api.github.com/users/alexbecker/followers", "following_url": "https://api.github.com/users/alexbecker/following{/other_user}", "gists_url": "https://api.github.com/users/alexbecker/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexbecker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexbecker/subscriptions", "organizations_url": "https://api.github.com/users/alexbecker/orgs", "repos_url": "https://api.github.com/users/alexbecker/repos", "events_url": "https://api.github.com/users/alexbecker/events{/privacy}", "received_events_url": "https://api.github.com/users/alexbecker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-29T01:58:57Z", "updated_at": "2018-06-29T04:11:49Z", "closed_at": "2018-06-29T04:11:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use `pipenv` to manage dependencies, so for our deployed environments we are pinned to specific versions of packages. Earlier today we updated our dependencies, pulling in `pyyaml` version `4.1`. Later our builds started failing, and I could not longer find version `4.1` on https://pypi.org/project/PyYAML/#history. Was it intentionally unpublished?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/187", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/187/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/187/events", "html_url": "https://github.com/yaml/pyyaml/issues/187", "id": 336710111, "node_id": "MDU6SXNzdWUzMzY3MTAxMTE=", "number": 187, "title": "PyYAML 4.1 changes \"safe\" in more ways than immediately obvious", "user": {"login": "cdent", "id": 34498, "node_id": "MDQ6VXNlcjM0NDk4", "avatar_url": "https://avatars3.githubusercontent.com/u/34498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdent", "html_url": "https://github.com/cdent", "followers_url": "https://api.github.com/users/cdent/followers", "following_url": "https://api.github.com/users/cdent/following{/other_user}", "gists_url": "https://api.github.com/users/cdent/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdent/subscriptions", "organizations_url": "https://api.github.com/users/cdent/orgs", "repos_url": "https://api.github.com/users/cdent/repos", "events_url": "https://api.github.com/users/cdent/events{/privacy}", "received_events_url": "https://api.github.com/users/cdent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-28T17:22:12Z", "updated_at": "2019-03-13T17:19:39Z", "closed_at": "2019-03-13T17:19:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's clear from the changelog that pyyaml 4.x now defaults to a style of safe_load for loading. This is probably good. However, it also appears that the definition of \"safe\" has changed somewhat.\r\n\r\nIn https://github.com/cdent/gabbi/pull/252 the 'safe' related tests work differently depending on whether >4 or <4 is used. As currently written they pass with 4 and fail with 3. The difference seems to be that \"safe\" in 3 and 4 mean different things:\r\n\r\n* in 4, safe will load custom tags that are defined in the same process, but not `python/object`, and unsafe will not load custom tags, but will load `python/object`\r\n* in 3, custom tags only load in unsafe, and `python/object`, neither in safe\r\n\r\nThe branch on that pull request can demonstrate the problem with different PyYAML versions. And master in the same repo will as well.\r\n\r\n**However**, I have no confidence that I'm parsing what's going on properly at all, so I need to come up with a minimal test case, which I'll try to do real soon, but I first wanted to get this written down in case there is something obviously wrong in either my code or in PyYAML.\r\n\r\nI will followup to this with the MTC, ASAP. Sorry for dropping noise like this, but needed to dump state.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/184", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/184/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/184/events", "html_url": "https://github.com/yaml/pyyaml/issues/184", "id": 336328907, "node_id": "MDU6SXNzdWUzMzYzMjg5MDc=", "number": 184, "title": "Fails spec-07-09, spec-07-10, spec-07-13, spec-08-08 when built with LibYAML 0.2.1", "user": {"login": "andersk", "id": 26471, "node_id": "MDQ6VXNlcjI2NDcx", "avatar_url": "https://avatars0.githubusercontent.com/u/26471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andersk", "html_url": "https://github.com/andersk", "followers_url": "https://api.github.com/users/andersk/followers", "following_url": "https://api.github.com/users/andersk/following{/other_user}", "gists_url": "https://api.github.com/users/andersk/gists{/gist_id}", "starred_url": "https://api.github.com/users/andersk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andersk/subscriptions", "organizations_url": "https://api.github.com/users/andersk/orgs", "repos_url": "https://api.github.com/users/andersk/repos", "events_url": "https://api.github.com/users/andersk/events{/privacy}", "received_events_url": "https://api.github.com/users/andersk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-27T17:53:05Z", "updated_at": "2019-11-25T23:27:49Z", "closed_at": "2019-11-25T23:27:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "This seems to be a LibYAML bug, but since yaml/libyaml#60 is marked as closed right now (likely incorrectly), I figure there should be an open report somewhere.\r\n\r\n```pytb\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-07-09.data, tests/data/spec-07-09.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib/test_appliance.py\", line 65, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib/test_yaml_ext.py\", line 240, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'foo'),\r\n ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'foo %YAML 1.1'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-09.data:\r\n---\r\nfoo\r\n...\r\n# Repeated end marker.\r\n...\r\n---\r\nbar\r\n# No end marker.\r\n---\r\nbaz\r\n...\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-09.canonical:\r\n%YAML 1.1\r\n---\r\n!!str \"foo\"\r\n%YAML 1.1\r\n---\r\n!!str \"bar\"\r\n%YAML 1.1\r\n---\r\n!!str \"baz\"\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-07-10.data, tests/data/spec-07-10.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib/test_appliance.py\", line 65, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib/test_yaml_ext.py\", line 240, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'Root flow scalar'),\r\n ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'Root flow scalar %YAML 1.1'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-10.data:\r\n\"Root flow\r\n scalar\"\r\n--- !!str >\r\n Root block\r\n scalar\r\n---\r\n# Root collection:\r\nfoo : bar\r\n... # Is optional.\r\n---\r\n# Explicit document may be empty.\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-10.canonical:\r\n%YAML 1.1\r\n---\r\n!!str \"Root flow scalar\"\r\n%YAML 1.1\r\n---\r\n!!str \"Root block scalar\\n\"\r\n%YAML 1.1\r\n---\r\n!!map {\r\n  ? !!str \"foo\"\r\n  : !!str \"bar\"\r\n}\r\n---\r\n#!!str \"\"\r\n!!null \"\"\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-07-13.data, tests/data/spec-07-13.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib/test_appliance.py\", line 65, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib/test_yaml_ext.py\", line 240, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag=u'!foo', implicit=(False, False), value=u'No directives'),\r\n ScalarEvent(anchor=None, tag=u'!foo', implicit=(False, False), value=u'No directives %TAG ! %21foo'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-13.data:\r\n! \"First document\"\r\n---\r\n!foo \"No directives\"\r\n%TAG ! !foo\r\n---\r\n!bar \"With directives\"\r\n%YAML 1.1\r\n---\r\n!baz \"Reset settings\"\r\n---------------------------------------------------------------------------\r\ntests/data/spec-07-13.canonical:\r\n%YAML 1.1\r\n---\r\n!!str \"First document\"\r\n---\r\n!<!foo> \"No directives\"\r\n---\r\n!<!foobar> \"With directives\"\r\n---\r\n!<!baz> \"Reset settings\"\r\n===========================================================================\r\ntest_emitter_styles_ext(tests/data/spec-08-08.data, tests/data/spec-08-08.canonical): FAILURE\r\nTraceback (most recent call last):\r\n  File \"tests/lib/test_appliance.py\", line 65, in execute\r\n    function(verbose=verbose, *filenames)\r\n  File \"tests/lib/test_yaml_ext.py\", line 240, in wrapper\r\n    function(*args, **kwds)\r\n  File \"tests/lib/test_emitter.py\", line 62, in test_emitter_styles\r\n    _compare_events(events, new_events)\r\n  File \"tests/lib/test_emitter.py\", line 15, in _compare_events\r\n    assert event1.value == event2.value, (event1, event2)\r\nAssertionError: see below\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n(ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'foo bar'),\r\n ScalarEvent(anchor=None, tag=u'tag:yaml.org,2002:str', implicit=(False, False), value=u'foo bar %YAML 1.1'))\r\n---------------------------------------------------------------------------\r\ntests/data/spec-08-08.data:\r\n---\r\nfoo:\r\n \"bar\r\n baz\"\r\n---\r\n\"foo\r\n bar\"\r\n---\r\nfoo\r\n bar\r\n--- |\r\n foo\r\n...\r\n---------------------------------------------------------------------------\r\ntests/data/spec-08-08.canonical:\r\n%YAML 1.1\r\n---\r\n!!map {\r\n  ? !!str \"foo\"\r\n  : !!str \"bar baz\"\r\n}\r\n%YAML 1.1\r\n---\r\n!!str \"foo bar\"\r\n%YAML 1.1\r\n---\r\n!!str \"foo bar\"\r\n%YAML 1.1\r\n---\r\n!!str \"foo\\n\"\r\n===========================================================================\r\nTESTS: 2589\r\nFAILURES: 4\r\nerror: Tests failed\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/183", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/183/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/183/events", "html_url": "https://github.com/yaml/pyyaml/issues/183", "id": 336263519, "node_id": "MDU6SXNzdWUzMzYyNjM1MTk=", "number": 183, "title": "!!python/object/apply: does not work anymore since v4", "user": {"login": "Colin-b", "id": 7591933, "node_id": "MDQ6VXNlcjc1OTE5MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7591933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Colin-b", "html_url": "https://github.com/Colin-b", "followers_url": "https://api.github.com/users/Colin-b/followers", "following_url": "https://api.github.com/users/Colin-b/following{/other_user}", "gists_url": "https://api.github.com/users/Colin-b/gists{/gist_id}", "starred_url": "https://api.github.com/users/Colin-b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Colin-b/subscriptions", "organizations_url": "https://api.github.com/users/Colin-b/orgs", "repos_url": "https://api.github.com/users/Colin-b/repos", "events_url": "https://api.github.com/users/Colin-b/events{/privacy}", "received_events_url": "https://api.github.com/users/Colin-b/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-27T14:50:12Z", "updated_at": "2018-06-27T14:50:59Z", "closed_at": "2018-06-27T14:50:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIt seems there is a regression between version 3.12 and 4.1 (or am I missing something that changed between both versions as this is a major release?)\r\n\r\n\r\npip install pyyaml==3.12\r\n\r\n`\r\nimport yaml\r\n\r\nyaml.load(\"!!python/object/apply:os.getenv ['COMPUTERNAME', None]\")\r\n`\r\nWorks fine\r\n\r\n\r\n\r\npip install pyyaml==4.1\r\n\r\n`\r\nimport yaml\r\n\r\nyaml.load(\"!!python/object/apply:os.getenv ['COMPUTERNAME', None]\")\r\n`\r\n\r\nTraceback (most recent call last):\r\n...\r\nyaml.constructor.ConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/object/apply:os.getenv'\r\n  in \"<unicode string>\", line 1, column 1:\r\n    !!python/object/apply:os.getenv  ... \r\n    ^", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/182", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/182/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/182/events", "html_url": "https://github.com/yaml/pyyaml/issues/182", "id": 336259833, "node_id": "MDU6SXNzdWUzMzYyNTk4MzM=", "number": 182, "title": "ext/_yaml.c is missing in 4.1 tarball", "user": {"login": "dfroger", "id": 697102, "node_id": "MDQ6VXNlcjY5NzEwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/697102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfroger", "html_url": "https://github.com/dfroger", "followers_url": "https://api.github.com/users/dfroger/followers", "following_url": "https://api.github.com/users/dfroger/following{/other_user}", "gists_url": "https://api.github.com/users/dfroger/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfroger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfroger/subscriptions", "organizations_url": "https://api.github.com/users/dfroger/orgs", "repos_url": "https://api.github.com/users/dfroger/repos", "events_url": "https://api.github.com/users/dfroger/events{/privacy}", "received_events_url": "https://api.github.com/users/dfroger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-27T14:40:55Z", "updated_at": "2018-06-30T22:56:41Z", "closed_at": "2018-06-30T22:56:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installing `pyyaml 3.12` without `cython` do build the `_yaml` extension, but installing `4.1` do not:\r\n\r\n```\r\npython -m venv venv3.12\r\n./venv3.12/bin/pip install pyyaml==3.12\r\n\r\npython -m venv venv4.1\r\n./venv4.1/bin/pip install pyyaml==4.1\r\n\r\nfind . -name '_yaml*'\r\n./venv3.12/lib/python3.6/site-packages/_yaml.cpython-36m-x86_64-linux-gnu.so\r\n```\r\n\r\nThe problem is that in https://pypi.org/simple/pyyaml/ `PyYAML-3.12.tar.gz` contains `ext/_yaml.c`, but `PyYAML-4.1.tar.gz` do not, so `cython` is required for `4.1` to build the extension. (`.pyx` -> `.c`)\r\n\r\n(question also asked in #179 but the issue was about another problem and is closed)\r\n\r\nCould it be possible to make a new `4.1` tarball including `ext/_yaml.c`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/180", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/180/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/180/events", "html_url": "https://github.com/yaml/pyyaml/issues/180", "id": 336204284, "node_id": "MDU6SXNzdWUzMzYyMDQyODQ=", "number": 180, "title": "4.1 release breaks old config files", "user": {"login": "mjpost", "id": 455256, "node_id": "MDQ6VXNlcjQ1NTI1Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/455256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjpost", "html_url": "https://github.com/mjpost", "followers_url": "https://api.github.com/users/mjpost/followers", "following_url": "https://api.github.com/users/mjpost/following{/other_user}", "gists_url": "https://api.github.com/users/mjpost/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjpost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjpost/subscriptions", "organizations_url": "https://api.github.com/users/mjpost/orgs", "repos_url": "https://api.github.com/users/mjpost/repos", "events_url": "https://api.github.com/users/mjpost/events{/privacy}", "received_events_url": "https://api.github.com/users/mjpost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-27T12:17:32Z", "updated_at": "2018-06-27T12:18:08Z", "closed_at": "2018-06-27T12:18:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Our project](https://github.com/awslabs/sockeye) uses pyyaml to load configuration files, and our Travis CI builds started breaking recently due to the 4.1 upgrade. One problem is that pyyaml seems no longer to respect types. For example, the following config file:\r\n\r\n```\r\nbuckets:\r\n- !!python/tuple\r\n  - 9\r\n  - 10\r\n- !!python/tuple\r\n  - 18\r\n  - 20\r\n```\r\n\r\nused to get instantiated as a dictionary containing a list of tuples of integer pairs under the key `buckets`, but these tuples are now lists. Creating the same object as a Python dictionary (with a list of tuples of integer pairs) is also written out into a plain file now, such that the type information is lost.\r\n\r\nIs there a workaround? Or more generally, a pyyaml 3 \u2192 4 upgrade guide, or list of potential problems?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/179", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/179/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/179/events", "html_url": "https://github.com/yaml/pyyaml/issues/179", "id": 336200517, "node_id": "MDU6SXNzdWUzMzYyMDA1MTc=", "number": 179, "title": "extension _yaml is not built", "user": {"login": "dfroger", "id": 697102, "node_id": "MDQ6VXNlcjY5NzEwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/697102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfroger", "html_url": "https://github.com/dfroger", "followers_url": "https://api.github.com/users/dfroger/followers", "following_url": "https://api.github.com/users/dfroger/following{/other_user}", "gists_url": "https://api.github.com/users/dfroger/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfroger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfroger/subscriptions", "organizations_url": "https://api.github.com/users/dfroger/orgs", "repos_url": "https://api.github.com/users/dfroger/repos", "events_url": "https://api.github.com/users/dfroger/events{/privacy}", "received_events_url": "https://api.github.com/users/dfroger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-27T12:05:23Z", "updated_at": "2018-06-29T04:20:40Z", "closed_at": "2018-06-27T12:20:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to build the extension `_yaml` for `pyyaml 4.1` on `debian 8`:\r\n\r\n    python setup.py build_ext\r\n\r\nFails with:\r\n\r\n```\r\n/home/dfroger/.pyenv/versions/3.6.2/lib/python3.6/distutils/dist.py:261: UserWarning: Unknown distribution option: 'python_requires'\r\n  warnings.warn(msg)\r\nrunning build_ext\r\nbuilding '_yaml' extension\r\ncreating build\r\ncreating build/temp.linux-x86_64-3.6\r\ncreating build/temp.linux-x86_64-3.6/ext\r\ngcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/home/dfroger/.pyenv/versions/3.6.2/include/python3.6m -c ext/_yaml.c -o build/temp.linux-x86_64-3.6/ext/_yaml.o\r\ngcc: error: ext/_yaml.c: No such file or directory\r\ngcc: fatal error: no input files\r\ncompilation terminated.\r\nError compiling module, falling back to pure Python\r\n```\r\n\r\nNote that directory `build/temp.linux-x86_64-3.6/ext` is empty.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/178", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/178/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/178/events", "html_url": "https://github.com/yaml/pyyaml/issues/178", "id": 336043018, "node_id": "MDU6SXNzdWUzMzYwNDMwMTg=", "number": 178, "title": "Cannot load python/unicode strings in 4.1", "user": {"login": "johnywith1n", "id": 321466, "node_id": "MDQ6VXNlcjMyMTQ2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/321466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnywith1n", "html_url": "https://github.com/johnywith1n", "followers_url": "https://api.github.com/users/johnywith1n/followers", "following_url": "https://api.github.com/users/johnywith1n/following{/other_user}", "gists_url": "https://api.github.com/users/johnywith1n/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnywith1n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnywith1n/subscriptions", "organizations_url": "https://api.github.com/users/johnywith1n/orgs", "repos_url": "https://api.github.com/users/johnywith1n/repos", "events_url": "https://api.github.com/users/johnywith1n/events{/privacy}", "received_events_url": "https://api.github.com/users/johnywith1n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-27T01:11:13Z", "updated_at": "2018-06-27T01:12:41Z", "closed_at": "2018-06-27T01:12:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "For the given code \r\n\r\n```\r\nresponse = \"{app_id: s~project, rtok: !!python/unicode '1'}\"\r\napp_info = yaml.load(response)\r\n```\r\nit runs in version 3.12 but throws the following error in 4.1\r\n\r\n```\r\nyaml.constructor.ConstructorError: could not determine a constructor for the tag \u2018tag:yaml.org,2002:python/unicode\u2019\r\n in \u201c<string>\u201c, line 1, column 28:\r\n   {app_id: s~project, rtok: !!python/unicode '1'}\r\n```\r\n\r\nIf it matters, this is from `usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/platform/google_appengine/google/appengine/ext/remote_api/remote_api_stub.py` of the google cloud sdk.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yaml/pyyaml/issues/177", "repository_url": "https://api.github.com/repos/yaml/pyyaml", "labels_url": "https://api.github.com/repos/yaml/pyyaml/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/yaml/pyyaml/issues/177/comments", "events_url": "https://api.github.com/repos/yaml/pyyaml/issues/177/events", "html_url": "https://github.com/yaml/pyyaml/issues/177", "id": 336031692, "node_id": "MDU6SXNzdWUzMzYwMzE2OTI=", "number": 177, "title": "Yaml-4.1 failed to serialize or deserialize numpy objects.", "user": {"login": "lyuwen", "id": 17034696, "node_id": "MDQ6VXNlcjE3MDM0Njk2", "avatar_url": "https://avatars1.githubusercontent.com/u/17034696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lyuwen", "html_url": "https://github.com/lyuwen", "followers_url": "https://api.github.com/users/lyuwen/followers", "following_url": "https://api.github.com/users/lyuwen/following{/other_user}", "gists_url": "https://api.github.com/users/lyuwen/gists{/gist_id}", "starred_url": "https://api.github.com/users/lyuwen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lyuwen/subscriptions", "organizations_url": "https://api.github.com/users/lyuwen/orgs", "repos_url": "https://api.github.com/users/lyuwen/repos", "events_url": "https://api.github.com/users/lyuwen/events{/privacy}", "received_events_url": "https://api.github.com/users/lyuwen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-26T23:59:37Z", "updated_at": "2019-03-13T17:21:55Z", "closed_at": "2019-03-13T17:21:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "```>>> import yaml\r\n>>> import numpy as np\r\n>>> yaml.dump(np.random.random((100,100)))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/lf2507/.local/lib/python2.7/site-packages/yaml/__init__.py\", line 219, in dump\r\n    return dump_all([data], stream, Dumper=Dumper, **kwds)\r\n  File \"/home/lf2507/.local/lib/python2.7/site-packages/yaml/__init__.py\", line 198, in dump_all\r\n    dumper.represent(data)\r\n  File \"/home/lf2507/.local/lib/python2.7/site-packages/yaml/representer.py\", line 28, in represent\r\n    node = self.represent_data(data)\r\n  File \"/home/lf2507/.local/lib/python2.7/site-packages/yaml/representer.py\", line 67, in represent_data\r\n    node = self.yaml_representers[None](self, data)\r\n  File \"/home/lf2507/.local/lib/python2.7/site-packages/yaml/representer.py\", line 249, in represent_undefined\r\n    raise RepresenterError(\"cannot represent an object\", data)\r\nyaml.representer.RepresenterError: ('cannot represent an object', array([[0.78867287, 0.1145689 , 0.73455115, ..., 0.03162476, 0.06458778,\r\n        0.02051163],\r\n       [0.0648247 , 0.44383162, 0.80787024, ..., 0.07586477, 0.47848779,\r\n        0.05648012],\r\n       [0.84362173, 0.31730949, 0.99826481, ..., 0.8951278 , 0.87577464,\r\n        0.64970616],\r\n       ...,\r\n       [0.98758733, 0.26062501, 0.68675972, ..., 0.82339569, 0.59255629,\r\n        0.24641607],\r\n       [0.11395974, 0.41112024, 0.64924667, ..., 0.33038519, 0.8491808 ,\r\n        0.87419596],\r\n       [0.44593807, 0.15025162, 0.16101452, ..., 0.25134148, 0.30600472,\r\n        0.38231974]]))\r\n>>> \r\n```", "performed_via_github_app": null, "score": 1.0}]}