{"total_count": 84, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/194", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/194/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/194/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/194", "id": 641266686, "node_id": "MDU6SXNzdWU2NDEyNjY2ODY=", "number": 194, "title": "Delta Time Instead of Relative Time", "user": {"login": "Lazloo", "id": 10186284, "node_id": "MDQ6VXNlcjEwMTg2Mjg0", "avatar_url": "https://avatars2.githubusercontent.com/u/10186284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lazloo", "html_url": "https://github.com/Lazloo", "followers_url": "https://api.github.com/users/Lazloo/followers", "following_url": "https://api.github.com/users/Lazloo/following{/other_user}", "gists_url": "https://api.github.com/users/Lazloo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lazloo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lazloo/subscriptions", "organizations_url": "https://api.github.com/users/Lazloo/orgs", "repos_url": "https://api.github.com/users/Lazloo/repos", "events_url": "https://api.github.com/users/Lazloo/events{/privacy}", "received_events_url": "https://api.github.com/users/Lazloo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-18T14:44:11Z", "updated_at": "2020-06-20T08:47:25Z", "closed_at": "2020-06-20T08:47:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would appreciate an option that shows the relative spend time for each line. That is the delta time to the previous line.\r\n\r\nThat would be great\r\nLazloo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/193", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/193/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/193/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/193", "id": 638352068, "node_id": "MDU6SXNzdWU2MzgzNTIwNjg=", "number": 193, "title": "Bug", "user": {"login": "shandyandy43", "id": 63116094, "node_id": "MDQ6VXNlcjYzMTE2MDk0", "avatar_url": "https://avatars3.githubusercontent.com/u/63116094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shandyandy43", "html_url": "https://github.com/shandyandy43", "followers_url": "https://api.github.com/users/shandyandy43/followers", "following_url": "https://api.github.com/users/shandyandy43/following{/other_user}", "gists_url": "https://api.github.com/users/shandyandy43/gists{/gist_id}", "starred_url": "https://api.github.com/users/shandyandy43/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shandyandy43/subscriptions", "organizations_url": "https://api.github.com/users/shandyandy43/orgs", "repos_url": "https://api.github.com/users/shandyandy43/repos", "events_url": "https://api.github.com/users/shandyandy43/events{/privacy}", "received_events_url": "https://api.github.com/users/shandyandy43/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-14T13:25:53Z", "updated_at": "2020-06-14T19:32:04Z", "closed_at": "2020-06-14T13:30:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Stop cloning the netbet account with immediate affect. Delete as soon as possible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/192", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/192/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/192/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/192", "id": 638331592, "node_id": "MDU6SXNzdWU2MzgzMzE1OTI=", "number": 192, "title": "Thanks for reporting this. Right now I think it's a small enough issue that I can ignore it.", "user": {"login": "shandyandy43", "id": 63116094, "node_id": "MDQ6VXNlcjYzMTE2MDk0", "avatar_url": "https://avatars3.githubusercontent.com/u/63116094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shandyandy43", "html_url": "https://github.com/shandyandy43", "followers_url": "https://api.github.com/users/shandyandy43/followers", "following_url": "https://api.github.com/users/shandyandy43/following{/other_user}", "gists_url": "https://api.github.com/users/shandyandy43/gists{/gist_id}", "starred_url": "https://api.github.com/users/shandyandy43/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shandyandy43/subscriptions", "organizations_url": "https://api.github.com/users/shandyandy43/orgs", "repos_url": "https://api.github.com/users/shandyandy43/repos", "events_url": "https://api.github.com/users/shandyandy43/events{/privacy}", "received_events_url": "https://api.github.com/users/shandyandy43/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-14T11:15:24Z", "updated_at": "2020-06-14T11:23:41Z", "closed_at": "2020-06-14T11:23:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for reporting this. Right now I think it's a small enough issue that I can ignore it.\r\n\r\n_Originally posted by @cool-RR in https://github.com/cool-RR/PySnooper/issues/134#issuecomment-508421822_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/190", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/190/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/190/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/190", "id": 631659263, "node_id": "MDU6SXNzdWU2MzE2NTkyNjM=", "number": 190, "title": "output to logging handle", "user": {"login": "MstWntd", "id": 3737664, "node_id": "MDQ6VXNlcjM3Mzc2NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3737664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MstWntd", "html_url": "https://github.com/MstWntd", "followers_url": "https://api.github.com/users/MstWntd/followers", "following_url": "https://api.github.com/users/MstWntd/following{/other_user}", "gists_url": "https://api.github.com/users/MstWntd/gists{/gist_id}", "starred_url": "https://api.github.com/users/MstWntd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MstWntd/subscriptions", "organizations_url": "https://api.github.com/users/MstWntd/orgs", "repos_url": "https://api.github.com/users/MstWntd/repos", "events_url": "https://api.github.com/users/MstWntd/events{/privacy}", "received_events_url": "https://api.github.com/users/MstWntd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-05T14:52:39Z", "updated_at": "2020-06-05T19:52:10Z", "closed_at": "2020-06-05T19:24:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nThis tool is awesome, I have two questions tho:\n\n1) How can I enable/disable the logging programmatically\n2) How can I ensure all the log output goes to logging module as WARN or DEBUG?\n\nThank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/177", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/177/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/177/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/177", "id": 578558273, "node_id": "MDU6SXNzdWU1Nzg1NTgyNzM=", "number": 177, "title": "FEATURE REQUEST:  Display value of *args, **kwargs in overridden save()", "user": {"login": "DanielSwain", "id": 7819909, "node_id": "MDQ6VXNlcjc4MTk5MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7819909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielSwain", "html_url": "https://github.com/DanielSwain", "followers_url": "https://api.github.com/users/DanielSwain/followers", "following_url": "https://api.github.com/users/DanielSwain/following{/other_user}", "gists_url": "https://api.github.com/users/DanielSwain/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielSwain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielSwain/subscriptions", "organizations_url": "https://api.github.com/users/DanielSwain/orgs", "repos_url": "https://api.github.com/users/DanielSwain/repos", "events_url": "https://api.github.com/users/DanielSwain/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielSwain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-10T12:53:40Z", "updated_at": "2020-03-10T14:16:32Z", "closed_at": "2020-03-10T13:08:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "We just came across an error in an overridden `save()` that was not present in the Django admin but that cropped up when creating a front-end with DRF.  Turned out there was a `kwarg` that needed to have have its value changed:  `force_insert` had to be changed to `False` because `super` was being called two times in the overridden `save` routine (yes, it had to be called two times in order to first save a file that was being uploaded).  PySnooper DID show the value of `kwargs` when `force_insert` was explicitly set to False within the overridden `save()`, but it did NOT show the value of `kwargs` when the error occurred in the `save()` and the `kwargs` were not touched.  If the value of `kwargs` had been shown automatically from within the `save()`, it would have been an immediate tipoff to how to remedy the error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/175", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/175/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/175/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/175", "id": 542360409, "node_id": "MDU6SXNzdWU1NDIzNjA0MDk=", "number": 175, "title": "feature request: support ndarrays", "user": {"login": "TejasAvinashShetty", "id": 27445854, "node_id": "MDQ6VXNlcjI3NDQ1ODU0", "avatar_url": "https://avatars2.githubusercontent.com/u/27445854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TejasAvinashShetty", "html_url": "https://github.com/TejasAvinashShetty", "followers_url": "https://api.github.com/users/TejasAvinashShetty/followers", "following_url": "https://api.github.com/users/TejasAvinashShetty/following{/other_user}", "gists_url": "https://api.github.com/users/TejasAvinashShetty/gists{/gist_id}", "starred_url": "https://api.github.com/users/TejasAvinashShetty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TejasAvinashShetty/subscriptions", "organizations_url": "https://api.github.com/users/TejasAvinashShetty/orgs", "repos_url": "https://api.github.com/users/TejasAvinashShetty/repos", "events_url": "https://api.github.com/users/TejasAvinashShetty/events{/privacy}", "received_events_url": "https://api.github.com/users/TejasAvinashShetty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-25T16:00:03Z", "updated_at": "2019-12-27T15:53:03Z", "closed_at": "2019-12-27T15:53:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to use pysnooper with ndarrays from numpy?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/173", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/173/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/173/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/173", "id": 531764524, "node_id": "MDU6SXNzdWU1MzE3NjQ1MjQ=", "number": 173, "title": "Showing the error while running the python code with pysnooper", "user": {"login": "sadow984", "id": 47876475, "node_id": "MDQ6VXNlcjQ3ODc2NDc1", "avatar_url": "https://avatars1.githubusercontent.com/u/47876475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sadow984", "html_url": "https://github.com/sadow984", "followers_url": "https://api.github.com/users/sadow984/followers", "following_url": "https://api.github.com/users/sadow984/following{/other_user}", "gists_url": "https://api.github.com/users/sadow984/gists{/gist_id}", "starred_url": "https://api.github.com/users/sadow984/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sadow984/subscriptions", "organizations_url": "https://api.github.com/users/sadow984/orgs", "repos_url": "https://api.github.com/users/sadow984/repos", "events_url": "https://api.github.com/users/sadow984/events{/privacy}", "received_events_url": "https://api.github.com/users/sadow984/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-03T06:49:05Z", "updated_at": "2019-12-03T07:40:38Z", "closed_at": "2019-12-03T07:37:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "   @pysnooper.snoop()\r\nAttributeError: partially initialized module 'pysnooper' has no attribute 'snoop' (most likely due to a circular import)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/168", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/168/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/168/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/168", "id": 522694693, "node_id": "MDU6SXNzdWU1MjI2OTQ2OTM=", "number": 168, "title": "Add a flag to normalize the output (remove machine-specific data)", "user": {"login": "itraviv", "id": 23009955, "node_id": "MDQ6VXNlcjIzMDA5OTU1", "avatar_url": "https://avatars1.githubusercontent.com/u/23009955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itraviv", "html_url": "https://github.com/itraviv", "followers_url": "https://api.github.com/users/itraviv/followers", "following_url": "https://api.github.com/users/itraviv/following{/other_user}", "gists_url": "https://api.github.com/users/itraviv/gists{/gist_id}", "starred_url": "https://api.github.com/users/itraviv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itraviv/subscriptions", "organizations_url": "https://api.github.com/users/itraviv/orgs", "repos_url": "https://api.github.com/users/itraviv/repos", "events_url": "https://api.github.com/users/itraviv/events{/privacy}", "received_events_url": "https://api.github.com/users/itraviv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-11-14T08:16:47Z", "updated_at": "2019-11-19T17:08:51Z", "closed_at": "2019-11-19T17:08:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We came up with a simple but strong usage \u2013 diff between traces.\r\nWe use it to find bugs or regressions between git-branches and code sections.\r\nHowever, we deal with removing all the machine-specific data (time stamps, reprs containing memory addresses, absolute paths, thread data etc.).\r\n \r\nI thought about adding a flag called \u201cnormalize\u201d that will do it.\r\nfor example:\r\nthe trace without changes (`normalize=False`):\r\n\r\n```\r\nSource path:... C:\\[my-absolute-path]\\PySnooper\\tests\\test_pysnooper.py\r\nStarting var:.. A = <class 'tests.test_pysnooper.test_see_output.<locals>.A'>\r\n10:02:07.262743 call      1555     def stam():\r\n10:02:07.263744 line      1556         a = A(19)\r\nNew var:....... a = <tests.test_pysnooper.test_see_output.<locals>.A object at 0x0000023BEB538710>\r\n10:02:07.263744 line      1557         b = A(22)\r\nNew var:....... b = <tests.test_pysnooper.test_see_output.<locals>.A object at 0x0000023BEB538518>\r\n10:02:07.263744 line      1558         res = a.a + b.a\r\nNew var:....... res = 41\r\n10:02:07.263744 line      1559         return res\r\n10:02:07.263744 return    1559         return res\r\nReturn value:.. 41\r\n```\r\n\r\nnormalized trace (`normalize=True`):\r\n```\r\nSource path:... test_pysnooper.py\r\nStarting var:.. A = <class 'tests.test_pysnooper.test_see_output.<locals>.A'>\r\n call      1555     def stam():\r\n line      1556         a = A(19)\r\nNew var:....... a = <tests.test_pysnooper.test_see_output.<locals>.A object>\r\n line      1557         b = A(22)\r\nModified var:.. a = <tests.test_pysnooper.test_see_output.<locals>.A object>\r\nNew var:....... b = <tests.test_pysnooper.test_see_output.<locals>.A object>\r\n line      1558         res = a.a + b.a\r\nModified var:.. a = <tests.test_pysnooper.test_see_output.<locals>.A object>\r\nModified var:.. b = <tests.test_pysnooper.test_see_output.<locals>.A object>\r\nNew var:....... res = 41\r\n line      1559         return res\r\nModified var:.. a = <tests.test_pysnooper.test_see_output.<locals>.A object>\r\nModified var:.. b = <tests.test_pysnooper.test_see_output.<locals>.A object>\r\n return    1559         return res\r\nReturn value:.. 41\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/167", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/167/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/167/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/167", "id": 513728431, "node_id": "MDU6SXNzdWU1MTM3Mjg0MzE=", "number": 167, "title": "Bug: wrong when using", "user": {"login": "CLannadZSY", "id": 38000492, "node_id": "MDQ6VXNlcjM4MDAwNDky", "avatar_url": "https://avatars2.githubusercontent.com/u/38000492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CLannadZSY", "html_url": "https://github.com/CLannadZSY", "followers_url": "https://api.github.com/users/CLannadZSY/followers", "following_url": "https://api.github.com/users/CLannadZSY/following{/other_user}", "gists_url": "https://api.github.com/users/CLannadZSY/gists{/gist_id}", "starred_url": "https://api.github.com/users/CLannadZSY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CLannadZSY/subscriptions", "organizations_url": "https://api.github.com/users/CLannadZSY/orgs", "repos_url": "https://api.github.com/users/CLannadZSY/repos", "events_url": "https://api.github.com/users/CLannadZSY/events{/privacy}", "received_events_url": "https://api.github.com/users/CLannadZSY/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-29T06:57:41Z", "updated_at": "2019-10-29T07:01:25Z", "closed_at": "2019-10-29T07:01:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "### use print(), can output correctly\r\n![Snipaste_2019-10-29_14-49-44](https://user-images.githubusercontent.com/38000492/67744093-890fe900-fa5b-11e9-8ccd-e429e9bca8c6.png)\r\n\r\n### use pysnooper,it wrong\r\n![Snipaste_2019-10-29_14-52-51](https://user-images.githubusercontent.com/38000492/67744205-d55b2900-fa5b-11e9-9478-2f1e647bc0ab.png)\r\n\r\n### why?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/165", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/165/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/165/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/165", "id": 510075526, "node_id": "MDU6SXNzdWU1MTAwNzU1MjY=", "number": 165, "title": "Unnecessary BaseVariable type in watch?", "user": {"login": "chen-chao", "id": 12325665, "node_id": "MDQ6VXNlcjEyMzI1NjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/12325665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chen-chao", "html_url": "https://github.com/chen-chao", "followers_url": "https://api.github.com/users/chen-chao/followers", "following_url": "https://api.github.com/users/chen-chao/following{/other_user}", "gists_url": "https://api.github.com/users/chen-chao/gists{/gist_id}", "starred_url": "https://api.github.com/users/chen-chao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chen-chao/subscriptions", "organizations_url": "https://api.github.com/users/chen-chao/orgs", "repos_url": "https://api.github.com/users/chen-chao/repos", "events_url": "https://api.github.com/users/chen-chao/events{/privacy}", "received_events_url": "https://api.github.com/users/chen-chao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-21T15:57:31Z", "updated_at": "2019-10-21T16:46:53Z", "closed_at": "2019-10-21T16:46:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is `isinstance(v, BaseVariable)` here really necessary?  `v` shouldn't be an instance of `BaseVariable` since it has abstract methods.\r\n\r\nhttps://github.com/cool-RR/PySnooper/blob/c0bf4bd0067d8d7618e40d27b2626e6f3cba4fce/pysnooper/tracer.py#L207-L213", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/164", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/164/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/164/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/164", "id": 508789120, "node_id": "MDU6SXNzdWU1MDg3ODkxMjA=", "number": 164, "title": "Help: trouble with \"SOURCE UNAVAILABLE\"", "user": {"login": "samhld", "id": 4852912, "node_id": "MDQ6VXNlcjQ4NTI5MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4852912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samhld", "html_url": "https://github.com/samhld", "followers_url": "https://api.github.com/users/samhld/followers", "following_url": "https://api.github.com/users/samhld/following{/other_user}", "gists_url": "https://api.github.com/users/samhld/gists{/gist_id}", "starred_url": "https://api.github.com/users/samhld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samhld/subscriptions", "organizations_url": "https://api.github.com/users/samhld/orgs", "repos_url": "https://api.github.com/users/samhld/repos", "events_url": "https://api.github.com/users/samhld/events{/privacy}", "received_events_url": "https://api.github.com/users/samhld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-18T00:34:37Z", "updated_at": "2019-10-18T12:54:47Z", "closed_at": "2019-10-18T12:47:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Overall, this is working for me but instead of getting the line of code that's being evaluated, I'm getting a constant `SOURCE UNAVAILABLE` message.  It looks like this is called from [here](https://github.com/cool-RR/PySnooper/blob/master/pysnooper/tracer.py#L89).  Not sure why it's not a \"source\" though.  Can you help?  Thanks!\r\n\r\nThis is happening on a very basic function, say:\r\n```\r\n@pysnooper.snoop()\r\ndef hello(name):\r\n     print(f\"Hello, {name}\")\r\n```\r\n\r\nReturns:\r\n```\r\n> hello('sam')\r\nSource path:... <stdin>\r\nStarting var:.. name = 'sam'\r\n17:27:50.065066 call         1 SOURCE IS UNAVAILABLE\r\n17:27:50.065288 line         3 SOURCE IS UNAVAILABLE\r\nHello, sam\r\n17:27:50.065439 return       3 SOURCE IS UNAVAILABLE\r\nReturn value:.. None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/163", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/163/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/163/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/163", "id": 507840246, "node_id": "MDU6SXNzdWU1MDc4NDAyNDY=", "number": 163, "title": "Fluentbit error: or: Could not open configuration file. Aborting", "user": {"login": "SripriyaMenon", "id": 56067529, "node_id": "MDQ6VXNlcjU2MDY3NTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/56067529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SripriyaMenon", "html_url": "https://github.com/SripriyaMenon", "followers_url": "https://api.github.com/users/SripriyaMenon/followers", "following_url": "https://api.github.com/users/SripriyaMenon/following{/other_user}", "gists_url": "https://api.github.com/users/SripriyaMenon/gists{/gist_id}", "starred_url": "https://api.github.com/users/SripriyaMenon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SripriyaMenon/subscriptions", "organizations_url": "https://api.github.com/users/SripriyaMenon/orgs", "repos_url": "https://api.github.com/users/SripriyaMenon/repos", "events_url": "https://api.github.com/users/SripriyaMenon/events{/privacy}", "received_events_url": "https://api.github.com/users/SripriyaMenon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-16T13:06:53Z", "updated_at": "2019-10-16T15:28:12Z", "closed_at": "2019-10-16T15:28:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to configure Fluentbit on my 5 node EKS cluster.\r\n\r\nIt was running ok when i was running it on the 3 node cluster. But now after upgrading it to 5 node cluster, The pods are always in the CrashLoopBack State and the logs mention:\r\n\r\n\r\nFhdjghjiegfi;ugue~]$ kubectl logs ds/fluent-bit -n logging\r\nFound 5 pods, using pod/fluent-bit-6qzcp\r\nFluent Bit v1.1.0\r\nCopyright (C) Treasure Data\r\n\r\nError: Could not open configuration file. Aborting\r\n\r\n\r\nI dont know if there is something that needs to be modified in the config file also\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/158", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/158/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/158/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/158", "id": 493594377, "node_id": "MDU6SXNzdWU0OTM1OTQzNzc=", "number": 158, "title": "test_exception is flaky", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-14T07:24:50Z", "updated_at": "2019-09-14T08:29:27Z", "closed_at": "2019-09-14T08:29:27Z", "author_association": "OWNER", "active_lock_reason": null, "body": "@alexmojaki Check this out. While developing something unrelated, I noticed that `test_exception` with `assert_sample_output` that you wrote, is flaky. It failed once on Python 2.7 on Windows, and then it succeeded again (without any code changes) and I couldn't make it fail again.\r\n\r\nHere is the failure details, let me know if you have any insights:\r\n\r\n```\r\n$ py -2.7  -m pytest                                                                                                   \r\n============================= test session starts =============================                                        \r\nplatform win32 -- Python 2.7.13, pytest-4.3.0, py-1.7.0, pluggy-0.8.0                                                  \r\nrootdir: C:\\Users\\Administrator\\Documents\\Python Projects\\PySnooper, inifile: tox.ini                                  \r\ncollected 41 items                                                                                                     \r\n                                                                                                                       \r\ntests\\test_chinese.py .                                                  [  2%]                                        \r\ntests\\test_not_implemented.py ss                                         [  7%]                                        \r\ntests\\test_pysnooper.py ..........................F.........             [ 95%]                                        \r\ntests\\test_multiple_files\\test_multiple_files.py .                       [ 97%]                                        \r\ntests\\test_utils\\test_ensure_tuple.py .                                  [100%]                                        \r\n                                                                                                                       \r\n================================== FAILURES ===================================                                        \r\n_______________________________ test_exception ________________________________                                        \r\n                                                                                                                       \r\n    def test_exception():                                                                                              \r\n        from .samples import exception                                                                                 \r\n>       assert_sample_output(exception)                                                                                \r\n                                                                                                                       \r\ntests\\test_pysnooper.py:1074:                                                                                          \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _                                        \r\n                                                                                                                       \r\nmodule = <module 'tests.samples.exception' from 'C:\\Users\\Administrator\\Documents\\Python Projects\\PySn                 \r\nooper\\tests\\samples\\exception.py'>                                                                                     \r\n                                                                                                                       \r\n    def assert_sample_output(module):                                                                                  \r\n        with mini_toolbox.OutputCapturer(stdout=False,                                                                 \r\n                                         stderr=True) as output_capturer:                                              \r\n            module.main()                                                                                              \r\n                                                                                                                       \r\n        time = '21:10:42.298924'                                                                                       \r\n        time_pattern = re.sub(r'\\d', r'\\\\d', time)                                                                     \r\n                                                                                                                       \r\n        def normalise(out):                                                                                            \r\n            out = re.sub(time_pattern, time, out).strip()                                                              \r\n            out = re.sub(                                                                                              \r\n                r'^( *)Source path:\\.\\.\\. .*$',                                                                        \r\n                r'\\1Source path:... Whatever',                                                                         \r\n                out,                                                                                                   \r\n                flags=re.MULTILINE                                                                                     \r\n            )                                                                                                          \r\n            return out                                                                                                 \r\n                                                                                                                       \r\n                                                                                                                       \r\n        output = output_capturer.string_io.getvalue()                                                                  \r\n                                                                                                                       \r\n        try:                                                                                                           \r\n>           assert (                                                                                                   \r\n                    normalise(output) ==                                                                               \r\n                    normalise(module.expected_output)                                                                  \r\n            )                                                                                                          \r\nE           AssertionError: assert 'Source path:...value:.. None' == 'Source path:....value:.. None'                   \r\nE             Skipping 523 identical leading characters in diff, use -v to show                                        \r\nE               ption                                                                                                  \r\nE             -     10:15:33 exception   10         foo()                                                              \r\nE             ?        ^^^^^                                                                                           \r\nE             +     21:10:42.298924 exception   10         foo()                                                       \r\nE             ?     +++   ^^^^^^^^^                                                                                    \r\nE                   TypeError: bad...                                                                                  \r\nE                                                                                                                      \r\nE             ...Full output truncated (32 lines hidden), use '-vv' to show                                            \r\n                                                                                                                       \r\ntests\\utils.py:319: AssertionError                                                                                     \r\n---------------------------- Captured stdout call -----------------------------                                        \r\n                                                                                                                       \r\n                                                                                                                       \r\nActual Output:                                                                                                         \r\n                                                                                                                       \r\nSource path:... C:\\Users\\Administrator\\Documents\\Python Projects\\PySnooper\\tests\\samples\\exception.py                  \r\n10:15:32.999000 call        17 def main():                                                                             \r\n10:15:32.999000 line        18     try:                                                                                \r\n10:15:32.999000 line        19         bar()                                                                           \r\n    10:15:32.999000 call         8 def bar():                                                                          \r\n    10:15:32.999000 line         9     try:                                                                            \r\n    10:15:32.999000 line        10         foo()                                                                       \r\n        10:15:32.999000 call         4 def foo():                                                                      \r\n        10:15:32.999000 line         5     raise TypeError('bad')                                                      \r\n        10:15:32.999000 exception    5     raise TypeError('bad')                                                      \r\n        TypeError: bad                                                                                                 \r\n        Call ended by exception                                                                                        \r\n    10:15:33 exception   10         foo()                                                                              \r\n    TypeError: bad                                                                                                     \r\n    10:15:33 line        11     except Exception:                                                                      \r\n    10:15:33 line        12         str(1)                                                                             \r\n    10:15:33 line        13         raise                                                                              \r\n    Call ended by exception                                                                                            \r\n10:15:33 exception   19         bar()                                                                                  \r\nTypeError: bad                                                                                                         \r\n10:15:33 line        20     except:                                                                                    \r\n10:15:33 line        21         pass                                                                                   \r\n10:15:33 return      21         pass                                                                                   \r\nReturn value:.. None                                                                                                   \r\n                                                                                                                       \r\n=============== 1 failed, 38 passed, 2 skipped in 0.41 seconds ================                                        \r\n                                                                                                                       \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/154", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/154/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/154/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/154", "id": 490791946, "node_id": "MDU6SXNzdWU0OTA3OTE5NDY=", "number": 154, "title": "Add tests for DISABLED=True", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-08T19:07:33Z", "updated_at": "2019-09-14T10:56:45Z", "closed_at": "2019-09-14T10:56:45Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/152", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/152/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/152/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/152", "id": 490789752, "node_id": "MDU6SXNzdWU0OTA3ODk3NTI=", "number": 152, "title": "Disallow async generators", "user": {"login": "alexmojaki", "id": 3627481, "node_id": "MDQ6VXNlcjM2Mjc0ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3627481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmojaki", "html_url": "https://github.com/alexmojaki", "followers_url": "https://api.github.com/users/alexmojaki/followers", "following_url": "https://api.github.com/users/alexmojaki/following{/other_user}", "gists_url": "https://api.github.com/users/alexmojaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmojaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmojaki/subscriptions", "organizations_url": "https://api.github.com/users/alexmojaki/orgs", "repos_url": "https://api.github.com/users/alexmojaki/repos", "events_url": "https://api.github.com/users/alexmojaki/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmojaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-08T18:54:10Z", "updated_at": "2019-09-13T17:24:51Z", "closed_at": "2019-09-13T17:24:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "From inspect.py:\r\n\r\n```python\r\ndef iscoroutinefunction(object):\r\n    \"\"\"Return true if the object is a coroutine function.\r\n\r\n    Coroutine functions are defined with \"async def\" syntax.\r\n    \"\"\"\r\n    return bool((isfunction(object) or ismethod(object)) and\r\n                object.__code__.co_flags & CO_COROUTINE)\r\n\r\ndef isasyncgenfunction(object):\r\n    \"\"\"Return true if the object is an asynchronous generator function.\r\n\r\n    Asynchronous generator functions are defined with \"async def\"\r\n    syntax and have \"yield\" expressions in their body.\r\n    \"\"\"\r\n    return bool((isfunction(object) or ismethod(object)) and\r\n                object.__code__.co_flags & CO_ASYNC_GENERATOR)\r\n```\r\n\r\nAs long as coroutine functions aren't supported, async generators shouldn't be supported for the same reasons.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/150", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/150/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/150/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/150", "id": 490678024, "node_id": "MDU6SXNzdWU0OTA2NzgwMjQ=", "number": 150, "title": "Allow snooping on all methods of a class", "user": {"login": "jonathangjertsen", "id": 7355797, "node_id": "MDQ6VXNlcjczNTU3OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7355797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathangjertsen", "html_url": "https://github.com/jonathangjertsen", "followers_url": "https://api.github.com/users/jonathangjertsen/followers", "following_url": "https://api.github.com/users/jonathangjertsen/following{/other_user}", "gists_url": "https://api.github.com/users/jonathangjertsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathangjertsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathangjertsen/subscriptions", "organizations_url": "https://api.github.com/users/jonathangjertsen/orgs", "repos_url": "https://api.github.com/users/jonathangjertsen/repos", "events_url": "https://api.github.com/users/jonathangjertsen/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathangjertsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-07T20:37:52Z", "updated_at": "2019-09-08T19:30:17Z", "closed_at": "2019-09-08T19:22:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I didn't find a way to easily snoop on all the methods of a class without adding the decorator to every single method. Below is an outline of a way to do it with a metaclass. There was an issue overwriting the magic/dunder methods (`AttributeError: type object 'SnoopedMetaClass' has no attribute '__code__'`), but for everything else it works fine.\r\n\r\n```\r\nimport pysnooper\r\n\r\nclass SnoopMetaClass(type):\r\n    \"\"\"Converts every method to a snooped method\"\"\"\r\n    def __new__(cls, name, bases, attrs, **kwargs):\r\n        # Create the instance like normal\r\n        instance = super().__new__(cls, name, bases, attrs)\r\n\r\n        # If the class has a \"snoop_kwargs\" class attribute, get it here\r\n        # so we can forward it to pysnooper.snoop. Set it to an empty dict by default.\r\n        kwargs = attrs.get(\"snoop_kwargs\", {})\r\n\r\n        # Iterate over every attribute and find the ones that are methods\r\n        for attr in dir(instance):\r\n            # Certain magic methods do not like to be overridden by the snooped version\r\n            if attr.startswith(\"__\"):\r\n                continue\r\n\r\n            # Override the value with a snooped one if it is callable\r\n            value = getattr(instance, attr)\r\n            if callable(value):\r\n                snooped = pysnooper.snoop(**kwargs)(value)\r\n                setattr(instance, attr, snooped)\r\n        return instance\r\n\r\n\r\n\r\n\r\nclass MyClass(metaclass=SnoopMetaClass):\r\n    snoop_kwargs = {\"output\": \"log.txt\"}\r\n\r\n   def __init__(self):\r\n       \"\"\"Will not be snooped on since it is a magic method\"\"\"\r\n\r\n    def my_method(self):\r\n        \"\"\"Normal method, will be snooped on\"\"\"\r\n\r\n    def my_other_method(self):\r\n        \"\"\"Normal method, will be snooped on\"\"\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/146", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/146/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/146/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/146", "id": 474414984, "node_id": "MDU6SXNzdWU0NzQ0MTQ5ODQ=", "number": 146, "title": "Break down the readme to 2 files, complicated usage to separate file", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-30T07:15:22Z", "updated_at": "2019-11-29T22:03:29Z", "closed_at": "2019-11-29T22:03:29Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/144", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/144/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/144/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/144", "id": 473694685, "node_id": "MDU6SXNzdWU0NzM2OTQ2ODU=", "number": 144, "title": "Problem with passing in a single tuple in custom_repr= ()", "user": {"login": "DavidykZhao", "id": 37813116, "node_id": "MDQ6VXNlcjM3ODEzMTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/37813116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidykZhao", "html_url": "https://github.com/DavidykZhao", "followers_url": "https://api.github.com/users/DavidykZhao/followers", "following_url": "https://api.github.com/users/DavidykZhao/following{/other_user}", "gists_url": "https://api.github.com/users/DavidykZhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidykZhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidykZhao/subscriptions", "organizations_url": "https://api.github.com/users/DavidykZhao/orgs", "repos_url": "https://api.github.com/users/DavidykZhao/repos", "events_url": "https://api.github.com/users/DavidykZhao/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidykZhao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-28T01:33:13Z", "updated_at": "2019-07-30T08:14:37Z", "closed_at": "2019-07-30T08:14:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying it on a toy example and just wanted to pass in one tuple like \r\n(list, print_list_size) to custom_repr= () with print_list_size being the example used in the readme file:\r\n`\r\ndef print_list_size(l):\r\n    return 'list(size={})'.format(len(l))\r\n`\r\n\r\nThere was an exception:\" TypeError: cannot unpack non-iterable function object.\" \r\nI think the problem lies in that custom_repr is a tuple of tuples thus when it has only one element it won't be unpacked successfully. \r\nI changed custom_repr = [ ] and then put in the tuple (list, print_list_size) and it worked. Or, put an extra , in the tuple such like this:\r\n`\r\n@pysnooper.snoop(custom_repr = ( (list, print_list_size), ))\r\n`\r\n\r\nJust a small issue but hopefully this would be beneficial for other people. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/139", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/139/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/139/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/139", "id": 468370281, "node_id": "MDU6SXNzdWU0NjgzNzAyODE=", "number": 139, "title": "Help wanted: Advanced Usage 'exclude variable'", "user": {"login": "rickgeorges", "id": 8147831, "node_id": "MDQ6VXNlcjgxNDc4MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8147831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rickgeorges", "html_url": "https://github.com/rickgeorges", "followers_url": "https://api.github.com/users/rickgeorges/followers", "following_url": "https://api.github.com/users/rickgeorges/following{/other_user}", "gists_url": "https://api.github.com/users/rickgeorges/gists{/gist_id}", "starred_url": "https://api.github.com/users/rickgeorges/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rickgeorges/subscriptions", "organizations_url": "https://api.github.com/users/rickgeorges/orgs", "repos_url": "https://api.github.com/users/rickgeorges/repos", "events_url": "https://api.github.com/users/rickgeorges/events{/privacy}", "received_events_url": "https://api.github.com/users/rickgeorges/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-15T22:56:23Z", "updated_at": "2019-10-23T15:27:50Z", "closed_at": "2019-10-23T15:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The 'Advanced Usage' section in the docs are not that clear to me. Sorry if this if easy to figure out but I'm not sure how to use the classes in variables.py\r\nHow can I achieve this:\r\n```\r\n@pysnooper.snoop(exclude='token')\r\ndef sum_to_x(x):\r\n    token = 'secret'\r\n    l = list(range(x))\r\n    a = numpy.zeros((10,10))\r\n    return sum(l)\r\n```\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/138", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/138/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/138/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/138", "id": 468156610, "node_id": "MDU6SXNzdWU0NjgxNTY2MTA=", "number": 138, "title": "Featrue requests: Does anyone write a similar module for C/C++?", "user": {"login": "625781186", "id": 30521429, "node_id": "MDQ6VXNlcjMwNTIxNDI5", "avatar_url": "https://avatars1.githubusercontent.com/u/30521429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/625781186", "html_url": "https://github.com/625781186", "followers_url": "https://api.github.com/users/625781186/followers", "following_url": "https://api.github.com/users/625781186/following{/other_user}", "gists_url": "https://api.github.com/users/625781186/gists{/gist_id}", "starred_url": "https://api.github.com/users/625781186/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/625781186/subscriptions", "organizations_url": "https://api.github.com/users/625781186/orgs", "repos_url": "https://api.github.com/users/625781186/repos", "events_url": "https://api.github.com/users/625781186/events{/privacy}", "received_events_url": "https://api.github.com/users/625781186/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-15T14:21:32Z", "updated_at": "2019-10-23T15:27:33Z", "closed_at": "2019-10-23T15:27:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think this debugging method is too convenient !!\r\nI love it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/137", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/137/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/137/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/137", "id": 467689541, "node_id": "MDU6SXNzdWU0Njc2ODk1NDE=", "number": 137, "title": "Need fewer logs when in a loop", "user": {"login": "Fangyh09", "id": 9389269, "node_id": "MDQ6VXNlcjkzODkyNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/9389269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fangyh09", "html_url": "https://github.com/Fangyh09", "followers_url": "https://api.github.com/users/Fangyh09/followers", "following_url": "https://api.github.com/users/Fangyh09/following{/other_user}", "gists_url": "https://api.github.com/users/Fangyh09/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fangyh09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fangyh09/subscriptions", "organizations_url": "https://api.github.com/users/Fangyh09/orgs", "repos_url": "https://api.github.com/users/Fangyh09/repos", "events_url": "https://api.github.com/users/Fangyh09/events{/privacy}", "received_events_url": "https://api.github.com/users/Fangyh09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-13T08:13:07Z", "updated_at": "2019-07-19T12:41:50Z", "closed_at": "2019-07-19T12:41:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n@pysnooper.snoop()\r\ndef foo_loop(number):\r\n  result = []\r\n  for i in range(number):\r\n    result.append(i * 10)\r\n```\r\nFor foo_loop(1000), `result` will be updated 1000 times.\r\nBut I only want to know the final result.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/136", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/136/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/136/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/136", "id": 464759246, "node_id": "MDU6SXNzdWU0NjQ3NTkyNDY=", "number": 136, "title": "Question : How do I only focus on function calls and return values?", "user": {"login": "625781186", "id": 30521429, "node_id": "MDQ6VXNlcjMwNTIxNDI5", "avatar_url": "https://avatars1.githubusercontent.com/u/30521429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/625781186", "html_url": "https://github.com/625781186", "followers_url": "https://api.github.com/users/625781186/followers", "following_url": "https://api.github.com/users/625781186/following{/other_user}", "gists_url": "https://api.github.com/users/625781186/gists{/gist_id}", "starred_url": "https://api.github.com/users/625781186/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/625781186/subscriptions", "organizations_url": "https://api.github.com/users/625781186/orgs", "repos_url": "https://api.github.com/users/625781186/repos", "events_url": "https://api.github.com/users/625781186/events{/privacy}", "received_events_url": "https://api.github.com/users/625781186/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-05T19:59:42Z", "updated_at": "2019-07-05T20:53:44Z", "closed_at": "2019-07-05T20:53:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I find that many open source projects do not have UML diagrams, making the functions called difficult to trace.\r\n\r\nSo, How do I only focus on function calls and return values,  not variables?\r\nLike this :\r\n![image](https://user-images.githubusercontent.com/30521429/60743005-2d988780-9fa2-11e9-8774-dfbd10a2c45f.png)\r\n\r\nI want to just keep the calls and returns.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/135", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/135/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/135/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/135", "id": 463990985, "node_id": "MDU6SXNzdWU0NjM5OTA5ODU=", "number": 135, "title": "feature request: Support showing source code in exec", "user": {"login": "longqzh", "id": 325592, "node_id": "MDQ6VXNlcjMyNTU5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/325592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/longqzh", "html_url": "https://github.com/longqzh", "followers_url": "https://api.github.com/users/longqzh/followers", "following_url": "https://api.github.com/users/longqzh/following{/other_user}", "gists_url": "https://api.github.com/users/longqzh/gists{/gist_id}", "starred_url": "https://api.github.com/users/longqzh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/longqzh/subscriptions", "organizations_url": "https://api.github.com/users/longqzh/orgs", "repos_url": "https://api.github.com/users/longqzh/repos", "events_url": "https://api.github.com/users/longqzh/events{/privacy}", "received_events_url": "https://api.github.com/users/longqzh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-03T23:16:12Z", "updated_at": "2019-07-04T09:24:55Z", "closed_at": "2019-07-04T09:24:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for your awesome project!   It works with the code which run in the exec(), but it can't show the source code. I found that pysnooper try to get the source code from file. So Is it possible to show the source code in exec?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/133", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/133/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/133/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/133", "id": 462366467, "node_id": "MDU6SXNzdWU0NjIzNjY0Njc=", "number": 133, "title": "About the 'with' position", "user": {"login": "ballgodpy", "id": 24569445, "node_id": "MDQ6VXNlcjI0NTY5NDQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/24569445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ballgodpy", "html_url": "https://github.com/ballgodpy", "followers_url": "https://api.github.com/users/ballgodpy/followers", "following_url": "https://api.github.com/users/ballgodpy/following{/other_user}", "gists_url": "https://api.github.com/users/ballgodpy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ballgodpy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ballgodpy/subscriptions", "organizations_url": "https://api.github.com/users/ballgodpy/orgs", "repos_url": "https://api.github.com/users/ballgodpy/repos", "events_url": "https://api.github.com/users/ballgodpy/events{/privacy}", "received_events_url": "https://api.github.com/users/ballgodpy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-30T04:34:01Z", "updated_at": "2019-07-01T11:12:42Z", "closed_at": "2019-07-01T11:12:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/24569445/60392300-9317ee80-9b32-11e9-9548-83806bb16f57.png)\r\nq1:why  line 14 'with' is lined up with line 11'for', not  line 12 ?\r\nq2: why the output  only shows when i ==  2,  \r\n![image](https://user-images.githubusercontent.com/24569445/60392325-edb14a80-9b32-11e9-959c-639f5885f0d9.png)\r\n\r\nI want to know the reason,thank you ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/132", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/132/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/132/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/132", "id": 462360910, "node_id": "MDU6SXNzdWU0NjIzNjA5MTA=", "number": 132, "title": "Unable to install it", "user": {"login": "Freakwill", "id": 30965609, "node_id": "MDQ6VXNlcjMwOTY1NjA5", "avatar_url": "https://avatars3.githubusercontent.com/u/30965609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Freakwill", "html_url": "https://github.com/Freakwill", "followers_url": "https://api.github.com/users/Freakwill/followers", "following_url": "https://api.github.com/users/Freakwill/following{/other_user}", "gists_url": "https://api.github.com/users/Freakwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/Freakwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Freakwill/subscriptions", "organizations_url": "https://api.github.com/users/Freakwill/orgs", "repos_url": "https://api.github.com/users/Freakwill/repos", "events_url": "https://api.github.com/users/Freakwill/events{/privacy}", "received_events_url": "https://api.github.com/users/Freakwill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-30T02:52:27Z", "updated_at": "2019-06-30T07:16:35Z", "closed_at": "2019-06-30T07:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "`pip install` command displayed the following error\r\n\r\n ERROR: Could not find a version that satisfies the requirement pysoonper (from versions: none)\r\nERROR: No matching distribution found for pysoonper", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/128", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/128/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/128/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/128", "id": 455676084, "node_id": "MDU6SXNzdWU0NTU2NzYwODQ=", "number": 128, "title": "No tags in release", "user": {"login": "guysoft", "id": 325670, "node_id": "MDQ6VXNlcjMyNTY3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/325670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guysoft", "html_url": "https://github.com/guysoft", "followers_url": "https://api.github.com/users/guysoft/followers", "following_url": "https://api.github.com/users/guysoft/following{/other_user}", "gists_url": "https://api.github.com/users/guysoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/guysoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guysoft/subscriptions", "organizations_url": "https://api.github.com/users/guysoft/orgs", "repos_url": "https://api.github.com/users/guysoft/repos", "events_url": "https://api.github.com/users/guysoft/events{/privacy}", "received_events_url": "https://api.github.com/users/guysoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-13T11:03:09Z", "updated_at": "2019-06-25T14:18:00Z", "closed_at": "2019-06-25T14:18:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\nI can see you are changing the release versions, but there are no tags in the Repo,\r\nIt would also let you post to the release page what has changed and if there is anything major.\r\nExample:\r\nhttps://github.com/python/cpython/releases\r\n\r\nAnd if you feel like it you can add more text:\r\nhttps://github.com/guysoft/OctoPi/releases", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/127", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/127/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/127/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/127", "id": 452018927, "node_id": "MDU6SXNzdWU0NTIwMTg5Mjc=", "number": 127, "title": "activate / desactivate pysnooper ?", "user": {"login": "yvonhubert", "id": 45566343, "node_id": "MDQ6VXNlcjQ1NTY2MzQz", "avatar_url": "https://avatars3.githubusercontent.com/u/45566343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yvonhubert", "html_url": "https://github.com/yvonhubert", "followers_url": "https://api.github.com/users/yvonhubert/followers", "following_url": "https://api.github.com/users/yvonhubert/following{/other_user}", "gists_url": "https://api.github.com/users/yvonhubert/gists{/gist_id}", "starred_url": "https://api.github.com/users/yvonhubert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yvonhubert/subscriptions", "organizations_url": "https://api.github.com/users/yvonhubert/orgs", "repos_url": "https://api.github.com/users/yvonhubert/repos", "events_url": "https://api.github.com/users/yvonhubert/events{/privacy}", "received_events_url": "https://api.github.com/users/yvonhubert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-06-04T14:07:53Z", "updated_at": "2019-06-28T15:07:31Z", "closed_at": "2019-06-28T15:07:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello,\r\n\r\nis it possible to activate / desactivate pysnooper in code ?\r\n\r\nthe goal is to keep pysnooper in production and activate it when a problem is occuring.\r\n\r\nthanx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/125", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/125/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/125/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/125", "id": 448562154, "node_id": "MDU6SXNzdWU0NDg1NjIxNTQ=", "number": 125, "title": "Add `python` and `debug` tags to repository", "user": {"login": "techtonik", "id": 515889, "node_id": "MDQ6VXNlcjUxNTg4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techtonik", "html_url": "https://github.com/techtonik", "followers_url": "https://api.github.com/users/techtonik/followers", "following_url": "https://api.github.com/users/techtonik/following{/other_user}", "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}", "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions", "organizations_url": "https://api.github.com/users/techtonik/orgs", "repos_url": "https://api.github.com/users/techtonik/repos", "events_url": "https://api.github.com/users/techtonik/events{/privacy}", "received_events_url": "https://api.github.com/users/techtonik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-26T12:30:08Z", "updated_at": "2019-09-05T13:47:29Z", "closed_at": "2019-05-26T13:07:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "To make it easily discoverable.\r\n\r\nhttps://github.com/search?q=topic%3Apython+topic%3Adebug", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/124", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/124/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/124/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/124", "id": 445664668, "node_id": "MDU6SXNzdWU0NDU2NjQ2Njg=", "number": 124, "title": "Chinese coding problem", "user": {"login": "nocmt", "id": 26828323, "node_id": "MDQ6VXNlcjI2ODI4MzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/26828323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nocmt", "html_url": "https://github.com/nocmt", "followers_url": "https://api.github.com/users/nocmt/followers", "following_url": "https://api.github.com/users/nocmt/following{/other_user}", "gists_url": "https://api.github.com/users/nocmt/gists{/gist_id}", "starred_url": "https://api.github.com/users/nocmt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nocmt/subscriptions", "organizations_url": "https://api.github.com/users/nocmt/orgs", "repos_url": "https://api.github.com/users/nocmt/repos", "events_url": "https://api.github.com/users/nocmt/events{/privacy}", "received_events_url": "https://api.github.com/users/nocmt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-18T01:25:14Z", "updated_at": "2019-05-20T10:54:53Z", "closed_at": "2019-05-20T10:54:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use python3.7\uff0cIt default coding  is 'utf-8', So I didn't add \"#-*-coding: utf-8-*-\" to the first line of my file.\r\n\r\nBut when I used PySnooper, I found an error:\r\n\r\n      `UnicodeEncodeError: 'gbk' codec can't encode character '\\ufffd' in position 69: illegal multibyte sequence`\r\n\r\n**Code location\uff1atracer.py 134th line**\r\n\r\nMy solution is:\r\n\r\n```\r\n# tracer.py 134 line\r\ndef write(self, s):\r\n        - with open(self.path, 'w' if self.overwrite else 'a') as output_file:\r\n       + with open(self.path, 'w' if self.overwrite else 'a', encoding='utf-8') as output_file:\r\n            output_file.write(s)\r\n        self.overwrite = False\r\n```\r\n\r\nand add \"#-*-coding: utf-8-*-\" in my file\r\n\r\nI look forward to better solutions, Thanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/121", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/121/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/121/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/121", "id": 443526942, "node_id": "MDU6SXNzdWU0NDM1MjY5NDI=", "number": 121, "title": "How to use `get_shortish_repr` to get the shape of vectors?", "user": {"login": "JiahaoYao", "id": 20907377, "node_id": "MDQ6VXNlcjIwOTA3Mzc3", "avatar_url": "https://avatars1.githubusercontent.com/u/20907377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiahaoYao", "html_url": "https://github.com/JiahaoYao", "followers_url": "https://api.github.com/users/JiahaoYao/followers", "following_url": "https://api.github.com/users/JiahaoYao/following{/other_user}", "gists_url": "https://api.github.com/users/JiahaoYao/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiahaoYao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiahaoYao/subscriptions", "organizations_url": "https://api.github.com/users/JiahaoYao/orgs", "repos_url": "https://api.github.com/users/JiahaoYao/repos", "events_url": "https://api.github.com/users/JiahaoYao/events{/privacy}", "received_events_url": "https://api.github.com/users/JiahaoYao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-05-13T17:55:29Z", "updated_at": "2019-05-21T23:37:08Z", "closed_at": "2019-05-21T23:37:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @cool-RR, could you show how to make use of `get_shortish_repr`  to let the `snooper` show the shape of vectors, as you said in #94?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/120", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/120/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/120/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/120", "id": 443051547, "node_id": "MDU6SXNzdWU0NDMwNTE1NDc=", "number": 120, "title": "module 'pysnooper' has no attribute 'snoop'", "user": {"login": "kkdrfyb", "id": 13033816, "node_id": "MDQ6VXNlcjEzMDMzODE2", "avatar_url": "https://avatars2.githubusercontent.com/u/13033816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkdrfyb", "html_url": "https://github.com/kkdrfyb", "followers_url": "https://api.github.com/users/kkdrfyb/followers", "following_url": "https://api.github.com/users/kkdrfyb/following{/other_user}", "gists_url": "https://api.github.com/users/kkdrfyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkdrfyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkdrfyb/subscriptions", "organizations_url": "https://api.github.com/users/kkdrfyb/orgs", "repos_url": "https://api.github.com/users/kkdrfyb/repos", "events_url": "https://api.github.com/users/kkdrfyb/events{/privacy}", "received_events_url": "https://api.github.com/users/kkdrfyb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-12T01:02:04Z", "updated_at": "2019-06-19T11:01:32Z", "closed_at": "2019-05-12T06:20:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "AttributeError\r\nmodule 'pysnooper' has no attribute 'snoop'\r\n  File \"/Users/fanyb/Desktop/markdown/pysnooper.py\", line 3, in <module>\r\n    @pysnooper.snoop()\r\n  File \"/Users/fanyb/Desktop/markdown/pysnooper.py\", line 1, in <module>\r\n    import pysnooper\r\n  File \"/Users/fanyb/anaconda3/lib/python3.7/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/Users/fanyb/anaconda3/lib/python3.7/runpy.py\", line 96, in _run_module_code\r\n    mod_name, mod_spec, pkg_name, script_name)\r\n  File \"/Users/fanyb/anaconda3/lib/python3.7/runpy.py\", line 263, in run_path\r\n    pkg_name=pkg_name, script_name=fname)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/115", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/115/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/115/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/115", "id": 442979437, "node_id": "MDU6SXNzdWU0NDI5Nzk0Mzc=", "number": 115, "title": "Simplify tests using `assert_sample_output`, no more entries and regexes", "user": {"login": "alexmojaki", "id": 3627481, "node_id": "MDQ6VXNlcjM2Mjc0ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3627481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmojaki", "html_url": "https://github.com/alexmojaki", "followers_url": "https://api.github.com/users/alexmojaki/followers", "following_url": "https://api.github.com/users/alexmojaki/following{/other_user}", "gists_url": "https://api.github.com/users/alexmojaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmojaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmojaki/subscriptions", "organizations_url": "https://api.github.com/users/alexmojaki/orgs", "repos_url": "https://api.github.com/users/alexmojaki/repos", "events_url": "https://api.github.com/users/alexmojaki/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmojaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-11T10:37:41Z", "updated_at": "2019-05-11T18:29:39Z", "closed_at": "2019-05-11T18:29:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Tests using `assert_sample_output` are much easier and faster to read, write, and maintain. No regexes. Much less thinking and typing required. Much more concrete, no abstractions. I think it would be a huge improvement to migrate all tests related to tracing to this style. Meanwhile tests relating to output methods should focus only on testing the output, similar to what I've done in #103. We can get rid of `assert_output` and the entries framework entirely.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/109", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/109/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/109/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/109", "id": 442795505, "node_id": "MDU6SXNzdWU0NDI3OTU1MDU=", "number": 109, "title": "Decorator library adds spurious lines", "user": {"login": "alexmojaki", "id": 3627481, "node_id": "MDQ6VXNlcjM2Mjc0ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3627481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmojaki", "html_url": "https://github.com/alexmojaki", "followers_url": "https://api.github.com/users/alexmojaki/followers", "following_url": "https://api.github.com/users/alexmojaki/following{/other_user}", "gists_url": "https://api.github.com/users/alexmojaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmojaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmojaki/subscriptions", "organizations_url": "https://api.github.com/users/alexmojaki/orgs", "repos_url": "https://api.github.com/users/alexmojaki/repos", "events_url": "https://api.github.com/users/alexmojaki/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmojaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-10T16:16:56Z", "updated_at": "2019-05-10T20:36:45Z", "closed_at": "2019-05-10T20:36:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Example script:\r\n\r\n```python\r\nimport pysnooper\r\n\r\n@pysnooper.snoop(depth=2)\r\ndef factorial(x):\r\n    if x <= 1:\r\n        return 1\r\n    return factorial(x - 1)\r\n\r\nfactorial(2)\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nStarting var:.. x = 2\r\n18:12:31.470110 call         5 def factorial(x):\r\n18:12:31.470305 line         6     if x <= 1:\r\n18:12:31.470348 line         8     return factorial(x - 1)\r\n    Starting var:.. x = 1\r\n    18:12:31.470411 call         1 SOURCE IS UNAVAILABLE\r\n    18:12:31.470513 line         2 SOURCE IS UNAVAILABLE\r\nStarting var:.. x = 1\r\n18:12:31.470591 call         5 def factorial(x):\r\n18:12:31.470634 line         6     if x <= 1:\r\n18:12:31.470671 line         7         return 1\r\n18:12:31.470706 return       7         return 1\r\nReturn value:.. 1\r\n    18:12:31.470774 return       2 SOURCE IS UNAVAILABLE\r\n    Return value:.. 1\r\n18:12:31.470824 return       8     return factorial(x - 1)\r\nReturn value:.. 1\r\n```\r\n\r\nWhen it tries to read the source it gets an error:\r\n\r\n    [Errno 2] No such file or directory: '<decorator-gen-1>'\r\n\r\nObviously not being able to read the source is bad, but even if it could, it looks like we would get various unwanted lines, as any wrapper function is going to pollute the stack.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/104", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/104/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/104/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/104", "id": 442021998, "node_id": "MDU6SXNzdWU0NDIwMjE5OTg=", "number": 104, "title": "How to display this string completely?", "user": {"login": "kagxin", "id": 16145883, "node_id": "MDQ6VXNlcjE2MTQ1ODgz", "avatar_url": "https://avatars0.githubusercontent.com/u/16145883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kagxin", "html_url": "https://github.com/kagxin", "followers_url": "https://api.github.com/users/kagxin/followers", "following_url": "https://api.github.com/users/kagxin/following{/other_user}", "gists_url": "https://api.github.com/users/kagxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kagxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kagxin/subscriptions", "organizations_url": "https://api.github.com/users/kagxin/orgs", "repos_url": "https://api.github.com/users/kagxin/repos", "events_url": "https://api.github.com/users/kagxin/events{/privacy}", "received_events_url": "https://api.github.com/users/kagxin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-09T02:34:02Z", "updated_at": "2019-05-23T09:25:43Z", "closed_at": "2019-05-09T07:23:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/16145883/57423260-d72ef700-7245-11e9-9b10-b8b6b5146afc.png)\r\nHow to display this string completely?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/101", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/101/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/101/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/101", "id": 441517008, "node_id": "MDU6SXNzdWU0NDE1MTcwMDg=", "number": 101, "title": "IndexError: list index out of range in jupyter", "user": {"login": "strongman1995", "id": 11534710, "node_id": "MDQ6VXNlcjExNTM0NzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/11534710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strongman1995", "html_url": "https://github.com/strongman1995", "followers_url": "https://api.github.com/users/strongman1995/followers", "following_url": "https://api.github.com/users/strongman1995/following{/other_user}", "gists_url": "https://api.github.com/users/strongman1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/strongman1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strongman1995/subscriptions", "organizations_url": "https://api.github.com/users/strongman1995/orgs", "repos_url": "https://api.github.com/users/strongman1995/repos", "events_url": "https://api.github.com/users/strongman1995/events{/privacy}", "received_events_url": "https://api.github.com/users/strongman1995/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-08T02:02:26Z", "updated_at": "2019-05-08T11:03:56Z", "closed_at": "2019-05-08T11:03:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "first I run \r\n```@pysnooper.snoop()\r\ndef number_to_bits(number):\r\n    if number:\r\n        bits = []\r\n        while number:\r\n            number, remainder = divmod(number, 2)\r\n            bits.insert(0, remainder)\r\n        return bits\r\n    else:\r\n        return [0]\r\n\r\nnumber_to_bits(6)\r\n```\r\nIt works correctly.\r\n\r\nThen I execute \r\n```\r\ndef foo():\r\n    lst = []\r\n    for i in range(10):\r\n        lst.append(random.randrange(1, 1000))\r\n\r\n    with pysnooper.snoop():\r\n        lower = min(lst)\r\n        upper = max(lst)\r\n        mid = (lower + upper) / 2\r\n        print(lower, mid, upper)\r\n\r\nfoo()\r\n```\r\n\r\nit turns up some errors:\r\n```\r\n/home/ubuntu/.local/lib/python2.7/site-packages/pysnooper/tracer.pyc in trace(self, frame, event, arg)\r\n    289         now_string = datetime_module.datetime.now().time().isoformat()\r\n    290         line_no = frame.f_lineno\r\n--> 291         source_line = get_source_from_frame(frame)[line_no - 1]\r\n    292 \r\n    293         ### Dealing with misplaced function definition: #######################\r\n\r\nIndexError: list index out of range\r\n```\r\n\r\nIf I only execute the second function foo() after restarting the jupyter kernel, the code works correctly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/100", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/100/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/100/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/100", "id": 440985833, "node_id": "MDU6SXNzdWU0NDA5ODU4MzM=", "number": 100, "title": "AttributeError: __enter__", "user": {"login": "DavidOcea", "id": 28945030, "node_id": "MDQ6VXNlcjI4OTQ1MDMw", "avatar_url": "https://avatars2.githubusercontent.com/u/28945030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidOcea", "html_url": "https://github.com/DavidOcea", "followers_url": "https://api.github.com/users/DavidOcea/followers", "following_url": "https://api.github.com/users/DavidOcea/following{/other_user}", "gists_url": "https://api.github.com/users/DavidOcea/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidOcea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidOcea/subscriptions", "organizations_url": "https://api.github.com/users/DavidOcea/orgs", "repos_url": "https://api.github.com/users/DavidOcea/repos", "events_url": "https://api.github.com/users/DavidOcea/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidOcea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-07T01:38:30Z", "updated_at": "2019-05-07T07:32:56Z", "closed_at": "2019-05-07T07:32:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/98", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/98/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/98/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/98", "id": 440397618, "node_id": "MDU6SXNzdWU0NDAzOTc2MTg=", "number": 98, "title": "Support for Other Languages", "user": {"login": "guanw", "id": 7311035, "node_id": "MDQ6VXNlcjczMTEwMzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7311035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guanw", "html_url": "https://github.com/guanw", "followers_url": "https://api.github.com/users/guanw/followers", "following_url": "https://api.github.com/users/guanw/following{/other_user}", "gists_url": "https://api.github.com/users/guanw/gists{/gist_id}", "starred_url": "https://api.github.com/users/guanw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guanw/subscriptions", "organizations_url": "https://api.github.com/users/guanw/orgs", "repos_url": "https://api.github.com/users/guanw/repos", "events_url": "https://api.github.com/users/guanw/events{/privacy}", "received_events_url": "https://api.github.com/users/guanw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-05T03:58:45Z", "updated_at": "2019-05-05T12:41:06Z", "closed_at": "2019-05-05T12:41:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, folks. This project looks very helpful to people who are new to programming. Just want to say Great job and I'm curious have you thought about doing similar stuff for other languages? In particular I'm thinking of golang. \r\n\r\nI notice golang has some really good metrics and profiling method but in terms of exposing variable valuesi don't think there's any existing tool.(I notice there's `runtime` and `expvar` in golang but not targeting at logging every change as program runs) Let me know your thoughts about it. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/95", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/95/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/95/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/95", "id": 440301738, "node_id": "MDU6SXNzdWU0NDAzMDE3Mzg=", "number": 95, "title": "Exception on overwrite=True seems harsh", "user": {"login": "alexmojaki", "id": 3627481, "node_id": "MDQ6VXNlcjM2Mjc0ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3627481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmojaki", "html_url": "https://github.com/alexmojaki", "followers_url": "https://api.github.com/users/alexmojaki/followers", "following_url": "https://api.github.com/users/alexmojaki/following{/other_user}", "gists_url": "https://api.github.com/users/alexmojaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmojaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmojaki/subscriptions", "organizations_url": "https://api.github.com/users/alexmojaki/orgs", "repos_url": "https://api.github.com/users/alexmojaki/repos", "events_url": "https://api.github.com/users/alexmojaki/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmojaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-04T08:59:41Z", "updated_at": "2019-05-04T09:43:59Z", "closed_at": "2019-05-04T09:43:59Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Talking about this:\r\n\r\n```python\r\n    if truncate is None and overwrite:\r\n        raise Exception(\"`overwrite=True` can only be used when writing \"\r\n                        \"content to file.\")\r\n```\r\n\r\nI agree with this kind of check in more 'serious' code intended for production. It ensures that the user understands what they're doing.\r\n\r\nBut in this case it's harmless and the user will only be annoyed by the exception if, say, they decide to go from writing to a file back to stderr and forget to delete the argument. I don't think anyone is going to think they can overwrite stderr (what would that mean?) and get confused when that doesn't happen. Just document \"this argument only has an effect when output is a file path\".\r\n\r\nSpeaking of which, `overwrite` should probably be documented. Maybe under Advanced Usage.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/94", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/94/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/94/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/94", "id": 440293041, "node_id": "MDU6SXNzdWU0NDAyOTMwNDE=", "number": 94, "title": "Show the shape of numpy array & tensorflow Tensor", "user": {"login": "QAQ-v", "id": 17740058, "node_id": "MDQ6VXNlcjE3NzQwMDU4", "avatar_url": "https://avatars3.githubusercontent.com/u/17740058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QAQ-v", "html_url": "https://github.com/QAQ-v", "followers_url": "https://api.github.com/users/QAQ-v/followers", "following_url": "https://api.github.com/users/QAQ-v/following{/other_user}", "gists_url": "https://api.github.com/users/QAQ-v/gists{/gist_id}", "starred_url": "https://api.github.com/users/QAQ-v/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QAQ-v/subscriptions", "organizations_url": "https://api.github.com/users/QAQ-v/orgs", "repos_url": "https://api.github.com/users/QAQ-v/repos", "events_url": "https://api.github.com/users/QAQ-v/events{/privacy}", "received_events_url": "https://api.github.com/users/QAQ-v/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-04T07:01:39Z", "updated_at": "2019-05-10T10:27:55Z", "closed_at": "2019-05-10T10:27:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any solution to show the variable shape directly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/92", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/92/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/92/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/92", "id": 440193617, "node_id": "MDU6SXNzdWU0NDAxOTM2MTc=", "number": 92, "title": "Feature request: Add the execution time", "user": {"login": "wilfredinni", "id": 23016174, "node_id": "MDQ6VXNlcjIzMDE2MTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/23016174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilfredinni", "html_url": "https://github.com/wilfredinni", "followers_url": "https://api.github.com/users/wilfredinni/followers", "following_url": "https://api.github.com/users/wilfredinni/following{/other_user}", "gists_url": "https://api.github.com/users/wilfredinni/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilfredinni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilfredinni/subscriptions", "organizations_url": "https://api.github.com/users/wilfredinni/orgs", "repos_url": "https://api.github.com/users/wilfredinni/repos", "events_url": "https://api.github.com/users/wilfredinni/events{/privacy}", "received_events_url": "https://api.github.com/users/wilfredinni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-03T19:43:28Z", "updated_at": "2019-05-03T19:46:58Z", "closed_at": "2019-05-03T19:46:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I don't know if this would be useful for someone else besides me. If not, just close it. Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/89", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/89/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/89/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/89", "id": 440176199, "node_id": "MDU6SXNzdWU0NDAxNzYxOTk=", "number": 89, "title": "Repeatedly opening a file is very slow", "user": {"login": "alexmojaki", "id": 3627481, "node_id": "MDQ6VXNlcjM2Mjc0ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3627481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmojaki", "html_url": "https://github.com/alexmojaki", "followers_url": "https://api.github.com/users/alexmojaki/followers", "following_url": "https://api.github.com/users/alexmojaki/following{/other_user}", "gists_url": "https://api.github.com/users/alexmojaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmojaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmojaki/subscriptions", "organizations_url": "https://api.github.com/users/alexmojaki/orgs", "repos_url": "https://api.github.com/users/alexmojaki/repos", "events_url": "https://api.github.com/users/alexmojaki/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmojaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-03T18:53:49Z", "updated_at": "2019-05-03T19:27:40Z", "closed_at": "2019-05-03T19:27:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This:\r\n\r\n```python\r\nfrom littleutils import timer\r\n\r\nimport pysnooper\r\n\r\nf = open('/tmp/snoop2', 'w')\r\n\r\n@pysnooper.snoop(f.write)\r\ndef foo():\r\n    for i in range(10000):\r\n        pass\r\n\r\nwith timer():\r\n    foo()\r\n\r\nf.close()\r\n```\r\n\r\nis about 10 times faster than this:\r\n\r\n```python\r\nfrom littleutils import timer\r\n\r\nimport pysnooper\r\n\r\n@pysnooper.snoop('/tmp/snoop')\r\ndef foo():\r\n    for i in range(10000):\r\n        pass\r\n\r\nwith timer():\r\n    foo()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/88", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/88/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/88/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/88", "id": 440174984, "node_id": "MDU6SXNzdWU0NDAxNzQ5ODQ=", "number": 88, "title": "Feature request: Remove parentheses from exploded variables when possible", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-03T18:50:33Z", "updated_at": "2019-05-11T05:51:03Z", "closed_at": "2019-05-11T05:51:03Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This can be done with a regex for most cases, because mostly people will just use plain variables.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/84", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/84/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/84/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/84", "id": 440113800, "node_id": "MDU6SXNzdWU0NDAxMTM4MDA=", "number": 84, "title": "Improve \"Advanced Usage\" in readme", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-03T16:02:30Z", "updated_at": "2019-05-03T18:44:26Z", "closed_at": "2019-05-03T18:44:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The \"Advanced Usage\" section in the readme is really unclear.\r\n\r\nWe need an example of `watch_explode`, and separately an example of one of the special Variable classes. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/83", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/83/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/83/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/83", "id": 439989843, "node_id": "MDU6SXNzdWU0Mzk5ODk4NDM=", "number": 83, "title": "Suggestion: \"pydoc pysnooper\" should show how to use this", "user": {"login": "andreasvc", "id": 261460, "node_id": "MDQ6VXNlcjI2MTQ2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/261460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreasvc", "html_url": "https://github.com/andreasvc", "followers_url": "https://api.github.com/users/andreasvc/followers", "following_url": "https://api.github.com/users/andreasvc/following{/other_user}", "gists_url": "https://api.github.com/users/andreasvc/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreasvc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreasvc/subscriptions", "organizations_url": "https://api.github.com/users/andreasvc/orgs", "repos_url": "https://api.github.com/users/andreasvc/repos", "events_url": "https://api.github.com/users/andreasvc/events{/privacy}", "received_events_url": "https://api.github.com/users/andreasvc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-03T10:42:34Z", "updated_at": "2019-05-04T06:36:01Z", "closed_at": "2019-05-04T06:36:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/82", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/82/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/82/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/82", "id": 439861586, "node_id": "MDU6SXNzdWU0Mzk4NjE1ODY=", "number": 82, "title": "Support for printing prettier with pandas.DataFrame", "user": {"login": "pchc2005", "id": 4168083, "node_id": "MDQ6VXNlcjQxNjgwODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4168083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pchc2005", "html_url": "https://github.com/pchc2005", "followers_url": "https://api.github.com/users/pchc2005/followers", "following_url": "https://api.github.com/users/pchc2005/following{/other_user}", "gists_url": "https://api.github.com/users/pchc2005/gists{/gist_id}", "starred_url": "https://api.github.com/users/pchc2005/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pchc2005/subscriptions", "organizations_url": "https://api.github.com/users/pchc2005/orgs", "repos_url": "https://api.github.com/users/pchc2005/repos", "events_url": "https://api.github.com/users/pchc2005/events{/privacy}", "received_events_url": "https://api.github.com/users/pchc2005/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-03T02:32:49Z", "updated_at": "2019-05-03T18:41:51Z", "closed_at": "2019-05-03T09:10:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The DataFrame will now be printed like..\r\n```10:25:17.068656 line        14     df_results = pd.DataFrame(list(result))\r\nNew var:....... df_results =      agentCode  ...                             ...311/02/002/E02002201...[2047 rows x 14 columns]\r\n10:25:17.331981 line        15     df_results['agentScore'] = None\r\nModified var:.. df_results =      agentCode  ...  agentScore0          012  ...   002  ...        None[2047 rows x 15 columns]\r\n10:25:17.396386 line        16     df_results['agentMag'] = None\r\nModified var:.. df_results =      agentCode  containCompany  ...  agentScore ....        None      None[2047 rows x 16 columns]\r\n10:25:17.465968 line        17     df_results['customerScore'] = None\r\nModified var:.. df_results =      agentCode  containCompany  containName  ......     None          None[2047 rows x 17 columns]\r\n10:25:17.538187 line        18     df_results['customerMag'] = None\r\nModified var:.. df_results =      agentCode  containCompany  containName  ......       None        None[2047 rows x 18 columns]\r\n10:25:17.614447 line        19     df_results['fullScore'] = None\r\nModified var:.. df_results =      agentCode  containCompany  containName  ......         None      None[2047 rows x 19 columns]\r\n10:25:17.690138 line        20     df_results['fullMag'] = None\r\nModified var:.. df_results =      agentCode  containCompany  containName  ......None       None    None[2047 rows x 20 columns]\r\n10:25:17.769101 line        22     df_results[['agentScore', 'agentMag', 'customerScore', 'customerMag', 'fullScore', 'fullMag']] = df_results['sentimentScore'].apply(lambda x: pd.Series([x['agentScore'], x['agentMag'], x['customerScore'], x['customerMag'], x['fullScore'], x['fullMag']]))\r\nModified var:.. df_results =      agentCode  containCompany  containName  ......1        0.0   9.200000[2047 rows x 20 columns]\r\n10:25:19.847469 line        23     return df_results\r\n10:25:19.924770 return      23     return df_results\r\nReturn value:..      agentCode  containCompany  containName  ......1        0.0   9.200000[2047 rows x 20 columns]\r\n```\r\n\r\nWould be nice if any pretty print feature for lists/iterators...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/80", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/80/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/80/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/80", "id": 439718012, "node_id": "MDU6SXNzdWU0Mzk3MTgwMTI=", "number": 80, "title": "allow arbitrary callables, perhaps io / file objects, Python loggers for writers", "user": {"login": "zzzeek", "id": 128223, "node_id": "MDQ6VXNlcjEyODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzzeek", "html_url": "https://github.com/zzzeek", "followers_url": "https://api.github.com/users/zzzeek/followers", "following_url": "https://api.github.com/users/zzzeek/following{/other_user}", "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions", "organizations_url": "https://api.github.com/users/zzzeek/orgs", "repos_url": "https://api.github.com/users/zzzeek/repos", "events_url": "https://api.github.com/users/zzzeek/events{/privacy}", "received_events_url": "https://api.github.com/users/zzzeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-02T18:06:16Z", "updated_at": "2019-05-03T15:24:07Z", "closed_at": "2019-05-03T15:24:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looking at https://github.com/cool-RR/PySnooper/blob/master/pysnooper/pysnooper.py#L13 I see our choices for \"writier\" are, stdout, path to a filename and something called \"WritableStream\"  .   In our case we have an application that's running under mod_wsgi, so we want to go to a logger.      Since PySnooper's great talent is being able to get deep into a huge stack without any hassle, being able to send the string output anywhere is important.   There are threadsafe loggers as well and things like that which follow built-in conventions like [IO](https://docs.python.org/3/library/io.html), or just a plain Python callable where we can plug anything we want.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/79", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/79/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/79/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/79", "id": 439714724, "node_id": "MDU6SXNzdWU0Mzk3MTQ3MjQ=", "number": 79, "title": "add support for thread identifiers", "user": {"login": "zzzeek", "id": 128223, "node_id": "MDQ6VXNlcjEyODIyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/128223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzzeek", "html_url": "https://github.com/zzzeek", "followers_url": "https://api.github.com/users/zzzeek/followers", "following_url": "https://api.github.com/users/zzzeek/following{/other_user}", "gists_url": "https://api.github.com/users/zzzeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzzeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzzeek/subscriptions", "organizations_url": "https://api.github.com/users/zzzeek/orgs", "repos_url": "https://api.github.com/users/zzzeek/repos", "events_url": "https://api.github.com/users/zzzeek/events{/privacy}", "received_events_url": "https://api.github.com/users/zzzeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-02T17:57:58Z", "updated_at": "2019-05-11T05:51:16Z", "closed_at": "2019-05-11T05:51:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "pysnooper is amazing for the case where we are trying to see where threads are waiting on things.    If I can get the thread identifier in the output as an option, that makes this great.  Here's a hack that makes it work at the moment:\r\n\r\n\r\n```diff\r\ndiff --git a/pysnooper/tracer.py b/pysnooper/tracer.py\r\nindex c4f4407..a5768f2 100644\r\n--- a/pysnooper/tracer.py\r\n+++ b/pysnooper/tracer.py\r\n@@ -4,6 +4,7 @@\r\n import sys\r\n import re\r\n import collections\r\n+import threading\r\n import datetime as datetime_module\r\n import itertools\r\n try:\r\n@@ -226,6 +227,7 @@ class Tracer:\r\n         ### Finished newish and modified variables. ###########################\r\n \r\n         now_string = datetime_module.datetime.now().time().isoformat()\r\n+        tid_string = threading.get_ident()\r\n         line_no = frame.f_lineno\r\n         source_line = get_source_from_frame(frame)[line_no - 1]\r\n \r\n@@ -251,7 +253,7 @@ class Tracer:\r\n         #                                                                     #\r\n         ### Finished dealing with misplaced function definition. ##############\r\n \r\n-        self.write('{indent}{now_string} {event:9} '\r\n+        self.write('{indent}{now_string} {tid_string} {event:9} '\r\n                    '{line_no:4} {source_line}'.format(**locals()))\r\n \r\n         if event == 'return':\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/78", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/78/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/78/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/78", "id": 439577286, "node_id": "MDU6SXNzdWU0Mzk1NzcyODY=", "number": 78, "title": "IndexError: list index out of range in Class method", "user": {"login": "sungreong", "id": 22166391, "node_id": "MDQ6VXNlcjIyMTY2Mzkx", "avatar_url": "https://avatars0.githubusercontent.com/u/22166391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sungreong", "html_url": "https://github.com/sungreong", "followers_url": "https://api.github.com/users/sungreong/followers", "following_url": "https://api.github.com/users/sungreong/following{/other_user}", "gists_url": "https://api.github.com/users/sungreong/gists{/gist_id}", "starred_url": "https://api.github.com/users/sungreong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sungreong/subscriptions", "organizations_url": "https://api.github.com/users/sungreong/orgs", "repos_url": "https://api.github.com/users/sungreong/repos", "events_url": "https://api.github.com/users/sungreong/events{/privacy}", "received_events_url": "https://api.github.com/users/sungreong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-02T12:58:19Z", "updated_at": "2019-05-02T13:05:57Z", "closed_at": "2019-05-02T13:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/22166391/57076742-4c219e80-6d25-11e9-8b2d-4c5b2fb8bca6.png)\r\n![image](https://user-images.githubusercontent.com/22166391/57076768-593e8d80-6d25-11e9-8d9a-50db368aff22.png)\r\n\r\ni have some issue in class method.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/75", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/75/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/75/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/75", "id": 438078399, "node_id": "MDU6SXNzdWU0MzgwNzgzOTk=", "number": 75, "title": "Runtime error (IronPython)", "user": {"login": "runxel", "id": 2277182, "node_id": "MDQ6VXNlcjIyNzcxODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2277182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/runxel", "html_url": "https://github.com/runxel", "followers_url": "https://api.github.com/users/runxel/followers", "following_url": "https://api.github.com/users/runxel/following{/other_user}", "gists_url": "https://api.github.com/users/runxel/gists{/gist_id}", "starred_url": "https://api.github.com/users/runxel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/runxel/subscriptions", "organizations_url": "https://api.github.com/users/runxel/orgs", "repos_url": "https://api.github.com/users/runxel/repos", "events_url": "https://api.github.com/users/runxel/events{/privacy}", "received_events_url": "https://api.github.com/users/runxel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2019-04-28T17:07:53Z", "updated_at": "2019-04-30T17:39:27Z", "closed_at": "2019-04-30T17:36:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following runtime error with the demo code provided in the readme:\r\n```\r\nRuntime error (MissingMemberException): 'NoneType' object has no attribute 'get'\r\nTraceback:\r\n  line 72, in decorate, \"pysnooper.py\"\r\n  line 59, in get_source_from_frame, \"pysnooper\\tracer.py\"\r\n  line 209, in trace, \"pysnooper\\tracer.py\"\r\n  line 2, in number_to_bits, \"<decorator-gen-10>\"\r\n  line 20, in script\r\n```\r\n(line 20 calls the \"number_to_bits\" function)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/73", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/73/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/73/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/73", "id": 438047576, "node_id": "MDU6SXNzdWU0MzgwNDc1NzY=", "number": 73, "title": "Adding to list may not trigger modified var line", "user": {"login": "alexmojaki", "id": 3627481, "node_id": "MDQ6VXNlcjM2Mjc0ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3627481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmojaki", "html_url": "https://github.com/alexmojaki", "followers_url": "https://api.github.com/users/alexmojaki/followers", "following_url": "https://api.github.com/users/alexmojaki/following{/other_user}", "gists_url": "https://api.github.com/users/alexmojaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmojaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmojaki/subscriptions", "organizations_url": "https://api.github.com/users/alexmojaki/orgs", "repos_url": "https://api.github.com/users/alexmojaki/repos", "events_url": "https://api.github.com/users/alexmojaki/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmojaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-28T11:44:55Z", "updated_at": "2019-04-28T12:44:23Z", "closed_at": "2019-04-28T12:28:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Example script:\r\n\r\n```python\r\nimport pysnooper\r\n\r\n@pysnooper.snoop()\r\ndef foo():\r\n    x = []\r\n    for i in range(10):\r\n        x.append(i)\r\n\r\nfoo()\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n13:38:44.029228 call         5 def foo():\r\n13:38:44.029456 line         6     x = []\r\nNew var:....... x = []\r\n13:38:44.029540 line         7     for i in range(10):\r\nNew var:....... i = 0\r\n13:38:44.029621 line         8         x.append(i)\r\nModified var:.. x = [0]\r\n13:38:44.029688 line         7     for i in range(10):\r\nModified var:.. i = 1\r\n13:38:44.029751 line         8         x.append(i)\r\nModified var:.. x = [0, 1]\r\n13:38:44.029816 line         7     for i in range(10):\r\nModified var:.. i = 2\r\n13:38:44.029880 line         8         x.append(i)\r\nModified var:.. x = [0, 1, 2]\r\n13:38:44.029948 line         7     for i in range(10):\r\nModified var:.. i = 3\r\n13:38:44.030015 line         8         x.append(i)\r\nModified var:.. x = [0, 1, 2, 3]\r\n13:38:44.030083 line         7     for i in range(10):\r\nModified var:.. i = 4\r\n13:38:44.030150 line         8         x.append(i)\r\nModified var:.. x = [0, 1, 2, 3, 4]\r\n13:38:44.030220 line         7     for i in range(10):\r\nModified var:.. i = 5\r\n13:38:44.030290 line         8         x.append(i)\r\nModified var:.. x = [0, 1, 2, 3, 4, 5]\r\n13:38:44.030364 line         7     for i in range(10):\r\nModified var:.. i = 6\r\n13:38:44.030436 line         8         x.append(i)\r\nModified var:.. x = [0, 1, 2, 3, 4, 5, ...]\r\n13:38:44.030508 line         7     for i in range(10):\r\nModified var:.. i = 7\r\n13:38:44.030580 line         8         x.append(i)\r\n13:38:44.030638 line         7     for i in range(10):\r\nModified var:.. i = 8\r\n13:38:44.030712 line         8         x.append(i)\r\n13:38:44.030770 line         7     for i in range(10):\r\nModified var:.. i = 9\r\n13:38:44.030843 line         8         x.append(i)\r\n13:38:44.030901 line         7     for i in range(10):\r\n13:38:44.030960 return       7     for i in range(10):\r\n```\r\n\r\nPartway through `x` seems to stop changing and the user might be misled into thinking it has, which could be a serious problem when trying to figure out a bug. Here it's obvious but in a more complex script it may not be.\r\n\r\nOr suppose the user is building up a list of strings to make a document and does this:\r\n\r\n    lines += doc.get_footer()\r\n\r\nwhere `get_footer` is an abstract method and may return an empty list. The user has to debug further to know if anything changed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/70", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/70/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/70/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/70", "id": 438005048, "node_id": "MDU6SXNzdWU0MzgwMDUwNDg=", "number": 70, "title": "\u4e0d\u662f\u5f88\u61c2\u4f60\u4eec\uff0c\u662f\u6ca1\u7528\u8fc7IDE\u4e48", "user": {"login": "robertding", "id": 5229298, "node_id": "MDQ6VXNlcjUyMjkyOTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5229298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertding", "html_url": "https://github.com/robertding", "followers_url": "https://api.github.com/users/robertding/followers", "following_url": "https://api.github.com/users/robertding/following{/other_user}", "gists_url": "https://api.github.com/users/robertding/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertding/subscriptions", "organizations_url": "https://api.github.com/users/robertding/orgs", "repos_url": "https://api.github.com/users/robertding/repos", "events_url": "https://api.github.com/users/robertding/events{/privacy}", "received_events_url": "https://api.github.com/users/robertding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-28T02:43:29Z", "updated_at": "2019-04-28T04:54:34Z", "closed_at": "2019-04-28T04:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/69", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/69/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/69/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/69", "id": 437969260, "node_id": "MDU6SXNzdWU0Mzc5NjkyNjA=", "number": 69, "title": "Allow @snoop without parentheses", "user": {"login": "alexmojaki", "id": 3627481, "node_id": "MDQ6VXNlcjM2Mjc0ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3627481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmojaki", "html_url": "https://github.com/alexmojaki", "followers_url": "https://api.github.com/users/alexmojaki/followers", "following_url": "https://api.github.com/users/alexmojaki/following{/other_user}", "gists_url": "https://api.github.com/users/alexmojaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmojaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmojaki/subscriptions", "organizations_url": "https://api.github.com/users/alexmojaki/orgs", "repos_url": "https://api.github.com/users/alexmojaki/repos", "events_url": "https://api.github.com/users/alexmojaki/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmojaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-27T18:06:35Z", "updated_at": "2019-05-12T04:36:31Z", "closed_at": "2019-05-12T04:36:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I think it would be good to allow:\r\n\r\n```python\r\n@snoop\r\ndef foo():\r\n```\r\n\r\nInstead of requiring\r\n\r\n```python\r\n@snoop()\r\ndef foo():\r\n```\r\n\r\nAny objections? I'm happy to do this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/67", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/67/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/67/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/67", "id": 437939203, "node_id": "MDU6SXNzdWU0Mzc5MzkyMDM=", "number": 67, "title": "Bug when outputting special characters to shell", "user": {"login": "rtphokie", "id": 551185, "node_id": "MDQ6VXNlcjU1MTE4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/551185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtphokie", "html_url": "https://github.com/rtphokie", "followers_url": "https://api.github.com/users/rtphokie/followers", "following_url": "https://api.github.com/users/rtphokie/following{/other_user}", "gists_url": "https://api.github.com/users/rtphokie/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtphokie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtphokie/subscriptions", "organizations_url": "https://api.github.com/users/rtphokie/orgs", "repos_url": "https://api.github.com/users/rtphokie/repos", "events_url": "https://api.github.com/users/rtphokie/events{/privacy}", "received_events_url": "https://api.github.com/users/rtphokie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-04-27T12:34:45Z", "updated_at": "2019-05-02T18:52:22Z", "closed_at": "2019-05-02T18:52:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Noticed this error while snooping on a function that handles Unicode strings, pysnooper seems unhappy about the degree symbol here:\r\n\r\n  File \"weather.py\", line 390, in graphic_single\r\n    'location 1': u\"%d\u00baC / %d\u00baF\" % (round(data[sol]['max_temp']), \r\n  File \"/Users/userid/Library/Python/2.7/lib/python/site-packages/pysnooper/tracer.py\", line 184, in trace\r\n    '{frame.f_lineno:4} {source_line}'.format(**locals()))\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xba' in position 33: ordinal not in range(128)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/63", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/63/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/63/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/63", "id": 437706840, "node_id": "MDU6SXNzdWU0Mzc3MDY4NDA=", "number": 63, "title": "Feature request: Support for jupyterlab", "user": {"login": "jmanz1111", "id": 50023243, "node_id": "MDQ6VXNlcjUwMDIzMjQz", "avatar_url": "https://avatars2.githubusercontent.com/u/50023243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmanz1111", "html_url": "https://github.com/jmanz1111", "followers_url": "https://api.github.com/users/jmanz1111/followers", "following_url": "https://api.github.com/users/jmanz1111/following{/other_user}", "gists_url": "https://api.github.com/users/jmanz1111/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmanz1111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmanz1111/subscriptions", "organizations_url": "https://api.github.com/users/jmanz1111/orgs", "repos_url": "https://api.github.com/users/jmanz1111/repos", "events_url": "https://api.github.com/users/jmanz1111/events{/privacy}", "received_events_url": "https://api.github.com/users/jmanz1111/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-26T14:42:49Z", "updated_at": "2019-04-26T14:57:39Z", "closed_at": "2019-04-26T14:57:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for providing support for Ipython and Jupyter.  Could you also provide support for jupyterlab?  Seems like the same issue is still occurring there:\r\n\r\n[error msg.txt](https://github.com/cool-RR/PySnooper/files/3121749/error.msg.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/61", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/61/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/61/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/61", "id": 437582023, "node_id": "MDU6SXNzdWU0Mzc1ODIwMjM=", "number": 61, "title": "can't get values of my class variables", "user": {"login": "yunzhishusha", "id": 13444737, "node_id": "MDQ6VXNlcjEzNDQ0NzM3", "avatar_url": "https://avatars2.githubusercontent.com/u/13444737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yunzhishusha", "html_url": "https://github.com/yunzhishusha", "followers_url": "https://api.github.com/users/yunzhishusha/followers", "following_url": "https://api.github.com/users/yunzhishusha/following{/other_user}", "gists_url": "https://api.github.com/users/yunzhishusha/gists{/gist_id}", "starred_url": "https://api.github.com/users/yunzhishusha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yunzhishusha/subscriptions", "organizations_url": "https://api.github.com/users/yunzhishusha/orgs", "repos_url": "https://api.github.com/users/yunzhishusha/repos", "events_url": "https://api.github.com/users/yunzhishusha/events{/privacy}", "received_events_url": "https://api.github.com/users/yunzhishusha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-26T09:26:17Z", "updated_at": "2019-04-26T09:50:55Z", "closed_at": "2019-04-26T09:50:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to inspect some variables of my class objects, and I wrote a test script, but didn't get any value of them. Does your tool support such kind of situation? or is there way I can walk around this without using 'print' function?\r\n\r\n\r\n```\r\nimport pysnooper                                                                                                                                                       \r\n\r\nclass A(object):\r\n    def __init__(self):\r\n        self.x = 0 \r\n\r\n    @pysnooper.snoop(variables='self.x')\r\n    def inc(self, input):\r\n        self.x += input\r\n\r\n\r\n\r\n#@pysnooper.snoop(variables=('a.x'))\r\ndef number_to_bits(number):\r\n    a = A() \r\n    if number:\r\n        bits = []\r\n        while number:\r\n            number, remainder = divmod(number, 2)\r\n            a.inc(number)\r\n            a.x \r\n            bits.insert(0, remainder)\r\n        return bits\r\n    else:\r\n        return [0] \r\n\r\nnumber_to_bits(6)\r\n```\r\n\r\nhere is the result:\r\n```\r\nStarting var:.. input = 3\r\nStarting var:.. self = <__main__.A object at 0x7f9944583e90>\r\n17:23:31.341554 call         8     def inc(self, input):\r\n17:23:31.341915 line         9         self.x += input\r\n17:23:31.341989 return       9         self.x += input\r\nReturn value:.. None\r\nStarting var:.. input = 1\r\nStarting var:.. self = <__main__.A object at 0x7f9944583e90>\r\n17:23:31.342112 call         8     def inc(self, input):\r\n17:23:31.342178 line         9         self.x += input\r\n17:23:31.342236 return       9         self.x += input\r\nReturn value:.. None\r\nStarting var:.. input = 0\r\nStarting var:.. self = <__main__.A object at 0x7f9944583e90>\r\n17:23:31.342341 call         8     def inc(self, input):\r\n17:23:31.342402 line         9         self.x += input\r\n17:23:31.342460 return       9         self.x += input\r\nReturn value:.. None\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/59", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/59/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/59/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/59", "id": 437482677, "node_id": "MDU6SXNzdWU0Mzc0ODI2Nzc=", "number": 59, "title": "Feature request: Add `exploding_variables` argument", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-26T03:25:01Z", "updated_at": "2019-05-03T15:47:25Z", "closed_at": "2019-05-03T15:47:25Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Any exploding variable will not only be tracked, but all its attributes will be tracked too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/58", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/58/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/58/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/58", "id": 437479677, "node_id": "MDU6SXNzdWU0Mzc0Nzk2Nzc=", "number": 58, "title": "Feature request: Allow entering just a single variable in` variable` without tuple notation", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-26T03:09:35Z", "updated_at": "2019-04-26T09:50:36Z", "closed_at": "2019-04-26T09:50:36Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/57", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/57/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/57/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/57", "id": 437462065, "node_id": "MDU6SXNzdWU0Mzc0NjIwNjU=", "number": 57, "title": "Feature request: Show type of variable", "user": {"login": "zhangjiabin1010", "id": 18608131, "node_id": "MDQ6VXNlcjE4NjA4MTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/18608131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjiabin1010", "html_url": "https://github.com/zhangjiabin1010", "followers_url": "https://api.github.com/users/zhangjiabin1010/followers", "following_url": "https://api.github.com/users/zhangjiabin1010/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjiabin1010/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjiabin1010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjiabin1010/subscriptions", "organizations_url": "https://api.github.com/users/zhangjiabin1010/orgs", "repos_url": "https://api.github.com/users/zhangjiabin1010/repos", "events_url": "https://api.github.com/users/zhangjiabin1010/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjiabin1010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-26T01:35:39Z", "updated_at": "2019-04-26T03:01:49Z", "closed_at": "2019-04-26T03:01:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks to the author's contribution, there is also a suggestion to output the type of each variable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/49", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/49/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/49/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/49", "id": 437070161, "node_id": "MDU6SXNzdWU0MzcwNzAxNjE=", "number": 49, "title": "add a switch for this decorator", "user": {"login": "836304831", "id": 8056281, "node_id": "MDQ6VXNlcjgwNTYyODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8056281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/836304831", "html_url": "https://github.com/836304831", "followers_url": "https://api.github.com/users/836304831/followers", "following_url": "https://api.github.com/users/836304831/following{/other_user}", "gists_url": "https://api.github.com/users/836304831/gists{/gist_id}", "starred_url": "https://api.github.com/users/836304831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/836304831/subscriptions", "organizations_url": "https://api.github.com/users/836304831/orgs", "repos_url": "https://api.github.com/users/836304831/repos", "events_url": "https://api.github.com/users/836304831/events{/privacy}", "received_events_url": "https://api.github.com/users/836304831/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-25T08:26:20Z", "updated_at": "2019-04-25T08:49:01Z", "closed_at": "2019-04-25T08:49:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/48", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/48/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/48/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/48", "id": 437069924, "node_id": "MDU6SXNzdWU0MzcwNjk5MjQ=", "number": 48, "title": "Dependencies on decorator and six", "user": {"login": "lleontop", "id": 3223314, "node_id": "MDQ6VXNlcjMyMjMzMTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3223314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lleontop", "html_url": "https://github.com/lleontop", "followers_url": "https://api.github.com/users/lleontop/followers", "following_url": "https://api.github.com/users/lleontop/following{/other_user}", "gists_url": "https://api.github.com/users/lleontop/gists{/gist_id}", "starred_url": "https://api.github.com/users/lleontop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lleontop/subscriptions", "organizations_url": "https://api.github.com/users/lleontop/orgs", "repos_url": "https://api.github.com/users/lleontop/repos", "events_url": "https://api.github.com/users/lleontop/events{/privacy}", "received_events_url": "https://api.github.com/users/lleontop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-25T08:25:44Z", "updated_at": "2019-04-25T11:55:34Z", "closed_at": "2019-04-25T11:55:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not much of an issue but just wondering if bundling external dependencies is just temporary or permanent? Isn't it kind of a bad practice to in-source external dependencies in terms of features/bug fixes/compatibility of these external modules and better come from PYPI directly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/44", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/44/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/44/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/44", "id": 436874012, "node_id": "MDU6SXNzdWU0MzY4NzQwMTI=", "number": 44, "title": "Feature request: Support generators", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-24T19:43:50Z", "updated_at": "2019-05-12T04:36:43Z", "closed_at": "2019-05-12T04:36:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "See the conversation on #31 .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/36", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/36/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/36/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/36", "id": 436607559, "node_id": "MDU6SXNzdWU0MzY2MDc1NTk=", "number": 36, "title": "simple for loop example fails", "user": {"login": "iecaser", "id": 22840797, "node_id": "MDQ6VXNlcjIyODQwNzk3", "avatar_url": "https://avatars0.githubusercontent.com/u/22840797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iecaser", "html_url": "https://github.com/iecaser", "followers_url": "https://api.github.com/users/iecaser/followers", "following_url": "https://api.github.com/users/iecaser/following{/other_user}", "gists_url": "https://api.github.com/users/iecaser/gists{/gist_id}", "starred_url": "https://api.github.com/users/iecaser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iecaser/subscriptions", "organizations_url": "https://api.github.com/users/iecaser/orgs", "repos_url": "https://api.github.com/users/iecaser/repos", "events_url": "https://api.github.com/users/iecaser/events{/privacy}", "received_events_url": "https://api.github.com/users/iecaser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-24T10:04:02Z", "updated_at": "2019-04-24T19:38:23Z", "closed_at": "2019-04-24T11:01:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n  @pysnooper.snoop()                                                                                                                            \r\n  def hello():                                                                                                                                  \r\n      for i in range(10):                                                                                                                       \r\n          print(i)                                                                                                                              \r\n```\r\nIn [10]: ---------------------------------------------------------------------------                                                              \r\nIndexError                                Traceback (most recent call last)                                                                       \r\n<ipython-input-10-eed9d610c13b> in <module>                                                                                                       \r\n----> 1 import codecs, os;__pyfile = codecs.open('''/tmp/pybsaClo''', encoding='''utf-8''');__code = __pyfile.read().encode('''utf-8''');__pyfile$\r\n                                                                                                                                                  \r\n/export/zxf/workspace/tmp/testsnoop.py in <module>                                                                                                \r\n     22                                                                                                                                           \r\n     23                                                                                                                                           \r\n---> 24 hello()                                                                                                                                   \r\n                                                                                                                                                  \r\n</home/zxf/anaconda3/lib/python3.6/site-packages/decorator.py:decorator-gen-152> in hello()                                                       \r\n                                                                                                                                                  \r\n~/anaconda3/lib/python3.6/site-packages/PySnooper-0.0.11-py3.6.egg/pysnooper/pysnooper.py in decorate(function, *args, **kwargs)                  \r\n     70                     write=write, variables=variables,                                                                                     \r\n     71                     depth=depth, prefix=prefix):                                                                                          \r\n---> 72             return function(*args, **kwargs)                                                                                              \r\n     73                                                                                                                                           \r\n     74     return decorate                                                                                                                       \r\n                                                                                                                                                  \r\n/export/zxf/workspace/tmp/testsnoop.py in hello()                                                                                                 \r\n     15                                                                                                                                           \r\n     16                                                                                                                                           \r\n---> 17 @pysnooper.snoop()                                                                                                                        \r\n     18 def hello():                                                                                                                              \r\n     19     for i in range(10):                                                                                                                   \r\n                                                                                                                                                  \r\n~/anaconda3/lib/python3.6/site-packages/PySnooper-0.0.11-py3.6.egg/pysnooper/tracer.py in trace(self, frame, event, arg)                          \r\n    182                                                                                                                                           \r\n    183         now_string = datetime_module.datetime.now().time().isoformat()                                                                    \r\n--> 184         source_line = get_source_from_frame(frame)[frame.f_lineno - 1]                                                                    \r\n    185         self.write('{indent}{now_string} {event:9} '                                                                                      \r\n    186                    '{frame.f_lineno:4} {source_line}'.format(**locals()))                                                                 \r\n                                                                                                                                                  \r\nIndexError: list index out of range", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/35", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/35/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/35/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/35", "id": 436584568, "node_id": "MDU6SXNzdWU0MzY1ODQ1Njg=", "number": 35, "title": "collections.ChainMap not support in Python2", "user": {"login": "monhz", "id": 7709535, "node_id": "MDQ6VXNlcjc3MDk1MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7709535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/monhz", "html_url": "https://github.com/monhz", "followers_url": "https://api.github.com/users/monhz/followers", "following_url": "https://api.github.com/users/monhz/following{/other_user}", "gists_url": "https://api.github.com/users/monhz/gists{/gist_id}", "starred_url": "https://api.github.com/users/monhz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/monhz/subscriptions", "organizations_url": "https://api.github.com/users/monhz/orgs", "repos_url": "https://api.github.com/users/monhz/repos", "events_url": "https://api.github.com/users/monhz/events{/privacy}", "received_events_url": "https://api.github.com/users/monhz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-24T09:15:16Z", "updated_at": "2019-04-24T11:27:57Z", "closed_at": "2019-04-24T09:20:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using  Python 2.7.13, when try to use pysnooper.snoop decorator, meet the AttributeError exception, the reason is `collections.ChainMap` is used in tracer.py, which is not supported in Python2.x. \r\n\r\ncode is here:\r\nhttps://github.com/cool-RR/PySnooper/blob/master/pysnooper/tracer.py#L27\r\n\r\nhoping PySnooper is fully compatible with python2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/34", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/34/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/34/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/34", "id": 436478046, "node_id": "MDU6SXNzdWU0MzY0NzgwNDY=", "number": 34, "title": "Feature request: Show the shape of numpy array", "user": {"login": "donghaW", "id": 18192366, "node_id": "MDQ6VXNlcjE4MTkyMzY2", "avatar_url": "https://avatars2.githubusercontent.com/u/18192366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donghaW", "html_url": "https://github.com/donghaW", "followers_url": "https://api.github.com/users/donghaW/followers", "following_url": "https://api.github.com/users/donghaW/following{/other_user}", "gists_url": "https://api.github.com/users/donghaW/gists{/gist_id}", "starred_url": "https://api.github.com/users/donghaW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donghaW/subscriptions", "organizations_url": "https://api.github.com/users/donghaW/orgs", "repos_url": "https://api.github.com/users/donghaW/repos", "events_url": "https://api.github.com/users/donghaW/events{/privacy}", "received_events_url": "https://api.github.com/users/donghaW/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-24T03:19:19Z", "updated_at": "2019-04-24T07:04:53Z", "closed_at": "2019-04-24T07:04:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Array's shape is more import than its' value when we debug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/32", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/32/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/32/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/32", "id": 436281446, "node_id": "MDU6SXNzdWU0MzYyODE0NDY=", "number": 32, "title": "Feature request: Show the return value", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-23T16:29:44Z", "updated_at": "2019-04-24T12:27:42Z", "closed_at": "2019-04-24T12:27:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/28", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/28/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/28/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/28", "id": 436133659, "node_id": "MDU6SXNzdWU0MzYxMzM2NTk=", "number": 28, "title": "Feature request: Print line containing actual function name for \"call\" event", "user": {"login": "czietz", "id": 9830685, "node_id": "MDQ6VXNlcjk4MzA2ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9830685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czietz", "html_url": "https://github.com/czietz", "followers_url": "https://api.github.com/users/czietz/followers", "following_url": "https://api.github.com/users/czietz/following{/other_user}", "gists_url": "https://api.github.com/users/czietz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czietz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czietz/subscriptions", "organizations_url": "https://api.github.com/users/czietz/orgs", "repos_url": "https://api.github.com/users/czietz/repos", "events_url": "https://api.github.com/users/czietz/events{/privacy}", "received_events_url": "https://api.github.com/users/czietz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-23T11:19:30Z", "updated_at": "2019-04-24T09:54:34Z", "closed_at": "2019-04-24T09:54:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When the function decorator `@pysnooper.snoop()` is in a separate line, the \"call\" event will print that line instead of the one containing the actual function name. This can be seen in the example in README.md:\r\nhttps://github.com/cool-RR/PySnooper/blob/master/README.md#example\r\n\r\nWhile this is technically correct (for Python the function definition starts with the decorator), it would make traces easier to read if the actual function name was printed. Maybe a special case could be added for \"call\" events: if the source line reported by Python only contains the decorator, print the next source line instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/26", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/26/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/26/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/26", "id": 436090572, "node_id": "MDU6SXNzdWU0MzYwOTA1NzI=", "number": 26, "title": "pip install fails for missing requirements.txt", "user": {"login": "am-zed", "id": 49406, "node_id": "MDQ6VXNlcjQ5NDA2", "avatar_url": "https://avatars2.githubusercontent.com/u/49406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/am-zed", "html_url": "https://github.com/am-zed", "followers_url": "https://api.github.com/users/am-zed/followers", "following_url": "https://api.github.com/users/am-zed/following{/other_user}", "gists_url": "https://api.github.com/users/am-zed/gists{/gist_id}", "starred_url": "https://api.github.com/users/am-zed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/am-zed/subscriptions", "organizations_url": "https://api.github.com/users/am-zed/orgs", "repos_url": "https://api.github.com/users/am-zed/repos", "events_url": "https://api.github.com/users/am-zed/events{/privacy}", "received_events_url": "https://api.github.com/users/am-zed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-23T09:33:58Z", "updated_at": "2019-04-23T11:34:30Z", "closed_at": "2019-04-23T11:34:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "PIP install fails with missing _requirements.txt_ file:\r\n\r\n``` shell\r\n$ pip install pysnooper\r\nCollecting pysnooper\r\n  Using cached https://files.pythonhosted.org/packages/43/58/e36822363b00e3a7f15621b5b34587e171521c55bc19970cb4754ba08d18/PySnooper-0.0.10.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-blixjg7f/pysnooper/setup.py\", line 16, in <module>\r\n        install_requires=open('requirements.txt', 'r').read().split('\\n'),\r\n    FileNotFoundError: [Errno 2] No such file or directory: 'requirements.txt'\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-blixjg7f/pysnooper/\r\n```\r\n\r\n``` shell\r\n$ wget https://files.pythonhosted.org/packages/43/58/e36822363b00e3a7f15621b5b34587e171521c55bc19970cb4754ba08d18/PySnooper-0.0.10.tar.gz\r\n...\r\n\r\n$ tar tf PySnooper-0.0.10.tar.gz\r\nPySnooper-0.0.10/\r\nPySnooper-0.0.10/PKG-INFO\r\nPySnooper-0.0.10/PySnooper.egg-info/\r\nPySnooper-0.0.10/PySnooper.egg-info/PKG-INFO\r\nPySnooper-0.0.10/PySnooper.egg-info/SOURCES.txt\r\nPySnooper-0.0.10/PySnooper.egg-info/dependency_links.txt\r\nPySnooper-0.0.10/PySnooper.egg-info/requires.txt\r\nPySnooper-0.0.10/PySnooper.egg-info/top_level.txt\r\nPySnooper-0.0.10/README.md\r\nPySnooper-0.0.10/pysnooper/\r\nPySnooper-0.0.10/pysnooper/__init__.py\r\nPySnooper-0.0.10/pysnooper/pycompat.py\r\nPySnooper-0.0.10/pysnooper/pysnooper.py\r\nPySnooper-0.0.10/pysnooper/tracer.py\r\nPySnooper-0.0.10/pysnooper/utils.py\r\nPySnooper-0.0.10/setup.cfg\r\nPySnooper-0.0.10/setup.py\r\nPySnooper-0.0.10/tests/\r\nPySnooper-0.0.10/tests/__init__.py\r\nPySnooper-0.0.10/tests/test_pysnooper.py\r\nPySnooper-0.0.10/tests/utils.py\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/25", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/25/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/25/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/25", "id": 436079668, "node_id": "MDU6SXNzdWU0MzYwNzk2Njg=", "number": 25, "title": "Suggestion: use ncurses to update values in place", "user": {"login": "kootenpv", "id": 2746227, "node_id": "MDQ6VXNlcjI3NDYyMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2746227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kootenpv", "html_url": "https://github.com/kootenpv", "followers_url": "https://api.github.com/users/kootenpv/followers", "following_url": "https://api.github.com/users/kootenpv/following{/other_user}", "gists_url": "https://api.github.com/users/kootenpv/gists{/gist_id}", "starred_url": "https://api.github.com/users/kootenpv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kootenpv/subscriptions", "organizations_url": "https://api.github.com/users/kootenpv/orgs", "repos_url": "https://api.github.com/users/kootenpv/repos", "events_url": "https://api.github.com/users/kootenpv/events{/privacy}", "received_events_url": "https://api.github.com/users/kootenpv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-23T09:09:58Z", "updated_at": "2019-04-23T09:18:36Z", "closed_at": "2019-04-23T09:18:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/24", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/24/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/24/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/24", "id": 436078610, "node_id": "MDU6SXNzdWU0MzYwNzg2MTA=", "number": 24, "title": "Deploy using Travis when pushing a Git tag", "user": {"login": "bittner", "id": 665072, "node_id": "MDQ6VXNlcjY2NTA3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/665072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bittner", "html_url": "https://github.com/bittner", "followers_url": "https://api.github.com/users/bittner/followers", "following_url": "https://api.github.com/users/bittner/following{/other_user}", "gists_url": "https://api.github.com/users/bittner/gists{/gist_id}", "starred_url": "https://api.github.com/users/bittner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bittner/subscriptions", "organizations_url": "https://api.github.com/users/bittner/orgs", "repos_url": "https://api.github.com/users/bittner/repos", "events_url": "https://api.github.com/users/bittner/events{/privacy}", "received_events_url": "https://api.github.com/users/bittner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-23T09:07:35Z", "updated_at": "2019-04-25T07:15:00Z", "closed_at": "2019-04-25T07:15:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Instead of deploying from your local machine we should let Travis do the job of releasing new versions of this package. This has a few significant advantages:\r\n\r\n1. What happens at releases is better documented with an audit trail (CI jobs log).\r\n1. Releasing then enforces tagging on commits that are related to a release.\r\n1. No software needs to be installed on your local machine for pushing a new release.\r\n\r\nSee these projects for working examples: (`deploy` job in `.travis.yml`)\r\n\r\n- https://github.com/vshn/concierge-cli\r\n- https://github.com/bittner/pyclean\r\n- https://github.com/jazzband/django-analytical\r\n- https://github.com/behave/behave-django", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/23", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/23/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/23/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/23", "id": 436074685, "node_id": "MDU6SXNzdWU0MzYwNzQ2ODU=", "number": 23, "title": "Use Tox for running tests", "user": {"login": "bittner", "id": 665072, "node_id": "MDQ6VXNlcjY2NTA3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/665072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bittner", "html_url": "https://github.com/bittner", "followers_url": "https://api.github.com/users/bittner/followers", "following_url": "https://api.github.com/users/bittner/following{/other_user}", "gists_url": "https://api.github.com/users/bittner/gists{/gist_id}", "starred_url": "https://api.github.com/users/bittner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bittner/subscriptions", "organizations_url": "https://api.github.com/users/bittner/orgs", "repos_url": "https://api.github.com/users/bittner/repos", "events_url": "https://api.github.com/users/bittner/events{/privacy}", "received_events_url": "https://api.github.com/users/bittner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1325024127, "node_id": "MDU6TGFiZWwxMzI1MDI0MTI3", "url": "https://api.github.com/repos/cool-RR/PySnooper/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "bittner", "id": 665072, "node_id": "MDQ6VXNlcjY2NTA3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/665072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bittner", "html_url": "https://github.com/bittner", "followers_url": "https://api.github.com/users/bittner/followers", "following_url": "https://api.github.com/users/bittner/following{/other_user}", "gists_url": "https://api.github.com/users/bittner/gists{/gist_id}", "starred_url": "https://api.github.com/users/bittner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bittner/subscriptions", "organizations_url": "https://api.github.com/users/bittner/orgs", "repos_url": "https://api.github.com/users/bittner/repos", "events_url": "https://api.github.com/users/bittner/events{/privacy}", "received_events_url": "https://api.github.com/users/bittner/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bittner", "id": 665072, "node_id": "MDQ6VXNlcjY2NTA3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/665072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bittner", "html_url": "https://github.com/bittner", "followers_url": "https://api.github.com/users/bittner/followers", "following_url": "https://api.github.com/users/bittner/following{/other_user}", "gists_url": "https://api.github.com/users/bittner/gists{/gist_id}", "starred_url": "https://api.github.com/users/bittner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bittner/subscriptions", "organizations_url": "https://api.github.com/users/bittner/orgs", "repos_url": "https://api.github.com/users/bittner/repos", "events_url": "https://api.github.com/users/bittner/events{/privacy}", "received_events_url": "https://api.github.com/users/bittner/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-04-23T08:58:38Z", "updated_at": "2019-04-24T09:15:11Z", "closed_at": "2019-04-24T09:15:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We should add a Tox configuration (`tox.ini`) to allow running all tests locally, and use `tox-travis` in the CI configuration to make the expansion automatic.\r\n\r\nHere are a few examples to see how that's meant to work:\r\n\r\n- https://github.com/vshn/concierge-cli\r\n- https://github.com/bittner/pyclean\r\n- https://github.com/mdgart/sentrylogs\r\n- https://github.com/jazzband/django-analytical\r\n- https://github.com/behave/behave-django\r\n\r\nNote that this also allows to encapsulate the test requirements into `tox.ini` (and subsequently can make the test requirements file unnecessary :+1:).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/21", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/21/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/21/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/21", "id": 436056948, "node_id": "MDU6SXNzdWU0MzYwNTY5NDg=", "number": 21, "title": "Show variables in predictable order, possibly sorted dict (but no dependency)", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-23T08:17:05Z", "updated_at": "2019-04-27T07:36:13Z", "closed_at": "2019-04-27T07:36:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/20", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/20/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/20/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/20", "id": 436036598, "node_id": "MDU6SXNzdWU0MzYwMzY1OTg=", "number": 20, "title": "pysnooper/tracer.py\", line 75, in get_source_from_frame     raise NotImplementedError", "user": {"login": "ouening", "id": 15122811, "node_id": "MDQ6VXNlcjE1MTIyODEx", "avatar_url": "https://avatars2.githubusercontent.com/u/15122811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouening", "html_url": "https://github.com/ouening", "followers_url": "https://api.github.com/users/ouening/followers", "following_url": "https://api.github.com/users/ouening/following{/other_user}", "gists_url": "https://api.github.com/users/ouening/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouening/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouening/subscriptions", "organizations_url": "https://api.github.com/users/ouening/orgs", "repos_url": "https://api.github.com/users/ouening/repos", "events_url": "https://api.github.com/users/ouening/events{/privacy}", "received_events_url": "https://api.github.com/users/ouening/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2019-04-23T07:21:49Z", "updated_at": "2019-04-25T06:25:11Z", "closed_at": "2019-04-24T11:00:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I ran a simple script:\r\n\r\n```\r\nimport pysnooper\r\nimport numpy as np\r\n\r\n@pysnooper.snoop()\r\ndef multi_matmul(times):\r\n    x = np.random.rand(2,2)\r\n    w = np.random.rand(2,2)\r\n    \r\n    for i in range(times):\r\n        x = np.matmul(x,w)\r\n    return x\r\n\r\nmulti_matmul(3)\r\n```\r\n\r\n\r\nThe error happened:\r\n\r\n```\r\nStarting var:.. times = 3\r\nTraceback (most recent call last):\r\n  File \"<tmp 1>\", line 14, in <module>\r\n    multi_matmul(3)\r\n  File \"</usr/local/lib/python3.6/dist-packages/decorator.py:decorator-gen-121>\", line 2, in multi_matmul\r\n  File \"/usr/local/lib/python3.6/dist-packages/pysnooper/pysnooper.py\", line 72, in decorate\r\n    return function(*args, **kwargs)\r\n  File \"<tmp 1>\", line 4, in multi_matmul\r\n    @pysnooper.snoop()\r\n  File \"/usr/local/lib/python3.6/dist-packages/pysnooper/tracer.py\", line 182, in trace\r\n    source_line = get_source_from_frame(frame)[frame.f_lineno - 1]\r\n  File \"/usr/local/lib/python3.6/dist-packages/pysnooper/tracer.py\", line 75, in get_source_from_frame\r\n    raise NotImplementedError\r\nNotImplementedError\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/19", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/19/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/19/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/19", "id": 436029528, "node_id": "MDU6SXNzdWU0MzYwMjk1Mjg=", "number": 19, "title": "Compatibility with awsebcli", "user": {"login": "lodb", "id": 17568993, "node_id": "MDQ6VXNlcjE3NTY4OTkz", "avatar_url": "https://avatars0.githubusercontent.com/u/17568993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lodb", "html_url": "https://github.com/lodb", "followers_url": "https://api.github.com/users/lodb/followers", "following_url": "https://api.github.com/users/lodb/following{/other_user}", "gists_url": "https://api.github.com/users/lodb/gists{/gist_id}", "starred_url": "https://api.github.com/users/lodb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lodb/subscriptions", "organizations_url": "https://api.github.com/users/lodb/orgs", "repos_url": "https://api.github.com/users/lodb/repos", "events_url": "https://api.github.com/users/lodb/events{/privacy}", "received_events_url": "https://api.github.com/users/lodb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-23T07:01:50Z", "updated_at": "2019-04-23T07:05:41Z", "closed_at": "2019-04-23T07:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are requirement incompatibilities with the `awsebcli` package from amazon. I'm not sure if this has an easy fix or pysnooper _really_ needs the specified versions of `future` and `six`:\r\n\r\n`awsebcli 3.15.0 has requirement future<0.17.0,>=0.16.0, but you'll have future 0.17.1 which is incompatible.`\r\n`awsebcli 3.15.0 has requirement six<1.12.0,>=1.11.0, but you'll have six 1.12.0 which is incompatible.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/17", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/17/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/17/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/17", "id": 436018040, "node_id": "MDU6SXNzdWU0MzYwMTgwNDA=", "number": 17, "title": "Adding optional timing information", "user": {"login": "deJQK", "id": 25779973, "node_id": "MDQ6VXNlcjI1Nzc5OTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/25779973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deJQK", "html_url": "https://github.com/deJQK", "followers_url": "https://api.github.com/users/deJQK/followers", "following_url": "https://api.github.com/users/deJQK/following{/other_user}", "gists_url": "https://api.github.com/users/deJQK/gists{/gist_id}", "starred_url": "https://api.github.com/users/deJQK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deJQK/subscriptions", "organizations_url": "https://api.github.com/users/deJQK/orgs", "repos_url": "https://api.github.com/users/deJQK/repos", "events_url": "https://api.github.com/users/deJQK/events{/privacy}", "received_events_url": "https://api.github.com/users/deJQK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-23T06:23:24Z", "updated_at": "2019-04-23T07:09:17Z", "closed_at": "2019-04-23T07:09:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is that possible to add timing information for each step? Maybe use some timing wrapper?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/16", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/16/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/16/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/16", "id": 436017876, "node_id": "MDU6SXNzdWU0MzYwMTc4NzY=", "number": 16, "title": "Feature request: Support Jupyter notebooks and IPython", "user": {"login": "zhouyanasd", "id": 20635485, "node_id": "MDQ6VXNlcjIwNjM1NDg1", "avatar_url": "https://avatars3.githubusercontent.com/u/20635485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhouyanasd", "html_url": "https://github.com/zhouyanasd", "followers_url": "https://api.github.com/users/zhouyanasd/followers", "following_url": "https://api.github.com/users/zhouyanasd/following{/other_user}", "gists_url": "https://api.github.com/users/zhouyanasd/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhouyanasd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhouyanasd/subscriptions", "organizations_url": "https://api.github.com/users/zhouyanasd/orgs", "repos_url": "https://api.github.com/users/zhouyanasd/repos", "events_url": "https://api.github.com/users/zhouyanasd/events{/privacy}", "received_events_url": "https://api.github.com/users/zhouyanasd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-04-23T06:22:48Z", "updated_at": "2019-04-24T19:36:58Z", "closed_at": "2019-04-24T19:36:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it can not support jupyter right now, but I hope it could be done lately.\r\n```\r\nNotImplementedError                       Traceback (most recent call last)\r\n<ipython-input-6-48087d91d6cf> in <module>()\r\n      5     return number\r\n      6 \r\n----> 7 number_to_bits(6)\r\n\r\n<decorator-gen-164> in number_to_bits(number)\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pysnooper\\pysnooper.py in decorate(function, *args, **kwargs)\r\n     70                     write=write, variables=variables,\r\n     71                     depth=depth, prefix=prefix):\r\n---> 72             return function(*args, **kwargs)\r\n     73 \r\n     74     return decorate\r\n\r\n<ipython-input-6-48087d91d6cf> in number_to_bits(number)\r\n      1 import pysnooper\r\n      2 \r\n----> 3 @pysnooper.snoop('file.log')\r\n      4 def number_to_bits(number):\r\n      5     return number\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pysnooper\\tracer.py in trace(self, frame, event, arg)\r\n    180 \r\n    181         now_string = datetime_module.datetime.now().time().isoformat()\r\n--> 182         source_line = get_source_from_frame(frame)[frame.f_lineno - 1]\r\n    183         self.write('{indent}{now_string} {event:9} '\r\n    184                    '{frame.f_lineno:4} {source_line}'.format(**locals()))\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pysnooper\\tracer.py in get_source_from_frame(frame)\r\n     73             pass\r\n     74     if source is None:\r\n---> 75         raise NotImplementedError\r\n     76 \r\n     77     # If we just read the source from a file, or if the loader did not\r\n\r\nNotImplementedError: \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/15", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/15/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/15/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/15", "id": 435978509, "node_id": "MDU6SXNzdWU0MzU5Nzg1MDk=", "number": 15, "title": "Comparison with python-hunter", "user": {"login": "chrahunt", "id": 2312275, "node_id": "MDQ6VXNlcjIzMTIyNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2312275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrahunt", "html_url": "https://github.com/chrahunt", "followers_url": "https://api.github.com/users/chrahunt/followers", "following_url": "https://api.github.com/users/chrahunt/following{/other_user}", "gists_url": "https://api.github.com/users/chrahunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrahunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrahunt/subscriptions", "organizations_url": "https://api.github.com/users/chrahunt/orgs", "repos_url": "https://api.github.com/users/chrahunt/repos", "events_url": "https://api.github.com/users/chrahunt/events{/privacy}", "received_events_url": "https://api.github.com/users/chrahunt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-23T03:11:31Z", "updated_at": "2019-04-23T07:08:42Z", "closed_at": "2019-04-23T07:08:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "This has a lot of overlapping functionality with [python-hunter](https://github.com/ionelmc/python-hunter). Maybe the efforts of both projects can be combined?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/14", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/14/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/14/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/14", "id": 435917277, "node_id": "MDU6SXNzdWU0MzU5MTcyNzc=", "number": 14, "title": "Does not reliably show local variables", "user": {"login": "Vaelek", "id": 293765, "node_id": "MDQ6VXNlcjI5Mzc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/293765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vaelek", "html_url": "https://github.com/Vaelek", "followers_url": "https://api.github.com/users/Vaelek/followers", "following_url": "https://api.github.com/users/Vaelek/following{/other_user}", "gists_url": "https://api.github.com/users/Vaelek/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vaelek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vaelek/subscriptions", "organizations_url": "https://api.github.com/users/Vaelek/orgs", "repos_url": "https://api.github.com/users/Vaelek/repos", "events_url": "https://api.github.com/users/Vaelek/events{/privacy}", "received_events_url": "https://api.github.com/users/Vaelek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-22T22:24:57Z", "updated_at": "2019-04-23T08:13:09Z", "closed_at": "2019-04-23T07:15:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n@pysnooper.snoop()\r\ndef go():\r\n    test0 = 1\r\n\r\n    test1 = {\r\n            'test2':'val2',\r\n            'test3':'val3'\r\n        }\r\n\r\n    test2 = {\r\n        'test1': {\r\n            'test2':'val2',\r\n            'test3':'val3'\r\n        }\r\n    }\r\n\r\n    test3 = {\r\n        'test1': {\r\n            'test2':'val2',\r\n            'test3':'val3'\r\n        },\r\n        'test4': 'val4'\r\n    }\r\n\r\n    test4 = {\r\n        'test1': {\r\n            'test2thisisalongervariablename':'val2thisisalongervalue',\r\n            'test3':'val3'\r\n        },\r\n        'test4': 'val4'\r\n    }\r\n```\r\n\r\nresults in\r\n\r\n```\r\n17:19:37.240949 call         4 @pysnooper.snoop()\r\n17:19:37.241917 line         6     test0 = 1\r\nNew var:....... test0 = 1\r\n17:19:37.241917 line         9             'test2':'val2',\r\n17:19:37.241917 line        10             'test3':'val3'\r\nNew var:....... test1 = {'test2': 'val2', 'test3': 'val3'}\r\n17:19:37.241917 line        15         'test1': {\r\n17:19:37.241917 line        16             'test2':'val2',\r\n17:19:37.241917 line        17             'test3':'val3'\r\nNew var:....... test2 = {'test1': {'test2': 'val2', 'test3': 'val3'}}\r\n17:19:37.242957 line        24             'test2':'val2',\r\n17:19:37.242957 line        25             'test3':'val3'\r\n17:19:37.242957 line        27         'test4': 'val4'\r\nNew var:....... test3 = {'test1': {'test2': 'val2', 'test3': 'val3'}, 'test4': 'val4'}\r\n17:19:37.242957 line        32             'test2thisisalongervariablename':'val2thisisalongervalue',\r\n17:19:37.242957 line        33             'test3':'val3'\r\n17:19:37.242957 line        35         'test4': 'val4'\r\n17:19:37.242957 return      35         'test4': 'val4'\r\n```\r\n\r\nWhat determines not to acknowledge the assignment of test4, and is there any way to override it? This behavior basically renders this useless to me unfortunately.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/11", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/11/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/11/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/11", "id": 435816699, "node_id": "MDU6SXNzdWU0MzU4MTY2OTk=", "number": 11, "title": "\"return\" is misleading", "user": {"login": "rtphokie", "id": 551185, "node_id": "MDQ6VXNlcjU1MTE4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/551185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtphokie", "html_url": "https://github.com/rtphokie", "followers_url": "https://api.github.com/users/rtphokie/followers", "following_url": "https://api.github.com/users/rtphokie/following{/other_user}", "gists_url": "https://api.github.com/users/rtphokie/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtphokie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtphokie/subscriptions", "organizations_url": "https://api.github.com/users/rtphokie/orgs", "repos_url": "https://api.github.com/users/rtphokie/repos", "events_url": "https://api.github.com/users/rtphokie/events{/privacy}", "received_events_url": "https://api.github.com/users/rtphokie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-22T17:48:29Z", "updated_at": "2019-04-22T18:18:55Z", "closed_at": "2019-04-22T18:18:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The last line of the output is labeled \"return\" which probably refers to exiting the function, but implies a value is being returned by the function even when no return line is explicitly included in the function.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/10", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/10/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/10/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/10", "id": 435809223, "node_id": "MDU6SXNzdWU0MzU4MDkyMjM=", "number": 10, "title": "Feature request: support recursion, including with depth argument", "user": {"login": "zengxiaofei", "id": 22426230, "node_id": "MDQ6VXNlcjIyNDI2MjMw", "avatar_url": "https://avatars2.githubusercontent.com/u/22426230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zengxiaofei", "html_url": "https://github.com/zengxiaofei", "followers_url": "https://api.github.com/users/zengxiaofei/followers", "following_url": "https://api.github.com/users/zengxiaofei/following{/other_user}", "gists_url": "https://api.github.com/users/zengxiaofei/gists{/gist_id}", "starred_url": "https://api.github.com/users/zengxiaofei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zengxiaofei/subscriptions", "organizations_url": "https://api.github.com/users/zengxiaofei/orgs", "repos_url": "https://api.github.com/users/zengxiaofei/repos", "events_url": "https://api.github.com/users/zengxiaofei/events{/privacy}", "received_events_url": "https://api.github.com/users/zengxiaofei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-22T17:27:08Z", "updated_at": "2019-05-11T05:51:50Z", "closed_at": "2019-05-11T05:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example:\r\n\r\n```Python\r\nfrom __future__ import print_function\r\nimport pysnooper\r\n\r\n@pysnooper.snoop()\r\ndef fact(n):\r\n    if n == 1:\r\n        return 1\r\n    return n * fact(n - 1)\r\n\r\ndef main():\r\n    print(fact(3))\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nOutput:\r\n\r\n```Bash\r\n$ python mytest2.py \r\nStarting var:.. n = 3\r\n01:22:43.094346 call         4 @pysnooper.snoop()\r\n01:22:43.095271 line         6     if n == 1:\r\n01:22:43.095435 line         8     return n * fact(n - 1)\r\nStarting var:.. n = 2\r\n01:22:43.095591 call         4 @pysnooper.snoop()\r\n01:22:43.095664 line         6     if n == 1:\r\n01:22:43.095722 line         8     return n * fact(n - 1)\r\nStarting var:.. n = 1\r\n01:22:43.095830 call         4 @pysnooper.snoop()\r\n01:22:43.095884 line         6     if n == 1:\r\n01:22:43.095941 line         7         return 1\r\n01:22:43.096022 return       7         return 1\r\n01:22:43.096110 return       8     return n * fact(n - 1)\r\n01:22:43.096175 return       8     return n * fact(n - 1)\r\n6\r\n```\r\n\r\nWhen setting `depth=2`, it even raised an error:\r\n\r\n```Bash\r\nStarting var:.. n = 3\r\n01:26:47.652684 call         4 @pysnooper.snoop(depth=2)\r\n01:26:47.653612 line         6     if n == 1:\r\n01:26:47.653684 line         8     return n * fact(n - 1)\r\n    Starting var:.. n = 2\r\nTraceback (most recent call last):\r\n  File \"mytest2.py\", line 14, in <module>\r\n    main()\r\n  File \"mytest2.py\", line 11, in main\r\n    print(fact(3))\r\n  File \"</home/xiaofei/.local/lib/python2.7/site-packages/decorator.pyc:decorator-gen-2>\", line 2, in fact\r\n  File \"/home/xiaofei/.local/lib/python2.7/site-packages/pysnooper/pysnooper.py\", line 72, in decorate\r\n    return function(*args, **kwargs)\r\n  File \"mytest2.py\", line 8, in fact\r\n    return n * fact(n - 1)\r\n  File \"</home/xiaofei/.local/lib/python2.7/site-packages/decorator.pyc:decorator-gen-2>\", line 1, in fact\r\n  File \"/home/xiaofei/.local/lib/python2.7/site-packages/pysnooper/tracer.py\", line 182, in trace\r\n    source_line = get_source_from_frame(frame)[frame.f_lineno - 1]\r\n  File \"/home/xiaofei/.local/lib/python2.7/site-packages/pysnooper/tracer.py\", line 75, in get_source_from_frame\r\n    raise NotImplementedError\r\nNotImplementedError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/9", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/9/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/9/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/9", "id": 435797045, "node_id": "MDU6SXNzdWU0MzU3OTcwNDU=", "number": 9, "title": "Feature request: Support generators", "user": {"login": "zengxiaofei", "id": 22426230, "node_id": "MDQ6VXNlcjIyNDI2MjMw", "avatar_url": "https://avatars2.githubusercontent.com/u/22426230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zengxiaofei", "html_url": "https://github.com/zengxiaofei", "followers_url": "https://api.github.com/users/zengxiaofei/followers", "following_url": "https://api.github.com/users/zengxiaofei/following{/other_user}", "gists_url": "https://api.github.com/users/zengxiaofei/gists{/gist_id}", "starred_url": "https://api.github.com/users/zengxiaofei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zengxiaofei/subscriptions", "organizations_url": "https://api.github.com/users/zengxiaofei/orgs", "repos_url": "https://api.github.com/users/zengxiaofei/repos", "events_url": "https://api.github.com/users/zengxiaofei/events{/privacy}", "received_events_url": "https://api.github.com/users/zengxiaofei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-22T16:50:51Z", "updated_at": "2019-05-02T18:39:56Z", "closed_at": "2019-05-02T18:39:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example:\r\n\r\n```Python\r\nfrom __future__ import print_function\r\nimport pysnooper\r\n\r\n@pysnooper.snoop()\r\ndef fib(max_n):\r\n    a, b = 0, 1\r\n    while a < max_n:\r\n        yield a\r\n        a, b = b, a + b\r\n\r\ndef main():\r\n    for n in fib(4):\r\n        print(n)\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nOutput:\r\n\r\n```Bash\r\n$ python mytest.py \r\n0\r\n1\r\n1\r\n2\r\n3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/7", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/7/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/7/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/7", "id": 435725303, "node_id": "MDU6SXNzdWU0MzU3MjUzMDM=", "number": 7, "title": "show object attributes, not just local variables", "user": {"login": "rtphokie", "id": 551185, "node_id": "MDQ6VXNlcjU1MTE4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/551185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtphokie", "html_url": "https://github.com/rtphokie", "followers_url": "https://api.github.com/users/rtphokie/followers", "following_url": "https://api.github.com/users/rtphokie/following{/other_user}", "gists_url": "https://api.github.com/users/rtphokie/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtphokie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtphokie/subscriptions", "organizations_url": "https://api.github.com/users/rtphokie/orgs", "repos_url": "https://api.github.com/users/rtphokie/repos", "events_url": "https://api.github.com/users/rtphokie/events{/privacy}", "received_events_url": "https://api.github.com/users/rtphokie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-22T13:23:25Z", "updated_at": "2019-04-23T07:17:27Z", "closed_at": "2019-04-23T07:17:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider this code:\r\n\r\n```\r\nclass Foo():\r\n    \r\n    def __init__(self):\r\n        self.a = 1\r\n        self.b = 2\r\n        self.c = None\r\n        \r\n    @pysnooper.snoop()\r\n    def myfunc(self):\r\n        localvar = 5\r\n        localvar += 1\r\n        self.c = self.b + self.a\r\n```\r\n\r\n\r\npysnooper's output when calling myfunc:\r\n\r\n```\r\nStarting var:.. self = <snooptest.Foo instance at 0x1052c5b90>\r\n08:50:38.552499 call        16     @pysnooper.snoop()\r\n08:50:38.553309 line        18         localvar = 5\r\nNew var:....... localvar = 5\r\n08:50:38.553382 line        19         localvar += 1\r\nModified var:.. localvar = 6\r\n08:50:38.553457 line        20         self.c = self.b + self.a\r\n08:50:38.553560 return      20         self.c = self.b + self.a\r\n```\r\nThe values of self.a, self.b, and self.c are not shown by pysnooper but are the primary purpose of this method.  parameters on self should also be shown as starting values in methods decorated by pysnooper", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/6", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/6/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/6/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/6", "id": 435724641, "node_id": "MDU6SXNzdWU0MzU3MjQ2NDE=", "number": 6, "title": "Feature request: Include filenames when depth >= 2", "user": {"login": "rtphokie", "id": 551185, "node_id": "MDQ6VXNlcjU1MTE4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/551185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtphokie", "html_url": "https://github.com/rtphokie", "followers_url": "https://api.github.com/users/rtphokie/followers", "following_url": "https://api.github.com/users/rtphokie/following{/other_user}", "gists_url": "https://api.github.com/users/rtphokie/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtphokie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtphokie/subscriptions", "organizations_url": "https://api.github.com/users/rtphokie/orgs", "repos_url": "https://api.github.com/users/rtphokie/repos", "events_url": "https://api.github.com/users/rtphokie/events{/privacy}", "received_events_url": "https://api.github.com/users/rtphokie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-04-22T13:21:31Z", "updated_at": "2019-09-13T17:27:13Z", "closed_at": "2019-09-13T17:27:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When snooping to a depth greater than 1 that brings execution into a function that lives in another file, pysnooper should output that filename.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/5", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/5/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/5/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/5", "id": 435721567, "node_id": "MDU6SXNzdWU0MzU3MjE1Njc=", "number": 5, "title": "Ability to overwrite to log file instead of only appending", "user": {"login": "Kandeel4411", "id": 40201968, "node_id": "MDQ6VXNlcjQwMjAxOTY4", "avatar_url": "https://avatars3.githubusercontent.com/u/40201968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kandeel4411", "html_url": "https://github.com/Kandeel4411", "followers_url": "https://api.github.com/users/Kandeel4411/followers", "following_url": "https://api.github.com/users/Kandeel4411/following{/other_user}", "gists_url": "https://api.github.com/users/Kandeel4411/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kandeel4411/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kandeel4411/subscriptions", "organizations_url": "https://api.github.com/users/Kandeel4411/orgs", "repos_url": "https://api.github.com/users/Kandeel4411/repos", "events_url": "https://api.github.com/users/Kandeel4411/events{/privacy}", "received_events_url": "https://api.github.com/users/Kandeel4411/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-04-22T13:11:46Z", "updated_at": "2019-04-27T07:36:36Z", "closed_at": "2019-04-27T07:36:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would  be nice if we could overwrite existing log files", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cool-RR/PySnooper/issues/2", "repository_url": "https://api.github.com/repos/cool-RR/PySnooper", "labels_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/2/comments", "events_url": "https://api.github.com/repos/cool-RR/PySnooper/issues/2/events", "html_url": "https://github.com/cool-RR/PySnooper/issues/2", "id": 435704523, "node_id": "MDU6SXNzdWU0MzU3MDQ1MjM=", "number": 2, "title": "NameError: global name 'output_path' is not defined", "user": {"login": "azoellner", "id": 15922832, "node_id": "MDQ6VXNlcjE1OTIyODMy", "avatar_url": "https://avatars1.githubusercontent.com/u/15922832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azoellner", "html_url": "https://github.com/azoellner", "followers_url": "https://api.github.com/users/azoellner/followers", "following_url": "https://api.github.com/users/azoellner/following{/other_user}", "gists_url": "https://api.github.com/users/azoellner/gists{/gist_id}", "starred_url": "https://api.github.com/users/azoellner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azoellner/subscriptions", "organizations_url": "https://api.github.com/users/azoellner/orgs", "repos_url": "https://api.github.com/users/azoellner/repos", "events_url": "https://api.github.com/users/azoellner/events{/privacy}", "received_events_url": "https://api.github.com/users/azoellner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-22T12:05:57Z", "updated_at": "2019-04-22T12:11:17Z", "closed_at": "2019-04-22T12:10:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/cool-RR/PySnooper/blob/6e3d797be3fa0a746fb5b1b7c7fea78eb926c208/pysnooper/pysnooper.py#L26\r\n\r\nshould probably read\r\n```\r\nwith open(output, 'a') as output_file:\r\n```", "performed_via_github_app": null, "score": 1.0}]}