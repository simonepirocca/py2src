{"total_count": 747, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1351", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1351/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1351/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1351/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1351", "id": 682570627, "node_id": "MDU6SXNzdWU2ODI1NzA2Mjc=", "number": 1351, "title": "Async connection ignores url_prefix parameter", "user": {"login": "tjeerdbakker38", "id": 16665188, "node_id": "MDQ6VXNlcjE2NjY1MTg4", "avatar_url": "https://avatars1.githubusercontent.com/u/16665188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjeerdbakker38", "html_url": "https://github.com/tjeerdbakker38", "followers_url": "https://api.github.com/users/tjeerdbakker38/followers", "following_url": "https://api.github.com/users/tjeerdbakker38/following{/other_user}", "gists_url": "https://api.github.com/users/tjeerdbakker38/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjeerdbakker38/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjeerdbakker38/subscriptions", "organizations_url": "https://api.github.com/users/tjeerdbakker38/orgs", "repos_url": "https://api.github.com/users/tjeerdbakker38/repos", "events_url": "https://api.github.com/users/tjeerdbakker38/events{/privacy}", "received_events_url": "https://api.github.com/users/tjeerdbakker38/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-20T09:37:48Z", "updated_at": "2020-08-20T19:11:40Z", "closed_at": "2020-08-20T17:29:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.8.1\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**:  7.8.1\r\n\r\nPlease make sure the major version matches the Elasticsearch server you are running.\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nI'm using AsyncElasticsearch. If I try to query a server with a url_prefix in the address, I get a 404 Not Found in the logs. The logs also mention the URL that the library tries to connect to, and the url prefix is missing from the URL. Expected behaviour is of course a reply to the query.\r\n\r\n**Steps to reproduce**:\r\n\r\n```\r\nclient = AsyncElasticsearch('https://es.example.com/prefix')\r\nresp = await client.search(index='index', body={ 'query': { 'match': { 'field': 'value' } } } )\r\n\r\n```\r\nThe issue seems to be in elasticsearch/_async/http_aiohttp.py, in perform_request(). It builds a URL using yarl without taking the url_prefix into account. This is still the case in the master branch\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1350", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1350/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1350/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1350/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1350", "id": 682445301, "node_id": "MDU6SXNzdWU2ODI0NDUzMDE=", "number": 1350, "title": "AttributeError: module 'elasticsearch.helpers' has no attribute 'async_bulk' in version 7.9.0", "user": {"login": "jabonte", "id": 57446260, "node_id": "MDQ6VXNlcjU3NDQ2MjYw", "avatar_url": "https://avatars2.githubusercontent.com/u/57446260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jabonte", "html_url": "https://github.com/jabonte", "followers_url": "https://api.github.com/users/jabonte/followers", "following_url": "https://api.github.com/users/jabonte/following{/other_user}", "gists_url": "https://api.github.com/users/jabonte/gists{/gist_id}", "starred_url": "https://api.github.com/users/jabonte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jabonte/subscriptions", "organizations_url": "https://api.github.com/users/jabonte/orgs", "repos_url": "https://api.github.com/users/jabonte/repos", "events_url": "https://api.github.com/users/jabonte/events{/privacy}", "received_events_url": "https://api.github.com/users/jabonte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-20T06:13:58Z", "updated_at": "2020-08-21T10:13:55Z", "closed_at": "2020-08-20T19:03:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ran into the following problem after upgrading to version 7.9.0\r\nAttributeError: module 'elasticsearch.helpers' has no attribute 'async_bulk'\r\n\r\n\r\nInstalled older version to verify:\r\npip3 install --user elasticsearch[async]==7.8.1\r\nCollecting elasticsearch[async]==7.8.1\r\n  Using cached https://files.pythonhosted.org/packages/76/7f/8dd4c7e1895d99e16c9b78fea1e0e0a64382f53bc9fc655a01465de70505/elasticsearch-7.8.1-py2.py3-none-any.whl\r\nSuccessfully installed elasticsearch-7.8.1\r\n\r\nRan one-liner to verify that async_bulk can be loaded\r\npython3 -c \"from elasticsearch.helpers import async_bulk\"                 \r\n\r\nChecked local file-system\r\nls ~/.local/lib/python3.6/site-packages/elasticsearch/_async/             \r\nclient  compat.py  **helpers.py**  http_aiohttp.py  __init__.py  __pycache__  transport.py\r\n\r\n\r\nInstalled version 7.9.0\r\npip3 install --user elasticsearch[async]==7.9.0\r\nCollecting elasticsearch[async]==7.9.0\r\n  Using cached https://files.pythonhosted.org/packages/c6/63/ff0c908cae1e8e000308cba1d647585dff3dffad5304ca12fe834297fe8f/elasticsearch-7.9.0-py2.py3-none-any.whl\r\nSuccessfully installed elasticsearch-7.9.0\r\n\r\nRan one-liner to verify that async_bulk can be loaded\r\npython3 -c \"from elasticsearch.helpers import async_bulk\"                 \r\n**Traceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nImportError: cannot import name 'async_bulk'**\r\n\r\nChecked local file-system\r\nls ~/.local/lib/python3.6/site-packages/elasticsearch/_async/     \r\nclient  compat.py  http_aiohttp.py  __init__.py  __pycache__  transport.py\r\n\r\nLooks like file _async/helpers.py is missing\r\nBut it is still present in GIT\r\nhttps://github.com/elastic/elasticsearch-py/blob/master/elasticsearch/_async/helpers.py\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1345", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1345/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1345/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1345/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1345", "id": 675213920, "node_id": "MDU6SXNzdWU2NzUyMTM5MjA=", "number": 1345, "title": "Getting a JSONDecodeError 'Unterminated string starting at: ...' when hitting an AWS API Gateway that proxies to an elx", "user": {"login": "lslee714", "id": 16544356, "node_id": "MDQ6VXNlcjE2NTQ0MzU2", "avatar_url": "https://avatars0.githubusercontent.com/u/16544356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lslee714", "html_url": "https://github.com/lslee714", "followers_url": "https://api.github.com/users/lslee714/followers", "following_url": "https://api.github.com/users/lslee714/following{/other_user}", "gists_url": "https://api.github.com/users/lslee714/gists{/gist_id}", "starred_url": "https://api.github.com/users/lslee714/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lslee714/subscriptions", "organizations_url": "https://api.github.com/users/lslee714/orgs", "repos_url": "https://api.github.com/users/lslee714/repos", "events_url": "https://api.github.com/users/lslee714/events{/privacy}", "received_events_url": "https://api.github.com/users/lslee714/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-07T18:58:30Z", "updated_at": "2020-08-07T21:43:23Z", "closed_at": "2020-08-07T20:32:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.8.1\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**:  7.8.1\r\n\r\nPlease make sure the major version matches the Elasticsearch server you are running.\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nHitting search with a specific query returns a JSONDecodeError shown in the title when it looks like it's trying to deserialize the response. The stack trace is \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/elasticsearch/serializer.py\", line 97, in loads\r\n    return json.loads(s)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/simplejson/__init__.py\", line 525, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/simplejson/decoder.py\", line 370, in decode\r\n    obj, end = self.raw_decode(s)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/simplejson/decoder.py\", line 400, in raw_decode\r\n    return self.scan_once(s, idx=_w(s, idx).end())\r\nsimplejson.errors.JSONDecodeError: Unterminated string starting at: line 1 column 7823 (char 7822)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/flask_restful/__init__.py\", line 458, in wrapper\r\n    resp = resource(*args, **kwargs)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/flask/views.py\", line 89, in view\r\n    return self.dispatch_request(*args, **kwargs)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/flask_restful/__init__.py\", line 573, in dispatch_request\r\n    resp = meth(*args, **kwargs)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/flask_jwt_extended/view_decorators.py\", line 103, in wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/resources/marketplace.py\", line 27, in get\r\n    res = view_mode_to_fn[view_mode](**request_args)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/resources/marketplace.py\", line 46, in get_default_view_data\r\n    categories = marketplace_es.get_categories(user.preference.materials_vendor_ids)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/elastic/marketplace_search.py\", line 49, in get_categories\r\n    raw_result = self.app.elasticsearch.search(index=self.INDEX_NAME, body=categories_query)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/elasticsearch/client/utils.py\", line 139, in _wrapped\r\n    return func(*args, params=params, headers=headers, **kwargs)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/elasticsearch/client/__init__.py\", line 1479, in search\r\n    return self.transport.perform_request(\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/elasticsearch/transport.py\", line 384, in perform_request\r\n    data = self.deserializer.loads(\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/elasticsearch/serializer.py\", line 143, in loads\r\n    return deserializer.loads(s)\r\n  File \"/home/luke/Projects/takeoffs/takeoffs-app/server/venv/lib/python3.8/site-packages/elasticsearch/serializer.py\", line 99, in loads\r\n    raise SerializationError(s, e)\r\nelasticsearch.exceptions.SerializationError: ('{\"some-real-json-i-expect ...\" } occured while trying to proxy to: materials-es-proxy.takeoffs.io/allproductprices/_search', JSONDecodeError('Unterminated string starting at: line 1 column 7823 (char 7822)'))\r\n\r\n```\r\n\r\nIt's worth noting when I run the AWS lambda proxy locally, it works fine, which sort of leads me to believe it's related to something in AWS, still working through this with them too. The reason I still think it may be related to elasticsearch-py library is because hitting the AWS proxy with postman, curl and even the python `requests` library, it works fine.\r\n\r\n\r\n**Steps to reproduce**:\r\nObviously, it's not trivial to mock up all the parts for reproducing it. However, we made a temp api key to the proxy that should allow you direct access and direct copy of what I'm doing. Please let me know what you think about this and I'm happy to share it. Here's a script, you can just fill in the \"x-api-key\" value once I share it.\r\n\r\n```\r\nfrom elasticsearch import Elasticsearch\r\n\r\nes = Elasticsearch(\r\n    '',\r\n    headers = {\r\n        'x-api-key': '',\r\n    }\r\n)\r\n\r\n\r\nbody = {\r\n    \"query\": {\r\n        \"bool\": {\r\n            \"must\": [\r\n                {\r\n                    \"match\": {\r\n                        \"vendor_id\": 103\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"aggs\": {\r\n\t\t\"category.keyword\": {\r\n\t\t\t\"terms\": {\r\n\t\t\t\t\"field\": \"category.keyword\",\r\n\t\t\t\t\"size\": 1000,\r\n\t\t\t\t\"order\": {\r\n\t\t\t\t\t\"_key\": \"asc\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nif __name__ == '__main__':\r\n\r\n    with_es = es.search(index='allproductprices', body=body)\r\n    print('RESPONSE', with_es)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1343", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1343/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1343/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1343/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1343", "id": 673492656, "node_id": "MDU6SXNzdWU2NzM0OTI2NTY=", "number": 1343, "title": "Asyncio link does not work - 404 not found", "user": {"login": "juangonzales12", "id": 61009513, "node_id": "MDQ6VXNlcjYxMDA5NTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/61009513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juangonzales12", "html_url": "https://github.com/juangonzales12", "followers_url": "https://api.github.com/users/juangonzales12/followers", "following_url": "https://api.github.com/users/juangonzales12/following{/other_user}", "gists_url": "https://api.github.com/users/juangonzales12/gists{/gist_id}", "starred_url": "https://api.github.com/users/juangonzales12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juangonzales12/subscriptions", "organizations_url": "https://api.github.com/users/juangonzales12/orgs", "repos_url": "https://api.github.com/users/juangonzales12/repos", "events_url": "https://api.github.com/users/juangonzales12/events{/privacy}", "received_events_url": "https://api.github.com/users/juangonzales12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-05T12:14:28Z", "updated_at": "2020-08-05T16:11:52Z", "closed_at": "2020-08-05T16:11:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I click on the link on how to use asyncio with this project it gives me a 404 github not found page!\r\n\r\nI was on branch `master`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1334", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1334/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1334/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1334/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1334", "id": 665593965, "node_id": "MDU6SXNzdWU2NjU1OTM5NjU=", "number": 1334, "title": "Connection pool exception", "user": {"login": "caseydm", "id": 3642984, "node_id": "MDQ6VXNlcjM2NDI5ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3642984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caseydm", "html_url": "https://github.com/caseydm", "followers_url": "https://api.github.com/users/caseydm/followers", "following_url": "https://api.github.com/users/caseydm/following{/other_user}", "gists_url": "https://api.github.com/users/caseydm/gists{/gist_id}", "starred_url": "https://api.github.com/users/caseydm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caseydm/subscriptions", "organizations_url": "https://api.github.com/users/caseydm/orgs", "repos_url": "https://api.github.com/users/caseydm/repos", "events_url": "https://api.github.com/users/caseydm/events{/privacy}", "received_events_url": "https://api.github.com/users/caseydm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-25T14:25:01Z", "updated_at": "2020-07-27T18:59:45Z", "closed_at": "2020-07-27T15:09:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Elasticsearch version**: 7.8.0\r\n\r\n**`elasticsearch-py` version**: 7.8.0\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nI am receiving very occasional exceptions that seem to involve the connection pool. \r\n\r\n**Steps to reproduce**: I am unable to reproduce the error. But the error seems to occur once out of every 20,000 requests or so.\r\n\r\nThis is the traceback. Any idea what may be going wrong?\r\n\r\n```\r\nSystemExit: 1\r\n  File \"django/core/handlers/wsgi.py\", line 157, in __call__\r\n    response = self.get_response(request)\r\n  File \"django/core/handlers/base.py\", line 124, in get_response\r\n    response = self._middleware_chain(request)\r\n  File \"django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"whitenoise/middleware.py\", line 58, in __call__\r\n    response = self.get_response(request)\r\n  File \"django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"record/views.py\", line 946, in record_search\r\n    results = fulltext_search(**search_params)\r\n  File \"record/search_utils.py\", line 181, in fulltext_search\r\n    records = s.execute()\r\n  File \"elasticsearch_dsl/search.py\", line 695, in execute\r\n    es.search(\r\n  File \"elasticsearch/client/utils.py\", line 139, in _wrapped\r\n    return func(*args, params=params, headers=headers, **kwargs)\r\n  File \"elasticsearch/client/__init__.py\", line 1479, in search\r\n    return self.transport.perform_request(\r\n  File \"elasticsearch/transport.py\", line 345, in perform_request\r\n    status, headers_response, data = connection.perform_request(\r\n  File \"elasticsearch/connection/http_urllib3.py\", line 232, in perform_request\r\n    response = self.pool.urlopen(\r\n  File \"urllib3/connectionpool.py\", line 670, in urlopen\r\n    httplib_response = self._make_request(\r\n  File \"urllib3/connectionpool.py\", line 426, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n    # Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  File \"urllib3/connectionpool.py\", line 421, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"http/client.py\", line 1332, in getresponse\r\n    response.begin()\r\n  File \"http/client.py\", line 303, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"http/client.py\", line 264, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"socket.py\", line 669, in readinto\r\n    return self._sock.recv_into(b)\r\n  File \"ssl.py\", line 1241, in recv_into\r\n    return self.read(nbytes, buffer)\r\n  File \"ssl.py\", line 1099, in read\r\n    return self._sslobj.read(len, buffer)\r\n  File \"gunicorn/workers/base.py\", line 201, in handle_abort\r\n    sys.exit(1)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1333", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1333/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1333/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1333/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1333", "id": 663222083, "node_id": "MDU6SXNzdWU2NjMyMjIwODM=", "number": 1333, "title": "Trouble using AsyncElasticsearch with RequestsHttpConnection", "user": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-21T18:30:27Z", "updated_at": "2020-08-19T12:34:35Z", "closed_at": "2020-07-25T01:41:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(This issue is opened on behalf of @aockel and is quoted directly)\r\n\r\nHi, I've tried to run the simple async bulk request example and got the following error message:\r\n\r\n```\r\nFile \"sample_async.py\", line 28, in\r\nloop.run_until_complete(main())\r\nFile \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py\", line 584, in run_until_complete\r\nreturn future.result()\r\nFile \"sample_async.py\", line 25, in main\r\nawait async_bulk(es, gendata())\r\nFile \"/usr/local/lib/python3.7/site-packages/elasticsearch/_async/helpers.py\", line 241, in async_bulk\r\nasync for ok, item in async_streaming_bulk(client, actions, *args, **kwargs):\r\nFile \"/usr/local/lib/python3.7/site-packages/elasticsearch/_async/helpers.py\", line 171, in async_streaming_bulk\r\n**kwargs\r\nFile \"/usr/local/lib/python3.7/site-packages/elasticsearch/_async/helpers.py\", line 92, in azip\r\nyield tuple([await x.anext() for x in aiters])\r\nFile \"/usr/local/lib/python3.7/site-packages/elasticsearch/_async/helpers.py\", line 92, in\r\nyield tuple([await x.anext() for x in aiters])\r\nFile \"/usr/local/lib/python3.7/site-packages/elasticsearch/_async/helpers.py\", line 55, in _process_bulk_chunk\r\nresp = await client.bulk(\"\\n\".join(bulk_actions) + \"\\n\", *args, **kwargs)\r\nFile \"/usr/local/lib/python3.7/site-packages/elasticsearch/_async/client/init.py\", line 435, in bulk\r\nbody=body,\r\nFile \"/usr/local/lib/python3.7/site-packages/elasticsearch/_async/transport.py\", line 286, in perform_request\r\ntimeout=timeout,\r\nTypeError: object tuple can't be used in 'await' expression\r\n\r\nusing the following code snipped:\r\n\r\nimport asyncio\r\nfrom aws_requests_auth.boto_utils import BotoAWSRequestsAuth\r\nfrom elasticsearch import AsyncElasticsearch, RequestsHttpConnection\r\nfrom elasticsearch.helpers import async_bulk\r\n\r\nes_host = 'exampleurldoesnotexist.eu-west-1.es.amazonaws.com'\r\nauth = BotoAWSRequestsAuth(aws_host=es_host,\r\naws_region='eu-west-1',\r\naws_service='es')\r\nes = AsyncElasticsearch(host=es_host,\r\nport=80,\r\nconnection_class=RequestsHttpConnection,\r\nhttp_auth=auth,\r\ntimeout=60)\r\n\r\nasync def gendata():\r\nmywords = ['foo', 'bar', 'baz']\r\nfor word in mywords:\r\nyield {\r\n\"_index\": \"mywords\",\r\n\"doc\": {\"word\": word},\r\n}\r\n\r\nasync def main():\r\nawait async_bulk(es, gendata())\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(main())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1319", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1319/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1319/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1319/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1319", "id": 654241011, "node_id": "MDU6SXNzdWU2NTQyNDEwMTE=", "number": 1319, "title": "No `put_mapping` attribute", "user": {"login": "JerzySpendel", "id": 1176069, "node_id": "MDQ6VXNlcjExNzYwNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1176069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JerzySpendel", "html_url": "https://github.com/JerzySpendel", "followers_url": "https://api.github.com/users/JerzySpendel/followers", "following_url": "https://api.github.com/users/JerzySpendel/following{/other_user}", "gists_url": "https://api.github.com/users/JerzySpendel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JerzySpendel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JerzySpendel/subscriptions", "organizations_url": "https://api.github.com/users/JerzySpendel/orgs", "repos_url": "https://api.github.com/users/JerzySpendel/repos", "events_url": "https://api.github.com/users/JerzySpendel/events{/privacy}", "received_events_url": "https://api.github.com/users/JerzySpendel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-09T17:49:59Z", "updated_at": "2020-07-09T18:34:31Z", "closed_at": "2020-07-09T18:21:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.8.0\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: 7.7.1\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nWhen trying to access `put_mapping` method, I get:\r\n\r\n`'Elasticsearch' object has no attribute 'put_mapping'`\r\n\r\n**Steps to reproduce**:\r\n\r\n1. Create instance of elasticsearch.Elasticsearch\r\n2. Try to get `put_mapping` attribute of that instance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1306", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1306/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1306/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1306/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1306", "id": 648694680, "node_id": "MDU6SXNzdWU2NDg2OTQ2ODA=", "number": 1306, "title": "Create snapshot for localhost:9200 hosted index cause error", "user": {"login": "JunhaoWang", "id": 16586487, "node_id": "MDQ6VXNlcjE2NTg2NDg3", "avatar_url": "https://avatars1.githubusercontent.com/u/16586487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JunhaoWang", "html_url": "https://github.com/JunhaoWang", "followers_url": "https://api.github.com/users/JunhaoWang/followers", "following_url": "https://api.github.com/users/JunhaoWang/following{/other_user}", "gists_url": "https://api.github.com/users/JunhaoWang/gists{/gist_id}", "starred_url": "https://api.github.com/users/JunhaoWang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JunhaoWang/subscriptions", "organizations_url": "https://api.github.com/users/JunhaoWang/orgs", "repos_url": "https://api.github.com/users/JunhaoWang/repos", "events_url": "https://api.github.com/users/JunhaoWang/events{/privacy}", "received_events_url": "https://api.github.com/users/JunhaoWang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-01T05:53:17Z", "updated_at": "2020-07-05T19:58:24Z", "closed_at": "2020-07-05T19:58:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Bug report -->\r\n\r\n**Elasticsearch 7.8.0**:\r\n\r\n**`elasticsearch-py` version (`7.8.0`)**: \r\n\r\n**Create snapshot for localhost:9200 hosted index cause error**:\r\n\r\n**Steps to reproduce**:\r\nHave a test index hosted on localhost:9200, and curl works:\r\n`curl localhost:9200/test` gives response\r\n\r\nHowever, creating snapshot does not work:\r\n`from elasticsearch import Elasticsearch; es = Elasticsearch()`\r\n`es.snapshot.create_repository(repository='test', body={\r\n            \"type\": \"url\",\r\n            \"settings\": {\r\n                \"url\": \"localhost:9200/test\"\r\n            }\r\n        })\r\n`\r\n`es.snapshot.create(repository='test, snapshot='test_v1')`\r\n\r\n**error**\r\n  File \"<ipython-input-9-56f7a065f42a>\", line 4, in <module>\r\n    \"url\": \"localhost:9200/politifact\"\r\n  File \"/opt/anaconda3/envs/scrapy/lib/python3.7/site-packages/elasticsearch/client/utils.py\", line 139, in _wrapped\r\n    return func(*args, params=params, headers=headers, **kwargs)\r\n  File \"/opt/anaconda3/envs/scrapy/lib/python3.7/site-packages/elasticsearch/client/snapshot.py\", line 144, in create_repository\r\n    body=body,\r\n  File \"/opt/anaconda3/envs/scrapy/lib/python3.7/site-packages/elasticsearch/transport.py\", line 352, in perform_request\r\n    timeout=timeout,\r\n  File \"/opt/anaconda3/envs/scrapy/lib/python3.7/site-packages/elasticsearch/connection/http_urllib3.py\", line 256, in perform_request\r\n    self._raise_error(response.status, raw_data)\r\n  File \"/opt/anaconda3/envs/scrapy/lib/python3.7/site-packages/elasticsearch/connection/base.py\", line 288, in _raise_error\r\n    status_code, error_message, additional_info\r\nelasticsearch.exceptions.TransportError: TransportError(500, 'repository_exception', '[train_articles] failed to create repository')\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1303", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1303/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1303/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1303/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1303", "id": 647732380, "node_id": "MDU6SXNzdWU2NDc3MzIzODA=", "number": 1303, "title": "[question/bug] Async usage with Django 3.1+ ", "user": {"login": "vitalik", "id": 95222, "node_id": "MDQ6VXNlcjk1MjIy", "avatar_url": "https://avatars3.githubusercontent.com/u/95222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitalik", "html_url": "https://github.com/vitalik", "followers_url": "https://api.github.com/users/vitalik/followers", "following_url": "https://api.github.com/users/vitalik/following{/other_user}", "gists_url": "https://api.github.com/users/vitalik/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitalik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitalik/subscriptions", "organizations_url": "https://api.github.com/users/vitalik/orgs", "repos_url": "https://api.github.com/users/vitalik/repos", "events_url": "https://api.github.com/users/vitalik/events{/privacy}", "received_events_url": "https://api.github.com/users/vitalik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-29T23:22:41Z", "updated_at": "2020-07-17T20:56:36Z", "closed_at": "2020-06-30T00:51:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Elasticsearch version**: 7.8\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**:  7.8.0\r\n\r\nDjango 3.1 (currently in beta) comes with async views support\r\n\r\nHaving an issue when use AsyncElasticsearch object:\r\n\r\n```\r\n# 1\r\npip insntall Django==3.1b1 \r\n\r\n# 2\r\ndjango-admin startproject myproject\r\n\r\n# 3 in settings.py change WSGI_APPLICATION to \r\nASGI_APPLICATION = 'myproject.asgi.application'\r\n\r\n# 4 in urls.py\r\n\r\nfrom django.urls import path\r\nfrom django.http import JsonResponse\r\nfrom elasticsearch import AsyncElasticsearch\r\n\r\nes = AsyncElasticsearch()\r\n\r\nasync def search(request):\r\n    resp = await es.search(\r\n        index=\"documents\", body={\"query\": {\"match_all\": {}}}, size=20\r\n    )\r\n    return JsonResponse(resp)\r\n\r\n\r\nurlpatterns = [\r\n    path(\"search/\", search),\r\n]\r\n\r\n# 5\r\n./manage.py runserver\r\n\r\n```\r\n\r\nthis gives exception when trying to use it (on 2nd call to web /search )\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"lib/python3.8/site-packages/elasticsearch/_async/http_aiohttp.py\", line 228, in perform_request\r\n    async with self.session.request(\r\n  File \"lib/python3.8/site-packages/aiohttp/client.py\", line 1012, in __aenter__\r\n    self._resp = await self._coro\r\n  File \"lib/python3.8/site-packages/aiohttp/client.py\", line 405, in _request\r\n    handle = tm.start()\r\n  File \"lib/python3.8/site-packages/aiohttp/helpers.py\", line 532, in start\r\n    return self._loop.call_at(at, self.__call__)\r\n  File \"/lib/python3.8/asyncio/base_events.py\", line 698, in call_at\r\n    self._check_closed()\r\n  File \"/lib/python3.8/asyncio/base_events.py\", line 508, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n...\r\n\r\n  File \"lib/python3.8/site-packages/elasticsearch/_async/http_aiohttp.py\", line 255, in perform_request\r\n    raise ConnectionError(\"N/A\", str(e), e)\r\nelasticsearch.exceptions.ConnectionError: ConnectionError(Event loop is closed) caused by: RuntimeError(Event loop is closed\r\n\r\n```\r\n\r\nmoving `es` object initialisation to view seems solve it, but it will create elastic client on every request...\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1299", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1299/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1299/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1299/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1299", "id": 646820328, "node_id": "MDU6SXNzdWU2NDY4MjAzMjg=", "number": 1299, "title": "perform_request hijacked user defined exception", "user": {"login": "lsyarn", "id": 13413617, "node_id": "MDQ6VXNlcjEzNDEzNjE3", "avatar_url": "https://avatars3.githubusercontent.com/u/13413617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsyarn", "html_url": "https://github.com/lsyarn", "followers_url": "https://api.github.com/users/lsyarn/followers", "following_url": "https://api.github.com/users/lsyarn/following{/other_user}", "gists_url": "https://api.github.com/users/lsyarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsyarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsyarn/subscriptions", "organizations_url": "https://api.github.com/users/lsyarn/orgs", "repos_url": "https://api.github.com/users/lsyarn/repos", "events_url": "https://api.github.com/users/lsyarn/events{/privacy}", "received_events_url": "https://api.github.com/users/lsyarn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-28T02:45:22Z", "updated_at": "2020-07-08T02:53:56Z", "closed_at": "2020-07-07T18:42:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "**`elasticsearch-py` version (`master`)**: \r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nhttps://github.com/elastic/elasticsearch-py/blob/f40390187a79ccd773a09aa1f671562d42cd3938/elasticsearch/connection/http_urllib3.py#L237\r\n\r\nthis try exception hijacked all exceptions, and raised with a `SSLError` or `ConnectionTimeout` or `ConnectionError`.All user defined exceptions with other type will be hijacked.So that, users can not catch the exception in up level code.\r\n\r\n**Steps to reproduce**:\r\n\r\n```python\r\nclass MyTimeout(Exception):\r\n    pass\r\n\r\nclass timeout(object):\r\n    \"\"\"\r\n    To be used in a ``with`` block and timeout its content.\r\n    \"\"\"\r\n\r\n    def __init__(self, seconds=1, error_message='Timeout'):\r\n        self.seconds = seconds\r\n        self.error_message = error_message\r\n\r\n    def handle_timeout(self, signum, frame):\r\n        self.log.error(\"Process timed out\")\r\n        raise MyTimeout(self.error_message)\r\n\r\n    def __enter__(self):\r\n        try:\r\n            signal.signal(signal.SIGALRM, self.handle_timeout)\r\n            signal.alarm(self.seconds)\r\n        except ValueError as e:\r\n            self.log.warning(\"timeout can't be used in the current context\")\r\n            self.log.exception(e)\r\n\r\n    def __exit__(self, type, value, traceback):\r\n        try:\r\n            signal.alarm(0)\r\n        except ValueError as e:\r\n            self.log.warning(\"timeout can't be used in the current context\")\r\n            self.log.exception(e)\r\n\r\ndef long_time_request():\r\n    # DO A LONG TIME QUERY\uff0cLONG THAN 5 SECONDS\r\n    pass\r\n\r\ndef do_query():\r\n    try:\r\n        with timeout(5): # 5 SECONDS TIMEOUT\r\n            long_time_request()\r\n    except Exception as e:\r\n        assert isinstance(e, MyTimeout) # can not get MyTimeout\r\n    \r\nif __name__ == \"__main__\":\r\n    do_query()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1296", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1296/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1296/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1296/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1296", "id": 646359190, "node_id": "MDU6SXNzdWU2NDYzNTkxOTA=", "number": 1296, "title": "helpers.scan won't accept string as query/body", "user": {"login": "EmilBode", "id": 22800383, "node_id": "MDQ6VXNlcjIyODAwMzgz", "avatar_url": "https://avatars2.githubusercontent.com/u/22800383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EmilBode", "html_url": "https://github.com/EmilBode", "followers_url": "https://api.github.com/users/EmilBode/followers", "following_url": "https://api.github.com/users/EmilBode/following{/other_user}", "gists_url": "https://api.github.com/users/EmilBode/gists{/gist_id}", "starred_url": "https://api.github.com/users/EmilBode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EmilBode/subscriptions", "organizations_url": "https://api.github.com/users/EmilBode/orgs", "repos_url": "https://api.github.com/users/EmilBode/repos", "events_url": "https://api.github.com/users/EmilBode/events{/privacy}", "received_events_url": "https://api.github.com/users/EmilBode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-26T15:59:23Z", "updated_at": "2020-07-27T17:22:15Z", "closed_at": "2020-07-27T17:22:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Bug report -->\r\n\r\n**Elasticsearch version** : 7.4.2\r\n**`elasticsearch-py` version**: 7.0.2\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nWhen I want to use the helpers.scan-function with directly specifying the body/query as a string, it fails.\r\n\r\n**Steps to reproduce**:\r\n```next( elasticsearch.helpers.scan(my_es_instance, index='my-index', query='{\"query\": {\"match_all\": {}}}'))```\r\n(Note that the query is surrounded by single quotes, making it a str)\r\n\r\n**Expected behaviour**: Results, just as when I'd have specified the query as a dict.\r\n**Actual behaviour**: it fails with\r\n```\r\nFile \"C:\\....\\elasticsearch\\helpers\\action.py\" line 430, in scan\r\n  query = query.copy() if query else {}\r\n\r\nAttributeErrorL 'str' has no attribute 'copy'\r\n```\r\nNote that if instead I specify a body parameter, it fails in a different way:\r\n```\r\nnext(elasticsearch.helpers.scan(my_es_instance, index='my-index', body='{\"query\": {\"match_all\": {}}}'))\r\n\r\nFile \"C:\\....\\elasticsearch\\helpers\\action.py\" line 435, in scan\r\n  body=query, scroll=scroll, size=size, request_timeout=request_timeout, **kwargs\r\n\r\nTypeError: search() got multiple values for keyword argument 'body'\r\n```\r\nAlso note that `elasticsearch.Elasticsearch().search()` accepts both strings and dicts as body-parameter\r\n\r\nThis problem can be circumvented by specifying `preserve_order=True`, but this is not a good idea performance-wise.\r\nAlternatively, it can be solved by \r\n```next(elasticsearch.helpers.scan(my_es_instance, index='my-index', query=eval('{\"query\": {\"match_all\": {}}}')))```\r\n\r\n**Proposed solution**\r\nI think this problem could be solved if the string-evalution is done within scan. Line 430 in actions.py could be changed into:\r\n```query = query.copy() if isinstance(query, dict) else eval(query) if query else {}```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1294", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1294/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1294/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1294/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1294", "id": 644982038, "node_id": "MDU6SXNzdWU2NDQ5ODIwMzg=", "number": 1294, "title": "Documents not appearing after bulk operation in Elasticsearch 7", "user": {"login": "minhtuev", "id": 1332283, "node_id": "MDQ6VXNlcjEzMzIyODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1332283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minhtuev", "html_url": "https://github.com/minhtuev", "followers_url": "https://api.github.com/users/minhtuev/followers", "following_url": "https://api.github.com/users/minhtuev/following{/other_user}", "gists_url": "https://api.github.com/users/minhtuev/gists{/gist_id}", "starred_url": "https://api.github.com/users/minhtuev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minhtuev/subscriptions", "organizations_url": "https://api.github.com/users/minhtuev/orgs", "repos_url": "https://api.github.com/users/minhtuev/repos", "events_url": "https://api.github.com/users/minhtuev/events{/privacy}", "received_events_url": "https://api.github.com/users/minhtuev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-24T21:16:51Z", "updated_at": "2020-06-25T16:50:18Z", "closed_at": "2020-06-25T16:50:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.7.1\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: 7.0\r\n\r\nPlease make sure the major version matches the Elasticsearch server you are running.\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nWe are running our tests which query an index after creating and updating the index with documents.\r\n\r\nHowever, we run into issues with a version of ES7 (7.7.1). Basically, it seems that in the pytest fixture where the index is being set up, the index has not finished processing when the tests start running. Hence, the tests are failing. This did not happen with an earlier version of Elasticsearch (5 & 6).\r\n\r\nhttps://github.com/cisco/mindmeld/runs/802073981\r\n\r\nHas anything changed in the backend? In our backend, we call `streaming_bulk` to update the index.\r\n\r\n**Steps to reproduce**:\r\nYou can see our tests and ssh into the instances here:\r\nhttps://github.com/cisco/mindmeld/pull/160\r\n\r\nYou can also fork the repo and modify the test matrix to change the ES version. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1287", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1287/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1287/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1287/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1287", "id": 641222305, "node_id": "MDU6SXNzdWU2NDEyMjIzMDU=", "number": 1287, "title": "Migrate all rST code blocks from :: to code-block: python", "user": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1888178015, "node_id": "MDU6TGFiZWwxODg4MTc4MDE1", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/good%20first%20issue", "name": "good first issue", "color": "000000", "default": true, "description": "Issues that are good for new contributors"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-18T13:47:29Z", "updated_at": "2020-06-25T18:19:05Z", "closed_at": "2020-06-25T18:19:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Our documentation has a mix of `::` and ` .. code-block: python`, we should migrate to all `code-block: python` so it's less confusing and more apparent when a code block is defined.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1278", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1278/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1278/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1278/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1278", "id": 637615989, "node_id": "MDU6SXNzdWU2Mzc2MTU5ODk=", "number": 1278, "title": "Helper documentation is wrong", "user": {"login": "HonzaKral", "id": 32132, "node_id": "MDQ6VXNlcjMyMTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/32132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HonzaKral", "html_url": "https://github.com/HonzaKral", "followers_url": "https://api.github.com/users/HonzaKral/followers", "following_url": "https://api.github.com/users/HonzaKral/following{/other_user}", "gists_url": "https://api.github.com/users/HonzaKral/gists{/gist_id}", "starred_url": "https://api.github.com/users/HonzaKral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HonzaKral/subscriptions", "organizations_url": "https://api.github.com/users/HonzaKral/orgs", "repos_url": "https://api.github.com/users/HonzaKral/repos", "events_url": "https://api.github.com/users/HonzaKral/events{/privacy}", "received_events_url": "https://api.github.com/users/HonzaKral/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38099491, "node_id": "MDU6TGFiZWwzODA5OTQ5MQ==", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/bug", "name": "bug", "color": "c92118", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-12T09:25:54Z", "updated_at": "2020-06-16T21:29:30Z", "closed_at": "2020-06-16T21:29:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "the documentation in https://elasticsearch-py.readthedocs.io/en/master/helpers.html#example uses `\"doc\": {\"word\": word}` specifying:\r\n\r\n> we want to index those words into individual documents where the structure of the document is like {\"word\": \"<myword>\"}\r\n\r\nThat is not true and does not work, with the example you would end up in documents like: `{'doc': {'word': 'foo'}}`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1275", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1275/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1275/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1275/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1275", "id": 630645947, "node_id": "MDU6SXNzdWU2MzA2NDU5NDc=", "number": 1275, "title": "Python Elasticsearch create index mapping", "user": {"login": "vignesh0710", "id": 19801399, "node_id": "MDQ6VXNlcjE5ODAxMzk5", "avatar_url": "https://avatars0.githubusercontent.com/u/19801399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vignesh0710", "html_url": "https://github.com/vignesh0710", "followers_url": "https://api.github.com/users/vignesh0710/followers", "following_url": "https://api.github.com/users/vignesh0710/following{/other_user}", "gists_url": "https://api.github.com/users/vignesh0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/vignesh0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vignesh0710/subscriptions", "organizations_url": "https://api.github.com/users/vignesh0710/orgs", "repos_url": "https://api.github.com/users/vignesh0710/repos", "events_url": "https://api.github.com/users/vignesh0710/events{/privacy}", "received_events_url": "https://api.github.com/users/vignesh0710/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-04T09:04:50Z", "updated_at": "2020-06-17T18:40:28Z", "closed_at": "2020-06-17T18:40:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "`elasticsearch version - 7.7.0`\r\n\r\n`elasticsearch-py version - (7,6,0)`\r\n\r\nI am trying to create a ES index with custom mapping with elasticsearch python to increase the size of text in each document:\r\n\r\n```\r\nmapping = {\"mapping\":{\r\n           \"properties\":{\r\n             \"Apple\":{\"type\":\"text\",\"ignore_above\":1000},\r\n             \"Mango\":{\"type\":\"text\",\"ignore_above\":1000}\r\n           }\r\n          }}\r\n\r\nfrom elasticsearch import Elasticsearch\r\nes1 = Elasticsearch([{\"host\":\"localhost\",\"port\":9200}])\r\nes1.indices.create(index=\"hello\",body=mapping)\r\n```\r\n\r\nError:\r\n\r\n`RequestError: RequestError(400, 'mapper_parsing_exception', 'Mapping definition for [Apple] has unsupported parameters: [ignore_above : 10000]')`\r\n\r\nAny suggestions on how to rectify this will be great.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1270", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1270/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1270/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1270/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1270", "id": 629240848, "node_id": "MDU6SXNzdWU2MjkyNDA4NDg=", "number": 1270, "title": "[7.7.1] DeprecationWarning types removal on es.exists_source", "user": {"login": "kate-tel", "id": 61241151, "node_id": "MDQ6VXNlcjYxMjQxMTUx", "avatar_url": "https://avatars0.githubusercontent.com/u/61241151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kate-tel", "html_url": "https://github.com/kate-tel", "followers_url": "https://api.github.com/users/kate-tel/followers", "following_url": "https://api.github.com/users/kate-tel/following{/other_user}", "gists_url": "https://api.github.com/users/kate-tel/gists{/gist_id}", "starred_url": "https://api.github.com/users/kate-tel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kate-tel/subscriptions", "organizations_url": "https://api.github.com/users/kate-tel/orgs", "repos_url": "https://api.github.com/users/kate-tel/repos", "events_url": "https://api.github.com/users/kate-tel/events{/privacy}", "received_events_url": "https://api.github.com/users/kate-tel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-02T14:15:52Z", "updated_at": "2020-06-19T08:14:35Z", "closed_at": "2020-06-18T15:46:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the feature**: es.exists_source returns False (however source exists) and ElasticsearchDeprecationWarning, however I don't specify type in my request.\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.7.0\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: 7.7.1\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nI have a document with a source, but when I call es.exists_source, it throws a DeprecationWarning and returns False, however True is expected.\r\nOn contrary, es.get_source successfully returns the source of the same document.\r\n\r\n**Steps to reproduce**:\r\n`es.index(index='s', id=1, body={'name':'Morty'}, refresh=True)\r\nprint(es.exists_source(index='s', id=1))`\r\n\r\nreturn:\r\n\r\n`ElasticsearchDeprecationWarning: [types removal] Specifying types in document get requests is deprecated, use the /{index}/_doc/{id} endpoint instead.\r\n  print(es.exists_source(index='s', id=1))\r\nFalse`\r\n\r\nI can see that create, update, explain, get_source, and termvectors APIs were fixed in  #1253 release, but not exists_source.\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1262", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1262/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1262/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1262/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1262", "id": 627261827, "node_id": "MDU6SXNzdWU2MjcyNjE4Mjc=", "number": 1262, "title": "create(**kwargs) doesn't work if document id is not provided ", "user": {"login": "DuoPegla", "id": 1254430, "node_id": "MDQ6VXNlcjEyNTQ0MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1254430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DuoPegla", "html_url": "https://github.com/DuoPegla", "followers_url": "https://api.github.com/users/DuoPegla/followers", "following_url": "https://api.github.com/users/DuoPegla/following{/other_user}", "gists_url": "https://api.github.com/users/DuoPegla/gists{/gist_id}", "starred_url": "https://api.github.com/users/DuoPegla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DuoPegla/subscriptions", "organizations_url": "https://api.github.com/users/DuoPegla/orgs", "repos_url": "https://api.github.com/users/DuoPegla/repos", "events_url": "https://api.github.com/users/DuoPegla/events{/privacy}", "received_events_url": "https://api.github.com/users/DuoPegla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-29T13:17:25Z", "updated_at": "2020-05-29T16:48:11Z", "closed_at": "2020-05-29T16:03:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.6.2\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: 7.7.1\r\n\r\nPlease make sure the major version matches the Elasticsearch server you are running.\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nCalling [create(**kwargs)](https://elasticsearch-py.readthedocs.io/en/master/api.html#elasticsearch.Elasticsearch.create) without providing a document Id causes an error when it should create a new document with autogenerated Id using POST method (instead of PUT).\r\n\r\nIssue in [__init__.py](https://github.com/elastic/elasticsearch-py/blob/master/elasticsearch/client/__init__.py):\r\n\r\n        for param in (index, id, body): # id should be removed from here\r\n            if param in SKIP_IN_PATH:\r\n                raise ValueError(\"Empty value passed for a required argument.\")\r\n\r\n        if doc_type in SKIP_IN_PATH:\r\n            path = _make_path(index, \"_create\", id)\r\n        else:\r\n            path = _make_path(index, doc_type, id)\r\n\r\n        return self.transport.perform_request(\r\n            \"POST\" if id in SKIP_IN_PATH else \"PUT\", # calling \"POST\" instead of \"PUT\" is already implemented\r\n            path,\r\n            params=params,\r\n            headers=headers,\r\n            body=body,\r\n        )\r\n\r\n\r\n**Steps to reproduce**:\r\nCall `create` method without providing a document Id and it will throw a `ValueError`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1258", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1258/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1258/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1258/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1258", "id": 626056210, "node_id": "MDU6SXNzdWU2MjYwNTYyMTA=", "number": 1258, "title": "Request for Opendistro SQL Interface", "user": {"login": "metalshanked", "id": 57646596, "node_id": "MDQ6VXNlcjU3NjQ2NTk2", "avatar_url": "https://avatars0.githubusercontent.com/u/57646596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metalshanked", "html_url": "https://github.com/metalshanked", "followers_url": "https://api.github.com/users/metalshanked/followers", "following_url": "https://api.github.com/users/metalshanked/following{/other_user}", "gists_url": "https://api.github.com/users/metalshanked/gists{/gist_id}", "starred_url": "https://api.github.com/users/metalshanked/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metalshanked/subscriptions", "organizations_url": "https://api.github.com/users/metalshanked/orgs", "repos_url": "https://api.github.com/users/metalshanked/repos", "events_url": "https://api.github.com/users/metalshanked/events{/privacy}", "received_events_url": "https://api.github.com/users/metalshanked/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-27T21:48:57Z", "updated_at": "2020-05-27T21:49:44Z", "closed_at": "2020-05-27T21:49:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n\r\n<!-- Feature request -->\r\n\r\nRequest to add support for Opendistro SQL using the GET _opendistro/_sql endpoint.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1251", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1251/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1251/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1251/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1251", "id": 624344953, "node_id": "MDU6SXNzdWU2MjQzNDQ5NTM=", "number": 1251, "title": "[7.7.0] DeprecationWarning types removal on es.update", "user": {"login": "staticdev", "id": 1446633, "node_id": "MDQ6VXNlcjE0NDY2MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1446633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/staticdev", "html_url": "https://github.com/staticdev", "followers_url": "https://api.github.com/users/staticdev/followers", "following_url": "https://api.github.com/users/staticdev/following{/other_user}", "gists_url": "https://api.github.com/users/staticdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/staticdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/staticdev/subscriptions", "organizations_url": "https://api.github.com/users/staticdev/orgs", "repos_url": "https://api.github.com/users/staticdev/repos", "events_url": "https://api.github.com/users/staticdev/events{/privacy}", "received_events_url": "https://api.github.com/users/staticdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-25T14:47:58Z", "updated_at": "2020-05-27T11:20:30Z", "closed_at": "2020-05-26T19:12:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the feature**: I am calling es.update with index, id and body, everytime I get:\r\n\r\n`ElasticsearchDeprecationWarning: [types removal] Specifying types in document update requests is deprecated, use the endpoint /{index}/_update/{id} instead.`\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.7.0\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: 7.7.0\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nThe function es.update works but I get this annoying log for each request.\r\n\r\n**Steps to reproduce**:\r\nI have wrapped the call in the function:\r\n\r\n```\r\nimport datetime\r\nimport os  # get environment variables\r\nimport elasticsearch\r\n\r\nURL_ELASTIC = os.environ.get(\"URL_ELASTIC\")\r\nINDEXNAME = \"documents\"\r\nES = elasticsearch.Elasticsearch(hosts=[URL_ELASTIC])\r\n\r\ndef doc_close_update(\r\n    es_id,\r\n    msgresponse,\r\n):\r\n    \"\"\"Updates documents with final time and message.\"\"\"\r\n    body = {\r\n        \"doc\": {\r\n            \"msgresponse\": msgresponse,\r\n            \"timeresponse\": datetime.datetime.utcnow(),\r\n            \"error\": False,\r\n        }\r\n    }\r\n    return ES.update(index=INDEXNAME, id=es_id, body=body)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1250", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1250/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1250/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1250/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1250", "id": 623820210, "node_id": "MDU6SXNzdWU2MjM4MjAyMTA=", "number": 1250, "title": "python elasticsearch \u83b7\u53d6\u6570\u636e\u603b\u662f\u7f3a\u5c11\u6700\u65b0\u7684\u6570\u636e\u3002", "user": {"login": "tigerbin", "id": 13775090, "node_id": "MDQ6VXNlcjEzNzc1MDkw", "avatar_url": "https://avatars2.githubusercontent.com/u/13775090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tigerbin", "html_url": "https://github.com/tigerbin", "followers_url": "https://api.github.com/users/tigerbin/followers", "following_url": "https://api.github.com/users/tigerbin/following{/other_user}", "gists_url": "https://api.github.com/users/tigerbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/tigerbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tigerbin/subscriptions", "organizations_url": "https://api.github.com/users/tigerbin/orgs", "repos_url": "https://api.github.com/users/tigerbin/repos", "events_url": "https://api.github.com/users/tigerbin/events{/privacy}", "received_events_url": "https://api.github.com/users/tigerbin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-24T08:30:42Z", "updated_at": "2020-05-28T15:32:05Z", "closed_at": "2020-05-28T15:32:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "python2.7    elasticsearch-6.8.1   elasticsearch-7.0.0  elasticsearch-7.7.0  \u90fd\u6d4b\u8bd5\u8fc7\u4e86\uff0c\u83b7\u53d6\u6570\u636e\u603b\u7f3a\u5c11\u6700\u65b0\u7684\u4e00\u6761\u6570\u636e\u3002\r\n\u83b7\u53d6\u7684hits\u7684total\u6bd4\u5982\u662f7\uff0c\u7ed3\u679c\u4ecepython es\u62ff\u5230\u7684\u662f6\u6761\u6570\u636e\uff0c\u76f4\u63a5curl \u62ff\u53d6\u6570\u636e\u6b63\u5e38\u3002", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1245", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1245/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1245/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1245/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1245", "id": 621890846, "node_id": "MDU6SXNzdWU2MjE4OTA4NDY=", "number": 1245, "title": " Raising the thread_count when using parallel_bulk does not increase the speed of bulk insertion", "user": {"login": "taogeYT", "id": 25281138, "node_id": "MDQ6VXNlcjI1MjgxMTM4", "avatar_url": "https://avatars1.githubusercontent.com/u/25281138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taogeYT", "html_url": "https://github.com/taogeYT", "followers_url": "https://api.github.com/users/taogeYT/followers", "following_url": "https://api.github.com/users/taogeYT/following{/other_user}", "gists_url": "https://api.github.com/users/taogeYT/gists{/gist_id}", "starred_url": "https://api.github.com/users/taogeYT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taogeYT/subscriptions", "organizations_url": "https://api.github.com/users/taogeYT/orgs", "repos_url": "https://api.github.com/users/taogeYT/repos", "events_url": "https://api.github.com/users/taogeYT/events{/privacy}", "received_events_url": "https://api.github.com/users/taogeYT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-20T16:15:25Z", "updated_at": "2020-05-22T12:14:13Z", "closed_at": "2020-05-21T16:38:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "elasticsearch version: 7.5.0\r\nelasticsearch-py version: 7.5.1\r\npython version: 3.7.4\r\n\r\ni try to use helpers.parallel_bulk to bulk insert, but the speed of bulk insertion seems does not increase while i change thread_count from 1 to 8, it seems es client instance limit speed. then i use mutiprocess and create es client instance for each process,the speed of bulk insertion can increase\r\n```\r\nimport time\r\nfrom elasticsearch import Elasticsearch, helpers\r\n\r\ndef read_docs():\r\n    with open(\"dst.txt\") as f:\r\n        for line in f:\r\n            doc = dict(zip((\"a\", \"b\"), line.strip().split(\",\")))\r\n            yield {\"_index\": \"dst_test\", \"_source\": doc}\r\n\r\ndocs = read_docs()\r\nstart = time.time()\r\nes = Elasticsearch()\r\nfor _ in helpers.parallel_bulk(es, docs, thread_count=2):\r\n    pass\r\nprint(time.time() - start)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1240", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1240/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1240/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1240/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1240", "id": 620843612, "node_id": "MDU6SXNzdWU2MjA4NDM2MTI=", "number": 1240, "title": "Hi, I am getting the following error, couldn't find solution anywhere. Please help. I am stuck on this since long time.  elasticsearch.exceptions.ConnectionError: ConnectionError(HTTPConnectionPool(host='localhost', port=9200): Max retries exceeded with url: /keywords (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x1109ffb50>: Failed to establish a new connection: [Errno 61] Connection refused'))) caused by: ConnectionError(HTTPConnectionPool(host='localhost', port=9200): Max retries exceeded with url: /keywords (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x1109ffb50>: Failed to establish a new connection: [Errno 61] Connection refused')))", "user": {"login": "akash-agr", "id": 57613792, "node_id": "MDQ6VXNlcjU3NjEzNzky", "avatar_url": "https://avatars2.githubusercontent.com/u/57613792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akash-agr", "html_url": "https://github.com/akash-agr", "followers_url": "https://api.github.com/users/akash-agr/followers", "following_url": "https://api.github.com/users/akash-agr/following{/other_user}", "gists_url": "https://api.github.com/users/akash-agr/gists{/gist_id}", "starred_url": "https://api.github.com/users/akash-agr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akash-agr/subscriptions", "organizations_url": "https://api.github.com/users/akash-agr/orgs", "repos_url": "https://api.github.com/users/akash-agr/repos", "events_url": "https://api.github.com/users/akash-agr/events{/privacy}", "received_events_url": "https://api.github.com/users/akash-agr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T09:58:36Z", "updated_at": "2020-05-19T10:19:32Z", "closed_at": "2020-05-19T10:19:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: \r\n\r\nPlease make sure the major version matches the Elasticsearch server you are running.\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\n**Steps to reproduce**:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1239", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1239/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1239/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1239/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1239", "id": 620843128, "node_id": "MDU6SXNzdWU2MjA4NDMxMjg=", "number": 1239, "title": "ConnectionError(HTTPConnectionPool(host='localhost', port=9200): Max retries exceeded with url", "user": {"login": "akash-agr", "id": 57613792, "node_id": "MDQ6VXNlcjU3NjEzNzky", "avatar_url": "https://avatars2.githubusercontent.com/u/57613792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akash-agr", "html_url": "https://github.com/akash-agr", "followers_url": "https://api.github.com/users/akash-agr/followers", "following_url": "https://api.github.com/users/akash-agr/following{/other_user}", "gists_url": "https://api.github.com/users/akash-agr/gists{/gist_id}", "starred_url": "https://api.github.com/users/akash-agr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akash-agr/subscriptions", "organizations_url": "https://api.github.com/users/akash-agr/orgs", "repos_url": "https://api.github.com/users/akash-agr/repos", "events_url": "https://api.github.com/users/akash-agr/events{/privacy}", "received_events_url": "https://api.github.com/users/akash-agr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T09:57:50Z", "updated_at": "2020-05-19T14:29:18Z", "closed_at": "2020-05-19T14:29:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: \r\n\r\nPlease make sure the major version matches the Elasticsearch server you are running.\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\n**Steps to reproduce**:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1238", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1238/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1238/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1238/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1238", "id": 620586079, "node_id": "MDU6SXNzdWU2MjA1ODYwNzk=", "number": 1238, "title": "ConnectionError(Could not find a suitable TLS CA certificate bundle)", "user": {"login": "aliartiza75", "id": 10731156, "node_id": "MDQ6VXNlcjEwNzMxMTU2", "avatar_url": "https://avatars2.githubusercontent.com/u/10731156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliartiza75", "html_url": "https://github.com/aliartiza75", "followers_url": "https://api.github.com/users/aliartiza75/followers", "following_url": "https://api.github.com/users/aliartiza75/following{/other_user}", "gists_url": "https://api.github.com/users/aliartiza75/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliartiza75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliartiza75/subscriptions", "organizations_url": "https://api.github.com/users/aliartiza75/orgs", "repos_url": "https://api.github.com/users/aliartiza75/repos", "events_url": "https://api.github.com/users/aliartiza75/events{/privacy}", "received_events_url": "https://api.github.com/users/aliartiza75/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T00:25:03Z", "updated_at": "2020-05-19T07:21:41Z", "closed_at": "2020-05-19T02:51:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n7.4\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: \r\nelasticsearch==7.6.0\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nI am trying to insert data in an elasticsearch index but getting this error:\r\n\r\nScript:\r\n\r\n```python3\r\nfrom elasticsearch import Elasticsearch, RequestsHttpConnection\r\nelasticsearch_client_obj = Elasticsearch(\r\n                                             hosts=[{'host': ES_HOST, 'port': 443}],\r\n                                             http_auth=awsauth,\r\n                                             use_ssl=True,\r\n                                             verify_certs=True,\r\n                                             connection_class=RequestsHttpConnection\r\n                                            )\r\n\r\nelasticsearch_client_obj.index(index=ES_INDEX, doc_type=\"_doc\", body=data)\r\n```\r\n\r\n\r\nError:\r\n```bash\r\n{\r\n  \"errorMessage\": \"ConnectionError(Could not find a suitable TLS CA certificate bundle, invalid path: /etc/ssl/certs/ca-certificates.crt) caused by: OSError(Could not find a suitable TLS CA certificate bundle, invalid path: /etc/ssl/certs/ca-certificates.crt)\",\r\n  \"errorType\": \"ConnectionError\",\r\n  \"stackTrace\": [\r\n    \"  File \\\"/var/task/epm-middleware-dlq-lambda.py\\\", line 101, in lambda_handler\\n    client.index(index=ES_INDEX, doc_type=\\\"_doc\\\", body=data)\\n\",\r\n    \"  File \\\"/var/task/elasticsearch/client/utils.py\\\", line 92, in _wrapped\\n    return func(*args, params=params, headers=headers, **kwargs)\\n\",\r\n    \"  File \\\"/var/task/elasticsearch/client/__init__.py\\\", line 407, in index\\n    body=body,\\n\",\r\n    \"  File \\\"/var/task/elasticsearch/transport.py\\\", line 362, in perform_request\\n    timeout=timeout,\\n\",\r\n    \"  File \\\"/var/task/elasticsearch/connection/http_requests.py\\\", line 157, in perform_request\\n    raise ConnectionError(\\\"N/A\\\", str(e), e)\\n\"\r\n  ]\r\n}\r\n```\r\n\r\n\r\n**Steps to reproduce**:\r\n\r\n1. Run the script given above.\r\n\r\nWhen I assign `verify_certs` param `False` it works perfectly fine.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1234", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1234/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1234/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1234/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1234", "id": 618539144, "node_id": "MDU6SXNzdWU2MTg1MzkxNDQ=", "number": 1234, "title": "/_cluster/health/<index>?wait_for_status=3h times out after 5 minutes", "user": {"login": "aldenstpage", "id": 25728015, "node_id": "MDQ6VXNlcjI1NzI4MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/25728015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldenstpage", "html_url": "https://github.com/aldenstpage", "followers_url": "https://api.github.com/users/aldenstpage/followers", "following_url": "https://api.github.com/users/aldenstpage/following{/other_user}", "gists_url": "https://api.github.com/users/aldenstpage/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldenstpage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldenstpage/subscriptions", "organizations_url": "https://api.github.com/users/aldenstpage/orgs", "repos_url": "https://api.github.com/users/aldenstpage/repos", "events_url": "https://api.github.com/users/aldenstpage/events{/privacy}", "received_events_url": "https://api.github.com/users/aldenstpage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-14T21:13:08Z", "updated_at": "2020-05-14T21:24:11Z", "closed_at": "2020-05-14T21:19:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Bug report -->\r\n\r\n**Elasticsearch version** 7.6.2):\r\n\r\n**`elasticsearch-py` version**: 7.0.0 \r\n\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nI have a piece of infrastructure that relies on /_cluster/health/<index> with `wait_for_status=3h`. After I finish recreating my index, I turn replica shards back on, and then wait for the status of the index to switch to green. This index is fairly large, which means it can be over an hour before the new index becomes healthy, so I set the cap at three hours. However, elasticsearch-py times out after 5 minutes instead. My guess is that this library caps the urllib timeout somewhere, breaking long-running healthchecks.\r\n\r\nHere's the corresponding elasticsearch-py call:\r\n```\r\nes.cluster.health(\r\n    index=write_index,\r\n    wait_for_status='green',\r\n    timeout=\"3h\"\r\n)\r\n```\r\n\r\nIt's called right after this \"Waiting for replica shards. . .\" log message. You can see from the timestamps that three hours has not passed.\r\n```\r\n2020-05-09 02:31:20,966 INFO indexer.py:331 - Waiting for replica shards. . .\r\n2020-05-09 02:36:20,992 WARNING base.py:212 - GET <cluster endpoint removed>/_cluster/health/image-e94697a961ca49d7a25e28fc3deb077c?timeout=3h&wait_for_status=green [status:N/A request:300.025s]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 426, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"/usr/local/lib/python3.7/http/client.py\", line 1344, in getresponse\r\n    response.begin()\r\n  File \"/usr/local/lib/python3.7/http/client.py\", line 306, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/usr/local/lib/python3.7/http/client.py\", line 267, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"/usr/local/lib/python3.7/socket.py\", line 589, in readinto\r\n    return self._sock.recv_into(b)\r\nsocket.timeout: timed out\r\n```\r\n\r\n**Steps to reproduce**:\r\nCall `es.cluster.health(index=your_test_index, wait_for_status='red', timeout=\"3h\")` and watch it time out after five minutes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1225", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1225/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1225/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1225/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1225", "id": 610750917, "node_id": "MDU6SXNzdWU2MTA3NTA5MTc=", "number": 1225, "title": "Mixing courseware_index from 2 servers", "user": {"login": "eazaika", "id": 39516501, "node_id": "MDQ6VXNlcjM5NTE2NTAx", "avatar_url": "https://avatars2.githubusercontent.com/u/39516501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eazaika", "html_url": "https://github.com/eazaika", "followers_url": "https://api.github.com/users/eazaika/followers", "following_url": "https://api.github.com/users/eazaika/following{/other_user}", "gists_url": "https://api.github.com/users/eazaika/gists{/gist_id}", "starred_url": "https://api.github.com/users/eazaika/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eazaika/subscriptions", "organizations_url": "https://api.github.com/users/eazaika/orgs", "repos_url": "https://api.github.com/users/eazaika/repos", "events_url": "https://api.github.com/users/eazaika/events{/privacy}", "received_events_url": "https://api.github.com/users/eazaika/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-01T13:29:01Z", "updated_at": "2020-05-05T07:59:29Z", "closed_at": "2020-05-04T13:52:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "elasticsearch-py 1.9.0, python 2.7\r\nThere are 2 same servers in one subnet. Using for indexing online courses (open edX, hawthorn). When you Reindex course on first server it appears in courseware_index of second server. \r\nI have no idea how it happens ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1224", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1224/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1224/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1224/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1224", "id": 608009138, "node_id": "MDU6SXNzdWU2MDgwMDkxMzg=", "number": 1224, "title": "Has elasticsearch-py-async been abandoned?", "user": {"login": "shadiramadan", "id": 875944, "node_id": "MDQ6VXNlcjg3NTk0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/875944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shadiramadan", "html_url": "https://github.com/shadiramadan", "followers_url": "https://api.github.com/users/shadiramadan/followers", "following_url": "https://api.github.com/users/shadiramadan/following{/other_user}", "gists_url": "https://api.github.com/users/shadiramadan/gists{/gist_id}", "starred_url": "https://api.github.com/users/shadiramadan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shadiramadan/subscriptions", "organizations_url": "https://api.github.com/users/shadiramadan/orgs", "repos_url": "https://api.github.com/users/shadiramadan/repos", "events_url": "https://api.github.com/users/shadiramadan/events{/privacy}", "received_events_url": "https://api.github.com/users/shadiramadan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-28T04:08:07Z", "updated_at": "2020-05-08T18:00:38Z", "closed_at": "2020-04-28T12:06:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "See https://github.com/elastic/elasticsearch-py-async/issues/78", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1221", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1221/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1221/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1221/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1221", "id": 607540889, "node_id": "MDU6SXNzdWU2MDc1NDA4ODk=", "number": 1221, "title": "bearer token connections", "user": {"login": "ryandawsonuk", "id": 22754674, "node_id": "MDQ6VXNlcjIyNzU0Njc0", "avatar_url": "https://avatars0.githubusercontent.com/u/22754674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryandawsonuk", "html_url": "https://github.com/ryandawsonuk", "followers_url": "https://api.github.com/users/ryandawsonuk/followers", "following_url": "https://api.github.com/users/ryandawsonuk/following{/other_user}", "gists_url": "https://api.github.com/users/ryandawsonuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryandawsonuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryandawsonuk/subscriptions", "organizations_url": "https://api.github.com/users/ryandawsonuk/orgs", "repos_url": "https://api.github.com/users/ryandawsonuk/repos", "events_url": "https://api.github.com/users/ryandawsonuk/events{/privacy}", "received_events_url": "https://api.github.com/users/ryandawsonuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-27T13:16:32Z", "updated_at": "2020-04-30T17:32:18Z", "closed_at": "2020-04-27T16:28:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've an elasticsearch configured that I can connect to with requests using header `Authorization` of the form `Bear <token>`. It is [installed on openshift and using its auth](https://github.com/openshift/elasticsearch-operator/issues/325). I can connect to it using `curl` but can't see any way to connect using the python client.\r\n\r\nI see that the client has support for [ApiKeys](https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html) but that is different. I've tried using the form `ApiKey <token>` and `ApiKey <base64encoded-token>` but can't successfully connect like that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1213", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1213/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1213/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1213/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1213", "id": 604882648, "node_id": "MDU6SXNzdWU2MDQ4ODI2NDg=", "number": 1213, "title": "Does this project follow semantic versioning?", "user": {"login": "alvassin", "id": 1497444, "node_id": "MDQ6VXNlcjE0OTc0NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1497444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvassin", "html_url": "https://github.com/alvassin", "followers_url": "https://api.github.com/users/alvassin/followers", "following_url": "https://api.github.com/users/alvassin/following{/other_user}", "gists_url": "https://api.github.com/users/alvassin/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvassin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvassin/subscriptions", "organizations_url": "https://api.github.com/users/alvassin/orgs", "repos_url": "https://api.github.com/users/alvassin/repos", "events_url": "https://api.github.com/users/alvassin/events{/privacy}", "received_events_url": "https://api.github.com/users/alvassin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-22T16:13:29Z", "updated_at": "2020-04-22T23:19:06Z", "closed_at": "2020-04-22T23:19:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can i use this project with `~=` operator? Does it follow [Semantic versioning](https://semver.org)?\r\n \r\n```\r\nelasticsearch~=7.6.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1211", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1211/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1211/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1211/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1211", "id": 603385135, "node_id": "MDU6SXNzdWU2MDMzODUxMzU=", "number": 1211, "title": "Feature request : Support for OpenID connect", "user": {"login": "Augustin-FL", "id": 9406403, "node_id": "MDQ6VXNlcjk0MDY0MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9406403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Augustin-FL", "html_url": "https://github.com/Augustin-FL", "followers_url": "https://api.github.com/users/Augustin-FL/followers", "following_url": "https://api.github.com/users/Augustin-FL/following{/other_user}", "gists_url": "https://api.github.com/users/Augustin-FL/gists{/gist_id}", "starred_url": "https://api.github.com/users/Augustin-FL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Augustin-FL/subscriptions", "organizations_url": "https://api.github.com/users/Augustin-FL/orgs", "repos_url": "https://api.github.com/users/Augustin-FL/repos", "events_url": "https://api.github.com/users/Augustin-FL/events{/privacy}", "received_events_url": "https://api.github.com/users/Augustin-FL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-20T16:53:06Z", "updated_at": "2020-04-20T18:24:21Z", "closed_at": "2020-04-20T18:23:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\n**Describe the feature**:\r\n\r\nSince version 7.2, elasticsearch [does support OpenID (oauth2) as authentication method]( https://www.elastic.co/guide/en/elasticsearch/reference/master/oidc-guide-authentication.html).\r\n\r\n\r\nIt would be desirable to have some python functions that would perform the oauth2 authentication on elastic using ```Client Credentials``` or ```ressource owner password``` grant type (the two other oauth2 grant types (```Implicit``` and ```Authorization Code```), are not designed for script authentication)\r\n\r\nThis would be a nice to have. The elastic python package only support basic or API authentication right now...\r\n\r\n\r\nWould it be possible to integrate this in the future ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1204", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1204/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1204/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1204/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1204", "id": 602587258, "node_id": "MDU6SXNzdWU2MDI1ODcyNTg=", "number": 1204, "title": "Support for CBOR?", "user": {"login": "bordercore", "id": 287894, "node_id": "MDQ6VXNlcjI4Nzg5NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/287894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bordercore", "html_url": "https://github.com/bordercore", "followers_url": "https://api.github.com/users/bordercore/followers", "following_url": "https://api.github.com/users/bordercore/following{/other_user}", "gists_url": "https://api.github.com/users/bordercore/gists{/gist_id}", "starred_url": "https://api.github.com/users/bordercore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bordercore/subscriptions", "organizations_url": "https://api.github.com/users/bordercore/orgs", "repos_url": "https://api.github.com/users/bordercore/repos", "events_url": "https://api.github.com/users/bordercore/events{/privacy}", "received_events_url": "https://api.github.com/users/bordercore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-19T00:49:07Z", "updated_at": "2020-04-23T13:50:55Z", "closed_at": "2020-04-23T13:50:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\nDoes this package support the CBOR binary format, as mentioned [here](https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest-attachment.html)? And if not, would it be feasible to add it? I'd like to use it with the ingest plugin to avoid the overhead of base64 for large documents.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1196", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1196/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1196/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1196/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1196", "id": 596558195, "node_id": "MDU6SXNzdWU1OTY1NTgxOTU=", "number": 1196, "title": "Error in documentation for es.search function", "user": {"login": "bfishh", "id": 5025023, "node_id": "MDQ6VXNlcjUwMjUwMjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5025023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bfishh", "html_url": "https://github.com/bfishh", "followers_url": "https://api.github.com/users/bfishh/followers", "following_url": "https://api.github.com/users/bfishh/following{/other_user}", "gists_url": "https://api.github.com/users/bfishh/gists{/gist_id}", "starred_url": "https://api.github.com/users/bfishh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bfishh/subscriptions", "organizations_url": "https://api.github.com/users/bfishh/orgs", "repos_url": "https://api.github.com/users/bfishh/repos", "events_url": "https://api.github.com/users/bfishh/events{/privacy}", "received_events_url": "https://api.github.com/users/bfishh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1888178015, "node_id": "MDU6TGFiZWwxODg4MTc4MDE1", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/good%20first%20issue", "name": "good first issue", "color": "000000", "default": true, "description": "Issues that are good for new contributors"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-08T12:58:24Z", "updated_at": "2020-04-27T16:24:26Z", "closed_at": "2020-04-27T16:24:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "In this doc:\r\nhttps://elasticsearch-py.readthedocs.io/en/master/api.html#elasticsearch\r\nfor \"serach\" function offset parameter is named as \"from\" but in code it is \"from_\".\r\nThe name \"from\" is invalid and causes invalid syntax error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1186", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1186/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1186/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1186/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1186", "id": 591158107, "node_id": "MDU6SXNzdWU1OTExNTgxMDc=", "number": 1186, "title": "elasticsearch6 6.8.0 clobbers previously installed elasticsearch", "user": {"login": "zachgoulet", "id": 24616340, "node_id": "MDQ6VXNlcjI0NjE2MzQw", "avatar_url": "https://avatars1.githubusercontent.com/u/24616340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachgoulet", "html_url": "https://github.com/zachgoulet", "followers_url": "https://api.github.com/users/zachgoulet/followers", "following_url": "https://api.github.com/users/zachgoulet/following{/other_user}", "gists_url": "https://api.github.com/users/zachgoulet/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachgoulet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachgoulet/subscriptions", "organizations_url": "https://api.github.com/users/zachgoulet/orgs", "repos_url": "https://api.github.com/users/zachgoulet/repos", "events_url": "https://api.github.com/users/zachgoulet/events{/privacy}", "received_events_url": "https://api.github.com/users/zachgoulet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1888260438, "node_id": "MDU6TGFiZWwxODg4MjYwNDM4", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/6.x", "name": "6.x", "color": "9350b2", "default": false, "description": "This PR or Issue affects or needs to be backported to 6.x"}, {"id": 38099491, "node_id": "MDU6TGFiZWwzODA5OTQ5MQ==", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/bug", "name": "bug", "color": "c92118", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-31T14:30:28Z", "updated_at": "2020-03-31T17:39:36Z", "closed_at": "2020-03-31T17:39:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Elasticsearch version** (`bin/elasticsearch --version`): `6.8.0`\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: `6.8.0`\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nAs of `elasticsearch6==6.8.0`, install `elasticsearch6` will clobber the existing installation of `elasticsearch`. Previously, `elasticsearch6` could be installed alongside `elasticsearch` without issue.\r\n\r\n**Steps to reproduce**:\r\n\r\n## `elasticsearch6<6.8.0`\r\n\r\n```\r\n$ pip install elasticsearch\r\n...\r\nSuccessfully installed elasticsearch-7.6.0 urllib3-1.25.8\r\n$ pip freeze\r\nelasticsearch==7.6.0\r\nurllib3==1.25.8\r\n$ python -c 'import elasticsearch; print(elasticsearch.__version__)'\r\n(7, 6, 0)\r\n$ pip install 'elasticsearch6<6.8.0'\r\n...\r\nSuccessfully installed elasticsearch6-6.4.2\r\n$ pip freeze\r\nelasticsearch==7.6.0\r\nelasticsearch6==6.4.2\r\nurllib3==1.25.8\r\n$ python -c 'import elasticsearch; print(elasticsearch.__version__)'\r\n(7, 6, 0)\r\n```\r\n\r\n## `elasticsearch6~=6.8`\r\n\r\n```\r\n$ pip install elasticsearch\r\n...\r\nSuccessfully installed elasticsearch-7.6.0 urllib3-1.25.8\r\n$ pip freeze\r\nelasticsearch==7.6.0\r\nurllib3==1.25.8\r\n$ python -c 'import elasticsearch; print(elasticsearch.__version__)'\r\n(7, 6, 0)\r\n$ pip install 'elasticsearch6~=6.8.0'\r\n...\r\nSuccessfully installed elasticsearch6-6.8.0\r\n$ pip freeze\r\nelasticsearch==7.6.0\r\nelasticsearch6==6.8.0\r\nurllib3==1.25.8\r\n$ python -c 'import elasticsearch; print(elasticsearch.__version__)'\r\n(6, 8, 0)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1181", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1181/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1181/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1181/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1181", "id": 590266103, "node_id": "MDU6SXNzdWU1OTAyNjYxMDM=", "number": 1181, "title": "Using HTTPS without certifi installed gives bad UX", "user": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38099493, "node_id": "MDU6TGFiZWwzODA5OTQ5Mw==", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1888178015, "node_id": "MDU6TGFiZWwxODg4MTc4MDE1", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/good%20first%20issue", "name": "good first issue", "color": "000000", "default": true, "description": "Issues that are good for new contributors"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-30T12:52:40Z", "updated_at": "2020-03-31T15:42:56Z", "closed_at": "2020-03-31T15:42:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Especially when using `cloud_id` since user doesn't know explicitly that HTTPS is being used. Maybe we should simply add certifi as a dependency? But in the meantime we should document this better, esp in the Cloud ID section.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1178", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1178/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1178/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1178/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1178", "id": 586526209, "node_id": "MDU6SXNzdWU1ODY1MjYyMDk=", "number": 1178, "title": "Support serializing numpy and pandas types when available", "user": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1888260438, "node_id": "MDU6TGFiZWwxODg4MjYwNDM4", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/6.x", "name": "6.x", "color": "9350b2", "default": false, "description": "This PR or Issue affects or needs to be backported to 6.x"}, {"id": 1888261043, "node_id": "MDU6TGFiZWwxODg4MjYxMDQz", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/7.x", "name": "7.x", "color": "9350b2", "default": false, "description": "This PR or Issue affects or needs to be backported to 7.x"}, {"id": 38099493, "node_id": "MDU6TGFiZWwzODA5OTQ5Mw==", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-23T21:21:14Z", "updated_at": "2020-03-30T14:30:54Z", "closed_at": "2020-03-30T14:30:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Created this issue to resolve this: https://github.com/elastic/eland/issues/142\r\n\r\nI'm thinking we can try importing `numpy` and `pandas` and if we detect either of those modules drop in to a separate section in `JSONSerializer.default()` that handles all the types automatically. I figure it's easier for us to do this once in the client than force everyone using numpy+elasticsearch to maintain this snippet themselves.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1173", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1173/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1173/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1173/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1173", "id": 586364408, "node_id": "MDU6SXNzdWU1ODYzNjQ0MDg=", "number": 1173, "title": "es search with size 1 crashes", "user": {"login": "dpgaspar", "id": 4025227, "node_id": "MDQ6VXNlcjQwMjUyMjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4025227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpgaspar", "html_url": "https://github.com/dpgaspar", "followers_url": "https://api.github.com/users/dpgaspar/followers", "following_url": "https://api.github.com/users/dpgaspar/following{/other_user}", "gists_url": "https://api.github.com/users/dpgaspar/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpgaspar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpgaspar/subscriptions", "organizations_url": "https://api.github.com/users/dpgaspar/orgs", "repos_url": "https://api.github.com/users/dpgaspar/repos", "events_url": "https://api.github.com/users/dpgaspar/events{/privacy}", "received_events_url": "https://api.github.com/users/dpgaspar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-23T17:03:29Z", "updated_at": "2020-03-23T17:30:10Z", "closed_at": "2020-03-23T17:30:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.5.1\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: 7.5.1\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nWhen running:\r\n```\r\nfrom elasticsearch import Elasticsearch\r\nes = Elasticsearch('localhost')\r\nes.search(\"kibana_sample_data_flights\", size=1)\r\n```\r\n\r\nI get:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/dpgaspar/workarea/preset/elasticsearch-dbapi/venv/lib/python3.6/site-packages/elasticsearch/client/utils.py\", line 84, in _wrapped\r\n    return func(*args, params=params, **kwargs)\r\n  File \"/home/dpgaspar/workarea/preset/elasticsearch-dbapi/venv/lib/python3.6/site-packages/elasticsearch/client/__init__.py\", line 1548, in search\r\n    \"GET\", _make_path(index, doc_type, \"_search\"), params=params, body=body\r\n  File \"/home/dpgaspar/workarea/preset/elasticsearch-dbapi/venv/lib/python3.6/site-packages/elasticsearch/transport.py\", line 358, in perform_request\r\n    timeout=timeout,\r\n  File \"/home/dpgaspar/workarea/preset/elasticsearch-dbapi/venv/lib/python3.6/site-packages/elasticsearch/connection/http_urllib3.py\", line 261, in perform_request\r\n    self._raise_error(response.status, raw_data)\r\n  File \"/home/dpgaspar/workarea/preset/elasticsearch-dbapi/venv/lib/python3.6/site-packages/elasticsearch/connection/base.py\", line 182, in _raise_error\r\n    status_code, error_message, additional_info\r\nelasticsearch.exceptions.TransportError: TransportError(500, 'json_parse_exception', \"Unrecognized token 'kibana_sample_data_flights': was expecting ('true', 'false' or 'null')\\n at [Source: org.elasticsearch.transport.netty4.ByteBufStreamInput@16a3a10d; line: 1, column: 53]\")\r\n\r\n```\r\n\r\nRelated issues: \r\nhttps://github.com/preset-io/elasticsearch-dbapi/issues/19\r\nhttps://github.com/preset-io/elasticsearch-dbapi/issues/20\r\n\r\nNote: Works fine on elasticsearch-py 7.1.0 for example", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1172", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1172/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1172/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1172/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1172", "id": 586112199, "node_id": "MDU6SXNzdWU1ODYxMTIxOTk=", "number": 1172, "title": "Search is performing a POST request instead of a GET request after 7.6.0", "user": {"login": "menecio", "id": 924245, "node_id": "MDQ6VXNlcjkyNDI0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/924245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/menecio", "html_url": "https://github.com/menecio", "followers_url": "https://api.github.com/users/menecio/followers", "following_url": "https://api.github.com/users/menecio/following{/other_user}", "gists_url": "https://api.github.com/users/menecio/gists{/gist_id}", "starred_url": "https://api.github.com/users/menecio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/menecio/subscriptions", "organizations_url": "https://api.github.com/users/menecio/orgs", "repos_url": "https://api.github.com/users/menecio/repos", "events_url": "https://api.github.com/users/menecio/events{/privacy}", "received_events_url": "https://api.github.com/users/menecio/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38099495, "node_id": "MDU6TGFiZWwzODA5OTQ5NQ==", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-23T10:48:03Z", "updated_at": "2020-03-23T19:12:09Z", "closed_at": "2020-03-23T19:12:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nWith the release of `7.6.0` a big change in the `.search()` behavior was introduced, now it doesn't perform a `GET` request but a `POST` request, this affects credentials with Read-Only permissions resulting in `403 Forbidden` errors. \r\n\r\nWas this expected? If so, it should be mentioned in the changelog as a breaking change.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1168", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1168/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1168/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1168/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1168", "id": 584995130, "node_id": "MDU6SXNzdWU1ODQ5OTUxMzA=", "number": 1168, "title": "Changelog missing 7.6.0 release notes", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T11:07:00Z", "updated_at": "2020-03-20T13:08:22Z", "closed_at": "2020-03-20T13:08:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/elastic/elasticsearch-py/blob/master/Changelog.rst does not mention the recent 7.6.0 release. Please document what has changed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1167", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1167/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1167/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1167/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1167", "id": 584928550, "node_id": "MDU6SXNzdWU1ODQ5Mjg1NTA=", "number": 1167, "title": "New forced \"headers\" paramter in 7.6.0 breaks perform_request()", "user": {"login": "nicoknoll", "id": 1143670, "node_id": "MDQ6VXNlcjExNDM2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1143670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoknoll", "html_url": "https://github.com/nicoknoll", "followers_url": "https://api.github.com/users/nicoknoll/followers", "following_url": "https://api.github.com/users/nicoknoll/following{/other_user}", "gists_url": "https://api.github.com/users/nicoknoll/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoknoll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoknoll/subscriptions", "organizations_url": "https://api.github.com/users/nicoknoll/orgs", "repos_url": "https://api.github.com/users/nicoknoll/repos", "events_url": "https://api.github.com/users/nicoknoll/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoknoll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T09:01:41Z", "updated_at": "2020-03-20T13:58:17Z", "closed_at": "2020-03-20T09:02:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "The change made here https://github.com/elastic/elasticsearch-py/compare/7.6.0...master#diff-4b82dd6c9c34917fa2179655e8bb0b51R92 in version 7.6.0 that forces `headers` to be in the `func` call breaks the perform_request method:\r\n\r\n```\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch_dsl/search.py\", line 698, in execute\r\n\r\n    **self._params\r\n\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/client/utils.py\", line 92, in _wrapped\r\n\r\n    return func(*args, params=params, headers=headers, **kwargs)\r\n\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/client/__init__.py\", line 1627, in search\r\n\r\n    body=body,\r\n\r\nTypeError: perform_request() got an unexpected keyword argument 'headers'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1158", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1158/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1158/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1158/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1158", "id": 581356026, "node_id": "MDU6SXNzdWU1ODEzNTYwMjY=", "number": 1158, "title": "How to aggregate data with date range?", "user": {"login": "f0xxx1", "id": 17886033, "node_id": "MDQ6VXNlcjE3ODg2MDMz", "avatar_url": "https://avatars1.githubusercontent.com/u/17886033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f0xxx1", "html_url": "https://github.com/f0xxx1", "followers_url": "https://api.github.com/users/f0xxx1/followers", "following_url": "https://api.github.com/users/f0xxx1/following{/other_user}", "gists_url": "https://api.github.com/users/f0xxx1/gists{/gist_id}", "starred_url": "https://api.github.com/users/f0xxx1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f0xxx1/subscriptions", "organizations_url": "https://api.github.com/users/f0xxx1/orgs", "repos_url": "https://api.github.com/users/f0xxx1/repos", "events_url": "https://api.github.com/users/f0xxx1/events{/privacy}", "received_events_url": "https://api.github.com/users/f0xxx1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-14T20:17:35Z", "updated_at": "2020-03-16T13:25:23Z", "closed_at": "2020-03-16T13:25:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello I have the following problem, whenever I aggregate data, the aggregations and to be more exact the date_histogram is always different. It starts with pretty much random date. \r\n\r\nNote that I am using python datetime objects to get a \"real\" results. I had some problems with the other formats. \r\n```\r\n{\r\n    \"query\": {\r\n        \"bool\": {\r\n            \"filter\": [\r\n                {\r\n                    \"range\": {\r\n                        \"original_date\": {\r\n                            \"gte\": datetime.datetime(2020, 2, 13, 0, 0),\r\n                            \"lte\": datetime.datetime(2020, 2, 15, 23, 0),\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            \"must\": [\r\n                {\r\n                    \"query_string\": {\r\n                        \"query\": \"whatever string\"\r\n                    }\r\n                }\r\n            ],\r\n        }\r\n    },\r\n    \"aggs\": {\r\n        \"docs_histogram\": {\r\n            \"date_histogram\": {\r\n                \"field\": \"original_date\",\r\n                \"interval\": \"hour\",\r\n                \"time_zone\": \"EET\",\r\n            },\r\n            ... (other aggs)\r\n        },\r\n    },\r\n}\r\n```\r\nThe date histogram should be in this range: 2020-02-13 00:00:00 - 2020-02-15 23:00:00 But look at the output's start and end. It starts 1 day later and ends same day 18:00 ??\r\n```\r\n\"buckets\": [\r\n    {\r\n        \"key_as_string\": \"2020-02-14T00:00:00.000+02:00\",\r\n        \"key\": 1581631200000,\r\n        \"doc_count\": 1,\r\n        \"source_name\": {\r\n            \"doc_count_error_upper_bound\": 0,\r\n            \"sum_other_doc_count\": 0,\r\n            \"buckets\": [{\"key\": \"WhateverKey\", \"doc_count\": 1}],\r\n        },\r\n    },\r\n    ...\r\n    {\r\n        \"key_as_string\": \"2020-02-14T18:00:00.000+02:00\",\r\n        \"key\": 1581696000000,\r\n        \"doc_count\": 1,\r\n        \"source_name\": {\r\n            \"doc_count_error_upper_bound\": 0,\r\n            \"sum_other_doc_count\": 0,\r\n            \"buckets\": [{\"key\": \"WhateverKey2\", \"doc_count\": 1}],\r\n        },\r\n    },\r\n]\r\n```\r\n\r\nI don't really get how does this work..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1146", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1146/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1146/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1146/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1146", "id": 578960620, "node_id": "MDU6SXNzdWU1Nzg5NjA2MjA=", "number": 1146, "title": "Request method for search API (GET or POST) should be selectable by users", "user": {"login": "mtatsuma", "id": 48573325, "node_id": "MDQ6VXNlcjQ4NTczMzI1", "avatar_url": "https://avatars2.githubusercontent.com/u/48573325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtatsuma", "html_url": "https://github.com/mtatsuma", "followers_url": "https://api.github.com/users/mtatsuma/followers", "following_url": "https://api.github.com/users/mtatsuma/following{/other_user}", "gists_url": "https://api.github.com/users/mtatsuma/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtatsuma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtatsuma/subscriptions", "organizations_url": "https://api.github.com/users/mtatsuma/orgs", "repos_url": "https://api.github.com/users/mtatsuma/repos", "events_url": "https://api.github.com/users/mtatsuma/events{/privacy}", "received_events_url": "https://api.github.com/users/mtatsuma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-11T02:00:35Z", "updated_at": "2020-03-12T00:25:08Z", "closed_at": "2020-03-12T00:25:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\nCurrent elasticsearch-py uses GET method to call search API.\r\nThe GET request contains a body and a non-zero Content-Length header, which is not common usage of GET requests.\r\n\r\nI run into 411 Length Required response when I use elasticsearch-py to call search API via Squid proxy because Squid proxy does not allow GET requests with non-zero Content-Length header.\r\n\r\nI've checked existing issues and understand the background to use GET method instead of POST described in commit https://github.com/elastic/elasticsearch-py/commit/619e7eb6b20824b9e00de8e1fe402b29c8e0e96d\r\n\r\nSo, the request method for search API should be selectable by users depending on their own environments.\r\n\r\nThanks you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1141", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1141/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1141/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1141/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1141", "id": 578172940, "node_id": "MDU6SXNzdWU1NzgxNzI5NDA=", "number": 1141, "title": "cluster.state(index='name')['routing_table'] not found in client 7.5.1", "user": {"login": "untergeek", "id": 1020383, "node_id": "MDQ6VXNlcjEwMjAzODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1020383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untergeek", "html_url": "https://github.com/untergeek", "followers_url": "https://api.github.com/users/untergeek/followers", "following_url": "https://api.github.com/users/untergeek/following{/other_user}", "gists_url": "https://api.github.com/users/untergeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/untergeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untergeek/subscriptions", "organizations_url": "https://api.github.com/users/untergeek/orgs", "repos_url": "https://api.github.com/users/untergeek/repos", "events_url": "https://api.github.com/users/untergeek/events{/privacy}", "received_events_url": "https://api.github.com/users/untergeek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38099491, "node_id": "MDU6TGFiZWwzODA5OTQ5MQ==", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/bug", "name": "bug", "color": "c92118", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T20:32:32Z", "updated_at": "2020-03-10T16:30:47Z", "closed_at": "2020-03-10T16:30:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Using the most recent release of the Elasticsearch Python client (7.5.1 at this time), the cluster state endpoint is not defaulting to show `_all` keys.\r\n\r\n### 7.5.1\r\n\r\n```\r\nclient.cluster.state(index=idx).keys()\r\ndict_keys(['cluster_name', 'cluster_uuid'])\r\n```\r\n\r\n### 7.1.1:\r\n\r\n```\r\nclient.cluster.state(index=idx).keys()\r\ndict_keys(['cluster_name', 'cluster_uuid', 'version', 'state_uuid', 'master_node', 'blocks', 'nodes', 'metadata', 'routing_table', 'routing_nodes'])\r\n```\r\n\r\nThis omission, if intended, would seem to be something to change in a major release version, rather than a minor release.\r\n\r\nThis was detected and reported [here](https://github.com/elastic/support-dev-help/issues/10455#issue-558049925). This compels me to pin Curator at client version `elasticsearch==7.1.0` for now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1130", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1130/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1130/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1130/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1130", "id": 576388912, "node_id": "MDU6SXNzdWU1NzYzODg5MTI=", "number": 1130, "title": "Dead link in documentation", "user": {"login": "psanz-estc", "id": 44199691, "node_id": "MDQ6VXNlcjQ0MTk5Njkx", "avatar_url": "https://avatars1.githubusercontent.com/u/44199691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psanz-estc", "html_url": "https://github.com/psanz-estc", "followers_url": "https://api.github.com/users/psanz-estc/followers", "following_url": "https://api.github.com/users/psanz-estc/following{/other_user}", "gists_url": "https://api.github.com/users/psanz-estc/gists{/gist_id}", "starred_url": "https://api.github.com/users/psanz-estc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psanz-estc/subscriptions", "organizations_url": "https://api.github.com/users/psanz-estc/orgs", "repos_url": "https://api.github.com/users/psanz-estc/repos", "events_url": "https://api.github.com/users/psanz-estc/events{/privacy}", "received_events_url": "https://api.github.com/users/psanz-estc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-05T16:44:44Z", "updated_at": "2020-03-23T20:45:57Z", "closed_at": "2020-03-23T20:45:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a dead link in the documentation:\r\n\r\nSource: https://elasticsearch-py.readthedocs.io/en/master/helpers.html#bulk-helpers\r\n\r\nThere is a link to: https://github.com/elastic/elasticsearch-py/blob/master/example/load.py#L76-L130\r\n\r\n```\r\ncurl --silent -I https://github.com/elastic/elasticsearch-py/blob/master/example/load.py\\#L76-L130 | head -1\r\nHTTP/1.1 404 Not Found\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1119", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1119/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1119/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1119/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1119", "id": 571410704, "node_id": "MDU6SXNzdWU1NzE0MTA3MDQ=", "number": 1119, "title": "Unexpected keyword argument 'filter_path' in method call", "user": {"login": "nightan42643", "id": 38649296, "node_id": "MDQ6VXNlcjM4NjQ5Mjk2", "avatar_url": "https://avatars0.githubusercontent.com/u/38649296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nightan42643", "html_url": "https://github.com/nightan42643", "followers_url": "https://api.github.com/users/nightan42643/followers", "following_url": "https://api.github.com/users/nightan42643/following{/other_user}", "gists_url": "https://api.github.com/users/nightan42643/gists{/gist_id}", "starred_url": "https://api.github.com/users/nightan42643/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nightan42643/subscriptions", "organizations_url": "https://api.github.com/users/nightan42643/orgs", "repos_url": "https://api.github.com/users/nightan42643/repos", "events_url": "https://api.github.com/users/nightan42643/events{/privacy}", "received_events_url": "https://api.github.com/users/nightan42643/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-26T14:19:04Z", "updated_at": "2020-02-26T16:40:14Z", "closed_at": "2020-02-26T14:57:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: 7.5.1\r\n\r\nPlease make sure the major version matches the Elasticsearch server you are running.\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nI seem to be having a problem with pylint false positives.  Following is my code:\r\n```\r\nres = es.search(index=\"logstash-emailqueue\", filter_path=[\"hits.hits._source.IPAddress\"], body=body)\r\n```\r\nI used the keyword parameter filter_path and it worked as expected, but pylint suggested an error\r\n```\r\nUnexpected keyword argument 'filter_path' in method call\r\n```\r\nIt does not affect the working of the code, but it is very uncomfortable.\r\n\r\n**Steps to reproduce**:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1115", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1115/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1115/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1115/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1115", "id": 570575474, "node_id": "MDU6SXNzdWU1NzA1NzU0NzQ=", "number": 1115, "title": "A wrong warning is shown when creating a secured elasticsearch ssl (since 7.5.0)", "user": {"login": "yogevyuval", "id": 962869, "node_id": "MDQ6VXNlcjk2Mjg2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/962869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yogevyuval", "html_url": "https://github.com/yogevyuval", "followers_url": "https://api.github.com/users/yogevyuval/followers", "following_url": "https://api.github.com/users/yogevyuval/following{/other_user}", "gists_url": "https://api.github.com/users/yogevyuval/gists{/gist_id}", "starred_url": "https://api.github.com/users/yogevyuval/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yogevyuval/subscriptions", "organizations_url": "https://api.github.com/users/yogevyuval/orgs", "repos_url": "https://api.github.com/users/yogevyuval/repos", "events_url": "https://api.github.com/users/yogevyuval/events{/privacy}", "received_events_url": "https://api.github.com/users/yogevyuval/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-25T13:35:52Z", "updated_at": "2020-02-26T03:39:39Z", "closed_at": "2020-02-26T03:39:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Elasticsearch version** not relevant:\r\n\r\n**`elasticsearch-py` version 7.5.1**: \r\n\r\n**When creating a secured elasticsearch ssl connection a warning is shown**:\r\n```\r\nhttp_urllib3.py:148: UserWarning: When using `ssl_context`, all other SSL related kwargs are ignored\r\n  \"When using `ssl_context`, all other SSL related kwargs are ignored\"\r\n```\r\n\r\nThis happens because the new `ssh_show_warn` parameter defaults to `True` but also is in the or statement that shows the above error. \r\n\r\nThe warning is wrong, because we are only setting the ssl_context parameter and nothing else.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1110", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1110/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1110/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1110/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1110", "id": 568624363, "node_id": "MDU6SXNzdWU1Njg2MjQzNjM=", "number": 1110, "title": "TasksClient.get() requiring an argument on v7.5.1", "user": {"login": "natefox", "id": 513476, "node_id": "MDQ6VXNlcjUxMzQ3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/513476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/natefox", "html_url": "https://github.com/natefox", "followers_url": "https://api.github.com/users/natefox/followers", "following_url": "https://api.github.com/users/natefox/following{/other_user}", "gists_url": "https://api.github.com/users/natefox/gists{/gist_id}", "starred_url": "https://api.github.com/users/natefox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/natefox/subscriptions", "organizations_url": "https://api.github.com/users/natefox/orgs", "repos_url": "https://api.github.com/users/natefox/repos", "events_url": "https://api.github.com/users/natefox/events{/privacy}", "received_events_url": "https://api.github.com/users/natefox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-02-20T22:52:48Z", "updated_at": "2020-03-17T17:53:02Z", "closed_at": "2020-03-17T17:53:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.1.1, 7.5.1\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: 7.5.1\r\n\r\nPlease make sure the major version matches the Elasticsearch server you are running.\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nElasticsearch().tasks.get() fails using elasticsearch-py 7.5.1, whereas it succeeds using 7.1.1.\r\n\r\n```\r\n>>> import elasticsearch\r\n>>> elasticsearch.__versionstr__\r\n'7.5.1'\r\n>>> elasticsearch.Elasticsearch().tasks.get()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/nfox/myenv-7.5.1/lib/python3.7/site-packages/elasticsearch/client/utils.py\", line 84, in _wrapped\r\n    return func(*args, params=params, **kwargs)\r\nTypeError: get() missing 1 required positional argument: 'task_id'\r\n```\r\n\r\n```\r\n>>> import elasticsearch\r\n>>> elasticsearch.__versionstr__\r\n'7.1.0'\r\n>>> elasticsearch.Elasticsearch().tasks.get()\r\n{'nodes': {'GkSSDiZPTBq4Tlv5xV9wtg': {'name': 'e6a01a4d549f', 'transport_address': '172.17.0.3:9300', 'host': '172.17.0.3', 'ip': '172.17.0.3:9300', 'roles': ['ingest', 'master', 'data', 'ml'], 'attributes': {'ml.machine_memory': '4129972224', 'xpack.installed': 'true', 'ml.max_open_jobs': '20'}, 'tasks': {'GkSSDiZPTBq4Tlv5xV9wtg:56': {'node': 'GkSSDiZPTBq4Tlv5xV9wtg', 'id': 56, 'type': 'direct', 'action': 'cluster:monitor/tasks/lists[n]', 'start_time_in_millis': 1582238526445, 'running_time_in_nanos': 8142200, 'cancellable': False, 'parent_task_id': 'GkSSDiZPTBq4Tlv5xV9wtg:55', 'headers': {}}, 'GkSSDiZPTBq4Tlv5xV9wtg:55': {'node': 'GkSSDiZPTBq4Tlv5xV9wtg', 'id': 55, 'type': 'transport', 'action': 'cluster:monitor/tasks/lists', 'start_time_in_millis': 1582238526442, 'running_time_in_nanos': 11192200, 'cancellable': False, 'headers': {}}}}}}\r\n```\r\n\r\nI've verified this against running both ES 7.5.1 and ES 7.1.1 (via docker on localhost)\r\n\r\n**Steps to reproduce**:\r\nrun `elasticsearch.Elasticsearch().tasks.get()` while using elasticsearch-py 7.5.1\r\n\r\nUltimately, this is breaking curator's DeleteSnapshot as it checks for tasks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1109", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1109/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1109/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1109/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1109", "id": 568414733, "node_id": "MDU6SXNzdWU1Njg0MTQ3MzM=", "number": 1109, "title": "AttributeError: 'Elasticsearch' object has no attribute 'ccr' on WSL", "user": {"login": "glazou", "id": 994078, "node_id": "MDQ6VXNlcjk5NDA3OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/994078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glazou", "html_url": "https://github.com/glazou", "followers_url": "https://api.github.com/users/glazou/followers", "following_url": "https://api.github.com/users/glazou/following{/other_user}", "gists_url": "https://api.github.com/users/glazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/glazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glazou/subscriptions", "organizations_url": "https://api.github.com/users/glazou/orgs", "repos_url": "https://api.github.com/users/glazou/repos", "events_url": "https://api.github.com/users/glazou/events{/privacy}", "received_events_url": "https://api.github.com/users/glazou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T16:20:12Z", "updated_at": "2020-03-10T18:37:05Z", "closed_at": "2020-03-10T18:37:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Python version**: 3.6\r\n**elasticsearch-py version**: 7.5.1\r\n**ElasticSearch Server version**: tested with 7.5.1, 7.5.2, 7.6 on Elastic Cloud\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nFor about 10 days, on WSL Ubuntu 18.04 LTS, I get the following stack when creating an Elasticsearch object. It used to work before and it continues to work on Ubuntu machine.\r\n\r\n```\r\n es = Elasticsearch(\r\n        hosts=\"xxx\",\r\n        verify_certs=True,\r\n        timeout=600,\r\n        use_ssl=True,\r\n        ca_certs=certifi.where()\r\n    )\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"export_main.py\", line 32, in <module>\r\n    es = connect_es()\r\n  File \"/mnt/c/Users/greg/dev/AS/as_export_elastic/lib/elasticsearch.py\", line 16, in connect_es\r\n    ca_certs=certifi.where()\r\n  File \"/home/greg/.local/lib/python3.6/site-packages/elasticsearch/client/__init__.py\", line 239, in __init__\r\n    self.xpack = XPackClient(self)\r\n  File \"/home/greg/.local/lib/python3.6/site-packages/elasticsearch/client/xpack/__init__.py\", line 44, in __init__\r\n    setattr(self, namespace, getattr(self.client, namespace))\r\nAttributeError: 'Elasticsearch' object has no attribute 'ccr'\r\n```\r\n\r\n[Found a workaround here](https://github.com/Yelp/elastalert/issues/2646)\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1108", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1108/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1108/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1108/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1108", "id": 566014420, "node_id": "MDU6SXNzdWU1NjYwMTQ0MjA=", "number": 1108, "title": "Sniffing does not support IPv6 address", "user": {"login": "takaomag", "id": 234209, "node_id": "MDQ6VXNlcjIzNDIwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/234209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takaomag", "html_url": "https://github.com/takaomag", "followers_url": "https://api.github.com/users/takaomag/followers", "following_url": "https://api.github.com/users/takaomag/following{/other_user}", "gists_url": "https://api.github.com/users/takaomag/gists{/gist_id}", "starred_url": "https://api.github.com/users/takaomag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takaomag/subscriptions", "organizations_url": "https://api.github.com/users/takaomag/orgs", "repos_url": "https://api.github.com/users/takaomag/repos", "events_url": "https://api.github.com/users/takaomag/events{/privacy}", "received_events_url": "https://api.github.com/users/takaomag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-17T01:58:55Z", "updated_at": "2020-08-12T01:58:41Z", "closed_at": "2020-08-12T01:58:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Elasticsearch version** : 7.6.0\r\n\r\n**`elasticsearch-py` version** : 7.5.1 \r\n\r\n**Description**:\r\nSince [Transport._get_host_info(self. host_info)](https://github.com/elastic/elasticsearch-py/blob/35afe32a6dc34bf8cdd946a3723b59b2d0b375a4/elasticsearch/transport.py#L240) can not handle IPv6 address, sniffing fails to get a list of nodes upon startup.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1107", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1107/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1107/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1107/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1107", "id": 565947663, "node_id": "MDU6SXNzdWU1NjU5NDc2NjM=", "number": 1107, "title": "Update X-Pack enrich documentation ", "user": {"login": "gegen07", "id": 26390780, "node_id": "MDQ6VXNlcjI2MzkwNzgw", "avatar_url": "https://avatars3.githubusercontent.com/u/26390780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gegen07", "html_url": "https://github.com/gegen07", "followers_url": "https://api.github.com/users/gegen07/followers", "following_url": "https://api.github.com/users/gegen07/following{/other_user}", "gists_url": "https://api.github.com/users/gegen07/gists{/gist_id}", "starred_url": "https://api.github.com/users/gegen07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gegen07/subscriptions", "organizations_url": "https://api.github.com/users/gegen07/orgs", "repos_url": "https://api.github.com/users/gegen07/repos", "events_url": "https://api.github.com/users/gegen07/events{/privacy}", "received_events_url": "https://api.github.com/users/gegen07/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1888261043, "node_id": "MDU6TGFiZWwxODg4MjYxMDQz", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/7.x", "name": "7.x", "color": "9350b2", "default": false, "description": "This PR or Issue affects or needs to be backported to 7.x"}, {"id": 1888178015, "node_id": "MDU6TGFiZWwxODg4MTc4MDE1", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/good%20first%20issue", "name": "good first issue", "color": "000000", "default": true, "description": "Issues that are good for new contributors"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-16T18:30:36Z", "updated_at": "2020-03-09T13:16:16Z", "closed_at": "2020-03-09T13:16:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There's a plan to add Enrich section to ```docs/xpack.rst```? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1105", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1105/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1105/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1105/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1105", "id": 563206498, "node_id": "MDU6SXNzdWU1NjMyMDY0OTg=", "number": 1105, "title": "Search should throw warning if doc_type is specified for ES7+", "user": {"login": "EmilBode", "id": 22800383, "node_id": "MDQ6VXNlcjIyODAwMzgz", "avatar_url": "https://avatars2.githubusercontent.com/u/22800383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EmilBode", "html_url": "https://github.com/EmilBode", "followers_url": "https://api.github.com/users/EmilBode/followers", "following_url": "https://api.github.com/users/EmilBode/following{/other_user}", "gists_url": "https://api.github.com/users/EmilBode/gists{/gist_id}", "starred_url": "https://api.github.com/users/EmilBode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EmilBode/subscriptions", "organizations_url": "https://api.github.com/users/EmilBode/orgs", "repos_url": "https://api.github.com/users/EmilBode/repos", "events_url": "https://api.github.com/users/EmilBode/events{/privacy}", "received_events_url": "https://api.github.com/users/EmilBode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-11T13:28:21Z", "updated_at": "2020-04-27T16:26:23Z", "closed_at": "2020-04-27T16:26:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "SInce Elasticsearch 7.0, types are removed. In some cases, specifying a type as `_doc` is still allowed, but all other values are invalid.\r\nTherefore, I think that if the user _does_ specify a type other than `_doc`, some warning should be given or an exception raised.\r\nI encountered this when migrating from version 6 to 7, and finding out that when I removed the type in my data, my search queries did not fail, but instead just reported 0 results.\r\n\r\nReprex:\r\n```\r\nes.search(index='my-index', body='{\"query\": {\"match_all\": {}}}', doc_type='doc')\r\n```\r\nThis worked fine in ES6 (assuming docs where stored with type `doc`). In ES7 this gives zero results, but no indication anything was wrong.\r\nNote that\r\n`es.index('my-index', body='{}', doc_type='doc')` _does_ fail, with a clear indication.\r\n\r\nAs there is no conveibale use-case to specify a doc_type (other than `_doc`), I think any value set to something else than `_doc` should at least print a waring, but preferably raise an exception.\r\n\r\n**Environment**\r\nElasticsearch 7.5.1\r\nelasticsearch-py 7.5.1 (from https://pypi.org/project/elasticsearch/)\r\nPython 3.7.1 64-bit under Anaconda distribtion\r\nES running under Ubuntu 18.04.3 LTS\r\nPython running under Windows 10", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1102", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1102/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1102/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1102/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1102", "id": 561176074, "node_id": "MDU6SXNzdWU1NjExNzYwNzQ=", "number": 1102, "title": "Minor documentation fix in the helpers.rst", "user": {"login": "jjauzion", "id": 30863243, "node_id": "MDQ6VXNlcjMwODYzMjQz", "avatar_url": "https://avatars2.githubusercontent.com/u/30863243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjauzion", "html_url": "https://github.com/jjauzion", "followers_url": "https://api.github.com/users/jjauzion/followers", "following_url": "https://api.github.com/users/jjauzion/following{/other_user}", "gists_url": "https://api.github.com/users/jjauzion/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjauzion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjauzion/subscriptions", "organizations_url": "https://api.github.com/users/jjauzion/orgs", "repos_url": "https://api.github.com/users/jjauzion/repos", "events_url": "https://api.github.com/users/jjauzion/events{/privacy}", "received_events_url": "https://api.github.com/users/jjauzion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-06T17:59:20Z", "updated_at": "2020-04-27T16:39:13Z", "closed_at": "2020-04-27T16:39:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\nIt's not a bug nor a feature. Just a small update required to the doc in the `helpers.rst` file.  \r\n\r\nIn all the example of this file the :  \r\n`'_type': 'document',`  \r\nshould be replaced with :  \r\n`'_type': '_doc',`  \r\nto be compatible with ES latest version and removal of the type mapping\r\n\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:  \r\nNA\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):  \r\nNA\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**:  \r\nNA\r\n\r\n**Description of the problem including expected versus actual behavior**:  \r\nNA\r\n\r\n**Steps to reproduce**:  \r\nNA\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1100", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1100/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1100/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1100/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1100", "id": 559461564, "node_id": "MDU6SXNzdWU1NTk0NjE1NjQ=", "number": 1100, "title": "Freeze API throws RequestError", "user": {"login": "justinbass", "id": 5085018, "node_id": "MDQ6VXNlcjUwODUwMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5085018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinbass", "html_url": "https://github.com/justinbass", "followers_url": "https://api.github.com/users/justinbass/followers", "following_url": "https://api.github.com/users/justinbass/following{/other_user}", "gists_url": "https://api.github.com/users/justinbass/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinbass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinbass/subscriptions", "organizations_url": "https://api.github.com/users/justinbass/orgs", "repos_url": "https://api.github.com/users/justinbass/repos", "events_url": "https://api.github.com/users/justinbass/events{/privacy}", "received_events_url": "https://api.github.com/users/justinbass/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-04T03:13:52Z", "updated_at": "2020-02-06T00:21:55Z", "closed_at": "2020-02-06T00:19:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Elasticsearch (server) version 7.1\r\npython 3.7, elasticsearch (client) version 7.5.1, urllib3 version 1.24.1\r\n\r\nUsing the freeze api does not work. Request seems to require a body, which is not supplied. Also note that the docs are broken (https://elasticsearch-py.readthedocs.io/en/master/api.html#indices) - this page doesn't exist: https://www.elastic.co/guide/en/elasticsearch/reference/current/frozen.html \r\n\r\nCode (Note that my setup is working for a dozen other api's):\r\n```\r\nindices_client = elasticsearch.client.IndicesClient(es_client)\r\nindices_client.freeze(index_name)\r\n```\r\n\r\n```\r\n2020-02-03 19:06:41,337 - WARNING - POST https://.../_freeze [status:400 request:0.084s]\r\nTraceback (most recent call last):\r\n  ...\r\n  File\r\n    indices_client.freeze(index_name)\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/client/utils.py\", line 84, in _wrapped\r\n    return func(*args, params=params, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/client/indices.py\", line 1160, in freeze\r\n    \"POST\", _make_path(index, \"_freeze\"), params=params\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/transport.py\", line 358, in perform_request\r\n    timeout=timeout,\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/connection/http_requests.py\", line 163, in perform_request\r\n    self._raise_error(response.status_code, raw_data)\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/connection/base.py\", line 182, in _raise_error\r\n    status_code, error_message, additional_info\r\nelasticsearch.exceptions.RequestError: RequestError(400, 'parse_exception', 'request body is required')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1099", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1099/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1099/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1099/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1099", "id": 553061705, "node_id": "MDU6SXNzdWU1NTMwNjE3MDU=", "number": 1099, "title": "Generated API changed argument order", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-21T18:49:05Z", "updated_at": "2020-01-21T22:56:00Z", "closed_at": "2020-01-21T21:23:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Elasticsearch version** (`bin/elasticsearch --version`): n/a\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**:  7.5.1\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nI have some tests that run `search()` with and without positional arguments: https://github.com/scoutapp/scout_apm_python/blob/master/tests/integration/instruments/test_elasticsearch.py#L153\r\n\r\nIt seems version 7.5.1 has changed the order of arguments, meaning positional usage fails.\r\n\r\nVersion 7.1.0:\r\n\r\n```\r\n$ pip install 'elasticsearch<7.5'\r\n...\r\n$ ipython\r\nPython 3.8.1 (default, Jan 13 2020, 22:08:42)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.11.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import inspect, elasticsearch\r\n\r\nIn [2]: inspect.signature(elasticsearch.Elasticsearch.search)\r\nOut[2]: <Signature (self, index=None, body=None, params=None)>\r\n```\r\n\r\nVersion 7.5.1:\r\n\r\n```\r\n$ pip install 'elasticsearch==7.5.1'\r\n...\r\n$ ipython\r\nPython 3.8.1 (default, Jan 13 2020, 22:08:42)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.11.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import inspect, elasticsearch\r\n\r\nIn [2]: inspect.signature(elasticsearch.Elasticsearch.search)\r\nOut[2]: <Signature (self, body=None, index=None, doc_type=None, params=None)>\r\n```\r\n\r\nThis should be fixed to be the same as before, as signature changes break code. This probably applies to all the generated methods.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1098", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1098/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1098/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1098/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1098", "id": 553044610, "node_id": "MDU6SXNzdWU1NTMwNDQ2MTA=", "number": 1098, "title": "Generated API missing scripts_painless_context", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-21T18:12:29Z", "updated_at": "2020-01-21T21:27:56Z", "closed_at": "2020-01-21T21:27:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): n/a\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: 7.5.1\r\n\r\nPlease make sure the major version matches the Elasticsearch server you are running.\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nThe `Elasticsearch.scripts_painless_context` method has gone missing in version 7.5.0 from the autogeneration PR #1083. Since it's not mentioned in the documentation I assume this was an oversight?\r\n\r\n**Steps to reproduce**: n/a\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1097", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1097/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1097/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1097/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1097", "id": 552374007, "node_id": "MDU6SXNzdWU1NTIzNzQwMDc=", "number": 1097, "title": "DeprecationWarning over invalid escape sequences", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38099493, "node_id": "MDU6TGFiZWwzODA5OTQ5Mw==", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-20T15:37:46Z", "updated_at": "2020-04-22T02:27:53Z", "closed_at": "2020-04-22T02:27:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Bug report -->\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**:  master branch\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nDeprecationWarning over invalid escape sequences. Escaping them or using raw string literals is preferred.\r\n\r\n**Steps to reproduce**:\r\n\r\n`find . -iname '*.py'  | xargs -P 4 -I{} python3.8 -Wall -m py_compile {}`\r\n\r\n```\r\n./elasticsearch-py/test_elasticsearch/test_connection.py:330: DeprecationWarning: invalid escape sequence \\?\r\n  \"^GET http://localhost:9200/\\?param=42 \\[status:500 request:0.[0-9]{3}s\\]\",\r\n./elasticsearch-py/test_elasticsearch/test_connection.py:356: DeprecationWarning: invalid escape sequence \\[\r\n  '#\\[200\\] \\(0.[0-9]{3}s\\)\\n#\\{\\n#  \"answer\": \"that\\\\\\\\u0027s it!\"\\n#\\}',\r\n./elasticsearch-py/test_elasticsearch/test_connection.py:365: DeprecationWarning: invalid escape sequence \\?\r\n  \"GET http://localhost:9200/\\?param=42 \\[status:200 request:0.[0-9]{3}s\\]\",\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1096", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1096/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1096/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1096/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1096", "id": 550702373, "node_id": "MDU6SXNzdWU1NTA3MDIzNzM=", "number": 1096, "title": "Timeout parameters are poorly documented", "user": {"login": "michelbl", "id": 3307008, "node_id": "MDQ6VXNlcjMzMDcwMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3307008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michelbl", "html_url": "https://github.com/michelbl", "followers_url": "https://api.github.com/users/michelbl/followers", "following_url": "https://api.github.com/users/michelbl/following{/other_user}", "gists_url": "https://api.github.com/users/michelbl/gists{/gist_id}", "starred_url": "https://api.github.com/users/michelbl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michelbl/subscriptions", "organizations_url": "https://api.github.com/users/michelbl/orgs", "repos_url": "https://api.github.com/users/michelbl/repos", "events_url": "https://api.github.com/users/michelbl/events{/privacy}", "received_events_url": "https://api.github.com/users/michelbl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-16T10:07:25Z", "updated_at": "2020-01-16T14:25:31Z", "closed_at": "2020-01-16T14:25:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`): 7.5\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: 7.5\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\nThe ES API defines a parameter `timeout`: https://github.com/elastic/elasticsearch/blob/master/rest-api-spec/src/main/resources/rest-api-spec/api/indices.create.json#L29\r\n\r\nThis parameter is indeed documented (https://elasticsearch-py.readthedocs.io/en/master/api.html#elasticsearch.Elasticsearch.create): \"timeout \u2013 Explicit operation timeout\".\r\n\r\nThe main ES doc is more precise (https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html#docs-index-api-query-params): \"(Optional, time units) Specifies the period of time to wait for a response. If no response is received before the timeout expires, the request fails and returns an error. Defaults to 30s.\"\r\n\r\nThis parameter is indeed passed to transport, then to connection, then encoded in the url: https://github.com/elastic/elasticsearch-py/blob/7.5.0/elasticsearch/connection/http_urllib3.py#L212\r\n\r\nHowever, there is another parameter, `request_timeout`. This parameter is undocumented and handled manually here:\r\n* https://github.com/elastic/elasticsearch-py/blob/7.5.0/elasticsearch/transport.py#L343\r\n* https://github.com/elastic/elasticsearch-py/blob/7.5.0/elasticsearch/client/utils.py#L81\r\n\r\nTo effectively increase the timeout, one should call `create` with `timeout='60s', request_timeout=60`.\r\n\r\n**Steps to reproduce**: Make a create request with `timeout='60s'` against an unresponsive server. The request fails 10s later instead of 60s.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1095", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1095/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1095/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1095/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1095", "id": 549430092, "node_id": "MDU6SXNzdWU1NDk0MzAwOTI=", "number": 1095, "title": "use es.transport.send_get_body_as = 'POST', why no effect", "user": {"login": "haishuiaa", "id": 9084923, "node_id": "MDQ6VXNlcjkwODQ5MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9084923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haishuiaa", "html_url": "https://github.com/haishuiaa", "followers_url": "https://api.github.com/users/haishuiaa/followers", "following_url": "https://api.github.com/users/haishuiaa/following{/other_user}", "gists_url": "https://api.github.com/users/haishuiaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/haishuiaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haishuiaa/subscriptions", "organizations_url": "https://api.github.com/users/haishuiaa/orgs", "repos_url": "https://api.github.com/users/haishuiaa/repos", "events_url": "https://api.github.com/users/haishuiaa/events{/privacy}", "received_events_url": "https://api.github.com/users/haishuiaa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-14T09:13:48Z", "updated_at": "2020-01-14T10:34:56Z", "closed_at": "2020-01-14T10:34:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "slove err elasticsearch.exceptions.RequestError: RequestError(400, u'too_long_frame_exception', u'An HTTP line is larger than 4096 bytes.'). use es.transport.send_get_body_as = 'POST', why no effect, thank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1094", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1094/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1094/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1094/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1094", "id": 548377218, "node_id": "MDU6SXNzdWU1NDgzNzcyMTg=", "number": 1094, "title": "Solved", "user": {"login": "stphnthiel", "id": 208534, "node_id": "MDQ6VXNlcjIwODUzNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/208534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stphnthiel", "html_url": "https://github.com/stphnthiel", "followers_url": "https://api.github.com/users/stphnthiel/followers", "following_url": "https://api.github.com/users/stphnthiel/following{/other_user}", "gists_url": "https://api.github.com/users/stphnthiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/stphnthiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stphnthiel/subscriptions", "organizations_url": "https://api.github.com/users/stphnthiel/orgs", "repos_url": "https://api.github.com/users/stphnthiel/repos", "events_url": "https://api.github.com/users/stphnthiel/events{/privacy}", "received_events_url": "https://api.github.com/users/stphnthiel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-11T04:04:09Z", "updated_at": "2020-01-11T04:18:36Z", "closed_at": "2020-01-11T04:18:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "delete me", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1093", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1093/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1093/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1093/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1093", "id": 548012362, "node_id": "MDU6SXNzdWU1NDgwMTIzNjI=", "number": 1093, "title": "Bulk call don't support version and version_type field", "user": {"login": "Li-Shiang-Chi", "id": 6930223, "node_id": "MDQ6VXNlcjY5MzAyMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6930223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Li-Shiang-Chi", "html_url": "https://github.com/Li-Shiang-Chi", "followers_url": "https://api.github.com/users/Li-Shiang-Chi/followers", "following_url": "https://api.github.com/users/Li-Shiang-Chi/following{/other_user}", "gists_url": "https://api.github.com/users/Li-Shiang-Chi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Li-Shiang-Chi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Li-Shiang-Chi/subscriptions", "organizations_url": "https://api.github.com/users/Li-Shiang-Chi/orgs", "repos_url": "https://api.github.com/users/Li-Shiang-Chi/repos", "events_url": "https://api.github.com/users/Li-Shiang-Chi/events{/privacy}", "received_events_url": "https://api.github.com/users/Li-Shiang-Chi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 38099495, "node_id": "MDU6TGFiZWwzODA5OTQ5NQ==", "url": "https://api.github.com/repos/elastic/elasticsearch-py/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-10T10:57:38Z", "updated_at": "2020-01-28T16:11:44Z", "closed_at": "2020-01-28T16:11:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n@query_params(\r\n        \"_source\",\r\n        \"_source_excludes\",\r\n        \"_source_includes\",\r\n        \"fields\",\r\n        \"pipeline\",\r\n        \"refresh\",\r\n        \"routing\",\r\n        \"timeout\",\r\n        \"wait_for_active_shards\",\r\n    )\r\n    def bulk(self, body, doc_type=None, index=None, params=None):\r\n```\r\n\r\nPosted from the source code, Can I know the reason of why query parameters don't support `version` or `version_type` field.\r\n\r\nIf don't support the version, all the es document will not encounter version conflict error and keep updating the document which bothers me a lot.\r\n\r\nOr if I missing something, that each bulk item can actually specify `version` or `version_type` value.\r\n\r\nThanks for your help~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1092", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1092/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1092/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1092/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1092", "id": 547966248, "node_id": "MDU6SXNzdWU1NDc5NjYyNDg=", "number": 1092, "title": "elasticsearch 500  general_script_exception", "user": {"login": "xingzhoupy", "id": 32769011, "node_id": "MDQ6VXNlcjMyNzY5MDEx", "avatar_url": "https://avatars0.githubusercontent.com/u/32769011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xingzhoupy", "html_url": "https://github.com/xingzhoupy", "followers_url": "https://api.github.com/users/xingzhoupy/followers", "following_url": "https://api.github.com/users/xingzhoupy/following{/other_user}", "gists_url": "https://api.github.com/users/xingzhoupy/gists{/gist_id}", "starred_url": "https://api.github.com/users/xingzhoupy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xingzhoupy/subscriptions", "organizations_url": "https://api.github.com/users/xingzhoupy/orgs", "repos_url": "https://api.github.com/users/xingzhoupy/repos", "events_url": "https://api.github.com/users/xingzhoupy/events{/privacy}", "received_events_url": "https://api.github.com/users/xingzhoupy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-10T09:35:28Z", "updated_at": "2020-01-10T10:10:47Z", "closed_at": "2020-01-10T10:10:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,why error\r\nelasticsearch\uff1a7.5.0\r\nelasticsearch-py\uff1a7.1.0\r\nThanks\r\nTraceback (most recent call last):\r\n  File \"D:/pySpace/nfdw/zdbk/zubk_algorithm/zubk_algorithm/helpers.py\", line 125, in <module>\r\n    main()\r\n  File \"D:/pySpace/nfdw/zdbk/zubk_algorithm/zubk_algorithm/helpers.py\", line 121, in main\r\n    update_similar(documents_ids, simHashs, sim_dict)\r\n  File \"D:\\pySpace\\nfdw\\zdbk\\zubk_algorithm\\zubk_algorithm\\service.py\", line 51, in update_similar\r\n    es.es_update_simHash(id=ids[i], simHash=simHash)\r\n  File \"D:\\pySpace\\nfdw\\zdbk\\zubk_algorithm\\zubk_algorithm\\es_model.py\", line 110, in es_update_simHash\r\n  File \"D:\\pySpace\\nfdw\\zdbk\\zubk_algorithm\\venv\\lib\\site-packages\\elasticsearch\\client\\utils.py\", line 84, in _wrapped\r\n    return func(*args, params=params, **kwargs)\r\n  File \"D:\\pySpace\\nfdw\\zdbk\\zubk_algorithm\\venv\\lib\\site-packages\\elasticsearch\\client\\__init__.py\", line 932, in update_by_query\r\n    \"POST\", _make_path(index, \"_update_by_query\"), params=params, body=body\r\n  File \"D:\\pySpace\\nfdw\\zdbk\\zubk_algorithm\\venv\\lib\\site-packages\\elasticsearch\\transport.py\", line 358, in perform_request\r\n    timeout=timeout,\r\n  File \"D:\\pySpace\\nfdw\\zdbk\\zubk_algorithm\\venv\\lib\\site-packages\\elasticsearch\\connection\\http_urllib3.py\", line 257, in perform_request\r\n    self._raise_error(response.status, raw_data)\r\n  File \"D:\\pySpace\\nfdw\\zdbk\\zubk_algorithm\\venv\\lib\\site-packages\\elasticsearch\\connection\\base.py\", line 182, in _raise_error\r\n    status_code, error_message, additional_info\r\nelasticsearch.exceptions.TransportError: TransportError(500, 'general_script_exception', '[script] Too many dynamic script compilations within, max: [75/5m]; please use indexed, or scripts with parameters instead; this limit can be changed by the [script.max_compilations_rate] setting')", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1091", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1091/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1091/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1091/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1091", "id": 547787039, "node_id": "MDU6SXNzdWU1NDc3ODcwMzk=", "number": 1091, "title": "Warning _type when insert document", "user": {"login": "stegausaq", "id": 20319006, "node_id": "MDQ6VXNlcjIwMzE5MDA2", "avatar_url": "https://avatars0.githubusercontent.com/u/20319006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stegausaq", "html_url": "https://github.com/stegausaq", "followers_url": "https://api.github.com/users/stegausaq/followers", "following_url": "https://api.github.com/users/stegausaq/following{/other_user}", "gists_url": "https://api.github.com/users/stegausaq/gists{/gist_id}", "starred_url": "https://api.github.com/users/stegausaq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stegausaq/subscriptions", "organizations_url": "https://api.github.com/users/stegausaq/orgs", "repos_url": "https://api.github.com/users/stegausaq/repos", "events_url": "https://api.github.com/users/stegausaq/events{/privacy}", "received_events_url": "https://api.github.com/users/stegausaq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-09T23:50:01Z", "updated_at": "2020-01-10T10:08:23Z", "closed_at": "2020-01-10T10:08:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\n** Please read the guidelines below. **\r\n\r\n1.  GitHub is reserved for bug reports and feature requests. The best place to\r\n    ask a general question is at the Elastic [forums](https://discuss.elastic.co).\r\n    GitHub is not the place for general questions.\r\n\r\n2.  Please fill out EITHER the feature request block or the bug report block\r\n    below, and delete the other block.\r\n\r\n3.  For issues with API definition please note that the API is [auto\r\n    generated](https://github.com/elastic/elasticsearch-py/blob/master/CONTRIBUTING.md#api-code-generation)\r\n    so any problems should be checked and reported against [the Elasticsearch\r\n    repo](https://github.com/elastic/elasticsearch) instead.\r\n\r\nThank you!\r\n\r\n-->\r\n\r\n<!-- Feature request -->\r\n\r\n**Describe the feature**:\r\n\r\n<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\n\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: \r\n\r\nPlease make sure the major version matches the Elasticsearch server you are running.\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\n**Steps to reproduce**:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1088", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1088/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1088/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1088/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1088", "id": 546855868, "node_id": "MDU6SXNzdWU1NDY4NTU4Njg=", "number": 1088, "title": "is there any possibility to work with ilm policies ?", "user": {"login": "yamamoto52", "id": 32188311, "node_id": "MDQ6VXNlcjMyMTg4MzEx", "avatar_url": "https://avatars2.githubusercontent.com/u/32188311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yamamoto52", "html_url": "https://github.com/yamamoto52", "followers_url": "https://api.github.com/users/yamamoto52/followers", "following_url": "https://api.github.com/users/yamamoto52/following{/other_user}", "gists_url": "https://api.github.com/users/yamamoto52/gists{/gist_id}", "starred_url": "https://api.github.com/users/yamamoto52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yamamoto52/subscriptions", "organizations_url": "https://api.github.com/users/yamamoto52/orgs", "repos_url": "https://api.github.com/users/yamamoto52/repos", "events_url": "https://api.github.com/users/yamamoto52/events{/privacy}", "received_events_url": "https://api.github.com/users/yamamoto52/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-08T13:19:11Z", "updated_at": "2020-01-08T14:17:39Z", "closed_at": "2020-01-08T13:22:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there anybpossibility to work with ilm policies ?\r\n\r\nI'm looking for solution for sth similar like 'get _ilm/policy' or 'PUT _ilm/policy/my_policy' but nothing works.\r\n\r\nMy tries : \r\n```\r\nbody = {\r\n    \"policy\": {\r\n        \"phases\": {\r\n        \"warm\": {\r\n            \"min_age\": \"10d\",\r\n            \"actions\": {\r\n            \"forcemerge\": {\r\n                \"max_num_segments\": 1\r\n            }\r\n            }\r\n        },\r\n        \"delete\": {\r\n            \"min_age\": \"30d\",\r\n            \"actions\": {\r\n            \"delete\": {}\r\n            }\r\n        }\r\n        }\r\n    }\r\n}\r\n\r\nes.indices.create( index='_ilm/policy/'+policy_name,body=data )\r\n```\r\noutput \r\n```\r\nelasticsearch.exceptions.RequestError: RequestError(400, 'parse_exception', 'unknown key [policy] for create index')\r\n```\r\n\r\nor get \r\n```\r\nes.indices.get(\"_ilm\", \"policy\", \"logstash-policy\")\r\n```\r\n\r\nwith output:\r\n```\r\nTypeError: get() got multiple values for argument 'params'\r\n```\r\n\r\n'Get' like this : es.indices.get(\"_ilm\", \"policy\")  works correctly \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1085", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1085/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1085/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1085/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1085", "id": 543873743, "node_id": "MDU6SXNzdWU1NDM4NzM3NDM=", "number": 1085, "title": "max_reties > 0 sometimes causes duplicate data loaded into ES when TransportError happens", "user": {"login": "zealot-shin", "id": 12884162, "node_id": "MDQ6VXNlcjEyODg0MTYy", "avatar_url": "https://avatars1.githubusercontent.com/u/12884162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zealot-shin", "html_url": "https://github.com/zealot-shin", "followers_url": "https://api.github.com/users/zealot-shin/followers", "following_url": "https://api.github.com/users/zealot-shin/following{/other_user}", "gists_url": "https://api.github.com/users/zealot-shin/gists{/gist_id}", "starred_url": "https://api.github.com/users/zealot-shin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zealot-shin/subscriptions", "organizations_url": "https://api.github.com/users/zealot-shin/orgs", "repos_url": "https://api.github.com/users/zealot-shin/repos", "events_url": "https://api.github.com/users/zealot-shin/events{/privacy}", "received_events_url": "https://api.github.com/users/zealot-shin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-30T13:06:50Z", "updated_at": "2019-12-31T02:57:58Z", "closed_at": "2019-12-31T02:02:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Bug report -->\r\n\r\n**Elasticsearch version** (`bin/elasticsearch --version`):\r\nVersion: 7.4.2, Build: default/rpm/2f90bbf7b93631e52bafb59b3b049cb44ec25e96/2019-10-28T20:40:44.881551Z, JVM: 13.0.1\r\n**`elasticsearch-py` version (`elasticsearch.__versionstr__`)**: \r\n>>> elasticsearch.__versionstr__\r\n'7.1.0'\r\n>>>\r\n**Description of the problem including expected versus actual behavior**:\r\nUsing helpers.streaming_bulk with max_retries > 0 causes same data being bulk into es more than 1 time.\r\n\r\n**Steps to reproduce**:\r\ncode example:\r\n\r\n```python\r\nes = Elasticsearch(\r\n    [address.strip() for address in self.args[\"es_address\"]],\r\n    http_auth=(self.args['es_user'], self.args['es_pw']),\r\n    sniff_on_start=self.args['sniff'], sniff_on_connection_fail=True,\r\n    sniffer_timeout=self.args['sniffer_timeout'], retry_on_timeout=True, max_retries=3)\r\n\r\nif es_data:\r\n    exc_errors = []\r\n    for ok, result in streaming_bulk(\r\n            client=es, actions=self.gendata(es_data), request_timeout=30,\r\n            chunk_size=self.args[\"chunk_size\"], max_chunk_bytes=self.args[\"max_chunk_bytes\"] * 1024 * 1024,\r\n            raise_on_error=False, raise_on_exception=False, yield_ok=False):\r\n        action, result = result.popitem()\r\n        exc_errors.append({action: result})\r\n        self.loger.error('Failed to %s document: %r' % (action, result))\r\n```\r\n\r\nError log example\uff1a\r\n```\r\n[ERROR] Failed to index document: {'status': 'N/A', 'exception': TransportError('N/A', 'Unable to sniff hosts.'), 'error': \"TransportError(N/A, 'Unable to sniff hosts.')\", '_index': u'qtevent_3314_test', 'data': {u'host_memo': u'', u'datatime': 1550479616, 'uid': 0, 'ppname': u'tcp_status.sh', 'pid': 19132, u'group_name': u'\\u963f\\u91cc\\u4e91\\u4e1a\\u52a1', 'uname': u'root', u'internal_ip': [u'10.26.248.74'], 'cmd': u'awk /SYN_RECV/{print $2} /tmp/tcp_status.txt', 'gname': u'root', u'comid': u'03ae0864a737143e3236', 'ppuid': 0, u'group': 668, 'severity': '0', 'id': 'a3e742b22af011ea8540000c29a370c8', 'ppuname': u'root', u'host_tag': [], 'ppid': 19129, u'type': 1, u'agent_ip': u'114.55.42.200', u'external_ip': [u'114.55.42.200'], 'pname': u'awk', u'agent_id': u'67ef6db638dc779e', 'path': u'/usr/bin/gawk', u'datatype': u'proc_create', u'host_name': u'go_mp_message04', 'euname': u'root', 'pppath': u'/usr/bin/bash', u'os': u'linux', 'euid': 0}, '_type': '_doc'}\r\n```\r\n\r\n**data with this log failed to being bulk into es, while some other data without error logs loaded into es triple times:**\r\n```\r\nGET test_idx/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"filter\": {\r\n        \"term\": {\r\n          \"id\": \"55b194262af011eab988000c29a370c8\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nreponse:\r\n{\r\n  \"took\" : 4,\r\n  \"timed_out\" : false,\r\n  \"_shards\" : {\r\n    \"total\" : 1,\r\n    \"successful\" : 1,\r\n    \"skipped\" : 0,\r\n    \"failed\" : 0\r\n  },\r\n  \"hits\" : {\r\n    \"total\" : {\r\n      \"value\" : 3,\r\n      \"relation\" : \"eq\"\r\n    },\r\n    \"max_score\" : 0.0,\r\n    \"hits\" : [\r\n      {\r\n        \"_index\" : \"test_idx\",\r\n        \"_type\" : \"_doc\",\r\n        \"_id\" : \"QkthVm8B5c7WNuY7v4M3\",\r\n        \"_score\" : 0.0,\r\n        \"_source\" : {\r\n       ......\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nfrom what I've learnt from source code in elasticsearch-py, this TransportError is raised after 3 times retry set by es client parameter. I guess the same reason could explain why some data appear in es triple times. \r\n\r\nAs to the code aspect, when exception happens,  _process_bulk_chunk_ wrap each data and the same exception together and return this tuple. It seems that in this case, data already loaded also return with error and then enter the retrying process. Thus duplicate data being saved into ES:\r\n```\r\ntry:\r\n        # send the actual request\r\n        resp = client.bulk(\"\\n\".join(bulk_actions) + \"\\n\", *args, **kwargs)\r\n    except TransportError as e:\r\n        # default behavior - just propagate exception\r\n        if raise_on_exception:\r\n            raise e\r\n\r\n        # if we are not propagating, mark all actions in current chunk as failed\r\n        err_message = str(e)\r\n        exc_errors = []\r\n\r\n        for data in bulk_data:\r\n            # collect all the information about failed actions\r\n            op_type, action = data[0].copy().popitem()\r\n            info = {\"error\": err_message, \"status\": e.status_code, \"exception\": e}\r\n            if op_type != \"delete\":\r\n                info[\"data\"] = data[1]\r\n            info.update(action)\r\n            exc_errors.append({op_type: info})\r\n\r\n        # emulate standard behavior for failed actions\r\n        if raise_on_error:\r\n            raise BulkIndexError(\r\n                \"%i document(s) failed to index.\" % len(exc_errors), exc_errors\r\n            )\r\n        else:\r\n            for err in exc_errors:\r\n                yield False, err\r\n            return\r\n```\r\nWell, If I've got anything wrong, could u plz tell me.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1084", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1084/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1084/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1084/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1084", "id": 541754772, "node_id": "MDU6SXNzdWU1NDE3NTQ3NzI=", "number": 1084, "title": "how to create watcher or logstash pipeline using python", "user": {"login": "yamamoto52", "id": 32188311, "node_id": "MDQ6VXNlcjMyMTg4MzEx", "avatar_url": "https://avatars2.githubusercontent.com/u/32188311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yamamoto52", "html_url": "https://github.com/yamamoto52", "followers_url": "https://api.github.com/users/yamamoto52/followers", "following_url": "https://api.github.com/users/yamamoto52/following{/other_user}", "gists_url": "https://api.github.com/users/yamamoto52/gists{/gist_id}", "starred_url": "https://api.github.com/users/yamamoto52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yamamoto52/subscriptions", "organizations_url": "https://api.github.com/users/yamamoto52/orgs", "repos_url": "https://api.github.com/users/yamamoto52/repos", "events_url": "https://api.github.com/users/yamamoto52/events{/privacy}", "received_events_url": "https://api.github.com/users/yamamoto52/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-23T13:26:50Z", "updated_at": "2019-12-24T23:03:09Z", "closed_at": "2019-12-24T23:03:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to create watcher or logstash pipeline ? To do this I tried sth like this : \r\nes.indices.create(index='watcher/watch/test-index5', ignore=400) but '/' character is invalid", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1082", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1082/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1082/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1082/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1082", "id": 541195225, "node_id": "MDU6SXNzdWU1NDExOTUyMjU=", "number": 1082, "title": "Elasticsearch.search() defines invalid default parameters", "user": {"login": "Godron629", "id": 9061227, "node_id": "MDQ6VXNlcjkwNjEyMjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9061227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Godron629", "html_url": "https://github.com/Godron629", "followers_url": "https://api.github.com/users/Godron629/followers", "following_url": "https://api.github.com/users/Godron629/following{/other_user}", "gists_url": "https://api.github.com/users/Godron629/gists{/gist_id}", "starred_url": "https://api.github.com/users/Godron629/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Godron629/subscriptions", "organizations_url": "https://api.github.com/users/Godron629/orgs", "repos_url": "https://api.github.com/users/Godron629/repos", "events_url": "https://api.github.com/users/Godron629/events{/privacy}", "received_events_url": "https://api.github.com/users/Godron629/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-20T20:55:07Z", "updated_at": "2019-12-21T00:06:03Z", "closed_at": "2019-12-21T00:06:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/elastic/elasticsearch-py/blob/master/elasticsearch/client/__init__.py#L705\r\n\r\n`Elasticsearch.search()` is defined as\r\n```\r\n    def search(self, index=None, body=None, params=None):\r\n```\r\n\r\nYet is immediately iterated over, making `params=None` invalid.\r\n```\r\n        # from is a reserved word so it cannot be used, use from_ instead\r\n        if \"from_\" in params:\r\n            params[\"from\"] = params.pop(\"from_\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1079", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1079/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1079/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1079/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1079", "id": 538117855, "node_id": "MDU6SXNzdWU1MzgxMTc4NTU=", "number": 1079, "title": "How to index large documents", "user": {"login": "bordercore", "id": 287894, "node_id": "MDQ6VXNlcjI4Nzg5NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/287894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bordercore", "html_url": "https://github.com/bordercore", "followers_url": "https://api.github.com/users/bordercore/followers", "following_url": "https://api.github.com/users/bordercore/following{/other_user}", "gists_url": "https://api.github.com/users/bordercore/gists{/gist_id}", "starred_url": "https://api.github.com/users/bordercore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bordercore/subscriptions", "organizations_url": "https://api.github.com/users/bordercore/orgs", "repos_url": "https://api.github.com/users/bordercore/repos", "events_url": "https://api.github.com/users/bordercore/events{/privacy}", "received_events_url": "https://api.github.com/users/bordercore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-15T22:44:56Z", "updated_at": "2020-01-05T22:05:17Z", "closed_at": "2020-01-02T22:37:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to index individual documents that are larger than 10M using AWS Elasticsearch. However, this exceeds the HTTP request size limit for the instance I'm using, and going up to 100M would basically cost me ten times as much.\r\n\r\nI have tried using the `max_chunk_bytes` option used by the bulk helpers, but this doesn't help. Based on inspection of the code here https://github.com/elastic/elasticsearch-py/blob/cc461fdc3c9e33d1c31ae0f9681f16b0e163cc3a/elasticsearch/helpers/actions.py#L56 it appears that it's assuming you're bulk inserting multiple smaller documents, which it can then chunk up based on the `max_chunk_bytes` and `chunk_size` values you chose. But if you're just indexing a single document, it seems to always create a chunk with the entire document regardless of size. In other words, it can't chunk up parts of an individual document.\r\n\r\nCan someone verify if this is the case? If so, is it theoretically possible to alter the code to support chunking parts of a document? I don't mind doing the work if the experts out there think it's doable. And if there's no demand for this sort of modification, I can just keep it on a private branch.\r\n\r\nOther than that, are there other options I can explore?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1075", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1075/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1075/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1075/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1075", "id": 536051951, "node_id": "MDU6SXNzdWU1MzYwNTE5NTE=", "number": 1075, "title": "ssl_show_warn option improvements", "user": {"login": "alvarolmedo", "id": 3691730, "node_id": "MDQ6VXNlcjM2OTE3MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3691730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvarolmedo", "html_url": "https://github.com/alvarolmedo", "followers_url": "https://api.github.com/users/alvarolmedo/followers", "following_url": "https://api.github.com/users/alvarolmedo/following{/other_user}", "gists_url": "https://api.github.com/users/alvarolmedo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvarolmedo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvarolmedo/subscriptions", "organizations_url": "https://api.github.com/users/alvarolmedo/orgs", "repos_url": "https://api.github.com/users/alvarolmedo/repos", "events_url": "https://api.github.com/users/alvarolmedo/events{/privacy}", "received_events_url": "https://api.github.com/users/alvarolmedo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-10T23:25:06Z", "updated_at": "2019-12-12T21:25:51Z", "closed_at": "2019-12-12T21:25:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* No ssl_show_warn accepted when a ssl_context is provided\r\n* Disable InsecureRequestWarning from urllib3's connectionpool with ssl_show_warn option", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1074", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1074/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1074/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1074/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1074", "id": 535000941, "node_id": "MDU6SXNzdWU1MzUwMDA5NDE=", "number": 1074, "title": "Support for Repository cleanup API", "user": {"login": "nemo-rb", "id": 42155140, "node_id": "MDQ6VXNlcjQyMTU1MTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/42155140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nemo-rb", "html_url": "https://github.com/nemo-rb", "followers_url": "https://api.github.com/users/nemo-rb/followers", "following_url": "https://api.github.com/users/nemo-rb/following{/other_user}", "gists_url": "https://api.github.com/users/nemo-rb/gists{/gist_id}", "starred_url": "https://api.github.com/users/nemo-rb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nemo-rb/subscriptions", "organizations_url": "https://api.github.com/users/nemo-rb/orgs", "repos_url": "https://api.github.com/users/nemo-rb/repos", "events_url": "https://api.github.com/users/nemo-rb/events{/privacy}", "received_events_url": "https://api.github.com/users/nemo-rb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "viglia", "id": 5112977, "node_id": "MDQ6VXNlcjUxMTI5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5112977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viglia", "html_url": "https://github.com/viglia", "followers_url": "https://api.github.com/users/viglia/followers", "following_url": "https://api.github.com/users/viglia/following{/other_user}", "gists_url": "https://api.github.com/users/viglia/gists{/gist_id}", "starred_url": "https://api.github.com/users/viglia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viglia/subscriptions", "organizations_url": "https://api.github.com/users/viglia/orgs", "repos_url": "https://api.github.com/users/viglia/repos", "events_url": "https://api.github.com/users/viglia/events{/privacy}", "received_events_url": "https://api.github.com/users/viglia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "viglia", "id": 5112977, "node_id": "MDQ6VXNlcjUxMTI5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5112977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viglia", "html_url": "https://github.com/viglia", "followers_url": "https://api.github.com/users/viglia/followers", "following_url": "https://api.github.com/users/viglia/following{/other_user}", "gists_url": "https://api.github.com/users/viglia/gists{/gist_id}", "starred_url": "https://api.github.com/users/viglia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viglia/subscriptions", "organizations_url": "https://api.github.com/users/viglia/orgs", "repos_url": "https://api.github.com/users/viglia/repos", "events_url": "https://api.github.com/users/viglia/events{/privacy}", "received_events_url": "https://api.github.com/users/viglia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-09T15:20:35Z", "updated_at": "2020-01-02T22:46:15Z", "closed_at": "2020-01-02T22:46:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently there is no easy way to call the repository [cleanup](https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html#_repository_cleanup) API from elasticsearch-py.\r\n\r\n*Definition of done:*\r\n* Add support for the repository cleanup API;\r\n* Add tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1071", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1071/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1071/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1071/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1071", "id": 532365167, "node_id": "MDU6SXNzdWU1MzIzNjUxNjc=", "number": 1071, "title": "using _cat/indices with comma separated indicies strips index names and adds dot dot ...", "user": {"login": "sbalaram", "id": 8317942, "node_id": "MDQ6VXNlcjgzMTc5NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8317942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbalaram", "html_url": "https://github.com/sbalaram", "followers_url": "https://api.github.com/users/sbalaram/followers", "following_url": "https://api.github.com/users/sbalaram/following{/other_user}", "gists_url": "https://api.github.com/users/sbalaram/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbalaram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbalaram/subscriptions", "organizations_url": "https://api.github.com/users/sbalaram/orgs", "repos_url": "https://api.github.com/users/sbalaram/repos", "events_url": "https://api.github.com/users/sbalaram/events{/privacy}", "received_events_url": "https://api.github.com/users/sbalaram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-04T00:44:39Z", "updated_at": "2019-12-04T01:01:45Z", "closed_at": "2019-12-04T01:01:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "_cat/indices with comma separated indices fails with 404. it appears that if an index name is more than 50 char index names in the list of comma separated index names the url encoder strips and adds ... to the index names and the constructed url fails to find that index.\r\n\r\nin below example the actual name of the index is : alb_access_log_active-content-service-2019.11.26-s  but its constructed as ... \r\n\r\nWARNING:elasticsearch:GET https://xxxx:443/_cat/indices/alb_access_log_active-content-service-2019.11.26,alb_access_log_active-content-service-2019.11....,alb_access_log_active-content-service-2019.11.27,alb_access_log_active-content-service-2019.11.28,alb_access_log_active-content-service-2019.11.29,alb_access_log_active-content-service-2019.11.30,alb_access_log_active-content-service-2019.12.01,alb_access_log_authsvc-2019.11.26,alb_access_log_authsvc-2019.11.26-s?h=h%2Cs%2Ci%2Cid%2Cp%2Cr%2Cdc%2Cdd%2Css%2Ccreation.date.string&v=true [status:404 request:0.095s]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1070", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1070/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1070/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1070/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1070", "id": 532161987, "node_id": "MDU6SXNzdWU1MzIxNjE5ODc=", "number": 1070, "title": "Body grows beyond content-maxsize in bulk helpers", "user": {"login": "jonapich", "id": 5009356, "node_id": "MDQ6VXNlcjUwMDkzNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5009356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonapich", "html_url": "https://github.com/jonapich", "followers_url": "https://api.github.com/users/jonapich/followers", "following_url": "https://api.github.com/users/jonapich/following{/other_user}", "gists_url": "https://api.github.com/users/jonapich/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonapich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonapich/subscriptions", "organizations_url": "https://api.github.com/users/jonapich/orgs", "repos_url": "https://api.github.com/users/jonapich/repos", "events_url": "https://api.github.com/users/jonapich/events{/privacy}", "received_events_url": "https://api.github.com/users/jonapich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-03T17:57:52Z", "updated_at": "2019-12-03T18:03:27Z", "closed_at": "2019-12-03T18:02:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever utf-8 characters are involved, the length calculations made in `_chunk_actions` will be smaller than their `.encode('utf-8', 'surrogatepass')` counterpart, which is used in `perform_request` to prepare the body.\r\n\r\nThis causes some request to be over the intended payload size.\r\n\r\n```\r\nfrom typing import Any\r\nfrom unittest import mock\r\nfrom unittest.mock import MagicMock\r\n\r\nfrom elasticsearch import Elasticsearch\r\nfrom elasticsearch.transport import Transport\r\nfrom elasticsearch.serializer import JSONSerializer\r\n\r\n\r\ndef test_bulk_size() -> None:\r\n    serializer = JSONSerializer()\r\n    transport = Transport([{}], serializer=serializer)\r\n\r\n    raw_data = {'body': '\u00e9\u00e9\u00e9\u00e9\u00e9\u00e9'}\r\n\r\n    # reproduce what _chunk_actions does:\r\n    queued_data = serializer.dumps(raw_data)\r\n    chunk_size = len(queued_data) + 1  # data + linefeed\r\n    bulk_body = Elasticsearch(serializer=serializer)._bulk_body(\"\\n\".join([queued_data]) + \"\\n\")\r\n    assert len(bulk_body) == chunk_size  # calculation is dead on\r\n\r\n    def _check_content_length(*args: Any, **_: Any) -> None:\r\n        body = args[3]\r\n        assert body == bulk_body.encode('utf-8', 'surrogatepass')\r\n        assert len(body) == chunk_size, 'Body is larger than planned.'\r\n\r\n    connection_mock = MagicMock()\r\n    connection_mock.perform_request = _check_content_length\r\n\r\n    with mock.patch.object(transport, 'get_connection', return_value=connection_mock):\r\n        transport.perform_request(None, None, body=bulk_body)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1068", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1068/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1068/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1068/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1068", "id": 531953560, "node_id": "MDU6SXNzdWU1MzE5NTM1NjA=", "number": 1068, "title": "Error in the doc for the `hosts` parameter in Elasticsearch class", "user": {"login": "viglia", "id": 5112977, "node_id": "MDQ6VXNlcjUxMTI5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5112977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viglia", "html_url": "https://github.com/viglia", "followers_url": "https://api.github.com/users/viglia/followers", "following_url": "https://api.github.com/users/viglia/following{/other_user}", "gists_url": "https://api.github.com/users/viglia/gists{/gist_id}", "starred_url": "https://api.github.com/users/viglia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viglia/subscriptions", "organizations_url": "https://api.github.com/users/viglia/orgs", "repos_url": "https://api.github.com/users/viglia/repos", "events_url": "https://api.github.com/users/viglia/events{/privacy}", "received_events_url": "https://api.github.com/users/viglia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "viglia", "id": 5112977, "node_id": "MDQ6VXNlcjUxMTI5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5112977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viglia", "html_url": "https://github.com/viglia", "followers_url": "https://api.github.com/users/viglia/followers", "following_url": "https://api.github.com/users/viglia/following{/other_user}", "gists_url": "https://api.github.com/users/viglia/gists{/gist_id}", "starred_url": "https://api.github.com/users/viglia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viglia/subscriptions", "organizations_url": "https://api.github.com/users/viglia/orgs", "repos_url": "https://api.github.com/users/viglia/repos", "events_url": "https://api.github.com/users/viglia/events{/privacy}", "received_events_url": "https://api.github.com/users/viglia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "viglia", "id": 5112977, "node_id": "MDQ6VXNlcjUxMTI5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5112977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viglia", "html_url": "https://github.com/viglia", "followers_url": "https://api.github.com/users/viglia/followers", "following_url": "https://api.github.com/users/viglia/following{/other_user}", "gists_url": "https://api.github.com/users/viglia/gists{/gist_id}", "starred_url": "https://api.github.com/users/viglia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viglia/subscriptions", "organizations_url": "https://api.github.com/users/viglia/orgs", "repos_url": "https://api.github.com/users/viglia/repos", "events_url": "https://api.github.com/users/viglia/events{/privacy}", "received_events_url": "https://api.github.com/users/viglia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-12-03T12:34:26Z", "updated_at": "2019-12-16T13:36:35Z", "closed_at": "2019-12-16T13:36:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The doc states that **hosts** is a `list of nodes we should connect to`.\r\n\r\nhttps://github.com/elastic/elasticsearch-py/blob/35afe32a6dc34bf8cdd946a3723b59b2d0b375a4/elasticsearch/client/__init__.py#L193\r\n\r\n\r\nAfter the  docs though, in the `__init__` method,  *hosts* is passed to the `_normalize_hosts ` function which converts URL string to a list of strings (node URLs) \r\n\r\nhttps://github.com/elastic/elasticsearch-py/blob/35afe32a6dc34bf8cdd946a3723b59b2d0b375a4/elasticsearch/client/__init__.py#L206\r\n\r\n\r\nThe doc should then be updated to reflect the fact that is also possible to pass a node URL as a string and not necessarily a list of nodes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1067", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1067/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1067/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1067/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1067", "id": 531870614, "node_id": "MDU6SXNzdWU1MzE4NzA2MTQ=", "number": 1067, "title": "Can major versions of the library be used with later versions of the server?", "user": {"login": "jarshwah", "id": 541083, "node_id": "MDQ6VXNlcjU0MTA4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/541083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarshwah", "html_url": "https://github.com/jarshwah", "followers_url": "https://api.github.com/users/jarshwah/followers", "following_url": "https://api.github.com/users/jarshwah/following{/other_user}", "gists_url": "https://api.github.com/users/jarshwah/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarshwah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarshwah/subscriptions", "organizations_url": "https://api.github.com/users/jarshwah/orgs", "repos_url": "https://api.github.com/users/jarshwah/repos", "events_url": "https://api.github.com/users/jarshwah/events{/privacy}", "received_events_url": "https://api.github.com/users/jarshwah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-03T10:11:42Z", "updated_at": "2019-12-04T09:30:36Z", "closed_at": "2019-12-03T10:20:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apologies for the issue, but I couldn't find a better place to ask this question.\r\n\r\nI'm trying to figure out the best way to upgrade our elasticsearch cluster from version 5 to version 6 (and then 7..) without coordinating an upgrade of both the client and server.\r\n\r\nCan library version 5.x work with server version 6.x?\r\n\r\nThe readme says\r\n\r\n> For Elasticsearch 5.0 and later, use the major version 5 (5.x.y) of the library.\r\n\r\nWhich makes it sound like 5.x will work with a \"later\" server version of 6, but I'd like to confirm that possibility. I don't expect library versions to work against lesser server versions.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1066", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1066/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1066/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1066/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1066", "id": 531860178, "node_id": "MDU6SXNzdWU1MzE4NjAxNzg=", "number": 1066, "title": "Does it support SQL queries? ", "user": {"login": "EdgeSync", "id": 15020931, "node_id": "MDQ6VXNlcjE1MDIwOTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/15020931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdgeSync", "html_url": "https://github.com/EdgeSync", "followers_url": "https://api.github.com/users/EdgeSync/followers", "following_url": "https://api.github.com/users/EdgeSync/following{/other_user}", "gists_url": "https://api.github.com/users/EdgeSync/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdgeSync/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdgeSync/subscriptions", "organizations_url": "https://api.github.com/users/EdgeSync/orgs", "repos_url": "https://api.github.com/users/EdgeSync/repos", "events_url": "https://api.github.com/users/EdgeSync/events{/privacy}", "received_events_url": "https://api.github.com/users/EdgeSync/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-03T09:54:31Z", "updated_at": "2019-12-03T10:03:27Z", "closed_at": "2019-12-03T09:56:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nDoes anyone know if this package supports sending SQL queries to Elastic?\r\n\r\ne.g. from Dev Tools I can run something like this:\r\n\r\n```\r\nPOST _sql?format=csv\r\n{\r\n    \"query\": \"select * from sample_index where message = 'hello_world'\"\r\n}\r\n```\r\n\r\nHow would I do that with this package?\r\nI normally do searches something like this:\r\n\r\n```\r\nfrom elasticsearch import Elasticsearch as E\r\nes = E([\"https://username:password@localhost:9200\"], verify_certs=False, timeout=60)\r\n\r\nes.search(index='sample_index', body={\"query\": \r\n                                                                  { \"multi_match\": \r\n                                                                      { \"query\": \"hello_world\" }\r\n                                                                  }\r\n                                                              }\r\n```\r\n\r\nHaving trouble understanding how to put the SQL syntax in.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1065", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1065/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1065/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1065/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1065", "id": 529691563, "node_id": "MDU6SXNzdWU1Mjk2OTE1NjM=", "number": 1065, "title": "it seems like client request will be timeout  first  request with everyday", "user": {"login": "francis12", "id": 2187251, "node_id": "MDQ6VXNlcjIxODcyNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2187251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/francis12", "html_url": "https://github.com/francis12", "followers_url": "https://api.github.com/users/francis12/followers", "following_url": "https://api.github.com/users/francis12/following{/other_user}", "gists_url": "https://api.github.com/users/francis12/gists{/gist_id}", "starred_url": "https://api.github.com/users/francis12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/francis12/subscriptions", "organizations_url": "https://api.github.com/users/francis12/orgs", "repos_url": "https://api.github.com/users/francis12/repos", "events_url": "https://api.github.com/users/francis12/events{/privacy}", "received_events_url": "https://api.github.com/users/francis12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-28T04:51:33Z", "updated_at": "2019-11-28T09:10:57Z", "closed_at": "2019-11-28T09:10:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "the first request is timeout with everyday\uff0cand the next request is normal\u3002\r\nElasticSearch version is 7.*\r\n**follows is the traceback** \r\n```\r\n[2019-11-28 09:48:57,868][ThreadPoolExecutor-0_4:140670823548672][task_id:elasticsearch][base.py:150][WARNING][GET http://127.0.0.1:9200/_cluster/health [status:N/A request:60.043s]]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/python3/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n  File \"/usr/local/python3/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 416, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"/usr/local/python3/lib/python3.7/http/client.py\", line 1321, in getresponse\r\n    response.begin()\r\n  File \"/usr/local/python3/lib/python3.7/http/client.py\", line 296, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/usr/local/python3/lib/python3.7/http/client.py\", line 257, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"/usr/local/python3/lib/python3.7/socket.py\", line 589, in readinto\r\n    return self._sock.recv_into(b)\r\nsocket.timeout: timed out\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/python3/lib/python3.7/site-packages/elasticsearch/connection/http_urllib3.py\", line 238, in perform_request\r\n    method, url, body, retries=Retry(False), headers=request_headers, **kw\r\n  File \"/usr/local/python3/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"/usr/local/python3/lib/python3.7/site-packages/urllib3/util/retry.py\", line 376, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/usr/local/python3/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise\r\n    raise value\r\n  File \"/usr/local/python3/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen\r\n    chunked=chunked,\r\n  File \"/usr/local/python3/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 423, in _make_request\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1063", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1063/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1063/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1063/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1063", "id": 527322805, "node_id": "MDU6SXNzdWU1MjczMjI4MDU=", "number": 1063, "title": "retry_on_conflict missing for bulk actions?", "user": {"login": "ChadTaljaardt", "id": 13891249, "node_id": "MDQ6VXNlcjEzODkxMjQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/13891249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChadTaljaardt", "html_url": "https://github.com/ChadTaljaardt", "followers_url": "https://api.github.com/users/ChadTaljaardt/followers", "following_url": "https://api.github.com/users/ChadTaljaardt/following{/other_user}", "gists_url": "https://api.github.com/users/ChadTaljaardt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChadTaljaardt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChadTaljaardt/subscriptions", "organizations_url": "https://api.github.com/users/ChadTaljaardt/orgs", "repos_url": "https://api.github.com/users/ChadTaljaardt/repos", "events_url": "https://api.github.com/users/ChadTaljaardt/events{/privacy}", "received_events_url": "https://api.github.com/users/ChadTaljaardt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-22T17:29:24Z", "updated_at": "2020-02-27T12:35:24Z", "closed_at": "2020-01-02T22:33:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having a conflict issue with my application, I came across this issue: https://github.com/elastic/elasticsearch/issues/17165 and the solution was to try the retry_on_bulk argument. I don't see this argument being available for bulk operations though. How would I go about re-trying on conflict when using bulk indexing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1060", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1060/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1060/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1060/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1060", "id": 525916595, "node_id": "MDU6SXNzdWU1MjU5MTY1OTU=", "number": 1060, "title": "docs on RTD not getting updated", "user": {"login": "freddrake", "id": 588792, "node_id": "MDQ6VXNlcjU4ODc5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/588792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freddrake", "html_url": "https://github.com/freddrake", "followers_url": "https://api.github.com/users/freddrake/followers", "following_url": "https://api.github.com/users/freddrake/following{/other_user}", "gists_url": "https://api.github.com/users/freddrake/gists{/gist_id}", "starred_url": "https://api.github.com/users/freddrake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freddrake/subscriptions", "organizations_url": "https://api.github.com/users/freddrake/orgs", "repos_url": "https://api.github.com/users/freddrake/repos", "events_url": "https://api.github.com/users/freddrake/events{/privacy}", "received_events_url": "https://api.github.com/users/freddrake/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "viglia", "id": 5112977, "node_id": "MDQ6VXNlcjUxMTI5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5112977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viglia", "html_url": "https://github.com/viglia", "followers_url": "https://api.github.com/users/viglia/followers", "following_url": "https://api.github.com/users/viglia/following{/other_user}", "gists_url": "https://api.github.com/users/viglia/gists{/gist_id}", "starred_url": "https://api.github.com/users/viglia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viglia/subscriptions", "organizations_url": "https://api.github.com/users/viglia/orgs", "repos_url": "https://api.github.com/users/viglia/repos", "events_url": "https://api.github.com/users/viglia/events{/privacy}", "received_events_url": "https://api.github.com/users/viglia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "viglia", "id": 5112977, "node_id": "MDQ6VXNlcjUxMTI5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5112977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viglia", "html_url": "https://github.com/viglia", "followers_url": "https://api.github.com/users/viglia/followers", "following_url": "https://api.github.com/users/viglia/following{/other_user}", "gists_url": "https://api.github.com/users/viglia/gists{/gist_id}", "starred_url": "https://api.github.com/users/viglia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viglia/subscriptions", "organizations_url": "https://api.github.com/users/viglia/orgs", "repos_url": "https://api.github.com/users/viglia/repos", "events_url": "https://api.github.com/users/viglia/events{/privacy}", "received_events_url": "https://api.github.com/users/viglia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-11-20T16:27:31Z", "updated_at": "2020-03-05T13:55:20Z", "closed_at": "2020-03-05T13:55:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "The formatted documentation on readthedocs.io (https://elasticsearch-py.readthedocs.io/en/master/) is not showing recent updates, and still refers to 7.0.0 as a development version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1058", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1058/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1058/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1058/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1058", "id": 523320514, "node_id": "MDU6SXNzdWU1MjMzMjA1MTQ=", "number": 1058, "title": "Missing git tag for 7.1.0 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-15T08:16:20Z", "updated_at": "2019-11-15T17:28:45Z", "closed_at": "2019-11-15T17:28:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1055", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1055/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1055/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1055/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1055", "id": 519240465, "node_id": "MDU6SXNzdWU1MTkyNDA0NjU=", "number": 1055, "title": "During scan in elasticsearch I got unicoderror", "user": {"login": "ZeusFSX", "id": 22007867, "node_id": "MDQ6VXNlcjIyMDA3ODY3", "avatar_url": "https://avatars1.githubusercontent.com/u/22007867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZeusFSX", "html_url": "https://github.com/ZeusFSX", "followers_url": "https://api.github.com/users/ZeusFSX/followers", "following_url": "https://api.github.com/users/ZeusFSX/following{/other_user}", "gists_url": "https://api.github.com/users/ZeusFSX/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZeusFSX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZeusFSX/subscriptions", "organizations_url": "https://api.github.com/users/ZeusFSX/orgs", "repos_url": "https://api.github.com/users/ZeusFSX/repos", "events_url": "https://api.github.com/users/ZeusFSX/events{/privacy}", "received_events_url": "https://api.github.com/users/ZeusFSX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-07T12:36:10Z", "updated_at": "2019-11-22T13:09:55Z", "closed_at": "2019-11-07T18:27:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "The version of elasticsearch-py == 6.3.1\r\nPython version 3.7.4\r\n````\r\nGET http://0.0.0.0:9200/forums/live/_search?scroll=5m&size=1000 [status:N/A request:0.714s]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/connection/http_urllib3.py\", line 174, in perform_request\r\n    raw_data = response.data.decode('utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xed in position 272915: invalid continuation byte\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/connection/http_urllib3.py\", line 174, in perform_request\r\n    raw_data = response.data.decode('utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xed in position 272915: invalid continuation byte\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/zeusfsx/Work/streamua/main.py\", line 67, in main_loop\r\n    res = load.get_news(config.INPUT, request=kw)\r\n  File \"/Users/zeusfsx/Work/streamua/load.py\", line 69, in get_news\r\n    all_data += data\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/helpers/__init__.py\", line 364, in scan\r\n    request_timeout=request_timeout, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/client/utils.py\", line 76, in _wrapped\r\n    return func(*args, params=params, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/client/__init__.py\", line 660, in search\r\n    doc_type, '_search'), params=params, body=body)\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/transport.py\", line 318, in perform_request\r\n    status, headers_response, data = connection.perform_request(method, url, params, body, headers=headers, ignore=ignore, timeout=timeout)\r\n  File \"/usr/local/lib/python3.7/site-packages/elasticsearch/connection/http_urllib3.py\", line 181, in perform_request\r\n    raise ConnectionError('N/A', str(e), e)\r\nelasticsearch.exceptions.ConnectionError: ConnectionError('utf-8' codec can't decode byte 0xed in position 272915: invalid continuation byte) caused by: UnicodeDecodeError('utf-8' codec can't decode byte 0xed in position 272915: invalid continuation byte)\r\n\r\n````\r\n**EDIT:** Before upload text in Elastic,  I do ```text = text.encode('utf-8').decode('utf-8')```, it`s helpful for me", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1053", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1053/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1053/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1053/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1053", "id": 517244001, "node_id": "MDU6SXNzdWU1MTcyNDQwMDE=", "number": 1053, "title": "exists() raises a HTTP 400 without additional detail", "user": {"login": "bastbnl", "id": 5901491, "node_id": "MDQ6VXNlcjU5MDE0OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5901491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bastbnl", "html_url": "https://github.com/bastbnl", "followers_url": "https://api.github.com/users/bastbnl/followers", "following_url": "https://api.github.com/users/bastbnl/following{/other_user}", "gists_url": "https://api.github.com/users/bastbnl/gists{/gist_id}", "starred_url": "https://api.github.com/users/bastbnl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bastbnl/subscriptions", "organizations_url": "https://api.github.com/users/bastbnl/orgs", "repos_url": "https://api.github.com/users/bastbnl/repos", "events_url": "https://api.github.com/users/bastbnl/events{/privacy}", "received_events_url": "https://api.github.com/users/bastbnl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-04T15:56:01Z", "updated_at": "2019-11-05T18:44:54Z", "closed_at": "2019-11-05T18:29:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using `elasticsearch==7.0.5` on python 3.7.4 using my poor man's 3 node elasticsearch cluster and I'm seeing curious behavior when using `exists`. Elasticsearch appears to raise an HTTP 400 error without additional detail when alias is set to multiple indices without any additional configuration. Here's a small log:\r\n\r\n```\r\n>>> es.get(index='emoji-brwnppr.dev', id='fff')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/var/www/brownpapersession/dev/env/lib/python3.7/site-packages/elasticsearch/client/utils.py\", line 84, in _wrapped\r\n    return func(*args, params=params, **kwargs)\r\n  File \"/var/www/brownpapersession/dev/env/lib/python3.7/site-packages/elasticsearch/client/__init__.py\", line 501, in get\r\n    \"GET\", _make_path(index, doc_type, id), params=params\r\n  File \"/var/www/brownpapersession/dev/env/lib/python3.7/site-packages/elasticsearch/transport.py\", line 350, in perform_request\r\n    timeout=timeout,\r\n  File \"/var/www/brownpapersession/dev/env/lib/python3.7/site-packages/elasticsearch/connection/http_urllib3.py\", line 257, in perform_request\r\n    self._raise_error(response.status, raw_data)\r\n  File \"/var/www/brownpapersession/dev/env/lib/python3.7/site-packages/elasticsearch/connection/base.py\", line 182, in _raise_error\r\n    status_code, error_message, additional_info\r\nelasticsearch.exceptions.RequestError: RequestError(400, 'illegal_argument_exception', \"Alias [emoji-brwnppr.dev] has more than one indices associated with it [[emoji-brwnppr.dev-2934d9a04900b50407f51120b93e3c647e5771e1, emoji-brwnppr.dev-4_1_0]], can't execute a single index op\")\r\n```\r\n\r\nThis error is pretty good. The error raised by `exists` is a bit different though:\r\n```\r\n>>> es.exists(index='emoji-brwnppr.dev', id='fff')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/var/www/brownpapersession/dev/env/lib/python3.7/site-packages/elasticsearch/client/utils.py\", line 84, in _wrapped\r\n    return func(*args, params=params, **kwargs)\r\n  File \"/var/www/brownpapersession/dev/env/lib/python3.7/site-packages/elasticsearch/client/__init__.py\", line 411, in exists\r\n    \"HEAD\", _make_path(index, doc_type, id), params=params\r\n  File \"/var/www/brownpapersession/dev/env/lib/python3.7/site-packages/elasticsearch/transport.py\", line 350, in perform_request\r\n    timeout=timeout,\r\n  File \"/var/www/brownpapersession/dev/env/lib/python3.7/site-packages/elasticsearch/connection/http_urllib3.py\", line 257, in perform_request\r\n    self._raise_error(response.status, raw_data)\r\n  File \"/var/www/brownpapersession/dev/env/lib/python3.7/site-packages/elasticsearch/connection/base.py\", line 182, in _raise_error\r\n    status_code, error_message, additional_info\r\nelasticsearch.exceptions.RequestError: RequestError(400, '')\r\n```\r\n\r\nThe `RequestError` disappeared right after I DELETEd one of the indices the alias was linked to. I would've expected the same error raised by the `get`.\r\n\r\nThe cluster consists of 3 nodes, each of which are running elasticsearch 7.4.2.\r\n```\r\n{\r\n  \"name\" : \"ams1-2\",\r\n  \"cluster_name\" : \"brwnppr\",\r\n  \"cluster_uuid\" : \"vLBewzxMRgqO7da2DGWjJQ\",\r\n  \"version\" : {\r\n    \"number\" : \"7.4.2\",\r\n    \"build_flavor\" : \"default\",\r\n    \"build_type\" : \"deb\",\r\n    \"build_hash\" : \"2f90bbf7b93631e52bafb59b3b049cb44ec25e96\",\r\n    \"build_date\" : \"2019-10-28T20:40:44.881551Z\",\r\n    \"build_snapshot\" : false,\r\n    \"lucene_version\" : \"8.2.0\",\r\n    \"minimum_wire_compatibility_version\" : \"6.8.0\",\r\n    \"minimum_index_compatibility_version\" : \"6.0.0-beta1\"\r\n  },\r\n  \"tagline\" : \"You Know, for Search\"\r\n}\r\n```\r\n\r\nThis does not seem to be related to the elasticsearch-py module - but I didn't test if the same thing happens when I use a different elasticsearch-py version.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1052", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1052/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1052/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1052/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1052", "id": 517152084, "node_id": "MDU6SXNzdWU1MTcxNTIwODQ=", "number": 1052, "title": "Kibana \"api/console/proxy\"", "user": {"login": "nosteine", "id": 24456544, "node_id": "MDQ6VXNlcjI0NDU2NTQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/24456544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nosteine", "html_url": "https://github.com/nosteine", "followers_url": "https://api.github.com/users/nosteine/followers", "following_url": "https://api.github.com/users/nosteine/following{/other_user}", "gists_url": "https://api.github.com/users/nosteine/gists{/gist_id}", "starred_url": "https://api.github.com/users/nosteine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nosteine/subscriptions", "organizations_url": "https://api.github.com/users/nosteine/orgs", "repos_url": "https://api.github.com/users/nosteine/repos", "events_url": "https://api.github.com/users/nosteine/events{/privacy}", "received_events_url": "https://api.github.com/users/nosteine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-04T13:27:55Z", "updated_at": "2019-11-05T18:27:43Z", "closed_at": "2019-11-05T18:27:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can elasticsearch-py be used to query the data in Kibana in the same way it is used to query Elasticsearch ?\r\nIn my project's architecture, the ES nodes are not available outside the cluster, but Kibana is.\r\nManually, i am able to query Kibana like this:\r\n**https://kibana/api/console/proxy?path=logstash-indez-*/_search&method=POST**\r\nand the query format is the same as the query to ES\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1044", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1044/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1044/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1044/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1044", "id": 512655659, "node_id": "MDU6SXNzdWU1MTI2NTU2NTk=", "number": 1044, "title": "mark_dead() in ConnectionPool always removes the first connection in the pool", "user": {"login": "tongwang", "id": 793625, "node_id": "MDQ6VXNlcjc5MzYyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/793625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongwang", "html_url": "https://github.com/tongwang", "followers_url": "https://api.github.com/users/tongwang/followers", "following_url": "https://api.github.com/users/tongwang/following{/other_user}", "gists_url": "https://api.github.com/users/tongwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongwang/subscriptions", "organizations_url": "https://api.github.com/users/tongwang/orgs", "repos_url": "https://api.github.com/users/tongwang/repos", "events_url": "https://api.github.com/users/tongwang/events{/privacy}", "received_events_url": "https://api.github.com/users/tongwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-25T18:27:37Z", "updated_at": "2019-10-29T16:01:49Z", "closed_at": "2019-10-29T16:01:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "`ConnectionPool`'s `mark_dead()` method is supposed to remove the dead `connection` from the `connections` list:\r\n\r\n`self.connections.remove(connection)`\r\n\r\nHowever the equality comparison implementation `__eq__` in the `Connection` class is incorrect. It always returns `True` as long as both objects are `Connection` instances:\r\n\r\n```\r\ndef __eq__(self, other):\r\n        if not isinstance(other, Connection):\r\n            raise TypeError(\r\n                \"Unsupported equality check for %s and %s\" % (self, other)\r\n            )\r\n        return True\r\n```\r\n\r\nThis defect manifests itself by removing all good connections until the connections is empty. One dead connection will bring down the whole connection pool.\r\n\r\nProposed solution: removing `__eq__` from `Connection`. Thoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1043", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1043/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1043/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1043/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1043", "id": 510749554, "node_id": "MDU6SXNzdWU1MTA3NDk1NTQ=", "number": 1043, "title": "is there a API set corresponding to the all kibana operation?", "user": {"login": "loveJasmine", "id": 18051187, "node_id": "MDQ6VXNlcjE4MDUxMTg3", "avatar_url": "https://avatars2.githubusercontent.com/u/18051187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loveJasmine", "html_url": "https://github.com/loveJasmine", "followers_url": "https://api.github.com/users/loveJasmine/followers", "following_url": "https://api.github.com/users/loveJasmine/following{/other_user}", "gists_url": "https://api.github.com/users/loveJasmine/gists{/gist_id}", "starred_url": "https://api.github.com/users/loveJasmine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loveJasmine/subscriptions", "organizations_url": "https://api.github.com/users/loveJasmine/orgs", "repos_url": "https://api.github.com/users/loveJasmine/repos", "events_url": "https://api.github.com/users/loveJasmine/events{/privacy}", "received_events_url": "https://api.github.com/users/loveJasmine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-22T15:51:01Z", "updated_at": "2019-10-29T14:18:45Z", "closed_at": "2019-10-29T14:18:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1042", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1042/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1042/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1042/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1042", "id": 510144253, "node_id": "MDU6SXNzdWU1MTAxNDQyNTM=", "number": 1042, "title": "es.update failed on ES7.2.0.....", "user": {"login": "loveJasmine", "id": 18051187, "node_id": "MDQ6VXNlcjE4MDUxMTg3", "avatar_url": "https://avatars2.githubusercontent.com/u/18051187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loveJasmine", "html_url": "https://github.com/loveJasmine", "followers_url": "https://api.github.com/users/loveJasmine/followers", "following_url": "https://api.github.com/users/loveJasmine/following{/other_user}", "gists_url": "https://api.github.com/users/loveJasmine/gists{/gist_id}", "starred_url": "https://api.github.com/users/loveJasmine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loveJasmine/subscriptions", "organizations_url": "https://api.github.com/users/loveJasmine/orgs", "repos_url": "https://api.github.com/users/loveJasmine/repos", "events_url": "https://api.github.com/users/loveJasmine/events{/privacy}", "received_events_url": "https://api.github.com/users/loveJasmine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-21T17:30:17Z", "updated_at": "2019-10-29T14:20:56Z", "closed_at": "2019-10-29T14:20:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "from datetime import datetime\r\nfrom elasticsearch import Elasticsearch\r\nes = Elasticsearch()\r\nprint(es)\r\nes.indices.create(index='my-index', ignore=400)\r\n\r\ndata = {'title': 'hello world', 'url': 'http://view.news.qq.com/zt2011/usa_iraq/index.htm'}\r\nes.create(index='my-index', doc_type='politics', id=1, body=data)\r\ndata2 = {'title': 'hello world', 'url': 'http://view.news.qq.com/zt2011/usa_iraq/index.htm','date': '2011-12-16'}\r\nes.update(index='my-index', doc_type='politics', id=1, body=data2)\r\n\r\n++++++it report++++\r\nG:\\ub16_prj\\bumblebee\\ES>python yk-demo---elasticsearch-py.py\r\n<Elasticsearch([{}])>\r\nPOST http://localhost:9200/my-index/politics/1/_update [status:400 request:0.001s]\r\nTraceback (most recent call last):\r\n  File \"yk-demo---elasticsearch-py.py\", line 38, in <module>\r\n    es.update(index='my-index', doc_type='politics', id=1, body=data2)\r\n  File \"C:\\Users\\andyy\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\elasticsearch\\client\\utils.py\", line 73, in _wrapped\r\n    return func(*args, params=params, **kwargs)\r\n  File \"C:\\Users\\andyy\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\elasticsearch\\client\\__init__.py\", line 527, in update\r\n    doc_type, id, '_update'), params=params, body=body)\r\n  File \"C:\\Users\\andyy\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\elasticsearch\\transport.py\", line 312, in perform_request\r\n    status, headers, data = connection.perform_request(method, url, params, body, ignore=ignore, timeout=timeout)\r\n  File \"C:\\Users\\andyy\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\elasticsearch\\connection\\http_urllib3.py\", line 129, in perform_request\r\n    self._raise_error(response.status, raw_data)\r\n  File \"C:\\Users\\andyy\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\elasticsearch\\connection\\base.py\", line 125, in _raise_error\r\n    raise HTTP_EXCEPTIONS.get(status_code, TransportError)(status_code, error_message, additional_info)\r\nelasticsearch.exceptions.RequestError: TransportError(400, 'x_content_parse_exception', '[1:2] [UpdateRequest] unknown field [title], parser not found')\r\n\r\nG:\\ub16_prj\\bumblebee\\ES>\r\nG:\\ub16_prj\\bumblebee\\ES>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1041", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1041/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1041/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1041/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1041", "id": 509713320, "node_id": "MDU6SXNzdWU1MDk3MTMzMjA=", "number": 1041, "title": "helpers.bulk should consider timeout of waiting.", "user": {"login": "kingname", "id": 5440523, "node_id": "MDQ6VXNlcjU0NDA1MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5440523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kingname", "html_url": "https://github.com/kingname", "followers_url": "https://api.github.com/users/kingname/followers", "following_url": "https://api.github.com/users/kingname/following{/other_user}", "gists_url": "https://api.github.com/users/kingname/gists{/gist_id}", "starred_url": "https://api.github.com/users/kingname/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kingname/subscriptions", "organizations_url": "https://api.github.com/users/kingname/orgs", "repos_url": "https://api.github.com/users/kingname/repos", "events_url": "https://api.github.com/users/kingname/events{/privacy}", "received_events_url": "https://api.github.com/users/kingname/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-21T03:39:48Z", "updated_at": "2019-10-25T05:52:27Z", "closed_at": "2019-10-25T05:52:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now, the default batch size of docs to be inserted for bulk is 500, that is to say, I have to wait for 500 docs so that bulk could insert to ES. however, it may cost more than 5 hours to wait for 500 docs sometimes.\r\n\r\nI wonder to know if `bulk` could have a param could `timeout`, it means every x seconds, an insert action must be applied, no matter if the docs num is enougth or not?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1037", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1037/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1037/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1037/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1037", "id": 508125390, "node_id": "MDU6SXNzdWU1MDgxMjUzOTA=", "number": 1037, "title": "Issue with elasticsearch 7.4 instances and ids with spaces ", "user": {"login": "chrisbennight", "id": 1864782, "node_id": "MDQ6VXNlcjE4NjQ3ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1864782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisbennight", "html_url": "https://github.com/chrisbennight", "followers_url": "https://api.github.com/users/chrisbennight/followers", "following_url": "https://api.github.com/users/chrisbennight/following{/other_user}", "gists_url": "https://api.github.com/users/chrisbennight/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisbennight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisbennight/subscriptions", "organizations_url": "https://api.github.com/users/chrisbennight/orgs", "repos_url": "https://api.github.com/users/chrisbennight/repos", "events_url": "https://api.github.com/users/chrisbennight/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisbennight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-16T22:08:57Z", "updated_at": "2019-11-14T08:33:29Z", "closed_at": "2019-11-14T08:33:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Overview**:  \r\nIssue is an interaction between existing url path encoding behaviour and changes made in 7.4 https://www.elastic.co/guide/en/elasticsearch/reference/7.x/breaking-changes-7.4.html which no longer interpret a + in a url path as a space.\r\n\r\n**Details**: \r\nId's with spaces in them are encoded with python's  quote_plus method:  https://github.com/elastic/elasticsearch-py/blob/master/elasticsearch/client/utils.py#L52  \r\n\r\nThis method (docs here:  https://docs.python.org/3/library/urllib.parse.html ) encodes spaces as the `+` character instead of `%20`.   When an id field contains a space previously (es < 7.4) these `+` symbols would be translated back to a space.\r\n\r\nSince this behaviour has changed in es this now causes spaces in id's to be turned into the `+` character, which is then directly stored in elasticsearch.  \r\n\r\nNote that since bulk methods don't have the id in the URL field they continue to work correctly - so indexing the same data with the single and bulk methods results in different id's.  \r\n\r\n**Suggested Fix:**\r\nI don't believe the use of the python `urllib.parse.quote_plus` is appropriate;  I believe just using `urllib.parse.quote`  here:  https://github.com/elastic/elasticsearch-py/blob/master/elasticsearch/client/utils.py#L52  will fix the issue.    The only difference between the two methods (see docs for both method:  https://docs.python.org/3/library/urllib.parse.html ) is the handling of spaces.   the `urllib.parse.quote` method encodes spaces with %20 instead of +,  which I believe should work as expected in es 7.4  (and I think should work correctly with earlier versions - though haven't confirmed).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1035", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1035/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1035/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1035/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1035", "id": 504587118, "node_id": "MDU6SXNzdWU1MDQ1ODcxMTg=", "number": 1035, "title": "delete request_timeout args error ", "user": {"login": "mapengfei2016", "id": 20885056, "node_id": "MDQ6VXNlcjIwODg1MDU2", "avatar_url": "https://avatars0.githubusercontent.com/u/20885056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mapengfei2016", "html_url": "https://github.com/mapengfei2016", "followers_url": "https://api.github.com/users/mapengfei2016/followers", "following_url": "https://api.github.com/users/mapengfei2016/following{/other_user}", "gists_url": "https://api.github.com/users/mapengfei2016/gists{/gist_id}", "starred_url": "https://api.github.com/users/mapengfei2016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mapengfei2016/subscriptions", "organizations_url": "https://api.github.com/users/mapengfei2016/orgs", "repos_url": "https://api.github.com/users/mapengfei2016/repos", "events_url": "https://api.github.com/users/mapengfei2016/events{/privacy}", "received_events_url": "https://api.github.com/users/mapengfei2016/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-09T11:25:40Z", "updated_at": "2020-01-02T22:47:24Z", "closed_at": "2020-01-02T22:47:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "elasticsearch-7.2 :\r\nI before use elasticsearch-5.6 version use the .indices.delete function, use request_timeout args because delete often timeout, now I update to 7.2 version ,this args can't use it , always report this error:   \"TypeError: a float is required\" , \r\ntry trace source code, find this function will change int or float to string type , i find thie code from 5.0 never change ,but not error\r\nso this is bug or design in this way:\r\nhttps://github.com/elastic/elasticsearch-py/blob/master/elasticsearch/client/utils.py#L12\r\n\r\nif not bug ,how do I use it? \r\nthanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1033", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1033/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1033/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1033/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1033", "id": 503865649, "node_id": "MDU6SXNzdWU1MDM4NjU2NDk=", "number": 1033, "title": "Update Changelog", "user": {"login": "mosi-kha", "id": 35611016, "node_id": "MDQ6VXNlcjM1NjExMDE2", "avatar_url": "https://avatars1.githubusercontent.com/u/35611016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mosi-kha", "html_url": "https://github.com/mosi-kha", "followers_url": "https://api.github.com/users/mosi-kha/followers", "following_url": "https://api.github.com/users/mosi-kha/following{/other_user}", "gists_url": "https://api.github.com/users/mosi-kha/gists{/gist_id}", "starred_url": "https://api.github.com/users/mosi-kha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mosi-kha/subscriptions", "organizations_url": "https://api.github.com/users/mosi-kha/orgs", "repos_url": "https://api.github.com/users/mosi-kha/repos", "events_url": "https://api.github.com/users/mosi-kha/events{/privacy}", "received_events_url": "https://api.github.com/users/mosi-kha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "viglia", "id": 5112977, "node_id": "MDQ6VXNlcjUxMTI5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5112977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viglia", "html_url": "https://github.com/viglia", "followers_url": "https://api.github.com/users/viglia/followers", "following_url": "https://api.github.com/users/viglia/following{/other_user}", "gists_url": "https://api.github.com/users/viglia/gists{/gist_id}", "starred_url": "https://api.github.com/users/viglia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viglia/subscriptions", "organizations_url": "https://api.github.com/users/viglia/orgs", "repos_url": "https://api.github.com/users/viglia/repos", "events_url": "https://api.github.com/users/viglia/events{/privacy}", "received_events_url": "https://api.github.com/users/viglia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "viglia", "id": 5112977, "node_id": "MDQ6VXNlcjUxMTI5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5112977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viglia", "html_url": "https://github.com/viglia", "followers_url": "https://api.github.com/users/viglia/followers", "following_url": "https://api.github.com/users/viglia/following{/other_user}", "gists_url": "https://api.github.com/users/viglia/gists{/gist_id}", "starred_url": "https://api.github.com/users/viglia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viglia/subscriptions", "organizations_url": "https://api.github.com/users/viglia/orgs", "repos_url": "https://api.github.com/users/viglia/repos", "events_url": "https://api.github.com/users/viglia/events{/privacy}", "received_events_url": "https://api.github.com/users/viglia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-10-08T07:01:18Z", "updated_at": "2019-11-29T15:31:22Z", "closed_at": "2019-11-29T15:06:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi\r\nplease update [changelog](https://elasticsearch-py.readthedocs.io/en/master/Changelog.html#changelog) !\r\nthanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1032", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1032/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1032/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1032/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1032", "id": 503636407, "node_id": "MDU6SXNzdWU1MDM2MzY0MDc=", "number": 1032, "title": "random.choice() elasticsearch/helpers/actions.py not seeded?", "user": {"login": "jjlin453", "id": 56274615, "node_id": "MDQ6VXNlcjU2Mjc0NjE1", "avatar_url": "https://avatars2.githubusercontent.com/u/56274615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjlin453", "html_url": "https://github.com/jjlin453", "followers_url": "https://api.github.com/users/jjlin453/followers", "following_url": "https://api.github.com/users/jjlin453/following{/other_user}", "gists_url": "https://api.github.com/users/jjlin453/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjlin453/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjlin453/subscriptions", "organizations_url": "https://api.github.com/users/jjlin453/orgs", "repos_url": "https://api.github.com/users/jjlin453/repos", "events_url": "https://api.github.com/users/jjlin453/events{/privacy}", "received_events_url": "https://api.github.com/users/jjlin453/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-07T19:10:43Z", "updated_at": "2019-11-08T22:07:13Z", "closed_at": "2019-11-08T22:07:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using the ES client in distributed kubernetes containers and noticed our bulk writes are all targeting one host (out of 50), despite us passing all available hosts to the ES client initializer.  Through some investigation, we have determined it may be because the random function in actions.py doesn't seem to be seeded, and therefore uses system time by default.  Therefore when our kubernetes containers spin up at the same time they have the same seed and therefore \"randomly\" choose the same node to target.  \r\n\r\n1. Just to make sure we aren't missing something, is it possible to initialize the client and or function so that it seeds differently?\r\n2.  Would it be possible for you to confirm this on your  end?\r\n\r\nBest,\r\n\r\nJJ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1031", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1031/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1031/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1031/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1031", "id": 503342229, "node_id": "MDU6SXNzdWU1MDMzNDIyMjk=", "number": 1031, "title": "request_timeout value is in string instead of int/float in elasticsearch-py 7.0.5", "user": {"login": "awangku92", "id": 32903183, "node_id": "MDQ6VXNlcjMyOTAzMTgz", "avatar_url": "https://avatars1.githubusercontent.com/u/32903183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awangku92", "html_url": "https://github.com/awangku92", "followers_url": "https://api.github.com/users/awangku92/followers", "following_url": "https://api.github.com/users/awangku92/following{/other_user}", "gists_url": "https://api.github.com/users/awangku92/gists{/gist_id}", "starred_url": "https://api.github.com/users/awangku92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awangku92/subscriptions", "organizations_url": "https://api.github.com/users/awangku92/orgs", "repos_url": "https://api.github.com/users/awangku92/repos", "events_url": "https://api.github.com/users/awangku92/events{/privacy}", "received_events_url": "https://api.github.com/users/awangku92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-07T09:45:55Z", "updated_at": "2019-11-08T21:57:38Z", "closed_at": "2019-11-08T21:57:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "input :\r\n`int_timeout = int('1024')`\r\n`bulk(es, df_data, index=index, doc_type=doc, raise_on_error=True, request_timeout=int_timeout)`\r\n\r\noutput :\r\nConnectionError(Timeout value connect was 1024, but it must be an int, float or None.) caused by: ValueError(Timeout value connect was 1024, but it must be an int, float or None.)\r\n\r\nNote :\r\nworks fine using 7.0.4 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1028", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1028/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1028/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1028/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1028", "id": 501950668, "node_id": "MDU6SXNzdWU1MDE5NTA2Njg=", "number": 1028, "title": "Support freeze API", "user": {"login": "olivierbuez", "id": 44365587, "node_id": "MDQ6VXNlcjQ0MzY1NTg3", "avatar_url": "https://avatars2.githubusercontent.com/u/44365587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olivierbuez", "html_url": "https://github.com/olivierbuez", "followers_url": "https://api.github.com/users/olivierbuez/followers", "following_url": "https://api.github.com/users/olivierbuez/following{/other_user}", "gists_url": "https://api.github.com/users/olivierbuez/gists{/gist_id}", "starred_url": "https://api.github.com/users/olivierbuez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olivierbuez/subscriptions", "organizations_url": "https://api.github.com/users/olivierbuez/orgs", "repos_url": "https://api.github.com/users/olivierbuez/repos", "events_url": "https://api.github.com/users/olivierbuez/events{/privacy}", "received_events_url": "https://api.github.com/users/olivierbuez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-03T09:24:01Z", "updated_at": "2019-11-08T22:11:12Z", "closed_at": "2019-11-08T22:11:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Open API exists, should also support freeze API.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1026", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1026/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1026/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1026/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1026", "id": 501437048, "node_id": "MDU6SXNzdWU1MDE0MzcwNDg=", "number": 1026, "title": "fix typing of index creation timeout parameter", "user": {"login": "tomkralidis", "id": 910430, "node_id": "MDQ6VXNlcjkxMDQzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/910430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomkralidis", "html_url": "https://github.com/tomkralidis", "followers_url": "https://api.github.com/users/tomkralidis/followers", "following_url": "https://api.github.com/users/tomkralidis/following{/other_user}", "gists_url": "https://api.github.com/users/tomkralidis/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomkralidis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomkralidis/subscriptions", "organizations_url": "https://api.github.com/users/tomkralidis/orgs", "repos_url": "https://api.github.com/users/tomkralidis/repos", "events_url": "https://api.github.com/users/tomkralidis/events{/privacy}", "received_events_url": "https://api.github.com/users/tomkralidis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-02T11:41:03Z", "updated_at": "2019-11-08T22:16:51Z", "closed_at": "2019-11-08T22:16:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi: we use this awesome package as part of the [pygeoapi](https://pygeoapi.io) project.  Our builds started to [break](https://travis-ci.org/geopython/pygeoapi/jobs/592275226) with version 7.0.5 of the package.  The issue seems to be bound to [setting request timeouts](https://github.com/geopython/pygeoapi/blob/master/tests/load_es_data.py#L74).\r\n\r\nNote that this works fine using 7.0.4.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1024", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1024/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1024/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1024/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1024", "id": 500840881, "node_id": "MDU6SXNzdWU1MDA4NDA4ODE=", "number": 1024, "title": "different score for the same documents", "user": {"login": "Hedgehogues", "id": 4973667, "node_id": "MDQ6VXNlcjQ5NzM2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4973667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hedgehogues", "html_url": "https://github.com/Hedgehogues", "followers_url": "https://api.github.com/users/Hedgehogues/followers", "following_url": "https://api.github.com/users/Hedgehogues/following{/other_user}", "gists_url": "https://api.github.com/users/Hedgehogues/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hedgehogues/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hedgehogues/subscriptions", "organizations_url": "https://api.github.com/users/Hedgehogues/orgs", "repos_url": "https://api.github.com/users/Hedgehogues/repos", "events_url": "https://api.github.com/users/Hedgehogues/events{/privacy}", "received_events_url": "https://api.github.com/users/Hedgehogues/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-01T11:43:28Z", "updated_at": "2019-10-01T18:33:58Z", "closed_at": "2019-10-01T18:33:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello to all. I insert the document into the collection. The document consists of 1 field:\r\n```\r\n{\r\n\u00a0\u00a0\u00a0\u00a0 \"tokens\": \"makita\"\r\n}\r\n```\r\n\r\nI do it 3 times. Then, I do a full-text index search. And it turns out that the 3 documents found have different speeds. Moreover, when I ask for `explain = True`, for some reason` docCount` and `docFreq` are different for them. What's the trouble?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1023", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1023/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1023/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1023/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1023", "id": 500408751, "node_id": "MDU6SXNzdWU1MDA0MDg3NTE=", "number": 1023, "title": "Query execution in elasticsearch.helpers.scan()", "user": {"login": "JaharshKotha", "id": 9432757, "node_id": "MDQ6VXNlcjk0MzI3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9432757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JaharshKotha", "html_url": "https://github.com/JaharshKotha", "followers_url": "https://api.github.com/users/JaharshKotha/followers", "following_url": "https://api.github.com/users/JaharshKotha/following{/other_user}", "gists_url": "https://api.github.com/users/JaharshKotha/gists{/gist_id}", "starred_url": "https://api.github.com/users/JaharshKotha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JaharshKotha/subscriptions", "organizations_url": "https://api.github.com/users/JaharshKotha/orgs", "repos_url": "https://api.github.com/users/JaharshKotha/repos", "events_url": "https://api.github.com/users/JaharshKotha/events{/privacy}", "received_events_url": "https://api.github.com/users/JaharshKotha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-30T17:16:24Z", "updated_at": "2019-11-08T22:36:26Z", "closed_at": "2019-11-08T22:36:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the helpers.scan() to stream all documents from my AWS elasticsearch cluster, however I find that the query={} parameter is not respected and it returns all the documents from the cluster. \r\nMy code: \r\n'''\r\niterableQuestions = elasticsearch.helpers.scan(es,index=\"index_name\", preserve_order=True,query={\"query\": {\"match\": {\"question_en\": {\r\n                                         \"query\": \"Is it large enough to fit my elementary schooler's snow pants and winter coat in?\"}}}})\r\n'''\r\n\r\nVersion: 7.0.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1022", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1022/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1022/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1022/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1022", "id": 500229933, "node_id": "MDU6SXNzdWU1MDAyMjk5MzM=", "number": 1022, "title": "Norm elastic search ranking result", "user": {"login": "Hedgehogues", "id": 4973667, "node_id": "MDQ6VXNlcjQ5NzM2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4973667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hedgehogues", "html_url": "https://github.com/Hedgehogues", "followers_url": "https://api.github.com/users/Hedgehogues/followers", "following_url": "https://api.github.com/users/Hedgehogues/following{/other_user}", "gists_url": "https://api.github.com/users/Hedgehogues/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hedgehogues/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hedgehogues/subscriptions", "organizations_url": "https://api.github.com/users/Hedgehogues/orgs", "repos_url": "https://api.github.com/users/Hedgehogues/repos", "events_url": "https://api.github.com/users/Hedgehogues/events{/privacy}", "received_events_url": "https://api.github.com/users/Hedgehogues/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-30T11:59:34Z", "updated_at": "2019-10-01T18:34:43Z", "closed_at": "2019-10-01T18:34:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I want to normalize the scalar product when ranking.\r\n\r\nI will explain in simple words, and then add a little bit of mathematics. Suppose we have 2 search results. One search result was generated for the query `Pupkina Sons`, and the second - for the query` Sons Pupkina`. Then we have the output:\r\n\r\n```\r\ndocument_0, score_0\r\ndocument_1, score_1\r\ndocument_2, score_2\r\n...\r\ndocument_p, score_p\r\n```\r\n\r\nIssue for the second request:\r\n\r\n```\r\ndocument_0, score_0\r\ndocument_1, score_1\r\ndocument_2, score_2\r\n...\r\ndocument_q, score_q\r\n```\r\n\r\nLet score_0 for the first issue is 500. And score for the second issue is 0.5. ** Task ** is required to be able to compare the scores of different issues and evaluate the relevance to each other.\r\n\r\nDefault ranking function, as I know, is dot product. For example, we have vector for query (v) and vector for documents (d_i). For ranking, we make (q, d_i) for all i, where (., .) -- dot product. Please, explain me, how I can calculate (q / |q|, d_i / |d_i|)? I think it possible three solves of my problem. \r\n\r\n* function_score. Can I get weight (tf-idf) into function_score?\r\n* getting all weights by API elasticsearch. Flag `explain` is not valid solve, because this is so long. Another case, this is bad solve as explain return intersection (q and d_i tokens). Notice: While now, I say about dot product, in the future, I want calculate euclidean distance.\r\n* normalize elastic search weights by default ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1020", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1020/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1020/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1020/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1020", "id": 497725804, "node_id": "MDU6SXNzdWU0OTc3MjU4MDQ=", "number": 1020, "title": "Bulk on 7.0.4 does not support `version` and `version_type` fields ", "user": {"login": "StefanSmith", "id": 227291, "node_id": "MDQ6VXNlcjIyNzI5MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/227291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StefanSmith", "html_url": "https://github.com/StefanSmith", "followers_url": "https://api.github.com/users/StefanSmith/followers", "following_url": "https://api.github.com/users/StefanSmith/following{/other_user}", "gists_url": "https://api.github.com/users/StefanSmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/StefanSmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StefanSmith/subscriptions", "organizations_url": "https://api.github.com/users/StefanSmith/orgs", "repos_url": "https://api.github.com/users/StefanSmith/repos", "events_url": "https://api.github.com/users/StefanSmith/events{/privacy}", "received_events_url": "https://api.github.com/users/StefanSmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-24T14:28:32Z", "updated_at": "2020-01-03T17:05:17Z", "closed_at": "2020-01-03T17:05:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "As part of upgrading our cluster to Elasticsearch v7.1, we updated the elasticsearch library to v7.0.4. Unfortunately, we encountered a regression in the `bulk` function when changing our `_version` and `_version_type` action properties to `version` and `version_type`, respectively, as suggested [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking-changes-7.0.html#_camel_case_and_underscore_parameters_deprecated_in_6_x_have_been_removed).\r\n\r\nThe hardcoded whitelist referred to in this [old issue](https://github.com/elastic/elasticsearch-py/issues/564) is to blame. We have worked around this for now by overriding the `expand_action_callback` parameter on `bulk` but this feels like something the library should support out of the box.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1017", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1017/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1017/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1017/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1017", "id": 495295470, "node_id": "MDU6SXNzdWU0OTUyOTU0NzA=", "number": 1017, "title": "urllib3.connection.HTTPConnection when using elasticsearch.helpers.bulk", "user": {"login": "prateekponnuru", "id": 18573320, "node_id": "MDQ6VXNlcjE4NTczMzIw", "avatar_url": "https://avatars2.githubusercontent.com/u/18573320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prateekponnuru", "html_url": "https://github.com/prateekponnuru", "followers_url": "https://api.github.com/users/prateekponnuru/followers", "following_url": "https://api.github.com/users/prateekponnuru/following{/other_user}", "gists_url": "https://api.github.com/users/prateekponnuru/gists{/gist_id}", "starred_url": "https://api.github.com/users/prateekponnuru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prateekponnuru/subscriptions", "organizations_url": "https://api.github.com/users/prateekponnuru/orgs", "repos_url": "https://api.github.com/users/prateekponnuru/repos", "events_url": "https://api.github.com/users/prateekponnuru/events{/privacy}", "received_events_url": "https://api.github.com/users/prateekponnuru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-18T15:21:05Z", "updated_at": "2019-11-13T08:53:22Z", "closed_at": "2019-11-08T22:23:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my code -\r\n```\r\ntry:\r\n        bulk(client=es, \r\n                actions=(rec.index(using=conn) for rec in models.XYZ_model.objects.all().order_by('_id')[start:end].iterator()),\r\n                chunk_size=100)\r\n    except ConnectionError as e:\r\n        print(e.info)\r\n```\r\n\r\nThis is what i get - \r\n<urllib3.connection.HTTPConnection object at 0x0000020CC3AEB278>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it\r\n\r\nBut weirdly this only happens after all the records are indexed. No matter how small or how big the range of records i try - i tried between 1 and 10000.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1016", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1016/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1016/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1016/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1016", "id": 495142158, "node_id": "MDU6SXNzdWU0OTUxNDIxNTg=", "number": 1016, "title": "I want to print json data in elastic but i am getting error", "user": {"login": "bhavishyareddy", "id": 34676358, "node_id": "MDQ6VXNlcjM0Njc2MzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/34676358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhavishyareddy", "html_url": "https://github.com/bhavishyareddy", "followers_url": "https://api.github.com/users/bhavishyareddy/followers", "following_url": "https://api.github.com/users/bhavishyareddy/following{/other_user}", "gists_url": "https://api.github.com/users/bhavishyareddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhavishyareddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhavishyareddy/subscriptions", "organizations_url": "https://api.github.com/users/bhavishyareddy/orgs", "repos_url": "https://api.github.com/users/bhavishyareddy/repos", "events_url": "https://api.github.com/users/bhavishyareddy/events{/privacy}", "received_events_url": "https://api.github.com/users/bhavishyareddy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Winterflower", "id": 4982858, "node_id": "MDQ6VXNlcjQ5ODI4NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4982858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Winterflower", "html_url": "https://github.com/Winterflower", "followers_url": "https://api.github.com/users/Winterflower/followers", "following_url": "https://api.github.com/users/Winterflower/following{/other_user}", "gists_url": "https://api.github.com/users/Winterflower/gists{/gist_id}", "starred_url": "https://api.github.com/users/Winterflower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Winterflower/subscriptions", "organizations_url": "https://api.github.com/users/Winterflower/orgs", "repos_url": "https://api.github.com/users/Winterflower/repos", "events_url": "https://api.github.com/users/Winterflower/events{/privacy}", "received_events_url": "https://api.github.com/users/Winterflower/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Winterflower", "id": 4982858, "node_id": "MDQ6VXNlcjQ5ODI4NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4982858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Winterflower", "html_url": "https://github.com/Winterflower", "followers_url": "https://api.github.com/users/Winterflower/followers", "following_url": "https://api.github.com/users/Winterflower/following{/other_user}", "gists_url": "https://api.github.com/users/Winterflower/gists{/gist_id}", "starred_url": "https://api.github.com/users/Winterflower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Winterflower/subscriptions", "organizations_url": "https://api.github.com/users/Winterflower/orgs", "repos_url": "https://api.github.com/users/Winterflower/repos", "events_url": "https://api.github.com/users/Winterflower/events{/privacy}", "received_events_url": "https://api.github.com/users/Winterflower/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-09-18T10:39:13Z", "updated_at": "2020-07-27T17:23:04Z", "closed_at": "2020-07-27T17:23:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my code\r\n\r\n```\r\nimport actions as actions\r\nfrom elasticsearch import Elasticsearch, helpers\r\nimport os, uuid\r\n\r\n\r\nelastic = Elasticsearch()\r\n\r\nclass ESSend():\r\n    def __init__(self, es_server, index):\r\n        print(\"eeeeeeeeeeeeeeeeeeeee\")\r\n        self.es_server = es_server\r\n# ...or uncomment to use this instead:\r\nelastic = Elasticsearch(\"10.12.133.93\")\r\n#es = ESSend(\"10.12.133.93\", \"qualityportal-opentv-graphics-perf\")\r\n\r\n\r\ndef script_path():\r\n    print(\"eeeeeeeeeeeeeeeeeeeee\")\r\n\r\n    path = os.path.dirname(os.path.realpath(__file__))\r\n    if os.name == 'posix':\r\n        path = path + \"/\"\r\n    else:\r\n        path = path + chr(92)\r\n    return path\r\n\r\ndef get_data_from_file(self, path=script_path()):\r\n    file = open(path + str(self), encoding=\"utf8\", errors='ignore')\r\n    data = [line.strip() for line in file]\r\n    file.close()\r\n    return data\r\n\r\ndef bulk_json_data(json_file, _index, doc_type):\r\n    json_list = get_data_from_file(json_file)\r\n    for doc in json_list:\r\n        if '{\"index\"' not in doc:\r\n            yield {\r\n                \"_index\": _index,\r\n                \"_type\": doc_type,\r\n                \"_id\": uuid.uuid4(),\r\n                \"_source\": doc\r\n            }\r\n\r\ntry:\r\n    es = ESSend(\"10.12.133.93\", \"qualityportal-opentv-graphics-perf\")\r\n    response = helpers.bulk(elastic, bulk_json_data(\"data.json\", \"data\", \" \"))\r\n    response = helpers.bulk(elastic, actions, index='employees', doc_type='people')\r\n    print (\"\\nbulk_json_data() RESPONSE:\", response)\r\nexcept Exception as e:\r\n    print(\"\\nERROR:\", e)\r\n```\r\n\r\nThis is my json data\r\n\r\n```\r\n \"data\": [\r\n      { \"target\":\"111111111111111111\",\r\n          \"build\":\"OTV5.2.8_BLD6.0_180608\",\r\n          \"buildorder\":5243000,\r\n          \"testType\": \"animation\",\r\n          \"total_time\" : 47.289,\r\n          \"avg_fps\" : 7,\r\n          \"memoryConsumed\":\"545976\",\r\n          \"timestamp\": \"2019-02-02\",\r\n          \"image\":\"official\"\r\n      },\r\n      { \"target\":\"2222222222222222222\",\r\n          \"build\":\"OTV5.2.8_BLD6.0_180608\",\r\n          \"buildorder\":5243000,\r\n          \"testType\": \"animation\",\r\n          \"total_time\" : 47.289,\r\n          \"avg_fps\" : 7,\r\n          \"memoryConsumed\":\"545976\",\r\n          \"timestamp\": \"2019-02-02\",\r\n          \"image\":\"official\"\r\n      },\r\n      { \"target\":\"33333333333333333333333\",\r\n          \"build\":\"OTV5.2.8_BLD6.0_180608\",\r\n          \"buildorder\":5243000,\r\n          \"testType\": \"animation\",\r\n          \"total_time\" : 47.289,\r\n          \"avg_fps\" : 7,\r\n          \"memoryConsumed\":\"545976\",\r\n          \"timestamp\": \"2019-02-02\",\r\n          \"image\":\"official\"\r\n      }\r\n    ]\r\n```\r\nI am getting output as below but i want to reflect that json data in kibana\r\neeeeeeeeeeeeeeeeeeeee\r\n\r\n```\r\nERROR: ('40 document(s) failed to index.', [{'index': {'_index': 'data', '_type': ' ', '_id': '95dd499c-43ac-43df-a76f-16d962c70f07', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse, document is empty'}, 'data': ''}}, {'index': {'_index': 'data', '_type': ' ', '_id': '7b044aa6-932d-4e37-8f12-0f43dcab509d', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'json_e_o_f_exception', 'reason': 'Unexpected end-of-input: expected close marker for Object (start marker at [Source: org.elasticsearch.common.bytes.BytesReference$MarkSupportingStreamInputWrapper@1e7d4126; line: 1, column: 1])\\n at [Source: org.elasticsearch.common.bytes.BytesReference$MarkSupportingStreamInputWrapper@1e7d4126; line: 1, column: 3]'}}, 'data': '{'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'ea1c31d8-c273-4660-82b6-7746dcfaa687', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"data\": ['}}, {'index': {'_index': 'data', '_type': ' ', '_id': '19083ae1-f031-4dba-9ead-0376476537b6', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'json_parse_exception', 'reason': 'Unexpected end-of-input within/between Object entries\\n at [Source: org.elasticsearch.common.bytes.BytesReference$MarkSupportingStreamInputWrapper@2c6a1747; line: 1, column: 65]'}}, 'data': '{ \"target\":\"111111111111111111\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '544a5d67-3b08-4efe-8a5e-cd87eca71173', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"build\":\"OTV5.2.8_BLD6.0_180608\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '8d0225ba-62be-4b1d-8c74-d40b68a73a19', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"buildorder\":5243000,'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '6c4200a9-e436-4ead-8556-f12a830be93e', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"testType\": \"animation\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'fe459818-2c51-42c3-a3cb-e701ebdd19ca', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"total_time\" : 47.289,'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '168f2827-2bd4-41cd-85a3-b9d529a7b4cf', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"avg_fps\" : 7,'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '4d487d8e-d33d-4b70-b21d-f8ccaf8d839e', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"memoryConsumed\":\"545976\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '43e2c101-7432-4948-95f4-6b6bcd9a7391', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"timestamp\": \"2019-02-02\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '418f46ea-75ac-4a82-8766-ef82ae9c0829', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"image\":\"official\"'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'd0468faa-7baf-459d-b0cf-9c1743defc84', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '},'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '86750cc0-1f50-4075-b980-9aa5df98cfa6', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'json_parse_exception', 'reason': 'Unexpected end-of-input within/between Object entries\\n at [Source: org.elasticsearch.common.bytes.BytesReference$MarkSupportingStreamInputWrapper@465d1d5a; line: 1, column: 67]'}}, 'data': '{ \"target\":\"2222222222222222222\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '9eca6d30-2fb6-4725-9159-37ada103ce9f', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"build\":\"OTV5.2.8_BLD6.0_180608\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'b4df8d70-c92f-43dd-98b2-41ce47c90ffd', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"buildorder\":5243000,'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '15c477d8-e920-4916-9c27-87491527a38f', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"testType\": \"animation\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '8955f937-9e44-422f-9760-c335f12a2f7f', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"total_time\" : 47.289,'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '35b2d61a-f7a8-4729-ac80-8c1fb708e5f9', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"avg_fps\" : 7,'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'e55a2189-e408-4035-83d6-bc435db06b13', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"memoryConsumed\":\"545976\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'ae87ce75-4b5f-4bad-838a-a220da939b52', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"timestamp\": \"2019-02-02\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '99f7ff94-a1fb-4aef-8df5-eb4f0aab3886', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"image\":\"official\"'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'd0d4273c-09a0-44c3-8c9d-b10c6003512e', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '},'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'f4c6e4ca-7302-4919-81ea-5973ddc29fe3', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'json_parse_exception', 'reason': 'Unexpected end-of-input within/between Object entries\\n at [Source: org.elasticsearch.common.bytes.BytesReference$MarkSupportingStreamInputWrapper@6b14dc00; line: 1, column: 75]'}}, 'data': '{ \"target\":\"33333333333333333333333\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'e97fa1fe-189d-4f82-bc2c-3ef651fdb293', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"build\":\"OTV5.2.8_BLD6.0_180608\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '74311a62-4fe6-4c87-8de7-797a996c84e5', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"buildorder\":5243000,'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '890ee4c5-1fc9-46b9-80df-a1df5cd42d58', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"testType\": \"animation\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '8f18bbba-c62a-4c78-9fb4-b7ab571c00ec', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"total_time\" : 47.289,'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '40d0f4f7-4c09-4b7e-804e-4fc0996f087f', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"avg_fps\" : 7,'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '6161d9ef-5d76-49eb-bdf9-317b0e1ba2bb', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"memoryConsumed\":\"545976\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '10e4a19e-d994-425d-92f3-d085caf8b1c5', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"timestamp\": \"2019-02-02\",'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'cebd93ec-0220-486d-93e5-2963e1e268ff', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '\"image\":\"official\"'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'ed150170-f72e-4ee2-bb6a-df1fbb3a4f84', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '}'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '4d4baefc-74b7-4223-a1fd-9c8f939af685', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': ']'}}, {'index': {'_index': 'data', '_type': ' ', '_id': '6fcd0d69-1990-4bf1-b487-a1606703c05b', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse', 'caused_by': {'type': 'not_x_content_exception', 'reason': 'Compressor detection can only be called on some xcontent bytes or compressed xcontent bytes'}}, 'data': '}'}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'b19db6f4-e131-407b-a5d7-1d3f429c4ff7', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse, document is empty'}, 'data': ''}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'fc339df3-8c13-4579-a503-776c0fc7386b', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse, document is empty'}, 'data': ''}}, {'index': {'_index': 'data', '_type': ' ', '_id': '138ebc6e-b32d-4bc6-8fb8-a56712608536', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse, document is empty'}, 'data': ''}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'dfa973a6-11cb-40bf-9624-80ca6579e64c', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse, document is empty'}, 'data': ''}}, {'index': {'_index': 'data', '_type': ' ', '_id': 'da172cd2-1e0a-48cc-97ac-2100c065deba', 'status': 400, 'error': {'type': 'mapper_parsing_exception', 'reason': 'failed to parse, document is empty'}, 'data': ''}}])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1015", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1015/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1015/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1015/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1015", "id": 495072963, "node_id": "MDU6SXNzdWU0OTUwNzI5NjM=", "number": 1015, "title": "Count function returns different document count", "user": {"login": "Narzhan", "id": 26620314, "node_id": "MDQ6VXNlcjI2NjIwMzE0", "avatar_url": "https://avatars1.githubusercontent.com/u/26620314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Narzhan", "html_url": "https://github.com/Narzhan", "followers_url": "https://api.github.com/users/Narzhan/followers", "following_url": "https://api.github.com/users/Narzhan/following{/other_user}", "gists_url": "https://api.github.com/users/Narzhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Narzhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Narzhan/subscriptions", "organizations_url": "https://api.github.com/users/Narzhan/orgs", "repos_url": "https://api.github.com/users/Narzhan/repos", "events_url": "https://api.github.com/users/Narzhan/events{/privacy}", "received_events_url": "https://api.github.com/users/Narzhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-18T08:35:28Z", "updated_at": "2019-09-23T07:09:57Z", "closed_at": "2019-09-23T07:09:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a method to count the records in Elasticsearch the count of documents is zero. When I use a direct query to Elasticsearch the number of records is correct.\r\n\r\nRequests example:\r\n```\r\n>>> req=requests.get(\"http://elasticsearch:9200/index/_count\", headers= {\"Content-Type\": \"application/json\"})\r\n>>> req.content\r\nb'{\"count\":2829320,\"_shards\":{\"total\":1,\"successful\":1,\"skipped\":0,\"failed\":0}}'\r\n>>> host = elasticsearch.Elasticsearch(\"elasticsearch\", port=9200)\r\n>>> counts=host.count(\"index\", body={\"query\": {\"match_all\": {}}}, ignore_unavailable=True,\r\n...                                      request_timeout=60)\r\n>>> counts\r\n{'count': 0, '_shards': {'total': 1, 'successful': 1, 'skipped': 0, 'failed': 0}}\r\n>>> counts=host.count(\"index\", ignore_unavailable=True, request_timeout=60)\r\n>>> counts\r\n{'count': 0, '_shards': {'total': 1, 'successful': 1, 'skipped': 0, 'failed': 0}} \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1014", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1014/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1014/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1014/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1014", "id": 494873460, "node_id": "MDU6SXNzdWU0OTQ4NzM0NjA=", "number": 1014, "title": "Getting a TransportError(414, ....) when using scan", "user": {"login": "spott", "id": 53284, "node_id": "MDQ6VXNlcjUzMjg0", "avatar_url": "https://avatars2.githubusercontent.com/u/53284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spott", "html_url": "https://github.com/spott", "followers_url": "https://api.github.com/users/spott/followers", "following_url": "https://api.github.com/users/spott/following{/other_user}", "gists_url": "https://api.github.com/users/spott/gists{/gist_id}", "starred_url": "https://api.github.com/users/spott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spott/subscriptions", "organizations_url": "https://api.github.com/users/spott/orgs", "repos_url": "https://api.github.com/users/spott/repos", "events_url": "https://api.github.com/users/spott/events{/privacy}", "received_events_url": "https://api.github.com/users/spott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-17T17:20:58Z", "updated_at": "2019-11-08T22:31:07Z", "closed_at": "2019-11-08T22:31:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems to be related to the very (*very*, *very*) long URI that is used for the pagination.  [this](https://github.com/elastic/elasticsearch-ruby/issues/423) bug in the elasticsearch-ruby repo seems to hint that the \"scroll_id\" parameter is better passed in the body of the request, but I don't know how to do that in elasticsearch-dsl.\r\n\r\nI'm not doing anything complicated here, just doing a search with a single result:\r\n\r\n```\r\ns = ed.Search(using=client, index='myindex_*').query('match', _id=\"<some_id>\")\r\n\r\nfor hit in s.scan():\r\n    print(hit)\r\n```\r\n\r\nedit: As it is probably important: I'm using elasticsearch-py and elasticsearch-dsl-py versions 6.4.0\r\n\r\nLet me know if any more information is needed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1013", "repository_url": "https://api.github.com/repos/elastic/elasticsearch-py", "labels_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1013/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1013/comments", "events_url": "https://api.github.com/repos/elastic/elasticsearch-py/issues/1013/events", "html_url": "https://github.com/elastic/elasticsearch-py/issues/1013", "id": 494549056, "node_id": "MDU6SXNzdWU0OTQ1NDkwNTY=", "number": 1013, "title": "How can I send binary object to server directly?", "user": {"login": "yangchengtest", "id": 10047119, "node_id": "MDQ6VXNlcjEwMDQ3MTE5", "avatar_url": "https://avatars2.githubusercontent.com/u/10047119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangchengtest", "html_url": "https://github.com/yangchengtest", "followers_url": "https://api.github.com/users/yangchengtest/followers", "following_url": "https://api.github.com/users/yangchengtest/following{/other_user}", "gists_url": "https://api.github.com/users/yangchengtest/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangchengtest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangchengtest/subscriptions", "organizations_url": "https://api.github.com/users/yangchengtest/orgs", "repos_url": "https://api.github.com/users/yangchengtest/repos", "events_url": "https://api.github.com/users/yangchengtest/events{/privacy}", "received_events_url": "https://api.github.com/users/yangchengtest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-17T10:51:53Z", "updated_at": "2019-09-26T07:41:14Z", "closed_at": "2019-09-26T07:41:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "ES Version:5.4.0\r\nPYTHON Version:3.6.0\r\n\r\nI found the json module only support Class str.\r\nHow can I send Class bytes object directly?\r\nIn my dataset,I want to save binary  object.\r\nThanks~", "performed_via_github_app": null, "score": 1.0}]}