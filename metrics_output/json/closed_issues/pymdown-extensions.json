{"total_count": 199, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1056", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1056/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1056/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1056/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/1056", "id": 681178661, "node_id": "MDU6SXNzdWU2ODExNzg2NjE=", "number": 1056, "title": "Loading \"pymdownx.superfences\" alongside \"markdown.extensions.fenced_code\"", "user": {"login": "itopaloglu83", "id": 461270, "node_id": "MDQ6VXNlcjQ2MTI3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/461270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itopaloglu83", "html_url": "https://github.com/itopaloglu83", "followers_url": "https://api.github.com/users/itopaloglu83/followers", "following_url": "https://api.github.com/users/itopaloglu83/following{/other_user}", "gists_url": "https://api.github.com/users/itopaloglu83/gists{/gist_id}", "starred_url": "https://api.github.com/users/itopaloglu83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itopaloglu83/subscriptions", "organizations_url": "https://api.github.com/users/itopaloglu83/orgs", "repos_url": "https://api.github.com/users/itopaloglu83/repos", "events_url": "https://api.github.com/users/itopaloglu83/events{/privacy}", "received_events_url": "https://api.github.com/users/itopaloglu83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-18T16:33:51Z", "updated_at": "2020-08-19T06:13:11Z", "closed_at": "2020-08-18T18:09:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if this causes any problems but [usage notes](https://facelessuser.github.io/pymdown-extensions/usage_notes/) states that `pymdownx.superfences` replaces `markdown.extensions.fenced_code`. But when I check the build logs for the MkDocs, it says that both of them are loaded at the same time. Does this cause any issues anywhere?\r\n\r\n> (.env) user@computer project.github.io % mkdocs build -v\r\n> ...\r\n> DEBUG   -  Config value: 'markdown_extensions' = ['toc', 'tables', 'fenced_code', 'footnotes', 'attr_list', 'def_list', 'pymdownx.tilde', 'pymdownx.tasklist', 'admonition', 'pymdownx.details', 'pymdownx.highlight', 'pymdownx.magiclink', 'pymdownx.superfences', 'pymdownx.tabbed', 'plantuml_markdown']\r\n> ...\r\n> (.env) user@computer project.github.io %", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1049", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1049/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1049/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1049/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/1049", "id": 676434134, "node_id": "MDU6SXNzdWU2NzY0MzQxMzQ=", "number": 1049, "title": "8.0 Migration guide", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351764, "node_id": "MDU6TGFiZWwxMTc2MzUxNzY0", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20docs", "name": "C: docs", "color": "709ad8", "default": false, "description": "Related to documentation."}, {"id": 1176809858, "node_id": "MDU6TGFiZWwxMTc2ODA5ODU4", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20maintenance", "name": "T: maintenance", "color": "b2ffeb", "default": false, "description": "Maintenance chore."}, {"id": 1637426219, "node_id": "MDU6TGFiZWwxNjM3NDI2MjE5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/skip-triage", "name": "skip-triage", "color": "000000", "default": false, "description": "Tells bot to not tag a new issue with 'triage'."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-10T21:42:14Z", "updated_at": "2020-08-11T06:36:19Z", "closed_at": "2020-08-11T06:36:19Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1047", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1047/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1047/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1047/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/1047", "id": 673413420, "node_id": "MDU6SXNzdWU2NzM0MTM0MjA=", "number": 1047, "title": "Arithmatex does not preserve math equations in code block", "user": {"login": "prettykingking", "id": 6395195, "node_id": "MDQ6VXNlcjYzOTUxOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6395195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prettykingking", "html_url": "https://github.com/prettykingking", "followers_url": "https://api.github.com/users/prettykingking/followers", "following_url": "https://api.github.com/users/prettykingking/following{/other_user}", "gists_url": "https://api.github.com/users/prettykingking/gists{/gist_id}", "starred_url": "https://api.github.com/users/prettykingking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prettykingking/subscriptions", "organizations_url": "https://api.github.com/users/prettykingking/orgs", "repos_url": "https://api.github.com/users/prettykingking/repos", "events_url": "https://api.github.com/users/prettykingking/events{/privacy}", "received_events_url": "https://api.github.com/users/prettykingking/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-05T09:57:47Z", "updated_at": "2020-08-06T05:51:26Z", "closed_at": "2020-08-06T05:51:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's very often to write pseudo-code as plain code block, often with math symbols. So the Arithmatex should preserve math equations within plain code block too. It would be great. \ud83d\ude04 \r\n\r\n**Example Pseudo-Code**\r\n```\r\nT = []\r\nFor each time slot $i$\r\n    For each topic t in T\r\n        If $e_i^I$ > $\\beta_m$ Then\r\n            ...\r\n       Else\r\n            ...\r\n       End If\r\n   End For\r\nEnd For\r\n...\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1040", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1040/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1040/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1040/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/1040", "id": 671634976, "node_id": "MDU6SXNzdWU2NzE2MzQ5NzY=", "number": 1040, "title": "Tabbed Regression: Not selecting right parent or sibling", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149995941, "node_id": "MDU6TGFiZWwxNDk5OTU5NDE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20bug", "name": "T: bug", "color": "fc544e", "default": false, "description": "Bug."}, {"id": 1637426219, "node_id": "MDU6TGFiZWwxNjM3NDI2MjE5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/skip-triage", "name": "skip-triage", "color": "000000", "default": false, "description": "Tells bot to not tag a new issue with 'triage'."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-02T15:18:32Z", "updated_at": "2020-08-03T03:15:10Z", "closed_at": "2020-08-03T03:15:09Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\r\n=== \"Tab\"\r\n    ??? note \"Open styled details\"\r\n\r\n        ??? danger \"Nested details!\"\r\n\r\n            And more content again.\r\n```\r\n\r\nThis will cause, with our latest tabbed fixes, us to insert the second nested details object into the summary of the first.\r\n\r\nWe were able to fix list handling in tabbed in our latest, but we inadvertently introduced this edge case which our tests didn't cover. This was actually noticed in our documents as the rendering didn't turn out correctly.\r\n\r\nThe fix was more complex in tabbed, and it is likely we need to better understand the interaction and see there. I imagine when we are processing the children, the logic we added to handle lists and such is somehow grabbing the first child under the nested details. This also happens with admonitions.\r\n\r\nI am, of course, assuming the logic is with tabbed as nested details and admonitions by themselves do not seem susceptible to this bug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1031", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1031/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1031/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1031/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/1031", "id": 664740124, "node_id": "MDU6SXNzdWU2NjQ3NDAxMjQ=", "number": 1031, "title": "Fenced code inside lists", "user": {"login": "erez-o", "id": 4282254, "node_id": "MDQ6VXNlcjQyODIyNTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4282254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erez-o", "html_url": "https://github.com/erez-o", "followers_url": "https://api.github.com/users/erez-o/followers", "following_url": "https://api.github.com/users/erez-o/following{/other_user}", "gists_url": "https://api.github.com/users/erez-o/gists{/gist_id}", "starred_url": "https://api.github.com/users/erez-o/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erez-o/subscriptions", "organizations_url": "https://api.github.com/users/erez-o/orgs", "repos_url": "https://api.github.com/users/erez-o/repos", "events_url": "https://api.github.com/users/erez-o/events{/privacy}", "received_events_url": "https://api.github.com/users/erez-o/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-23T20:19:06Z", "updated_at": "2020-07-23T21:17:52Z", "closed_at": "2020-07-23T21:17:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nRegarding, `SuperFences`, can you please add support for fenced code inside lists?\r\n\r\nUnless I'm using it wrong, fenced code inside list items are ending the list with a `</ul><pre>...</pre>` instead of rendered as `<pre>...</pre>` inside the `<li>`.\r\n\r\nI created an example in https://github.com/erez-o/fenced-code-md/blob/master/README.md/. The way github renders it is the way I expect.\r\n\r\nLooking at babel, I think it's relatively common for fenced code to be supported inside lists.\r\n\r\n[babel](https://babelmark.github.io/?text=%23%23+Type+info%0A%0AParagraph%3A%0A%0A*+First+element+in+list%3A%0A++%0A++%60%60%60cpp%0A++auto+id+%3D+5%3B%0A++%60%60%60%0A++%0A++Some+paragraph%0A++%0A*+Second+element%0A++%0A++%60%60%60cpp%0A++auto+name+%3D+type_info%3Cmy_type%3E%3A%3Aname()%3B%0A++%60%60%60%0A++%0A++Another+par%3A%0A++%0A++%60%60%60cpp%0A++struct+my_type+%7B+%2F*+...+*%2F+%7D%3B%0A++%60%60%60%0A%0ANew+paragraph%0A)\r\n\r\nIf it helps to reproduce, I activated with `extensions = ['pymdownx.highlight', 'pymdownx.extra']`.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1030", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1030/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1030/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1030/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/1030", "id": 664623361, "node_id": "MDU6SXNzdWU2NjQ2MjMzNjE=", "number": 1030, "title": "remove \"language\" from css class", "user": {"login": "erez-o", "id": 4282254, "node_id": "MDQ6VXNlcjQyODIyNTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4282254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erez-o", "html_url": "https://github.com/erez-o", "followers_url": "https://api.github.com/users/erez-o/followers", "following_url": "https://api.github.com/users/erez-o/following{/other_user}", "gists_url": "https://api.github.com/users/erez-o/gists{/gist_id}", "starred_url": "https://api.github.com/users/erez-o/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erez-o/subscriptions", "organizations_url": "https://api.github.com/users/erez-o/orgs", "repos_url": "https://api.github.com/users/erez-o/repos", "events_url": "https://api.github.com/users/erez-o/events{/privacy}", "received_events_url": "https://api.github.com/users/erez-o/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351799, "node_id": "MDU6TGFiZWwxMTc2MzUxNzk5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20highlight", "name": "C: highlight", "color": "bfd4f2", "default": false, "description": "Related to the highlight extension."}, {"id": 151745391, "node_id": "MDU6TGFiZWwxNTE3NDUzOTE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/P:%20maybe", "name": "P: maybe", "color": "dddddd", "default": false, "description": "Pending approval of low priority request."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-23T16:46:43Z", "updated_at": "2020-08-03T05:51:01Z", "closed_at": "2020-08-03T04:17:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nQuestion relating to 'pymdownx.highlight':\r\n\r\nIs there a way to remove the prefix string \"language\" in \"language-mylanguage\"?\r\n\r\nI can set `css_class:''`, but I see no option to set the prefix instead of `prefix:'language-'` to `prefix:''`\r\n\r\nHighlight.js does support class='mylanguage', without the need to specify class='language-mylanguage'\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1019", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1019/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1019/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1019/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/1019", "id": 656474265, "node_id": "MDU6SXNzdWU2NTY0NzQyNjU=", "number": 1019, "title": "Better handling of  escapes dealing with HTML special characters", "user": {"login": "rwols", "id": 2431823, "node_id": "MDQ6VXNlcjI0MzE4MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2431823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwols", "html_url": "https://github.com/rwols", "followers_url": "https://api.github.com/users/rwols/followers", "following_url": "https://api.github.com/users/rwols/following{/other_user}", "gists_url": "https://api.github.com/users/rwols/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwols/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwols/subscriptions", "organizations_url": "https://api.github.com/users/rwols/orgs", "repos_url": "https://api.github.com/users/rwols/repos", "events_url": "https://api.github.com/users/rwols/events{/privacy}", "received_events_url": "https://api.github.com/users/rwols/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351796, "node_id": "MDU6TGFiZWwxMTc2MzUxNzk2", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20escapeall", "name": "C: escapeall", "color": "bfd4f2", "default": false, "description": "Related to the escapeall extension."}, {"id": 149995941, "node_id": "MDU6TGFiZWwxNDk5OTU5NDE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20bug", "name": "T: bug", "color": "fc544e", "default": false, "description": "Bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-14T09:36:35Z", "updated_at": "2020-07-14T13:34:54Z", "closed_at": "2020-07-14T13:34:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The backslash escapes from CommonMark are:\r\n\r\n```\r\n!\"#$%&'()*+,-./:;<=>?@[\\]^_`{\u00a6}~0123456789\r\n```\r\n\r\nThe backslash escapes from Daring Fireball are:\r\n```\r\n\\`*_{}[]()#+-.!\r\n```\r\n\r\nThe set difference is\r\n```\r\n^9&2%;~=@\"':8><?/\u00a64$360751,\r\n```\r\n\r\nIt would be nice to have an extension that processes these potential escapes.\r\n\r\nSee: https://github.com/sublimelsp/LSP-css/pull/16\r\nSee: https://spec.commonmark.org/0.15/#backslash-escapes\r\nSee: https://daringfireball.net/projects/markdown/syntax#backslash", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1013", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1013/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1013/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1013/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/1013", "id": 652251541, "node_id": "MDU6SXNzdWU2NTIyNTE1NDE=", "number": 1013, "title": "Superfences issue with Mermaid", "user": {"login": "bnice5000", "id": 100688, "node_id": "MDQ6VXNlcjEwMDY4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/100688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnice5000", "html_url": "https://github.com/bnice5000", "followers_url": "https://api.github.com/users/bnice5000/followers", "following_url": "https://api.github.com/users/bnice5000/following{/other_user}", "gists_url": "https://api.github.com/users/bnice5000/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnice5000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnice5000/subscriptions", "organizations_url": "https://api.github.com/users/bnice5000/orgs", "repos_url": "https://api.github.com/users/bnice5000/repos", "events_url": "https://api.github.com/users/bnice5000/events{/privacy}", "received_events_url": "https://api.github.com/users/bnice5000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-07T11:38:14Z", "updated_at": "2020-07-09T12:51:42Z", "closed_at": "2020-07-09T12:51:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am setting up superfences with mermaid in pelican. When I use the `superfences.fence_div_format`, it surrounds it with a div but it converts all the `>` and `<` into `&lt` and `&gt;`. Because of that mermaid cannot make heads or tail of the configuration. I feel like I followed the directions but I might be missing something. Any help would be greatly appreciated.\r\n\r\nCurrently my configuration is as follows:\r\n\r\n```python\r\nimport pymdownx.superfences as superfences\r\n\r\nMARKDOWN = {\r\n    'extension_configs': {\r\n        'markdown.extensions.codehilite': {'css_class': 'highlight'},\r\n        'markdown.extensions.smarty': {},\r\n        'markdown.extensions.meta': {},\r\n        'markdown.extensions.admonition': {},\r\n        'markdown.extensions.toc': {},\r\n        'pymdownx.extra': {\r\n            \"pymdownx.superfences\": {\r\n                \"custom_fences\": [\r\n                    # {'name': 'flow', 'class': 'uml-flowchart'},\r\n                    # {'name': 'sequence', 'class': 'uml-sequence-diagram'},\r\n                    {'name': 'mermaid', 'class': 'mermaid', 'format': superfences.fence_div_format}, \r\n                ]}\r\n        },\r\n        'pymdownx.tilde': {},\r\n        'pymdownx.tasklist': {},\r\n        'pymdownx.smartsymbols': {},\r\n    },\r\n}\r\n```\r\n\r\nWhen I input the following:\r\n````markdown\r\n```mermaid\r\nsequenceDiagram\r\n    participant Alice\r\n    participant Bob\r\n    Alice->>John: Hello John, how are you?\r\n    loop Healthcheck\r\n        John->>John: Fight against hypochondria\r\n    end\r\n    Note right of John: Rational thoughts <br>prevail!\r\n    John-->>Alice: Great!\r\n    John->>Bob: How about you?\r\n    Bob-->>John: Jolly good!\r\n```\r\n````\r\nIt returns the following output:\r\n\r\n```html5\r\ndiv class=\"mermaid\">sequenceDiagram\r\n    participant Alice\r\n    participant Bob\r\n    Alice-&gt;&gt;John: Hello John, how are you?\r\n    loop Healthcheck\r\n        John-&gt;&gt;John: Fight against hypochondria\r\n    end\r\n    Note right of John: Rational thoughts &lt;br/&gt;prevail!\r\n    John\u2014&gt;&gt;Alice: Great!\r\n    John-&gt;&gt;Bob: How about you?\r\n    Bob\u2014&gt;&gt;John: Jolly good!</div>\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1005", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1005/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1005/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1005/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/1005", "id": 649169367, "node_id": "MDU6SXNzdWU2NDkxNjkzNjc=", "number": 1005, "title": "Open Links in New Tabs", "user": {"login": "PackeTsar", "id": 16087223, "node_id": "MDQ6VXNlcjE2MDg3MjIz", "avatar_url": "https://avatars3.githubusercontent.com/u/16087223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PackeTsar", "html_url": "https://github.com/PackeTsar", "followers_url": "https://api.github.com/users/PackeTsar/followers", "following_url": "https://api.github.com/users/PackeTsar/following{/other_user}", "gists_url": "https://api.github.com/users/PackeTsar/gists{/gist_id}", "starred_url": "https://api.github.com/users/PackeTsar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PackeTsar/subscriptions", "organizations_url": "https://api.github.com/users/PackeTsar/orgs", "repos_url": "https://api.github.com/users/PackeTsar/repos", "events_url": "https://api.github.com/users/PackeTsar/events{/privacy}", "received_events_url": "https://api.github.com/users/PackeTsar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1626977756, "node_id": "MDU6TGFiZWwxNjI2OTc3NzU2", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20triage", "name": "S: triage", "color": "f0f49a", "default": false, "description": "Issue needs triage."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-01T17:58:41Z", "updated_at": "2020-07-02T13:40:59Z", "closed_at": "2020-07-02T13:40:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, thank you for the awesome library! I found this project looking for a way to get ~~strikethroughs~~ working properly and found a bunch of cool features I have now picked up and used!\r\n\r\nI wanted to ask if it is already possible, and if not then can it be added as a feature, to have regular hyperlinks open in a new tab?\r\n\r\nI have seen suggestions in other places of using `[Some Text](https://domain.com){:target=\"_blank\"}` for this, although it would seem easier to pass internal parameters like `{newtab}`. I was also looking at the [[Feature Request] Video Embeds](https://github.com/facelessuser/pymdown-extensions/issues/897) issue which seems to want to do something similar for media (`![Text](URL){some_params}`) links.\r\n\r\nPlease let me know if this is already possible or if it can be. Thanks!  :D", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1004", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1004/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1004/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/1004/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/1004", "id": 649046676, "node_id": "MDU6SXNzdWU2NDkwNDY2NzY=", "number": 1004, "title": "Talk on emptyline support in Display LaTex", "user": {"login": "minghu6", "id": 13537217, "node_id": "MDQ6VXNlcjEzNTM3MjE3", "avatar_url": "https://avatars2.githubusercontent.com/u/13537217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minghu6", "html_url": "https://github.com/minghu6", "followers_url": "https://api.github.com/users/minghu6/followers", "following_url": "https://api.github.com/users/minghu6/following{/other_user}", "gists_url": "https://api.github.com/users/minghu6/gists{/gist_id}", "starred_url": "https://api.github.com/users/minghu6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minghu6/subscriptions", "organizations_url": "https://api.github.com/users/minghu6/orgs", "repos_url": "https://api.github.com/users/minghu6/repos", "events_url": "https://api.github.com/users/minghu6/events{/privacy}", "received_events_url": "https://api.github.com/users/minghu6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-01T14:52:40Z", "updated_at": "2020-07-02T14:09:19Z", "closed_at": "2020-07-02T14:09:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ref the issue https://github.com/Python-Markdown/markdown/issues/993 \r\n\r\n_Alternative Math Blocks_ is great, but it's also a workaround for display latex with emptyline.\r\n\r\nThe finally target for me is rendering the markdown file compatiable with **Typora**(it support emptyline in dispaly LaTex), so I can use it write markdown file and don't have to remember to modified the synax from top to bottom for Python's `mkdocs` every time.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/998", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/998/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/998/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/998/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/998", "id": 647615939, "node_id": "MDU6SXNzdWU2NDc2MTU5Mzk=", "number": 998, "title": "Add option in Magiclink to allow headers to not match issues #issue", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-29T19:37:42Z", "updated_at": "2020-07-04T00:02:04Z", "closed_at": "2020-07-04T00:02:04Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The idea is to enable an option that can rewrite header handling to require a space after the `#`. This would allow things like `#2` to be recognized as an issue even if it is at the start of a line.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/996", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/996/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/996/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/996/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/996", "id": 646535473, "node_id": "MDU6SXNzdWU2NDY1MzU0NzM=", "number": 996, "title": "No way to specify language in CSS classes in superfences", "user": {"login": "lukesneeringer", "id": 4346, "node_id": "MDQ6VXNlcjQzNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukesneeringer", "html_url": "https://github.com/lukesneeringer", "followers_url": "https://api.github.com/users/lukesneeringer/followers", "following_url": "https://api.github.com/users/lukesneeringer/following{/other_user}", "gists_url": "https://api.github.com/users/lukesneeringer/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukesneeringer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukesneeringer/subscriptions", "organizations_url": "https://api.github.com/users/lukesneeringer/orgs", "repos_url": "https://api.github.com/users/lukesneeringer/repos", "events_url": "https://api.github.com/users/lukesneeringer/events{/privacy}", "received_events_url": "https://api.github.com/users/lukesneeringer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351845, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ1", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20more-info-needed", "name": "S: more-info-needed", "color": "f0f49a", "default": false, "description": "More information is required."}, {"id": 1626977756, "node_id": "MDU6TGFiZWwxNjI2OTc3NzU2", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20triage", "name": "S: triage", "color": "f0f49a", "default": false, "description": "Issue needs triage."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-06-26T22:06:54Z", "updated_at": "2020-08-03T13:15:00Z", "closed_at": "2020-07-03T20:33:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ideally, I would like to capture the language at the beginning of a fence:\r\n\r\n~~~\r\n```language\r\n~~~\r\n\r\nAnd convert it to something that I can code against (for making slight JavaScript tweaks, for example):\r\n\r\n```\r\n<pre class=\"highlight lang-language\">\r\n  <code>\r\n  ...\r\n  </code>\r\n</pre>\r\n```\r\n\r\nThe `css_class` option seems to only let me hard-code text, and while it looks potentially possible to do something like this with a custom fence, that seems like a _lot_ of work for what seems like a small item.\r\n\r\nIt would be nice if there could be substitutions: let us specify `{language}` and have it be replaced with the appropriate value.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/982", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/982/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/982/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/982/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/982", "id": 641626563, "node_id": "MDU6SXNzdWU2NDE2MjY1NjM=", "number": 982, "title": "Wrap InlineHilite code tags with pre for highlightjs?", "user": {"login": "Twinki14", "id": 5809130, "node_id": "MDQ6VXNlcjU4MDkxMzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5809130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Twinki14", "html_url": "https://github.com/Twinki14", "followers_url": "https://api.github.com/users/Twinki14/followers", "following_url": "https://api.github.com/users/Twinki14/following{/other_user}", "gists_url": "https://api.github.com/users/Twinki14/gists{/gist_id}", "starred_url": "https://api.github.com/users/Twinki14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Twinki14/subscriptions", "organizations_url": "https://api.github.com/users/Twinki14/orgs", "repos_url": "https://api.github.com/users/Twinki14/repos", "events_url": "https://api.github.com/users/Twinki14/events{/privacy}", "received_events_url": "https://api.github.com/users/Twinki14/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-19T00:34:29Z", "updated_at": "2020-06-19T02:04:59Z", "closed_at": "2020-06-19T02:04:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "With pygments disabled, inline entries in my markdown files are only being wrapped with ```<code></code>```, whereas my code blocks are properly being wrapped with ```<pre><code></code></pre>``` for use with highlightjs for example\r\n\r\nAm I missing an option, or do I need to go about writing a custom_inline formatter?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/979", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/979/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/979/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/979/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/979", "id": 640894333, "node_id": "MDU6SXNzdWU2NDA4OTQzMzM=", "number": 979, "title": "custom_fences / fence_mathjax_format not working?", "user": {"login": "dhirschfeld", "id": 881019, "node_id": "MDQ6VXNlcjg4MTAxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhirschfeld", "html_url": "https://github.com/dhirschfeld", "followers_url": "https://api.github.com/users/dhirschfeld/followers", "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}", "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions", "organizations_url": "https://api.github.com/users/dhirschfeld/orgs", "repos_url": "https://api.github.com/users/dhirschfeld/repos", "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/dhirschfeld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1626977756, "node_id": "MDU6TGFiZWwxNjI2OTc3NzU2", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20triage", "name": "S: triage", "color": "f0f49a", "default": false, "description": "Issue needs triage."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-18T04:19:19Z", "updated_at": "2020-06-18T05:25:34Z", "closed_at": "2020-06-18T05:22:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use `fence_mathjax_format` as shown, below the math equations don't show up\r\n```yaml\r\nmarkdown_extensions:\r\n  - pymdownx.superfences:\r\n      preserve_tabs: true\r\n      custom_fences:\r\n        - name: math\r\n          class: arithmatex\r\n          format: !!python/name:pymdownx.arithmatex.fence_mathjax_format\r\n\r\nextra_javascript:\r\n  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js\r\n```\r\nThe HTML on the page looks like:\r\n```html\r\n<p>\r\n<script type=\"math/tex; mode=display\">\r\n    F_t = \\int_0^t\\mu F_t\\,dt + \\int_0^t\\sigma F_t\\,dW_t\r\n</script>\r\n<br>\r\n</p>\r\n```\r\n...but nothing gets rendered.\r\n\r\nIf I change to use `fence_generic_format` I do get equations rendered:\r\n```yaml\r\nmarkdown_extensions:\r\n  - pymdownx.superfences:\r\n      preserve_tabs: true\r\n      custom_fences:\r\n        - name: math\r\n          class: arithmatex\r\n          format: !!python/name:pymdownx.arithmatex.fence_generic_format\r\n\r\nextra_javascript:\r\n  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js\r\n```\r\n...results in the below HTML which seems to work:\r\n```html\r\n<div class=\"arithmatex\">\r\n    <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" display=\"true\" role=\"presentation\" tabindex=\"0\"\r\n        ctxtmenu_counter=\"3\" style=\"font-size: 119.5%; position: relative;\">\r\n        <mjx-math display=\"true\" class=\"MJX-TEX\" aria-hidden=\"true\" style=\"margin-left: 0px; margin-right: 0px;\">\r\n            <mjx-msub>\r\n                <mjx-mi class=\"mjx-i\" noic=\"true\">\r\n                    <mjx-c class=\"mjx-c1D439 TEX-I\"></mjx-c>\r\n                </mjx-mi>\r\n                <mjx-script style=\"vertical-align: -0.15em;\">\r\n                    <mjx-mi class=\"mjx-i\" size=\"s\">\r\n                        <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                    </mjx-mi>\r\n                </mjx-script>\r\n            </mjx-msub>\r\n            <mjx-mo class=\"mjx-n\" space=\"4\">\r\n                <mjx-c class=\"mjx-c3D\"></mjx-c>\r\n            </mjx-mo>\r\n            <mjx-msubsup space=\"4\">\r\n                <mjx-mo class=\"mjx-lop\" noic=\"true\">\r\n                    <mjx-c class=\"mjx-c222B TEX-S2\"></mjx-c>\r\n                </mjx-mo>\r\n                <mjx-script style=\"vertical-align: -0.896em;\">\r\n                    <mjx-mi class=\"mjx-i\" size=\"s\" style=\"margin-left: 0.647em;\">\r\n                        <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                    </mjx-mi>\r\n                    <mjx-spacer style=\"margin-top: 1.506em;\"></mjx-spacer>\r\n                    <mjx-mn class=\"mjx-n\" size=\"s\">\r\n                        <mjx-c class=\"mjx-c30\"></mjx-c>\r\n                    </mjx-mn>\r\n                </mjx-script>\r\n            </mjx-msubsup>\r\n            <mjx-mi class=\"mjx-i\" space=\"2\">\r\n                <mjx-c class=\"mjx-c1D707 TEX-I\"></mjx-c>\r\n            </mjx-mi>\r\n            <mjx-msub>\r\n                <mjx-mi class=\"mjx-i\" noic=\"true\">\r\n                    <mjx-c class=\"mjx-c1D439 TEX-I\"></mjx-c>\r\n                </mjx-mi>\r\n                <mjx-script style=\"vertical-align: -0.15em;\">\r\n                    <mjx-mi class=\"mjx-i\" size=\"s\">\r\n                        <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                    </mjx-mi>\r\n                </mjx-script>\r\n            </mjx-msub>\r\n            <mjx-mstyle>\r\n                <mjx-mspace style=\"width: 0.167em;\"></mjx-mspace>\r\n            </mjx-mstyle>\r\n            <mjx-mi class=\"mjx-i\">\r\n                <mjx-c class=\"mjx-c1D451 TEX-I\"></mjx-c>\r\n            </mjx-mi>\r\n            <mjx-mi class=\"mjx-i\">\r\n                <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n            </mjx-mi>\r\n            <mjx-mo class=\"mjx-n\" space=\"3\">\r\n                <mjx-c class=\"mjx-c2B\"></mjx-c>\r\n            </mjx-mo>\r\n            <mjx-msubsup space=\"3\">\r\n                <mjx-mo class=\"mjx-lop\" noic=\"true\">\r\n                    <mjx-c class=\"mjx-c222B TEX-S2\"></mjx-c>\r\n                </mjx-mo>\r\n                <mjx-script style=\"vertical-align: -0.896em;\">\r\n                    <mjx-mi class=\"mjx-i\" size=\"s\" style=\"margin-left: 0.647em;\">\r\n                        <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                    </mjx-mi>\r\n                    <mjx-spacer style=\"margin-top: 1.506em;\"></mjx-spacer>\r\n                    <mjx-mn class=\"mjx-n\" size=\"s\">\r\n                        <mjx-c class=\"mjx-c30\"></mjx-c>\r\n                    </mjx-mn>\r\n                </mjx-script>\r\n            </mjx-msubsup>\r\n            <mjx-mi class=\"mjx-i\" space=\"2\">\r\n                <mjx-c class=\"mjx-c1D70E TEX-I\"></mjx-c>\r\n            </mjx-mi>\r\n            <mjx-msub>\r\n                <mjx-mi class=\"mjx-i\" noic=\"true\">\r\n                    <mjx-c class=\"mjx-c1D439 TEX-I\"></mjx-c>\r\n                </mjx-mi>\r\n                <mjx-script style=\"vertical-align: -0.15em;\">\r\n                    <mjx-mi class=\"mjx-i\" size=\"s\">\r\n                        <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                    </mjx-mi>\r\n                </mjx-script>\r\n            </mjx-msub>\r\n            <mjx-mstyle>\r\n                <mjx-mspace style=\"width: 0.167em;\"></mjx-mspace>\r\n            </mjx-mstyle>\r\n            <mjx-mi class=\"mjx-i\">\r\n                <mjx-c class=\"mjx-c1D451 TEX-I\"></mjx-c>\r\n            </mjx-mi>\r\n            <mjx-msub>\r\n                <mjx-mi class=\"mjx-i\" noic=\"true\">\r\n                    <mjx-c class=\"mjx-c1D44A TEX-I\"></mjx-c>\r\n                </mjx-mi>\r\n                <mjx-script style=\"vertical-align: -0.15em;\">\r\n                    <mjx-mi class=\"mjx-i\" size=\"s\">\r\n                        <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                    </mjx-mi>\r\n                </mjx-script>\r\n            </mjx-msub>\r\n        </mjx-math>\r\n        <mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"block\"><math\r\n                xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\">\r\n                <msub>\r\n                    <mi>F</mi>\r\n                    <mi>t</mi>\r\n                </msub>\r\n                <mo>=</mo>\r\n                <msubsup>\r\n                    <mo data-mjx-texclass=\"OP\">\u222b</mo>\r\n                    <mn>0</mn>\r\n                    <mi>t</mi>\r\n                </msubsup>\r\n                <mi>\u03bc</mi>\r\n                <msub>\r\n                    <mi>F</mi>\r\n                    <mi>t</mi>\r\n                </msub>\r\n                <mstyle scriptlevel=\"0\">\r\n                    <mspace width=\"thinmathspace\"></mspace>\r\n                </mstyle>\r\n                <mi>d</mi>\r\n                <mi>t</mi>\r\n                <mo>+</mo>\r\n                <msubsup>\r\n                    <mo data-mjx-texclass=\"OP\">\u222b</mo>\r\n                    <mn>0</mn>\r\n                    <mi>t</mi>\r\n                </msubsup>\r\n                <mi>\u03c3</mi>\r\n                <msub>\r\n                    <mi>F</mi>\r\n                    <mi>t</mi>\r\n                </msub>\r\n                <mstyle scriptlevel=\"0\">\r\n                    <mspace width=\"thinmathspace\"></mspace>\r\n                </mstyle>\r\n                <mi>d</mi>\r\n                <msub>\r\n                    <mi>W</mi>\r\n                    <mi>t</mi>\r\n                </msub>\r\n            </math></mjx-assistive-mml>\r\n    </mjx-container>\r\n</div>\r\n```\r\n\r\n----\r\n\r\nFor comparison, using the usual begin/end:\r\n```\r\n\\begin{align}\r\n    F_t = \\int_0^t\\mu F_t\\,dt + \\int_0^t\\sigma F_t\\,dW_t\r\n\\end{align}\r\n```\r\n\r\n...results in the below HTML which also works:\r\n```html\r\n<div>\r\n    <div class=\"MathJax_Preview\">\r\n        <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" display=\"true\" role=\"presentation\" tabindex=\"0\"\r\n            ctxtmenu_counter=\"1\" style=\"font-size: 119.5%; position: relative;\">\r\n            <mjx-math display=\"true\" class=\"MJX-TEX\" aria-hidden=\"true\" style=\"margin-left: 0px; margin-right: 0px;\">\r\n                <mjx-mtable style=\"min-width: 12.529em;\">\r\n                    <mjx-table>\r\n                        <mjx-itable>\r\n                            <mjx-mtr>\r\n                                <mjx-mtd style=\"text-align: right;\">\r\n                                    <mjx-msub>\r\n                                        <mjx-mi class=\"mjx-i\" noic=\"true\">\r\n                                            <mjx-c class=\"mjx-c1D439 TEX-I\"></mjx-c>\r\n                                        </mjx-mi>\r\n                                        <mjx-script style=\"vertical-align: -0.15em;\">\r\n                                            <mjx-mi class=\"mjx-i\" size=\"s\">\r\n                                                <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                                            </mjx-mi>\r\n                                        </mjx-script>\r\n                                    </mjx-msub>\r\n                                    <mjx-mo class=\"mjx-n\" space=\"4\">\r\n                                        <mjx-c class=\"mjx-c3D\"></mjx-c>\r\n                                    </mjx-mo>\r\n                                    <mjx-msubsup space=\"4\">\r\n                                        <mjx-mo class=\"mjx-lop\" noic=\"true\">\r\n                                            <mjx-c class=\"mjx-c222B TEX-S2\"></mjx-c>\r\n                                        </mjx-mo>\r\n                                        <mjx-script style=\"vertical-align: -0.896em;\">\r\n                                            <mjx-mi class=\"mjx-i\" size=\"s\" style=\"margin-left: 0.647em;\">\r\n                                                <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                                            </mjx-mi>\r\n                                            <mjx-spacer style=\"margin-top: 1.506em;\"></mjx-spacer>\r\n                                            <mjx-mn class=\"mjx-n\" size=\"s\">\r\n                                                <mjx-c class=\"mjx-c30\"></mjx-c>\r\n                                            </mjx-mn>\r\n                                        </mjx-script>\r\n                                    </mjx-msubsup>\r\n                                    <mjx-mi class=\"mjx-i\" space=\"2\">\r\n                                        <mjx-c class=\"mjx-c1D707 TEX-I\"></mjx-c>\r\n                                    </mjx-mi>\r\n                                    <mjx-msub>\r\n                                        <mjx-mi class=\"mjx-i\" noic=\"true\">\r\n                                            <mjx-c class=\"mjx-c1D439 TEX-I\"></mjx-c>\r\n                                        </mjx-mi>\r\n                                        <mjx-script style=\"vertical-align: -0.15em;\">\r\n                                            <mjx-mi class=\"mjx-i\" size=\"s\">\r\n                                                <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                                            </mjx-mi>\r\n                                        </mjx-script>\r\n                                    </mjx-msub>\r\n                                    <mjx-mstyle>\r\n                                        <mjx-mspace style=\"width: 0.167em;\"></mjx-mspace>\r\n                                    </mjx-mstyle>\r\n                                    <mjx-mi class=\"mjx-i\">\r\n                                        <mjx-c class=\"mjx-c1D451 TEX-I\"></mjx-c>\r\n                                    </mjx-mi>\r\n                                    <mjx-mi class=\"mjx-i\">\r\n                                        <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                                    </mjx-mi>\r\n                                    <mjx-mo class=\"mjx-n\" space=\"3\">\r\n                                        <mjx-c class=\"mjx-c2B\"></mjx-c>\r\n                                    </mjx-mo>\r\n                                    <mjx-msubsup space=\"3\">\r\n                                        <mjx-mo class=\"mjx-lop\" noic=\"true\">\r\n                                            <mjx-c class=\"mjx-c222B TEX-S2\"></mjx-c>\r\n                                        </mjx-mo>\r\n                                        <mjx-script style=\"vertical-align: -0.896em;\">\r\n                                            <mjx-mi class=\"mjx-i\" size=\"s\" style=\"margin-left: 0.647em;\">\r\n                                                <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                                            </mjx-mi>\r\n                                            <mjx-spacer style=\"margin-top: 1.506em;\"></mjx-spacer>\r\n                                            <mjx-mn class=\"mjx-n\" size=\"s\">\r\n                                                <mjx-c class=\"mjx-c30\"></mjx-c>\r\n                                            </mjx-mn>\r\n                                        </mjx-script>\r\n                                    </mjx-msubsup>\r\n                                    <mjx-mi class=\"mjx-i\" space=\"2\">\r\n                                        <mjx-c class=\"mjx-c1D70E TEX-I\"></mjx-c>\r\n                                    </mjx-mi>\r\n                                    <mjx-msub>\r\n                                        <mjx-mi class=\"mjx-i\" noic=\"true\">\r\n                                            <mjx-c class=\"mjx-c1D439 TEX-I\"></mjx-c>\r\n                                        </mjx-mi>\r\n                                        <mjx-script style=\"vertical-align: -0.15em;\">\r\n                                            <mjx-mi class=\"mjx-i\" size=\"s\">\r\n                                                <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                                            </mjx-mi>\r\n                                        </mjx-script>\r\n                                    </mjx-msub>\r\n                                    <mjx-mstyle>\r\n                                        <mjx-mspace style=\"width: 0.167em;\"></mjx-mspace>\r\n                                    </mjx-mstyle>\r\n                                    <mjx-mi class=\"mjx-i\">\r\n                                        <mjx-c class=\"mjx-c1D451 TEX-I\"></mjx-c>\r\n                                    </mjx-mi>\r\n                                    <mjx-msub>\r\n                                        <mjx-mi class=\"mjx-i\" noic=\"true\">\r\n                                            <mjx-c class=\"mjx-c1D44A TEX-I\"></mjx-c>\r\n                                        </mjx-mi>\r\n                                        <mjx-script style=\"vertical-align: -0.15em;\">\r\n                                            <mjx-mi class=\"mjx-i\" size=\"s\">\r\n                                                <mjx-c class=\"mjx-c1D461 TEX-I\"></mjx-c>\r\n                                            </mjx-mi>\r\n                                        </mjx-script>\r\n                                    </mjx-msub>\r\n                                    <mjx-tstrut></mjx-tstrut>\r\n                                </mjx-mtd>\r\n                            </mjx-mtr>\r\n                        </mjx-itable>\r\n                    </mjx-table>\r\n                </mjx-mtable>\r\n            </mjx-math>\r\n            <mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"block\"><math\r\n                    xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\">\r\n                    <mtable displaystyle=\"true\"\r\n                        columnalign=\"right left right left right left right left right left right left\"\r\n                        columnspacing=\"0em 2em 0em 2em 0em 2em 0em 2em 0em 2em 0em\" rowspacing=\"3pt\">\r\n                        <mtr>\r\n                            <mtd>\r\n                                <msub>\r\n                                    <mi>F</mi>\r\n                                    <mi>t</mi>\r\n                                </msub>\r\n                                <mo>=</mo>\r\n                                <msubsup>\r\n                                    <mo data-mjx-texclass=\"OP\">\u222b</mo>\r\n                                    <mn>0</mn>\r\n                                    <mi>t</mi>\r\n                                </msubsup>\r\n                                <mi>\u03bc</mi>\r\n                                <msub>\r\n                                    <mi>F</mi>\r\n                                    <mi>t</mi>\r\n                                </msub>\r\n                                <mstyle scriptlevel=\"0\">\r\n                                    <mspace width=\"thinmathspace\"></mspace>\r\n                                </mstyle>\r\n                                <mi>d</mi>\r\n                                <mi>t</mi>\r\n                                <mo>+</mo>\r\n                                <msubsup>\r\n                                    <mo data-mjx-texclass=\"OP\">\u222b</mo>\r\n                                    <mn>0</mn>\r\n                                    <mi>t</mi>\r\n                                </msubsup>\r\n                                <mi>\u03c3</mi>\r\n                                <msub>\r\n                                    <mi>F</mi>\r\n                                    <mi>t</mi>\r\n                                </msub>\r\n                                <mstyle scriptlevel=\"0\">\r\n                                    <mspace width=\"thinmathspace\"></mspace>\r\n                                </mstyle>\r\n                                <mi>d</mi>\r\n                                <msub>\r\n                                    <mi>W</mi>\r\n                                    <mi>t</mi>\r\n                                </msub>\r\n                            </mtd>\r\n                        </mtr>\r\n                    </mtable>\r\n                </math></mjx-assistive-mml>\r\n        </mjx-container>\r\n    </div>\r\n    <script type=\"math/tex; mode=display\">\\begin{align}\r\n        F_t = \\int_0^t\\mu F_t\\,dt + \\int_0^t\\sigma F_t\\,dW_t\r\n    \\end{align}</script>\r\n</div>\r\n```\r\n\r\n----\r\nUsing `py37/win64`:\r\n```\r\n# Name                     Version                   Build  Channel\r\nmkdocs                     1.1.2                      py_0    https://conda.anaconda.org/conda-forge\r\nmkdocs-material            5.3.0                      py_0    https://conda.anaconda.org/conda-forge\r\nmkdocs-material-extensions 1.0                        py_0    https://conda.anaconda.org/conda-forge\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/976", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/976/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/976/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/976/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/976", "id": 635543906, "node_id": "MDU6SXNzdWU2MzU1NDM5MDY=", "number": 976, "title": "Rework SuperFences option handling to also handle setting arbitrary attributes", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351842, "node_id": "MDU6TGFiZWwxMTc2MzUxODQy", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20superfences", "name": "C: superfences", "color": "bfd4f2", "default": false, "description": "Related to the superfences extension."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-09T15:38:27Z", "updated_at": "2020-08-10T21:41:38Z", "closed_at": "2020-08-10T21:41:38Z", "author_association": "OWNER", "active_lock_reason": null, "body": "To better match attr_list when using `{code .class #id key=value}` form, we should maybe allow for setting any attributes. Clearly, special defined options will take precedence, but we probably need to provide a way to pass attributes along.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/972", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/972/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/972/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/972/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/972", "id": 632306267, "node_id": "MDU6SXNzdWU2MzIzMDYyNjc=", "number": 972, "title": "Add Repository Code File with Snippets", "user": {"login": "flywire", "id": 11288701, "node_id": "MDQ6VXNlcjExMjg4NzAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11288701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flywire", "html_url": "https://github.com/flywire", "followers_url": "https://api.github.com/users/flywire/followers", "following_url": "https://api.github.com/users/flywire/following{/other_user}", "gists_url": "https://api.github.com/users/flywire/gists{/gist_id}", "starred_url": "https://api.github.com/users/flywire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flywire/subscriptions", "organizations_url": "https://api.github.com/users/flywire/orgs", "repos_url": "https://api.github.com/users/flywire/repos", "events_url": "https://api.github.com/users/flywire/events{/privacy}", "received_events_url": "https://api.github.com/users/flywire/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-06-06T08:45:29Z", "updated_at": "2020-06-11T22:56:19Z", "closed_at": "2020-06-06T13:49:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The [snippets example](https://facelessuser.github.io/pymdown-extensions/extensions/snippets/) uses a `.md` file. Can it be used to include external repository program code files?\r\n\r\n**example.md**\r\n\r\n~~~\r\n...\r\n--8<-- \"/url/source.py\"\r\n...\r\n~~~\r\n\r\n**/url/source.py**\r\n\r\n~~~\r\nimport tensorflow as tf\r\n~~~\r\n\r\n**Result**\r\n\r\n~~~\r\n...\r\nimport tensorflow as tf\r\n...\r\n~~~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/964", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/964/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/964/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/964/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/964", "id": 627359053, "node_id": "MDU6SXNzdWU2MjczNTkwNTM=", "number": 964, "title": "Superfences / Custom Fences: Preventing escape of HTML characters: loose mode?", "user": {"login": "fralau", "id": 36767124, "node_id": "MDQ6VXNlcjM2NzY3MTI0", "avatar_url": "https://avatars2.githubusercontent.com/u/36767124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fralau", "html_url": "https://github.com/fralau", "followers_url": "https://api.github.com/users/fralau/followers", "following_url": "https://api.github.com/users/fralau/following{/other_user}", "gists_url": "https://api.github.com/users/fralau/gists{/gist_id}", "starred_url": "https://api.github.com/users/fralau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fralau/subscriptions", "organizations_url": "https://api.github.com/users/fralau/orgs", "repos_url": "https://api.github.com/users/fralau/repos", "events_url": "https://api.github.com/users/fralau/events{/privacy}", "received_events_url": "https://api.github.com/users/fralau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-29T15:40:46Z", "updated_at": "2020-06-06T07:25:14Z", "closed_at": "2020-06-06T07:25:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for pymdown-extensions: it's an awsome piece of software.\r\n\r\nWith mkdocs, I successfully applied superfences / [custom fences](https://facelessuser.github.io/pymdown-extensions/extensions/superfences/#custom-fences) to correctly display a mermaid diagram, while keeping the color highlighting. \ud83d\udc4d\r\n\r\n```yaml\r\nmarkdown_extensions:\r\n  - ...\r\n  - ...\r\n  - pymdownx.superfences:\r\n      # make exceptions to highlighting of code:\r\n      custom_fences:\r\n        - name: mermaid\r\n          class: mermaid\r\n          format: !!python/name:pymdownx.superfences.fence_div_format\r\n```\r\n\r\nThe plugin for mermaid which I am maintaining ([mkdocs-mermaid2](https://github.com/fralau/mkdocs-mermaid2-plugin) now works _together_ with code highlighting, which is great.\r\n\r\nI have also documented that solution on the [plugin's README](https://github.com/fralau/mkdocs-mermaid2-plugin#i-cant-have-highlighting-of-code-and-mermaid-diagrams-at-the-same-time).\r\n\r\nI now have a **secondary problem**: I use the **loose** mode with the javascript library of mermaid, in order to be able to insert actual HTML in the mermaid diagrams, so as to get hyperlinks, bold, small, etc.. So my graph contains HTML code.\r\n\r\nThis is how one does it in the plugin:\r\n\r\n```yaml\r\nplugins:\r\n  - ...\r\n  - mermaid2:\r\n      arguments:\r\n        securityLevel: 'loose'\r\n```\r\n\r\nWhich translate into the following argument for the javascript call:\r\n```json\r\n{'securityLevel': 'loose'}\r\n```\r\n\r\nSee where this is going? \ud83d\ude42\r\n\r\nThe problem is that superfences (no doubt wisely) **choses to convert HTML brackets (`<`and '>') into HTML entities, to avoid interference with HTML**, as well as (I reckon) code injection.\r\n\r\nYet HTML code is what I want in my mermaid graph code for that specific mkdocs project (which is why I have activated the loose mode in mermaid).\r\n\r\nThe result, is that the HTML is now displayed _verbatim_ in the diagram:\r\n![Capture d\u2019e\u0301cran 2020-05-29 a\u0300 17 36 26](https://user-images.githubusercontent.com/36767124/83277856-f55df100-a1d2-11ea-81a6-8cd4256488d5.png)\r\n\r\nOf course, I could force the plugin to work its way back from the HTML entities toward the HTML brackets so that it displays correctly, but _there must be a better way_.\r\n\r\nWould there be a way to tell the `custom_fences`: \"please to not translate the HTML characters into entities\"? Sort of a \"loose mode\"?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/941", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/941/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/941/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/941/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/941", "id": 619477845, "node_id": "MDU6SXNzdWU2MTk0Nzc4NDU=", "number": 941, "title": "Minor problems with rendering tasklist items properly", "user": {"login": "Andre601", "id": 11576465, "node_id": "MDQ6VXNlcjExNTc2NDY1", "avatar_url": "https://avatars3.githubusercontent.com/u/11576465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andre601", "html_url": "https://github.com/Andre601", "followers_url": "https://api.github.com/users/Andre601/followers", "following_url": "https://api.github.com/users/Andre601/following{/other_user}", "gists_url": "https://api.github.com/users/Andre601/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andre601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andre601/subscriptions", "organizations_url": "https://api.github.com/users/Andre601/orgs", "repos_url": "https://api.github.com/users/Andre601/repos", "events_url": "https://api.github.com/users/Andre601/events{/privacy}", "received_events_url": "https://api.github.com/users/Andre601/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-16T13:41:45Z", "updated_at": "2020-05-16T13:56:10Z", "closed_at": "2020-05-16T13:56:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I face some minor issues, where task list entries are rendered with a large gap between the icon and the text itself.\r\n\r\nFor example is the following markdown...\r\n```\r\nThings to do:\r\n\r\n- [x] Buy milk\r\n- [x] Make laundry\r\n- [ ] Take over the world\r\n```\r\n\r\n...rendered like this:\r\n![image](https://user-images.githubusercontent.com/11576465/82121134-13ffc900-978b-11ea-94be-e48512212d00.png)\r\n\r\nAs you may noticed do I use a dark theme for the site.\r\nThe CSS for it is here: https://hasteb.in/ecaludob.css\r\n\r\nOther CSS files I use:\r\n- tabbed.css for the Tabbed extension: https://hasteb.in/zejosoti.css\r\n- tasklist.css for the Tasklist extension: https://hasteb.in/junowesi.css\r\n\r\nI also have `custom_checkbox` set to true and `clickable_checkbox` set to false, but hovering over the icon makes the cursor appear as if you can click the icon.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/940", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/940/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/940/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/940/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/940", "id": 619462295, "node_id": "MDU6SXNzdWU2MTk0NjIyOTU=", "number": 940, "title": "Using headers in tabs causes ToC to render wrong", "user": {"login": "Andre601", "id": 11576465, "node_id": "MDQ6VXNlcjExNTc2NDY1", "avatar_url": "https://avatars3.githubusercontent.com/u/11576465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andre601", "html_url": "https://github.com/Andre601", "followers_url": "https://api.github.com/users/Andre601/followers", "following_url": "https://api.github.com/users/Andre601/following{/other_user}", "gists_url": "https://api.github.com/users/Andre601/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andre601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andre601/subscriptions", "organizations_url": "https://api.github.com/users/Andre601/orgs", "repos_url": "https://api.github.com/users/Andre601/repos", "events_url": "https://api.github.com/users/Andre601/events{/privacy}", "received_events_url": "https://api.github.com/users/Andre601/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-16T12:28:33Z", "updated_at": "2020-05-16T12:54:35Z", "closed_at": "2020-05-16T12:35:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is 100% caused by the tabbed extension or if it could be caused by MkDocs-Material not handling the headers properly.\r\n\r\nThe issue is, that when you use Headers in Tabs will it mess up the Table of Content (ToC) by not displaying any of the following headers after the tab.\r\n\r\nFor example would the following setup...\r\n```markdown\r\n# Header\r\n\r\n!!! info\r\n    === \"Tab 1\"\r\n        Some text\r\n    \r\n    === \"Tab 2\"\r\n        # Another Header\r\n\r\n# Yet another Header\r\n```\r\n\r\nOnly show \"Header\" on the ToC while \"Yet another Header\" and any following header aren't.\r\nRemoving the header from the tab fixes this and displays the headers as they should.\r\n\r\nCC @squidfunk in case this is on MkDocs-Material's side (Which I honestly doubt being the case)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/928", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/928/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/928/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/928/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/928", "id": 612555280, "node_id": "MDU6SXNzdWU2MTI1NTUyODA=", "number": 928, "title": "How to create custom superfences formatter?", "user": {"login": "Zebradil", "id": 1475583, "node_id": "MDQ6VXNlcjE0NzU1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1475583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zebradil", "html_url": "https://github.com/Zebradil", "followers_url": "https://api.github.com/users/Zebradil/followers", "following_url": "https://api.github.com/users/Zebradil/following{/other_user}", "gists_url": "https://api.github.com/users/Zebradil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zebradil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zebradil/subscriptions", "organizations_url": "https://api.github.com/users/Zebradil/orgs", "repos_url": "https://api.github.com/users/Zebradil/repos", "events_url": "https://api.github.com/users/Zebradil/events{/privacy}", "received_events_url": "https://api.github.com/users/Zebradil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-05T12:12:43Z", "updated_at": "2020-05-06T00:01:43Z", "closed_at": "2020-05-05T13:40:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking through the [uml-diagram-example](https://facelessuser.github.io/pymdown-extensions/extensions/superfences/#uml-diagram-example), but I can't figure out how to implement custom formatter instead of using one of the default ones. \r\n\r\nIn the example, processing is done by mermaid library on the client side. Instead, I want to process content of a superfenced block on backend during `mkdocs build`.\r\n\r\nThat's what I have in my config file:\r\n\r\n```yaml\r\nmarkdown_extensions:\r\n  ...\r\n  - pymdownx.superfences\r\n      custom_fences:\r\n        - name: graphviz\r\n          class: graphviz\r\n          format: !!python/name:<custom formatter function>\r\n```\r\n\r\nIn the docs there is an example format function:\r\n\r\n```python\r\ndef custom_format(source, language, class_name, options, md):\r\n    \"\"\"Custom format.\"\"\"\r\n\r\n    return '<div class_name=\"%s %s\", data-option=\"%s\">%s</div>' % (language, class_name, options['opt'], html_escape(source))\r\n```\r\n\r\nWhere should I put it?\r\n\r\nShould I now create a new python module and install it or it's possible to access python source code from local file?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/925", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/925/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/925/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/925/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/925", "id": 611821276, "node_id": "MDU6SXNzdWU2MTE4MjEyNzY=", "number": 925, "title": "Embedding external resources (CSS, JS) by default", "user": {"login": "darkdragon-001", "id": 177976, "node_id": "MDQ6VXNlcjE3Nzk3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/177976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkdragon-001", "html_url": "https://github.com/darkdragon-001", "followers_url": "https://api.github.com/users/darkdragon-001/followers", "following_url": "https://api.github.com/users/darkdragon-001/following{/other_user}", "gists_url": "https://api.github.com/users/darkdragon-001/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkdragon-001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkdragon-001/subscriptions", "organizations_url": "https://api.github.com/users/darkdragon-001/orgs", "repos_url": "https://api.github.com/users/darkdragon-001/repos", "events_url": "https://api.github.com/users/darkdragon-001/events{/privacy}", "received_events_url": "https://api.github.com/users/darkdragon-001/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-05-04T12:01:44Z", "updated_at": "2020-05-04T19:36:15Z", "closed_at": "2020-05-04T14:09:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I suggest embedding external resources needed for the extension to work to be automatically embedded by default. Add an option to disable it in case that the user wants to embed it himself. See [markdown-katex](https://gitlab.com/mbarkhau/markdown-katex) for an example on how I suggest it to work.\r\n\r\nThis would also avoid many issues posted by users who are confused at first why this extension is not working:\r\n- arithmatex\r\n- highlight\r\n- progressbar (fix #912)\r\n- tabbed (#871)\r\n- _probably other extensions..._", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/923", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/923/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/923/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/923/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/923", "id": 611516889, "node_id": "MDU6SXNzdWU2MTE1MTY4ODk=", "number": 923, "title": "Extend/Improve table extension", "user": {"login": "darkdragon-001", "id": 177976, "node_id": "MDQ6VXNlcjE3Nzk3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/177976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkdragon-001", "html_url": "https://github.com/darkdragon-001", "followers_url": "https://api.github.com/users/darkdragon-001/followers", "following_url": "https://api.github.com/users/darkdragon-001/following{/other_user}", "gists_url": "https://api.github.com/users/darkdragon-001/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkdragon-001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkdragon-001/subscriptions", "organizations_url": "https://api.github.com/users/darkdragon-001/orgs", "repos_url": "https://api.github.com/users/darkdragon-001/repos", "events_url": "https://api.github.com/users/darkdragon-001/events{/privacy}", "received_events_url": "https://api.github.com/users/darkdragon-001/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-03T21:56:10Z", "updated_at": "2020-05-04T12:32:12Z", "closed_at": "2020-05-04T12:32:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to see the default table extension improved upon a little.\r\n\r\nSpecifically, I would like the following\r\n- Don't require the header row and separater row\r\n- Allow multi-column cells  \r\n  Adding the HTML [attribute](https://python-markdown.github.io/extensions/attr_list/#the-list) like `{: colspan='2' }` still forces the markdown processor to include the additional cell on the right.\r\n- Allow multi-row cells  \r\n  A different format would be needed: Header separater `=`, cell separater `-` would be required between all rows.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/922", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/922/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/922/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/922/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/922", "id": 611260093, "node_id": "MDU6SXNzdWU2MTEyNjAwOTM=", "number": 922, "title": "Images in snippets", "user": {"login": "louisguitton", "id": 7823843, "node_id": "MDQ6VXNlcjc4MjM4NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7823843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/louisguitton", "html_url": "https://github.com/louisguitton", "followers_url": "https://api.github.com/users/louisguitton/followers", "following_url": "https://api.github.com/users/louisguitton/following{/other_user}", "gists_url": "https://api.github.com/users/louisguitton/gists{/gist_id}", "starred_url": "https://api.github.com/users/louisguitton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/louisguitton/subscriptions", "organizations_url": "https://api.github.com/users/louisguitton/orgs", "repos_url": "https://api.github.com/users/louisguitton/repos", "events_url": "https://api.github.com/users/louisguitton/events{/privacy}", "received_events_url": "https://api.github.com/users/louisguitton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-02T19:41:12Z", "updated_at": "2020-05-03T13:55:10Z", "closed_at": "2020-05-03T13:54:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm including my `readme.md` as my `docs/index.md`\r\n\r\n```md\r\n<!-- docs/index.md -->\r\n--8<-- \"readme.md\"\r\n```\r\n\r\n```md\r\n<!-- readme.md -->\r\n# Hello\r\n\r\n> world\r\n\r\n![](image.png)\r\n```\r\n(the image is placed at the root)\r\n\r\n```yml\r\n# mkdocs.yml\r\nmarkdown_extensions:\r\n  - pymdownx.snippets\r\n```\r\n\r\nThe file is included just fine, but the image is missing. \r\n\r\nIs there a way to get the image working both in the Readme.md and the index page of the site?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/921", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/921/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/921/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/921/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/921", "id": 611154829, "node_id": "MDU6SXNzdWU2MTExNTQ4Mjk=", "number": 921, "title": "[PathConverter] Allow setting the scheme in base_url", "user": {"login": "darkdragon-001", "id": 177976, "node_id": "MDQ6VXNlcjE3Nzk3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/177976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkdragon-001", "html_url": "https://github.com/darkdragon-001", "followers_url": "https://api.github.com/users/darkdragon-001/followers", "following_url": "https://api.github.com/users/darkdragon-001/following{/other_user}", "gists_url": "https://api.github.com/users/darkdragon-001/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkdragon-001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkdragon-001/subscriptions", "organizations_url": "https://api.github.com/users/darkdragon-001/orgs", "repos_url": "https://api.github.com/users/darkdragon-001/repos", "events_url": "https://api.github.com/users/darkdragon-001/events{/privacy}", "received_events_url": "https://api.github.com/users/darkdragon-001/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151745391, "node_id": "MDU6TGFiZWwxNTE3NDUzOTE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/P:%20maybe", "name": "P: maybe", "color": "dddddd", "default": false, "description": "Pending approval of low priority request."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2020-05-02T10:25:50Z", "updated_at": "2020-05-05T19:30:05Z", "closed_at": "2020-05-05T19:30:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "My document uses relative paths (e.g. `doc/file.html`). I would like to create absolute paths with explicitly setting the scheme by specifying `base_path = \"file:///foo/bar\"`.\r\n\r\nhttps://github.com/facelessuser/pymdown-extensions/blob/e7320bf2a92b170b87af194ac1b0f26ed2809f31/pymdownx/pathconverter.py#L103\r\n\r\nThe following line returns `file:/foo/bar/doc/file.html`. Instead it should be `/foo/bar/doc/file.html`. You should also `util.parse_url(base_path)` and set `scheme` from `base_path` when it is not already set by `m.group()`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/920", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/920/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/920/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/920/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/920", "id": 611144553, "node_id": "MDU6SXNzdWU2MTExNDQ1NTM=", "number": 920, "title": "Dynamic configuration change", "user": {"login": "darkdragon-001", "id": 177976, "node_id": "MDQ6VXNlcjE3Nzk3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/177976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkdragon-001", "html_url": "https://github.com/darkdragon-001", "followers_url": "https://api.github.com/users/darkdragon-001/followers", "following_url": "https://api.github.com/users/darkdragon-001/following{/other_user}", "gists_url": "https://api.github.com/users/darkdragon-001/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkdragon-001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkdragon-001/subscriptions", "organizations_url": "https://api.github.com/users/darkdragon-001/orgs", "repos_url": "https://api.github.com/users/darkdragon-001/repos", "events_url": "https://api.github.com/users/darkdragon-001/events{/privacy}", "received_events_url": "https://api.github.com/users/darkdragon-001/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1626977756, "node_id": "MDU6TGFiZWwxNjI2OTc3NzU2", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20triage", "name": "S: triage", "color": "f0f49a", "default": false, "description": "Issue needs triage."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T09:18:38Z", "updated_at": "2020-05-02T09:37:59Z", "closed_at": "2020-05-02T09:37:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to often change a parameter for an extensions (specifically `base_path` in `PathConverter`). Is there a way to change the extension config on-the-fly? I am thinking of creating an extension instance which I pass to `Markdown` class. Then I can just change the config without re-creating the Markdown class all the time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/919", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/919/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/919/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/919/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/919", "id": 610991935, "node_id": "MDU6SXNzdWU2MTA5OTE5MzU=", "number": 919, "title": "[SmartSymbols] User-defined replacement list", "user": {"login": "darkdragon-001", "id": 177976, "node_id": "MDQ6VXNlcjE3Nzk3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/177976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkdragon-001", "html_url": "https://github.com/darkdragon-001", "followers_url": "https://api.github.com/users/darkdragon-001/followers", "following_url": "https://api.github.com/users/darkdragon-001/following{/other_user}", "gists_url": "https://api.github.com/users/darkdragon-001/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkdragon-001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkdragon-001/subscriptions", "organizations_url": "https://api.github.com/users/darkdragon-001/orgs", "repos_url": "https://api.github.com/users/darkdragon-001/repos", "events_url": "https://api.github.com/users/darkdragon-001/events{/privacy}", "received_events_url": "https://api.github.com/users/darkdragon-001/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-01T22:08:17Z", "updated_at": "2020-05-13T14:11:34Z", "closed_at": "2020-05-03T13:55:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "What about allowing the user to pass a replacement list (python list of pairs) as a plugin option. I collected a lot of such UTF-8 replacements in [SpecialCharGetter:chars.ini](https://github.com/darkdragon-001/SpecialCharGetter/blob/master/chars.ini).\r\n\r\n_Previously suggested in leohemsted/smartypants.py#17._", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/917", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/917/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/917/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/917/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/917", "id": 610358343, "node_id": "MDU6SXNzdWU2MTAzNTgzNDM=", "number": 917, "title": "Arithmatex only works with escaped blocks", "user": {"login": "alping", "id": 11225857, "node_id": "MDQ6VXNlcjExMjI1ODU3", "avatar_url": "https://avatars0.githubusercontent.com/u/11225857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alping", "html_url": "https://github.com/alping", "followers_url": "https://api.github.com/users/alping/followers", "following_url": "https://api.github.com/users/alping/following{/other_user}", "gists_url": "https://api.github.com/users/alping/gists{/gist_id}", "starred_url": "https://api.github.com/users/alping/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alping/subscriptions", "organizations_url": "https://api.github.com/users/alping/orgs", "repos_url": "https://api.github.com/users/alping/repos", "events_url": "https://api.github.com/users/alping/events{/privacy}", "received_events_url": "https://api.github.com/users/alping/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-30T20:17:22Z", "updated_at": "2020-04-30T21:04:59Z", "closed_at": "2020-04-30T21:04:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\n```\r\npymdown-extensions==7.1\r\n(mkdocs==1.1)\r\n```\r\n\r\nWhen using Arithmatex with MkDocs, the only way I can get equations to work is when I escape the `\\` when starting and ending equations. The `$` and `$$` do not work at all. And if I have multiple `_` in an equation, this gets interpreted as markdown _italics_. `\\begin` and `\\end` work fine unescaped.\r\n\r\nI have created a GitLab repository with a minimal example:\r\nhttps://gitlab.com/alping/test-mkdocs-pymdownx\r\n\r\nThe result can be seen here:\r\nhttps://alping.gitlab.io/test-mkdocs-pymdownx/\r\n\r\nThe build process is documented in the `.gitlab-ci.yml` file and should be reproducible with the python docker image.\r\n\r\nI have followed the documentation to the best of my abilities, but it is entirely possible that this is a user error on my part.\r\nhttps://facelessuser.github.io/pymdown-extensions/extensions/arithmatex/\r\nhttps://www.mkdocs.org/user-guide/configuration/#markdown_extensions\r\n\r\nThis might be related to:\r\nhttps://github.com/facelessuser/pymdown-extensions/issues/842\r\nhttps://github.com/squidfunk/mkdocs-material/issues/1481#issue-575110404\r\n\r\n**Minimal Markdown Example:**\r\n\r\n```markdown\r\n# Test MkDocs\r\n\r\n## Not working\r\n\r\n$\\alpha$\r\n\r\n\\(\\alpha\\)\r\n\r\n$$\r\n\\alpha\r\n$$\r\n\r\n\\[\r\n\\alpha\r\n\\]\r\n\r\n\\\\[\r\n\\underbrace{a}_{a} = \\underbrace{b}_{b}\r\n\\\\]\r\n\r\n## Working because escaped\r\n\r\n\\\\(\\alpha\\\\)\r\n\r\n\\\\[\r\n\\alpha\r\n\\\\]\r\n\r\n\\\\[\r\n\\underbrace{a}\\_{a} = \\underbrace{b}\\_{b}\r\n\\\\]\r\n\r\n## Begin/End is also working\r\n\r\n\\begin{align}\r\n    p(v_i=1|\\mathbf{h}) & = \\sigma\\left(\\sum_j w_{ij}h_j + b_i\\right) \\\\\r\n    p(h_j=1|\\mathbf{v}) & = \\sigma\\left(\\sum_i w_{ij}v_i + c_j\\right)\r\n\\end{align}\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/911", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/911/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/911/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/911/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/911", "id": 607046616, "node_id": "MDU6SXNzdWU2MDcwNDY2MTY=", "number": 911, "title": "MathJax font is diminishing from the 2nd tab onwards", "user": {"login": "theskinnycoder", "id": 64031854, "node_id": "MDQ6VXNlcjY0MDMxODU0", "avatar_url": "https://avatars1.githubusercontent.com/u/64031854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theskinnycoder", "html_url": "https://github.com/theskinnycoder", "followers_url": "https://api.github.com/users/theskinnycoder/followers", "following_url": "https://api.github.com/users/theskinnycoder/following{/other_user}", "gists_url": "https://api.github.com/users/theskinnycoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/theskinnycoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theskinnycoder/subscriptions", "organizations_url": "https://api.github.com/users/theskinnycoder/orgs", "repos_url": "https://api.github.com/users/theskinnycoder/repos", "events_url": "https://api.github.com/users/theskinnycoder/events{/privacy}", "received_events_url": "https://api.github.com/users/theskinnycoder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-26T16:02:58Z", "updated_at": "2020-04-26T16:55:50Z", "closed_at": "2020-04-26T16:55:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "While using MathJax in each of the tabs, the 1st tab is rendering the font precisely, but from the 2nd tab onwards, the font size is diminished.\r\n\r\n=== \"Math.log(x)\"\r\n\r\n    Returns the value of natural logarithm of `x`, i.e., $\\log_e{x}\r\n\r\n    $\\text{Ex : }\\log_{e}{e} = 1.0, \\ln{1} = 0.0$\r\n\r\n    ```java\r\n    Math.log(Math.E); // 1.0\r\n    Math.log(0); // -Infinity\r\n    Math.log(1); // 0.0\r\n    ```\r\n\r\n=== \"Math.log10(x)\"\r\n\r\n    Returns the value of $\\log_{10}{x}$\r\n\r\n    $\\text{Ex : }\\log_{10}{10} = 1.0, \\log_{10}{1} = 0.1$\r\n\r\n    ```java\r\n    Math.log10(10); // 1.0\r\n    Math.log10(0); // \r\n    Math.log10(1); // 0.1\r\n    ```\r\n\r\nPlease copy the code and try it. I encountered this issue while using mkdocs-material", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/910", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/910/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/910/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/910/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/910", "id": 606522164, "node_id": "MDU6SXNzdWU2MDY1MjIxNjQ=", "number": 910, "title": "How can I set a default language for inlinehilite?", "user": {"login": "scooby", "id": 52262, "node_id": "MDQ6VXNlcjUyMjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/52262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scooby", "html_url": "https://github.com/scooby", "followers_url": "https://api.github.com/users/scooby/followers", "following_url": "https://api.github.com/users/scooby/following{/other_user}", "gists_url": "https://api.github.com/users/scooby/gists{/gist_id}", "starred_url": "https://api.github.com/users/scooby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scooby/subscriptions", "organizations_url": "https://api.github.com/users/scooby/orgs", "repos_url": "https://api.github.com/users/scooby/repos", "events_url": "https://api.github.com/users/scooby/events{/privacy}", "received_events_url": "https://api.github.com/users/scooby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1626977756, "node_id": "MDU6TGFiZWwxNjI2OTc3NzU2", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20triage", "name": "S: triage", "color": "f0f49a", "default": false, "description": "Issue needs triage."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-24T19:05:38Z", "updated_at": "2020-04-24T19:05:58Z", "closed_at": "2020-04-24T19:05:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working on a document in mkdocs about a single language, so \"use this language unless I say so\" would be the best behavior for code in backticks.\r\n\r\n### Answer\r\n\r\nUse the `custom_inline` config setting, a detailed example is in comments on #908 but in short:\r\n\r\n```py3\r\ndef my_custom_function(src, language, class_name, md):\r\n    \"\"\"Test custom.\"\"\"\r\n\r\n    if not language:\r\n        language = 'py3'\r\n\r\n    return md.inlinePatterns['backtick'].highlight_code(src, language, class_name, md)\r\n```\r\n\r\nIn `mkdocs.yml`:\r\n\r\n```yaml\r\nmarkdown_extensions:\r\n  - pymdownx.inlinehilite:\r\n      custom_inline:\r\n        - name: '*'\r\n          class: highlight\r\n          format: !!python/name:my_custom_module.my_custom_function\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/903", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/903/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/903/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/903/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/903", "id": 602819827, "node_id": "MDU6SXNzdWU2MDI4MTk4Mjc=", "number": 903, "title": "Allowing using URLs in place of filename", "user": {"login": "Passiday", "id": 1238666, "node_id": "MDQ6VXNlcjEyMzg2NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1238666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Passiday", "html_url": "https://github.com/Passiday", "followers_url": "https://api.github.com/users/Passiday/followers", "following_url": "https://api.github.com/users/Passiday/following{/other_user}", "gists_url": "https://api.github.com/users/Passiday/gists{/gist_id}", "starred_url": "https://api.github.com/users/Passiday/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Passiday/subscriptions", "organizations_url": "https://api.github.com/users/Passiday/orgs", "repos_url": "https://api.github.com/users/Passiday/repos", "events_url": "https://api.github.com/users/Passiday/events{/privacy}", "received_events_url": "https://api.github.com/users/Passiday/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-04-19T21:05:34Z", "updated_at": "2020-05-04T09:08:41Z", "closed_at": "2020-05-03T14:04:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Talking about the snippet-plugin:\r\nPerhaps this is implemented intentionally that only the files from the local filesystem can be included. I was just wondering that allowing to use http/https URLs in place of filename would bring enormous power. Including a file from a public git repo would be a typical example. Or, a more advanced use case \u2014 I could create a server-side script that dynamically generates svg, using some querystring parameters as input, host that script, and then refer to this script in my md file, several times, with different parameters.\r\nIs this something that could be implemented in future versions? I am aware, of course, that I could just alter the Python code on my local machine to handle this, but that would be bad practice, as the md source would not be parsed in other user's environment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/902", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/902/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/902/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/902/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/902", "id": 602776520, "node_id": "MDU6SXNzdWU2MDI3NzY1MjA=", "number": 902, "title": "Disable linenums thoroughly", "user": {"login": "lufficc", "id": 20706332, "node_id": "MDQ6VXNlcjIwNzA2MzMy", "avatar_url": "https://avatars2.githubusercontent.com/u/20706332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lufficc", "html_url": "https://github.com/lufficc", "followers_url": "https://api.github.com/users/lufficc/followers", "following_url": "https://api.github.com/users/lufficc/following{/other_user}", "gists_url": "https://api.github.com/users/lufficc/gists{/gist_id}", "starred_url": "https://api.github.com/users/lufficc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lufficc/subscriptions", "organizations_url": "https://api.github.com/users/lufficc/orgs", "repos_url": "https://api.github.com/users/lufficc/repos", "events_url": "https://api.github.com/users/lufficc/events{/privacy}", "received_events_url": "https://api.github.com/users/lufficc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351799, "node_id": "MDU6TGFiZWwxMTc2MzUxNzk5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20highlight", "name": "C: highlight", "color": "bfd4f2", "default": false, "description": "Related to the highlight extension."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-19T17:39:17Z", "updated_at": "2020-05-11T02:25:47Z", "closed_at": "2020-05-11T02:25:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `pymdownx.highlight` and set `linenums` to `False`, users can still enable `linenums` like this:\r\n\r\n<pre><code>\r\n```linenums=\"1\"\r\n code\r\n```\r\n</code></pre>\r\n\r\nHow can I prevent this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/898", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/898/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/898/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/898/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/898", "id": 601108815, "node_id": "MDU6SXNzdWU2MDExMDg4MTU=", "number": 898, "title": "Add option to remove magiclink special symbols: #, !, and @", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351815, "node_id": "MDU6TGFiZWwxMTc2MzUxODE1", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20magiclink", "name": "C: magiclink", "color": "bfd4f2", "default": false, "description": "Related to the magiclink extension."}, {"id": 151745391, "node_id": "MDU6TGFiZWwxNTE3NDUzOTE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/P:%20maybe", "name": "P: maybe", "color": "dddddd", "default": false, "description": "Pending approval of low priority request."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}, {"id": 1637426219, "node_id": "MDU6TGFiZWwxNjM3NDI2MjE5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/skip-triage", "name": "skip-triage", "color": "000000", "default": false, "description": "Tells bot to not tag a new issue with 'triage'."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-16T14:32:13Z", "updated_at": "2020-04-18T19:14:00Z", "closed_at": "2020-04-18T19:14:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": "By default, MagicLink uses the output as used by GitHub/Gitlab. We personally use our own stylized icons via CSS, and it may be nice to remove some of the redundant symbols as now we show issues and merges like this `<icon><symbol>number`. We'd like to just show `<icon>number`. The default would remain as `<symbol>number` for the average user, so this would be an optional configuration.\r\n\r\nThe question is whether we just us a simple option to strip all symbols, or give the user the option to specify specific symbols to strip.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/895", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/895/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/895/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/895/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/895", "id": 600457184, "node_id": "MDU6SXNzdWU2MDA0NTcxODQ=", "number": 895, "title": "Specify arbitrary attributes in fenced code (make SuperFences more JS highlight friendly)", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351799, "node_id": "MDU6TGFiZWwxMTc2MzUxNzk5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20highlight", "name": "C: highlight", "color": "bfd4f2", "default": false, "description": "Related to the highlight extension."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}, {"id": 1637426219, "node_id": "MDU6TGFiZWwxNjM3NDI2MjE5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/skip-triage", "name": "skip-triage", "color": "000000", "default": false, "description": "Tells bot to not tag a new issue with 'triage'."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-15T17:10:58Z", "updated_at": "2020-05-18T03:55:53Z", "closed_at": "2020-05-18T03:55:53Z", "author_association": "OWNER", "active_lock_reason": null, "body": "In SuperFences, you can specify arbitrary class names and ids, but you cannot specify general attributes. This is partly because we reserve the format `key=\"value\"` for options. But what if, following existing selector style for classes and ids, we allowed for `[attr=\"value\"]`. This would distinguish it from options and use a familiar pattern. Yeah it doesn't match `attr_list`, but \ud83e\udd37\u200d\u2642\ufe0f.\r\n\r\nSo this would allow people to do things like the following (useful for JS highlighters):\r\n\r\n````\r\n```{py .line-numbers [data-start=\"-5\"] some-option=\"whatever\"}\r\nimport some_module\r\n\r\n# Do something\r\n```\r\n````\r\n\r\nAs a separate issue, it may be nice to configure `linenums` option to allow the user to specify a class name.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/893", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/893/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/893/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/893/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/893", "id": 599956811, "node_id": "MDU6SXNzdWU1OTk5NTY4MTE=", "number": 893, "title": "SuperFences and CodeHilite problem", "user": {"login": "tjapro", "id": 7900361, "node_id": "MDQ6VXNlcjc5MDAzNjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7900361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjapro", "html_url": "https://github.com/tjapro", "followers_url": "https://api.github.com/users/tjapro/followers", "following_url": "https://api.github.com/users/tjapro/following{/other_user}", "gists_url": "https://api.github.com/users/tjapro/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjapro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjapro/subscriptions", "organizations_url": "https://api.github.com/users/tjapro/orgs", "repos_url": "https://api.github.com/users/tjapro/repos", "events_url": "https://api.github.com/users/tjapro/events{/privacy}", "received_events_url": "https://api.github.com/users/tjapro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-15T01:31:26Z", "updated_at": "2020-04-15T14:13:09Z", "closed_at": "2020-04-15T14:13:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI have a Mkdocs project with CodeHilite and SuperFences.\r\nI notice that CodeHilite doesn't show anymore the line numbers (it is true globally).\r\nSo I remove one by one the extensions and plugins and discover that SuperFences somehow disables the line numbers.\r\nThere is some problem between the extensions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/892", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/892/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/892/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/892", "id": 598860117, "node_id": "MDU6SXNzdWU1OTg4NjAxMTc=", "number": 892, "title": "`!!` not recognized on ReadTheDocs", "user": {"login": "pbek", "id": 1798101, "node_id": "MDQ6VXNlcjE3OTgxMDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1798101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbek", "html_url": "https://github.com/pbek", "followers_url": "https://api.github.com/users/pbek/followers", "following_url": "https://api.github.com/users/pbek/following{/other_user}", "gists_url": "https://api.github.com/users/pbek/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbek/subscriptions", "organizations_url": "https://api.github.com/users/pbek/orgs", "repos_url": "https://api.github.com/users/pbek/repos", "events_url": "https://api.github.com/users/pbek/events{/privacy}", "received_events_url": "https://api.github.com/users/pbek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}, {"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-13T12:24:20Z", "updated_at": "2020-04-13T16:13:15Z", "closed_at": "2020-04-13T15:16:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for this great extension. I use if for example on https://docs.qownnotes.org/ for mermaid-js support!\r\n\r\nMy question is if there is a way to get around those `!!` in the `mkdocs.yml`, for example in:\r\n\r\n```yml\r\n  - pymdownx.superfences:\r\n      custom_fences:\r\n        - name: mermaid\r\n          class: mermaid\r\n          # this doesn't work on ReadTheDocs, we need to use `<div class=\"mermaid\"></div>` instead\r\n          format: !!python/name:pymdownx.superfences.fence_div_format\r\n```\r\n\r\nReadTheDocs is parsing the `mkdocs.yml` file using `pyyaml` and it seems that it does not recognize `!!`.\r\n\r\nSee: https://github.com/readthedocs/readthedocs.org/issues/6889\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/888", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/888/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/888/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/888/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/888", "id": 598230495, "node_id": "MDU6SXNzdWU1OTgyMzA0OTU=", "number": 888, "title": "Arithmatex hang/slow render", "user": {"login": "heartbleeded", "id": 7350821, "node_id": "MDQ6VXNlcjczNTA4MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7350821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heartbleeded", "html_url": "https://github.com/heartbleeded", "followers_url": "https://api.github.com/users/heartbleeded/followers", "following_url": "https://api.github.com/users/heartbleeded/following{/other_user}", "gists_url": "https://api.github.com/users/heartbleeded/gists{/gist_id}", "starred_url": "https://api.github.com/users/heartbleeded/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heartbleeded/subscriptions", "organizations_url": "https://api.github.com/users/heartbleeded/orgs", "repos_url": "https://api.github.com/users/heartbleeded/repos", "events_url": "https://api.github.com/users/heartbleeded/events{/privacy}", "received_events_url": "https://api.github.com/users/heartbleeded/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351848, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ4", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20confirmed", "name": "S: confirmed", "color": "beed6d", "default": false, "description": "Confirmed bug report or approved feature request."}, {"id": 149995941, "node_id": "MDU6TGFiZWwxNDk5OTU5NDE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20bug", "name": "T: bug", "color": "fc544e", "default": false, "description": "Bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-11T09:37:36Z", "updated_at": "2020-04-11T15:05:24Z", "closed_at": "2020-04-11T15:05:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm facing one Latex block which is slowly render by Arithmatex. It takes ~ 10 minutes to render.\r\n\r\nLatex block:\r\n```\r\ntext='''\r\n$z^{[1]} = \\begin{bmatrix}w^{[1]T}_1 \\\\ w^{[1]T}_2 \\\\ w^{[1]T}_3 \\\\ w^{[1]T}_4 \\end{bmatrix} \\begin{bmatrix}x_1 \\\\ x_2 \\\\ x_3 \\end{bmatrix} + \\begin{bmatrix}b^{[1]}_1 \\\\ b^{[1]}_2 \\\\ b^{[1]}_3 \\\\ b^{[1]}_4 \\end{bmatrix}= \\begin{bmatrix}w^{[1]T}_1 x + b^{[1]}_1 \\\\ w^{[1]T}_2 x + b^{[1]}_2\\\\ w^{[1]T}_3 x + b^{[1]}_3 \\\\ w^{[1]T}_4 x + b^{[1]}_4 \\end{bmatrix} $\r\n'''\r\nhtml = markdown.markdown(text, extensions=['pymdownx.arithmatex'])\r\n```\r\n\r\nWhen Break pressed, it throws this backtrace:\r\n\r\n```\r\n File \"./markdown/core.py\", line 388, in markdown\r\n    return md.convert(text)\r\n  File \"./markdown/core.py\", line 269, in convert\r\n    newRoot = treeprocessor.run(root)\r\n  File \"./markdown/treeprocessors.py\", line 370, in run\r\n    self.__handleInline(text), child\r\n  File \"./markdown/treeprocessors.py\", line 131, in __handleInline\r\n    self.inlinePatterns[patternIndex], data, patternIndex, startIndex\r\n  File \"./markdown/treeprocessors.py\", line 270, in __applyPattern\r\n    for match in pattern.getCompiledRegExp().finditer(data, startIndex):\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/881", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/881/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/881/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/881/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/881", "id": 595953558, "node_id": "MDU6SXNzdWU1OTU5NTM1NTg=", "number": 881, "title": "Incorrect calculation of reference links when using snippets", "user": {"login": "steve-todorov", "id": 2303663, "node_id": "MDQ6VXNlcjIzMDM2NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steve-todorov", "html_url": "https://github.com/steve-todorov", "followers_url": "https://api.github.com/users/steve-todorov/followers", "following_url": "https://api.github.com/users/steve-todorov/following{/other_user}", "gists_url": "https://api.github.com/users/steve-todorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/steve-todorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steve-todorov/subscriptions", "organizations_url": "https://api.github.com/users/steve-todorov/orgs", "repos_url": "https://api.github.com/users/steve-todorov/repos", "events_url": "https://api.github.com/users/steve-todorov/events{/privacy}", "received_events_url": "https://api.github.com/users/steve-todorov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-07T15:25:37Z", "updated_at": "2020-04-07T16:39:24Z", "closed_at": "2020-04-07T16:39:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Bug report (maybe feature request?)\r\n\r\n[Reference links](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#links) are incorrectly calculated when you include a snippet into another markdown document.\r\n\r\n### Use case\r\n\r\nWhen you have a markdown documentation which grows it quickly becomes annoying to have to write down the same links over and over. It becomes even more annoying to have to fix the links when they change across all pages involved. It would be great if it is possible to have common links stored in a sort of \"meta\" markdown page which you can import into another page and reference the common links.\r\n\r\n### Steps to reproduce\r\n\r\n* [Strongbox Docs](https://github.com/strongbox/strongbox-docs) (example repo)\r\n* Add a file called `global-link-references.md` under `docs` with the following content:\r\n\r\n    ```\r\n    [<!-- Global links which can be shared across all pages such as links to JDK8, system requirements, etc -->]: # \r\n    [<!-- Strongbox related links -->]: # \r\n    [strongbox-distribution-setup]: ./user-guide/getting-started.md <--- this path is relative to `global-link-references.md`, but will be incorrectly rendered later\r\n    ```\r\n* Change any file in a sub-dir like `./docs/user-guide/tool-integration/gradle.md` and include this at the very beginning: \r\n    ```\r\n    --8<-- \"global-link-references.md\"\r\n    ```\r\n  * Add a reference link in the same document i.e. `[My Strongbox Distribution Reference Link][strongbox-distribution-setup]`\r\n* `docker run -it --rm -v /path/to/strongbox-docs-clone:/docs -p 8000:8000 strongboxci/mkdocs:base serve -v -a 0.0.0.0:8000`\r\n* Go to `http://localhost:8000/user-guide/tool-integration/gradle-example.html`\r\n* The link `My Strongbox Distribution Reference Link` will point to \r\n    ```\r\n    http://localhost:8000/user-guide/tool-integration/user-guide/getting-started.md\r\n    ```\r\n    instead of \r\n    ```\r\n    http://localhost:8000/user-guide/getting-started.html\r\n    ```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/878", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/878/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/878/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/878/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/878", "id": 595519531, "node_id": "MDU6SXNzdWU1OTU1MTk1MzE=", "number": 878, "title": "Feature request: easier highlighting", "user": {"login": "ofek", "id": 9677399, "node_id": "MDQ6VXNlcjk2NzczOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9677399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ofek", "html_url": "https://github.com/ofek", "followers_url": "https://api.github.com/users/ofek/followers", "following_url": "https://api.github.com/users/ofek/following{/other_user}", "gists_url": "https://api.github.com/users/ofek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ofek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ofek/subscriptions", "organizations_url": "https://api.github.com/users/ofek/orgs", "repos_url": "https://api.github.com/users/ofek/repos", "events_url": "https://api.github.com/users/ofek/events{/privacy}", "received_events_url": "https://api.github.com/users/ofek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-07T01:02:10Z", "updated_at": "2020-04-12T02:50:33Z", "closed_at": "2020-04-12T02:50:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://facelessuser.github.io/pymdown-extensions/extensions/superfences/#highlighting-lines\r\n\r\nI suggest we allow multiple ranges like `hl_lines=\"4-6 9-15\"`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/877", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/877/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/877/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/877/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/877", "id": 595284605, "node_id": "MDU6SXNzdWU1OTUyODQ2MDU=", "number": 877, "title": "Typo in link", "user": {"login": "ofek", "id": 9677399, "node_id": "MDQ6VXNlcjk2NzczOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9677399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ofek", "html_url": "https://github.com/ofek", "followers_url": "https://api.github.com/users/ofek/followers", "following_url": "https://api.github.com/users/ofek/following{/other_user}", "gists_url": "https://api.github.com/users/ofek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ofek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ofek/subscriptions", "organizations_url": "https://api.github.com/users/ofek/orgs", "repos_url": "https://api.github.com/users/ofek/repos", "events_url": "https://api.github.com/users/ofek/events{/privacy}", "received_events_url": "https://api.github.com/users/ofek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1626977756, "node_id": "MDU6TGFiZWwxNjI2OTc3NzU2", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20triage", "name": "S: triage", "color": "f0f49a", "default": false, "description": "Issue needs triage."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-06T17:15:17Z", "updated_at": "2020-04-06T18:19:13Z", "closed_at": "2020-04-06T18:19:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/facelessuser/pymdown-extensions/blob/1cec43f146cdd41dc9515be03c0bc105e85ae953/docs/src/markdown/_snippets/links.txt#L24", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/876", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/876/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/876/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/876/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/876", "id": 595264007, "node_id": "MDU6SXNzdWU1OTUyNjQwMDc=", "number": 876, "title": "Add complete JS example for UML", "user": {"login": "ofek", "id": 9677399, "node_id": "MDQ6VXNlcjk2NzczOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9677399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ofek", "html_url": "https://github.com/ofek", "followers_url": "https://api.github.com/users/ofek/followers", "following_url": "https://api.github.com/users/ofek/following{/other_user}", "gists_url": "https://api.github.com/users/ofek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ofek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ofek/subscriptions", "organizations_url": "https://api.github.com/users/ofek/orgs", "repos_url": "https://api.github.com/users/ofek/repos", "events_url": "https://api.github.com/users/ofek/events{/privacy}", "received_events_url": "https://api.github.com/users/ofek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351764, "node_id": "MDU6TGFiZWwxMTc2MzUxNzY0", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20docs", "name": "C: docs", "color": "709ad8", "default": false, "description": "Related to documentation."}, {"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-04-06T16:42:52Z", "updated_at": "2020-04-07T04:35:02Z", "closed_at": "2020-04-06T19:44:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Idea being I can put it in one file like before:\r\n\r\n```javascript\r\n(function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Targets special code or div blocks and converts them to UML.\r\n     * @param {object} converter is the object that transforms the text to UML.\r\n     * @param {string} className is the name of the class to target.\r\n     * @param {object} settings is the settings for converter.\r\n     * @return {void}\r\n     */\r\n    var uml = (function (converter, className, settings) {\r\n\r\n      var getFromCode = function getFromCode(parent) {\r\n        // Handles <pre><code>\r\n        var text = \"\";\r\n        for (var j = 0; j < parent.childNodes.length; j++) {\r\n          var subEl = parent.childNodes[j];\r\n          if (subEl.tagName.toLowerCase() === \"code\") {\r\n            for (var k = 0; k < subEl.childNodes.length; k++) {\r\n              var child = subEl.childNodes[k];\r\n              var whitespace = /^\\s*$/;\r\n              if (child.nodeName === \"#text\" && !whitespace.test(child.nodeValue)) {\r\n                text = child.nodeValue;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return text;\r\n      };\r\n\r\n      var getFromDiv = function getFromDiv(parent) {\r\n        // Handles <div>\r\n        return parent.textContent || parent.innerText;\r\n      };\r\n\r\n      // Change body to whatever element your main Markdown content lives.\r\n      var body = document.querySelectorAll(\"body\");\r\n      var blocks = document.querySelectorAll(\"pre.\" + className + \",div.\" + className\r\n\r\n      // Is there a settings object?\r\n      );var config = settings === void 0 ? {} : settings;\r\n\r\n      // Find the UML source element and get the text\r\n      for (var i = 0; i < blocks.length; i++) {\r\n        var parentEl = blocks[i];\r\n        var el = document.createElement(\"div\");\r\n        el.className = className;\r\n        el.style.visibility = \"hidden\";\r\n        el.style.position = \"absolute\";\r\n\r\n        var text = parentEl.tagName.toLowerCase() === \"pre\" ? getFromCode(parentEl) : getFromDiv(parentEl);\r\n\r\n        // Insert our new div at the end of our content to get general\r\n        // typeset and page sizes as our parent might be `display:none`\r\n        // keeping us from getting the right sizes for our SVG.\r\n        // Our new div will be hidden via \"visibility\" and take no space\r\n        // via `position: absolute`. When we are all done, use the\r\n        // original node as a reference to insert our SVG back\r\n        // into the proper place, and then make our SVG visible again.\r\n        // Lastly, clean up the old node.\r\n        body[0].appendChild(el);\r\n        var diagram = converter.parse(text);\r\n        diagram.drawSVG(el, config);\r\n        el.style.visibility = \"visible\";\r\n        el.style.position = \"static\";\r\n        parentEl.parentNode.insertBefore(el, parentEl);\r\n        parentEl.parentNode.removeChild(parentEl);\r\n      }\r\n    });\r\n\r\n    (function () {\r\n      var onReady = function onReady(fn) {\r\n        if (document.addEventListener) {\r\n          document.addEventListener(\"DOMContentLoaded\", fn);\r\n        } else {\r\n          document.attachEvent(\"onreadystatechange\", function () {\r\n            if (document.readyState === \"interactive\") {\r\n              fn();\r\n            }\r\n          });\r\n        }\r\n      };\r\n\r\n      onReady(function () {\r\n        if (typeof flowchart !== \"undefined\") {\r\n          uml(flowchart, \"uml-flowchart\");\r\n        }\r\n\r\n        if (typeof Diagram !== \"undefined\") {\r\n          uml(Diagram, \"uml-sequence-diagram\", { theme: \"simple\" });\r\n        }\r\n    });\r\n})();\r\n\r\n}());\r\n```\r\n\r\nbut now your loader imports uml from a 2nd file and I think that requires a JS build tool?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/875", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/875/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/875/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/875/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/875", "id": 595097216, "node_id": "MDU6SXNzdWU1OTUwOTcyMTY=", "number": 875, "title": "PathConverter not working as expected", "user": {"login": "raphaelyancey", "id": 5130438, "node_id": "MDQ6VXNlcjUxMzA0Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5130438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphaelyancey", "html_url": "https://github.com/raphaelyancey", "followers_url": "https://api.github.com/users/raphaelyancey/followers", "following_url": "https://api.github.com/users/raphaelyancey/following{/other_user}", "gists_url": "https://api.github.com/users/raphaelyancey/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphaelyancey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphaelyancey/subscriptions", "organizations_url": "https://api.github.com/users/raphaelyancey/orgs", "repos_url": "https://api.github.com/users/raphaelyancey/repos", "events_url": "https://api.github.com/users/raphaelyancey/events{/privacy}", "received_events_url": "https://api.github.com/users/raphaelyancey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-06T13:02:23Z", "updated_at": "2020-04-06T13:41:24Z", "closed_at": "2020-04-06T13:36:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Live example: https://repl.it/repls/DizzyFickleCallback\r\n\r\n```python\r\nimport markdown\r\n\r\nraw = '[README.md](README.md)\\n\\n[./README.md](./README.md)\\n'\r\n\r\na = markdown.markdown(raw,\r\n                      extensions=['pymdownx.pathconverter'],\r\n                      extensions_configs={\r\n                        'pymdownx.pathconverter': {\r\n                          'absolute': True,\r\n                          'base_path': 'http://github.com',\r\n                        }\r\n                      })\r\n\r\nprint(a)\r\n\r\n# Returns:\r\n# <p><a href=\"README.md\">README.md</a></p>\r\n# <p><a href=\"./README.md\">./README.md</a></p>\r\n```\r\n\r\nI'd like the relatives links to have `http://github.com` as a base URL (example). Am I using this correctly?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/871", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/871/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/871/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/871/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/871", "id": 592311796, "node_id": "MDU6SXNzdWU1OTIzMTE3OTY=", "number": 871, "title": "Tabbed doesn't work as expected for some reason", "user": {"login": "stepan-3", "id": 56981806, "node_id": "MDQ6VXNlcjU2OTgxODA2", "avatar_url": "https://avatars0.githubusercontent.com/u/56981806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepan-3", "html_url": "https://github.com/stepan-3", "followers_url": "https://api.github.com/users/stepan-3/followers", "following_url": "https://api.github.com/users/stepan-3/following{/other_user}", "gists_url": "https://api.github.com/users/stepan-3/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepan-3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepan-3/subscriptions", "organizations_url": "https://api.github.com/users/stepan-3/orgs", "repos_url": "https://api.github.com/users/stepan-3/repos", "events_url": "https://api.github.com/users/stepan-3/events{/privacy}", "received_events_url": "https://api.github.com/users/stepan-3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151758131, "node_id": "MDU6TGFiZWwxNTE3NTgxMzE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20invalid", "name": "S: invalid", "color": "f7c7be", "default": false, "description": "Invalid report (user error, upstream issue, etc)."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-02T02:21:13Z", "updated_at": "2020-04-02T23:07:48Z", "closed_at": "2020-04-02T13:45:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use Tabbed (7.0rc2). But it doesn't work as expected.\r\n\r\nScreenshot: \r\n![image](https://user-images.githubusercontent.com/56981806/78204167-b703ba00-744d-11ea-875c-8b6fcbfabdc6.png)\r\n\r\nI am using an example from the official docs. \r\n\r\n```\r\n# Extensions\r\nmarkdown_extensions:\r\n  - markdown.extensions.admonition\r\n  - markdown.extensions.codehilite:\r\n      guess_lang: false\r\n  - markdown.extensions.def_list\r\n  - markdown.extensions.footnotes\r\n  - markdown.extensions.meta\r\n  - markdown.extensions.sane_lists\r\n  - markdown.extensions.nl2br\r\n  - prependnewline #plugin to make list behavior, such as we have in GitBook now\r\n  - markdown.extensions.toc:\r\n      permalink: true\r\n  - pymdownx.arithmatex\r\n  - sane_lists\r\n  - pymdownx.betterem:\r\n      smart_enable: all\r\n  - pymdownx.caret\r\n  - pymdownx.critic\r\n  - pymdownx.details\r\n  - pymdownx.emoji:\r\n      emoji_index: !!python/name:pymdownx.emoji.twemoji\r\n      emoji_generator: !!python/name:pymdownx.emoji.to_svg\r\n  - pymdownx.inlinehilite\r\n  - pymdownx.keys\r\n  - pymdownx.magiclink:\r\n      repo_url_shorthand: true\r\n      user: squidfunk\r\n      repo: mkdocs-material\r\n  - pymdownx.mark\r\n  - pymdownx.smartsymbols\r\n  - pymdownx.superfences\r\n  - pymdownx.tabbed # doesn't work in the Default MkDocs-Material docker\r\n  - pymdownx.tasklist:\r\n      custom_checkbox: true\r\n  - pymdownx.tilde\r\n  - pymdownx.snippets:\r\n      check_paths: true\r\n      base_path: docs\r\n```\r\n\r\n\r\n```\r\nCollecting PyYAML>=3.10\r\n25\r\n  Downloading PyYAML-5.3.1.tar.gz (269 kB)\r\n26\r\nCollecting Jinja2>=2.10.1\r\n27\r\n  Downloading Jinja2-2.11.1-py2.py3-none-any.whl (126 kB)\r\n28\r\nRequirement already satisfied: setuptools>=36 in /opt/hostedtoolcache/Python/3.8.2/x64/lib/python3.8/site-packages (from markdown>=3.2->-r requirements.txt (line 24)) (41.2.0)\r\n29\r\nCollecting six\r\n30\r\n  Downloading six-1.14.0-py2.py3-none-any.whl (10 kB)\r\n31\r\nCollecting future>=0.16.0\r\n32\r\n  Downloading future-0.18.2.tar.gz (829 kB)\r\n33\r\nCollecting nltk>=3.2.5; extra == \"languages\"\r\n34\r\n  Downloading nltk-3.4.5.zip (1.5 MB)\r\n35\r\nCollecting MarkupSafe>=0.23\r\n36\r\n  Downloading MarkupSafe-1.1.1-cp38-cp38-manylinux1_x86_64.whl (32 kB)\r\n37\r\nInstalling collected packages: six, tornado, livereload, future, nltk, lunr, markdown, click, PyYAML, MarkupSafe, Jinja2, mkdocs, Pygments, pymdown-extensions, prependnewline\r\n38\r\n    Running setup.py install for tornado: started\r\n39\r\n    Running setup.py install for tornado: finished with status 'done'\r\n40\r\n    Running setup.py install for future: started\r\n41\r\n    Running setup.py install for future: finished with status 'done'\r\n42\r\n    Running setup.py install for nltk: started\r\n43\r\n    Running setup.py install for nltk: finished with status 'done'\r\n44\r\n    Running setup.py install for PyYAML: started\r\n45\r\n    Running setup.py install for PyYAML: finished with status 'done'\r\n46\r\n    Running setup.py install for prependnewline: started\r\n47\r\n    Running setup.py install for prependnewline: finished with status 'done'\r\n48\r\nSuccessfully installed Jinja2-2.11.1 MarkupSafe-1.1.1 PyYAML-5.3.1 Pygments-2.6.1 click-7.1.1 future-0.18.2 livereload-2.6.1 lunr-0.5.6 markdown-3.2.1 mkdocs-1.1 nltk-3.4.5 prependnewline-1.2 pymdown-extensions-7.0rc2 six-1.14.0 tornado-6.0.4\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/866", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/866/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/866/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/866/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/866", "id": 589583055, "node_id": "MDU6SXNzdWU1ODk1ODMwNTU=", "number": 866, "title": "Minor trouble with magiclink extension", "user": {"login": "Andre601", "id": 11576465, "node_id": "MDQ6VXNlcjExNTc2NDY1", "avatar_url": "https://avatars3.githubusercontent.com/u/11576465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andre601", "html_url": "https://github.com/Andre601", "followers_url": "https://api.github.com/users/Andre601/followers", "following_url": "https://api.github.com/users/Andre601/following{/other_user}", "gists_url": "https://api.github.com/users/Andre601/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andre601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andre601/subscriptions", "organizations_url": "https://api.github.com/users/Andre601/orgs", "repos_url": "https://api.github.com/users/Andre601/repos", "events_url": "https://api.github.com/users/Andre601/events{/privacy}", "received_events_url": "https://api.github.com/users/Andre601/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-03-28T14:02:16Z", "updated_at": "2020-03-30T01:22:36Z", "closed_at": "2020-03-30T01:22:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to implement the MagicLink extension into my sites, but when using it, does it not shorten the github urls, despite me enabling both `repo_url_shortener` and `repo_url_shorthand` in the mkdocs.yml\r\n\r\nI want to point out, that the repositories I want to point towards are all on GitHub, but not all are within the same organisation/user.\r\n\r\nThe extension does automatically set the link, but does not shorten it in any way.\r\n`@user/repo` mentions are working, but do lack the GitHub icon. Does this require the provider to be set?\r\nOr does it require some additional CSS stuff to be added?\r\n\r\nI'm generally lost on how I could implement this the best way.\r\n\r\nAdditional information:\r\n- Version MkDocs 1.1\r\n- Using Material Theme 5.0.0 RC 3\r\n- Using PyMdown 7.0 with following extensions:\r\n  - superfences\r\n  - tabbed\r\n  - magiclink", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/847", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/847/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/847/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/847/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/847", "id": 577892434, "node_id": "MDU6SXNzdWU1Nzc4OTI0MzQ=", "number": 847, "title": "Suggestion: Add extension for Rest API methods", "user": {"login": "Andre601", "id": 11576465, "node_id": "MDQ6VXNlcjExNTc2NDY1", "avatar_url": "https://avatars3.githubusercontent.com/u/11576465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andre601", "html_url": "https://github.com/Andre601", "followers_url": "https://api.github.com/users/Andre601/followers", "following_url": "https://api.github.com/users/Andre601/following{/other_user}", "gists_url": "https://api.github.com/users/Andre601/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andre601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andre601/subscriptions", "organizations_url": "https://api.github.com/users/Andre601/orgs", "repos_url": "https://api.github.com/users/Andre601/repos", "events_url": "https://api.github.com/users/Andre601/events{/privacy}", "received_events_url": "https://api.github.com/users/Andre601/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T12:59:21Z", "updated_at": "2020-03-09T13:58:59Z", "closed_at": "2020-03-09T13:58:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "MkDocs is (kinda obviously) used for API documentation including those of Rest APIs\r\n\r\nI think it would be a useful addition to have an extension to implement the different Rest actions into the documentation (like into headers and such\r\n\r\nI can't really think of a proper syntax, but maybe something like this?\r\n```\r\n## {GET} /img/cat\r\n```\r\n\r\n`{GET}` would be replaced with a \"GET\" that is in a specific colour (and maybe with some background? idk)\r\n\r\nIf there is already an extension implementing such stuff and that could be used along with pymdown extensions, let me know.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/846", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/846/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/846/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/846", "id": 577795685, "node_id": "MDU6SXNzdWU1Nzc3OTU2ODU=", "number": 846, "title": "Provide example for tabbed code blocks", "user": {"login": "wilhelmer", "id": 2234833, "node_id": "MDQ6VXNlcjIyMzQ4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2234833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilhelmer", "html_url": "https://github.com/wilhelmer", "followers_url": "https://api.github.com/users/wilhelmer/followers", "following_url": "https://api.github.com/users/wilhelmer/following{/other_user}", "gists_url": "https://api.github.com/users/wilhelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilhelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilhelmer/subscriptions", "organizations_url": "https://api.github.com/users/wilhelmer/orgs", "repos_url": "https://api.github.com/users/wilhelmer/repos", "events_url": "https://api.github.com/users/wilhelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/wilhelmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-09T10:16:04Z", "updated_at": "2020-03-09T12:07:18Z", "closed_at": "2020-03-09T12:07:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you provide a sample for tabbed code blocks using `pymdownx.tabbed` in the docs? I can't get it to work with Material v5.\r\n\r\nIs it supposed to work like this?\r\n\r\n````\r\n=== \"Bash Tab\"\r\n    ```Bash\r\n    #!/bin/bash\r\n    STR=\"Hello World!\"\r\n    echo $STR\r\n    ```\r\n\r\n=== \"C Tab\"\r\n    ```C\r\n    #include \r\n\r\n    int main(void) {\r\n    printf(\"hello, world\\n\");\r\n    }\r\n    ```\r\n````\r\n\r\nBut then, the \"Bash\" and \"C\" after the triple backticks get added to my code sample. Also, codehilite doesn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/842", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/842/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/842/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/842/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/842", "id": 577602035, "node_id": "MDU6SXNzdWU1Nzc2MDIwMzU=", "number": 842, "title": "Inline $...$ Equations with Mathjax3", "user": {"login": "rapon233", "id": 55471403, "node_id": "MDQ6VXNlcjU1NDcxNDAz", "avatar_url": "https://avatars0.githubusercontent.com/u/55471403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rapon233", "html_url": "https://github.com/rapon233", "followers_url": "https://api.github.com/users/rapon233/followers", "following_url": "https://api.github.com/users/rapon233/following{/other_user}", "gists_url": "https://api.github.com/users/rapon233/gists{/gist_id}", "starred_url": "https://api.github.com/users/rapon233/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rapon233/subscriptions", "organizations_url": "https://api.github.com/users/rapon233/orgs", "repos_url": "https://api.github.com/users/rapon233/repos", "events_url": "https://api.github.com/users/rapon233/events{/privacy}", "received_events_url": "https://api.github.com/users/rapon233/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-09T01:17:45Z", "updated_at": "2020-03-09T02:55:08Z", "closed_at": "2020-03-09T02:50:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Originnal Post](https://github.com/squidfunk/mkdocs-material/issues/1481#issue-575110404)\r\n\r\nI creat a new [repo](https://github.com/rapon233/mathjaxtest/blob/master/docs/index.md) for test.\r\nAs you see, https://rapon233.github.io/mathjaxtest/\r\nInline $...$ equation could not render as expected. And 2.7.0 works fine.\r\nAnything wrong with the docs\uff1f\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/827", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/827/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/827/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/827/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/827", "id": 569424264, "node_id": "MDU6SXNzdWU1Njk0MjQyNjQ=", "number": 827, "title": "Possibly move custom doc infrastructure over to mkdocs_pymdownx_material_extras", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351764, "node_id": "MDU6TGFiZWwxMTc2MzUxNzY0", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20docs", "name": "C: docs", "color": "709ad8", "default": false, "description": "Related to documentation."}, {"id": 1176809858, "node_id": "MDU6TGFiZWwxMTc2ODA5ODU4", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20maintenance", "name": "T: maintenance", "color": "b2ffeb", "default": false, "description": "Maintenance chore."}, {"id": 1637426219, "node_id": "MDU6TGFiZWwxNjM3NDI2MjE5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/skip-triage", "name": "skip-triage", "color": "000000", "default": false, "description": "Tells bot to not tag a new issue with 'triage'."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-23T02:16:48Z", "updated_at": "2020-02-24T15:42:42Z", "closed_at": "2020-02-24T15:42:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Using the MkDocs plugin infrastructure, I've created a plugin that loads up our custom styling. This makes it easier to for some of my other projects to use the same custom stylings.\r\n\r\nCurrently, we just copy over the `docs/theme` content to the plugin, and when it is included, it injects the resources into the build system and all the assets and stylings get copied over and used.\r\n\r\nMoving forward, it may make sense to move the custom style source and compilation over to the plugin repo. Then Pymdown Extensions would just use the plugin to inject the custom stylings into its docs as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/824", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/824/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/824/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/824/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/824", "id": 568592706, "node_id": "MDU6SXNzdWU1Njg1OTI3MDY=", "number": 824, "title": "Label bot having issues", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1626977756, "node_id": "MDU6TGFiZWwxNjI2OTc3NzU2", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20triage", "name": "S: triage", "color": "f0f49a", "default": false, "description": "Issue needs triage."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-20T21:47:03Z", "updated_at": "2020-02-20T21:51:00Z", "closed_at": "2020-02-20T21:51:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": "@gir-bot sync labels", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/821", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/821/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/821/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/821/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/821", "id": 567101002, "node_id": "MDU6SXNzdWU1NjcxMDEwMDI=", "number": 821, "title": "Provide a way to completely override the underlying highlighter for JS highlighters", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}, {"id": 1637426219, "node_id": "MDU6TGFiZWwxNjM3NDI2MjE5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/skip-triage", "name": "skip-triage", "color": "000000", "default": false, "description": "Tells bot to not tag a new issue with 'triage'."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-18T19:13:37Z", "updated_at": "2020-02-18T22:43:06Z", "closed_at": "2020-02-18T22:43:06Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently, SuperFences highlighter uses Pygments, or it does a generic output for JS highlighters.\r\n\r\nYou can add custom fences for specific keywords, but if you want to completely plugin and replace the highlighter to work better for a specific JS highlighter (let's say to better control JS highlighter specific options) it just isn't possible.\r\n\r\nCurrently, SuperFences and InlineHilite go through a list of formatters, and if none of the user ones match, it defaults to the general purpose one that they use to do basic highlighting.  But if we were able to override that base formatter, you could plug in any highlighter formatter you wanted.  I think we could do this simply by putting in logic that if a user specifies the custom name value as `*`, it will overwrite the base formatter. Then you could have your own Prism specific output and could control line numbers or whatever. \r\n\r\n@gir-bot add T: feature", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/820", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/820/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/820/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/820/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/820", "id": 566690938, "node_id": "MDU6SXNzdWU1NjY2OTA5Mzg=", "number": 820, "title": "Separate pymdownx completely from CodeHilite", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}, {"id": 1637426219, "node_id": "MDU6TGFiZWwxNjM3NDI2MjE5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/skip-triage", "name": "skip-triage", "color": "000000", "default": false, "description": "Tells bot to not tag a new issue with 'triage'."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T07:08:37Z", "updated_at": "2020-02-19T01:14:28Z", "closed_at": "2020-02-19T01:14:27Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Pymdownx still copies settings over from CodeHilite and honors them if Highlight is not explicitly included. This was done to provide a smooth transition from CodeHilite to Highlight which is used for SuperFences and InlineHilite. CodeHilite is not used to generate the syntax highlighting at all, and hasn't been for a long time now.\r\n\r\nWe need to no longer even look at CodeHilite and just instruct users to use Highlight for controlling SuperFences and InlineHilite. CodeHilite is only used for Python Markdown's Fenced Code and Indented code highlighting.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/814", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/814/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/814/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/814/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/814", "id": 562765522, "node_id": "MDU6SXNzdWU1NjI3NjU1MjI=", "number": 814, "title": "Add general tabbed interface extension", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2020-02-10T19:06:33Z", "updated_at": "2020-02-14T20:07:18Z", "closed_at": "2020-02-14T20:06:31Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://github.com/squidfunk/mkdocs-material/issues/955\r\n\r\n@gir-bot add T: feature\r\n@gir-bot lgtm", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/811", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/811/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/811/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/811/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/811", "id": 562274330, "node_id": "MDU6SXNzdWU1NjIyNzQzMzA=", "number": 811, "title": "Version consistency", "user": {"login": "yochananmarqos", "id": 5437803, "node_id": "MDQ6VXNlcjU0Mzc4MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5437803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yochananmarqos", "html_url": "https://github.com/yochananmarqos", "followers_url": "https://api.github.com/users/yochananmarqos/followers", "following_url": "https://api.github.com/users/yochananmarqos/following{/other_user}", "gists_url": "https://api.github.com/users/yochananmarqos/gists{/gist_id}", "starred_url": "https://api.github.com/users/yochananmarqos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yochananmarqos/subscriptions", "organizations_url": "https://api.github.com/users/yochananmarqos/orgs", "repos_url": "https://api.github.com/users/yochananmarqos/repos", "events_url": "https://api.github.com/users/yochananmarqos/events{/privacy}", "received_events_url": "https://api.github.com/users/yochananmarqos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1626977756, "node_id": "MDU6TGFiZWwxNjI2OTc3NzU2", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20triage", "name": "S: triage", "color": "f0f49a", "default": false, "description": "Issue needs triage."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-02-10T01:09:10Z", "updated_at": "2020-02-10T03:03:43Z", "closed_at": "2020-02-10T02:25:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Github release is 6.3.0 while the PyPI version is 6.3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/798", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/798/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/798/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/798/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/798", "id": 553748082, "node_id": "MDU6SXNzdWU1NTM3NDgwODI=", "number": 798, "title": "Adopt similar functionality as Python Markdown for classes and ids in code blocks", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-22T19:32:52Z", "updated_at": "2020-02-18T19:05:01Z", "closed_at": "2020-02-18T19:05:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Reference issue: https://github.com/Python-Markdown/markdown/pull/816\r\n\r\n@gir-bot add T: feature\r\n@gir-bot lgtm", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/794", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/794/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/794/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/794/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/794", "id": 551551761, "node_id": "MDU6SXNzdWU1NTE1NTE3NjE=", "number": 794, "title": "MagicLink: Single-word hostnames not recognised as links.", "user": {"login": "willstott101", "id": 335152, "node_id": "MDQ6VXNlcjMzNTE1Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/335152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willstott101", "html_url": "https://github.com/willstott101", "followers_url": "https://api.github.com/users/willstott101/followers", "following_url": "https://api.github.com/users/willstott101/following{/other_user}", "gists_url": "https://api.github.com/users/willstott101/gists{/gist_id}", "starred_url": "https://api.github.com/users/willstott101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willstott101/subscriptions", "organizations_url": "https://api.github.com/users/willstott101/orgs", "repos_url": "https://api.github.com/users/willstott101/repos", "events_url": "https://api.github.com/users/willstott101/events{/privacy}", "received_events_url": "https://api.github.com/users/willstott101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351848, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ4", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20confirmed", "name": "S: confirmed", "color": "beed6d", "default": false, "description": "Confirmed bug report or approved feature request."}, {"id": 149995941, "node_id": "MDU6TGFiZWwxNDk5OTU5NDE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20bug", "name": "T: bug", "color": "fc544e", "default": false, "description": "Bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-17T17:53:19Z", "updated_at": "2020-01-17T19:26:49Z", "closed_at": "2020-01-17T19:26:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "We tend to give intranet servers a single-part hostname such as george so URLs end up being like this: https://george/wiki/\r\n\r\nLinks with hostnames like this are recognised and hyperlinked by GitLab and GitHub markdown. However this implementation does not recognise them as links.\r\n\r\nI noticed this whilst using your sublime extension. When switching to an API back-end this was an obvious difference for me. I'd love to be able to use this when preparing docs for our local GitLab instance, without having to make network requests.\r\n\r\nThanks for your work btw, lots of small commits to format a doc correctly drives me crazy :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/780", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/780/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/780/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/780/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/780", "id": 545221156, "node_id": "MDU6SXNzdWU1NDUyMjExNTY=", "number": 780, "title": "[my misuse?] generated flowchart problem", "user": {"login": "retsyo", "id": 7960913, "node_id": "MDQ6VXNlcjc5NjA5MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7960913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retsyo", "html_url": "https://github.com/retsyo", "followers_url": "https://api.github.com/users/retsyo/followers", "following_url": "https://api.github.com/users/retsyo/following{/other_user}", "gists_url": "https://api.github.com/users/retsyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/retsyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retsyo/subscriptions", "organizations_url": "https://api.github.com/users/retsyo/orgs", "repos_url": "https://api.github.com/users/retsyo/repos", "events_url": "https://api.github.com/users/retsyo/events{/privacy}", "received_events_url": "https://api.github.com/users/retsyo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-04T01:02:47Z", "updated_at": "2020-03-23T23:57:03Z", "closed_at": "2020-01-05T02:34:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I do not know much about web programming. In my case, I try to generate flowchart in my desktop application. Currently In my html, if I write\r\n```html\r\n<div class=\"uml-flowchart\">\r\nst=>start: Start\r\nop=>operation: Your Operation\r\ncond=>condition: Yes or No?\r\ne=>end\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n</div>\r\n```\r\nbetween `<body>` and  `</body>`, then the flowchart will be rendered. So I hope \r\n\r\n    a flow chart\r\n    ```flow\r\n    st=>start: Start\r\n    op=>operation: Your Operation\r\n    cond=>condition: Yes or No?\r\n    e=>end\r\n    \r\n    st->op->cond\r\n    cond(yes)->e\r\n    cond(no)->op\r\n    ```\r\n\r\n\r\n\r\ncan be converted to something like\r\n\r\n```\r\n<pre>a flow chart</pre>\r\n<div class=\"uml-flowchart\">\r\nst=>start: Start\r\nop=>operation: Your Operation\r\ncond=>condition: Yes or No?\r\ne=>end\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n</div>\r\n\r\n```\r\n\r\n\r\n\r\nbut for the following code\r\n```\r\n\r\nimport markdown as md\r\nimport pymdownx.superfences\r\n\r\nmd = md.Markdown(extensions=['pymdownx.superfences'], extension_configs = {\r\n    \"pymdownx.superfences\": {\r\n        \"custom_fences\": [\r\n            {\r\n                'name': 'flow',\r\n                'class': 'uml-flowchart',\r\n                'format': pymdownx.superfences.fence_code_format\r\n            },\r\n            {\r\n                'name': 'sequence',\r\n                'class': 'uml-sequence-diagram',\r\n                'format': pymdownx.superfences.fence_code_format\r\n            }\r\n        ]\r\n    }\r\n})\r\n\r\ntxt = '''a flow chart\r\n\u200b```flow\r\n<div class=\"uml-flowchart\">\r\nst=>start: Start\r\nop=>operation: Your Operation\r\ncond=>condition: Yes or No?\r\ne=>end\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n\u200b```\r\n'''\r\nprint(md.convert(txt))\r\n\r\n```\r\nI get\r\n```\r\n<p>a flow chart\r\n<pre class=\"uml-flowchart\"><code>&lt;div class=\"uml-flowchart\"&gt;\r\nst=&gt;start: Start\r\nop=&gt;operation: Your Operation\r\ncond=&gt;condition: Yes or No?\r\ne=&gt;end\r\n\r\nst-&gt;op-&gt;cond\r\ncond(yes)-&gt;e\r\ncond(no)-&gt;op</code></pre></p>\r\n```\r\n\r\nso how to fix it? Thanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/779", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/779/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/779/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/779/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/779", "id": 544532978, "node_id": "MDU6SXNzdWU1NDQ1MzI5Nzg=", "number": 779, "title": "Add support for server-based plantuml diagrams", "user": {"login": "chbndrhnns", "id": 7534547, "node_id": "MDQ6VXNlcjc1MzQ1NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7534547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chbndrhnns", "html_url": "https://github.com/chbndrhnns", "followers_url": "https://api.github.com/users/chbndrhnns/followers", "following_url": "https://api.github.com/users/chbndrhnns/following{/other_user}", "gists_url": "https://api.github.com/users/chbndrhnns/gists{/gist_id}", "starred_url": "https://api.github.com/users/chbndrhnns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chbndrhnns/subscriptions", "organizations_url": "https://api.github.com/users/chbndrhnns/orgs", "repos_url": "https://api.github.com/users/chbndrhnns/repos", "events_url": "https://api.github.com/users/chbndrhnns/events{/privacy}", "received_events_url": "https://api.github.com/users/chbndrhnns/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351845, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ1", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20more-info-needed", "name": "S: more-info-needed", "color": "f0f49a", "default": false, "description": "More information is required."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-02T10:58:03Z", "updated_at": "2020-01-02T17:45:25Z", "closed_at": "2020-01-02T16:51:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you consider adding support for [this](https://github.com/mikitex70/plantuml-markdown) plugin?\r\n\r\nI am following a everything-as-code philosophy and would also like to keep my diagrams as code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/771", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/771/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/771/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/771/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/771", "id": 542436156, "node_id": "MDU6SXNzdWU1NDI0MzYxNTY=", "number": 771, "title": "AttributeError: module 'markdown.extensions.extra' has no attribute 'MarkdownInHtmlProcessor'", "user": {"login": "retsyo", "id": 7960913, "node_id": "MDQ6VXNlcjc5NjA5MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7960913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retsyo", "html_url": "https://github.com/retsyo", "followers_url": "https://api.github.com/users/retsyo/followers", "following_url": "https://api.github.com/users/retsyo/following{/other_user}", "gists_url": "https://api.github.com/users/retsyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/retsyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retsyo/subscriptions", "organizations_url": "https://api.github.com/users/retsyo/orgs", "repos_url": "https://api.github.com/users/retsyo/repos", "events_url": "https://api.github.com/users/retsyo/events{/privacy}", "received_events_url": "https://api.github.com/users/retsyo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1626977756, "node_id": "MDU6TGFiZWwxNjI2OTc3NzU2", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20triage", "name": "S: triage", "color": "f0f49a", "default": false, "description": "Issue needs triage."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-26T05:17:11Z", "updated_at": "2019-12-28T23:06:57Z", "closed_at": "2019-12-28T23:06:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "actually I am using https://github.com/ncornette/Python-Markdown-Editor, \r\nI have installed latested cloned `markdown` and `pymdown-extensions`\r\n\r\nwhich says\r\n```\r\n>e:\\prg\\py\\Anaconda3_64\\python.exe -u \"markdown_edit.py\"\r\nTraceback (most recent call last):\r\n  File \"markdown_edit.py\", line 108, in <module>\r\n    main()\r\n  File \"markdown_edit.py\", line 95, in main\r\n    markdown_processor = markdown.Markdown(**options)\r\n  File \"e:\\prg\\py\\Anaconda3_64\\lib\\site-packages\\markdown-3.2.dev0-py3.6.egg\\markdown\\core.py\", line 97, in __init__\r\n  File \"e:\\prg\\py\\Anaconda3_64\\lib\\site-packages\\markdown-3.2.dev0-py3.6.egg\\markdown\\core.py\", line 125, in registerExtensions\r\n  File \"e:\\prg\\py\\Anaconda3_64\\lib\\site-packages\\markdown-3.2.dev0-py3.6.egg\\markdown\\extensions\\__init__.py\", line 77, in _extendMarkdown\r\n  File \"e:\\prg\\py\\pure_pylib\\_io\\_markdown\\facelessuser\\pymdown-extensions\\pymdownx\\extrarawhtml.py\", line 30, in extendMarkdown\r\n    extra.MarkdownInHtmlProcessor(md.parser), 'markdown_block', 105\r\nAttributeError: module 'markdown.extensions.extra' has no attribute 'MarkdownInHtmlProcessor'\r\n```\r\n\r\nI fix the problem by modify `pymdownx\\extrarawhtml.py`\r\n1. change\r\n```python\r\nfrom markdown.extensions import extra\r\n```\r\nto\r\n```python\r\nfrom markdown.extensions import md_in_html\r\n```\r\n\r\n2. change\r\n```python\r\nextra.MarkdownInHtmlProcessor(md.parser), 'markdown_block', 105\r\n```\r\nto\r\n```python\r\nmd_in_html.MarkdownInHtmlProcessor(md.parser), 'markdown_block', 105\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/768", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/768/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/768/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/768/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/768", "id": 540296733, "node_id": "MDU6SXNzdWU1NDAyOTY3MzM=", "number": 768, "title": "Emoji causes mkdocs crash/build failure", "user": {"login": "Stanzilla", "id": 75278, "node_id": "MDQ6VXNlcjc1Mjc4", "avatar_url": "https://avatars3.githubusercontent.com/u/75278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stanzilla", "html_url": "https://github.com/Stanzilla", "followers_url": "https://api.github.com/users/Stanzilla/followers", "following_url": "https://api.github.com/users/Stanzilla/following{/other_user}", "gists_url": "https://api.github.com/users/Stanzilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stanzilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stanzilla/subscriptions", "organizations_url": "https://api.github.com/users/Stanzilla/orgs", "repos_url": "https://api.github.com/users/Stanzilla/repos", "events_url": "https://api.github.com/users/Stanzilla/events{/privacy}", "received_events_url": "https://api.github.com/users/Stanzilla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351845, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ1", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20more-info-needed", "name": "S: more-info-needed", "color": "f0f49a", "default": false, "description": "More information is required."}, {"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-19T12:54:47Z", "updated_at": "2019-12-19T17:11:10Z", "closed_at": "2019-12-19T17:07:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I used :tada: in a page today and it crashed it\r\n\r\n```\r\n7:49:55 AM: ERROR   -  Error reading page 'news/events/game_jam.md': 'str' object is not callable\r\n7:49:55 AM: Traceback (most recent call last):\r\n7:49:55 AM:   File \"/opt/buildhome/python3.7/bin/mkdocs\", line 8, in <module>\r\n7:49:55 AM:     sys.exit(cli())\r\n7:49:55 AM:   File \"/opt/buildhome/python3.7/lib/python3.7/site-packages/click/core.py\", line 764, in __call__\r\n7:49:55 AM:     return self.main(*args, **kwargs)\r\n7:49:55 AM:   File \"/opt/buildhome/python3.7/lib/python3.7/site-packages/click/core.py\", line 717, in main\r\n7:49:55 AM:     rv = self.invoke(ctx)\r\n7:49:55 AM:   File \"/opt/buildhome/python3.7/lib/python3.7/site-packages/click/core.py\", line 1137, in invoke\r\n7:49:55 AM:     return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n7:49:55 AM:   File \"/opt/buildhome/python3.7/lib/python3.7/site-packages/click/core.py\", line 956, in invoke\r\n7:49:55 AM:     return ctx.invoke(self.callback, **ctx.params)\r\n7:49:55 AM:   File \"/opt/buildhome/python3.7/lib/python3.7/site-packages/click/core.py\", line 555, in invoke\r\n7:49:55 AM:     return callback(*args, **kwargs)\r\n7:49:55 AM:   File \"/opt/buildhome/python3.7/lib/python3.7/site-packages/mkdocs/__main__.py\", line 163, in build_command\r\n7:49:55 AM:     ), dirty=not clean)\r\n7:49:55 AM: failed during stage 'building site': Build script returned non-zero exit code: 1\r\n7:49:55 AM:   File \"/opt/buildhome/python3.7/lib/python3.7/site-packages/mkdocs/commands/build.py\", line 274, in build\r\n7:49:55 AM:     _populate_page(file.page, config, files, dirty)\r\n7:49:55 AM:   File \"/opt/buildhome/python3.7/lib/python3.7/site-packages/mkdocs/commands/build.py\", line 177, in _populate_page\r\n7:49:55 AM:     page.render(config, files)\r\n7:49:55 AM: Shutting down logging, 30 messages pending\r\n```\r\n\r\n my markdown_extensions page looks like this:\r\n\r\n```yaml\r\nmarkdown_extensions:\r\n  - markdown.extensions.admonition\r\n  - markdown.extensions.codehilite:\r\n      guess_lang: false\r\n  - markdown.extensions.def_list\r\n  - markdown.extensions.footnotes\r\n  - markdown.extensions.meta\r\n  - markdown.extensions.toc:\r\n      permalink: true\r\n  - pymdownx.arithmatex\r\n  - pymdownx.betterem:\r\n      smart_enable: all\r\n  - pymdownx.caret\r\n  - pymdownx.critic\r\n  - pymdownx.details\r\n  - pymdownx.emoji:\r\n      emoji_index: !!python/name:pymdownx.emoji.twemoji\r\n      emoji_generator: !!python/name:pymdownx.emoji.to_svg\r\n  - pymdownx.inlinehilite\r\n  - pymdownx.keys\r\n  - pymdownx.magiclink:\r\n      repo_url_shorthand: true\r\n      user: squidfunk\r\n      repo: mkdocs-material\r\n  - pymdownx.mark\r\n  - pymdownx.smartsymbols\r\n  - pymdownx.superfences\r\n  - pymdownx.tasklist:\r\n      custom_checkbox: true\r\n  - pymdownx.tilde\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/751", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/751/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/751/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/751/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/751", "id": 533178528, "node_id": "MDU6SXNzdWU1MzMxNzg1Mjg=", "number": 751, "title": "The mark extension with Chinese", "user": {"login": "rapon233", "id": 55471403, "node_id": "MDQ6VXNlcjU1NDcxNDAz", "avatar_url": "https://avatars0.githubusercontent.com/u/55471403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rapon233", "html_url": "https://github.com/rapon233", "followers_url": "https://api.github.com/users/rapon233/followers", "following_url": "https://api.github.com/users/rapon233/following{/other_user}", "gists_url": "https://api.github.com/users/rapon233/gists{/gist_id}", "starred_url": "https://api.github.com/users/rapon233/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rapon233/subscriptions", "organizations_url": "https://api.github.com/users/rapon233/orgs", "repos_url": "https://api.github.com/users/rapon233/repos", "events_url": "https://api.github.com/users/rapon233/events{/privacy}", "received_events_url": "https://api.github.com/users/rapon233/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351753, "node_id": "MDU6TGFiZWwxMTc2MzUxNzUz", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20support", "name": "T: support", "color": "efbe62", "default": false, "description": "Support request."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-05T07:39:16Z", "updated_at": "2019-12-06T01:20:41Z", "closed_at": "2019-12-06T01:20:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "While wirting w/ mkdocs and pymdown-extensions 'Mark', I found that\r\n```\r\nabcde==fghi==jklmn  \r\nabcde ==fghi== jklmn\r\n```\r\nwould produce differently.\r\nIt's natural for languages with spaces to seperate words, but for Chinese \r\n```\r\nChinese sentences are like:\r\n\u8fd9\u662f\u4e00\u4e2a\u4e2d\u6587\u5b9e\u4f8b\u3002\r\nAfter mark,\r\n\u8fd9\u662f\u4e00\u4e2a==\u4e2d\u6587==\u5b9e\u4f8b\u3002\r\n\u8fd9\u662f\u4e00\u4e2a ==\u4e2d\u6587== \u5b9e\u4f8b\u3002\r\n```\r\nIt's a little bit abnormal, would u pls fix that or give me some suggestion?\r\n\r\nI use the latest VSCode and mkdocs, BTW.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/737", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/737/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/737/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/737", "id": 527186768, "node_id": "MDU6SXNzdWU1MjcxODY3Njg=", "number": 737, "title": "Docs: no extension names", "user": {"login": "twardoch", "id": 519108, "node_id": "MDQ6VXNlcjUxOTEwOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/519108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twardoch", "html_url": "https://github.com/twardoch", "followers_url": "https://api.github.com/users/twardoch/followers", "following_url": "https://api.github.com/users/twardoch/following{/other_user}", "gists_url": "https://api.github.com/users/twardoch/gists{/gist_id}", "starred_url": "https://api.github.com/users/twardoch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twardoch/subscriptions", "organizations_url": "https://api.github.com/users/twardoch/orgs", "repos_url": "https://api.github.com/users/twardoch/repos", "events_url": "https://api.github.com/users/twardoch/events{/privacy}", "received_events_url": "https://api.github.com/users/twardoch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351764, "node_id": "MDU6TGFiZWwxMTc2MzUxNzY0", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20docs", "name": "C: docs", "color": "709ad8", "default": false, "description": "Related to documentation."}, {"id": 1176809858, "node_id": "MDU6TGFiZWwxMTc2ODA5ODU4", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20maintenance", "name": "T: maintenance", "color": "b2ffeb", "default": false, "description": "Maintenance chore."}], "state": "closed", "locked": false, "assignee": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-11-22T13:10:21Z", "updated_at": "2019-12-17T18:03:48Z", "closed_at": "2019-12-17T18:03:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "The pymdownx documentation seems not to include the actual names of the extensions anywhere. It\u2019s hard to figure out how they\u2019re called. For example, that in order to use Snippets, I need to refer to `pymdownx.snippets`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/718", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/718/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/718/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/718", "id": 517498772, "node_id": "MDU6SXNzdWU1MTc0OTg3NzI=", "number": 718, "title": "Include a file content into superfences blocks", "user": {"login": "hason", "id": 288535, "node_id": "MDQ6VXNlcjI4ODUzNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/288535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hason", "html_url": "https://github.com/hason", "followers_url": "https://api.github.com/users/hason/followers", "following_url": "https://api.github.com/users/hason/following{/other_user}", "gists_url": "https://api.github.com/users/hason/gists{/gist_id}", "starred_url": "https://api.github.com/users/hason/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hason/subscriptions", "organizations_url": "https://api.github.com/users/hason/orgs", "repos_url": "https://api.github.com/users/hason/repos", "events_url": "https://api.github.com/users/hason/events{/privacy}", "received_events_url": "https://api.github.com/users/hason/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-05T01:34:07Z", "updated_at": "2019-11-08T23:34:51Z", "closed_at": "2019-11-08T23:34:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to import a file into superfences block e.g.:\r\n\r\n<pre>\r\n```plantuml include=diagram/deploy.plantuml\r\n```\r\n</pre>\r\n\r\nIncludes all lines from second line\r\n<pre>\r\n```python include=\"module/file.py 2:-1\"\r\n```\r\n</pre>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/705", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/705/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/705/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/705", "id": 509546004, "node_id": "MDU6SXNzdWU1MDk1NDYwMDQ=", "number": 705, "title": "Drop Python 2.7 support", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176809858, "node_id": "MDU6TGFiZWwxMTc2ODA5ODU4", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20maintenance", "name": "T: maintenance", "color": "b2ffeb", "default": false, "description": "Maintenance chore."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-20T04:52:10Z", "updated_at": "2019-12-29T03:56:59Z", "closed_at": "2019-12-29T03:56:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Python Markdown will be dropping Python 2.7 in their next major release. We will probably follow as well. Maybe not next version, but if not, probably the following .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/697", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/697/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/697/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/697/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/697", "id": 508109321, "node_id": "MDU6SXNzdWU1MDgxMDkzMjE=", "number": 697, "title": "Use Pygment's `wrapcode=True`", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351799, "node_id": "MDU6TGFiZWwxMTc2MzUxNzk5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20highlight", "name": "C: highlight", "color": "bfd4f2", "default": false, "description": "Related to the highlight extension."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-16T21:28:44Z", "updated_at": "2019-12-29T03:33:55Z", "closed_at": "2019-12-29T03:33:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Like Python Markdown, we should use `wrapcode=True` for Pygments. This wraps code under `pre` in `code`, frankly like should have already been.\r\n\r\nWe'll have to adjust our theme etc.\r\n\r\nWith that said, we should offer a temporary legacy switch with a deprecation warning for people that need to temporarily swap back.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/692", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/692/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/692/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/692", "id": 507439383, "node_id": "MDU6SXNzdWU1MDc0MzkzODM=", "number": 692, "title": "Support MathJax 3.0", "user": {"login": "lgeiger", "id": 13285808, "node_id": "MDQ6VXNlcjEzMjg1ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/13285808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgeiger", "html_url": "https://github.com/lgeiger", "followers_url": "https://api.github.com/users/lgeiger/followers", "following_url": "https://api.github.com/users/lgeiger/following{/other_user}", "gists_url": "https://api.github.com/users/lgeiger/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgeiger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgeiger/subscriptions", "organizations_url": "https://api.github.com/users/lgeiger/orgs", "repos_url": "https://api.github.com/users/lgeiger/repos", "events_url": "https://api.github.com/users/lgeiger/events{/privacy}", "received_events_url": "https://api.github.com/users/lgeiger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-10-15T19:32:13Z", "updated_at": "2019-11-07T01:56:24Z", "closed_at": "2019-10-16T01:29:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "[MathJax 3.0](https://github.com/mathjax/MathJax/releases/tag/3.0.0) was released last month with many improvements.\r\n\r\nWhen I load it from `https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js` to render math, the inline math is ignored. It would be great if `pymdown-extensions` would support MathJax 3.0 since it is quite a bit faster in rendering the Math.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/691", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/691/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/691/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/691", "id": 507315526, "node_id": "MDU6SXNzdWU1MDczMTU1MjY=", "number": 691, "title": "Arithmatex math fences example not rendered properly", "user": {"login": "emddudley", "id": 389629, "node_id": "MDQ6VXNlcjM4OTYyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/389629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emddudley", "html_url": "https://github.com/emddudley", "followers_url": "https://api.github.com/users/emddudley/followers", "following_url": "https://api.github.com/users/emddudley/following{/other_user}", "gists_url": "https://api.github.com/users/emddudley/gists{/gist_id}", "starred_url": "https://api.github.com/users/emddudley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emddudley/subscriptions", "organizations_url": "https://api.github.com/users/emddudley/orgs", "repos_url": "https://api.github.com/users/emddudley/repos", "events_url": "https://api.github.com/users/emddudley/events{/privacy}", "received_events_url": "https://api.github.com/users/emddudley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-15T15:18:16Z", "updated_at": "2019-10-16T00:25:26Z", "closed_at": "2019-10-16T00:25:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [Arithmatex math fences](https://facelessuser.github.io/pymdown-extensions/extensions/arithmatex/#alternative-math-blocks) example code is not being rendered properly in the live documentation. The ampersand is displayed as `amp;` but it should not be visible. Using Arithmatex without math fences works fine.\r\n\r\n![math-fences](https://user-images.githubusercontent.com/389629/66844962-3d2e5180-ef3d-11e9-9832-53a19bbcaaef.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/634", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/634/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/634/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/634", "id": 477581502, "node_id": "MDU6SXNzdWU0Nzc1ODE1MDI=", "number": 634, "title": "custom_fences in 6.0 don't work in mkdocs", "user": {"login": "Zelgius", "id": 11214847, "node_id": "MDQ6VXNlcjExMjE0ODQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/11214847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zelgius", "html_url": "https://github.com/Zelgius", "followers_url": "https://api.github.com/users/Zelgius/followers", "following_url": "https://api.github.com/users/Zelgius/following{/other_user}", "gists_url": "https://api.github.com/users/Zelgius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zelgius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zelgius/subscriptions", "organizations_url": "https://api.github.com/users/Zelgius/orgs", "repos_url": "https://api.github.com/users/Zelgius/repos", "events_url": "https://api.github.com/users/Zelgius/events{/privacy}", "received_events_url": "https://api.github.com/users/Zelgius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-08-06T20:35:02Z", "updated_at": "2020-03-16T01:37:11Z", "closed_at": "2019-08-06T21:10:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I currently can't add a custom fence to add the UML diagrams back to superfences in mkdocs. When I run `mkdocs serve` I get the following error\r\n```\r\nmkdocs serve\r\nINFO    -  Building documentation...\r\nERROR   -  Config value: 'markdown_extensions'. Error: Invalid Markdown Extensions configuration\r\n\r\nAborted with 1 Configuration Errors!\r\n```\r\nRelevant information (install packages and config) below.\r\n\r\nPackages installed\r\n```pip freeze\r\nClick==7.0\r\nhtmlmin==0.1.12\r\nJinja2==2.10.1\r\njsmin==2.2.2\r\nlivereload==2.6.1\r\nMarkdown==3.1.1\r\nMarkupSafe==1.1.1\r\nmkdocs==1.0.4\r\nmkdocs-material==4.4.0\r\nmkdocs-minify-plugin==0.2.1\r\nPygments==2.4.2\r\npymdown-extensions==6.0\r\nPyYAML==5.1.1\r\nsix==1.12.0\r\ntornado==6.0.3\r\n```\r\n\r\nRelevant mkdocs config\r\n```\r\nmarkdown_extensions:\r\n    - pymdownx.superfences:\r\n      custom_fences:\r\n        - name: flow\r\n          class: uml-flowchart\r\n          format: !!python/name:pymdownx.superfences.fence_code_format\r\n        - name: sequence\r\n          class: uml-sequence-diagram\r\n          format: !!python/name:pymdownx.superfences.fence_code_format\r\n    - pymdownx.progressbar\r\n    - pymdownx.details\r\n    - pymdownx.emoji\r\n    - pymdownx.keys\r\n    - pymdownx.smartsymbols\r\n    - pymdownx.magiclink:\r\n        repo_url_shortener: True\r\n        repo_url_shorthand: True\r\n        social_url_shorthand: True\r\n        # more options on magiclink https://facelessuser.github.io/pymdown-extensions/extensions/magiclink/#options\r\n        provider: 'github'\r\n    - codehilite:\r\n        # https://help.farbox.com/pygments.html\r\n        pygments_style: 'pastie'\r\n        linenums: False\r\n        # set to false to turn off pygments_style\r\n        noclasses: True\r\n    - pymdownx.tasklist\r\nextra_javascript:\r\n    - https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js\r\n    - https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js\r\n    - https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js\r\n    - https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js\r\n    - js/loader.js\r\n    - js/details.js\r\nextra_css:\r\n    - css/progress_bar.css\r\n    - css/details.css\r\n    - css/tasklist.css\r\n    - css/custom_tasklist.css\r\n    - css/extra.css\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/632", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/632/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/632/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/632", "id": 473693992, "node_id": "MDU6SXNzdWU0NzM2OTM5OTI=", "number": 632, "title": "Emoji changes", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-28T01:20:22Z", "updated_at": "2019-09-01T01:53:28Z", "closed_at": "2019-09-01T01:53:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "1. Gemoji has a new version we should pick up\r\n2. EmojiOne is really no more. Looks like they are owned by JoyPixel (or something like that). 4.5 is really the last **free** version. I'm not sure how safe it is to use 5.0 legally in all cases. It is definitely a for pay model now. Anyways, maybe lock to the last 4.5 index of EmojiOne and make a note about it.\r\n\r\n    People can always use the older images of EmojiOne 3 etc. They just have to use the 4 series short names.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/631", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/631/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/631/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/631", "id": 471639843, "node_id": "MDU6SXNzdWU0NzE2Mzk4NDM=", "number": 631, "title": "Error: Failed loading extension \"pymdownx.arithmatex\". ", "user": {"login": "SteveVercellin", "id": 44086439, "node_id": "MDQ6VXNlcjQ0MDg2NDM5", "avatar_url": "https://avatars2.githubusercontent.com/u/44086439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SteveVercellin", "html_url": "https://github.com/SteveVercellin", "followers_url": "https://api.github.com/users/SteveVercellin/followers", "following_url": "https://api.github.com/users/SteveVercellin/following{/other_user}", "gists_url": "https://api.github.com/users/SteveVercellin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SteveVercellin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SteveVercellin/subscriptions", "organizations_url": "https://api.github.com/users/SteveVercellin/orgs", "repos_url": "https://api.github.com/users/SteveVercellin/repos", "events_url": "https://api.github.com/users/SteveVercellin/events{/privacy}", "received_events_url": "https://api.github.com/users/SteveVercellin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-23T11:24:58Z", "updated_at": "2019-08-01T15:46:23Z", "closed_at": "2019-08-01T15:45:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @facelessuser \r\n\r\nI'm using **pymdown-extensions** with **mkdocs** and **mkdocs-material**.\r\n\r\n I get this error when running `mkdocs serve`:\r\n\r\n> ERROR   -  Config value: 'markdown_extensions'. Error: Failed loading extension \"pymdownx.arithmatex\". \r\n\r\n\r\n### Here my configuration file:\r\n\r\n```yml\r\ntheme:\r\n  name: null\r\n  custom_dir: mkdocs-material/material\r\n  language: en\r\n  palette:\r\n    primary: 'blue'\r\n    accent: 'light blue'\r\n  font:\r\n    text: Titillium Web\r\n    code: Roboto Mono\r\n  logo: 'images/HRSlogo-rounded-base.png'\r\n  feature:\r\n    tabs: false\r\n\r\nextra_css:\r\n  -  stylesheets/extra.css\r\n  \r\nextra_javascript:\r\n  -  'javascripts/extra.js'\r\n  - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML'\r\n\r\nmarkdown_extensions:\r\n  - admonition\r\n  - codehilite\r\n  - footnotes\r\n  - meta\r\n  - pymdownx.arithmatex\r\n  - pymdownx.betterem:\r\n      smart_enable: all\r\n  - pymdownx.caret\r\n  - pymdownx.critic\r\n  - pymdownx.details\r\n  - pymdownx.inlinehilite\r\n  - pymdownx.magiclink\r\n  - pymdownx.mark\r\n  - pymdownx.smartsymbols\r\n  - pymdownx.superfences\r\n  - pymdownx.tasklist(smart_enable=all)\r\n  - pymdownx.tilde\r\n```\r\n\r\n### Versions:\r\n\r\n- Markdown Version: `__main__.py 3.1.1`\r\n- mkdocs-material `Version: 4.3.1`\r\n- Python `Version: 2.7.10`\r\n\r\n### Screenshot:\r\n\r\n<img width=\"882\" alt=\"Screen Shot 2019-07-23 at 11 01 11\" src=\"https://user-images.githubusercontent.com/44086439/61698928-37f4a880-ad3a-11e9-807e-acb027775fdd.png\">", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/630", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/630/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/630/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/630", "id": 471077345, "node_id": "MDU6SXNzdWU0NzEwNzczNDU=", "number": 630, "title": "Container-extension?", "user": {"login": "berot3", "id": 52616, "node_id": "MDQ6VXNlcjUyNjE2", "avatar_url": "https://avatars3.githubusercontent.com/u/52616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berot3", "html_url": "https://github.com/berot3", "followers_url": "https://api.github.com/users/berot3/followers", "following_url": "https://api.github.com/users/berot3/following{/other_user}", "gists_url": "https://api.github.com/users/berot3/gists{/gist_id}", "starred_url": "https://api.github.com/users/berot3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berot3/subscriptions", "organizations_url": "https://api.github.com/users/berot3/orgs", "repos_url": "https://api.github.com/users/berot3/repos", "events_url": "https://api.github.com/users/berot3/events{/privacy}", "received_events_url": "https://api.github.com/users/berot3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-22T12:50:37Z", "updated_at": "2019-07-22T17:43:43Z", "closed_at": "2019-07-22T17:43:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I am not sure if I am right here but I am looking for extension for mkdocs which allows \"containers\" like the one from [markdown-it-container](https://github.com/markdown-it/markdown-it-container).\r\n\r\n```\r\n::: warning\r\n*here be dragons*\r\n:::\r\n```\r\n\r\nDemo can be seen here: https://markdown-it.github.io/\r\n\r\nIf it is not done yet, maybe you can do it? :)\r\n\r\nUltimately I would like to use it in mkdocs-material! I think it would be a great addition.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/609", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/609/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/609/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/609", "id": 464814941, "node_id": "MDU6SXNzdWU0NjQ4MTQ5NDE=", "number": 609, "title": "How to set TOC links at left with chain icon?", "user": {"login": "soronpo", "id": 8167952, "node_id": "MDQ6VXNlcjgxNjc5NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8167952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soronpo", "html_url": "https://github.com/soronpo", "followers_url": "https://api.github.com/users/soronpo/followers", "following_url": "https://api.github.com/users/soronpo/following{/other_user}", "gists_url": "https://api.github.com/users/soronpo/gists{/gist_id}", "starred_url": "https://api.github.com/users/soronpo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soronpo/subscriptions", "organizations_url": "https://api.github.com/users/soronpo/orgs", "repos_url": "https://api.github.com/users/soronpo/repos", "events_url": "https://api.github.com/users/soronpo/events{/privacy}", "received_events_url": "https://api.github.com/users/soronpo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-06T04:05:19Z", "updated_at": "2019-07-06T09:49:44Z", "closed_at": "2019-07-06T09:49:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to find in the documentation and couldn't. The documentation's own TOC links are different than the default mkdocs-material. They appear on left and with the chain icon. How is this done?\r\n\r\n![image](https://user-images.githubusercontent.com/8167952/60751377-647b9700-9fbc-11e9-828f-80fc7415f379.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/583", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/583/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/583/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/583", "id": 451127800, "node_id": "MDU6SXNzdWU0NTExMjc4MDA=", "number": 583, "title": "MagicLink GitHub Enterprise Support ", "user": {"login": "nathanph", "id": 6075916, "node_id": "MDQ6VXNlcjYwNzU5MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6075916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanph", "html_url": "https://github.com/nathanph", "followers_url": "https://api.github.com/users/nathanph/followers", "following_url": "https://api.github.com/users/nathanph/following{/other_user}", "gists_url": "https://api.github.com/users/nathanph/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanph/subscriptions", "organizations_url": "https://api.github.com/users/nathanph/orgs", "repos_url": "https://api.github.com/users/nathanph/repos", "events_url": "https://api.github.com/users/nathanph/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanph/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351815, "node_id": "MDU6TGFiZWwxMTc2MzUxODE1", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20magiclink", "name": "C: magiclink", "color": "bfd4f2", "default": false, "description": "Related to the magiclink extension."}, {"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-06-01T21:46:21Z", "updated_at": "2020-02-20T14:10:40Z", "closed_at": "2020-02-20T14:10:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Request\r\n\r\nI'd like to be able to reference GitHub Enterprise repositories in a similar fashion to how one would reference GitHub repositories. The same might as well work for GitLab and BitBucket.\r\n\r\n## Usage\r\n\r\nI want to be able to define custom providers, e.g, `github`, `pymdownx`, and `mirror` which could be referenced via `@github`, `@pymdownx`, or `@mirror`.\r\n\r\nSo if I did something like `@mirror` I would expect a link something like this to be generated `[mirror/pymdown-extensions](https://github.enterprise.com/mirror/pymdown-extensions)`.\r\n\r\nAnd if I set the default provider to `pymdownx` and did `#1` I would get `[facelessuser/pymdown-extensions](https://github.com/facelessuser/pymdown-extensions/issues/1)`.\r\n\r\n# Proposal\r\n\r\n1. Allow users to pass in options to define custom providers.\r\n2. Redefine the current model of a `provider` as more of a template which reflects how data should be parsed and represented.\r\n\r\n## Identified Configuration Changes\r\n\r\nI think practically what that would mean is changing the configuration options to look something like this:\r\n\r\n```yaml\r\n# This is the default provider to use.\r\nprovider: pymdownx\r\n\r\n# This is a collection of providers you provide.\r\nproviders:\r\n  # This is the github provider, I'm listing it explicitly as an example\r\n  # but it should exist by default. The same is true for gitlab and bitbucket.\r\n  # Using an identical name would merge properties. \r\n  - name: GitHub\r\n    provider: github\r\n    url: https://github.com\r\n  \r\n  # This is this repository!\r\n  - name: Python Markdown Extensions\r\n    provider: pymdownx\r\n    template: github\r\n    user: facelessuser\r\n    repo: pymdown-extensions \r\n\r\n  # This is a mirror of pymdownx hosted by enterprise.com.\r\n  - name: A Python Markdown Extensions Mirror\r\n    template: pymdownx\r\n    url: https://github.enterprise.com/[maybe_some_path?]\r\n    user: mirror\r\n```\r\n\r\n## Identified Code Changes\r\n\r\nThere's a few code changes I've immediately identified and considered in order to support this request.\r\nI think most of these changes will revolve around the way the regular expressions are defined currently.\r\n\r\n### `PROVIDER_INFO`\r\n\r\nThe current `PROVIDER_INFO` info should be composed of just shape information.\r\n\r\n```py\r\nPROVIDER_INFO = {\r\n    \"gitlab\": {\r\n        \"provider\": \"GitLab\",\r\n        \"url\": \"https://gitlab.com\",\r\n        \"user_pattern\": RE_GITLAB_USER,\r\n        \"issue\": \"%s/%s/issues/%s\",\r\n        \"pull\": \"%s/%s/merge_requests/%s\",\r\n        \"commit\": \"%s/%s/commit/%s\",\r\n        \"compare\": \"%s/%s/compare/%s...%s\",\r\n        \"hash_size\": 8\r\n    },\r\n    \"bitbucket\": {\r\n        \"provider\": \"Bitbucket\",\r\n        \"url\": \"https://bitbucket.org\",\r\n        \"user_pattern\": RE_BITBUCKET_USER,\r\n        \"issue\": \"%s/%s/issues/%s\",\r\n        \"pull\": \"%s/%s/pull-requests/%s\",\r\n        \"commit\": \"%s/%s/commits/commit/%s\",\r\n        \"compare\": \"%s/%s/branches/commits/%s..%s#diff\",\r\n        \"hash_size\": 7\r\n    },\r\n    \"github\": {\r\n        \"provider\": \"GitHub\",\r\n        \"url\": \"https://github.com\",\r\n        \"user_pattern\": RE_GITHUB_USER,\r\n        \"issue\": \"%s/%s/issues/%s\",\r\n        \"pull\": \"%s/%s/pull/%s\",\r\n        \"commit\": \"%s/%s/commit/%s\",\r\n        \"compare\": \"%s/%s/compare/%s...%s\",\r\n        \"hash_size\": 7\r\n    }\r\n}\r\n```\r\n\r\n_Note: I'm ignoring Twitter here because I haven't really put any thought into that._\r\n\r\nHonestly, you might even be able to keep the `PROVIDER_INFO` the way it is. Whenever a new provider is defined you can just clone the `provider` it's based off of, replace anything that has been overridden (the `url` and `provider` properties come to mind), then loop over each of the properties replacing the original `url` part with whatever `url` the user provided. In this way you could even extend non-default providers.\r\n\r\n### `RE_REPO_LINK_EXPRESSION`\r\n\r\nCertainly the compiled `RE_REPO_LINK_EXPRESSION` would have to change to support additional URLs. Probably just build the string up on initialization and then compile it once all of the providers have been processed.\r\n\r\n## Comments\r\n\r\nI started to do this myself to make a PR but it turned out to be a bit more work than I realized it would be. If this is something you'd be interested in implementing let me know. I've at least thought about what the design would look like a bit.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/540", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/540/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/540/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/540", "id": 425518247, "node_id": "MDU6SXNzdWU0MjU1MTgyNDc=", "number": 540, "title": "Fix Python Markdown 3.1 test failures", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351848, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ4", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20confirmed", "name": "S: confirmed", "color": "beed6d", "default": false, "description": "Confirmed bug report or approved feature request."}, {"id": 149995941, "node_id": "MDU6TGFiZWwxNDk5OTU5NDE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20bug", "name": "T: bug", "color": "fc544e", "default": false, "description": "Bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-26T16:20:50Z", "updated_at": "2019-03-27T02:23:40Z", "closed_at": "2019-03-27T02:23:40Z", "author_association": "OWNER", "active_lock_reason": null, "body": "From what I can tell, it is just changes related to new attributes being added to footnotes etc. There isn't anything to *fix* per se as much as we just need to update the expected reference to match what we actually get.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/530", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/530/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/530/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/530", "id": 420145996, "node_id": "MDU6SXNzdWU0MjAxNDU5OTY=", "number": 530, "title": "Snippets are not reliably rendering", "user": {"login": "tonglil", "id": 3250776, "node_id": "MDQ6VXNlcjMyNTA3NzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3250776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonglil", "html_url": "https://github.com/tonglil", "followers_url": "https://api.github.com/users/tonglil/followers", "following_url": "https://api.github.com/users/tonglil/following{/other_user}", "gists_url": "https://api.github.com/users/tonglil/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonglil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonglil/subscriptions", "organizations_url": "https://api.github.com/users/tonglil/orgs", "repos_url": "https://api.github.com/users/tonglil/repos", "events_url": "https://api.github.com/users/tonglil/events{/privacy}", "received_events_url": "https://api.github.com/users/tonglil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351840, "node_id": "MDU6TGFiZWwxMTc2MzUxODQw", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20snippets", "name": "C: snippets", "color": "bfd4f2", "default": false, "description": "Related to the snippets extension."}, {"id": 1176351848, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ4", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20confirmed", "name": "S: confirmed", "color": "beed6d", "default": false, "description": "Confirmed bug report or approved feature request."}, {"id": 149995941, "node_id": "MDU6TGFiZWwxNDk5OTU5NDE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20bug", "name": "T: bug", "color": "fc544e", "default": false, "description": "Bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-12T18:38:27Z", "updated_at": "2019-03-13T19:32:50Z", "closed_at": "2019-03-13T14:09:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n\r\nUnable to get Snippets to include a file consistently after using it in a tabbed superfence.\r\n\r\nMy guess is some issue w/ superfences?\r\n\r\nNothing in usage notes mentions snippets + superfences incompatibility? https://facelessuser.github.io/pymdown-extensions/usage_notes/\r\n\r\n### Expected behavior\r\n\r\nTrying to render README.md:\r\n\r\n<pre>\r\n\r\n# Test\r\n\r\n## Section 1\r\n\r\nWhy do these non-inline sections work (but same code does not work below)?\r\n\r\n```yaml\r\n--8<--\r\nsnip/test.yaml\r\n--8<--\r\n```\r\n\r\n```yaml\r\n--8<--\r\nsnip/test.yaml\r\n--8<--\r\n```\r\n\r\nComplex inline tabbed superfences work:\r\n\r\n```yaml tab=\"Ok\"\r\n--8<-- \"snip/test.yaml\"\r\n```\r\n\r\n```yaml tab=\"Ok 2\"\r\n--8<-- \"snip/test.yaml\"\r\n```\r\n\r\n```yaml tab=\"Same non-inlined code from above is not ok\"\r\n--8<--\r\nsnip/test.yaml\r\n--8<--\r\n```\r\n\r\nNow it doesn't work?\r\n\r\n--8<--\r\n\r\nsnip/test.yaml\r\n\r\n--8<--\r\n\r\n## Ok section\r\n\r\nSeems like only inline works..\r\n\r\n```yaml\r\n--8<-- \"snip/test.yaml\"\r\n```\r\n\r\n## Broken section\r\n\r\nThis does not work (even though the same code worked above)?\r\n\r\n```yaml\r\n--8<--\r\nsnip/test.yaml\r\n--8<--\r\n```\r\n\r\nStill invisible:\r\n\r\n--8<--\r\nsnip/test.yaml\r\n--8<--\r\n\r\nStill broken:\r\n\r\n```yaml\r\n\r\n--8<--\r\nsnip/test.yaml\r\n--8<--\r\n\r\n```\r\n\r\n</pre>\r\n\r\nsnip/test.yaml:\r\n\r\n<pre>\r\n# Test:\r\n---\r\nexample: file\r\n</pre>\r\n\r\n\r\n\r\n### Actual behavior\r\n\r\n<img width=\"926\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3250776/54226257-abe49180-44ba-11e9-9584-400d128ac147.png\">\r\n\r\n### Package versions\r\n\r\n`squidfunk/mkdocs-material:latest` pulled today.\r\n\r\n### Project configuration\r\n\r\n``` yaml\r\n...\r\n# Extensions\r\nmarkdown_extensions:\r\n  - admonition\r\n  - codehilite:\r\n      guess_lang: false\r\n  - toc:\r\n      permalink: true\r\n  - pymdownx.arithmatex\r\n  - pymdownx.betterem:\r\n      smart_enable: all\r\n  - pymdownx.caret\r\n  - pymdownx.critic\r\n  - pymdownx.details\r\n  - pymdownx.emoji:\r\n      emoji_generator: !!python/name:pymdownx.emoji.to_svg\r\n  - pymdownx.inlinehilite\r\n  - pymdownx.magiclink\r\n  - pymdownx.mark\r\n  - pymdownx.smartsymbols\r\n  - pymdownx.snippets:\r\n      check_paths: true\r\n  - pymdownx.superfences\r\n  - pymdownx.tasklist:\r\n      custom_checkbox: true\r\n  - pymdownx.tilde\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/529", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/529/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/529/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/529", "id": 419221407, "node_id": "MDU6SXNzdWU0MTkyMjE0MDc=", "number": 529, "title": "snippets not evaluating markdown extra data", "user": {"login": "perezd", "id": 20598, "node_id": "MDQ6VXNlcjIwNTk4", "avatar_url": "https://avatars2.githubusercontent.com/u/20598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perezd", "html_url": "https://github.com/perezd", "followers_url": "https://api.github.com/users/perezd/followers", "following_url": "https://api.github.com/users/perezd/following{/other_user}", "gists_url": "https://api.github.com/users/perezd/gists{/gist_id}", "starred_url": "https://api.github.com/users/perezd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perezd/subscriptions", "organizations_url": "https://api.github.com/users/perezd/orgs", "repos_url": "https://api.github.com/users/perezd/repos", "events_url": "https://api.github.com/users/perezd/events{/privacy}", "received_events_url": "https://api.github.com/users/perezd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-03-10T19:18:36Z", "updated_at": "2019-03-13T02:47:40Z", "closed_at": "2019-03-13T01:30:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using mkdocs-markdownextradata-plugin==0.0.5 to reference extra values in my markdown. When I use snippets to include another file I'm noticing that the evaluation of my extra data stopped working as intended. Any ideas on how to workaround?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/524", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/524/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/524/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/524", "id": 417656224, "node_id": "MDU6SXNzdWU0MTc2NTYyMjQ=", "number": 524, "title": "Consider an extension that allows custom block level tags to be configured in mkdocs.yml", "user": {"login": "perezd", "id": 20598, "node_id": "MDQ6VXNlcjIwNTk4", "avatar_url": "https://avatars2.githubusercontent.com/u/20598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perezd", "html_url": "https://github.com/perezd", "followers_url": "https://api.github.com/users/perezd/followers", "following_url": "https://api.github.com/users/perezd/following{/other_user}", "gists_url": "https://api.github.com/users/perezd/gists{/gist_id}", "starred_url": "https://api.github.com/users/perezd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perezd/subscriptions", "organizations_url": "https://api.github.com/users/perezd/orgs", "repos_url": "https://api.github.com/users/perezd/repos", "events_url": "https://api.github.com/users/perezd/events{/privacy}", "received_events_url": "https://api.github.com/users/perezd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-06T07:14:44Z", "updated_at": "2019-03-10T19:17:19Z", "closed_at": "2019-03-10T19:17:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given this functionality: https://github.com/Python-Markdown/markdown/issues/575\r\nIt'd be really nice to be able to build themes which can use custom block level tags. For instance, I'm trying to use this: https://github.com/rsms/raster\r\n\r\nIt defines custom tags `grid` and `c` and I'd like to declare them as block level so I can apply `markdown=1` to them. \r\n\r\nWhat do you think about this proposal?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/432", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/432/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/432/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/432", "id": 377171362, "node_id": "MDU6SXNzdWUzNzcxNzEzNjI=", "number": 432, "title": "wrong result in arithmatex", "user": {"login": "Ir1d", "id": 10709657, "node_id": "MDQ6VXNlcjEwNzA5NjU3", "avatar_url": "https://avatars0.githubusercontent.com/u/10709657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ir1d", "html_url": "https://github.com/Ir1d", "followers_url": "https://api.github.com/users/Ir1d/followers", "following_url": "https://api.github.com/users/Ir1d/following{/other_user}", "gists_url": "https://api.github.com/users/Ir1d/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ir1d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ir1d/subscriptions", "organizations_url": "https://api.github.com/users/Ir1d/orgs", "repos_url": "https://api.github.com/users/Ir1d/repos", "events_url": "https://api.github.com/users/Ir1d/events{/privacy}", "received_events_url": "https://api.github.com/users/Ir1d/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-04T16:49:55Z", "updated_at": "2018-11-05T01:06:19Z", "closed_at": "2018-11-05T01:06:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I was using arithmatex in mkdocs.\r\n`$\\text{asdfasdf $a_i$}$` results in two parts, while this is expected:\r\n\r\n![image](https://user-images.githubusercontent.com/10709657/47967074-a999a300-e094-11e8-8060-7a1c563f2a0a.png)\r\n\r\nupd: using latest version, with mathjax set up:\r\n\r\n![image](https://user-images.githubusercontent.com/10709657/47967107-e4034000-e094-11e8-8d7c-d34f0d07e2fa.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/426", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/426/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/426/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/426", "id": 373587817, "node_id": "MDU6SXNzdWUzNzM1ODc4MTc=", "number": 426, "title": "New flake8 breaks everything again", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-24T17:13:28Z", "updated_at": "2018-10-25T19:44:35Z", "closed_at": "2018-10-25T19:44:35Z", "author_association": "OWNER", "active_lock_reason": null, "body": "So tests are failing for any new pull requests because flake8 ignores W504 and W503 by default. We override via the command line the ingore list.  Apparently they now have extend-ignore and ignore. Had we added to extend-ignore I guess we could have avoided this, but then we would have ignored more than we intended.  So, I'm just going to have to fix every one of my repos because of this new version \ud83d\ude12 .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/412", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/412/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/412/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/412", "id": 367798129, "node_id": "MDU6SXNzdWUzNjc3OTgxMjk=", "number": 412, "title": "Consider generating Twemoji shortnames from https://github.com/milesj/emojibase", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1176351795, "node_id": "MDU6TGFiZWwxMTc2MzUxNzk1", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/C:%20emoji", "name": "C: emoji", "color": "bfd4f2", "default": false, "description": "Related to the emoji extension."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-08T13:46:04Z", "updated_at": "2020-02-19T22:18:05Z", "closed_at": "2020-02-19T22:18:05Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Twemoji is currently getting all their shortnames from EmojiOne shortname list, because it was the best list we had, but Twemoji, historically, follows closer to the latest Unicode standard as updates are far more frequent than EmojiOne. EmojiBase may be a great way to generate shortname lists for Twemoji and separate that index from EmojiOne.  It is easier to keep a project like EmojiBase up to date  with frequent updates as their are no graphical resources that need to be created: it is just data files.\r\n\r\nI don't know if I will pull this into 6.0.0, but if it is relatively painless, maybe.  I'd like to make all big changes with the 6.0.0 release if possible.\r\n\r\n**NOTE**: We may not bother with variants that are specific to Twemoji but not in the standard, like skier colors.  I don't mind providing one off things like pirate flag and the Japanese building one (can't remember the name off the top of my head).\r\n\r\nAnyways, I'll probably look into it this week.  I hope to cut the 6.0.0 release this week.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/409", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/409/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/409/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/409", "id": 367563681, "node_id": "MDU6SXNzdWUzNjc1NjM2ODE=", "number": 409, "title": "Upgrade emojione and twemoji", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/17", "html_url": "https://github.com/facelessuser/pymdown-extensions/milestone/17", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/17/labels", "id": 3702578, "node_id": "MDk6TWlsZXN0b25lMzcwMjU3OA==", "number": 17, "title": "6.0.0", "description": null, "creator": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 12, "state": "closed", "created_at": "2018-10-01T16:07:15Z", "updated_at": "2020-08-11T06:36:59Z", "due_on": null, "closed_at": "2020-08-11T06:36:59Z"}, "comments": 0, "created_at": "2018-10-07T15:12:10Z", "updated_at": "2018-10-07T19:12:10Z", "closed_at": "2018-10-07T19:12:10Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/396", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/396/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/396/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/396", "id": 365068443, "node_id": "MDU6SXNzdWUzNjUwNjg0NDM=", "number": 396, "title": "Roadmap 6.0", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/17", "html_url": "https://github.com/facelessuser/pymdown-extensions/milestone/17", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/17/labels", "id": 3702578, "node_id": "MDk6TWlsZXN0b25lMzcwMjU3OA==", "number": 17, "title": "6.0.0", "description": null, "creator": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 12, "state": "closed", "created_at": "2018-10-01T16:07:15Z", "updated_at": "2020-08-11T06:36:59Z", "due_on": null, "closed_at": "2020-08-11T06:36:59Z"}, "comments": 3, "created_at": "2018-09-28T23:06:54Z", "updated_at": "2018-10-03T15:36:15Z", "closed_at": "2018-10-03T15:36:15Z", "author_association": "OWNER", "active_lock_reason": null, "body": "There will be breaking changes, but hopefully only to SuperFences custom format.\r\n\r\n- [x] Superfences will have an updated format that always takes options and the md object. Passing in the md object (new), will give access to markdown related functions such as `md.htmlStash` which can be useful, or even `md.meta` if your solution requires meta data.  It's worth just breaking things for a 6.0 release so we don't have more \"special case\" code like we do with \"options\". To implement this in a backwards compatible way, we'd need to require some kind of additional option in a custom fence to say pass me the markdown object.\r\n\r\n- [x] Since we are breaking things \ud83d\ude04, SuperFences will no longer include `flow` and `sequence` by default.  This is a niche setup. Not everyone using SuperFences is using the UML feature, and not everyone using UML is using it like the default is.  Maybe they are using mermaid.  So by default, custom fences will be empty.\r\n\r\n- [x] InlineHilite will allow custom inline spans.  The work for this is already mostly done, but I have some tweaks.  I want to add access to the md object just like SuperFences has.\r\n\r\n- [x] Fully compliant with the new methodology of Python Markdown 3.  Take advantage of the new stuff, and move away from the deprecated.  Require Python Markdown 3 by default.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/392", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/392/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/392/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/392", "id": 364641268, "node_id": "MDU6SXNzdWUzNjQ2NDEyNjg=", "number": 392, "title": "PathConverter: Bad relative link to absolute on windows", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149995941, "node_id": "MDU6TGFiZWwxNDk5OTU5NDE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20bug", "name": "T: bug", "color": "fc544e", "default": false, "description": "Bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/17", "html_url": "https://github.com/facelessuser/pymdown-extensions/milestone/17", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/17/labels", "id": 3702578, "node_id": "MDk6TWlsZXN0b25lMzcwMjU3OA==", "number": 17, "title": "6.0.0", "description": null, "creator": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 12, "state": "closed", "created_at": "2018-10-01T16:07:15Z", "updated_at": "2020-08-11T06:36:59Z", "due_on": null, "closed_at": "2020-08-11T06:36:59Z"}, "comments": 0, "created_at": "2018-09-27T20:29:25Z", "updated_at": "2018-10-04T00:18:20Z", "closed_at": "2018-10-04T00:18:20Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Windows seems to handle the case with a relative path of `some/path.img` and some absolute path `c:\\file_path` and will convert it to `///C://file_path/some/path.img`.  While browsers will generally handle this fine, I currently have a project choking on this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/386", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/386/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/386/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/386", "id": 361912137, "node_id": "MDU6SXNzdWUzNjE5MTIxMzc=", "number": 386, "title": "Possibly add options to InlineHilite's new custom inline", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151745391, "node_id": "MDU6TGFiZWwxNTE3NDUzOTE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/P:%20maybe", "name": "P: maybe", "color": "dddddd", "default": false, "description": "Pending approval of low priority request."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-19T20:20:54Z", "updated_at": "2018-09-29T17:54:42Z", "closed_at": "2018-09-29T17:54:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "InlineHilite allows you to specify languages with ``` `#!lang some code` ``` (space must follow the language specifier).  In order to escape, you just have to put a space between the backticks and the language specifier ``` ` #!lang some code` ```.\r\n\r\nWith the new custom inline feature, you can create your own custom language handler, and then do something like ``` `#customlang some code` ```.  SuperFences has a similar feature but allows you to specify options like so: `` ```lang option=\"1\"``` `` or `` ```lang{option=\"1\"```} ``.  In InlineHilite, SuperFences' notation of specifying options in the first example will never work as InlineHilite won't be able to detect when the option is supposed to start and end, but the second option could work assuming the braces are mandatory, and a space is not allowed between the language and the brace (SuperFences allows a space between the two).\r\n\r\nSuperFences always used options mainly for things related to line numbers, line highlighting, etc. Recently it added tab support via options as well, but none of these features translate to InlineHilite. But with custom inline spans, maybe this would be desired?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/362", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/362/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/362/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/362", "id": 351806273, "node_id": "MDU6SXNzdWUzNTE4MDYyNzM=", "number": 362, "title": "[Feature Request] MagicLink to repository files", "user": {"login": "jdumas", "id": 578702, "node_id": "MDQ6VXNlcjU3ODcwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/578702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdumas", "html_url": "https://github.com/jdumas", "followers_url": "https://api.github.com/users/jdumas/followers", "following_url": "https://api.github.com/users/jdumas/following{/other_user}", "gists_url": "https://api.github.com/users/jdumas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdumas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdumas/subscriptions", "organizations_url": "https://api.github.com/users/jdumas/orgs", "repos_url": "https://api.github.com/users/jdumas/repos", "events_url": "https://api.github.com/users/jdumas/events{/privacy}", "received_events_url": "https://api.github.com/users/jdumas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-18T09:27:07Z", "updated_at": "2018-10-07T14:30:56Z", "closed_at": "2018-10-07T14:30:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nI was wondering if it'd be possible to link to specific files in a repository tree (e.g. on github). Either the latest version of the file (master/...), or a specific commit (181c06d1f1...). Right now it doesn't seem that MagicLink supports this kind of operation? Would it be easy to add?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/358", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/358/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/358/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/358", "id": 350144849, "node_id": "MDU6SXNzdWUzNTAxNDQ4NDk=", "number": 358, "title": "Fix build issues", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149995941, "node_id": "MDU6TGFiZWwxNDk5OTU5NDE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20bug", "name": "T: bug", "color": "fc544e", "default": false, "description": "Bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/16", "html_url": "https://github.com/facelessuser/pymdown-extensions/milestone/16", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/16/labels", "id": 3580725, "node_id": "MDk6TWlsZXN0b25lMzU4MDcyNQ==", "number": 16, "title": "5.0.0", "description": null, "creator": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-08-18T15:30:42Z", "updated_at": "2018-10-01T16:09:11Z", "due_on": null, "closed_at": "2018-10-01T16:09:11Z"}, "comments": 1, "created_at": "2018-08-13T18:38:31Z", "updated_at": "2018-08-18T15:30:42Z", "closed_at": "2018-08-14T02:50:00Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Looks like we need to force a specific node version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/351", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/351/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/351/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/351", "id": 347251874, "node_id": "MDU6SXNzdWUzNDcyNTE4NzQ=", "number": 351, "title": "Python Markdown 3 support", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/17", "html_url": "https://github.com/facelessuser/pymdown-extensions/milestone/17", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/17/labels", "id": 3702578, "node_id": "MDk6TWlsZXN0b25lMzcwMjU3OA==", "number": 17, "title": "6.0.0", "description": null, "creator": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 12, "state": "closed", "created_at": "2018-10-01T16:07:15Z", "updated_at": "2020-08-11T06:36:59Z", "due_on": null, "closed_at": "2020-08-11T06:36:59Z"}, "comments": 2, "created_at": "2018-08-03T04:04:31Z", "updated_at": "2018-10-07T15:06:26Z", "closed_at": "2018-10-07T15:06:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Work towards eliminating all deprecations introduced in Python Markdown 3 and take advantage of new methodologies.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/349", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/349/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/349/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/349", "id": 346770529, "node_id": "MDU6SXNzdWUzNDY3NzA1Mjk=", "number": 349, "title": "[Superfences] Pass fenced code block config (hl_lines, linenums, ...) to custom formatter func", "user": {"login": "dbader", "id": 306708, "node_id": "MDQ6VXNlcjMwNjcwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/306708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbader", "html_url": "https://github.com/dbader", "followers_url": "https://api.github.com/users/dbader/followers", "following_url": "https://api.github.com/users/dbader/following{/other_user}", "gists_url": "https://api.github.com/users/dbader/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbader/subscriptions", "organizations_url": "https://api.github.com/users/dbader/orgs", "repos_url": "https://api.github.com/users/dbader/repos", "events_url": "https://api.github.com/users/dbader/events{/privacy}", "received_events_url": "https://api.github.com/users/dbader/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/16", "html_url": "https://github.com/facelessuser/pymdown-extensions/milestone/16", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/16/labels", "id": 3580725, "node_id": "MDk6TWlsZXN0b25lMzU4MDcyNQ==", "number": 16, "title": "5.0.0", "description": null, "creator": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-08-18T15:30:42Z", "updated_at": "2018-10-01T16:09:11Z", "due_on": null, "closed_at": "2018-10-01T16:09:11Z"}, "comments": 13, "created_at": "2018-08-01T21:10:56Z", "updated_at": "2018-08-18T15:31:05Z", "closed_at": "2018-08-06T03:00:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @facelessuser, I absolutely love your MD extensions. They're powering large parts of realpython.com and your documentation has been a joy to work with \ud83d\ude03 \r\n\r\nI'm using the custom formatter functions in `SuperFences` to customize rendering and syntax highlighting. I'm looking to find a way to access fenced code block config like `hl_lines` and `linenums` from the formatter function.\r\n\r\nAs best as I can tell, a small change in the custom formatter function API to start passing through those config values would achieve this quite easily:\r\n\r\nhttps://github.com/facelessuser/pymdown-extensions/blob/881e852ecfd06449fe608932c3abd4deffe2005e/pymdownx/superfences.py#L370\r\n\r\n```python\r\n    def process_nested_block(self, ws, content, start, end):\r\n        \"\"\"Process the contents of the nested block.\"\"\"\r\n\r\n        self.last = ws + self.normalize_ws(content)\r\n        code = None\r\n        for entry in reversed(self.extension.superfences):\r\n            if entry[\"test\"](self.lang):\r\n                #  \r\n                # TODO: Pass extra data like self.hl_lines to entry['formatter']:\r\n                # \r\n                code = entry[\"formatter\"](self.rebuild_block(self.code), self.lang)\r\n                break\r\n```\r\n\r\nDo you think this is the best way to go about it or should I look elsewhere? Happy to put together a PR if you think the approach I suggested makes sense.\r\n\r\nThanks again!\r\n\r\n\u2014 Dan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/330", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/330/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/330/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/330", "id": 338295215, "node_id": "MDU6SXNzdWUzMzgyOTUyMTU=", "number": 330, "title": "Officially test Py37", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-04T14:22:21Z", "updated_at": "2018-07-20T01:26:24Z", "closed_at": "2018-07-20T01:26:24Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently, PyYaml is dragging their feet with Python 3.7 support. Not complaining as I know how that is, but I cannot currently test Python3.7 without PyYaml support.\r\n\r\nI'm moving towards a system that removes the dependency on PyYaml though and focus mainly on `unittest` lib. Related to #324.  While I'm hesitant to adopt their `unittest` lib as I'm afraid it may change on me in the future, I plan to do something similar.  If PyYaml gets released with Python3.7 support before I finish, then I'll release the updated testing early, but I still plan to phase out dependency on PyYaml regardless.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/328", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/328/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/328/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/328", "id": 338046661, "node_id": "MDU6SXNzdWUzMzgwNDY2NjE=", "number": 328, "title": "SuperFences: Preserve Tabs and \\r", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149995941, "node_id": "MDU6TGFiZWwxNDk5OTU5NDE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20bug", "name": "T: bug", "color": "fc544e", "default": false, "description": "Bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-03T20:39:04Z", "updated_at": "2018-07-04T00:08:31Z", "closed_at": "2018-07-04T00:08:31Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The preserve tabs feature is useful for preserving the tab character in code blocks, but it makes fences get processed before whitespace normalization.  This means before `\\r\\n` is transformed to `\\n`.  On a Windows system, this can cause an issue as the content is scanned assuming normalization. We should strip trailing '\\r' from lines to be safe.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/327", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/327/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/327/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/327", "id": 337701715, "node_id": "MDU6SXNzdWUzMzc3MDE3MTU=", "number": 327, "title": "Fix links to Python Markdown documentation", "user": {"login": "kylebarron", "id": 15164633, "node_id": "MDQ6VXNlcjE1MTY0NjMz", "avatar_url": "https://avatars3.githubusercontent.com/u/15164633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylebarron", "html_url": "https://github.com/kylebarron", "followers_url": "https://api.github.com/users/kylebarron/followers", "following_url": "https://api.github.com/users/kylebarron/following{/other_user}", "gists_url": "https://api.github.com/users/kylebarron/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylebarron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylebarron/subscriptions", "organizations_url": "https://api.github.com/users/kylebarron/orgs", "repos_url": "https://api.github.com/users/kylebarron/repos", "events_url": "https://api.github.com/users/kylebarron/events{/privacy}", "received_events_url": "https://api.github.com/users/kylebarron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-03T00:03:41Z", "updated_at": "2018-07-20T01:26:08Z", "closed_at": "2018-07-20T01:26:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "In several places, such as [this page](https://facelessuser.github.io/pymdown-extensions/extensions/extra/) there are links to the Python Markdown documentation, i.e. \r\n```\r\nhttps://pythonhosted.org/Markdown/extensions/footnotes.html\r\n```\r\n\r\nThe Python Markdown documentation sometime switched websites and is now hosted at  python-markdown.github.io. So these links should be switched to i.e.:\r\n```\r\nhttps://python-markdown.github.io/extensions/footnotes/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/324", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/324/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/324/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/324", "id": 336566546, "node_id": "MDU6SXNzdWUzMzY1NjY1NDY=", "number": 324, "title": "Look into using Python Markdown test framework", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-28T10:37:10Z", "updated_at": "2018-08-04T17:32:23Z", "closed_at": "2018-08-04T17:32:23Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/318", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/318/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/318/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/318", "id": 335012140, "node_id": "MDU6SXNzdWUzMzUwMTIxNDA=", "number": 318, "title": "[Feature Request] - Better Table of Content [TOC] Implementation - Let the User Set Which Header Level Are Included", "user": {"login": "RoyiAvital", "id": 7347975, "node_id": "MDQ6VXNlcjczNDc5NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7347975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoyiAvital", "html_url": "https://github.com/RoyiAvital", "followers_url": "https://api.github.com/users/RoyiAvital/followers", "following_url": "https://api.github.com/users/RoyiAvital/following{/other_user}", "gists_url": "https://api.github.com/users/RoyiAvital/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoyiAvital/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoyiAvital/subscriptions", "organizations_url": "https://api.github.com/users/RoyiAvital/orgs", "repos_url": "https://api.github.com/users/RoyiAvital/repos", "events_url": "https://api.github.com/users/RoyiAvital/events{/privacy}", "received_events_url": "https://api.github.com/users/RoyiAvital/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151745391, "node_id": "MDU6TGFiZWwxNTE3NDUzOTE=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/P:%20maybe", "name": "P: maybe", "color": "dddddd", "default": false, "description": "Pending approval of low priority request."}, {"id": 1176351849, "node_id": "MDU6TGFiZWwxMTc2MzUxODQ5", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/S:%20wontfix", "name": "S: wontfix", "color": "f7c7be", "default": false, "description": "The issue will not be fixed for the stated reasons."}, {"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-22T20:39:31Z", "updated_at": "2019-11-22T14:16:49Z", "closed_at": "2019-11-22T14:16:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nThe current Python Markdown supports Table of Content generation as a built in feature.\r\nYet it is very limited in its customization.\r\n\r\nI would like have a different TOC Plug In which enables one more feature - Let the user have the choice which header levels will get into the Table of Content.\r\n\r\nFor instance have a variable named `activeHeaderLevels` which is a list.  \r\nFor `activeHeaderLevels = {2, 3, 5}` only headers of level 2, 3, and 5 (Generated by `##`, `###` and `#####`) will be in the TOC while other will be ignored.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/314", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/314/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/314/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/314", "id": 333028101, "node_id": "MDU6SXNzdWUzMzMwMjgxMDE=", "number": 314, "title": "Highlight/SuperFences: Line number enhancements", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/16", "html_url": "https://github.com/facelessuser/pymdown-extensions/milestone/16", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/milestones/16/labels", "id": 3580725, "node_id": "MDk6TWlsZXN0b25lMzU4MDcyNQ==", "number": 16, "title": "5.0.0", "description": null, "creator": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2018-08-18T15:30:42Z", "updated_at": "2018-10-01T16:09:11Z", "due_on": null, "closed_at": "2018-10-01T16:09:11Z"}, "comments": 1, "created_at": "2018-06-17T01:48:23Z", "updated_at": "2018-08-18T15:31:37Z", "closed_at": "2018-08-18T03:14:24Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I've been playing with some line number related enhancements/fixes.  Not sure how many of these are going to make it in, but these are the changes being considered:\r\n\r\n- [x] Fix issues with Pygments step.  I have a local fix via Highlight, but really this fix should get pushed into Pygments and be fixed there, but we could do this locally as a stop gap solution until I get a chance to pull request this in Pygments and wait for it to get released.\r\n\r\n- [x] Allow the \"special\" line number feature to be set globally.  This is helpful if you are someone that wants to use \"special\" to do something like style every other line number for aesthetics in all code blocks that show line numbers.  We'd still allow a per block override, but this may make things easier on people.\r\n\r\n- [x] Allow specify table style line numbers or Pygments inline.  Some people prefer inline. But let's be honest, inline kind of sucks when it comes to copy/paste, but I've devised an inline methodology that actually avoids copy/paste issues, so maybe allow table, inline, and advanced inline (some additional CSS required).\r\n\r\n    You could even potentially pin the line numbers with CSS `position: sticky`, but right now, support for that is all over the place for that.  Tested in Chrome and noticed different behavior on Windows vs macOS. So even Chrome can't get its support consistent right now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/313", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/313/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/313/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/313", "id": 332658248, "node_id": "MDU6SXNzdWUzMzI2NTgyNDg=", "number": 313, "title": "Is it possible to have processed markdown content inside of tabbed code blocks?", "user": {"login": "markpiller", "id": 120929, "node_id": "MDQ6VXNlcjEyMDkyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/120929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markpiller", "html_url": "https://github.com/markpiller", "followers_url": "https://api.github.com/users/markpiller/followers", "following_url": "https://api.github.com/users/markpiller/following{/other_user}", "gists_url": "https://api.github.com/users/markpiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/markpiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markpiller/subscriptions", "organizations_url": "https://api.github.com/users/markpiller/orgs", "repos_url": "https://api.github.com/users/markpiller/repos", "events_url": "https://api.github.com/users/markpiller/events{/privacy}", "received_events_url": "https://api.github.com/users/markpiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-15T06:19:03Z", "updated_at": "2018-06-15T07:54:47Z", "closed_at": "2018-06-15T07:54:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not an issue, but more of a question. Tabbed code blocks work great for us except for the scenario where a tab content is more than just code and includes other markdown content. We see that in those cases, the markdown content is not getting processed and shows up as-is in a `<pre>` element.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/311", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/311/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/311/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/311", "id": 331601464, "node_id": "MDU6SXNzdWUzMzE2MDE0NjQ=", "number": 311, "title": "Doc updates", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-12T14:01:39Z", "updated_at": "2018-06-14T03:42:22Z", "closed_at": "2018-06-14T03:42:22Z", "author_association": "OWNER", "active_lock_reason": null, "body": "- [x] Be more clear on how progressbars work with `attr_list`.\r\n- [x] Be more clear about Pygment's quirk with line starting line number and step. Quirk being that if you use step and the starting line does not fall on step, that some rendering issues, mainly line number alignment, will be off.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/310", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/310/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/310/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/310", "id": 331271658, "node_id": "MDU6SXNzdWUzMzEyNzE2NTg=", "number": 310, "title": "[Q] Critics has no any background color  when using with Mkdocs?", "user": {"login": "Guang1234567", "id": 8240718, "node_id": "MDQ6VXNlcjgyNDA3MTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8240718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Guang1234567", "html_url": "https://github.com/Guang1234567", "followers_url": "https://api.github.com/users/Guang1234567/followers", "following_url": "https://api.github.com/users/Guang1234567/following{/other_user}", "gists_url": "https://api.github.com/users/Guang1234567/gists{/gist_id}", "starred_url": "https://api.github.com/users/Guang1234567/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Guang1234567/subscriptions", "organizations_url": "https://api.github.com/users/Guang1234567/orgs", "repos_url": "https://api.github.com/users/Guang1234567/repos", "events_url": "https://api.github.com/users/Guang1234567/events{/privacy}", "received_events_url": "https://api.github.com/users/Guang1234567/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-11T17:01:44Z", "updated_at": "2018-06-12T13:58:43Z", "closed_at": "2018-06-12T13:58:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello dev:\r\n\r\nI use Critics into Mkdocs (default theme), but no green background when i write\r\n\r\n```\r\n {++insert one++} \r\n```\r\n\r\nin my markdown file?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/309", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/309/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/309/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/309", "id": 331170579, "node_id": "MDU6SXNzdWUzMzExNzA1Nzk=", "number": 309, "title": "A problem of SuperFences Line Number extension.", "user": {"login": "LennonChin", "id": 31773746, "node_id": "MDQ6VXNlcjMxNzczNzQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/31773746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LennonChin", "html_url": "https://github.com/LennonChin", "followers_url": "https://api.github.com/users/LennonChin/followers", "following_url": "https://api.github.com/users/LennonChin/following{/other_user}", "gists_url": "https://api.github.com/users/LennonChin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LennonChin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LennonChin/subscriptions", "organizations_url": "https://api.github.com/users/LennonChin/orgs", "repos_url": "https://api.github.com/users/LennonChin/repos", "events_url": "https://api.github.com/users/LennonChin/events{/privacy}", "received_events_url": "https://api.github.com/users/LennonChin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-06-11T12:35:43Z", "updated_at": "2018-08-02T23:12:36Z", "closed_at": "2018-06-12T13:57:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nPrefect Extensions, Thank you.\r\n\r\nBut I find some problem when I use SuperFences extension.\r\n\r\nLine number extension rendered result implemented by `table` Tag, but this way has a problem, if I want to word-break a line when it is to long, then the line numbers will not enough to satisfy code lines, you can see this problem at this page [https://blog.coderap.com/article/15](https://blog.coderap.com/article/15), at the bottom of first code block.\r\n\r\nAnother way to implement line number is use `ul` and `li` tags, it seems that this way cannot provide line start and line step.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/306", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/306/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/306/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/306", "id": 330765503, "node_id": "MDU6SXNzdWUzMzA3NjU1MDM=", "number": 306, "title": "Refresh look of HTML output", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-08T18:49:44Z", "updated_at": "2018-06-09T00:30:28Z", "closed_at": "2018-06-09T00:30:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Probably want to update the HTML output to look better. Probably post 4.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/303", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/303/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/303/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/303", "id": 328762189, "node_id": "MDU6SXNzdWUzMjg3NjIxODk=", "number": 303, "title": "improper latex brace handling in Arithmatex", "user": {"login": "grgbnc", "id": 32254611, "node_id": "MDQ6VXNlcjMyMjU0NjEx", "avatar_url": "https://avatars2.githubusercontent.com/u/32254611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grgbnc", "html_url": "https://github.com/grgbnc", "followers_url": "https://api.github.com/users/grgbnc/followers", "following_url": "https://api.github.com/users/grgbnc/following{/other_user}", "gists_url": "https://api.github.com/users/grgbnc/gists{/gist_id}", "starred_url": "https://api.github.com/users/grgbnc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grgbnc/subscriptions", "organizations_url": "https://api.github.com/users/grgbnc/orgs", "repos_url": "https://api.github.com/users/grgbnc/repos", "events_url": "https://api.github.com/users/grgbnc/events{/privacy}", "received_events_url": "https://api.github.com/users/grgbnc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-06-02T17:34:03Z", "updated_at": "2018-06-04T13:22:19Z", "closed_at": "2018-06-04T13:22:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the same config as detailed in <https://facelessuser.github.io/MarkdownPreview/extras/>\r\n\r\n```\r\nok: $(a)_n$\r\n\r\nok: $(a)_{n}$\r\n\r\nnot ok: $(a)_n$ $(a)_{n}$\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/301", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/301/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/301/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/301", "id": 328375707, "node_id": "MDU6SXNzdWUzMjgzNzU3MDc=", "number": 301, "title": "SuperFences: Tabbed Fenced Code", "user": {"login": "facelessuser", "id": 1055125, "node_id": "MDQ6VXNlcjEwNTUxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1055125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facelessuser", "html_url": "https://github.com/facelessuser", "followers_url": "https://api.github.com/users/facelessuser/followers", "following_url": "https://api.github.com/users/facelessuser/following{/other_user}", "gists_url": "https://api.github.com/users/facelessuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/facelessuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facelessuser/subscriptions", "organizations_url": "https://api.github.com/users/facelessuser/orgs", "repos_url": "https://api.github.com/users/facelessuser/repos", "events_url": "https://api.github.com/users/facelessuser/events{/privacy}", "received_events_url": "https://api.github.com/users/facelessuser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-01T04:10:42Z", "updated_at": "2018-06-09T14:54:30Z", "closed_at": "2018-06-09T14:54:30Z", "author_association": "OWNER", "active_lock_reason": null, "body": "See https://github.com/squidfunk/mkdocs-material/issues/778.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/297", "repository_url": "https://api.github.com/repos/facelessuser/pymdown-extensions", "labels_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/297/comments", "events_url": "https://api.github.com/repos/facelessuser/pymdown-extensions/issues/297/events", "html_url": "https://github.com/facelessuser/pymdown-extensions/issues/297", "id": 326768767, "node_id": "MDU6SXNzdWUzMjY3Njg3Njc=", "number": 297, "title": "`Arithmatex`: Allow disabling of \"smart dollars\"", "user": {"login": "RoyiAvital", "id": 7347975, "node_id": "MDQ6VXNlcjczNDc5NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7347975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoyiAvital", "html_url": "https://github.com/RoyiAvital", "followers_url": "https://api.github.com/users/RoyiAvital/followers", "following_url": "https://api.github.com/users/RoyiAvital/following{/other_user}", "gists_url": "https://api.github.com/users/RoyiAvital/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoyiAvital/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoyiAvital/subscriptions", "organizations_url": "https://api.github.com/users/RoyiAvital/orgs", "repos_url": "https://api.github.com/users/RoyiAvital/repos", "events_url": "https://api.github.com/users/RoyiAvital/events{/privacy}", "received_events_url": "https://api.github.com/users/RoyiAvital/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 151820353, "node_id": "MDU6TGFiZWwxNTE4MjAzNTM=", "url": "https://api.github.com/repos/facelessuser/pymdown-extensions/labels/T:%20feature", "name": "T: feature", "color": "7b17d8", "default": false, "description": "Feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2018-05-26T21:33:39Z", "updated_at": "2018-06-03T00:40:28Z", "closed_at": "2018-06-01T04:11:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Create an operation mode which protects Math Blocks as in LaTeX.\r\nNamely it should target advanced users who are aware of the edge cases.\r\nIt should work well when `MathJaX` is configured to handle only given elements and not scan the `body` for delimiters.\r\n\r\n### Inline Math \r\n - `\\( ... \\)` / `\\(...\\)`.\r\n - `$ ... $` / `$...$`.\r\n\r\n### Display Math\r\n - `\\[ ... \\]` / `\\[...\\]`.\r\n - `$$ ... $$` / `$$...$$`.\r\n\r\nTake care of cases there is line separating them. Something like:\r\n```\r\n$$\r\n...\r\n$$\r\n```\r\n\r\n### Environments\r\n - `\\begin{envName} ... \\end{envName}` / `\\begin{envName}...\\end{envName}`\r\n - Separated by line:\r\n```\r\n\\begin{envName}\r\n...\r\n\\end{envName}\r\n```\r\n\r\nThere is also the cases environment is embedded inside *Display Math*:\r\n\r\n```\r\n$$\\begin{envName}\r\n...\r\n\\end{envName}$$\r\n```\r\n\r\nOr\r\n\r\n```\r\n$$ \\begin{envName}\r\n...\r\n\\end{envName} $$\r\n```\r\n\r\n### Dollar Sign\r\nThe Dollar Sign should be escaped: `\\$` as in LaTeX.\r\n\r\nIf needed, I can create an `md` file as a test case.", "performed_via_github_app": null, "score": 1.0}]}