{"total_count": 32, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/autocracy/python-ipy/issues/62", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/62/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/62/events", "html_url": "https://github.com/autocracy/python-ipy/issues/62", "id": 434141066, "node_id": "MDU6SXNzdWU0MzQxNDEwNjY=", "number": 62, "title": "Deprecation warning in Python 3.7", "user": {"login": "icemac", "id": 386619, "node_id": "MDQ6VXNlcjM4NjYxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/386619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icemac", "html_url": "https://github.com/icemac", "followers_url": "https://api.github.com/users/icemac/followers", "following_url": "https://api.github.com/users/icemac/following{/other_user}", "gists_url": "https://api.github.com/users/icemac/gists{/gist_id}", "starred_url": "https://api.github.com/users/icemac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icemac/subscriptions", "organizations_url": "https://api.github.com/users/icemac/orgs", "repos_url": "https://api.github.com/users/icemac/repos", "events_url": "https://api.github.com/users/icemac/events{/privacy}", "received_events_url": "https://api.github.com/users/icemac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-17T07:51:12Z", "updated_at": "2020-06-18T01:42:24Z", "closed_at": "2020-06-18T01:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "`IPy-1.0-py3.7.egg/IPy.py:1025: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n  class IPSet(collections.MutableSet):`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/60", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/60/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/60/events", "html_url": "https://github.com/autocracy/python-ipy/issues/60", "id": 420192397, "node_id": "MDU6SXNzdWU0MjAxOTIzOTc=", "number": 60, "title": "FAIL: testRandomContains (__main__.TestIPSet)", "user": {"login": "arekm", "id": 50869, "node_id": "MDQ6VXNlcjUwODY5", "avatar_url": "https://avatars2.githubusercontent.com/u/50869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arekm", "html_url": "https://github.com/arekm", "followers_url": "https://api.github.com/users/arekm/followers", "following_url": "https://api.github.com/users/arekm/following{/other_user}", "gists_url": "https://api.github.com/users/arekm/gists{/gist_id}", "starred_url": "https://api.github.com/users/arekm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arekm/subscriptions", "organizations_url": "https://api.github.com/users/arekm/orgs", "repos_url": "https://api.github.com/users/arekm/repos", "events_url": "https://api.github.com/users/arekm/events{/privacy}", "received_events_url": "https://api.github.com/users/arekm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-12T20:33:12Z", "updated_at": "2019-03-12T21:29:15Z", "closed_at": "2019-03-12T21:29:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using IPy 1.0.0. fuzzy test fails often:\r\n\r\n````\r\n+ PYTHONPATH=build-2 /usr/bin/python2 test/test_fuzz.py\r\nr\n======================================================================\r\nFAIL: testRandomContains (__main__.TestIPSet)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_fuzz.py\", line 88, in testRandomContains\r\n    \"%s in %s != %s (made from %s)\" % (question, ipset, answer, prefixes))\r\nAssertionError: 0.0.0.0/0 in IPSet([IP('0.0.0.0/0')]) != False (made from [IP('20.92.0.0/14'), IP('86.4.168.0/21'), IP('28.64.0.0/10'), IP('209.103.80.0/20'), IP('234.0.0.0/8'), IP('146.197.0.0/19'), IP('128.0.0.0/1'), IP('82.176.138.136/29'), IP('178.91.164.0/23'), IP('253.153.255.212/30'), IP('161.206.83.22/31'), IP('80.96.0.0/11'), IP('128.0.0.0/4'), IP('64.0.0.0/4'), IP('151.128.0.0/10'), IP('77.173.47.0/24'), IP('37.92.0.0/14'), IP('13.118.32.0/21'), IP('162.56.0.0/13'), IP('33.82.0.0/17'), IP('64.192.168.64/28'), IP('68.160.0.0/12'), IP('0.0.0.0/1'), IP('115.46.100.32/27'), IP('142.135.131.0/25'), IP('106.0.0.0/9'), IP('155.199.0.0/16'), IP('191.228.3.64/26'), IP('197.45.128.0/17'), IP('239.32.0.0/11'), IP('186.148.236.128/30'), IP('53.177.176.244/31'), IP('74.32.112.0/20'), IP('33.0.0.0/12'), IP('21.160.181.128/25')])\r\n````\r\n\r\n\r\n\r\n````\r\n+ PYTHONPATH=build-3 /usr/bin/python3 test/test_fuzz.py\r\ny.py:1028: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n  if not isinstance(iterable, collections.Iterable):\r\nr\n======================================================================\r\nFAIL: testRandomContains (__main__.TestIPSet)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_fuzz.py\", line 88, in testRandomContains\r\n    \"%s in %s != %s (made from %s)\" % (question, ipset, answer, prefixes))\r\nAssertionError: True != False : 0.0.0.0/0 in IPSet([IP('0.0.0.0/0')]) != False (made from [IP('192.0.0.0/5'), IP('249.104.0.0/16'), IP('222.252.56.0/21'), IP('2.250.195.0/24'), IP('154.81.225.0/25'), IP('104.0.0.0/5'), IP('17.137.128.0/18'), IP('16.0.0.0/5'), IP('46.199.0.0/18'), IP('143.158.177.80/28'), IP('180.50.88.0/21'), IP('151.0.0.0/8'), IP('46.15.83.0/26'), IP('208.0.0.0/4'), IP('45.106.0.0/15'), IP('98.133.144.128/25'), IP('0.0.0.0/1'), IP('0.0.0.0/2'), IP('99.128.0.0/13'), IP('23.192.0.0/10'), IP('96.0.0.0/5'), IP('114.80.0.0/15'), IP('135.106.0.0/15'), IP('176.31.56.0/24'), IP('128.0.0.0/1'), IP('0.177.243.134/31'), IP('63.192.0.0/10'), IP('139.135.52.0/22'), IP('215.96.0.0/12'), IP('164.55.96.0/24'), IP('98.243.251.0/24'), IP('59.78.78.0/24'), IP('152.193.26.0/24'), IP('18.49.0.0/16'), IP('90.179.24.0/23'), IP('247.238.213.224/27'), IP('159.104.0.0/13'), IP('245.216.141.0/24'), IP('103.17.57.196/30'), IP('250.50.106.128/26'), IP('205.242.192.64/27'), IP('0.0.0.0/1'), IP('23.9.2.0/23')])\r\n\r\n======================================================================\r\nFAIL: testRandomContains (__main__.TestIPSet)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_fuzz.py\", line 88, in testRandomContains\r\n    \"%s in %s != %s (made from %s)\" % (question, ipset, answer, prefixes))\r\nAssertionError: True != False : 128.0.0.0/1 in IPSet([IP('11.120.192.0/18'), IP('32.167.192.0/18'), IP('42.90.5.80/30'), IP('48.0.0.0/5'), IP('63.31.36.0/22'), IP('63.211.9.0/24'), IP('84.0.0.0/7'), IP('116.34.128.0/19'), IP('128.0.0.0/1')]) != False (made from [IP('63.31.36.0/22'), IP('234.36.0.0/15'), IP('240.0.0.0/7'), IP('42.90.5.80/30'), IP('32.167.192.0/18'), IP('49.213.43.0/25'), IP('128.0.0.0/2'), IP('84.0.0.0/7'), IP('192.0.0.0/2'), IP('163.249.21.224/27'), IP('63.211.9.0/24'), IP('48.0.0.0/5'), IP('239.99.126.58/31'), IP('213.0.0.0/8'), IP('116.34.128.0/19'), IP('192.0.0.0/2'), IP('11.120.192.0/18'), IP('176.0.0.0/9'), IP('53.190.89.168/29')])\r\n````\r\n\r\n\r\n\r\n````\r\n+ PYTHONPATH=build-3 /usr/bin/python3 test/test_fuzz.py\r\ny.py:1028: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n  if not isinstance(iterable, collections.Iterable):\r\nr\n======================================================================\r\nFAIL: testRandomContains (__main__.TestIPSet)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_fuzz.py\", line 88, in testRandomContains\r\n    \"%s in %s != %s (made from %s)\" % (question, ipset, answer, prefixes))\r\nAssertionError: True != False : 128.0.0.0/2 in IPSet([IP('0.0.0.0/1'), IP('128.0.0.0/2'), IP('192.227.240.124/31'), IP('193.184.142.80/28'), IP('205.105.90.0/24'), IP('251.112.0.0/12')]) != False (made from [IP('64.0.0.0/2'), IP('192.227.240.124/31'), IP('153.162.127.128/25'), IP('0.0.0.0/2'), IP('115.80.0.0/12'), IP('26.177.208.0/20'), IP('251.112.0.0/12'), IP('111.69.182.0/23'), IP('188.226.160.0/19'), IP('139.90.194.132/31'), IP('16.82.32.0/20'), IP('8.38.84.0/25'), IP('79.0.0.0/8'), IP('205.105.90.0/24'), IP('193.184.142.80/28'), IP('190.238.11.62/31'), IP('160.0.0.0/3'), IP('127.39.153.42/31'), IP('128.0.0.0/3')])\r\n\r\n======================================================================\r\nFAIL: testRandomContains (__main__.TestIPSet)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_fuzz.py\", line 88, in testRandomContains\r\n    \"%s in %s != %s (made from %s)\" % (question, ipset, answer, prefixes))\r\nAssertionError: True != False : 0.0.0.0/0 in IPSet([IP('0.0.0.0/0')]) != False (made from [IP('144.0.0.0/4'), IP('240.0.0.0/4'), IP('76.192.0.0/12'), IP('128.0.0.0/1'), IP('184.0.0.0/7'), IP('239.101.80.0/20'), IP('154.159.128.0/17'), IP('224.160.0.0/11'), IP('0.0.0.0/5'), IP('150.15.144.0/20'), IP('38.18.155.128/27'), IP('183.0.0.0/8'), IP('235.40.0.0/13'), IP('11.66.208.0/20'), IP('65.98.171.0/25'), IP('158.132.8.96/27'), IP('230.0.0.0/7'), IP('0.0.0.0/1'), IP('0.0.0.0/1'), IP('239.89.147.0/25'), IP('8.8.251.128/25'), IP('168.159.8.0/23'), IP('199.158.0.0/15'), IP('0.0.0.0/2'), IP('208.58.57.82/31'), IP('112.0.0.0/5'), IP('6.0.0.0/8'), IP('96.0.0.0/4'), IP('170.0.0.0/8')])\r\n\r\n======================================================================\r\nFAIL: testRandomContains (__main__.TestIPSet)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_fuzz.py\", line 88, in testRandomContains\r\n    \"%s in %s != %s (made from %s)\" % (question, ipset, answer, prefixes))\r\nAssertionError: True != False : 0.0.0.0/0 in IPSet([IP('0.0.0.0/0')]) != False (made from [IP('173.66.146.128/29'), IP('57.57.191.160/28'), IP('221.129.194.192/26'), IP('82.0.0.0/11'), IP('44.199.61.224/27'), IP('226.0.0.0/7'), IP('0.0.0.0/1'), IP('148.2.0.0/15'), IP('172.61.158.0/29'), IP('200.106.240.0/20'), IP('128.0.0.0/1'), IP('105.68.79.12/30'), IP('88.0.0.0/5'), IP('211.110.0.0/17'), IP('15.241.130.0/27')])\r\n\r\n======================================================================\r\nFAIL: testRandomContains (__main__.TestIPSet)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_fuzz.py\", line 88, in testRandomContains\r\n    \"%s in %s != %s (made from %s)\" % (question, ipset, answer, prefixes))\r\nAssertionError: True != False : 0.0.0.0/0 in IPSet([IP('0.0.0.0/0')]) != False (made from [IP('56.0.0.0/8'), IP('198.72.192.128/25'), IP('159.18.0.0/16'), IP('255.97.0.0/16'), IP('234.150.88.0/21'), IP('176.0.0.0/5'), IP('29.153.205.40/31'), IP('129.0.0.0/11'), IP('0.0.0.0/2'), IP('18.93.0.0/16'), IP('133.119.214.0/24'), IP('70.0.0.0/9'), IP('163.151.200.0/26'), IP('139.207.65.120/29'), IP('240.0.0.0/9'), IP('193.58.160.0/20'), IP('45.77.56.104/31'), IP('236.48.229.128/25'), IP('141.0.0.0/8'), IP('32.0.0.0/3'), IP('43.66.128.0/17'), IP('37.0.0.0/9'), IP('48.143.90.248/29'), IP('216.216.0.0/13'), IP('216.0.0.0/5'), IP('41.64.0.0/10'), IP('10.128.0.0/9'), IP('162.55.122.0/25'), IP('156.0.0.0/6'), IP('128.0.0.0/1'), IP('65.81.242.64/29'), IP('0.0.0.0/3'), IP('239.156.72.0/21'), IP('125.0.0.0/8'), IP('192.0.0.0/2'), IP('63.5.64.0/21'), IP('128.0.0.0/2'), IP('183.181.72.192/29'), IP('166.6.163.128/25'), IP('0.0.0.0/1'), IP('64.0.0.0/2'), IP('167.186.52.0/22'), IP('87.32.0.0/12'), IP('142.0.0.0/8')])\r\n\r\n----------------------------------------------------------------------\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/57", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/57/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/57/events", "html_url": "https://github.com/autocracy/python-ipy/issues/57", "id": 374281191, "node_id": "MDU6SXNzdWUzNzQyODExOTE=", "number": 57, "title": "Wrong decoding of IPv6 address from string and int representations", "user": {"login": "dvdfabian", "id": 35688980, "node_id": "MDQ6VXNlcjM1Njg4OTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/35688980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvdfabian", "html_url": "https://github.com/dvdfabian", "followers_url": "https://api.github.com/users/dvdfabian/followers", "following_url": "https://api.github.com/users/dvdfabian/following{/other_user}", "gists_url": "https://api.github.com/users/dvdfabian/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvdfabian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvdfabian/subscriptions", "organizations_url": "https://api.github.com/users/dvdfabian/orgs", "repos_url": "https://api.github.com/users/dvdfabian/repos", "events_url": "https://api.github.com/users/dvdfabian/events{/privacy}", "received_events_url": "https://api.github.com/users/dvdfabian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-26T08:36:05Z", "updated_at": "2019-02-27T23:16:43Z", "closed_at": "2019-02-27T23:16:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have come across this behavior while trying to parse an IPv6 address in the int and the string notation.\r\n```.py\r\n>>> ip = IPy.IP('11', ipversion=6)\r\n>>> ip.strNormal(0)\r\n'0:0:0:0:0:0:b00:0'\r\n>>> ip = IPy.IP(11, ipversion=6)\r\n>>> ip.strNormal(0)\r\n'0:0:0:0:0:0:0:b'\r\n```\r\nI am explicitly setting the IP version to 6 and am expecting to get the same result regardless of the incoming data type. However, it seems that the IPInt class does not honor the explicit version specification and still tries to guess the version when it detects a string. The result is (since 11 is smaller than 127) that one gets an IPv4 address 11.0.0.0 encoded as an IPv6 address.\r\n\r\nBest regards,\r\n\r\nDavid Fabian\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/54", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/54/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/54/events", "html_url": "https://github.com/autocracy/python-ipy/issues/54", "id": 366339305, "node_id": "MDU6SXNzdWUzNjYzMzkzMDU=", "number": 54, "title": "Feature proposal: IPSet to work with strings", "user": {"login": "vstoykov", "id": 902381, "node_id": "MDQ6VXNlcjkwMjM4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/902381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vstoykov", "html_url": "https://github.com/vstoykov", "followers_url": "https://api.github.com/users/vstoykov/followers", "following_url": "https://api.github.com/users/vstoykov/following{/other_user}", "gists_url": "https://api.github.com/users/vstoykov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vstoykov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vstoykov/subscriptions", "organizations_url": "https://api.github.com/users/vstoykov/orgs", "repos_url": "https://api.github.com/users/vstoykov/repos", "events_url": "https://api.github.com/users/vstoykov/events{/privacy}", "received_events_url": "https://api.github.com/users/vstoykov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-03T13:29:04Z", "updated_at": "2019-10-03T23:20:16Z", "closed_at": "2019-02-27T23:20:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently when you initialize `IPSet` it should be a list of `IP` objects or it will raise:\r\n```\r\nValueError: Only IP objects can be added to an IPSet\r\n```\r\n\r\nI was wondering instead of raising error to convert it to try to convert it to `IP` object.\r\n\r\nMy second proposal is for improving `__contains__` to be able to accept any type of objects. Currently on Python 3 when I try to use string:\r\n```\r\n'192.168.0.1' in IPSet([IP('192.168.0.0/24')])\r\n```\r\nInstead of returning `True` or `False` (preferably `True`) it is raising exception:\r\n```\r\n/usr/lib/python3.6/site-packages/IPy.py in __contains__(self, ip)\r\n   1040             valid_masks = [x for x in valid_masks if x <= ip_mask]\r\n   1041         for mask in valid_masks:\r\n-> 1042             i = bisect.bisect(self.prefixtable[mask], ip)\r\n   1043             # Because of sorting order, a match can only occur in the prefix\r\n   1044             # that comes before the result of the search.\r\n\r\nTypeError: '<' not supported between instances of 'str' and 'IP'\r\n```\r\n\r\nI think that it should be better if the following will be possible if both of my proposals are accepted:\r\n```\r\n>>> '192.168.0.1' in IPSet(['192.168.0.0/24'])\r\nTrue\r\n```\r\n\r\nDo you think that my proposals are useful? If you like them I can try to prepare a PR for them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/53", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/53/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/53/events", "html_url": "https://github.com/autocracy/python-ipy/issues/53", "id": 360513999, "node_id": "MDU6SXNzdWUzNjA1MTM5OTk=", "number": 53, "title": "IPy fails dictionary test in test.rst on Python >=3.6", "user": {"login": "latricewilgus", "id": 43064940, "node_id": "MDQ6VXNlcjQzMDY0OTQw", "avatar_url": "https://avatars3.githubusercontent.com/u/43064940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latricewilgus", "html_url": "https://github.com/latricewilgus", "followers_url": "https://api.github.com/users/latricewilgus/followers", "following_url": "https://api.github.com/users/latricewilgus/following{/other_user}", "gists_url": "https://api.github.com/users/latricewilgus/gists{/gist_id}", "starred_url": "https://api.github.com/users/latricewilgus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latricewilgus/subscriptions", "organizations_url": "https://api.github.com/users/latricewilgus/orgs", "repos_url": "https://api.github.com/users/latricewilgus/repos", "events_url": "https://api.github.com/users/latricewilgus/events{/privacy}", "received_events_url": "https://api.github.com/users/latricewilgus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-15T06:46:31Z", "updated_at": "2019-02-27T23:16:25Z", "closed_at": "2019-02-27T23:16:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nThe test\r\n```\r\n>>> d={}\r\n>>> d[IP('0.0.0.0/0')] = 1\r\n>>> d[IP('::/0')] = 2\r\n>>> d\r\n{IP('::/0'): 2, IP('0.0.0.0/0'): 1}\r\n```\r\nfails because it relies on the ordering of the entries (which is an implementation detail in Python <=3.6, and part of the specification in Python 3.7 (defined it to be the insertion order[0]))\r\n\r\nThere are various ways how to fix the test, which to choose might depends on what the test should actually test.\r\nInstead of `>>> d` use one of\r\n\r\na)\r\n```\r\n>>> len(d)\r\n2\r\n```\r\nb)\r\n```\r\n>>> l = list(d.items()).sort()\r\n>>> l\r\n[(IP('0.0.0.0/0'), 1), (IP('::/0'), 2)]\r\n```\r\nc)\r\nRemove the test, because the Python dict is guaranteed to treat different keys as different entries and `IP('0.0.0.0/0')` and `IP('::/0')` are not equal by a test above.\r\n\r\n\r\n[0] https://docs.python.org/3/whatsnew/3.7.html#summary-release-highlights", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/51", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/51/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/51/events", "html_url": "https://github.com/autocracy/python-ipy/issues/51", "id": 292016129, "node_id": "MDU6SXNzdWUyOTIwMTYxMjk=", "number": 51, "title": "IP Auto \"fills\" IPv4 with Zero", "user": {"login": "isaiah1112", "id": 15253925, "node_id": "MDQ6VXNlcjE1MjUzOTI1", "avatar_url": "https://avatars0.githubusercontent.com/u/15253925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaiah1112", "html_url": "https://github.com/isaiah1112", "followers_url": "https://api.github.com/users/isaiah1112/followers", "following_url": "https://api.github.com/users/isaiah1112/following{/other_user}", "gists_url": "https://api.github.com/users/isaiah1112/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaiah1112/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaiah1112/subscriptions", "organizations_url": "https://api.github.com/users/isaiah1112/orgs", "repos_url": "https://api.github.com/users/isaiah1112/repos", "events_url": "https://api.github.com/users/isaiah1112/events{/privacy}", "received_events_url": "https://api.github.com/users/isaiah1112/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-26T20:04:19Z", "updated_at": "2018-02-01T14:16:49Z", "closed_at": "2018-02-01T14:16:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found while using IPy to check for valid IPv4 addresses that if a user misses an octet that IPy automatically fills in the remaining content with zero.  Example:\r\n```\r\n>>> from IPy import IP\r\n>>> IP('172.16.100')\r\nIP('172.16.100.0')\r\n>>> IP('10.1.246')\r\nIP('10.1.246.0')\r\n```\r\nIs this expected behavior?  I would think this should raise an exception that the IPv4 address is not valid as it doesn't have the correct number of octets.  The behavior is the same for Python2 and Python3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/50", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/50/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/50/events", "html_url": "https://github.com/autocracy/python-ipy/issues/50", "id": 256079708, "node_id": "MDU6SXNzdWUyNTYwNzk3MDg=", "number": 50, "title": "2 failing tests on 32bit/python3 hosts", "user": {"login": "nirik", "id": 1779112, "node_id": "MDQ6VXNlcjE3NzkxMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1779112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirik", "html_url": "https://github.com/nirik", "followers_url": "https://api.github.com/users/nirik/followers", "following_url": "https://api.github.com/users/nirik/following{/other_user}", "gists_url": "https://api.github.com/users/nirik/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirik/subscriptions", "organizations_url": "https://api.github.com/users/nirik/orgs", "repos_url": "https://api.github.com/users/nirik/repos", "events_url": "https://api.github.com/users/nirik/events{/privacy}", "received_events_url": "https://api.github.com/users/nirik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-07T21:44:09Z", "updated_at": "2018-02-21T23:13:43Z", "closed_at": "2018-02-21T23:13:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Greetings. I'm getting 2 tests failing, but only on 32bit hosts with python3. \r\nOn 64bit everything is fine. With python2 everything is ok. \r\n\r\n```\r\n+ /usr/bin/python3 test/test_IPy.py\r\n.................................EE.......................................\r\n======================================================================\r\nERROR: testNonZeroType (__main__.RegressionTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_IPy.py\", line 888, in testNonZeroType\r\n    self.assertEqual(bool(IPy.IP(\"0.0.0.0/0\")), True)\r\nOverflowError: cannot fit 'int' into an index-sized integer\r\n======================================================================\r\nERROR: testNulNetmask (__main__.RegressionTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_IPy.py\", line 881, in testNulNetmask\r\n    if ip:\r\nOverflowError: cannot fit 'int' into an index-sized integer\r\n----------------------------------------------------------------------\r\nRan 74 tests in 0.322s\r\nFAILED (errors=2)\r\n```\r\n\r\nHappy to gather more info, etc. This is from downstream Fedora package bug: \r\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1489512", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/48", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/48/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/48/events", "html_url": "https://github.com/autocracy/python-ipy/issues/48", "id": 190726609, "node_id": "MDU6SXNzdWUxOTA3MjY2MDk=", "number": 48, "title": "Add pkg info in pypi repository", "user": {"login": "bbaja42", "id": 761668, "node_id": "MDQ6VXNlcjc2MTY2OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/761668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbaja42", "html_url": "https://github.com/bbaja42", "followers_url": "https://api.github.com/users/bbaja42/followers", "following_url": "https://api.github.com/users/bbaja42/following{/other_user}", "gists_url": "https://api.github.com/users/bbaja42/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbaja42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbaja42/subscriptions", "organizations_url": "https://api.github.com/users/bbaja42/orgs", "repos_url": "https://api.github.com/users/bbaja42/repos", "events_url": "https://api.github.com/users/bbaja42/events{/privacy}", "received_events_url": "https://api.github.com/users/bbaja42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-21T14:09:05Z", "updated_at": "2019-02-27T23:57:49Z", "closed_at": "2019-02-27T23:57:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, would it be possible to add PKG-INFO to pypi repository,\r\nsimilarly as is done for https://pypi.python.org/packages/2e/ad/e627446492cc374c284e82381215dcd9a0a87c4f6e90e9789afefe6da0ad/requests-2.11.1.tar.gz#md5=ad5f9c47b5c5dfdb28363ad7546b0763\r\n\r\nRepository managers such as Artifactory are reliant on inclusion of the PKG-INFO in the built tar.gz module files to extract metadata to enable them to correctly index the module and serve it in PyPi repositories\r\n\r\n\r\nIf this is good idea, I can contribute with a patch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/46", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/46/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/46/events", "html_url": "https://github.com/autocracy/python-ipy/issues/46", "id": 124924961, "node_id": "MDU6SXNzdWUxMjQ5MjQ5NjE=", "number": 46, "title": "version testing on /31(and /127) network fails", "user": {"login": "paddy01", "id": 2136198, "node_id": "MDQ6VXNlcjIxMzYxOTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2136198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paddy01", "html_url": "https://github.com/paddy01", "followers_url": "https://api.github.com/users/paddy01/followers", "following_url": "https://api.github.com/users/paddy01/following{/other_user}", "gists_url": "https://api.github.com/users/paddy01/gists{/gist_id}", "starred_url": "https://api.github.com/users/paddy01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paddy01/subscriptions", "organizations_url": "https://api.github.com/users/paddy01/orgs", "repos_url": "https://api.github.com/users/paddy01/repos", "events_url": "https://api.github.com/users/paddy01/events{/privacy}", "received_events_url": "https://api.github.com/users/paddy01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-05T09:19:53Z", "updated_at": "2016-01-25T21:48:22Z", "closed_at": "2016-01-25T21:48:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "When doing .version() on a /31 or a /127 network the test throws an error with the \"upper\" ip.\n\nExamples:\nIP(\"198.51.100.3/31\").version() <-- fails\nIP(\"198.51.100.2/31\").version() <-- works as expected\nIP(\"2001:db8:2::1/127\").version() <-- fails\nIP(\"2001:db8:2::0/127\").version() <-- works as expected\n\nThis can be worked around with make_net=True\nIP(\"198.51.100.3/31\", make_net=True).version() <-- now works as expected\nIP(\"2001:db8:2::1/127\", make_net=True).version() <-- now works as expected\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/42", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/42/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/42/events", "html_url": "https://github.com/autocracy/python-ipy/issues/42", "id": 110370710, "node_id": "MDU6SXNzdWUxMTAzNzA3MTA=", "number": 42, "title": "Operator IN work not correctly if you check ip that hass biggr mask than others in IPSet", "user": {"login": "sivir", "id": 7666055, "node_id": "MDQ6VXNlcjc2NjYwNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7666055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sivir", "html_url": "https://github.com/sivir", "followers_url": "https://api.github.com/users/sivir/followers", "following_url": "https://api.github.com/users/sivir/following{/other_user}", "gists_url": "https://api.github.com/users/sivir/gists{/gist_id}", "starred_url": "https://api.github.com/users/sivir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sivir/subscriptions", "organizations_url": "https://api.github.com/users/sivir/orgs", "repos_url": "https://api.github.com/users/sivir/repos", "events_url": "https://api.github.com/users/sivir/events{/privacy}", "received_events_url": "https://api.github.com/users/sivir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-08T04:22:35Z", "updated_at": "2015-10-08T07:27:35Z", "closed_at": "2015-10-08T07:27:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example:\n\n``` python\n    from IPy import IP,IPSet\n    ipset = IPSet([IP('104.27.168.222/31'), IP('151.249.91.192/26')])\n    ip = IP('104.27.168.222/31')\n    print ip in ipset\n```\n\nreturns False, but should return True\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/41", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/41/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/41/events", "html_url": "https://github.com/autocracy/python-ipy/issues/41", "id": 102423264, "node_id": "MDU6SXNzdWUxMDI0MjMyNjQ=", "number": 41, "title": "Overflow when calling len() on IPSet", "user": {"login": "arnuschky", "id": 179920, "node_id": "MDQ6VXNlcjE3OTkyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/179920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnuschky", "html_url": "https://github.com/arnuschky", "followers_url": "https://api.github.com/users/arnuschky/followers", "following_url": "https://api.github.com/users/arnuschky/following{/other_user}", "gists_url": "https://api.github.com/users/arnuschky/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnuschky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnuschky/subscriptions", "organizations_url": "https://api.github.com/users/arnuschky/orgs", "repos_url": "https://api.github.com/users/arnuschky/repos", "events_url": "https://api.github.com/users/arnuschky/events{/privacy}", "received_events_url": "https://api.github.com/users/arnuschky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-21T17:05:21Z", "updated_at": "2015-09-02T23:44:34Z", "closed_at": "2015-08-25T17:48:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n>>> len(IPSet([IP('2400::/64')]))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nOverflowError: long int too large to convert to int\n>>> len(IPSet([IP('2400::/66')]))\n4611686018427387904\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/39", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/39/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/39/events", "html_url": "https://github.com/autocracy/python-ipy/issues/39", "id": 93437473, "node_id": "MDU6SXNzdWU5MzQzNzQ3Mw==", "number": 39, "title": "Please clarify license", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-07T04:48:02Z", "updated_at": "2016-01-25T21:43:53Z", "closed_at": "2016-01-25T21:43:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "setup.py says it is BSD license, but COPYING file doesn't contain the words \"BSD  License\", which makes it confusing if it is or isn't BSD licensed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/37", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/37/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/37/events", "html_url": "https://github.com/autocracy/python-ipy/issues/37", "id": 90410401, "node_id": "MDU6SXNzdWU5MDQxMDQwMQ==", "number": 37, "title": "127.0/8 .iptype() should return 'LOOPBACK'", "user": {"login": "chrismeyersfsu", "id": 722880, "node_id": "MDQ6VXNlcjcyMjg4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/722880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrismeyersfsu", "html_url": "https://github.com/chrismeyersfsu", "followers_url": "https://api.github.com/users/chrismeyersfsu/followers", "following_url": "https://api.github.com/users/chrismeyersfsu/following{/other_user}", "gists_url": "https://api.github.com/users/chrismeyersfsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrismeyersfsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrismeyersfsu/subscriptions", "organizations_url": "https://api.github.com/users/chrismeyersfsu/orgs", "repos_url": "https://api.github.com/users/chrismeyersfsu/repos", "events_url": "https://api.github.com/users/chrismeyersfsu/events{/privacy}", "received_events_url": "https://api.github.com/users/chrismeyersfsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-23T14:51:38Z", "updated_at": "2015-06-26T14:23:18Z", "closed_at": "2015-06-26T14:23:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/autocracy/python-ipy/blob/master/IPy.py#L24\n\nIP('127.0.0.1').iptype() returns `PRIVATE` instead of the expected `LOOPBACK`\n\nhttp://www.iana.org/assignments/ipv4-address-space/ipv4-address-space.xhtml\n![image](https://cloud.githubusercontent.com/assets/722880/8308967/cf15a1fc-1995-11e5-9a4b-b97dabf82238.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/35", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/35/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/35/events", "html_url": "https://github.com/autocracy/python-ipy/issues/35", "id": 72021244, "node_id": "MDU6SXNzdWU3MjAyMTI0NA==", "number": 35, "title": "No way to force printing of host prefix lengths", "user": {"login": "ktims", "id": 1471533, "node_id": "MDQ6VXNlcjE0NzE1MzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1471533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktims", "html_url": "https://github.com/ktims", "followers_url": "https://api.github.com/users/ktims/followers", "following_url": "https://api.github.com/users/ktims/following{/other_user}", "gists_url": "https://api.github.com/users/ktims/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktims/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktims/subscriptions", "organizations_url": "https://api.github.com/users/ktims/orgs", "repos_url": "https://api.github.com/users/ktims/repos", "events_url": "https://api.github.com/users/ktims/events{/privacy}", "received_events_url": "https://api.github.com/users/ktims/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-30T00:01:23Z", "updated_at": "2015-04-30T16:38:27Z", "closed_at": "2015-04-30T16:38:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Current string conversion functions don't distinguish between the default (print prefix only for non-host entities) and user-specified wantprefixlen values. The code in _printPrefix conflates None with 1, and always applies the default setting even when wantprefixlen is set. There is an instance variable to override this, but this is not very conducive to efficient scripting (this is not even exposed in the constructor for IP), and IMO breaks the expectation of 'wantprefixlen'.\n\nIn my opinion, I expect 'wantprefixlen' set to non-zero to always print the prefix length regardless of what the value is.\n\nA pull request is incoming.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/34", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/34/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/34/events", "html_url": "https://github.com/autocracy/python-ipy/issues/34", "id": 54298806, "node_id": "MDU6SXNzdWU1NDI5ODgwNg==", "number": 34, "title": "pip install outdated ipy version", "user": {"login": "toidi", "id": 892861, "node_id": "MDQ6VXNlcjg5Mjg2MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/892861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toidi", "html_url": "https://github.com/toidi", "followers_url": "https://api.github.com/users/toidi/followers", "following_url": "https://api.github.com/users/toidi/following{/other_user}", "gists_url": "https://api.github.com/users/toidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/toidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toidi/subscriptions", "organizations_url": "https://api.github.com/users/toidi/orgs", "repos_url": "https://api.github.com/users/toidi/repos", "events_url": "https://api.github.com/users/toidi/events{/privacy}", "received_events_url": "https://api.github.com/users/toidi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-14T09:08:01Z", "updated_at": "2015-01-28T02:53:35Z", "closed_at": "2015-01-28T02:53:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce\n\n```\nmbp-2:~ e.iskandarov$ mkvirtualenv ipy\nNew python executable in ipy/bin/python2.7\nAlso creating executable in ipy/bin/python\nInstalling setuptools, pip...done.\n(ipy)mbp-2:~ e.iskandarov$ pip --version\npip 1.5.6 from /Users/e.iskandarov/.virtualenvs/ipy/lib/python2.7/site-packages (python 2.7)\n(ipy)mbp-2:~ e.iskandarov$ pip install ipy\nDownloading/unpacking ipy\n  Downloading IPy-0.82.tar.gz\n  Running setup.py (path:/Users/e.iskandarov/.virtualenvs/ipy/build/ipy/setup.py) egg_info for package ipy\n\nInstalling collected packages: ipy\n  Running setup.py install for ipy\n\nSuccessfully installed ipy\n(ipy)mbp-2:~ e.iskandarov$ pip search IPy\n...\nIPy                       - Class and tools for handling of IPv4 and IPv6 addresses and networks\n  INSTALLED: 0.81\n  LATEST:    0.82a\n...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/33", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/33/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/33/events", "html_url": "https://github.com/autocracy/python-ipy/issues/33", "id": 52646838, "node_id": "MDU6SXNzdWU1MjY0NjgzOA==", "number": 33, "title": "Failed to update 0.81 -> 0.82", "user": {"login": "bastelfreak", "id": 341866, "node_id": "MDQ6VXNlcjM0MTg2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/341866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bastelfreak", "html_url": "https://github.com/bastelfreak", "followers_url": "https://api.github.com/users/bastelfreak/followers", "following_url": "https://api.github.com/users/bastelfreak/following{/other_user}", "gists_url": "https://api.github.com/users/bastelfreak/gists{/gist_id}", "starred_url": "https://api.github.com/users/bastelfreak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bastelfreak/subscriptions", "organizations_url": "https://api.github.com/users/bastelfreak/orgs", "repos_url": "https://api.github.com/users/bastelfreak/repos", "events_url": "https://api.github.com/users/bastelfreak/events{/privacy}", "received_events_url": "https://api.github.com/users/bastelfreak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-12-22T12:50:59Z", "updated_at": "2015-04-05T07:47:02Z", "closed_at": "2015-04-05T01:00:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm on CentOS 7 and want to update from IPy 0.81 to 0.82. pip tells me that the update was successfull but the old version is still present anywhere? I could successfully update other python packages so this doesn't seem to be a general pip issue.\n\n``` bash\nroot@puppet ~ # pip list --outdated\nCould not find any downloads that satisfy the requirement yum-metadata-parser\nCould not find any downloads that satisfy the requirement policycoreutils-default-encoding\nCould not find any downloads that satisfy the requirement sepolicy\nCould not find any downloads that satisfy the requirement slip.dbus\nCould not find any downloads that satisfy the requirement javapackages\nIPy (Current: 0.81 Latest: 0.82)\nCould not find any downloads that satisfy the requirement seobject\nroot@puppet ~ # pip install --upgrade ipy\nDownloading/unpacking ipy from https://pypi.python.org/packages/source/I/IPy/IPy-0.82.tar.gz#md5=0625e884df8bde533b54a88c85cf5029\n  Downloading IPy-0.82.tar.gz\n  Running setup.py egg_info for package ipy\n\nInstalling collected packages: ipy\n  Found existing installation: IPy 0.81\n    Uninstalling IPy:\n      Successfully uninstalled IPy\n  Running setup.py install for ipy\n\nSuccessfully installed ipy\nCleaning up...\nroot@puppet ~ # pip list --outdated\nCould not find any downloads that satisfy the requirement yum-metadata-parser\nCould not find any downloads that satisfy the requirement policycoreutils-default-encoding\nCould not find any downloads that satisfy the requirement sepolicy\nCould not find any downloads that satisfy the requirement slip.dbus\nCould not find any downloads that satisfy the requirement javapackages\nIPy (Current: 0.81 Latest: 0.82)\nCould not find any downloads that satisfy the requirement seobject\nroot@puppet ~ #\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/32", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/32/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/32/events", "html_url": "https://github.com/autocracy/python-ipy/issues/32", "id": 51985705, "node_id": "MDU6SXNzdWU1MTk4NTcwNQ==", "number": 32, "title": "IP representation with netmask not possible", "user": {"login": "schlitzered", "id": 2797971, "node_id": "MDQ6VXNlcjI3OTc5NzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2797971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schlitzered", "html_url": "https://github.com/schlitzered", "followers_url": "https://api.github.com/users/schlitzered/followers", "following_url": "https://api.github.com/users/schlitzered/following{/other_user}", "gists_url": "https://api.github.com/users/schlitzered/gists{/gist_id}", "starred_url": "https://api.github.com/users/schlitzered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schlitzered/subscriptions", "organizations_url": "https://api.github.com/users/schlitzered/orgs", "repos_url": "https://api.github.com/users/schlitzered/repos", "events_url": "https://api.github.com/users/schlitzered/events{/privacy}", "received_events_url": "https://api.github.com/users/schlitzered/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-15T13:27:52Z", "updated_at": "2015-01-29T10:04:24Z", "closed_at": "2014-12-19T02:22:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, \n\ni guess it should be possible to create an object that represents an ip address + subnet mask.\nthis is what currently happens:\n\n> > > ip = IPy.IP('10.10.10.12/24')\n> > > Traceback (most recent call last):\n> > >   File \"<input>\", line 1, in <module>\n> > >   File \"/home/schlitzer/virt_env/python3.4/lib/python3.4/site-packages/IPy.py\", line 259, in **init**\n> > >     raise ValueError(\"%s has invalid prefix length (%s)\" % (repr(self), self._prefixlen))\n> > > ValueError: IP('10.10.10.12/24') has invalid prefix length (24)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/31", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/31/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/31/events", "html_url": "https://github.com/autocracy/python-ipy/issues/31", "id": 51865878, "node_id": "MDU6SXNzdWU1MTg2NTg3OA==", "number": 31, "title": "Issue with IPSet iterator?", "user": {"login": "brutalhonesty", "id": 1609870, "node_id": "MDQ6VXNlcjE2MDk4NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1609870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brutalhonesty", "html_url": "https://github.com/brutalhonesty", "followers_url": "https://api.github.com/users/brutalhonesty/followers", "following_url": "https://api.github.com/users/brutalhonesty/following{/other_user}", "gists_url": "https://api.github.com/users/brutalhonesty/gists{/gist_id}", "starred_url": "https://api.github.com/users/brutalhonesty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brutalhonesty/subscriptions", "organizations_url": "https://api.github.com/users/brutalhonesty/orgs", "repos_url": "https://api.github.com/users/brutalhonesty/repos", "events_url": "https://api.github.com/users/brutalhonesty/events{/privacy}", "received_events_url": "https://api.github.com/users/brutalhonesty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-12T23:38:44Z", "updated_at": "2014-12-19T19:06:03Z", "closed_at": "2014-12-19T02:26:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nWould like to first start off by saying that Python is not my my strong suit so apologies in advanced for any terminology I may not be using properly or improper syntax, etc.\n\nI've been utilizing this package in conjunction with [poodle-prober](https://github.com/jeffmurphy/poodle-prober). I've forked the repo and I am attempting to add a CSV input/output option to the script. I'm having trouble with this PoC:\n\n``` python\nimport IPy\nimport csv\n\nnet = IPy.IPSet()\nwith open('test.csv', newline='') as csvfile:\n    reader = csv.reader(csvfile, delimiter=',', quotechar='\"')\n    for row in reader:\n        net.add(IPy.IP(row[0]))\n\nprint(len(net))\ncount = 0\nfor ip in net:\n    count += 1\nprint(count)\n```\n\nI'm attempting to read a CSV file which contains a list of IP addresses. The addresses are both public and private in various ranges. I believe they are being stored in the following way:\n\n``` bash\n$ file test.csv\ntest.csv: ASCII text, with CRLF line terminators\n```\n\nMy issue is that in my end result of my script, I've been tearing my hair out trying to figure out why the length of the output file differed from the input file. I've narrowed it down to the above code.\n\nThe total amount of IP addresses in the list for this test was 262.\nI noticed that `len(net)` was 262 and `count` was 229. \nIf I change the IPSet object to just a regular list and do `.append()` instead of `.add()`, then the `count` matches 262.\nIs there a reason for why this is happening? Is this a bug?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/30", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/30/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/30/events", "html_url": "https://github.com/autocracy/python-ipy/issues/30", "id": 51580965, "node_id": "MDU6SXNzdWU1MTU4MDk2NQ==", "number": 30, "title": "IP in IPset delivers different results for Linux and Mac OS", "user": {"login": "christianschmizz", "id": 88237, "node_id": "MDQ6VXNlcjg4MjM3", "avatar_url": "https://avatars0.githubusercontent.com/u/88237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christianschmizz", "html_url": "https://github.com/christianschmizz", "followers_url": "https://api.github.com/users/christianschmizz/followers", "following_url": "https://api.github.com/users/christianschmizz/following{/other_user}", "gists_url": "https://api.github.com/users/christianschmizz/gists{/gist_id}", "starred_url": "https://api.github.com/users/christianschmizz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christianschmizz/subscriptions", "organizations_url": "https://api.github.com/users/christianschmizz/orgs", "repos_url": "https://api.github.com/users/christianschmizz/repos", "events_url": "https://api.github.com/users/christianschmizz/events{/privacy}", "received_events_url": "https://api.github.com/users/christianschmizz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-10T16:45:12Z", "updated_at": "2015-04-30T05:29:34Z", "closed_at": "2015-04-30T05:29:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nfrom IPy import IP, IPSet\nreserved_ones = IPSet([\n    IP('0.0.0.0/8'),\n    IP('10.0.0.0/8'),\n    IP('100.64.0.0/10'),\n    IP('127.0.0.0/8'),\n    IP('169.254.0.0/16'),\n    IP('172.16.0.0/12'),\n    IP('192.0.0.0/24'),\n    IP('192.0.2.0/24'),\n    IP('192.88.99.0/24'),\n    IP('192.168.0.0/16'),\n    IP('198.18.0.0/15'),\n    IP('198.51.100.0/24'),\n    IP('203.0.113.0/24'),\n    IP('224.0.0.0/4'),\n    IP('240.0.0.0/4'),\n    IP('255.255.255.255/32'),\n])\n```\n\nOn \nDebian 7.7\nKernel: Linux 3.2.0-3-amd64 #1 SMP Mon Jul 23 02:45:17 UTC 2012 x86_64 GNU/Linux\n\n``` python\n>>> IP('127.0.0.1') in reserved_ones\nFalse\n```\n\nOn Mac OS 10.9.5\nDarwin 13.4.0 Darwin Kernel Version 13.4.0: Sun Aug 17 19:50:11 PDT 2014; root:xnu-2422.115.4~1/RELEASE_X86_64 x86_64\n\n``` python\n>>> IP('127.0.0.1') in reserved_ones\nTrue\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/28", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/28/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/28/events", "html_url": "https://github.com/autocracy/python-ipy/issues/28", "id": 47749117, "node_id": "MDU6SXNzdWU0Nzc0OTExNw==", "number": 28, "title": "Zone identifier", "user": {"login": "tmpapageorgiou", "id": 6268182, "node_id": "MDQ6VXNlcjYyNjgxODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6268182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmpapageorgiou", "html_url": "https://github.com/tmpapageorgiou", "followers_url": "https://api.github.com/users/tmpapageorgiou/followers", "following_url": "https://api.github.com/users/tmpapageorgiou/following{/other_user}", "gists_url": "https://api.github.com/users/tmpapageorgiou/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmpapageorgiou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmpapageorgiou/subscriptions", "organizations_url": "https://api.github.com/users/tmpapageorgiou/orgs", "repos_url": "https://api.github.com/users/tmpapageorgiou/repos", "events_url": "https://api.github.com/users/tmpapageorgiou/events{/privacy}", "received_events_url": "https://api.github.com/users/tmpapageorgiou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-04T18:42:53Z", "updated_at": "2014-12-03T23:46:32Z", "closed_at": "2014-12-03T23:46:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "IPy ip parser doesn't consider zone identifier appended to the end of the address.\n\nThis zone_id are defined in https://tools.ietf.org/html/rfc6874 and is currently returned by netfaces on python 2.7 and Ubuntu 14.04 SO. This issue causes a exception of invalid address format since apparently zone_ids are not support by IPy. I'm using IPy 0.81.\n\nHere is an exemple:\n\n```\nfrom IPy import IP\n\nIP('fe80::a00:27ff:fe4c:3982%eth0')\n```\n\n%eth0 is the zone identifier of a valid IPv6 address, but IPy returns an exception.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/24", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/24/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/24/events", "html_url": "https://github.com/autocracy/python-ipy/issues/24", "id": 40804030, "node_id": "MDU6SXNzdWU0MDgwNDAzMA==", "number": 24, "title": "__contains__ does not work correct", "user": {"login": "backbohne", "id": 5287153, "node_id": "MDQ6VXNlcjUyODcxNTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5287153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/backbohne", "html_url": "https://github.com/backbohne", "followers_url": "https://api.github.com/users/backbohne/followers", "following_url": "https://api.github.com/users/backbohne/following{/other_user}", "gists_url": "https://api.github.com/users/backbohne/gists{/gist_id}", "starred_url": "https://api.github.com/users/backbohne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/backbohne/subscriptions", "organizations_url": "https://api.github.com/users/backbohne/orgs", "repos_url": "https://api.github.com/users/backbohne/repos", "events_url": "https://api.github.com/users/backbohne/events{/privacy}", "received_events_url": "https://api.github.com/users/backbohne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-21T13:27:42Z", "updated_at": "2014-09-02T17:07:15Z", "closed_at": "2014-09-02T17:07:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, seems there is a failure within the `__contains__` methode. Have the following code:\n\n```\na = IP('80.89.214.2/31')\nb = IP('80.89.214.4/30')\nc = IP('80.89.214.8/31')\nd = IP('80.89.214.11/32')\ne = IP('80.89.214.13/32')\nf = IP('80.89.214.14/31')\ng = IP('80.89.214.16/30')\nh = IP('80.89.214.20/31')\ni = IP('80.89.214.0/31')\npool = IPSet([a, b, c, d, e, f, g, h, i])\n\nprint \"%s\" % pool\nfor x in pool:\n    print \"%s in %s\" % (x, x in pool)\nprint \"\"\nfor x in (a, b, c, d, e, f, g, h, i):\n    print \"%s in %s\" % (x, x in pool)\n```\n\nWhich produce the following output:\n\n```\nIPSet([IP('80.89.214.0/29'), IP('80.89.214.8/31'), IP('80.89.214.11'), IP('80.89.214.13'), IP('80.89.214.14/31'), IP('80.89.214.16/30'), IP('80.89.214.20/31')])\n80.89.214.0/29 in True\n80.89.214.8/31 in False\n80.89.214.11 in True\n80.89.214.13 in True\n80.89.214.14/31 in False\n80.89.214.16/30 in True\n80.89.214.20/31 in True\n\n80.89.214.2/31 in True\n80.89.214.4/30 in True\n80.89.214.8/31 in False\n80.89.214.11 in True\n80.89.214.13 in True\n80.89.214.14/31 in False\n80.89.214.16/30 in True\n80.89.214.20/31 in True\n80.89.214.0/31 in True\n```\n\nBut I would expect that all of them are part of the pool.\n\nTested with Python 2.7.6\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/20", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/20/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/20/events", "html_url": "https://github.com/autocracy/python-ipy/issues/20", "id": 31349737, "node_id": "MDU6SXNzdWUzMTM0OTczNw==", "number": 20, "title": "IPy validates invalid IPv6 address", "user": {"login": "shraddha-pandhe", "id": 5264716, "node_id": "MDQ6VXNlcjUyNjQ3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5264716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shraddha-pandhe", "html_url": "https://github.com/shraddha-pandhe", "followers_url": "https://api.github.com/users/shraddha-pandhe/followers", "following_url": "https://api.github.com/users/shraddha-pandhe/following{/other_user}", "gists_url": "https://api.github.com/users/shraddha-pandhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/shraddha-pandhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shraddha-pandhe/subscriptions", "organizations_url": "https://api.github.com/users/shraddha-pandhe/orgs", "repos_url": "https://api.github.com/users/shraddha-pandhe/repos", "events_url": "https://api.github.com/users/shraddha-pandhe/events{/privacy}", "received_events_url": "https://api.github.com/users/shraddha-pandhe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-11T18:10:37Z", "updated_at": "2014-10-06T02:13:45Z", "closed_at": "2014-10-06T02:13:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "The IPv4 part of the string is truncated, but IPy is still able to validate it.\n\n> > > import IPy\n> > > IPy.IP(\"0000:0000:0000:0000:0000:babe:220.12.22\")\n> > > IP('::babe:dc0c:1600')\n\nAfter adding the last octet, I get following output.\n\n> > > IPy.IP(\"0000:0000:0000:0000:0000:babe:220.12.22.2\")\n> > > IP('::babe:dc0c:1602')\n\nversion used: 0.81-0\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/19", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/19/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/19/events", "html_url": "https://github.com/autocracy/python-ipy/issues/19", "id": 29413893, "node_id": "MDU6SXNzdWUyOTQxMzg5Mw==", "number": 19, "title": "wrong ValueError exception: xxx has invalid prefix length (xx)", "user": {"login": "nicoshub", "id": 6621352, "node_id": "MDQ6VXNlcjY2MjEzNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6621352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoshub", "html_url": "https://github.com/nicoshub", "followers_url": "https://api.github.com/users/nicoshub/followers", "following_url": "https://api.github.com/users/nicoshub/following{/other_user}", "gists_url": "https://api.github.com/users/nicoshub/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoshub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoshub/subscriptions", "organizations_url": "https://api.github.com/users/nicoshub/orgs", "repos_url": "https://api.github.com/users/nicoshub/repos", "events_url": "https://api.github.com/users/nicoshub/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoshub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-14T06:44:10Z", "updated_at": "2014-08-19T17:13:33Z", "closed_at": "2014-08-19T17:13:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "using is like:\nipa = IP('192.168.1.1/24') or ipa = IP('192.168.1.1/255.255.255.0)\nwill generate a ValueError exception:\nValueError: IP('192.168.1.1/24') has invalid prefix length(24)\nIn fact it's prefix or sub mask is valid.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/17", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/17/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/17/events", "html_url": "https://github.com/autocracy/python-ipy/issues/17", "id": 15919707, "node_id": "MDU6SXNzdWUxNTkxOTcwNw==", "number": 17, "title": "README doctest fails X 3; ipy-0.81; py3.", "user": {"login": "idella", "id": 1655078, "node_id": "MDQ6VXNlcjE2NTUwNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1655078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idella", "html_url": "https://github.com/idella", "followers_url": "https://api.github.com/users/idella/followers", "following_url": "https://api.github.com/users/idella/following{/other_user}", "gists_url": "https://api.github.com/users/idella/gists{/gist_id}", "starred_url": "https://api.github.com/users/idella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idella/subscriptions", "organizations_url": "https://api.github.com/users/idella/orgs", "repos_url": "https://api.github.com/users/idella/repos", "events_url": "https://api.github.com/users/idella/events{/privacy}", "received_events_url": "https://api.github.com/users/idella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-06-24T11:42:39Z", "updated_at": "2014-10-06T04:01:06Z", "closed_at": "2014-10-06T04:01:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "all py3.s, no distinction.  Every which way.\n\nIPy-0.81-python3_2 $ PYTHONPATH=lib/ python3.2 test_doc.py\n\n``` python\n=== Test file: README ===\n**********************************************************************\nFile \"README\", line 145, in README\nFailed example:\n    IP('10.0.0.0/22') - IP('10.0.2.0/24')\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib64/python3.2/doctest.py\", line 1288, in __run\n        compileflags, 1), test.globs)\n      File \"<doctest README[36]>\", line 1, in <module>\n        IP('10.0.0.0/22') - IP('10.0.2.0/24')\n      File \"/mnt/gen2/TmpDir/portage/dev-python/ipy-0.81/work/IPy-0.81-python3_2/lib/IPy.py\", line 594, in __sub__\n        return _remove_subprefix(self, other)\n      File \"/mnt/gen2/TmpDir/portage/dev-python/ipy-0.81/work/IPy-0.81-python3_2/lib/IPy.py\", line 1600, in _remove_subprefix\n        IP('%s/%d' % (prefix[prefix.len() / 2], prefix._prefixlen + 1)),\n      File \"/mnt/gen2/TmpDir/portage/dev-python/ipy-0.81/work/IPy-0.81-python3_2/lib/IPy.py\", line 962, in __getitem__\n        return IP(IPint.__getitem__(self, key), ipversion=self._ipversion)\n      File \"/mnt/gen2/TmpDir/portage/dev-python/ipy-0.81/work/IPy-0.81-python3_2/lib/IPy.py\", line 614, in __getitem__\n        raise TypeError\n    TypeError\n**********************************************************************\nFile \"README\", line 153, in README\nFailed example:\n    s.discard(IP('192.168.1.2'))\nException raised:\n    Traceback (most recent call last):\n      File \"/usr/lib64/python3.2/doctest.py\", line 1288, in __run\n        compileflags, 1), test.globs)\n      File \"<doctest README[41]>\", line 1, in <module>\n        s.discard(IP('192.168.1.2'))\n      File \"/mnt/gen2/TmpDir/portage/dev-python/ipy-0.81/work/IPy-0.81-python3_2/lib/IPy.py\", line 1118, in discard\n        self.prefixes[i:i+1] = self.prefixes[i] - del_prefix\n      File \"/mnt/gen2/TmpDir/portage/dev-python/ipy-0.81/work/IPy-0.81-python3_2/lib/IPy.py\", line 594, in __sub__\n        return _remove_subprefix(self, other)\n      File \"/mnt/gen2/TmpDir/portage/dev-python/ipy-0.81/work/IPy-0.81-python3_2/lib/IPy.py\", line 1600, in _remove_subprefix\n        IP('%s/%d' % (prefix[prefix.len() / 2], prefix._prefixlen + 1)),\n      File \"/mnt/gen2/TmpDir/portage/dev-python/ipy-0.81/work/IPy-0.81-python3_2/lib/IPy.py\", line 962, in __getitem__\n        return IP(IPint.__getitem__(self, key), ipversion=self._ipversion)\n      File \"/mnt/gen2/TmpDir/portage/dev-python/ipy-0.81/work/IPy-0.81-python3_2/lib/IPy.py\", line 614, in __getitem__\n        raise TypeError\n    TypeError\n**********************************************************************\nFile \"README\", line 154, in README\nFailed example:\n    s\nExpected:\n    IPSet([IP('10.0.0.0/22'), IP('192.168.1.0/31'), IP('192.168.1.3'), IP('192.168.1.4/30')])\nGot:\n    IPSet([IP('10.0.0.0/22'), IP('192.168.1.0/29')])\n**********************************************************************\n1 items had failures:\n   3 of  43 in README\n***Test Failed*** 3 failures.\n=== Test file: test.rst ===\n=== Test IPy module ===\n=== Overall Results ===\ntotal tests 205, failures 3\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/16", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/16/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/16/events", "html_url": "https://github.com/autocracy/python-ipy/issues/16", "id": 12589329, "node_id": "MDU6SXNzdWUxMjU4OTMyOQ==", "number": 16, "title": "Incompatibility with Python 2.5", "user": {"login": "Arfrever", "id": 656294, "node_id": "MDQ6VXNlcjY1NjI5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/656294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arfrever", "html_url": "https://github.com/Arfrever", "followers_url": "https://api.github.com/users/Arfrever/followers", "following_url": "https://api.github.com/users/Arfrever/following{/other_user}", "gists_url": "https://api.github.com/users/Arfrever/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arfrever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arfrever/subscriptions", "organizations_url": "https://api.github.com/users/Arfrever/orgs", "repos_url": "https://api.github.com/users/Arfrever/repos", "events_url": "https://api.github.com/users/Arfrever/events{/privacy}", "received_events_url": "https://api.github.com/users/Arfrever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-03-28T23:18:05Z", "updated_at": "2014-10-09T19:46:39Z", "closed_at": "2014-10-06T03:49:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recently (probably 195bbf2bf9d87054966479035848183a8b719fdb) support for Python 2.5 has been broken, but README file says:\n\n```\nIPy 0.80 works on Python version 2.5 - 3.3.\n```\n\nException with Python 2.5:\n\n```\n$ python2.5 -c 'import IPy'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"IPy.py\", line 1016, in <module>\n    class IPSet(collections.MutableSet):\nAttributeError: 'module' object has no attribute 'MutableSet'\n```\n\nSupport for Python 2.5 needs to be fixed or documentation should be changed to state that Python >=2.6 is required.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/13", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/13/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/13/events", "html_url": "https://github.com/autocracy/python-ipy/issues/13", "id": 10217862, "node_id": "MDU6SXNzdWUxMDIxNzg2Mg==", "number": 13, "title": "IPv4 address expansion inconsistent with inet_aton", "user": {"login": "wolever", "id": 59575, "node_id": "MDQ6VXNlcjU5NTc1", "avatar_url": "https://avatars1.githubusercontent.com/u/59575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolever", "html_url": "https://github.com/wolever", "followers_url": "https://api.github.com/users/wolever/followers", "following_url": "https://api.github.com/users/wolever/following{/other_user}", "gists_url": "https://api.github.com/users/wolever/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolever/subscriptions", "organizations_url": "https://api.github.com/users/wolever/orgs", "repos_url": "https://api.github.com/users/wolever/repos", "events_url": "https://api.github.com/users/wolever/events{/privacy}", "received_events_url": "https://api.github.com/users/wolever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-23T01:46:47Z", "updated_at": "2013-03-27T01:59:59Z", "closed_at": "2013-03-27T01:59:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently omitted zeros in IPv4 addresses are added to the right of the provided address. This is inconsistent with [inet_aton](http://linux.die.net/man/3/inet_aton):\n\n```\n>>> import socket\n>>> from IPy import IP\n>>> IP(\"127.1\")\nIP(\"127.1.0.0\")\n>>> socket.inet_aton(\"127.1\")\n'\\x7f\\x00\\x00\\x01'\n```\n\nI would be happy to provide a patch if it would be considered for acceptance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/12", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/12/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/12/events", "html_url": "https://github.com/autocracy/python-ipy/issues/12", "id": 4599973, "node_id": "MDU6SXNzdWU0NTk5OTcz", "number": 12, "title": "Get IPv6 address by index lower than 2^32 not working", "user": {"login": "spamik", "id": 445877, "node_id": "MDQ6VXNlcjQ0NTg3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/445877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spamik", "html_url": "https://github.com/spamik", "followers_url": "https://api.github.com/users/spamik/followers", "following_url": "https://api.github.com/users/spamik/following{/other_user}", "gists_url": "https://api.github.com/users/spamik/gists{/gist_id}", "starred_url": "https://api.github.com/users/spamik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spamik/subscriptions", "organizations_url": "https://api.github.com/users/spamik/orgs", "repos_url": "https://api.github.com/users/spamik/repos", "events_url": "https://api.github.com/users/spamik/events{/privacy}", "received_events_url": "https://api.github.com/users/spamik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-05-16T08:23:25Z", "updated_at": "2012-05-17T07:51:37Z", "closed_at": "2012-05-17T07:51:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example: \n\n``` python\n>>> a = IPy.IP('::/0')\n>>> a.version()\n6\n>>> a[1]\nIP('0.0.0.1')\n>>> a[1].version()\n4\n>>> a[pow(2, 32)]\nIP('::1:0:0')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/10", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/10/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/10/events", "html_url": "https://github.com/autocracy/python-ipy/issues/10", "id": 3422555, "node_id": "MDU6SXNzdWUzNDIyNTU1", "number": 10, "title": "IPy.check_addr_prefixlen = False doesn't work", "user": {"login": "sebastiendamaye", "id": 570673, "node_id": "MDQ6VXNlcjU3MDY3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/570673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastiendamaye", "html_url": "https://github.com/sebastiendamaye", "followers_url": "https://api.github.com/users/sebastiendamaye/followers", "following_url": "https://api.github.com/users/sebastiendamaye/following{/other_user}", "gists_url": "https://api.github.com/users/sebastiendamaye/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastiendamaye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastiendamaye/subscriptions", "organizations_url": "https://api.github.com/users/sebastiendamaye/orgs", "repos_url": "https://api.github.com/users/sebastiendamaye/repos", "events_url": "https://api.github.com/users/sebastiendamaye/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastiendamaye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-02-28T17:34:01Z", "updated_at": "2012-02-28T19:46:16Z", "closed_at": "2012-02-28T17:50:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIt seems that IPy.check_addr_prefixlen = False does not work properly.\n\n> > > import IPy\n> > > IPy.check_addr_prefixlen = False\n> > > IPy.IP('80.14.164.132/255.255.255.0')\n> > >  Traceback (most recent call last):\n> > >    File \"<stdin>\", line 1, in <module>\n> > >    File \"IPy.py\", line 248, in **init**\n> > >      raise ValueError(\"%s has invalid prefix length (%s)\" % (repr(self), self._prefixlen))\n> > >  ValueError: IP('80.14.164.132/24') has invalid prefix length (24)\n> > > IPy.__version__\n> > >  '0.75'\n\nFrom my understanding, IPy.check_addr_prefixlen = False should prevent the error message from appearing, right?\nI'm running Ubuntu 11.10 with python2.7.2+\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/5", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/5/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/5/events", "html_url": "https://github.com/autocracy/python-ipy/issues/5", "id": 749705, "node_id": "MDU6SXNzdWU3NDk3MDU=", "number": 5, "title": "There is a 'small' documentation issue in IPy.PY ", "user": {"login": "d1b", "id": 133624, "node_id": "MDQ6VXNlcjEzMzYyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/133624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d1b", "html_url": "https://github.com/d1b", "followers_url": "https://api.github.com/users/d1b/followers", "following_url": "https://api.github.com/users/d1b/following{/other_user}", "gists_url": "https://api.github.com/users/d1b/gists{/gist_id}", "starred_url": "https://api.github.com/users/d1b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d1b/subscriptions", "organizations_url": "https://api.github.com/users/d1b/orgs", "repos_url": "https://api.github.com/users/d1b/repos", "events_url": "https://api.github.com/users/d1b/events{/privacy}", "received_events_url": "https://api.github.com/users/d1b/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "autocracy", "id": 87269, "node_id": "MDQ6VXNlcjg3MjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/87269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/autocracy", "html_url": "https://github.com/autocracy", "followers_url": "https://api.github.com/users/autocracy/followers", "following_url": "https://api.github.com/users/autocracy/following{/other_user}", "gists_url": "https://api.github.com/users/autocracy/gists{/gist_id}", "starred_url": "https://api.github.com/users/autocracy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/autocracy/subscriptions", "organizations_url": "https://api.github.com/users/autocracy/orgs", "repos_url": "https://api.github.com/users/autocracy/repos", "events_url": "https://api.github.com/users/autocracy/events{/privacy}", "received_events_url": "https://api.github.com/users/autocracy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "autocracy", "id": 87269, "node_id": "MDQ6VXNlcjg3MjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/87269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/autocracy", "html_url": "https://github.com/autocracy", "followers_url": "https://api.github.com/users/autocracy/followers", "following_url": "https://api.github.com/users/autocracy/following{/other_user}", "gists_url": "https://api.github.com/users/autocracy/gists{/gist_id}", "starred_url": "https://api.github.com/users/autocracy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/autocracy/subscriptions", "organizations_url": "https://api.github.com/users/autocracy/orgs", "repos_url": "https://api.github.com/users/autocracy/repos", "events_url": "https://api.github.com/users/autocracy/events{/privacy}", "received_events_url": "https://api.github.com/users/autocracy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2011-04-10T09:46:08Z", "updated_at": "2014-10-06T04:18:16Z", "closed_at": "2014-10-06T04:18:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nThere is a 'minor' documentation issue in IPy.PY \n  line:569  def __len__(self):\n\n        \"\"\"Return the length of a subnet.\n\n  Called to implement the built-in function len().\n   It breaks with IPv6 Networks. Anybody knows how to fix this.\"\"\"\n   ...\n           return int(self.len())\n```\n\nThe reason that it breaks with ipv6 is that **len**() _must_ return an integer. Calling int() before returning the result is not     enough. I do not think it would be desirable to alter the current behaviour. Perhaps a note could be added to the     documentation about the fact that len(IPy.IP(...) ) for ipv6 ranges may result in an exception being raised and that     IPy.IP(..).len() should be used instead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/4", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/4/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/4/events", "html_url": "https://github.com/autocracy/python-ipy/issues/4", "id": 701966, "node_id": "MDU6SXNzdWU3MDE5NjY=", "number": 4, "title": "IP(\"::/0\") gives a netmask of 0.0.0.0 rather then 0:0:0:0:0:0:0:0", "user": {"login": "mdomsch", "id": 689066, "node_id": "MDQ6VXNlcjY4OTA2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/689066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdomsch", "html_url": "https://github.com/mdomsch", "followers_url": "https://api.github.com/users/mdomsch/followers", "following_url": "https://api.github.com/users/mdomsch/following{/other_user}", "gists_url": "https://api.github.com/users/mdomsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdomsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdomsch/subscriptions", "organizations_url": "https://api.github.com/users/mdomsch/orgs", "repos_url": "https://api.github.com/users/mdomsch/repos", "events_url": "https://api.github.com/users/mdomsch/events{/privacy}", "received_events_url": "https://api.github.com/users/mdomsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2011-03-24T20:35:28Z", "updated_at": "2011-04-12T12:01:51Z", "closed_at": "2011-03-24T22:37:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://bugzilla.redhat.com/show_bug.cgi?id=690625\nReported by: Daniel Walsh 2011-03-24 16:23:48 EDT\n# python\n\nPython 2.7.1 (r271:86832, Feb  9 2011, 17:56:14) \n[GCC 4.6.0 20110205 (Red Hat 4.6.0-0.6)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > from IPy import IP\n> > > x=IP(\"::/0\")\n> > > print x.netmask()\n> > > 0.0.0.0\n\nrpm -q python-IPy\npython-IPy-0.70-3.fc15.noarch\n\nReproduced with 0.74, git f6d35f30f8c7f87bd146f0a26052bd0e5bcf90b8\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/3", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/3/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/3/events", "html_url": "https://github.com/autocracy/python-ipy/issues/3", "id": 496509, "node_id": "MDU6SXNzdWU0OTY1MDk=", "number": 3, "title": "IPv4-mapped IPv6 address reverseName() failure", "user": {"login": "akvadrako", "id": 184545, "node_id": "MDQ6VXNlcjE4NDU0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/184545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akvadrako", "html_url": "https://github.com/akvadrako", "followers_url": "https://api.github.com/users/akvadrako/followers", "following_url": "https://api.github.com/users/akvadrako/following{/other_user}", "gists_url": "https://api.github.com/users/akvadrako/gists{/gist_id}", "starred_url": "https://api.github.com/users/akvadrako/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akvadrako/subscriptions", "organizations_url": "https://api.github.com/users/akvadrako/orgs", "repos_url": "https://api.github.com/users/akvadrako/repos", "events_url": "https://api.github.com/users/akvadrako/events{/privacy}", "received_events_url": "https://api.github.com/users/akvadrako/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "autocracy", "id": 87269, "node_id": "MDQ6VXNlcjg3MjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/87269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/autocracy", "html_url": "https://github.com/autocracy", "followers_url": "https://api.github.com/users/autocracy/followers", "following_url": "https://api.github.com/users/autocracy/following{/other_user}", "gists_url": "https://api.github.com/users/autocracy/gists{/gist_id}", "starred_url": "https://api.github.com/users/autocracy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/autocracy/subscriptions", "organizations_url": "https://api.github.com/users/autocracy/orgs", "repos_url": "https://api.github.com/users/autocracy/repos", "events_url": "https://api.github.com/users/autocracy/events{/privacy}", "received_events_url": "https://api.github.com/users/autocracy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "autocracy", "id": 87269, "node_id": "MDQ6VXNlcjg3MjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/87269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/autocracy", "html_url": "https://github.com/autocracy", "followers_url": "https://api.github.com/users/autocracy/followers", "following_url": "https://api.github.com/users/autocracy/following{/other_user}", "gists_url": "https://api.github.com/users/autocracy/gists{/gist_id}", "starred_url": "https://api.github.com/users/autocracy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/autocracy/subscriptions", "organizations_url": "https://api.github.com/users/autocracy/orgs", "repos_url": "https://api.github.com/users/autocracy/repos", "events_url": "https://api.github.com/users/autocracy/events{/privacy}", "received_events_url": "https://api.github.com/users/autocracy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2010-12-29T10:15:04Z", "updated_at": "2013-03-27T03:01:54Z", "closed_at": "2013-03-27T01:58:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n[~/py/dns]|19> IP('::ffff:193.0.1.208').reverseName()\n          <19> '0.d.1.0.0.0.1.c.f.f.f.f.ip6.arpa.'\n```\n\nThe correct output could be:\n\n```\n0.d.1.0.0.0.1.c.f.f.f.f.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa.\n```\n\nHowever, 0.ip6.arpa is never served. I would prefer IPv4-mapped addresses to be converted to IPv4 in-addr.arpa lookups:\n\n```\n208.1.0.193.in-addr.arpa.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/autocracy/python-ipy/issues/2", "repository_url": "https://api.github.com/repos/autocracy/python-ipy", "labels_url": "https://api.github.com/repos/autocracy/python-ipy/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/autocracy/python-ipy/issues/2/comments", "events_url": "https://api.github.com/repos/autocracy/python-ipy/issues/2/events", "html_url": "https://github.com/autocracy/python-ipy/issues/2", "id": 459398, "node_id": "MDU6SXNzdWU0NTkzOTg=", "number": 2, "title": "Exception raised when comparing an IP instance with None", "user": {"login": "jonozzz", "id": 250343, "node_id": "MDQ6VXNlcjI1MDM0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/250343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonozzz", "html_url": "https://github.com/jonozzz", "followers_url": "https://api.github.com/users/jonozzz/followers", "following_url": "https://api.github.com/users/jonozzz/following{/other_user}", "gists_url": "https://api.github.com/users/jonozzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonozzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonozzz/subscriptions", "organizations_url": "https://api.github.com/users/jonozzz/orgs", "repos_url": "https://api.github.com/users/jonozzz/repos", "events_url": "https://api.github.com/users/jonozzz/events{/privacy}", "received_events_url": "https://api.github.com/users/jonozzz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2010-12-06T22:27:32Z", "updated_at": "2013-03-26T22:12:59Z", "closed_at": "2013-03-26T22:12:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "File \"/usr/lib64/python2.6/site-packages/IPy-0.71-py2.6.egg/IPy.py\" in **cmp**\n1.         if self._prefixlen < other.prefixlen():\n\nGenerally anything except None to None is different. So comparing any IP instance with None should return False.\n\nPS: The line number might have something to do with this issue as well... :-/\n", "performed_via_github_app": null, "score": 1.0}]}