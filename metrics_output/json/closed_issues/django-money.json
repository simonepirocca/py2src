{"total_count": 225, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/django-money/django-money/issues/560", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/560/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/560/events", "html_url": "https://github.com/django-money/django-money/issues/560", "id": 661579283, "node_id": "MDU6SXNzdWU2NjE1NzkyODM=", "number": 560, "title": "Incorporating the currency field in DRF?", "user": {"login": "neowenshun", "id": 48677212, "node_id": "MDQ6VXNlcjQ4Njc3MjEy", "avatar_url": "https://avatars1.githubusercontent.com/u/48677212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neowenshun", "html_url": "https://github.com/neowenshun", "followers_url": "https://api.github.com/users/neowenshun/followers", "following_url": "https://api.github.com/users/neowenshun/following{/other_user}", "gists_url": "https://api.github.com/users/neowenshun/gists{/gist_id}", "starred_url": "https://api.github.com/users/neowenshun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neowenshun/subscriptions", "organizations_url": "https://api.github.com/users/neowenshun/orgs", "repos_url": "https://api.github.com/users/neowenshun/repos", "events_url": "https://api.github.com/users/neowenshun/events{/privacy}", "received_events_url": "https://api.github.com/users/neowenshun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T09:16:42Z", "updated_at": "2020-07-22T19:16:17Z", "closed_at": "2020-07-22T19:16:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello , i wish to create a form field that would allow the users to select the available currencies , is there a place where i can tap into the list of currencies available when using it in  DRF?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/559", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/559/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/559/events", "html_url": "https://github.com/django-money/django-money/issues/559", "id": 654079741, "node_id": "MDU6SXNzdWU2NTQwNzk3NDE=", "number": 559, "title": "Feature request. Returning only currency with the current localization", "user": {"login": "sowinski", "id": 1528746, "node_id": "MDQ6VXNlcjE1Mjg3NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1528746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sowinski", "html_url": "https://github.com/sowinski", "followers_url": "https://api.github.com/users/sowinski/followers", "following_url": "https://api.github.com/users/sowinski/following{/other_user}", "gists_url": "https://api.github.com/users/sowinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sowinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sowinski/subscriptions", "organizations_url": "https://api.github.com/users/sowinski/orgs", "repos_url": "https://api.github.com/users/sowinski/repos", "events_url": "https://api.github.com/users/sowinski/events{/privacy}", "received_events_url": "https://api.github.com/users/sowinski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-09T13:54:10Z", "updated_at": "2020-07-10T15:29:43Z", "closed_at": "2020-07-10T15:29:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nit would be nice if we could return the currency in a localized form.\r\n\r\nFor example\r\n'EUR' would be transformed to '\u20ac' \r\n'USD' would be transformed to '$' depending on the current local", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/558", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/558/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/558/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/558/events", "html_url": "https://github.com/django-money/django-money/issues/558", "id": 654042732, "node_id": "MDU6SXNzdWU2NTQwNDI3MzI=", "number": 558, "title": "Swiss currency output is wrong.", "user": {"login": "sowinski", "id": 1528746, "node_id": "MDQ6VXNlcjE1Mjg3NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1528746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sowinski", "html_url": "https://github.com/sowinski", "followers_url": "https://api.github.com/users/sowinski/followers", "following_url": "https://api.github.com/users/sowinski/following{/other_user}", "gists_url": "https://api.github.com/users/sowinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sowinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sowinski/subscriptions", "organizations_url": "https://api.github.com/users/sowinski/orgs", "repos_url": "https://api.github.com/users/sowinski/repos", "events_url": "https://api.github.com/users/sowinski/events{/privacy}", "received_events_url": "https://api.github.com/users/sowinski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-09T13:01:51Z", "updated_at": "2020-07-10T15:27:52Z", "closed_at": "2020-07-10T15:27:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nthe output for Swiss currency is not correct. \r\n\r\nCurrently I get this:\r\n`Fr.80.00`\r\n\r\nBut correct would be:\r\n`CHF 80.00`\r\n\r\nOr\r\n\r\n`80.00 CHF`\r\n\r\nHow can I write a workaround for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/548", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/548/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/548/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/548/events", "html_url": "https://github.com/django-money/django-money/issues/548", "id": 611323031, "node_id": "MDU6SXNzdWU2MTEzMjMwMzE=", "number": 548, "title": "Money Field in SQLite and PostgreSQL", "user": {"login": "aladinbenz", "id": 56277363, "node_id": "MDQ6VXNlcjU2Mjc3MzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/56277363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aladinbenz", "html_url": "https://github.com/aladinbenz", "followers_url": "https://api.github.com/users/aladinbenz/followers", "following_url": "https://api.github.com/users/aladinbenz/following{/other_user}", "gists_url": "https://api.github.com/users/aladinbenz/gists{/gist_id}", "starred_url": "https://api.github.com/users/aladinbenz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aladinbenz/subscriptions", "organizations_url": "https://api.github.com/users/aladinbenz/orgs", "repos_url": "https://api.github.com/users/aladinbenz/repos", "events_url": "https://api.github.com/users/aladinbenz/events{/privacy}", "received_events_url": "https://api.github.com/users/aladinbenz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643098139, "node_id": "MDU6TGFiZWw2NDMwOTgxMzk=", "url": "https://api.github.com/repos/django-money/django-money/labels/question", "name": "question", "color": "CC317C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-03T03:25:22Z", "updated_at": "2020-05-03T10:26:02Z", "closed_at": "2020-05-03T07:45:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI'm using Django-money to track changes history of money field in both templates and admin.\r\nWhen using Django-money in dev with SQLite everything seems to work just fine.\r\n**TEMPLATE:**\r\n<img width=\"537\" alt=\"template\" src=\"https://user-images.githubusercontent.com/56277363/80897667-85576a80-8cfb-11ea-9b54-5707bf2b54e7.png\">\r\n**ADMIN:**\r\n<img width=\"188\" alt=\"admin\" src=\"https://user-images.githubusercontent.com/56277363/80897672-92745980-8cfb-11ea-9041-86140e759444.png\">\r\n\r\nBut after deploying my app to Heroku and although I have identical settings, currency isn't shown in templates and when I open admin history I get the ValidationError like below\r\n**TEMPLATE:**\r\n<img width=\"533\" alt=\"template - error\" src=\"https://user-images.githubusercontent.com/56277363/80897701-f434c380-8cfb-11ea-9f15-2b4188ff4ba7.png\">\r\n**ADMIN:**\r\n<img width=\"772\" alt=\"admin - error\" src=\"https://user-images.githubusercontent.com/56277363/80897871-a7ea8300-8cfd-11ea-95b0-07990936f2b5.png\">\r\nI've tried every workaround I could think of but nothing. \r\nI'm using this configuration:\r\n```\r\ntotal = MoneyField(max_digits=14, decimal_places=0, default=0, default_currency='EUR', blank=False)\r\n\r\nCURRENCIES = ('EUR', 'GBP')\r\nCURRENCY_CHOICES = [('EUR','EUR'), ('GBP','GBP')]\r\n\r\nLANGUAGE_CODE = 'en-us'\r\nTIME_ZONE = 'UTC'\r\nUSE_I18N = True\r\nUSE_L10N = True\r\nUSE_TZ = True\r\n\r\nimport moneyed\r\nfrom moneyed.localization import _FORMATTER, DEFAULT\r\n\r\n_FORMATTER.add_sign_definition('DEFAULT', moneyed.EUR, suffix=' (EUR)')\r\n_FORMATTER.add_sign_definition('DEFAULT', moneyed.GBP, suffix=' (GBP)')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/543", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/543/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/543/events", "html_url": "https://github.com/django-money/django-money/issues/543", "id": 587776432, "node_id": "MDU6SXNzdWU1ODc3NzY0MzI=", "number": 543, "title": "How would I set up a UniqueConstraint for a MoneyField?", "user": {"login": "lggwettmann", "id": 4527829, "node_id": "MDQ6VXNlcjQ1Mjc4Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4527829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lggwettmann", "html_url": "https://github.com/lggwettmann", "followers_url": "https://api.github.com/users/lggwettmann/followers", "following_url": "https://api.github.com/users/lggwettmann/following{/other_user}", "gists_url": "https://api.github.com/users/lggwettmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/lggwettmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lggwettmann/subscriptions", "organizations_url": "https://api.github.com/users/lggwettmann/orgs", "repos_url": "https://api.github.com/users/lggwettmann/repos", "events_url": "https://api.github.com/users/lggwettmann/events{/privacy}", "received_events_url": "https://api.github.com/users/lggwettmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-25T15:21:42Z", "updated_at": "2020-03-26T10:37:02Z", "closed_at": "2020-03-26T10:37:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\n\r\nif I set the MoneyField as unique or set up a UniqueConstraint for it, Django only regards the amount, but not the currency. So USD 10 and EUR 10 are seen as the same even though they should not be.\r\n\r\nHow would I go about fixing this?\r\n\r\nKind Regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/542", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/542/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/542/events", "html_url": "https://github.com/django-money/django-money/issues/542", "id": 570790069, "node_id": "MDU6SXNzdWU1NzA3OTAwNjk=", "number": 542, "title": "Wrong value after .refresh_from_db() in pytest", "user": {"login": "matveyvarg", "id": 6941826, "node_id": "MDQ6VXNlcjY5NDE4MjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6941826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matveyvarg", "html_url": "https://github.com/matveyvarg", "followers_url": "https://api.github.com/users/matveyvarg/followers", "following_url": "https://api.github.com/users/matveyvarg/following{/other_user}", "gists_url": "https://api.github.com/users/matveyvarg/gists{/gist_id}", "starred_url": "https://api.github.com/users/matveyvarg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matveyvarg/subscriptions", "organizations_url": "https://api.github.com/users/matveyvarg/orgs", "repos_url": "https://api.github.com/users/matveyvarg/repos", "events_url": "https://api.github.com/users/matveyvarg/events{/privacy}", "received_events_url": "https://api.github.com/users/matveyvarg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-25T19:44:04Z", "updated_at": "2020-02-25T20:48:15Z", "closed_at": "2020-02-25T20:37:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a model \"User\" with \"balance\" field:\r\n```python\r\nclass User(AbstractBaseUser, PermissionsMixin):`\r\n      balance = MoneyField(max_digits=14, decimal_places=2, default_currency='USD', null=True,default=0)\r\n```\r\n\r\nI also have test such as:\r\n```python\r\n def test_subscription_pending(self, django_user_model: settings.AUTH_USER_MODEL):\r\n        USER_BALANCE = 12\r\n        new_user = django_user_model.objects.create_user(\r\n            email=self.USER_EMAIL,\r\n            password=self.USER_PASS,\r\n            balance=USER_BALANCE\r\n        )\r\n        user.refresh_from_db()\r\n        assert user.balance == USER_BALANCE\r\n```\r\nwhich fails with:\r\n```\r\n >       assert user.balance == USER_BALANCE\r\n E       assert <Money: 6136.00 USD> == 12\r\n```\r\nI'm sure, that is wrong behaviour.\r\n\r\nPython - 3.8\r\nDjango - 2.2.7\r\ndjango-money - 1.0\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/540", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/540/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/540/events", "html_url": "https://github.com/django-money/django-money/issues/540", "id": 564505251, "node_id": "MDU6SXNzdWU1NjQ1MDUyNTE=", "number": 540, "title": "Object of type Money is not JSON serializable when define natural key method for related model with MoneyField", "user": {"login": "makmary170", "id": 15144415, "node_id": "MDQ6VXNlcjE1MTQ0NDE1", "avatar_url": "https://avatars3.githubusercontent.com/u/15144415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/makmary170", "html_url": "https://github.com/makmary170", "followers_url": "https://api.github.com/users/makmary170/followers", "following_url": "https://api.github.com/users/makmary170/following{/other_user}", "gists_url": "https://api.github.com/users/makmary170/gists{/gist_id}", "starred_url": "https://api.github.com/users/makmary170/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/makmary170/subscriptions", "organizations_url": "https://api.github.com/users/makmary170/orgs", "repos_url": "https://api.github.com/users/makmary170/repos", "events_url": "https://api.github.com/users/makmary170/events{/privacy}", "received_events_url": "https://api.github.com/users/makmary170/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-13T07:59:52Z", "updated_at": "2020-02-13T10:04:28Z", "closed_at": "2020-02-13T10:04:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, i have this problem:\r\n\r\nI have two models, one of them have MoneyField, the other have FK to it.\r\nWhen i define method `natural_key` for related model with MoneyField for fixtures i have the error:\r\n`CommandError: Unable to serialize database: Object of type Money is not JSON serializable`\r\n\r\nThe example of the models is bellow:\r\n\r\n```\r\nfrom django.db import models\r\nfrom djmoney.models.fields import MoneyField\r\n\r\n\r\nclass A(models.Model):\r\n    summary = MoneyField(max_digits=14, decimal_places=2)\r\n\r\n    def natural_key(self):\r\n        return (self.summary,)\r\n\r\n\r\nclass B(models.Model):\r\n    name = models.CharField(max_length=50)\r\n    a_ref = models.ForeignKey(A, on_delete=models.CASCADE)\r\n\r\n    def natural_key(self):\r\n        return (self.name,) + self.a_ref.natural_key()\r\n    natural_key.dependencies = ['test_app.a']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/538", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/538/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/538/events", "html_url": "https://github.com/django-money/django-money/issues/538", "id": 551828268, "node_id": "MDU6SXNzdWU1NTE4MjgyNjg=", "number": 538, "title": "Way to stop currency choice being shown", "user": {"login": "RaddishIoW", "id": 7757254, "node_id": "MDQ6VXNlcjc3NTcyNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7757254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RaddishIoW", "html_url": "https://github.com/RaddishIoW", "followers_url": "https://api.github.com/users/RaddishIoW/followers", "following_url": "https://api.github.com/users/RaddishIoW/following{/other_user}", "gists_url": "https://api.github.com/users/RaddishIoW/gists{/gist_id}", "starred_url": "https://api.github.com/users/RaddishIoW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RaddishIoW/subscriptions", "organizations_url": "https://api.github.com/users/RaddishIoW/orgs", "repos_url": "https://api.github.com/users/RaddishIoW/repos", "events_url": "https://api.github.com/users/RaddishIoW/events{/privacy}", "received_events_url": "https://api.github.com/users/RaddishIoW/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-18T21:43:21Z", "updated_at": "2020-01-19T12:12:08Z", "closed_at": "2020-01-19T12:12:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to stop the currency choices input being shown if there is only one allowed currency? I don't need to display this input on my form, but I can't seem to find a way to prevent it being shown.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/537", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/537/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/537/events", "html_url": "https://github.com/django-money/django-money/issues/537", "id": 539773370, "node_id": "MDU6SXNzdWU1Mzk3NzMzNzA=", "number": 537, "title": "Serializer don't use max_digits of MoneyField causing InvalidOperation during the serialization:", "user": {"login": "realnot", "id": 2405675, "node_id": "MDQ6VXNlcjI0MDU2NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2405675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realnot", "html_url": "https://github.com/realnot", "followers_url": "https://api.github.com/users/realnot/followers", "following_url": "https://api.github.com/users/realnot/following{/other_user}", "gists_url": "https://api.github.com/users/realnot/gists{/gist_id}", "starred_url": "https://api.github.com/users/realnot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realnot/subscriptions", "organizations_url": "https://api.github.com/users/realnot/orgs", "repos_url": "https://api.github.com/users/realnot/repos", "events_url": "https://api.github.com/users/realnot/events{/privacy}", "received_events_url": "https://api.github.com/users/realnot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-18T16:04:11Z", "updated_at": "2019-12-18T16:07:56Z", "closed_at": "2019-12-18T16:07:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/520", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/520/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/520/events", "html_url": "https://github.com/django-money/django-money/issues/520", "id": 511222483, "node_id": "MDU6SXNzdWU1MTEyMjI0ODM=", "number": 520, "title": "Why is ROUND_HALF_EVEN the default everywhere?", "user": {"login": "denizdogan", "id": 50928, "node_id": "MDQ6VXNlcjUwOTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/50928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denizdogan", "html_url": "https://github.com/denizdogan", "followers_url": "https://api.github.com/users/denizdogan/followers", "following_url": "https://api.github.com/users/denizdogan/following{/other_user}", "gists_url": "https://api.github.com/users/denizdogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/denizdogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denizdogan/subscriptions", "organizations_url": "https://api.github.com/users/denizdogan/orgs", "repos_url": "https://api.github.com/users/denizdogan/repos", "events_url": "https://api.github.com/users/denizdogan/events{/privacy}", "received_events_url": "https://api.github.com/users/denizdogan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-23T10:15:21Z", "updated_at": "2019-10-23T11:07:30Z", "closed_at": "2019-10-23T11:07:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why is `ROUND_HALF_EVEN` used across all the formatting definitions? It would seem to me like `decimal.ROUND_HALF_UP` is the proper one to use?\r\n\r\n```\r\nIn [40]: Decimal(\"2953.125\").quantize(Decimal(\"1.00\"), decimal.ROUND_HALF_EVEN)\r\nOut[40]: Decimal('2953.12')\r\n\r\nIn [41]: Decimal(\"2953.125\").quantize(Decimal(\"1.00\"), decimal.ROUND_HALF_UP)\r\nOut[41]: Decimal('2953.13')\r\n```\r\n\r\nI'm from Sweden. Here it should definitely be 2953.15, but it's probably different for other currencies?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/514", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/514/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/514/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/514/events", "html_url": "https://github.com/django-money/django-money/issues/514", "id": 506501845, "node_id": "MDU6SXNzdWU1MDY1MDE4NDU=", "number": 514, "title": "Add Django 3 support, remove Python 2.7 support", "user": {"login": "Hispar", "id": 1157972, "node_id": "MDQ6VXNlcjExNTc5NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1157972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hispar", "html_url": "https://github.com/Hispar", "followers_url": "https://api.github.com/users/Hispar/followers", "following_url": "https://api.github.com/users/Hispar/following{/other_user}", "gists_url": "https://api.github.com/users/Hispar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hispar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hispar/subscriptions", "organizations_url": "https://api.github.com/users/Hispar/orgs", "repos_url": "https://api.github.com/users/Hispar/repos", "events_url": "https://api.github.com/users/Hispar/events{/privacy}", "received_events_url": "https://api.github.com/users/Hispar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-money/django-money/milestones/7", "html_url": "https://github.com/django-money/django-money/milestone/7", "labels_url": "https://api.github.com/repos/django-money/django-money/milestones/7/labels", "id": 4228022, "node_id": "MDk6TWlsZXN0b25lNDIyODAyMg==", "number": 7, "title": "1.0", "description": "", "creator": {"login": "benjaoming", "id": 374612, "node_id": "MDQ6VXNlcjM3NDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/374612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaoming", "html_url": "https://github.com/benjaoming", "followers_url": "https://api.github.com/users/benjaoming/followers", "following_url": "https://api.github.com/users/benjaoming/following{/other_user}", "gists_url": "https://api.github.com/users/benjaoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaoming/subscriptions", "organizations_url": "https://api.github.com/users/benjaoming/orgs", "repos_url": "https://api.github.com/users/benjaoming/repos", "events_url": "https://api.github.com/users/benjaoming/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaoming/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2019-04-14T08:29:46Z", "updated_at": "2019-11-08T14:35:38Z", "due_on": null, "closed_at": "2019-11-08T14:35:38Z"}, "comments": 4, "created_at": "2019-10-14T08:05:28Z", "updated_at": "2019-10-15T12:04:43Z", "closed_at": "2019-10-15T12:04:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Better to add `six` as a dependency for compatibility.\r\n\r\nhttps://docs.djangoproject.com/en/dev/releases/3.0/#removed-private-python-2-compatibility-apis", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/513", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/513/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/513/events", "html_url": "https://github.com/django-money/django-money/issues/513", "id": 505199063, "node_id": "MDU6SXNzdWU1MDUxOTkwNjM=", "number": 513, "title": "DRF InvalidOperation on GET", "user": {"login": "jpic", "id": 94636, "node_id": "MDQ6VXNlcjk0NjM2", "avatar_url": "https://avatars3.githubusercontent.com/u/94636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpic", "html_url": "https://github.com/jpic", "followers_url": "https://api.github.com/users/jpic/followers", "following_url": "https://api.github.com/users/jpic/following{/other_user}", "gists_url": "https://api.github.com/users/jpic/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpic/subscriptions", "organizations_url": "https://api.github.com/users/jpic/orgs", "repos_url": "https://api.github.com/users/jpic/repos", "events_url": "https://api.github.com/users/jpic/events{/privacy}", "received_events_url": "https://api.github.com/users/jpic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-10T11:08:31Z", "updated_at": "2019-10-10T11:20:51Z", "closed_at": "2019-10-10T11:20:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to GET on a viewset for a model that has serializers with MoneyField, an InvalidOperation is raised:\r\n\r\n```\r\nTraceback:\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\r\n  34.             response = get_response(request)\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/django/core/handlers/base.py\" in _get_response\r\n  115.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/django/core/handlers/base.py\" in _get_response\r\n  113.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\r\n  54.         return view_func(*args, **kwargs)\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/viewsets.py\" in view\r\n  114.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/views.py\" in dispatch\r\n  505.             response = self.handle_exception(exc)\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/views.py\" in handle_exception\r\n  465.             self.raise_uncaught_exception(exc)\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/views.py\" in raise_uncaught_exception\r\n  476.         raise exc\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/views.py\" in dispatch\r\n  502.             response = handler(request, *args, **kwargs)\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/mixins.py\" in list\r\n  46.         return Response(serializer.data)\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/serializers.py\" in data\r\n  757.         ret = super().data\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/serializers.py\" in data\r\n  261.                 self._data = self.to_representation(self.instance)\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/serializers.py\" in to_representation\r\n  675.             self.child.to_representation(item) for item in iterable\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/serializers.py\" in <listcomp>\r\n  675.             self.child.to_representation(item) for item in iterable\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/serializers.py\" in to_representation\r\n  526.                 ret[field.field_name] = field.to_representation(attribute)\r\n\r\nFile \"/home/jpic/work/equisafe/equisafe-project/backend/env/lib/python3.7/site-packages/rest_framework/fields.py\" in to_representation\r\n  1115.             value = decimal.Decimal(str(value).strip())\r\n\r\nFile \"/usr/lib64/python3.7/_pydecimal.py\" in __new__\r\n  551.                                 \"Invalid literal for Decimal: %r\" % value)\r\n\r\nFile \"/usr/lib64/python3.7/_pydecimal.py\" in _raise_error\r\n  4040.         raise error(explanation)\r\n\r\nException Type: InvalidOperation at /api/capital-increase/\r\nException Value: Invalid literal for Decimal: '1,000,000.00 \u20ac'\r\n```\r\n\r\nAny clue welcome !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/512", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/512/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/512/events", "html_url": "https://github.com/django-money/django-money/issues/512", "id": 504532835, "node_id": "MDU6SXNzdWU1MDQ1MzI4MzU=", "number": 512, "title": "Converting money instance table for rest framework to user default currency ", "user": {"login": "kimutaiRop", "id": 33074564, "node_id": "MDQ6VXNlcjMzMDc0NTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/33074564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kimutaiRop", "html_url": "https://github.com/kimutaiRop", "followers_url": "https://api.github.com/users/kimutaiRop/followers", "following_url": "https://api.github.com/users/kimutaiRop/following{/other_user}", "gists_url": "https://api.github.com/users/kimutaiRop/gists{/gist_id}", "starred_url": "https://api.github.com/users/kimutaiRop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kimutaiRop/subscriptions", "organizations_url": "https://api.github.com/users/kimutaiRop/orgs", "repos_url": "https://api.github.com/users/kimutaiRop/repos", "events_url": "https://api.github.com/users/kimutaiRop/events{/privacy}", "received_events_url": "https://api.github.com/users/kimutaiRop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-09T09:39:58Z", "updated_at": "2019-10-09T18:42:02Z", "closed_at": "2019-10-09T18:42:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a table that has the money instance and different users can always choose the currency they want to use, I was wondering if there is a way that the money field amount can always be sent to a user with the currency he/she wishes to see,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/511", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/511/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/511/events", "html_url": "https://github.com/django-money/django-money/issues/511", "id": 501070788, "node_id": "MDU6SXNzdWU1MDEwNzA3ODg=", "number": 511, "title": "Tox env for pypy2.7 is misconfigured thus tests fail", "user": {"login": "atleta", "id": 6267837, "node_id": "MDQ6VXNlcjYyNjc4Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6267837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atleta", "html_url": "https://github.com/atleta", "followers_url": "https://api.github.com/users/atleta/followers", "following_url": "https://api.github.com/users/atleta/following{/other_user}", "gists_url": "https://api.github.com/users/atleta/gists{/gist_id}", "starred_url": "https://api.github.com/users/atleta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atleta/subscriptions", "organizations_url": "https://api.github.com/users/atleta/orgs", "repos_url": "https://api.github.com/users/atleta/repos", "events_url": "https://api.github.com/users/atleta/events{/privacy}", "received_events_url": "https://api.github.com/users/atleta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-01T18:32:00Z", "updated_at": "2019-10-28T14:56:07Z", "closed_at": "2019-10-28T14:56:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I did a small fix and created a pull request but the tests failed (see https://travis-ci.org/django-money/django-money/jobs/588676965 ), because one of the tox envs (pypy2.7-5.8.0) is misconfigured. It tries to pull this file, which is not there: https://storage.googleapis.com/travis-ci-language-archives/python/binaries/ubuntu/16.04/x86_64/pypy2.7-5.8.0.tar.bz2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/507", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/507/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/507/events", "html_url": "https://github.com/django-money/django-money/issues/507", "id": 474897474, "node_id": "MDU6SXNzdWU0NzQ4OTc0NzQ=", "number": 507, "title": "Bulk update on models containing MoneyField gives error", "user": {"login": "gplhegde", "id": 4920110, "node_id": "MDQ6VXNlcjQ5MjAxMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4920110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gplhegde", "html_url": "https://github.com/gplhegde", "followers_url": "https://api.github.com/users/gplhegde/followers", "following_url": "https://api.github.com/users/gplhegde/following{/other_user}", "gists_url": "https://api.github.com/users/gplhegde/gists{/gist_id}", "starred_url": "https://api.github.com/users/gplhegde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gplhegde/subscriptions", "organizations_url": "https://api.github.com/users/gplhegde/orgs", "repos_url": "https://api.github.com/users/gplhegde/repos", "events_url": "https://api.github.com/users/gplhegde/events{/privacy}", "received_events_url": "https://api.github.com/users/gplhegde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-31T01:57:04Z", "updated_at": "2019-12-20T16:20:45Z", "closed_at": "2019-12-20T16:20:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to perform bulk updates on the django model that contains MoneyField. This is throwing the below error. object.save() works fine. Anyone encountered this issue? Any possible fixes?\r\n```\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/Users/ghegde/.env/prosper-Kpl-5Ztk/lib/python3.7/site-packages/django/db/models/query.py\", line 525, in bulk_update\r\n    self.filter(pk__in=pks).update(**update_kwargs)\r\n  File \"/Users/ghegde/.env/prosper-Kpl-5Ztk/lib/python3.7/site-packages/djmoney/models/managers.py\", line 205, in wrapper\r\n    args, kwargs = _expand_money_kwargs(model, args, kwargs, exclusions)\r\n  File \"/Users/ghegde/.env/prosper-Kpl-5Ztk/lib/python3.7/site-packages/djmoney/models/managers.py\", line 147, in _expand_money_kwargs\r\n    value = prepare_expression(value)\r\n  File \"/Users/ghegde/.env/prosper-Kpl-5Ztk/lib/python3.7/site-packages/djmoney/utils.py\", line 33, in prepare_expression\r\n    if isinstance(expr.rhs, F):\r\nAttributeError: 'Cast' object has no attribute 'rhs'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/504", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/504/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/504/events", "html_url": "https://github.com/django-money/django-money/issues/504", "id": 460909312, "node_id": "MDU6SXNzdWU0NjA5MDkzMTI=", "number": 504, "title": "Relase 0.15 is missing in changelog on RTD", "user": {"login": "washeck", "id": 264454, "node_id": "MDQ6VXNlcjI2NDQ1NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/264454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/washeck", "html_url": "https://github.com/washeck", "followers_url": "https://api.github.com/users/washeck/followers", "following_url": "https://api.github.com/users/washeck/following{/other_user}", "gists_url": "https://api.github.com/users/washeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/washeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/washeck/subscriptions", "organizations_url": "https://api.github.com/users/washeck/orgs", "repos_url": "https://api.github.com/users/washeck/repos", "events_url": "https://api.github.com/users/washeck/events{/privacy}", "received_events_url": "https://api.github.com/users/washeck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-26T11:14:17Z", "updated_at": "2019-08-22T17:49:00Z", "closed_at": "2019-08-22T17:48:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://django-money.readthedocs.io/en/latest/changes.html , 0.15 is not listed there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/496", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/496/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/496/events", "html_url": "https://github.com/django-money/django-money/issues/496", "id": 448576190, "node_id": "MDU6SXNzdWU0NDg1NzYxOTA=", "number": 496, "title": "Release 0.15?", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-26T15:05:32Z", "updated_at": "2019-05-30T19:26:03Z", "closed_at": "2019-05-30T19:26:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hej @benjaoming !\r\n\r\nWhat do you think about making a new release? \r\n\r\nWe have quite a lot of changes now and we didn't remove support for old Django versions (1.8 & 2.0) yet. Would it make sense to have 0.15.x branch as the last to support these versions? and then continue with Dropping 1.8 & 2.0 + making some more refactorings with possible backward-incompatible changes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/493", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/493/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/493/events", "html_url": "https://github.com/django-money/django-money/issues/493", "id": 446817906, "node_id": "MDU6SXNzdWU0NDY4MTc5MDY=", "number": 493, "title": "Currency exchange", "user": {"login": "kmartynski", "id": 43373840, "node_id": "MDQ6VXNlcjQzMzczODQw", "avatar_url": "https://avatars2.githubusercontent.com/u/43373840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmartynski", "html_url": "https://github.com/kmartynski", "followers_url": "https://api.github.com/users/kmartynski/followers", "following_url": "https://api.github.com/users/kmartynski/following{/other_user}", "gists_url": "https://api.github.com/users/kmartynski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmartynski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmartynski/subscriptions", "organizations_url": "https://api.github.com/users/kmartynski/orgs", "repos_url": "https://api.github.com/users/kmartynski/repos", "events_url": "https://api.github.com/users/kmartynski/events{/privacy}", "received_events_url": "https://api.github.com/users/kmartynski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-05-21T20:47:24Z", "updated_at": "2019-05-23T21:30:15Z", "closed_at": "2019-05-22T15:36:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I wanted to implement small function, which will show a converstion rate of specific currencies. I updated my `INSTALLED_APPS` `'djmoney.contrib.exchange'`. I wrote this simple code, but I got an error: `djmoney.contrib.exchange.exceptions.MissingRate: Rate EUR -> USD does not exist`\r\n\r\ncode:\r\n`from djmoney.money import Money\r\nfrom djmoney.contrib.exchange.models import convert_money\r\nconvert_money(Money(100, 'EUR'), 'USD')`\r\n\r\nIn `settings.py` I've also included stuff like:\r\n`EXCHANGE_BACKEND = 'djmoney.contrib.exchange.backends.FixerBackend'\r\nCURRENCIES = ('USD', 'PLN', 'EUR', 'CHF', 'RON', 'GBP')\r\nBASE_CURRENCY = \"PLN\"`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/490", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/490/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/490/events", "html_url": "https://github.com/django-money/django-money/issues/490", "id": 443792719, "node_id": "MDU6SXNzdWU0NDM3OTI3MTk=", "number": 490, "title": "Confusion in default_currency type", "user": {"login": "washeck", "id": 264454, "node_id": "MDQ6VXNlcjI2NDQ1NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/264454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/washeck", "html_url": "https://github.com/washeck", "followers_url": "https://api.github.com/users/washeck/followers", "following_url": "https://api.github.com/users/washeck/following{/other_user}", "gists_url": "https://api.github.com/users/washeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/washeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/washeck/subscriptions", "organizations_url": "https://api.github.com/users/washeck/orgs", "repos_url": "https://api.github.com/users/washeck/repos", "events_url": "https://api.github.com/users/washeck/events{/privacy}", "received_events_url": "https://api.github.com/users/washeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-money/django-money/milestones/7", "html_url": "https://github.com/django-money/django-money/milestone/7", "labels_url": "https://api.github.com/repos/django-money/django-money/milestones/7/labels", "id": 4228022, "node_id": "MDk6TWlsZXN0b25lNDIyODAyMg==", "number": 7, "title": "1.0", "description": "", "creator": {"login": "benjaoming", "id": 374612, "node_id": "MDQ6VXNlcjM3NDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/374612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaoming", "html_url": "https://github.com/benjaoming", "followers_url": "https://api.github.com/users/benjaoming/followers", "following_url": "https://api.github.com/users/benjaoming/following{/other_user}", "gists_url": "https://api.github.com/users/benjaoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaoming/subscriptions", "organizations_url": "https://api.github.com/users/benjaoming/orgs", "repos_url": "https://api.github.com/users/benjaoming/repos", "events_url": "https://api.github.com/users/benjaoming/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaoming/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2019-04-14T08:29:46Z", "updated_at": "2019-11-08T14:35:38Z", "due_on": null, "closed_at": "2019-11-08T14:35:38Z"}, "comments": 6, "created_at": "2019-05-14T08:57:20Z", "updated_at": "2019-05-26T13:42:44Z", "closed_at": "2019-05-26T13:42:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There seems to be a confusion in how we understand default currency. The README says you can set it to None like this\r\n`MoneyField(max_digits=10, decimal_places=2, null=True, default_currency=None)`\r\n\r\nUnfortunately, this does not work for me because `MoneyField.deconstruct()` has the following code:\r\n```\r\n        if self.default_currency != DEFAULT_CURRENCY:\r\n            kwargs['default_currency'] = str(self.default_currency)\r\n```\r\nwhich leads to funny situation when you end up with string 'None' in the db.\r\n\r\nDEFAULT_CURRENCY is not documented in README but there is a comment in `settings.py`\r\n```\r\n# The default currency, you can define this in your project's settings module\r\n# This has to be a currency object imported from moneyed\r\nDEFAULT_CURRENCY = getattr(settings, 'DEFAULT_CURRENCY', DEFAULT_CURRENCY)\r\n```\r\n\r\nI find it confusing to have DEFAULT_CURRENCY in settings as object and default_currency in kwargs as string. I can submit PR but I am not sure what approach you prefer. As a minimal fix I suggest to special-case None in the kwargs and to add asserts for expected types (str or Currency).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/489", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/489/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/489/events", "html_url": "https://github.com/django-money/django-money/issues/489", "id": 443116763, "node_id": "MDU6SXNzdWU0NDMxMTY3NjM=", "number": 489, "title": "TypeError: __init__() missing 1 required positional argument: 'on_delete'", "user": {"login": "kmartynski", "id": 43373840, "node_id": "MDQ6VXNlcjQzMzczODQw", "avatar_url": "https://avatars2.githubusercontent.com/u/43373840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmartynski", "html_url": "https://github.com/kmartynski", "followers_url": "https://api.github.com/users/kmartynski/followers", "following_url": "https://api.github.com/users/kmartynski/following{/other_user}", "gists_url": "https://api.github.com/users/kmartynski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmartynski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmartynski/subscriptions", "organizations_url": "https://api.github.com/users/kmartynski/orgs", "repos_url": "https://api.github.com/users/kmartynski/repos", "events_url": "https://api.github.com/users/kmartynski/events{/privacy}", "received_events_url": "https://api.github.com/users/kmartynski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-12T15:30:05Z", "updated_at": "2019-05-12T22:38:54Z", "closed_at": "2019-05-12T22:38:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I've tried to use your library, but I got this error. I guess it is common now, because after new Django upgrade, when having relation fields, you have to add `on_delete` field.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/481", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/481/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/481/events", "html_url": "https://github.com/django-money/django-money/issues/481", "id": 435415272, "node_id": "MDU6SXNzdWU0MzU0MTUyNzI=", "number": 481, "title": "Use black for code formatting", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-20T16:19:54Z", "updated_at": "2019-05-25T15:10:00Z", "closed_at": "2019-05-25T15:10:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@benjaoming \r\n\r\nHej Ben! What do you think? it will cut a lot of discussions about code formatting and make it consistent", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/480", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/480/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/480/events", "html_url": "https://github.com/django-money/django-money/issues/480", "id": 435387038, "node_id": "MDU6SXNzdWU0MzUzODcwMzg=", "number": 480, "title": "Allow changing max_length in CurrencyField (cryptocurrency support)", "user": {"login": "MrFus10n", "id": 11643466, "node_id": "MDQ6VXNlcjExNjQzNDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/11643466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrFus10n", "html_url": "https://github.com/MrFus10n", "followers_url": "https://api.github.com/users/MrFus10n/followers", "following_url": "https://api.github.com/users/MrFus10n/following{/other_user}", "gists_url": "https://api.github.com/users/MrFus10n/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrFus10n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrFus10n/subscriptions", "organizations_url": "https://api.github.com/users/MrFus10n/orgs", "repos_url": "https://api.github.com/users/MrFus10n/repos", "events_url": "https://api.github.com/users/MrFus10n/events{/privacy}", "received_events_url": "https://api.github.com/users/MrFus10n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-20T11:19:52Z", "updated_at": "2019-04-20T17:19:53Z", "closed_at": "2019-04-20T17:19:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now CurrencyField overrides max_length to 3, which is true for currencies but not for cryprocurrencies, for example USDT.\r\nI'm not sure, but I guess simply changing\r\n```\r\ndef __init__(self, price_field=None, default=DEFAULT_CURRENCY, **kwargs):\r\n    if isinstance(default, Currency):\r\n        default = default.code\r\n    kwargs['max_length'] = 3\r\n    self.price_field = price_field\r\n    super(CurrencyField, self).__init__(default=default, **kwargs)\r\n```\r\nto \r\n```\r\ndef __init__(self, price_field=None, default=DEFAULT_CURRENCY, **kwargs):\r\n    if isinstance(default, Currency):\r\n        default = default.code\r\n    if 'max_length' not in kwargs:\r\n        kwargs['max_length'] = 3\r\n    self.price_field = price_field\r\n    super(CurrencyField, self).__init__(default=default, **kwargs)\r\n```\r\nwill do the trick.\r\n\r\nI would be extremely thankful for that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/475", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/475/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/475/events", "html_url": "https://github.com/django-money/django-money/issues/475", "id": 432864028, "node_id": "MDU6SXNzdWU0MzI4NjQwMjg=", "number": 475, "title": "Add default currency for DRF field", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-13T16:03:33Z", "updated_at": "2019-04-21T08:26:19Z", "closed_at": "2019-04-21T08:26:19Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Could be helpful - you don't have to specify currency everytime", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/469", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/469/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/469/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/469/events", "html_url": "https://github.com/django-money/django-money/issues/469", "id": 425839807, "node_id": "MDU6SXNzdWU0MjU4Mzk4MDc=", "number": 469, "title": "Support for python 3.6", "user": {"login": "laidbackpeter", "id": 3829573, "node_id": "MDQ6VXNlcjM4Mjk1NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3829573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laidbackpeter", "html_url": "https://github.com/laidbackpeter", "followers_url": "https://api.github.com/users/laidbackpeter/followers", "following_url": "https://api.github.com/users/laidbackpeter/following{/other_user}", "gists_url": "https://api.github.com/users/laidbackpeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/laidbackpeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laidbackpeter/subscriptions", "organizations_url": "https://api.github.com/users/laidbackpeter/orgs", "repos_url": "https://api.github.com/users/laidbackpeter/repos", "events_url": "https://api.github.com/users/laidbackpeter/events{/privacy}", "received_events_url": "https://api.github.com/users/laidbackpeter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-27T09:09:24Z", "updated_at": "2019-03-27T18:47:05Z", "closed_at": "2019-03-27T18:47:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "@Stranger6667 @benjaoming \r\nI am getting this traceback while porting from python 2.7 to python 3.6.6\r\n\r\nI am using the below on a virtual env:\r\ndjango == 1.11.17\r\ndjango-money == 0.14.4\r\npython == 3.6.6\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 33, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/core/management/__init__.py\", line 364, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/core/management/__init__.py\", line 356, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/core/management/base.py\", line 283, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/core/management/base.py\", line 330, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/core/management/commands/migrate.py\", line 164, in handle\r\n    pre_migrate_apps = pre_migrate_state.apps\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/utils/functional.py\", line 35, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/db/migrations/state.py\", line 218, in apps\r\n    return StateApps(self.real_apps, self.models)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/db/migrations/state.py\", line 288, in __init__\r\n    self.render_multiple(list(models.values()) + self.real_models)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/db/migrations/state.py\", line 323, in render_multiple\r\n    model.render(self)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/db/migrations/state.py\", line 626, in render\r\n    body,\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/db/models/base.py\", line 162, in __new__\r\n    new_class.add_to_class(obj_name, obj)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/db/models/base.py\", line 325, in add_to_class\r\n    value.contribute_to_class(cls, name)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/djmoney/models/fields.py\", line 248, in contribute_to_class\r\n    self.add_currency_field(cls, name)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/djmoney/models/fields.py\", line 265, in add_currency_field\r\n    cls.add_to_class(currency_field_name, currency_field)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/db/models/base.py\", line 325, in add_to_class\r\n    value.contribute_to_class(cls, name)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/djmoney/models/fields.py\", line 166, in contribute_to_class\r\n    super(CurrencyField, self).contribute_to_class(cls, name)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/db/models/fields/__init__.py\", line 704, in contribute_to_class\r\n    self.set_attributes_from_name(name)\r\n  File \"/Users/peter.muchina/PycharmProjects/pulaphones/django/website/.ve/lib/python3.6/site-packages/django/db/models/fields/__init__.py\", line 687, in set_attributes_from_name\r\n    self.verbose_name = self.name.replace('_', ' ')\r\nTypeError: a bytes-like object is required, not 'str'\r\n```\r\n\r\nkindly assist.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/468", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/468/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/468/events", "html_url": "https://github.com/django-money/django-money/issues/468", "id": 424785051, "node_id": "MDU6SXNzdWU0MjQ3ODUwNTE=", "number": 468, "title": "Graphene / GraphQL support?", "user": {"login": "gotexis", "id": 38595828, "node_id": "MDQ6VXNlcjM4NTk1ODI4", "avatar_url": "https://avatars3.githubusercontent.com/u/38595828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotexis", "html_url": "https://github.com/gotexis", "followers_url": "https://api.github.com/users/gotexis/followers", "following_url": "https://api.github.com/users/gotexis/following{/other_user}", "gists_url": "https://api.github.com/users/gotexis/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotexis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotexis/subscriptions", "organizations_url": "https://api.github.com/users/gotexis/orgs", "repos_url": "https://api.github.com/users/gotexis/repos", "events_url": "https://api.github.com/users/gotexis/events{/privacy}", "received_events_url": "https://api.github.com/users/gotexis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-25T08:52:19Z", "updated_at": "2019-04-22T14:04:03Z", "closed_at": "2019-04-22T14:04:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Aside from the DRF support, I wonder if there is any Graphene support or it should just work?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/463", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/463/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/463/events", "html_url": "https://github.com/django-money/django-money/issues/463", "id": 415009067, "node_id": "MDU6SXNzdWU0MTUwMDkwNjc=", "number": 463, "title": "Amount with currency not serializing at all.", "user": {"login": "arslanhashmi", "id": 17988601, "node_id": "MDQ6VXNlcjE3OTg4NjAx", "avatar_url": "https://avatars1.githubusercontent.com/u/17988601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arslanhashmi", "html_url": "https://github.com/arslanhashmi", "followers_url": "https://api.github.com/users/arslanhashmi/followers", "following_url": "https://api.github.com/users/arslanhashmi/following{/other_user}", "gists_url": "https://api.github.com/users/arslanhashmi/gists{/gist_id}", "starred_url": "https://api.github.com/users/arslanhashmi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arslanhashmi/subscriptions", "organizations_url": "https://api.github.com/users/arslanhashmi/orgs", "repos_url": "https://api.github.com/users/arslanhashmi/repos", "events_url": "https://api.github.com/users/arslanhashmi/events{/privacy}", "received_events_url": "https://api.github.com/users/arslanhashmi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-27T08:49:52Z", "updated_at": "2019-02-28T07:17:30Z", "closed_at": "2019-02-28T07:17:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Model: \r\n```python\r\nclass EmployeeSalary(models.Model):\r\n    employee = models.OneToOneField(Employee, on_delete=models.DO_NOTHING, null=True, blank=True)\r\n    salary = MoneyField(decimal_places=2, default_currency='EUR', max_digits=10, default=None, null=True)\r\n```\r\n\r\n\r\nSerializer:\r\n```python\r\nclass EmployeeSalarySerializer(serializers.ModelSerializer):\r\n\r\n    class Meta:\r\n        fields = ('employee', 'salary')\r\n        model = EmployeeSalary\r\n```\r\n\r\nDuring serializing following error comes.\r\n```python\r\nEmployeeSalarySerializer(EmployeeSalary.objects.get(pk=1)).data\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 35, in inner\r\n    response = get_response(request)\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/django/core/handlers/base.py\", line 128, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/django/core/handlers/base.py\", line 126, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/rest_framework/viewsets.py\", line 103, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/rest_framework/views.py\", line 483, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/rest_framework/views.py\", line 443, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/rest_framework/views.py\", line 480, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/Users/arslan/PycharmProjects/montel/heman/employees/views.py\", line 51, in stats\r\n    payload = dict(potential=potential, utilization=utilization, utilization_history=history, salary=salary.data)\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/rest_framework/serializers.py\", line 765, in data\r\n    ret = super(ListSerializer, self).data\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/rest_framework/serializers.py\", line 262, in data\r\n    self._data = self.to_representation(self.instance)\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/rest_framework/serializers.py\", line 683, in to_representation\r\n    self.child.to_representation(item) for item in iterable\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/rest_framework/serializers.py\", line 683, in <listcomp>\r\n    self.child.to_representation(item) for item in iterable\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/rest_framework/serializers.py\", line 527, in to_representation\r\n    ret[field.field_name] = field.to_representation(attribute)\r\n  File \"/Users/arslan/.virtualenvs/heman/lib/python3.6/site-packages/rest_framework/fields.py\", line 1107, in to_representation\r\n    value = decimal.Decimal(six.text_type(value).strip())\r\ndecimal.InvalidOperation: [<class 'decimal.ConversionSyntax'>]\r\n```\r\n\r\nDebugging shown that like the `to_representation` function from `MoneyField` is not executing, in fact, field is looked up as `DecimalField` rather than `MoneyField` by rest-framework.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/460", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/460/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/460/events", "html_url": "https://github.com/django-money/django-money/issues/460", "id": 398664628, "node_id": "MDU6SXNzdWUzOTg2NjQ2Mjg=", "number": 460, "title": "Unexpected type when using values on query?", "user": {"login": "xliiv", "id": 298994, "node_id": "MDQ6VXNlcjI5ODk5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/298994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xliiv", "html_url": "https://github.com/xliiv", "followers_url": "https://api.github.com/users/xliiv/followers", "following_url": "https://api.github.com/users/xliiv/following{/other_user}", "gists_url": "https://api.github.com/users/xliiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/xliiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xliiv/subscriptions", "organizations_url": "https://api.github.com/users/xliiv/orgs", "repos_url": "https://api.github.com/users/xliiv/repos", "events_url": "https://api.github.com/users/xliiv/events{/privacy}", "received_events_url": "https://api.github.com/users/xliiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-13T14:47:33Z", "updated_at": "2019-04-13T17:09:46Z", "closed_at": "2019-04-13T17:09:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed unexpected (IMO) behaviour when using `Django's` [values](https://docs.djangoproject.com/en/2.1/ref/models/querysets/#values)\r\n\r\nLet's say i have this model\r\n```python\r\n# models.py\r\nclass MyModel(models.Model):\r\n    price = MoneyField(\r\n        max_digits=14,\r\n        decimal_places=2,\r\n        default_currency=settings.PAYMENT_DEFAULT_CURRENCY,\r\n    )\r\n```\r\nWhen querying object i'm getting\r\n```\r\nipdb> type(models.MyModel.objects.first().price)                                                                                         \r\n<class 'djmoney.money.Money'>\r\n```\r\nwhich is what i expect, `Money` model. However when i'm doing this\r\n```\r\nipdb> type(models.MyModel.objects.values('price').first()['price'])                                                                      \r\n<class 'decimal.Decimal'>\r\n```\r\nit's `Decimal`.\r\n\r\nIs this is intentional? How can get `Money` when using `values`?\r\n\r\nThanks\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/458", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/458/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/458/events", "html_url": "https://github.com/django-money/django-money/issues/458", "id": 397204804, "node_id": "MDU6SXNzdWUzOTcyMDQ4MDQ=", "number": 458, "title": "django rest framework get_value with amount=None and currency is not None throws an InvalidOperation exception", "user": {"login": "carvincarl", "id": 9198304, "node_id": "MDQ6VXNlcjkxOTgzMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9198304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carvincarl", "html_url": "https://github.com/carvincarl", "followers_url": "https://api.github.com/users/carvincarl/followers", "following_url": "https://api.github.com/users/carvincarl/following{/other_user}", "gists_url": "https://api.github.com/users/carvincarl/gists{/gist_id}", "starred_url": "https://api.github.com/users/carvincarl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carvincarl/subscriptions", "organizations_url": "https://api.github.com/users/carvincarl/orgs", "repos_url": "https://api.github.com/users/carvincarl/repos", "events_url": "https://api.github.com/users/carvincarl/events{/privacy}", "received_events_url": "https://api.github.com/users/carvincarl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-09T04:13:09Z", "updated_at": "2019-04-13T17:16:50Z", "closed_at": "2019-04-13T17:16:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the DRF code, when deserializing a JSON object with a value for currency and None for the amount, there is an InvalidOperation exception instantiating the Money object.\r\n\r\nExample stack trace:\r\n```\r\n.tox/django111-py36/lib/python3.6/site-packages/rest_framework/serializers.py:236: in is_valid\r\n    self._validated_data = self.run_validation(self.initial_data)\r\n.tox/django111-py36/lib/python3.6/site-packages/rest_framework/serializers.py:434: in run_validation\r\n    value = self.to_internal_value(data)\r\n.tox/django111-py36/lib/python3.6/site-packages/rest_framework/serializers.py:486: in to_internal_value\r\n    primitive_value = field.get_value(data)\r\ndjmoney/contrib/django_rest_framework/fields.py:34: in get_value\r\n    return Money(amount, currency)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <[AttributeError(\"'Money' object has no attribute 'amount'\") raised in repr()] Money object at 0x10f4cb470>, amount = None\r\ncurrency = 'USD'\r\n\r\n    def __init__(self, amount=Decimal('0.0'), currency=DEFAULT_CURRENCY_CODE):\r\n        if not isinstance(amount, Decimal):\r\n>           amount = Decimal(str(amount))\r\nE           decimal.InvalidOperation: [<class 'decimal.ConversionSyntax'>]\r\n\r\n.tox/django111-py36/lib/python3.6/site-packages/moneyed/classes.py:83: InvalidOperation\r\n```\r\n\r\nHere is the method with the problem:\r\n```\r\n    def get_value(self, data):\r\n        amount = super(MoneyField, self).get_value(data)\r\n        currency = data.get(get_currency_field_name(self.field_name), None)\r\n        if currency:  # Missing a check for amount is None.\r\n            return Money(amount, currency)\r\n        return amount\r\n\r\n```\r\n\r\nThe fix is to also check that the amount is not None.\r\n```\r\n        if currency and amount is not None:\r\n            return Money(amount, currency)\r\n```\r\n\r\nHere is a test to expose the error:\r\n```\r\n    @pytest.mark.parametrize(\r\n        'body, expected', (\r\n            ({'field': '10', 'field_currency': 'EUR'}, Money(10, 'EUR')),\r\n            ({'field': '12.20', 'field_currency': 'GBP'}, Money(12.20, 'GBP')),\r\n            ({'field': '15.15', 'field_currency': 'USD'}, Money(15.15, 'USD')),\r\n            ({'field': None, 'field_currency': 'USD'}, None),  # Add this line for amount is None and currency is not None.\r\n        ),\r\n    )\r\n    def test_post_put_values(self, body, expected):\r\n        serializer = self.get_serializer(NullMoneyFieldModel, data=body)\r\n        serializer.is_valid()\r\n        assert serializer.validated_data['field'] == expected\r\n```\r\n\r\nI will submit a pull request with the test and fix.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/456", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/456/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/456/events", "html_url": "https://github.com/django-money/django-money/issues/456", "id": 395714558, "node_id": "MDU6SXNzdWUzOTU3MTQ1NTg=", "number": 456, "title": "dumpdata error", "user": {"login": "zbynekdrlik", "id": 26905282, "node_id": "MDQ6VXNlcjI2OTA1Mjgy", "avatar_url": "https://avatars2.githubusercontent.com/u/26905282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zbynekdrlik", "html_url": "https://github.com/zbynekdrlik", "followers_url": "https://api.github.com/users/zbynekdrlik/followers", "following_url": "https://api.github.com/users/zbynekdrlik/following{/other_user}", "gists_url": "https://api.github.com/users/zbynekdrlik/gists{/gist_id}", "starred_url": "https://api.github.com/users/zbynekdrlik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zbynekdrlik/subscriptions", "organizations_url": "https://api.github.com/users/zbynekdrlik/orgs", "repos_url": "https://api.github.com/users/zbynekdrlik/repos", "events_url": "https://api.github.com/users/zbynekdrlik/events{/privacy}", "received_events_url": "https://api.github.com/users/zbynekdrlik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-03T20:31:41Z", "updated_at": "2019-01-03T20:34:53Z", "closed_at": "2019-01-03T20:34:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n  File \"/usr/lib/python3.5/json/encoder.py\", line 436, in _iterencode\r\n    o = _default(o)\r\n  File \"/home/ft5000/pycharm_project/101/venv/lib/python3.5/site-packages/django/core/serializers/json.py\", line 104, in default\r\n    return super().default(o)\r\n  File \"/usr/lib/python3.5/json/encoder.py\", line 179, in default\r\n    raise TypeError(repr(o) + \" is not JSON serializable\")\r\nTypeError: <Money: 0.00 EUR> is not JSON serializable\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/451", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/451/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/451/events", "html_url": "https://github.com/django-money/django-money/issues/451", "id": 391733483, "node_id": "MDU6SXNzdWUzOTE3MzM0ODM=", "number": 451, "title": "Cannot get Travis tests to pass on empty commit", "user": {"login": "GeeWee", "id": 6381792, "node_id": "MDQ6VXNlcjYzODE3OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6381792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeeWee", "html_url": "https://github.com/GeeWee", "followers_url": "https://api.github.com/users/GeeWee/followers", "following_url": "https://api.github.com/users/GeeWee/following{/other_user}", "gists_url": "https://api.github.com/users/GeeWee/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeeWee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeeWee/subscriptions", "organizations_url": "https://api.github.com/users/GeeWee/orgs", "repos_url": "https://api.github.com/users/GeeWee/repos", "events_url": "https://api.github.com/users/GeeWee/events{/privacy}", "received_events_url": "https://api.github.com/users/GeeWee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-17T14:20:41Z", "updated_at": "2018-12-23T15:14:34Z", "closed_at": "2018-12-23T15:14:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "See #450 - if I make a PR with an empty commit, I cannot get Travis to pass the tests. Last time the master branch was built (4 months ago) it passed fine. I'm not sure what's going on here.\r\n\r\nI'd really like to contribute to this project, and if I'm doing something wrong, I'll volunteer to update the contribution docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/448", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/448/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/448/events", "html_url": "https://github.com/django-money/django-money/issues/448", "id": 373521346, "node_id": "MDU6SXNzdWUzNzM1MjEzNDY=", "number": 448, "title": "Using pipenv--->  ModuleNotFoundError: No module named 'djmoney'", "user": {"login": "rafahuelin", "id": 17379968, "node_id": "MDQ6VXNlcjE3Mzc5OTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/17379968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafahuelin", "html_url": "https://github.com/rafahuelin", "followers_url": "https://api.github.com/users/rafahuelin/followers", "following_url": "https://api.github.com/users/rafahuelin/following{/other_user}", "gists_url": "https://api.github.com/users/rafahuelin/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafahuelin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafahuelin/subscriptions", "organizations_url": "https://api.github.com/users/rafahuelin/orgs", "repos_url": "https://api.github.com/users/rafahuelin/repos", "events_url": "https://api.github.com/users/rafahuelin/events{/privacy}", "received_events_url": "https://api.github.com/users/rafahuelin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-24T14:45:50Z", "updated_at": "2018-10-25T22:45:32Z", "closed_at": "2018-10-25T22:45:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everybody!\r\n\r\nI'm working on a Django project, and after installing \"django-money\" using:\r\n`pipenv install django-money`\r\n\r\nAfter using the command `pipenv graph` that it's something similar to pip `freeze` the package doesn't appear there.\r\n\r\nI've added the package in settings.py:\r\n```\r\nINSTALLED_APPS = [\r\n    ...\r\n    'djmoney',\r\n    ...\r\n]\r\n```\r\n\r\nAfter runnning the `python manage.py runserver` the terminal shows this message:\r\n\r\n```\r\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x000002354CBFB268>\r\nTraceback (most recent call last):\r\n  File \"C:\\Projects\\Django\\eve\\.venv\\lib\\site-packages\\django\\utils\\autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"C:\\Projects\\Django\\eve\\.venv\\lib\\site-packages\\django\\core\\management\\commands\\runserver.py\", line\r\n109, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"C:\\Projects\\Django\\eve\\.venv\\lib\\site-packages\\django\\utils\\autoreload.py\", line 248, in raise_last_exception\r\n    raise _exception[1]\r\n  File \"C:\\Projects\\Django\\eve\\.venv\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 337, in execute\r\n    autoreload.check_errors(django.setup)()\r\n  File \"C:\\Projects\\Django\\eve\\.venv\\lib\\site-packages\\django\\utils\\autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"C:\\Projects\\Django\\eve\\.venv\\lib\\site-packages\\django\\__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"C:\\Projects\\Django\\eve\\.venv\\lib\\site-packages\\django\\apps\\registry.py\", line 89, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"C:\\Projects\\Django\\eve\\.venv\\lib\\site-packages\\django\\apps\\config.py\", line 90, in create\r\n    module = import_module(entry)\r\n  File \"C:\\Projects\\Django\\eve\\.venv\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 953, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'djmoney'\r\n```\r\n\r\nAny ideas to solve the problem? Ta!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/447", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/447/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/447/events", "html_url": "https://github.com/django-money/django-money/issues/447", "id": 360529788, "node_id": "MDU6SXNzdWUzNjA1Mjk3ODg=", "number": 447, "title": "How to specify currency value?", "user": {"login": "cryptobench", "id": 33448819, "node_id": "MDQ6VXNlcjMzNDQ4ODE5", "avatar_url": "https://avatars1.githubusercontent.com/u/33448819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cryptobench", "html_url": "https://github.com/cryptobench", "followers_url": "https://api.github.com/users/cryptobench/followers", "following_url": "https://api.github.com/users/cryptobench/following{/other_user}", "gists_url": "https://api.github.com/users/cryptobench/gists{/gist_id}", "starred_url": "https://api.github.com/users/cryptobench/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cryptobench/subscriptions", "organizations_url": "https://api.github.com/users/cryptobench/orgs", "repos_url": "https://api.github.com/users/cryptobench/repos", "events_url": "https://api.github.com/users/cryptobench/events{/privacy}", "received_events_url": "https://api.github.com/users/cryptobench/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-15T10:54:47Z", "updated_at": "2019-04-22T14:00:05Z", "closed_at": "2019-04-22T14:00:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's say I have my own currency that's worth 780 and compare it to the danish crown DKK , so 1 DKK equals 780 of my currency\r\n\r\nThe current documentation shows this , but I have no clue how to specify it's value based on this. Care to elaborate? \r\n\r\n```\r\nimport moneyed\r\nfrom moneyed.localization import _FORMATTER\r\nfrom decimal import ROUND_HALF_EVEN\r\n\r\n\r\nBOB = moneyed.add_currency(\r\n    code='BOB',\r\n    numeric='068',\r\n    name='Peso boliviano',\r\n    countries=('BOLIVIA', )\r\n)\r\n\r\n# Currency Formatter will output 2.000,00 Bs.\r\n_FORMATTER.add_sign_definition(\r\n    'default',\r\n    BOB,\r\n    prefix=u'Bs. '\r\n)\r\n\r\n_FORMATTER.add_formatting_definition(\r\n    'es_BO',\r\n    group_size=3, group_separator=\".\", decimal_point=\",\",\r\n    positive_sign=\"\",  trailing_positive_sign=\"\",\r\n    negative_sign=\"-\", trailing_negative_sign=\"\",\r\n    rounding_method=ROUND_HALF_EVEN\r\n)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/441", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/441/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/441/events", "html_url": "https://github.com/django-money/django-money/issues/441", "id": 343509922, "node_id": "MDU6SXNzdWUzNDM1MDk5MjI=", "number": 441, "title": "Can't update exchange rates", "user": {"login": "saranshbansal", "id": 6996732, "node_id": "MDQ6VXNlcjY5OTY3MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6996732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saranshbansal", "html_url": "https://github.com/saranshbansal", "followers_url": "https://api.github.com/users/saranshbansal/followers", "following_url": "https://api.github.com/users/saranshbansal/following{/other_user}", "gists_url": "https://api.github.com/users/saranshbansal/gists{/gist_id}", "starred_url": "https://api.github.com/users/saranshbansal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saranshbansal/subscriptions", "organizations_url": "https://api.github.com/users/saranshbansal/orgs", "repos_url": "https://api.github.com/users/saranshbansal/repos", "events_url": "https://api.github.com/users/saranshbansal/events{/privacy}", "received_events_url": "https://api.github.com/users/saranshbansal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643098139, "node_id": "MDU6TGFiZWw2NDMwOTgxMzk=", "url": "https://api.github.com/repos/django-money/django-money/labels/question", "name": "question", "color": "CC317C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-23T06:57:39Z", "updated_at": "2019-04-13T17:20:21Z", "closed_at": "2019-04-13T17:20:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added these three lines in my settings.py file(after adding `'djmoney'` and  `'djmoney.contrib.exchange',\r\n` to installed apps and running the migrate command.\r\n\r\nOPEN_EXCHANGE_RATES_APP_ID = 'https://openexchangerates.org/'\r\nOPEN_EXCHANGE_RATES_URL = 'https://openexchangerates.org/api/latest.json'\r\nBASE_CURRENCY = 'AUD'\r\n\r\nwhen i use convert_money, it says:\r\n`    raise MissingRate('Rate %s -> %s does not exist' % (source, target))\r\n`\r\nAlso, I can't run `python manage.py update_rates\r\n`\r\nit says unknown command 'update_rates'\r\n\r\nPlease help.\r\nversions:\r\nPython 3.6\r\nDjango 2.0.3\r\ndjmoney 0.13.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/439", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/439/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/439/events", "html_url": "https://github.com/django-money/django-money/issues/439", "id": 343108771, "node_id": "MDU6SXNzdWUzNDMxMDg3NzE=", "number": 439, "title": "Form valiadion error on MoneyField", "user": {"login": "stinovlas", "id": 1911513, "node_id": "MDQ6VXNlcjE5MTE1MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1911513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stinovlas", "html_url": "https://github.com/stinovlas", "followers_url": "https://api.github.com/users/stinovlas/followers", "following_url": "https://api.github.com/users/stinovlas/following{/other_user}", "gists_url": "https://api.github.com/users/stinovlas/gists{/gist_id}", "starred_url": "https://api.github.com/users/stinovlas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stinovlas/subscriptions", "organizations_url": "https://api.github.com/users/stinovlas/orgs", "repos_url": "https://api.github.com/users/stinovlas/repos", "events_url": "https://api.github.com/users/stinovlas/events{/privacy}", "received_events_url": "https://api.github.com/users/stinovlas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-20T13:31:37Z", "updated_at": "2018-07-23T13:21:30Z", "closed_at": "2018-07-23T10:08:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I tried to create `ModelForm` based on my model containing `MoneyField`, I got error `Enter a list of values.` for the appropriate field.\r\n\r\nAfter some debugging, it seems that problem is in that `djmoney.money.Money` is not instance of `list` or `tuple`, which creates a problem at [clean method of MultiValueField](https://github.com/django/django/blob/master/django/forms/fields.py#L1009).\r\n\r\nSimple solution is to override clean method of `MoneyField`, but it would be great if you could address this issue in `django-money` upstream.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/438", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/438/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/438/events", "html_url": "https://github.com/django-money/django-money/issues/438", "id": 343035950, "node_id": "MDU6SXNzdWUzNDMwMzU5NTA=", "number": 438, "title": "Add two MoneyFields in different currencies and generate output in given currency", "user": {"login": "saranshbansal", "id": 6996732, "node_id": "MDQ6VXNlcjY5OTY3MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6996732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saranshbansal", "html_url": "https://github.com/saranshbansal", "followers_url": "https://api.github.com/users/saranshbansal/followers", "following_url": "https://api.github.com/users/saranshbansal/following{/other_user}", "gists_url": "https://api.github.com/users/saranshbansal/gists{/gist_id}", "starred_url": "https://api.github.com/users/saranshbansal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saranshbansal/subscriptions", "organizations_url": "https://api.github.com/users/saranshbansal/orgs", "repos_url": "https://api.github.com/users/saranshbansal/repos", "events_url": "https://api.github.com/users/saranshbansal/events{/privacy}", "received_events_url": "https://api.github.com/users/saranshbansal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-20T09:26:27Z", "updated_at": "2018-07-20T10:03:45Z", "closed_at": "2018-07-20T10:03:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I've been scratching my head over past few days to figure out how to manipulate dj-money fields.\r\nHere are my two model fields: \r\n```\r\n client_cost = MoneyField(\r\n        _('client cost'),\r\n        max_digits=10,\r\n        decimal_places=2,\r\n        default_currency='AUD',\r\n        null=True,\r\n    )\r\n```\r\n\r\n```\r\ncamera_operator_cost = MoneyField(\r\n        _('camera operator cost'),\r\n        max_digits=10,\r\n        decimal_places=2,\r\n        default_currency='AUD',\r\n        null=True,\r\n    )\r\n```\r\n\r\nThey can have completely different currencies (default being 'AUD'). \r\nI need to be able to: \r\n- extract currency from these fields. (Need the exact statement).\r\n- add these two fields which could have amounts in any currency.  \r\n- reformat the total in whatever currency I want. Let's say total in AU$ is 250 and now i want the same value in US$ which will be ~184US$\r\n\r\nPlease help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/436", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/436/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/436/events", "html_url": "https://github.com/django-money/django-money/issues/436", "id": 341446855, "node_id": "MDU6SXNzdWUzNDE0NDY4NTU=", "number": 436, "title": "Plan for 0.15", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-07-16T09:29:21Z", "updated_at": "2019-05-25T15:54:53Z", "closed_at": "2019-05-25T15:54:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi @benjaoming !\r\nWhat do you think about making a new release? I was thinking, that we could deliver a new feature and a bugfix, since last 2 weeks there were not really many changes\r\n\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/434", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/434/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/434/events", "html_url": "https://github.com/django-money/django-money/issues/434", "id": 340642961, "node_id": "MDU6SXNzdWUzNDA2NDI5NjE=", "number": 434, "title": "MoneyForm showing $00.1234 (4.dp) ", "user": {"login": "andytwoods", "id": 595166, "node_id": "MDQ6VXNlcjU5NTE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/595166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andytwoods", "html_url": "https://github.com/andytwoods", "followers_url": "https://api.github.com/users/andytwoods/followers", "following_url": "https://api.github.com/users/andytwoods/following{/other_user}", "gists_url": "https://api.github.com/users/andytwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/andytwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andytwoods/subscriptions", "organizations_url": "https://api.github.com/users/andytwoods/orgs", "repos_url": "https://api.github.com/users/andytwoods/repos", "events_url": "https://api.github.com/users/andytwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/andytwoods/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/django-money/django-money/milestones/7", "html_url": "https://github.com/django-money/django-money/milestone/7", "labels_url": "https://api.github.com/repos/django-money/django-money/milestones/7/labels", "id": 4228022, "node_id": "MDk6TWlsZXN0b25lNDIyODAyMg==", "number": 7, "title": "1.0", "description": "", "creator": {"login": "benjaoming", "id": 374612, "node_id": "MDQ6VXNlcjM3NDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/374612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaoming", "html_url": "https://github.com/benjaoming", "followers_url": "https://api.github.com/users/benjaoming/followers", "following_url": "https://api.github.com/users/benjaoming/following{/other_user}", "gists_url": "https://api.github.com/users/benjaoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaoming/subscriptions", "organizations_url": "https://api.github.com/users/benjaoming/orgs", "repos_url": "https://api.github.com/users/benjaoming/repos", "events_url": "https://api.github.com/users/benjaoming/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaoming/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2019-04-14T08:29:46Z", "updated_at": "2019-11-08T14:35:38Z", "due_on": null, "closed_at": "2019-11-08T14:35:38Z"}, "comments": 1, "created_at": "2018-07-12T13:40:54Z", "updated_at": "2019-05-26T13:40:16Z", "closed_at": "2019-05-26T13:40:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nin my models I am using decimal_places=4\r\nbut in my settings I have CURRENCY_DECIMAL_PLACES = 2\r\n\r\nMoney is displayed correctly in templates ($00.12). But not in forms in templates ($00.1234).\r\nI've spent today doing my best to figure out the source code. This may imply that CURRENCY_DECIMAL_PLACES is not reaching MoneyWidget. I can manually specify payfield.widget.attrs['step'] = '.01' to give me the correct decimal places. I cannot though get any existing model value sent to the widget to correctly round to 2d.p.\r\n\r\nWould you have any pointers? \r\nCheers,\r\nAndy.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/431", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/431/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/431/events", "html_url": "https://github.com/django-money/django-money/issues/431", "id": 340103797, "node_id": "MDU6SXNzdWUzNDAxMDM3OTc=", "number": 431, "title": "Converting MoneyField back to original value", "user": {"login": "saranshbansal", "id": 6996732, "node_id": "MDQ6VXNlcjY5OTY3MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6996732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saranshbansal", "html_url": "https://github.com/saranshbansal", "followers_url": "https://api.github.com/users/saranshbansal/followers", "following_url": "https://api.github.com/users/saranshbansal/following{/other_user}", "gists_url": "https://api.github.com/users/saranshbansal/gists{/gist_id}", "starred_url": "https://api.github.com/users/saranshbansal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saranshbansal/subscriptions", "organizations_url": "https://api.github.com/users/saranshbansal/orgs", "repos_url": "https://api.github.com/users/saranshbansal/repos", "events_url": "https://api.github.com/users/saranshbansal/events{/privacy}", "received_events_url": "https://api.github.com/users/saranshbansal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-11T06:07:01Z", "updated_at": "2018-07-11T14:17:41Z", "closed_at": "2018-07-11T14:17:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I convert a MoneyField value back to the original form?\r\nI have a modal field:\r\n```\r\nclient_cost = MoneyField(\r\n        _('client cost'),\r\n        max_digits=10,\r\n        decimal_places=2,\r\n        default_currency='AUD',\r\n        null=True,\r\n    )\r\n```\r\nNow i want to do some calculations on it so i converted it to int using `int(client_cost) `\r\nHowever I'm getting an error (obviously):\r\n\r\n`int() argument must be a string, a bytes-like object or a number, not 'Money'\r\n`\r\n\r\nPlease help.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/430", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/430/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/430/events", "html_url": "https://github.com/django-money/django-money/issues/430", "id": 337880368, "node_id": "MDU6SXNzdWUzMzc4ODAzNjg=", "number": 430, "title": "Decimal object has no attribute amount", "user": {"login": "milutinke-kortechs", "id": 36924553, "node_id": "MDQ6VXNlcjM2OTI0NTUz", "avatar_url": "https://avatars1.githubusercontent.com/u/36924553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milutinke-kortechs", "html_url": "https://github.com/milutinke-kortechs", "followers_url": "https://api.github.com/users/milutinke-kortechs/followers", "following_url": "https://api.github.com/users/milutinke-kortechs/following{/other_user}", "gists_url": "https://api.github.com/users/milutinke-kortechs/gists{/gist_id}", "starred_url": "https://api.github.com/users/milutinke-kortechs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milutinke-kortechs/subscriptions", "organizations_url": "https://api.github.com/users/milutinke-kortechs/orgs", "repos_url": "https://api.github.com/users/milutinke-kortechs/repos", "events_url": "https://api.github.com/users/milutinke-kortechs/events{/privacy}", "received_events_url": "https://api.github.com/users/milutinke-kortechs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-03T12:36:55Z", "updated_at": "2018-07-03T13:53:05Z", "closed_at": "2018-07-03T13:52:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIn `migrations` files for exaple next code is present:\r\n`other_cost = MoneyField(max_digits=16, decimal_places=2, default_currency=\"EUR\", null=True, blank=True)`\r\n\r\nWhen I try to apply this migration, I got this errror:\r\n\r\n`File` \"....env/lib/python2.7/site-packages/djmoney/models/fields.py\", line 296, in deconstruct\r\n    kwargs['default'] = self.default.amount`\r\n\r\n`self.default` is type `Decimal` and because of that `amount` property doesn't exists in `desconstruct` method.\r\n\r\nI think `set_default` method returns proper `default` value, but that value isn't set up in `self.default` to override `self.default` from `super` class (`DecimalField`).\r\n\r\nIs my code wrong or this is a real issue?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/429", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/429/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/429/events", "html_url": "https://github.com/django-money/django-money/issues/429", "id": 337757839, "node_id": "MDU6SXNzdWUzMzc3NTc4Mzk=", "number": 429, "title": "Widget", "user": {"login": "lggwettmann", "id": 4527829, "node_id": "MDQ6VXNlcjQ1Mjc4Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4527829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lggwettmann", "html_url": "https://github.com/lggwettmann", "followers_url": "https://api.github.com/users/lggwettmann/followers", "following_url": "https://api.github.com/users/lggwettmann/following{/other_user}", "gists_url": "https://api.github.com/users/lggwettmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/lggwettmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lggwettmann/subscriptions", "organizations_url": "https://api.github.com/users/lggwettmann/orgs", "repos_url": "https://api.github.com/users/lggwettmann/repos", "events_url": "https://api.github.com/users/lggwettmann/events{/privacy}", "received_events_url": "https://api.github.com/users/lggwettmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-03T06:09:45Z", "updated_at": "2018-07-09T02:18:32Z", "closed_at": "2018-07-09T02:18:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\n\r\nI'd like to make it possible for users to only choose specific amounts eg '100 \u20ac', '200 \u20ac', '300 \u20ac' in a form field. I tried to change the MoneyField with another widget, but MoneyField does not seem to accept a widget. How can I solve this?\r\n\r\n```\r\nclass SomeForm(Form):\r\n    money = models.MoneyField(widget=forms.Select, choices=TOPUP_OPTIONS)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/426", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/426/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/426/events", "html_url": "https://github.com/django-money/django-money/issues/426", "id": 335185704, "node_id": "MDU6SXNzdWUzMzUxODU3MDQ=", "number": 426, "title": "Comparison failing after doing arithmetic.", "user": {"login": "KaiserKarel", "id": 28512997, "node_id": "MDQ6VXNlcjI4NTEyOTk3", "avatar_url": "https://avatars3.githubusercontent.com/u/28512997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KaiserKarel", "html_url": "https://github.com/KaiserKarel", "followers_url": "https://api.github.com/users/KaiserKarel/followers", "following_url": "https://api.github.com/users/KaiserKarel/following{/other_user}", "gists_url": "https://api.github.com/users/KaiserKarel/gists{/gist_id}", "starred_url": "https://api.github.com/users/KaiserKarel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KaiserKarel/subscriptions", "organizations_url": "https://api.github.com/users/KaiserKarel/orgs", "repos_url": "https://api.github.com/users/KaiserKarel/repos", "events_url": "https://api.github.com/users/KaiserKarel/events{/privacy}", "received_events_url": "https://api.github.com/users/KaiserKarel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-24T14:56:43Z", "updated_at": "2018-06-24T20:39:58Z", "closed_at": "2018-06-24T20:39:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "After multiplying a moneyfield with a decimal.Decimal, comparisons fail.\r\n\r\nExample:\r\n\r\n```python\r\ndef test_dj_money_Money(self):\r\n        from djmoney.money import Money\r\n        import decimal\r\n        initial = Money(100, \"EUR\")\r\n        final = initial * 0.9\r\n        # This test does pass.\r\n        self.assertTrue(initial * 0.9 == final)\r\n\r\n        final = initial * decimal.Decimal(0.9)\r\n        self.assertTrue(initial * 0.9 == final, msg=\"initial * 0.9: {}, final: {}\".format(initial * 0.9, final))\r\n```\r\nResults in:\r\n```commandline\r\nAssertionError: False is not true : initial: 90.00 EUR, final: 90.00 EUR\r\n```\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/425", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/425/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/425/events", "html_url": "https://github.com/django-money/django-money/issues/425", "id": 332023589, "node_id": "MDU6SXNzdWUzMzIwMjM1ODk=", "number": 425, "title": "Wrong get_rate results if base currency is not USD", "user": {"login": "77cc33", "id": 2612157, "node_id": "MDQ6VXNlcjI2MTIxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2612157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/77cc33", "html_url": "https://github.com/77cc33", "followers_url": "https://api.github.com/users/77cc33/followers", "following_url": "https://api.github.com/users/77cc33/following{/other_user}", "gists_url": "https://api.github.com/users/77cc33/gists{/gist_id}", "starred_url": "https://api.github.com/users/77cc33/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/77cc33/subscriptions", "organizations_url": "https://api.github.com/users/77cc33/orgs", "repos_url": "https://api.github.com/users/77cc33/repos", "events_url": "https://api.github.com/users/77cc33/events{/privacy}", "received_events_url": "https://api.github.com/users/77cc33/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-13T14:34:43Z", "updated_at": "2019-05-25T15:16:08Z", "closed_at": "2019-05-25T15:16:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nopenexchangerates FREE accounts return only USD base currencies, so if we have EUR base currency\r\n\r\n![image](https://user-images.githubusercontent.com/2612157/41357807-a526f1dc-6f2f-11e8-9ffc-a586c54c47a8.png)\r\n\r\nrates table will include USD rates anyway\r\n\r\n![image](https://user-images.githubusercontent.com/2612157/41357908-e020d884-6f2f-11e8-80a6-08d17aa50994.png)\r\n\r\n![image](https://user-images.githubusercontent.com/2612157/41357882-d32e377a-6f2f-11e8-9158-b2b4b3b52908.png)\r\n\r\nMaybe during rates_update we can check this situation and recalculate rates accordingly to base currency set in django app?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/422", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/422/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/422/events", "html_url": "https://github.com/django-money/django-money/issues/422", "id": 329652570, "node_id": "MDU6SXNzdWUzMjk2NTI1NzA=", "number": 422, "title": "That thing that everybody talks about", "user": {"login": "benjaoming", "id": 374612, "node_id": "MDQ6VXNlcjM3NDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/374612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaoming", "html_url": "https://github.com/benjaoming", "followers_url": "https://api.github.com/users/benjaoming/followers", "following_url": "https://api.github.com/users/benjaoming/following{/other_user}", "gists_url": "https://api.github.com/users/benjaoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaoming/subscriptions", "organizations_url": "https://api.github.com/users/benjaoming/orgs", "repos_url": "https://api.github.com/users/benjaoming/repos", "events_url": "https://api.github.com/users/benjaoming/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaoming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-06-05T22:52:07Z", "updated_at": "2019-04-22T14:20:01Z", "closed_at": "2019-04-22T13:50:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@Stranger6667 from a perception that GitLab seems to have more features and everybody else is doing it: Shall we make the move?\r\n\r\n(I don't personally like Microsoft, but we can also make the decision without this aspect, just wanted to disclose)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/420", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/420/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/420/events", "html_url": "https://github.com/django-money/django-money/issues/420", "id": 328322307, "node_id": "MDU6SXNzdWUzMjgzMjIzMDc=", "number": 420, "title": "Sprint ideas", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097983, "node_id": "MDU6TGFiZWw2NDMwOTc5ODM=", "url": "https://api.github.com/repos/django-money/django-money/labels/discussion", "name": "discussion", "color": "CC317C", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-31T22:43:34Z", "updated_at": "2018-06-10T19:32:25Z", "closed_at": "2018-06-09T19:17:26Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi @benjaoming !\r\n\r\nI'd lead a sprint on django-money this weekend and if you have any ideas for the project it would be very nice to discuss them :)\r\n\r\nMy current ideas (besides existing issues / PRs):\r\n\r\n- History for exchange rates\r\n- More providers?\r\n- Jinja2 tag equivalent\r\n- Dropping Django 1.8 support\r\n\r\nBest Regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/418", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/418/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/418/events", "html_url": "https://github.com/django-money/django-money/issues/418", "id": 326307333, "node_id": "MDU6SXNzdWUzMjYzMDczMzM=", "number": 418, "title": "Same currency conversion getting MissingRate exception", "user": {"login": "humrochagf", "id": 1223625, "node_id": "MDQ6VXNlcjEyMjM2MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1223625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/humrochagf", "html_url": "https://github.com/humrochagf", "followers_url": "https://api.github.com/users/humrochagf/followers", "following_url": "https://api.github.com/users/humrochagf/following{/other_user}", "gists_url": "https://api.github.com/users/humrochagf/gists{/gist_id}", "starred_url": "https://api.github.com/users/humrochagf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/humrochagf/subscriptions", "organizations_url": "https://api.github.com/users/humrochagf/orgs", "repos_url": "https://api.github.com/users/humrochagf/repos", "events_url": "https://api.github.com/users/humrochagf/events{/privacy}", "received_events_url": "https://api.github.com/users/humrochagf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-24T21:45:54Z", "updated_at": "2018-05-26T22:11:13Z", "closed_at": "2018-05-26T22:11:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I was running a code that sums some values at different currencies and then i found out that calling `convert_money` to the same currency of the source gets a MissingRate exception:\r\n\r\n```\r\n>>> convert_money(Money(1, 'USD'), 'USD')\r\n*** MissingRate: Rate USD -> USD does not exist\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/412", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/412/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/412/events", "html_url": "https://github.com/django-money/django-money/issues/412", "id": 324556018, "node_id": "MDU6SXNzdWUzMjQ1NTYwMTg=", "number": 412, "title": "django_money-0.13.3-py2.py3-none-any.whl is broken, no commands directory included", "user": {"login": "77cc33", "id": 2612157, "node_id": "MDQ6VXNlcjI2MTIxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2612157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/77cc33", "html_url": "https://github.com/77cc33", "followers_url": "https://api.github.com/users/77cc33/followers", "following_url": "https://api.github.com/users/77cc33/following{/other_user}", "gists_url": "https://api.github.com/users/77cc33/gists{/gist_id}", "starred_url": "https://api.github.com/users/77cc33/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/77cc33/subscriptions", "organizations_url": "https://api.github.com/users/77cc33/orgs", "repos_url": "https://api.github.com/users/77cc33/repos", "events_url": "https://api.github.com/users/77cc33/events{/privacy}", "received_events_url": "https://api.github.com/users/77cc33/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-18T21:22:00Z", "updated_at": "2018-05-19T17:26:01Z", "closed_at": "2018-05-19T17:26:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have in INSTALLED_APPS both apps\r\n```\r\n    'djmoney',\r\n    'djmoney.contrib.exchange',\r\n```\r\nBut I don't see update_rates management commands, whenever I can easily update_rates() by calling this function from the code, and it works fine.\r\n\r\nCould you say where to look?\r\n\r\nPython 3.6.5 Windows 10 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/411", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/411/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/411/events", "html_url": "https://github.com/django-money/django-money/issues/411", "id": 324044961, "node_id": "MDU6SXNzdWUzMjQwNDQ5NjE=", "number": 411, "title": "Implicit default value set on non-nullable MoneyFields where none is expected", "user": {"login": "craiga", "id": 76330, "node_id": "MDQ6VXNlcjc2MzMw", "avatar_url": "https://avatars3.githubusercontent.com/u/76330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craiga", "html_url": "https://github.com/craiga", "followers_url": "https://api.github.com/users/craiga/followers", "following_url": "https://api.github.com/users/craiga/following{/other_user}", "gists_url": "https://api.github.com/users/craiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/craiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craiga/subscriptions", "organizations_url": "https://api.github.com/users/craiga/orgs", "repos_url": "https://api.github.com/users/craiga/repos", "events_url": "https://api.github.com/users/craiga/events{/privacy}", "received_events_url": "https://api.github.com/users/craiga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-17T14:20:22Z", "updated_at": "2019-04-13T14:01:48Z", "closed_at": "2019-04-13T14:01:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that an unexpected implicit default value is being set on all non-nullable MoneyField values.\r\n\r\nWhen adding the following field to an existing model:\r\n\r\n```python\r\n    tax_per_adult = MoneyField(_(\"price per adult\"), decimal_places=5, max_digits=10)\r\n```\r\n\r\n\u2026the following is output in Django's auto-generated migration:\r\n\r\n```python\r\n        migrations.AddField(\r\n            model_name='flightsubbooking',\r\n            name='tax_per_adult',\r\n            field=djmoney.models.fields.MoneyField(decimal_places=5, default=Decimal('0.0'), max_digits=10, verbose_name='price per adult'),\r\n        ),\r\n```\r\n\r\nNote that this field now has a default value of `Decimal('0.0')`.\r\n\r\nI would expect that this field would behave like any other. That is, if no default value is specified and no explicit value is given, an error would be raised.\r\n\r\nAs this isn't happening, there's a risk of `tax_per_adult` silently being set to `0.0`.\r\n\r\nI'm using django-money 0.13.2 and django 1.11.12.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/405", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/405/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/405/events", "html_url": "https://github.com/django-money/django-money/issues/405", "id": 322476059, "node_id": "MDU6SXNzdWUzMjI0NzYwNTk=", "number": 405, "title": "Add django-money-factories to organisation", "user": {"login": "ZuluPro", "id": 2029180, "node_id": "MDQ6VXNlcjIwMjkxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2029180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZuluPro", "html_url": "https://github.com/ZuluPro", "followers_url": "https://api.github.com/users/ZuluPro/followers", "following_url": "https://api.github.com/users/ZuluPro/following{/other_user}", "gists_url": "https://api.github.com/users/ZuluPro/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZuluPro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZuluPro/subscriptions", "organizations_url": "https://api.github.com/users/ZuluPro/orgs", "repos_url": "https://api.github.com/users/ZuluPro/repos", "events_url": "https://api.github.com/users/ZuluPro/events{/privacy}", "received_events_url": "https://api.github.com/users/ZuluPro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-12T02:37:44Z", "updated_at": "2018-05-12T18:34:47Z", "closed_at": "2018-05-12T18:34:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI needed to do some tests linked to django-money.\r\nSo I created factory.\r\n\r\nUnfortunately, the `tests` directory isn't integrated to `djmoney`, so if I put factories in tests, it won't be available for users.\r\nSo I you could accept the repository below in your organisation:\r\nhttps://github.com/ZuluPro/django-money-factories", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/404", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/404/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/404/events", "html_url": "https://github.com/django-money/django-money/issues/404", "id": 320609751, "node_id": "MDU6SXNzdWUzMjA2MDk3NTE=", "number": 404, "title": "Wrong package name, better suits `django-currency`", "user": {"login": "ArtemBernatskyy", "id": 13070119, "node_id": "MDQ6VXNlcjEzMDcwMTE5", "avatar_url": "https://avatars3.githubusercontent.com/u/13070119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArtemBernatskyy", "html_url": "https://github.com/ArtemBernatskyy", "followers_url": "https://api.github.com/users/ArtemBernatskyy/followers", "following_url": "https://api.github.com/users/ArtemBernatskyy/following{/other_user}", "gists_url": "https://api.github.com/users/ArtemBernatskyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArtemBernatskyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArtemBernatskyy/subscriptions", "organizations_url": "https://api.github.com/users/ArtemBernatskyy/orgs", "repos_url": "https://api.github.com/users/ArtemBernatskyy/repos", "events_url": "https://api.github.com/users/ArtemBernatskyy/events{/privacy}", "received_events_url": "https://api.github.com/users/ArtemBernatskyy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-06T17:10:42Z", "updated_at": "2019-01-22T22:20:28Z", "closed_at": "2018-05-12T15:19:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a difference between money (gold, silver etc) and currency (USD, EUR, etc)\r\n\r\nhttps://www.quora.com/What-is-the-difference-between-currency-and-money-1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/403", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/403/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/403/events", "html_url": "https://github.com/django-money/django-money/issues/403", "id": 318579224, "node_id": "MDU6SXNzdWUzMTg1NzkyMjQ=", "number": 403, "title": "CERTIFICATE_VERIFY_FAILED when executing OpenExchangeRatesBackend().update_rates()", "user": {"login": "tourdownunder", "id": 829044, "node_id": "MDQ6VXNlcjgyOTA0NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/829044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tourdownunder", "html_url": "https://github.com/tourdownunder", "followers_url": "https://api.github.com/users/tourdownunder/followers", "following_url": "https://api.github.com/users/tourdownunder/following{/other_user}", "gists_url": "https://api.github.com/users/tourdownunder/gists{/gist_id}", "starred_url": "https://api.github.com/users/tourdownunder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tourdownunder/subscriptions", "organizations_url": "https://api.github.com/users/tourdownunder/orgs", "repos_url": "https://api.github.com/users/tourdownunder/repos", "events_url": "https://api.github.com/users/tourdownunder/events{/privacy}", "received_events_url": "https://api.github.com/users/tourdownunder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-27T23:48:12Z", "updated_at": "2019-04-22T10:27:31Z", "closed_at": "2019-04-22T10:27:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is anybody else having issues with rates with 13.2. I'm new to rates, though followed the [docs](https://github.com/django-money/django-money#working-with-exchange-rates) seem to be getting CERTIFICATE_VERIFY_FAILED even though I can get the same api calls to work through requests directly. \r\n\r\n```\r\npython manage.py shell\r\nPython 3.6.3 (v3.6.3:2c5fed86e0, Oct  3 2017, 00:32:08) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.3.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: from djmoney.contrib.exchange.backends import OpenExchangeRatesBackend\r\n   ...: from djmoney.contrib.exchange.models import get_rate\r\n   ...: from ipdb import set_trace; set_trace()\r\n   ...: OpenExchangeRatesBackend().update_rates()\r\n   ...: \r\n   ...: \r\n--Return--\r\nNone\r\n> <ipython-input-1-67fb03c4b911>(3)<module>()\r\n      2 from djmoney.contrib.exchange.models import get_rate\r\n----> 3 from ipdb import set_trace; set_trace()\r\n      4 OpenExchangeRatesBackend().update_rates()\r\n\r\nipdb> c\r\n---------------------------------------------------------------------------\r\nSSLError                                  Traceback (most recent call last)\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/urllib/request.py in do_open(self, http_class, req, **http_conn_args)\r\n   1317                 h.request(req.get_method(), req.selector, req.data, headers,\r\n-> 1318                           encode_chunked=req.has_header('Transfer-encoding'))\r\n   1319             except OSError as err: # timeout error\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py in request(self, method, url, body, headers, encode_chunked)\r\n   1238         \"\"\"Send a complete request to the server.\"\"\"\r\n-> 1239         self._send_request(method, url, body, headers, encode_chunked)\r\n   1240 \r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py in _send_request(self, method, url, body, headers, encode_chunked)\r\n   1284             body = _encode(body, 'body')\r\n-> 1285         self.endheaders(body, encode_chunked=encode_chunked)\r\n   1286 \r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py in endheaders(self, message_body, encode_chunked)\r\n   1233             raise CannotSendHeader()\r\n-> 1234         self._send_output(message_body, encode_chunked=encode_chunked)\r\n   1235 \r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py in _send_output(self, message_body, encode_chunked)\r\n   1025         del self._buffer[:]\r\n-> 1026         self.send(msg)\r\n   1027 \r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py in send(self, data)\r\n    963             if self.auto_open:\r\n--> 964                 self.connect()\r\n    965             else:\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/http/client.py in connect(self)\r\n   1399             self.sock = self._context.wrap_socket(self.sock,\r\n-> 1400                                                   server_hostname=server_hostname)\r\n   1401             if not self._context.check_hostname and self._check_hostname:\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py in wrap_socket(self, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, session)\r\n    406                          server_hostname=server_hostname,\r\n--> 407                          _context=self, _session=session)\r\n    408 \r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py in __init__(self, sock, keyfile, certfile, server_side, cert_reqs, ssl_version, ca_certs, do_handshake_on_connect, family, type, proto, fileno, suppress_ragged_eofs, npn_protocols, ciphers, server_hostname, _context, _session)\r\n    813                         raise ValueError(\"do_handshake_on_connect should not be specified for non-blocking sockets\")\r\n--> 814                     self.do_handshake()\r\n    815 \r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py in do_handshake(self, block)\r\n   1067                 self.settimeout(None)\r\n-> 1068             self._sslobj.do_handshake()\r\n   1069         finally:\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ssl.py in do_handshake(self)\r\n    688         \"\"\"Start the SSL/TLS handshake.\"\"\"\r\n--> 689         self._sslobj.do_handshake()\r\n    690         if self.context.check_hostname:\r\n\r\nSSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nURLError                                  Traceback (most recent call last)\r\n<ipython-input-1-67fb03c4b911> in <module>()\r\n      2 from djmoney.contrib.exchange.models import get_rate\r\n      3 from ipdb import set_trace; set_trace()\r\n----> 4 OpenExchangeRatesBackend().update_rates()\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/contextlib.py in inner(*args, **kwds)\r\n     50         def inner(*args, **kwds):\r\n     51             with self._recreate_cm():\r\n---> 52                 return func(*args, **kwds)\r\n     53         return inner\r\n     54 \r\n\r\n~/Projects/travel_analytics_markii_ws4/venv-36/lib/python3.6/site-packages/djmoney/contrib/exchange/backends/base.py in update_rates(self, base_currency, **kwargs)\r\n     58         Rate.objects.bulk_create([\r\n     59             Rate(currency=currency, value=value, backend=backend)\r\n---> 60             for currency, value in self.get_rates(**params).items()\r\n     61         ])\r\n     62 \r\n\r\n~/Projects/travel_analytics_markii_ws4/venv-36/lib/python3.6/site-packages/djmoney/contrib/exchange/backends/base.py in get_rates(self, **params)\r\n     69 \r\n     70     def get_rates(self, **params):\r\n---> 71         response = self.get_response(**params)\r\n     72         return self.parse_json(response)['rates']\r\n\r\n~/Projects/travel_analytics_markii_ws4/venv-36/lib/python3.6/site-packages/djmoney/contrib/exchange/backends/base.py in get_response(self, **params)\r\n     39     def get_response(self, **params):\r\n     40         url = self.get_url(**params)\r\n---> 41         response = urlopen(url)\r\n     42         return response.read()\r\n     43 \r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/urllib/request.py in urlopen(url, data, timeout, cafile, capath, cadefault, context)\r\n    221     else:\r\n    222         opener = _opener\r\n--> 223     return opener.open(url, data, timeout)\r\n    224 \r\n    225 def install_opener(opener):\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/urllib/request.py in open(self, fullurl, data, timeout)\r\n    524             req = meth(req)\r\n    525 \r\n--> 526         response = self._open(req, data)\r\n    527 \r\n    528         # post-process response\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/urllib/request.py in _open(self, req, data)\r\n    542         protocol = req.type\r\n    543         result = self._call_chain(self.handle_open, protocol, protocol +\r\n--> 544                                   '_open', req)\r\n    545         if result:\r\n    546             return result\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/urllib/request.py in _call_chain(self, chain, kind, meth_name, *args)\r\n    502         for handler in handlers:\r\n    503             func = getattr(handler, meth_name)\r\n--> 504             result = func(*args)\r\n    505             if result is not None:\r\n    506                 return result\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/urllib/request.py in https_open(self, req)\r\n   1359         def https_open(self, req):\r\n   1360             return self.do_open(http.client.HTTPSConnection, req,\r\n-> 1361                 context=self._context, check_hostname=self._check_hostname)\r\n   1362 \r\n   1363         https_request = AbstractHTTPHandler.do_request_\r\n\r\n/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/urllib/request.py in do_open(self, http_class, req, **http_conn_args)\r\n   1318                           encode_chunked=req.has_header('Transfer-encoding'))\r\n   1319             except OSError as err: # timeout error\r\n-> 1320                 raise URLError(err)\r\n   1321             r = h.getresponse()\r\n   1322         except:\r\n\r\nURLError: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777)>\r\n```\r\n\r\nIn settings.py\r\nadded     'djmoney.contrib.exchange' to installed apps\r\n\r\n```\r\nAnd the following \r\n# EXCHANGE_BACKEND = 'djmoney.contrib.exchange.backends.OpenExchangeRatesBackend'  # Not needed default\r\nOPEN_EXCHANGE_RATES_APP_ID = 'MY_APP_ID'\r\n# OPEN_EXCHANGE_RATES_URL = 'https://openexchangerates.org/api/latest.json'  # Not needed default\r\n```\r\n\r\nI don't have the issue when using requests directly\r\n\r\n```\r\nimport requests\r\nr = requests.get('https://openexchangerates.org/api/latest.json?app_id=MY_APP_ID&base=AUD')\r\nr.status_code\r\nr.headers['content-type']\r\nr.encoding\r\nr.text\r\nr.json()\r\n```\r\n\r\nEdit: I just switched the config to use FixerBackend and it worked. So thats what I'll do to get me over this hurdle. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/402", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/402/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/402/events", "html_url": "https://github.com/django-money/django-money/issues/402", "id": 317412661, "node_id": "MDU6SXNzdWUzMTc0MTI2NjE=", "number": 402, "title": "Error in using the money_localize in the template.", "user": {"login": "marcelodelta", "id": 2933264, "node_id": "MDQ6VXNlcjI5MzMyNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2933264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelodelta", "html_url": "https://github.com/marcelodelta", "followers_url": "https://api.github.com/users/marcelodelta/followers", "following_url": "https://api.github.com/users/marcelodelta/following{/other_user}", "gists_url": "https://api.github.com/users/marcelodelta/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelodelta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelodelta/subscriptions", "organizations_url": "https://api.github.com/users/marcelodelta/orgs", "repos_url": "https://api.github.com/users/marcelodelta/repos", "events_url": "https://api.github.com/users/marcelodelta/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelodelta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-24T22:07:29Z", "updated_at": "2018-06-08T21:43:41Z", "closed_at": "2018-06-08T21:43:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error in using the money_localize in the template.\r\n\r\nsequence item 7: expected str instance, Money found\r\n\r\n2.0.4\r\nTypeError\r\nsequence item 7: expected str instance, Money found\r\n/usr/local/lib/python3.6/site-packages/django/template/defaulttags.py in render, line 218\r\n/usr/local/bin/python\r\n3.6.5\r\n\r\n----\r\n$ pip install django-money\r\nINSTALLED_APPS = [\r\n   ...,\r\n   'djmoney',\r\n   ...\r\n]\r\n\r\n{% load djmoney %}\r\n...\r\n{% money_localize '4.5' 'USD' %}\r\n\r\n\r\nAm I doing something wrong?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/400", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/400/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/400/events", "html_url": "https://github.com/django-money/django-money/issues/400", "id": 313712567, "node_id": "MDU6SXNzdWUzMTM3MTI1Njc=", "number": 400, "title": "Default manager is not patched in some cases", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-12T12:49:18Z", "updated_at": "2018-04-16T19:41:07Z", "closed_at": "2018-04-16T19:41:07Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "If default manager is customized via ``Meta.default_manager_name``, and the model has ``MoneyField``m then the manager will not be patched, because we only look for ``objects`` manager name.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/398", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/398/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/398/events", "html_url": "https://github.com/django-money/django-money/issues/398", "id": 313036742, "node_id": "MDU6SXNzdWUzMTMwMzY3NDI=", "number": 398, "title": "Cache for currency exchange rates", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643098438, "node_id": "MDU6TGFiZWw2NDMwOTg0Mzg=", "url": "https://api.github.com/repos/django-money/django-money/labels/enhancement", "name": "enhancement", "color": "5EBEFF", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-10T18:20:47Z", "updated_at": "2018-06-03T21:51:28Z", "closed_at": "2018-06-03T21:51:28Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Default Django cache would not work, since it doesn't allow any args / kwargs by default. Possible options:\r\n1. Use `functools.lru_cache`. Simple to add, but will work only for current process\r\n2. Implement args / kwargs processing for `get_rate` and use default Django cache as a storage. The idea is the same as for `functools.lru_cache` except for LRU part and this storage will be shared among all processes running the same app.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/394", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/394/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/394/events", "html_url": "https://github.com/django-money/django-money/issues/394", "id": 312893062, "node_id": "MDU6SXNzdWUzMTI4OTMwNjI=", "number": 394, "title": "Documentation about periodic rates updates", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643099641, "node_id": "MDU6TGFiZWw2NDMwOTk2NDE=", "url": "https://api.github.com/repos/django-money/django-money/labels/documentation", "name": "documentation", "color": "FEF2C0", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-10T12:05:44Z", "updated_at": "2020-02-11T10:04:48Z", "closed_at": "2019-04-13T22:11:36Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Add a new section in \"exchange rates\" block about how to set up periodic rates updates. Code snippets could look like this:\r\n\r\n```python\r\n# tasks.py\r\nfrom celery import shared_task\r\nfrom celery.schedules import crontab\r\n\r\nfrom djmoney import settings\r\n\r\n@shared_task\r\ndef update_rates(backend=settings.EXCHANGE_BACKEND, **kwargs):\r\n    backend = import_string(backend)()\r\n    backend.update_rates(**kwargs)\r\n\r\n\r\n# settings.py\r\nCELERYBEAT_SCHEDULE = {\r\n    'update_rates': {\r\n        'task': 'path.to.task',\r\n        'schedule': crontab(minute=0, hour=0),\r\n        'kwargs': {}  # For custom arguments\r\n    }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/392", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/392/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/392/events", "html_url": "https://github.com/django-money/django-money/issues/392", "id": 312281376, "node_id": "MDU6SXNzdWUzMTIyODEzNzY=", "number": 392, "title": "Admin integration for currency exchange", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643098438, "node_id": "MDU6TGFiZWw2NDMwOTg0Mzg=", "url": "https://api.github.com/repos/django-money/django-money/labels/enhancement", "name": "enhancement", "color": "5EBEFF", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-08T07:34:13Z", "updated_at": "2018-04-16T19:41:06Z", "closed_at": "2018-04-16T19:41:06Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/383", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/383/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/383/events", "html_url": "https://github.com/django-money/django-money/issues/383", "id": 306377803, "node_id": "MDU6SXNzdWUzMDYzNzc4MDM=", "number": 383, "title": "[Robertino10]", "user": {"login": "Robertino10", "id": 35300011, "node_id": "MDQ6VXNlcjM1MzAwMDEx", "avatar_url": "https://avatars0.githubusercontent.com/u/35300011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Robertino10", "html_url": "https://github.com/Robertino10", "followers_url": "https://api.github.com/users/Robertino10/followers", "following_url": "https://api.github.com/users/Robertino10/following{/other_user}", "gists_url": "https://api.github.com/users/Robertino10/gists{/gist_id}", "starred_url": "https://api.github.com/users/Robertino10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Robertino10/subscriptions", "organizations_url": "https://api.github.com/users/Robertino10/orgs", "repos_url": "https://api.github.com/users/Robertino10/repos", "events_url": "https://api.github.com/users/Robertino10/events{/privacy}", "received_events_url": "https://api.github.com/users/Robertino10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-19T08:57:32Z", "updated_at": "2018-03-19T09:10:22Z", "closed_at": "2018-03-19T09:02:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "\"[find a way to send money]\"\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/381", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/381/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/381/events", "html_url": "https://github.com/django-money/django-money/issues/381", "id": 303344610, "node_id": "MDU6SXNzdWUzMDMzNDQ2MTA=", "number": 381, "title": "Render without symbols", "user": {"login": "KhanMaytok", "id": 5711547, "node_id": "MDQ6VXNlcjU3MTE1NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5711547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KhanMaytok", "html_url": "https://github.com/KhanMaytok", "followers_url": "https://api.github.com/users/KhanMaytok/followers", "following_url": "https://api.github.com/users/KhanMaytok/following{/other_user}", "gists_url": "https://api.github.com/users/KhanMaytok/gists{/gist_id}", "starred_url": "https://api.github.com/users/KhanMaytok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KhanMaytok/subscriptions", "organizations_url": "https://api.github.com/users/KhanMaytok/orgs", "repos_url": "https://api.github.com/users/KhanMaytok/repos", "events_url": "https://api.github.com/users/KhanMaytok/events{/privacy}", "received_events_url": "https://api.github.com/users/KhanMaytok/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643098139, "node_id": "MDU6TGFiZWw2NDMwOTgxMzk=", "url": "https://api.github.com/repos/django-money/django-money/labels/question", "name": "question", "color": "CC317C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-08T03:34:15Z", "updated_at": "2018-04-07T15:56:37Z", "closed_at": "2018-04-07T15:56:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The money field is rendered in template with a symbol, for example:\r\n\r\n    $100.00\r\n\r\nHow to render without symbol? I would like:\r\n\r\n    100.00", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/379", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/379/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/379/events", "html_url": "https://github.com/django-money/django-money/issues/379", "id": 300490532, "node_id": "MDU6SXNzdWUzMDA0OTA1MzI=", "number": 379, "title": "TypeError: Object of type 'Money' is not JSON serializable", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-27T04:33:02Z", "updated_at": "2018-02-27T05:07:44Z", "closed_at": "2018-02-27T05:07:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had read the official docs already, but it does make use on `Meta` class.\r\nMy case I need to use it as a stand-alone class and instantiate the `serializer` to do `deserialization`\r\nBecause of calculation in `Order` and `OrderItem`\r\n\r\n`models.py`\r\n```python\r\nfrom django.conf import settings\r\nfrom django.db import models\r\nfrom djchoices import DjangoChoices, ChoiceItem\r\nfrom djmoney.models.fields import MoneyField\r\n\r\nfrom poinkbackend.apps.commons.models import AbstractTimestamp\r\nfrom poinkbackend.apps.menus.models import Menu\r\nfrom poinkbackend.apps.orders.models import Order\r\nfrom poinkbackend.apps.prices.models import Price\r\n\r\n\r\nclass OrderItem(AbstractTimestamp):\r\n    class OrderItemStatus(DjangoChoices):\r\n        new = ChoiceItem(1)  # First state\r\n        placed = ChoiceItem(2)  # This is mandatory\r\n        cooking = ChoiceItem(3)  # This is optional\r\n        cancelled = ChoiceItem(4)   # Before `placed` can change it\r\n\r\n    # For searching purpose\r\n    order = models.ForeignKey(Order, on_delete=models.CASCADE,\r\n                              related_name='order_items', related_query_name='order_items',\r\n                              null=True, blank=True)  # Will enforce relationship in `OrderItemManager`\r\n    # Suppose in the future this menu is cancelled. Not sell anymore\r\n    # Previous entity must be preserved. Therefore snapshot will save the latest state\r\n    menu = models.ForeignKey(Menu, related_name='order_items', related_query_name='order_items',\r\n                             on_delete=models.SET_NULL, null=True, blank=True)\r\n    qty = models.PositiveIntegerField(default=1)\r\n    size = models.CharField(max_length=5, choices=Price.MenuSize.choices, default=Price.MenuSize.M)\r\n\r\n    # UnitPrice. For serializer purpose. UnitPrice should be static and not evolve over time\r\n    price = MoneyField(max_digits=10, decimal_places=2, default_currency=settings.DEFAULT_CURRENCY)\r\n    status = models.PositiveSmallIntegerField(choices=OrderItemStatus.choices, default=OrderItemStatus.new)\r\n\r\n    def __str__(self):\r\n        return f'{self.menu} {self.qty}'\r\n```\r\n\r\n`serializers.py`\r\n```python\r\nfrom rest_framework import serializers\r\n\r\nfrom poinkbackend.apps.order_items.models import OrderItem\r\n\r\n\r\nclass OrderItemSerializer(serializers.ModelSerializer):\r\n    url = serializers.HyperlinkedRelatedField(source='id', read_only=True, view_name='api:order_item-detail')\r\n    calculated_price = serializers.SerializerMethodField(read_only=True)\r\n\r\n    class Meta:\r\n        model = OrderItem\r\n        fields = [\r\n            'id',\r\n            'url',\r\n            'order',\r\n            'menu',\r\n            'qty',\r\n            'size',\r\n            'status',\r\n            'calculated_price',\r\n        ]\r\n        read_only_fields = [\r\n            'id',\r\n        ]\r\n\r\n    def get_calculated_price(self, order_item: OrderItem):\r\n        money = order_item.menu.prices.get(size=order_item.size)\r\n        return money.price * order_item.qty\r\n```\r\n\r\nI am thinking to workaround by grab the [file](https://github.com/django-money/django-money/blob/master/djmoney/serializers.py) and make my own class.\r\nWhat is the best solution better than this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/378", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/378/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/378/events", "html_url": "https://github.com/django-money/django-money/issues/378", "id": 298964611, "node_id": "MDU6SXNzdWUyOTg5NjQ2MTE=", "number": 378, "title": "How to define zero for universal `Money`?", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-21T13:12:34Z", "updated_at": "2018-02-22T06:15:44Z", "closed_at": "2018-02-22T06:15:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nI run into very classic problem\r\nIt will be more friendly for me to has universal `zero`\r\nSince I will be easily iterate through the list\r\n\r\nMy workaround would be another `class` for this summation\r\nIf anybody here has shortcut please let me know.\r\n\r\n```\r\nMoney('0') + Money('1', 'EUR')\r\n```\r\n\r\nError:\r\n`TypeError: Cannot add or subtract two Money instances with different currencies.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/377", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/377/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/377/events", "html_url": "https://github.com/django-money/django-money/issues/377", "id": 298067941, "node_id": "MDU6SXNzdWUyOTgwNjc5NDE=", "number": 377, "title": "MoneyField wont appear in django admin or DRF", "user": {"login": "softmarshmallow", "id": 16307013, "node_id": "MDQ6VXNlcjE2MzA3MDEz", "avatar_url": "https://avatars3.githubusercontent.com/u/16307013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/softmarshmallow", "html_url": "https://github.com/softmarshmallow", "followers_url": "https://api.github.com/users/softmarshmallow/followers", "following_url": "https://api.github.com/users/softmarshmallow/following{/other_user}", "gists_url": "https://api.github.com/users/softmarshmallow/gists{/gist_id}", "starred_url": "https://api.github.com/users/softmarshmallow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/softmarshmallow/subscriptions", "organizations_url": "https://api.github.com/users/softmarshmallow/orgs", "repos_url": "https://api.github.com/users/softmarshmallow/repos", "events_url": "https://api.github.com/users/softmarshmallow/events{/privacy}", "received_events_url": "https://api.github.com/users/softmarshmallow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-18T08:26:55Z", "updated_at": "2018-02-18T15:22:36Z", "closed_at": "2018-02-18T15:22:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "simply it wont appear on django admin.\r\nAnd wont show up on drf page...\r\nReturning  this message\r\n\r\n```\r\nObject of type 'MoneyField' is not JSON serializable\r\n--\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/376", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/376/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/376/events", "html_url": "https://github.com/django-money/django-money/issues/376", "id": 296298778, "node_id": "MDU6SXNzdWUyOTYyOTg3Nzg=", "number": 376, "title": "REST framework field doesn't work with model validation", "user": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-12T08:42:27Z", "updated_at": "2019-04-22T13:41:45Z", "closed_at": "2019-04-22T13:41:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Scenario: Want to add MinValueValidator to model money field.\r\n\r\nA Decimal based minimum value doesn't work because on saving a model instance, djmoney complains it can't compare the decimal minimum value with the instance's Money object (understandably).\r\n\r\nA Money based minimum value doesn't work because then REST framework field expects Decimal validators, so it complains it can't compare the Money minimum value with the REST request's Decimal value.\r\n\r\nThe only way to fix this is to repeat the Money field definition in the REST framework serializer class and make it use a second version of the MinValueValidator that is Decimal based.\r\n\r\nI think we should be using Money based validation in the REST framework field instead of Decimal based. And make the REST Money field return Money objects rather than Decimal all the time (not only if currency is explicitly given in request).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/371", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/371/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/371/events", "html_url": "https://github.com/django-money/django-money/issues/371", "id": 281525702, "node_id": "MDU6SXNzdWUyODE1MjU3MDI=", "number": 371, "title": "BaseMoneyValidator fails to validate falsy ints and Decimals", "user": {"login": "1337", "id": 415989, "node_id": "MDQ6VXNlcjQxNTk4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/415989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1337", "html_url": "https://github.com/1337", "followers_url": "https://api.github.com/users/1337/followers", "following_url": "https://api.github.com/users/1337/following{/other_user}", "gists_url": "https://api.github.com/users/1337/gists{/gist_id}", "starred_url": "https://api.github.com/users/1337/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1337/subscriptions", "organizations_url": "https://api.github.com/users/1337/orgs", "repos_url": "https://api.github.com/users/1337/repos", "events_url": "https://api.github.com/users/1337/events{/privacy}", "received_events_url": "https://api.github.com/users/1337/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-12T20:26:14Z", "updated_at": "2017-12-13T13:30:04Z", "closed_at": "2017-12-13T13:30:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In [the validator code](https://github.com/django-money/django-money/blob/master/djmoney/models/validators.py#L32), any subclass of `BaseMoneyValidator` will short-circuit the validation if the validator was initialised with a falsy integer or or decimal.\r\n\r\nAttach a debugger at this code:\r\n\r\n    if not limit_value:  # 0 or Decimal('0')\r\n        return\r\n\r\nSteps to reproduce:\r\n\r\n1. Create a `MoneyField(max_digits=10, decimal_places=2, default_currency='USD')` (copied from example) but with an additional validator, like so:\r\n\r\n    ```\r\n    MoneyField(\r\n        max_digits=10, decimal_places=2,\r\n        default_currency='USD',\r\n        validators=[\r\n            MinMoneyValidator(0),\r\n        ]\r\n    )\r\n    ```\r\n\r\n1. Make a migration and migrate.\r\n1. Run the server and save any object with that new field with the Money equivalent of `(-1, 'USD')`. Observe that the validator does not raise a `ValidationError`.\r\n\r\nThis affects the common use case of validating against negative amounts of money.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/369", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/369/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/369/events", "html_url": "https://github.com/django-money/django-money/issues/369", "id": 281348969, "node_id": "MDU6SXNzdWUyODEzNDg5Njk=", "number": 369, "title": "0.12.x into master", "user": {"login": "benjaoming", "id": 374612, "node_id": "MDQ6VXNlcjM3NDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/374612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaoming", "html_url": "https://github.com/benjaoming", "followers_url": "https://api.github.com/users/benjaoming/followers", "following_url": "https://api.github.com/users/benjaoming/following{/other_user}", "gists_url": "https://api.github.com/users/benjaoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaoming/subscriptions", "organizations_url": "https://api.github.com/users/benjaoming/orgs", "repos_url": "https://api.github.com/users/benjaoming/repos", "events_url": "https://api.github.com/users/benjaoming/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaoming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-12T11:25:05Z", "updated_at": "2018-02-20T12:16:59Z", "closed_at": "2018-02-20T12:16:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @Stranger6667 \r\n\r\nOne small issue now regarding the branch tracking is that `0.12.x` isn't mergeable to `master`.\r\n\r\nThe release branches have to always be mergeable with `master` so it's easy to move things \"up\" in the release chronology. Don't know if that makes sense :)\r\n\r\nI'll have a look at it now...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/366", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/366/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/366/events", "html_url": "https://github.com/django-money/django-money/issues/366", "id": 279031907, "node_id": "MDU6SXNzdWUyNzkwMzE5MDc=", "number": 366, "title": "Repr of djmoney.money.Money rounded down", "user": {"login": "evenicoulddoit", "id": 3514018, "node_id": "MDQ6VXNlcjM1MTQwMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3514018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evenicoulddoit", "html_url": "https://github.com/evenicoulddoit", "followers_url": "https://api.github.com/users/evenicoulddoit/followers", "following_url": "https://api.github.com/users/evenicoulddoit/following{/other_user}", "gists_url": "https://api.github.com/users/evenicoulddoit/gists{/gist_id}", "starred_url": "https://api.github.com/users/evenicoulddoit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evenicoulddoit/subscriptions", "organizations_url": "https://api.github.com/users/evenicoulddoit/orgs", "repos_url": "https://api.github.com/users/evenicoulddoit/repos", "events_url": "https://api.github.com/users/evenicoulddoit/events{/privacy}", "received_events_url": "https://api.github.com/users/evenicoulddoit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-04T15:17:13Z", "updated_at": "2017-12-04T16:55:32Z", "closed_at": "2017-12-04T16:55:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry if this has already been brought up, but I couldn't see anything obvious when searching for repr.\r\n\r\nWithin a console, if I do the following I get confusing results:\r\n\r\n```py\r\nIn [63]: m\r\nOut[63]: 9 GBP\r\n\r\nIn [64]: type(m)\r\nOut[64]: djmoney.money.Money\r\n\r\nIn [65]: vars(m)\r\nOut[65]: \r\n{'_constructor_args': ((), {'amount': Decimal('9.75'), 'currency': u'GBP'}),\r\n 'amount': Decimal('9.75'),\r\n 'currency': GBP}\r\n```\r\n\r\nHowever, constructing a `moneyed.Money` result produces the following:\r\n\r\n```py\r\nIn [67]: m2\r\nOut[67]: <Money: 9.75 GBP>\r\n\r\nIn [68]: vars(m2)\r\nOut[68]: {'amount': Decimal('9.75'), 'currency': GBP}\r\n\r\nIn [70]: type(m2)\r\nOut[70]: moneyed.classes.Money\r\n```\r\nIt seems like the [py-moneyed team took the decision to remove the rounding down in 2015](https://github.com/limist/py-moneyed/pull/67) - is there a reason you've chosen not to? Looking at your implementation would suggest that you copied the code verbatim when constructing your overloaded version. Should I be exclusively using `djmoney.money.Money` over `moneyed.Money`?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/364", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/364/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/364/events", "html_url": "https://github.com/django-money/django-money/issues/364", "id": 278770070, "node_id": "MDU6SXNzdWUyNzg3NzAwNzA=", "number": 364, "title": "`get_or_create` does not work with models with shared currency", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-12-03T12:29:06Z", "updated_at": "2017-12-03T16:36:11Z", "closed_at": "2017-12-03T16:36:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It fails because of this [line](https://github.com/django-money/django-money/blob/master/djmoney/models/managers.py#L167)\r\n\r\nin that case relevant money field could not be found.\r\n\r\n```\r\n   def _handle_currency_field(model, name, kwargs):\r\n        name = _get_clean_name(model, name)\r\n        money_field_name = name[:-9]  # Remove '_currency'\r\n        money_field = _get_field(model, money_field_name)\r\n>       if money_field.default is not None:\r\nE       AttributeError: 'NoneType' object has no attribute 'default'\r\n\r\ndjmoney/models/managers.py:169: AttributeError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/363", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/363/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/363/events", "html_url": "https://github.com/django-money/django-money/issues/363", "id": 278768312, "node_id": "MDU6SXNzdWUyNzg3NjgzMTI=", "number": 363, "title": "Drop support for Django 1.10", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-03T12:10:31Z", "updated_at": "2018-02-20T12:05:01Z", "closed_at": "2018-02-20T12:05:01Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "As it reached EOL ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/361", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/361/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/361/events", "html_url": "https://github.com/django-money/django-money/issues/361", "id": 278477276, "node_id": "MDU6SXNzdWUyNzg0NzcyNzY=", "number": 361, "title": "Django 2.1 compatibility", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-12-01T14:10:11Z", "updated_at": "2017-12-01T15:40:41Z", "closed_at": "2017-12-01T15:40:41Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Since QUERY_TERMS are removed, we need to rewrite `djmoney.models.managers._get_field` and `djmoney.models.managers._get_clean_name` in a different way", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/358", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/358/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/358/events", "html_url": "https://github.com/django-money/django-money/issues/358", "id": 275335248, "node_id": "MDU6SXNzdWUyNzUzMzUyNDg=", "number": 358, "title": "Request Feature: Django REST renders the currency and response with currency", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-20T12:13:51Z", "updated_at": "2017-11-20T20:20:13Z", "closed_at": "2017-11-20T20:20:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "**requirements.txt**:\r\n```bash\r\n-e git+git@github.com:django-money/django-money.git@master#egg=django-money\r\ndjango==1.11.7\r\ndjangorestframework==3.7.3\r\n```\r\n\r\n\r\n**models.py**\r\n```python\r\nclass Order(ActivityMixin, AbstractTimestamp):\r\n    poink = models.PositiveIntegerField(default=0)\r\n    amount = MoneyField(max_digits=10, decimal_places=2, default_currency='THB')\r\n    cashier = models.ForeignKey(User, related_name='orders', on_delete=models.PROTECT)\r\n    branch = models.ForeignKey(Branch, related_name='orders', on_delete=models.PROTECT, null=True, blank=True)\r\n\r\n    activities = GenericRelation(Activity, related_query_name='orders', related_name='orders')\r\n\r\n    objects = OrderManager()\r\n\r\n    def __str__(self):\r\n        return f'{self.amount}'\r\n```\r\n\r\n\r\n**serializers.py**\r\n```python\r\nimport logging\r\n\r\nfrom rest_framework import serializers\r\n\r\nfrom poinkbackend.apps.orders.models import Order\r\n\r\nlogger = logging.getLogger('django')\r\n\r\n\r\nclass OrderSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Order\r\n        fields = [\r\n            'poink',\r\n            'amount',\r\n            'cashier',\r\n            'branch',\r\n        ]\r\n```\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/18206728/33017924-df55ce5a-ce26-11e7-9748-75f3989cd7c3.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/355", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/355/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/355/events", "html_url": "https://github.com/django-money/django-money/issues/355", "id": 275048675, "node_id": "MDU6SXNzdWUyNzUwNDg2NzU=", "number": 355, "title": "How do you get the value of the field with the symbolic representation of the currency?", "user": {"login": "aventurella", "id": 75315, "node_id": "MDQ6VXNlcjc1MzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/75315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aventurella", "html_url": "https://github.com/aventurella", "followers_url": "https://api.github.com/users/aventurella/followers", "following_url": "https://api.github.com/users/aventurella/following{/other_user}", "gists_url": "https://api.github.com/users/aventurella/gists{/gist_id}", "starred_url": "https://api.github.com/users/aventurella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aventurella/subscriptions", "organizations_url": "https://api.github.com/users/aventurella/orgs", "repos_url": "https://api.github.com/users/aventurella/repos", "events_url": "https://api.github.com/users/aventurella/events{/privacy}", "received_events_url": "https://api.github.com/users/aventurella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-18T03:12:53Z", "updated_at": "2017-11-20T20:21:40Z", "closed_at": "2017-11-20T20:21:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "In python, not a serializer and not a template.\r\n\r\nFor example, \r\n\r\n```python\r\nstr(myModel.price) # US$32.00\r\n```\r\n\r\nIs there a way to omit the `US` portion and just return `$32.00`?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/354", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/354/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/354/events", "html_url": "https://github.com/django-money/django-money/issues/354", "id": 274700248, "node_id": "MDU6SXNzdWUyNzQ3MDAyNDg=", "number": 354, "title": "Release 0.12.1", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "benjaoming", "id": 374612, "node_id": "MDQ6VXNlcjM3NDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/374612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaoming", "html_url": "https://github.com/benjaoming", "followers_url": "https://api.github.com/users/benjaoming/followers", "following_url": "https://api.github.com/users/benjaoming/following{/other_user}", "gists_url": "https://api.github.com/users/benjaoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaoming/subscriptions", "organizations_url": "https://api.github.com/users/benjaoming/orgs", "repos_url": "https://api.github.com/users/benjaoming/repos", "events_url": "https://api.github.com/users/benjaoming/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaoming/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "benjaoming", "id": 374612, "node_id": "MDQ6VXNlcjM3NDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/374612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaoming", "html_url": "https://github.com/benjaoming", "followers_url": "https://api.github.com/users/benjaoming/followers", "following_url": "https://api.github.com/users/benjaoming/following{/other_user}", "gists_url": "https://api.github.com/users/benjaoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaoming/subscriptions", "organizations_url": "https://api.github.com/users/benjaoming/orgs", "repos_url": "https://api.github.com/users/benjaoming/repos", "events_url": "https://api.github.com/users/benjaoming/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaoming/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-11-16T23:27:09Z", "updated_at": "2017-11-20T10:46:44Z", "closed_at": "2017-11-20T10:28:46Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi @benjaoming \r\nCan we make a new bugfix release from ``0.12.x`` branch? I missed some commits with documentation - should I add them also to ``0.12.x``?\r\n\r\nKind Regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/352", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/352/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/352/events", "html_url": "https://github.com/django-money/django-money/issues/352", "id": 274416932, "node_id": "MDU6SXNzdWUyNzQ0MTY5MzI=", "number": 352, "title": "*** AttributeError: 'Money' object has no attribute 'value'", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-16T07:17:23Z", "updated_at": "2017-11-16T09:32:50Z", "closed_at": "2017-11-16T09:32:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "django==1.11.7\r\ndjangorestframework==3.7.3\r\npy-moneyed==0.7.0         # via django-money\r\ndjango-money==0.12\r\n\r\n\r\n**models.py**\r\n```python\r\nfrom django.contrib.auth.models import User\r\nfrom django.contrib.contenttypes.fields import GenericRelation\r\nfrom django.db import models\r\nfrom djmoney.models.fields import MoneyField\r\n\r\nfrom poinkbackend.apps.activities.models import Activity, ActivityMixin\r\nfrom poinkbackend.apps.branches.models import Branch\r\nfrom poinkbackend.apps.commons.models import AbstractTimestamp\r\n\r\n\r\nclass Order(ActivityMixin, AbstractTimestamp):\r\n    poink = models.PositiveIntegerField()\r\n    amount = MoneyField(max_digits=10, decimal_places=2, default_currency='THB')\r\n    cashier = models.ForeignKey(User, related_name='orders', on_delete=models.PROTECT)\r\n    branch = models.ForeignKey(Branch, related_name='orders', on_delete=models.PROTECT, null=True, blank=True)\r\n\r\n    activities = GenericRelation(Activity, related_query_name='orders', related_name='orders')\r\n\r\n    def __str__(self):\r\n        return f'{self.amount.value}'\r\n```\r\n\r\nAnother one\r\n```python\r\nfrom django.contrib.auth.models import User\r\nfrom django.contrib.contenttypes.fields import GenericForeignKey\r\nfrom django.contrib.contenttypes.models import ContentType\r\nfrom django.db import models\r\nfrom djchoices import DjangoChoices, ChoiceItem\r\nfrom djmoney.forms import MoneyField\r\n\r\nfrom poinkbackend.apps.commons.models import AbstractTimestamp\r\n\r\n\r\nclass ActivityMixin:\r\n    @property\r\n    def get_activity(self):\r\n        ctype = ContentType.objects.get_for_model(self.__class__)\r\n        try:\r\n            event = Activity.objects.get(content_type__pk=ctype.id, object_id=self.id)\r\n        except:\r\n            return None\r\n        return event\r\n\r\n\r\nclass Activity(AbstractTimestamp):\r\n    \"\"\"\r\n    Poink Transaction. I name activities to avoid confusion between Django transaction\r\n    type will dictates the sign +/-\r\n    \"\"\"\r\n\r\n    class ActivityType(DjangoChoices):\r\n        redeem = ChoiceItem(\"redeem\")\r\n        order = ChoiceItem(\"order\")\r\n        amend = ChoiceItem(\"amend\")\r\n\r\n    type = models.CharField(max_length=10, choices=ActivityType.choices, default=ActivityType.order, db_index=True)\r\n    note = models.TextField(null=True, blank=True)  # Amend need this\r\n    amount = MoneyField(max_digits=10, decimal_places=2, default_currency='THB')\r\n    balance = MoneyField(max_digits=10, decimal_places=2, default_currency='THB')\r\n    customer = models.ForeignKey(User, on_delete=models.PROTECT)\r\n\r\n    # GenericRelation\r\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)\r\n    object_id = models.PositiveIntegerField()\r\n    content_object = GenericForeignKey()\r\n\r\n    def __str__(self):\r\n        return f'{self.type} | {self.amount} | {self.balance} | {self.customer} | {self.created_at}'\r\n\r\n    class Meta:\r\n        unique_together = ('content_type', 'object_id')\r\n        permissions = (\r\n            (\"view_activity\", \"View Activity\"),\r\n        )\r\n```\r\n\r\n\r\n```pytnon\r\ndef test_create_order(notty_singh_support_and_front):\r\n    singh = Company.objects.get(name='Singh')\r\n    singh_silom = Branch.objects.create(name='Silom', company=singh)\r\n    sarit = User.objects.get(username='sarit')\r\n    notty = User.objects.get(username='notty')\r\n    amount = Money(100, 'THB')\r\n    order = Order(poink=10, amount=amount, cashier=notty, branch=singh_silom)\r\n    order.save()\r\n    activity = Activity(type=Activity.ActivityType.order, customer=sarit, content_object=order)\r\n    activity.save()\r\n    import pdb; pdb.set_trace()\r\n    assert 1 == order.activities.count()\r\n```\r\n\r\n`AbstractTimestamp` is an ordinary `datetimeField` for do a history searching\r\nTestCases is passed.\r\n\r\n**Problem:**\r\nIn the `debugging` line on my `tests.py`. I can not call the `order` instance. It raises\r\n```bash\r\n(Pdb) order\r\n*** AttributeError: 'Money' object has no attribute 'value'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/351", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/351/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/351/events", "html_url": "https://github.com/django-money/django-money/issues/351", "id": 274380275, "node_id": "MDU6SXNzdWUyNzQzODAyNzU=", "number": 351, "title": "Currency is not shown up in the serializer field and then unable to save an instance", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-11-16T03:10:47Z", "updated_at": "2017-11-20T11:52:39Z", "closed_at": "2017-11-16T23:18:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "django-money==0.12\r\nDjango==1.11.7\r\npy-moneyed==0.7.0\r\n\r\nI have `djmoney` in the `settings.py` already.\r\n\r\n**models.py**:\r\n```python\r\nfrom django.contrib.auth.models import User\r\nfrom django.contrib.contenttypes.fields import GenericRelation\r\nfrom django.db import models\r\nfrom djmoney.models.fields import MoneyField\r\n\r\nfrom poinkbackend.apps.activities.models import Activity\r\nfrom poinkbackend.apps.branches.models import Branch\r\nfrom poinkbackend.apps.commons.models import AbstractTimestamp\r\n\r\n\r\nclass Order(AbstractTimestamp):\r\n    poink = models.PositiveIntegerField()\r\n    amount = MoneyField(max_digits=10, decimal_places=2, default_currency='THB')\r\n    cashier = models.ForeignKey(User, related_name='orders', on_delete=models.PROTECT)\r\n    branch = models.ForeignKey(Branch, related_name='orders', on_delete=models.PROTECT, null=True, blank=True)\r\n\r\n    activities = GenericRelation(Activity, related_query_name='orders', related_name='orders')\r\n\r\n    def __str__(self):\r\n        return f'{self.amount.value}'\r\n\r\n```\r\n\r\n**serializers.py**:\r\n```python\r\nimport logging\r\n\r\nfrom django.contrib.auth.models import User\r\nfrom rest_framework import serializers\r\n\r\nfrom poinkbackend.apps.commons.serializers import MoneyField, MyMoneyField\r\nfrom poinkbackend.apps.orders.models import Order\r\n\r\nlogger = logging.getLogger('django')\r\n\r\n\r\nclass OrderSerializer(serializers.ModelSerializer):\r\n    customer = serializers.PrimaryKeyRelatedField(queryset=User.objects.all())\r\n\r\n    class Meta:\r\n        model = Order\r\n        fields = [\r\n            'poink',\r\n            'amount',\r\n            'customer',\r\n            'cashier',\r\n            'branch',\r\n        ]\r\n\r\n    def validate_customer(self, attrs):\r\n        logger.info(f'---->{attrs}')\r\n        return attrs\r\n\r\n\r\n    def save(self, **kwargs):\r\n        logger.info(f'---->{kwargs}')\r\n        return None\r\n\r\n```\r\n\r\nNo currency show up here\r\n![screen shot 2560-11-16 at 10 08 38](https://user-images.githubusercontent.com/18206728/32871878-2eeab1ca-cab6-11e7-9c33-d067eb2dcdf7.png)\r\n\r\n**Error When Save:**\r\n```bash\r\n127.0.0.1 - - [16/Nov/2017 03:10:24] \"POST /api/orders/ HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/contrib/staticfiles/handlers.py\", line 63, in __call__\r\n    return self.application(environ, start_response)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/wsgi.py\", line 157, in __call__\r\n    response = self.get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/base.py\", line 124, in get_response\r\n    response = self._middleware_chain(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 43, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 93, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 139, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 6, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 43, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 93, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 139, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 6, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 43, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 93, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 139, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 6, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 43, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 93, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 139, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 6, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 43, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 93, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 139, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 6, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 43, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 93, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 139, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 6, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 43, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 93, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 139, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 6, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 43, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 93, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 139, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 6, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/utils/deprecation.py\", line 140, in __call__\r\n    response = self.get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 43, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 93, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 139, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 6, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/lib/python3.6/contextlib.py\", line 52, in inner\r\n    return func(*args, **kwds)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/rest_framework/viewsets.py\", line 90, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/rest_framework/views.py\", line 489, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/rest_framework/views.py\", line 449, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/rest_framework/views.py\", line 486, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/rest_framework/mixins.py\", line 22, in create\r\n    headers = self.get_success_headers(serializer.data)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/rest_framework/serializers.py\", line 533, in data\r\n    ret = super(Serializer, self).data\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/rest_framework/serializers.py\", line 264, in data\r\n    self._data = self.to_representation(self.validated_data)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/rest_framework/serializers.py\", line 500, in to_representation\r\n    ret[field.field_name] = field.to_representation(attribute)\r\n  File \"/Users/sarit/.pyenv/versions/3.6.3/envs/poink/lib/python3.6/site-packages/djmoney/contrib/django_rest_framework/fields.py\", line 16, in to_representation\r\n    return super(MoneyField, self).to_representation(obj.amount)\r\nAttributeError: 'decimal.Decimal' object has no attribute 'amount'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/347", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/347/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/347/events", "html_url": "https://github.com/django-money/django-money/issues/347", "id": 269722594, "node_id": "MDU6SXNzdWUyNjk3MjI1OTQ=", "number": 347, "title": "__float__ method makes numpy/pandas forget currency", "user": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-30T19:20:56Z", "updated_at": "2018-05-12T17:16:19Z", "closed_at": "2018-05-12T17:16:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n>>> pandas.DataFrame([moneyed.Money()]).sum()\r\n0    0.00 XYZ\r\ndtype: object\r\n\r\n>>> pandas.DataFrame([djmoney.money.Money()]).sum()\r\n0    0.0  # <-- currency missing\r\ndtype: float64\r\n```\r\n\r\nThis is due to implementing the `__float__` method:\r\n\r\n```py\r\nclass MM(moneyed.Money):\r\n    def __float__(self):\r\n        return float(self.amount)\r\n```\r\n\r\n```\r\n>>> pandas.DataFrame([MM()]).sum()\r\n0    0.0  # <-- currency missing\r\ndtype: float64\r\n```\r\n\r\nI'm not saying the `__float__` method should be removed/changed because I'm not sure of what use it is. Just wanted to leave a note about this here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/342", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/342/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/342/events", "html_url": "https://github.com/django-money/django-money/issues/342", "id": 267464614, "node_id": "MDU6SXNzdWUyNjc0NjQ2MTQ=", "number": 342, "title": "Release 0.12", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "benjaoming", "id": 374612, "node_id": "MDQ6VXNlcjM3NDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/374612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaoming", "html_url": "https://github.com/benjaoming", "followers_url": "https://api.github.com/users/benjaoming/followers", "following_url": "https://api.github.com/users/benjaoming/following{/other_user}", "gists_url": "https://api.github.com/users/benjaoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaoming/subscriptions", "organizations_url": "https://api.github.com/users/benjaoming/orgs", "repos_url": "https://api.github.com/users/benjaoming/repos", "events_url": "https://api.github.com/users/benjaoming/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaoming/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "benjaoming", "id": 374612, "node_id": "MDQ6VXNlcjM3NDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/374612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaoming", "html_url": "https://github.com/benjaoming", "followers_url": "https://api.github.com/users/benjaoming/followers", "following_url": "https://api.github.com/users/benjaoming/following{/other_user}", "gists_url": "https://api.github.com/users/benjaoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaoming/subscriptions", "organizations_url": "https://api.github.com/users/benjaoming/orgs", "repos_url": "https://api.github.com/users/benjaoming/repos", "events_url": "https://api.github.com/users/benjaoming/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaoming/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/django-money/django-money/milestones/4", "html_url": "https://github.com/django-money/django-money/milestone/4", "labels_url": "https://api.github.com/repos/django-money/django-money/milestones/4/labels", "id": 2588884, "node_id": "MDk6TWlsZXN0b25lMjU4ODg4NA==", "number": 4, "title": "0.12", "description": "API changes", "creator": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2017-06-17T19:18:32Z", "updated_at": "2017-10-22T15:37:28Z", "due_on": "2017-07-24T07:00:00Z", "closed_at": "2017-10-22T15:37:28Z"}, "comments": 5, "created_at": "2017-10-22T13:25:38Z", "updated_at": "2017-10-23T05:57:16Z", "closed_at": "2017-10-22T14:45:04Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hello @benjaoming !\r\nCan we issue a new release?\r\n\r\nKind Regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/338", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/338/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/338/events", "html_url": "https://github.com/django-money/django-money/issues/338", "id": 260697133, "node_id": "MDU6SXNzdWUyNjA2OTcxMzM=", "number": 338, "title": "Can't use Django's migration framework to rename MoneyField", "user": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-09-26T16:56:54Z", "updated_at": "2017-10-29T12:00:40Z", "closed_at": "2017-10-29T12:00:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Upon detecting a MoneyField rename, Django's migration framework creates a migration that renames the amount field, but removes and adds the currency field.\r\n\r\nRunning the migration doesn't work:\r\n\r\n```\r\ndjango.db.utils.IntegrityError: NOT NULL constraint failed: xxx.foo_currency\r\n```\r\n\r\nIf you manually change the remove/add to a rename operation in the generated migration, it breaks with the same error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/336", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/336/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/336/events", "html_url": "https://github.com/django-money/django-money/issues/336", "id": 257015316, "node_id": "MDU6SXNzdWUyNTcwMTUzMTY=", "number": 336, "title": "Put up a demo / video somewhere of the component in action", "user": {"login": "d33tah", "id": 295322, "node_id": "MDQ6VXNlcjI5NTMyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/295322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d33tah", "html_url": "https://github.com/d33tah", "followers_url": "https://api.github.com/users/d33tah/followers", "following_url": "https://api.github.com/users/d33tah/following{/other_user}", "gists_url": "https://api.github.com/users/d33tah/gists{/gist_id}", "starred_url": "https://api.github.com/users/d33tah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d33tah/subscriptions", "organizations_url": "https://api.github.com/users/d33tah/orgs", "repos_url": "https://api.github.com/users/d33tah/repos", "events_url": "https://api.github.com/users/d33tah/events{/privacy}", "received_events_url": "https://api.github.com/users/d33tah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-12T11:50:37Z", "updated_at": "2018-02-21T09:39:09Z", "closed_at": "2018-02-20T12:19:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Interesting project! I'm tempted to try it out and I'm pretty sure that people would be quicker to adopt it if they could see the front-end features live - either as a video or an actual page. What do you think about that?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/334", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/334/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/334/events", "html_url": "https://github.com/django-money/django-money/issues/334", "id": 256530582, "node_id": "MDU6SXNzdWUyNTY1MzA1ODI=", "number": 334, "title": "Setting readonly on a field in django admin displays wrong data", "user": {"login": "adi-", "id": 340741, "node_id": "MDQ6VXNlcjM0MDc0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/340741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adi-", "html_url": "https://github.com/adi-", "followers_url": "https://api.github.com/users/adi-/followers", "following_url": "https://api.github.com/users/adi-/following{/other_user}", "gists_url": "https://api.github.com/users/adi-/gists{/gist_id}", "starred_url": "https://api.github.com/users/adi-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adi-/subscriptions", "organizations_url": "https://api.github.com/users/adi-/orgs", "repos_url": "https://api.github.com/users/adi-/repos", "events_url": "https://api.github.com/users/adi-/events{/privacy}", "received_events_url": "https://api.github.com/users/adi-/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/django-money/django-money/milestones/4", "html_url": "https://github.com/django-money/django-money/milestone/4", "labels_url": "https://api.github.com/repos/django-money/django-money/milestones/4/labels", "id": 2588884, "node_id": "MDk6TWlsZXN0b25lMjU4ODg4NA==", "number": 4, "title": "0.12", "description": "API changes", "creator": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2017-06-17T19:18:32Z", "updated_at": "2017-10-22T15:37:28Z", "due_on": "2017-07-24T07:00:00Z", "closed_at": "2017-10-22T15:37:28Z"}, "comments": 10, "created_at": "2017-09-10T18:44:20Z", "updated_at": "2017-09-22T06:14:06Z", "closed_at": "2017-09-22T06:14:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django admin displays price as: `123,45 EUR,00` \u2013 it adds `,00` to the string", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/333", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/333/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/333/events", "html_url": "https://github.com/django-money/django-money/issues/333", "id": 253253036, "node_id": "MDU6SXNzdWUyNTMyNTMwMzY=", "number": 333, "title": "Update docs to show how to use Money fields", "user": {"login": "boosh", "id": 362148, "node_id": "MDQ6VXNlcjM2MjE0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/362148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boosh", "html_url": "https://github.com/boosh", "followers_url": "https://api.github.com/users/boosh/followers", "following_url": "https://api.github.com/users/boosh/following{/other_user}", "gists_url": "https://api.github.com/users/boosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/boosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boosh/subscriptions", "organizations_url": "https://api.github.com/users/boosh/orgs", "repos_url": "https://api.github.com/users/boosh/repos", "events_url": "https://api.github.com/users/boosh/events{/privacy}", "received_events_url": "https://api.github.com/users/boosh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-28T07:51:29Z", "updated_at": "2017-08-28T09:11:15Z", "closed_at": "2017-08-28T09:11:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The README includes `from djmoney.money import Money`, but this module no longer exists. \r\n\r\nPlease update the docs to show how to use a `Money` field.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/331", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/331/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/331/events", "html_url": "https://github.com/django-money/django-money/issues/331", "id": 249716962, "node_id": "MDU6SXNzdWUyNDk3MTY5NjI=", "number": 331, "title": "Money filters don't work on querysets", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/django-money/django-money/milestones/4", "html_url": "https://github.com/django-money/django-money/milestone/4", "labels_url": "https://api.github.com/repos/django-money/django-money/milestones/4/labels", "id": 2588884, "node_id": "MDk6TWlsZXN0b25lMjU4ODg4NA==", "number": 4, "title": "0.12", "description": "API changes", "creator": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2017-06-17T19:18:32Z", "updated_at": "2017-10-22T15:37:28Z", "due_on": "2017-07-24T07:00:00Z", "closed_at": "2017-10-22T15:37:28Z"}, "comments": 0, "created_at": "2017-08-11T18:45:32Z", "updated_at": "2017-08-11T19:07:41Z", "closed_at": "2017-08-11T19:07:41Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "As was reported by @jaavii1988 in #327 :\r\n\r\n> I have the following case also:\r\n> ```\r\n> qs = Property.objects.filter(monthly_price__lte=max_price)\r\n> print(qs.query)\r\n> ```\r\n> This is the query being generated:\r\n> _SELECT \"app_property\".\"id\" FROM \"app_property\" WHERE (\"app_property\".\"monthly_price\" <= 1000 AND \"app_property\".\"monthly_price_currency\" = USD)_ \r\n> \r\n> **But if I do some subfiltering in the original queryset then it lost the currency comparison:**\r\n> ```\r\n> qs2 = Property.objects.filter(user=1)\r\n> qs2 = qs2.filter(monthly_price__lte=MoneyPatched('1000', 'USD')).only('id')\r\n> print(qs2.query)\r\n> ```\r\n> This is the query being generated:\r\n> _SELECT \"app_property\".\"id\" FROM \"app_property\" WHERE (\"app_property\".\"user_id\" = 1 AND \"app_property\".\"monthly_price\" <= 1000)_ \r\n> \r\n> Am I doing anything wrong? \r\n> Based on some extended testing the currency comparison gets properly implemented only when the money filter is the first filter implemented in the Model.objects. query, otherwise the currency gets ignored.\r\n> ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/330", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/330/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/330/events", "html_url": "https://github.com/django-money/django-money/issues/330", "id": 249628320, "node_id": "MDU6SXNzdWUyNDk2MjgzMjA=", "number": 330, "title": "Filtering objects with currency conversion on the fly", "user": {"login": "javiplav", "id": 3477472, "node_id": "MDQ6VXNlcjM0Nzc0NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3477472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javiplav", "html_url": "https://github.com/javiplav", "followers_url": "https://api.github.com/users/javiplav/followers", "following_url": "https://api.github.com/users/javiplav/following{/other_user}", "gists_url": "https://api.github.com/users/javiplav/gists{/gist_id}", "starred_url": "https://api.github.com/users/javiplav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javiplav/subscriptions", "organizations_url": "https://api.github.com/users/javiplav/orgs", "repos_url": "https://api.github.com/users/javiplav/repos", "events_url": "https://api.github.com/users/javiplav/events{/privacy}", "received_events_url": "https://api.github.com/users/javiplav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643098139, "node_id": "MDU6TGFiZWw2NDMwOTgxMzk=", "url": "https://api.github.com/repos/django-money/django-money/labels/question", "name": "question", "color": "CC317C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-11T12:59:13Z", "updated_at": "2017-09-10T14:46:39Z", "closed_at": "2017-09-10T14:46:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, this is not an issue, it's more a question.. please excuse me in advance if this is not the right place.\r\n\r\nI see this example in the documentation:\r\n\r\n```\r\nfrom djmoney.money import Money\r\naccount = BankAccount.objects.create(balance=Money(10, 'USD'))\r\nswissAccount = BankAccount.objects.create(balance=Money(10, 'CHF'))\r\nBankAccount.objects.filter(balance__gt=Money(1, 'USD'))\r\n```\r\nReturns the \"account\" object\r\n\r\nWhat I need is that the **filter** query returns both objects (\"account\" and \"swissAccount\"). I'm integrating currency conversion with djmoney_rates. \r\n\r\nI've been fighting with these for a few days.. any help or orientation is very welcome.\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/329", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/329/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/329/events", "html_url": "https://github.com/django-money/django-money/issues/329", "id": 244888980, "node_id": "MDU6SXNzdWUyNDQ4ODg5ODA=", "number": 329, "title": "Integrate with Satchless", "user": {"login": "vladimirmyshkovski", "id": 12729789, "node_id": "MDQ6VXNlcjEyNzI5Nzg5", "avatar_url": "https://avatars0.githubusercontent.com/u/12729789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladimirmyshkovski", "html_url": "https://github.com/vladimirmyshkovski", "followers_url": "https://api.github.com/users/vladimirmyshkovski/followers", "following_url": "https://api.github.com/users/vladimirmyshkovski/following{/other_user}", "gists_url": "https://api.github.com/users/vladimirmyshkovski/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladimirmyshkovski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladimirmyshkovski/subscriptions", "organizations_url": "https://api.github.com/users/vladimirmyshkovski/orgs", "repos_url": "https://api.github.com/users/vladimirmyshkovski/repos", "events_url": "https://api.github.com/users/vladimirmyshkovski/events{/privacy}", "received_events_url": "https://api.github.com/users/vladimirmyshkovski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643098139, "node_id": "MDU6TGFiZWw2NDMwOTgxMzk=", "url": "https://api.github.com/repos/django-money/django-money/labels/question", "name": "question", "color": "CC317C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-23T05:04:41Z", "updated_at": "2018-02-20T14:19:00Z", "closed_at": "2018-02-20T14:19:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm already using your application right now, and I want to implement [Satchless](http://docs.satchless.com/en/latest/item.html).\r\nThis library uses [python prices](https://github.com/mirumee/prices)\r\n\r\nAnd I would like to ask, maybe someone has already done what I want to do, that is, use Satchless with django-money together. \r\n\r\nIf yes, tell me how you did it.\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/326", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/326/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/326/events", "html_url": "https://github.com/django-money/django-money/issues/326", "id": 241530932, "node_id": "MDU6SXNzdWUyNDE1MzA5MzI=", "number": 326, "title": "Add \"Contribution\" section to docs", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643099641, "node_id": "MDU6TGFiZWw2NDMwOTk2NDE=", "url": "https://api.github.com/repos/django-money/django-money/labels/documentation", "name": "documentation", "color": "FEF2C0", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-07-09T15:10:32Z", "updated_at": "2017-11-06T14:35:43Z", "closed_at": "2017-11-06T14:35:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Add information about how to contribute & test.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/321", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/321/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/321/events", "html_url": "https://github.com/django-money/django-money/issues/321", "id": 241528945, "node_id": "MDU6SXNzdWUyNDE1Mjg5NDU=", "number": 321, "title": "Support for F expressions in `in` lookup", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}, {"id": 643098616, "node_id": "MDU6TGFiZWw2NDMwOTg2MTY=", "url": "https://api.github.com/repos/django-money/django-money/labels/in%20progress", "name": "in progress", "color": "FBCA04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/django-money/django-money/milestones/4", "html_url": "https://github.com/django-money/django-money/milestone/4", "labels_url": "https://api.github.com/repos/django-money/django-money/milestones/4/labels", "id": 2588884, "node_id": "MDk6TWlsZXN0b25lMjU4ODg4NA==", "number": 4, "title": "0.12", "description": "API changes", "creator": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2017-06-17T19:18:32Z", "updated_at": "2017-10-22T15:37:28Z", "due_on": "2017-07-24T07:00:00Z", "closed_at": "2017-10-22T15:37:28Z"}, "comments": 0, "created_at": "2017-07-09T14:38:22Z", "updated_at": "2017-07-09T14:55:50Z", "closed_at": "2017-07-09T14:55:49Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This query will be processed incorrectly:\r\n\r\n```python\r\nModel.objects.filter(\r\n    amount1__in=(Money(4, 'USD'), F('amount2'))\r\n)\r\n```\r\n\r\nActual query (missed currency part for second condition):\r\n\r\n```SQL\r\nSELECT \"model\".\"id\", \"model\".\"amount1_currency\", \"model\".\"amount1\", \"model\".\"amount2_currency\", \"model\".\"amount2\" FROM \"model\" WHERE (\"model\".\"amount1_currency\" = 'USD' AND \"model\".\"amount1\" = 4) OR \"model\".\"amount1\" = \"model\".\"amount2\"\r\n```\r\n\r\nExpected:\r\n```SQL\r\nSELECT \"model\".\"id\", \"model\".\"amount1_currency\", \"model\".\"amount1\", \"model\".\"amount2_currency\", \"model\".\"amount2\" FROM \"model\" WHERE (\"model\".\"amount1_currency\" = 'USD' AND \"model\".\"amount1\" = 4) OR (\"model\".\"amount1_currency\" = \"model\".\"amount2_currency\" AND \"model\".\"amount1\" = \"model\".\"amount2\")\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/318", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/318/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/318/events", "html_url": "https://github.com/django-money/django-money/issues/318", "id": 241469284, "node_id": "MDU6SXNzdWUyNDE0NjkyODQ=", "number": 318, "title": "MoneyManager can't survive Options._expire_cache()", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-money/django-money/milestones/4", "html_url": "https://github.com/django-money/django-money/milestone/4", "labels_url": "https://api.github.com/repos/django-money/django-money/milestones/4/labels", "id": 2588884, "node_id": "MDk6TWlsZXN0b25lMjU4ODg4NA==", "number": 4, "title": "0.12", "description": "API changes", "creator": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2017-06-17T19:18:32Z", "updated_at": "2017-10-22T15:37:28Z", "due_on": "2017-07-24T07:00:00Z", "closed_at": "2017-10-22T15:37:28Z"}, "comments": 0, "created_at": "2017-07-08T17:53:58Z", "updated_at": "2017-07-08T19:01:06Z", "closed_at": "2017-07-08T19:01:06Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Steps to reproduce**:\r\n1. Create a ``MoneyModel`` with ``MoneyField``;\r\n2. Create a new model with ``MoneyField`` during the test or just in a runtime;\r\n3. ``MoneyModel.objects`` is a Django's ``Manager`` instance.\r\n\r\n**Expected behaviour**:\r\n``MoneyModel.objects`` should be a ``MoneyManager`` instance.\r\n\r\nThe problem is, that ``Options.managers`` is a ``cached_property``, which is populated from ``Options.local_managers`` but we don't update this list and when the cache is cleared we have an unpatched manager again.\r\n\r\nCache is cleared when ``registry.Apps.register_model`` is called, which calls ``registry.Apps.clear_cache``, that leads to ``Options._expire_cache`` calls for every registered model.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/317", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/317/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/317/events", "html_url": "https://github.com/django-money/django-money/issues/317", "id": 241435863, "node_id": "MDU6SXNzdWUyNDE0MzU4NjM=", "number": 317, "title": "Consolidate all settings in one place", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097983, "node_id": "MDU6TGFiZWw2NDMwOTc5ODM=", "url": "https://api.github.com/repos/django-money/django-money/labels/discussion", "name": "discussion", "color": "CC317C", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-08T08:27:26Z", "updated_at": "2019-04-13T14:07:43Z", "closed_at": "2019-04-13T14:07:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It could be useful to have all settings in a single variable:\r\n\r\nproject/settings.py\r\n```\r\nDJMONEY = {\r\n    'CURRENCIES': ['USD', 'EUR'],\r\n    'CURRENCY_CHOICES': [('USD', 'USD $'), ('EUR', 'EUR \u20ac')],\r\n    'DEFAULT_CURRENCY': 'EUR',\r\n    'CURRENCY_DECIMAL_PLACES': 5,\r\n}\r\n```\r\n\r\n@benjaoming , what do you think?\r\n\r\nAlso, ``CURRENCY_DECIMAL_PLACES`` seems like not a right name in this context. Decimal places are for amount, not for currency. May be rename it to ``DECIMAL_PLACES``?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/313", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/313/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/313/events", "html_url": "https://github.com/django-money/django-money/issues/313", "id": 238378062, "node_id": "MDU6SXNzdWUyMzgzNzgwNjI=", "number": 313, "title": "Release 0.11.4", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-25T12:32:50Z", "updated_at": "2017-06-28T10:15:51Z", "closed_at": "2017-06-28T10:15:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hello @benjaoming !\r\nCan we make a new release from 0.11.x branch? I've added a signed tag, bumped version in the source code and add a new release here on GitHub.\r\n\r\nRegards.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/312", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/312/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/312/events", "html_url": "https://github.com/django-money/django-money/issues/312", "id": 238359653, "node_id": "MDU6SXNzdWUyMzgzNTk2NTM=", "number": 312, "title": "Python and Django support policy looks not secure", "user": {"login": "lorddaedra", "id": 26400787, "node_id": "MDQ6VXNlcjI2NDAwNzg3", "avatar_url": "https://avatars1.githubusercontent.com/u/26400787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorddaedra", "html_url": "https://github.com/lorddaedra", "followers_url": "https://api.github.com/users/lorddaedra/followers", "following_url": "https://api.github.com/users/lorddaedra/following{/other_user}", "gists_url": "https://api.github.com/users/lorddaedra/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorddaedra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorddaedra/subscriptions", "organizations_url": "https://api.github.com/users/lorddaedra/orgs", "repos_url": "https://api.github.com/users/lorddaedra/repos", "events_url": "https://api.github.com/users/lorddaedra/events{/privacy}", "received_events_url": "https://api.github.com/users/lorddaedra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-money/django-money/milestones/4", "html_url": "https://github.com/django-money/django-money/milestone/4", "labels_url": "https://api.github.com/repos/django-money/django-money/milestones/4/labels", "id": 2588884, "node_id": "MDk6TWlsZXN0b25lMjU4ODg4NA==", "number": 4, "title": "0.12", "description": "API changes", "creator": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2017-06-17T19:18:32Z", "updated_at": "2017-10-22T15:37:28Z", "due_on": "2017-07-24T07:00:00Z", "closed_at": "2017-10-22T15:37:28Z"}, "comments": 5, "created_at": "2017-06-25T04:42:51Z", "updated_at": "2017-07-09T09:52:46Z", "closed_at": "2017-07-09T09:52:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "django-money supports this Django and Python versions:\r\n> Django versions supported: 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11\r\n> \r\n> Python versions supported: 2.6, 2.7, 3.2, 3.3, 3.4, 3.5, 3.6\r\n\r\nSupported Django versions (official):\r\nhttps://www.djangoproject.com/download/ (scroll down to image or table)\r\nDjango 1.8 LTS, 1.10, 1.11 LTS\r\n\r\nSupported CPython versions:\r\nhttps://en.wikipedia.org/wiki/CPython (look at History table)\r\n2.7, 3.3, 3.4, 3.5, 3.6\r\n\r\nUsing unsupported versions may create secure hole in your project. Best support policy for any project - do not support versions of required packages, which are already unsupported by their developers. It will make code clean and prevent of adding secure holes by your product users.\r\n\r\nIt's good idea to drop support for Python 3.2, Django 1.4, 1.5, 1.6, 1.7, 1.9 and follow this policy in future.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/309", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/309/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/309/events", "html_url": "https://github.com/django-money/django-money/issues/309", "id": 238059421, "node_id": "MDU6SXNzdWUyMzgwNTk0MjE=", "number": 309, "title": "Update doesn't work as expected with default currency", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-06-23T07:12:09Z", "updated_at": "2017-06-23T09:33:14Z", "closed_at": "2017-06-23T09:33:14Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "If the model field has `default_currency`, then this currency will be used in update queries regardless what was specified:\r\n\r\nmodels:\r\n```python\r\nclass MoneyModel(models.Model):\r\n    money = MoneyField(max_digits=10, decimal_places=2, default_currency='EUR')\r\n\r\n```\r\n\r\nTest case:\r\n```python\r\n    >>> money = Money(100, 'USD')\r\n    >>> instance = MoneyModel.objects.create(money=money)\r\n    >>> MoneyModel.objects.update(money=money)\r\n    >>> instance.refresh_from_db()\r\n    >>> instance.money\r\n    100 EUR\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/308", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/308/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/308/events", "html_url": "https://github.com/django-money/django-money/issues/308", "id": 237914128, "node_id": "MDU6SXNzdWUyMzc5MTQxMjg=", "number": 308, "title": "MinValueValidator for more than one currency", "user": {"login": "james1888", "id": 8617506, "node_id": "MDQ6VXNlcjg2MTc1MDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/8617506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/james1888", "html_url": "https://github.com/james1888", "followers_url": "https://api.github.com/users/james1888/followers", "following_url": "https://api.github.com/users/james1888/following{/other_user}", "gists_url": "https://api.github.com/users/james1888/gists{/gist_id}", "starred_url": "https://api.github.com/users/james1888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/james1888/subscriptions", "organizations_url": "https://api.github.com/users/james1888/orgs", "repos_url": "https://api.github.com/users/james1888/repos", "events_url": "https://api.github.com/users/james1888/events{/privacy}", "received_events_url": "https://api.github.com/users/james1888/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643098338, "node_id": "MDU6TGFiZWw2NDMwOTgzMzg=", "url": "https://api.github.com/repos/django-money/django-money/labels/feature", "name": "feature", "color": "91CA55", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/django-money/django-money/milestones/4", "html_url": "https://github.com/django-money/django-money/milestone/4", "labels_url": "https://api.github.com/repos/django-money/django-money/milestones/4/labels", "id": 2588884, "node_id": "MDk6TWlsZXN0b25lMjU4ODg4NA==", "number": 4, "title": "0.12", "description": "API changes", "creator": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 17, "state": "closed", "created_at": "2017-06-17T19:18:32Z", "updated_at": "2017-10-22T15:37:28Z", "due_on": "2017-07-24T07:00:00Z", "closed_at": "2017-10-22T15:37:28Z"}, "comments": 13, "created_at": "2017-06-22T17:13:04Z", "updated_at": "2017-10-16T19:43:37Z", "closed_at": "2017-10-16T19:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the example it shows how to use MinValueValidator with one currency what if I have two currencies USD and GBP and I want to set min value for both of the currency for example min value USD 10 and GBP 100 how can I do that?\r\n\r\n```python\r\nfrom django.core.validators import MinValueValidator\r\nfrom django.db import models\r\nfrom djmoney.models.fields import MoneyField, MoneyPatched\r\n\r\n\r\nclass BankAccount(models.Model):\r\n    balance = MoneyField(max_digits=10, decimal_places=2, validators=[MinValueValidator(MoneyPatched(100, 'GBP'))])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/305", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/305/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/305/events", "html_url": "https://github.com/django-money/django-money/issues/305", "id": 235474433, "node_id": "MDU6SXNzdWUyMzU0NzQ0MzM=", "number": 305, "title": "Fix compatibility with Django master branch", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-13T08:27:17Z", "updated_at": "2017-06-15T08:15:40Z", "closed_at": "2017-06-15T08:15:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/302", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/302/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/302/events", "html_url": "https://github.com/django-money/django-money/issues/302", "id": 232477348, "node_id": "MDU6SXNzdWUyMzI0NzczNDg=", "number": 302, "title": "Better changelog", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-05-31T07:27:12Z", "updated_at": "2017-06-23T11:05:43Z", "closed_at": "2017-06-23T11:05:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Something like http://keepachangelog.com/en/0.3.0/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/300", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/300/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/300/events", "html_url": "https://github.com/django-money/django-money/issues/300", "id": 232356444, "node_id": "MDU6SXNzdWUyMzIzNTY0NDQ=", "number": 300, "title": "Filter using ForeignKey field raises FieldError", "user": {"login": "lmdsp", "id": 1681470, "node_id": "MDQ6VXNlcjE2ODE0NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1681470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmdsp", "html_url": "https://github.com/lmdsp", "followers_url": "https://api.github.com/users/lmdsp/followers", "following_url": "https://api.github.com/users/lmdsp/following{/other_user}", "gists_url": "https://api.github.com/users/lmdsp/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmdsp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmdsp/subscriptions", "organizations_url": "https://api.github.com/users/lmdsp/orgs", "repos_url": "https://api.github.com/users/lmdsp/repos", "events_url": "https://api.github.com/users/lmdsp/events{/privacy}", "received_events_url": "https://api.github.com/users/lmdsp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-05-30T19:27:32Z", "updated_at": "2017-05-31T08:01:30Z", "closed_at": "2017-05-31T08:01:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've found a bug which seems to be a regression in 0.11.1 - everything was fine in 0.11\r\nI'm running latest stable Django (1.11.1).\r\n\r\nSo I have code such as\r\n```python\r\nimport datetime as datetime\r\n\r\nclass MoneyTest(models.Model):\r\n    date = models.DateTimeField()\r\n\r\nclass MoneyItemTest(models.Model):\r\n    money =  models.ForeignKey(Purchase, on_delete=models.CASCADE)\r\n    price = MoneyField(max_digits=10, decimal_places=2, default_currency='EUR', default=Decimal('0.0'))\r\n\r\n\r\n# Queries\r\ndate = datetime.datetime(year=2017, month=2, day=1)\r\nquery = MoneyItemTest.objects.filter(money__date=date) # still works\r\nquery = MoneyItemTest.objects.filter(money__date__gt=date) # worked in 0.11, crashes in 0.11.1\r\n```\r\n\r\nThe second query generates this traceback\r\n```bash\r\nFile \"\\env\\lib\\site-packages\\django\\db\\models\\manager.py\", line 85, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\nFile \"\\env\\lib\\site-packages\\djmoney\\models\\managers.py\", line 211, in wrapper\r\n    args, kwargs = _expand_money_kwargs(model, args, kwargs, exclusions)\r\nFile \"\\env\\lib\\site-packages\\djmoney\\models\\managers.py\", line 150, in _expand_money_kwargs\r\n    field = _get_field(model, name)\r\nFile \"\\env\\lib\\site-packages\\djmoney\\models\\managers.py\", line 55, in _get_field\r\n    return qs.names_to_path(parts, qs.get_meta(), True, fail_on_missing=False)[1]\r\nFile \"\\env\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1363, in names_to_path\r\n    \"Choices are: %s\" % (name, \", \".join(available)))\r\ndjango.core.exceptions.FieldError: Cannot resolve keyword 'money' into field. Choices are: date, id, moneyitemtest\r\n```\r\n\r\nIf that's of any help, I get these warnings too:\r\n```bash\r\n\\env\\lib\\site-packages\\djmoney\\models\\managers.py:58: RemovedInDjango20Warning: Usage of field.rel has been deprecated. Use field.remote_field instead.\r\n  model = lookup_field.rel.to\r\n\\env\\lib\\site-packages\\djmoney\\models\\managers.py:58: RemovedInDjango20Warning: Usage of ForeignObjectRel.to attribute has been deprecated. Use the model attribute instead.\r\n```\r\n\r\nRegards,\r\nLorcan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/297", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/297/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/297/events", "html_url": "https://github.com/django-money/django-money/issues/297", "id": 231258215, "node_id": "MDU6SXNzdWUyMzEyNTgyMTU=", "number": 297, "title": "using factory_boy with MoneyField gives Attribute Error", "user": {"login": "kaizenseed", "id": 6938589, "node_id": "MDQ6VXNlcjY5Mzg1ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6938589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaizenseed", "html_url": "https://github.com/kaizenseed", "followers_url": "https://api.github.com/users/kaizenseed/followers", "following_url": "https://api.github.com/users/kaizenseed/following{/other_user}", "gists_url": "https://api.github.com/users/kaizenseed/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaizenseed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaizenseed/subscriptions", "organizations_url": "https://api.github.com/users/kaizenseed/orgs", "repos_url": "https://api.github.com/users/kaizenseed/repos", "events_url": "https://api.github.com/users/kaizenseed/events{/privacy}", "received_events_url": "https://api.github.com/users/kaizenseed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-25T07:04:33Z", "updated_at": "2017-05-26T09:05:47Z", "closed_at": "2017-05-26T07:13:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a `Transaction` model which uses a `MoneyField`. While writing tests, I realised that creating a test transaction object using the std django orm way via Transaction.objects.create() etc works ok but using factory_boy to create the same doesn't. Please help me out if I'm going about this wrong.\r\n\r\nThis is my model:\r\n```\r\nclass Transaction(Timestampable, models.Model):\r\n    amount = MoneyField(decimal_places=2, max_digits=10, default_currency='INR')\r\n    # todo - default currency should be picked from profile/person\r\n    # note2self - as of now a tx can have a single associated category but multiple tags are possible\r\n    category = models.ForeignKey(Category, related_name=\"category_transactions\", blank=True, null=True)\r\n    tags = models.ManyToManyField(Tag, related_name=\"tag_transactions\")  # also optional\r\n    created_by = models.ForeignKey(Person, related_name=\"transactions\")\r\n    transaction_date = models.DateField()\r\n    transaction_time = models.TimeField(blank=True, null=True)\r\n```\r\n\r\nThis is the simplified factory and other code\r\n```\r\nclass MoneyProvider(BaseProvider):\r\n     def money(self):\r\n        return Money(563, INR)\r\n\r\nfake = Faker()\r\nfake.add_provider(MoneyProvider)\r\n\r\nclass TransactionFactory(factory.DjangoModelFactory):\r\n    \"\"\"\r\n        Factory used to instantiate class Transaction\r\n        \"\"\"\r\n\r\n    class Meta:\r\n        model = Transaction\r\n\r\n    created_by = factory.SubFactory(PersonFactory)\r\n    amount = fake.money()\r\n    transaction_date = fake.date_time_between(start_date='-3d').date()\r\n    transaction_time = None\r\n\r\n    tags = None\r\n    category = None\r\n```\r\nThis is my test file\r\n\r\n```\r\nclass TestTransactionModel(TestCase):\r\n    def setUp(self):\r\n        self.transaction = TransactionFactory.create(amount=Money(563, INR))\r\n        # self.transaction = Transaction.objects.create(\r\n        #     amount=Money(563, INR),\r\n        #     created_by=PersonFactory.create(),\r\n        #     transaction_date=timezone.now().date()\r\n        # )\r\n\r\n    def tearDown(self):\r\n        self.transaction.delete()\r\n\r\n    def test_something(self):\r\n        pass\r\n```\r\nOn running this i get \r\n\r\n```\r\nCreating test database for alias 'default'...\r\nSystem check identified no issues (0 silenced).\r\nE.\r\n======================================================================\r\nERROR: test_something (doubloon.transactions.tests.test_models.TestTransactionModel)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/myrtle/03_django_projects/doubloon/doubloon/transactions/tests/test_models.py\", line 13, in setUp\r\n    self.transaction = TransactionFactory.create(amount=Money(563, INR))\r\n  File \"/home/myrtle/03_django_projects/environments/doubloon/lib/python3.5/site-packages/factory/base.py\", line 623, in create\r\n    return cls._generate(True, attrs)\r\n  File \"/home/myrtle/03_django_projects/environments/doubloon/lib/python3.5/site-packages/factory/base.py\", line 548, in _generate\r\n    obj = cls._prepare(create, **attrs)\r\n  File \"/home/myrtle/03_django_projects/environments/doubloon/lib/python3.5/site-packages/factory/base.py\", line 523, in _prepare\r\n    return cls._create(model_class, *args, **kwargs)\r\n  File \"/home/myrtle/03_django_projects/environments/doubloon/lib/python3.5/site-packages/factory/django.py\", line 181, in _create\r\n    return manager.create(*args, **kwargs)\r\n  File \"/home/myrtle/03_django_projects/environments/doubloon/lib/python3.5/site-packages/django/db/models/manager.py\", line 85, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/home/myrtle/03_django_projects/environments/doubloon/lib/python3.5/site-packages/django/db/models/query.py\", line 392, in create\r\n    obj = self.model(**kwargs)\r\n  File \"/home/myrtle/03_django_projects/environments/doubloon/lib/python3.5/site-packages/django/db/models/base.py\", line 559, in __init__\r\n    property_names = opts._property_names\r\n  File \"/home/myrtle/03_django_projects/environments/doubloon/lib/python3.5/site-packages/django/utils/functional.py\", line 35, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/home/myrtle/03_django_projects/environments/doubloon/lib/python3.5/site-packages/django/db/models/options.py\", line 890, in _property_names\r\n    dir(self.model) if isinstance(getattr(self.model, attr), property)\r\n  File \"/home/myrtle/03_django_projects/environments/doubloon/lib/python3.5/site-packages/django/db/models/options.py\", line 890, in <setcomp>\r\n    dir(self.model) if isinstance(getattr(self.model, attr), property)\r\n  File \"/home/myrtle/03_django_projects/environments/doubloon/lib/python3.5/site-packages/djmoney/models/fields.py\", line 225, in __get__\r\n    raise AttributeError('Can only be accessed via an instance.')\r\nAttributeError: Can only be accessed via an instance.\r\n```\r\nWhat am i doing wrong? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/292", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/292/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/292/events", "html_url": "https://github.com/django-money/django-money/issues/292", "id": 228739739, "node_id": "MDU6SXNzdWUyMjg3Mzk3Mzk=", "number": 292, "title": "The POST/PATCH/PUT methods doesn't work with MoneyFields in Django Rest Framework", "user": {"login": "gonzalobf", "id": 2028156, "node_id": "MDQ6VXNlcjIwMjgxNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2028156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gonzalobf", "html_url": "https://github.com/gonzalobf", "followers_url": "https://api.github.com/users/gonzalobf/followers", "following_url": "https://api.github.com/users/gonzalobf/following{/other_user}", "gists_url": "https://api.github.com/users/gonzalobf/gists{/gist_id}", "starred_url": "https://api.github.com/users/gonzalobf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gonzalobf/subscriptions", "organizations_url": "https://api.github.com/users/gonzalobf/orgs", "repos_url": "https://api.github.com/users/gonzalobf/repos", "events_url": "https://api.github.com/users/gonzalobf/events{/privacy}", "received_events_url": "https://api.github.com/users/gonzalobf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-15T14:47:59Z", "updated_at": "2017-05-19T14:09:27Z", "closed_at": "2017-05-19T14:09:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The <fieldname>_currency field is ignored and as result, the default money is always used.\r\n\r\nDjango version: 1.11\r\nDjango Rest Framework version: 3.6.2\r\ndjango-money: 0.10.2 (and also tried with master branch)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/291", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/291/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/291/events", "html_url": "https://github.com/django-money/django-money/issues/291", "id": 228512009, "node_id": "MDU6SXNzdWUyMjg1MTIwMDk=", "number": 291, "title": "\"TypeError: <amount> <currency> is not JSON serializable\" when serializing a calculated model fields in DRF", "user": {"login": "JadSayegh", "id": 3467650, "node_id": "MDQ6VXNlcjM0Njc2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3467650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JadSayegh", "html_url": "https://github.com/JadSayegh", "followers_url": "https://api.github.com/users/JadSayegh/followers", "following_url": "https://api.github.com/users/JadSayegh/following{/other_user}", "gists_url": "https://api.github.com/users/JadSayegh/gists{/gist_id}", "starred_url": "https://api.github.com/users/JadSayegh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JadSayegh/subscriptions", "organizations_url": "https://api.github.com/users/JadSayegh/orgs", "repos_url": "https://api.github.com/users/JadSayegh/repos", "events_url": "https://api.github.com/users/JadSayegh/events{/privacy}", "received_events_url": "https://api.github.com/users/JadSayegh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-14T01:47:49Z", "updated_at": "2017-05-26T09:08:39Z", "closed_at": "2017-05-26T09:08:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have model which has a calculated MoneyField:\r\n\r\n```\r\nclass Account(models.Model):\r\n    deposits = MoneyField(decimal_places=2, max_digits=14, default=Money(0, 'USD'))\r\n    withdrawals = MoneyField(decimal_places=2, max_digits=14, default=Money(0, 'USD'))\r\n\r\n    @property\r\n    def net_deposits(self):\r\n        return Money(self.deposits.amount - self.withdrawals.amount, self.deposits.currency)\r\n```\r\n\r\nMy serializer looks like this \r\n\r\n```\r\nclass AccountSerializer(serializers.ModelSerializer):\r\n    net_deposits = serializers.ReadOnlyField()\r\n\r\n    class Meta:\r\n        model = Account\r\n        fields = ('deposits', 'withdrawals', 'net_deposits')\r\n```\r\n Whenever I try to query a model through this serializer I get the error mentioned in the title, for example:\r\n`TypeError: 80 USD is not JSON serializable`\r\n\r\nThis is not an issue when the field is directly on the model (not a calculated field).\r\n\r\nI've also tried making it a `SerializerMethodField` and return `net_deposit` from the function and am getting the same thing. What's the correct way to get this to work?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/289", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/289/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/289/events", "html_url": "https://github.com/django-money/django-money/issues/289", "id": 222705620, "node_id": "MDU6SXNzdWUyMjI3MDU2MjA=", "number": 289, "title": "Handling currencies without cents", "user": {"login": "kaedroho", "id": 1093808, "node_id": "MDQ6VXNlcjEwOTM4MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1093808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaedroho", "html_url": "https://github.com/kaedroho", "followers_url": "https://api.github.com/users/kaedroho/followers", "following_url": "https://api.github.com/users/kaedroho/following{/other_user}", "gists_url": "https://api.github.com/users/kaedroho/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaedroho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaedroho/subscriptions", "organizations_url": "https://api.github.com/users/kaedroho/orgs", "repos_url": "https://api.github.com/users/kaedroho/repos", "events_url": "https://api.github.com/users/kaedroho/events{/privacy}", "received_events_url": "https://api.github.com/users/kaedroho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-19T11:25:16Z", "updated_at": "2017-05-26T09:14:10Z", "closed_at": "2017-05-26T09:14:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The ``MoneyField`` seems to require you to choose a global divisor for all currencies using the ``decimal_places`` keyword argument. But I need to handle currencies that do have cents and others that don't in the same field. For example GBP, USD and EUR have cents but JPY, ZAR and ISK do not.\r\n\r\nIs this something that ``MoneyField`` can handle?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/286", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/286/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/286/events", "html_url": "https://github.com/django-money/django-money/issues/286", "id": 218943269, "node_id": "MDU6SXNzdWUyMTg5NDMyNjk=", "number": 286, "title": "Different Money Choices for different users", "user": {"login": "coler-j", "id": 7839615, "node_id": "MDQ6VXNlcjc4Mzk2MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7839615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coler-j", "html_url": "https://github.com/coler-j", "followers_url": "https://api.github.com/users/coler-j/followers", "following_url": "https://api.github.com/users/coler-j/following{/other_user}", "gists_url": "https://api.github.com/users/coler-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/coler-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coler-j/subscriptions", "organizations_url": "https://api.github.com/users/coler-j/orgs", "repos_url": "https://api.github.com/users/coler-j/repos", "events_url": "https://api.github.com/users/coler-j/events{/privacy}", "received_events_url": "https://api.github.com/users/coler-j/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643098139, "node_id": "MDU6TGFiZWw2NDMwOTgxMzk=", "url": "https://api.github.com/repos/django-money/django-money/labels/question", "name": "question", "color": "CC317C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-03T14:01:25Z", "updated_at": "2017-07-09T14:48:50Z", "closed_at": "2017-07-09T14:48:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to pass choices to the widget on a form depending on a queryset, or a list of values?\r\n\r\nI want different users to have different currency options depending on their settings. So far I am just seeing options of setting the choices at a global level.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/285", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/285/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/285/events", "html_url": "https://github.com/django-money/django-money/issues/285", "id": 217229306, "node_id": "MDU6SXNzdWUyMTcyMjkzMDY=", "number": 285, "title": "unit test form data.", "user": {"login": "kierun", "id": 3079575, "node_id": "MDQ6VXNlcjMwNzk1NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3079575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kierun", "html_url": "https://github.com/kierun", "followers_url": "https://api.github.com/users/kierun/followers", "following_url": "https://api.github.com/users/kierun/following{/other_user}", "gists_url": "https://api.github.com/users/kierun/gists{/gist_id}", "starred_url": "https://api.github.com/users/kierun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kierun/subscriptions", "organizations_url": "https://api.github.com/users/kierun/orgs", "repos_url": "https://api.github.com/users/kierun/repos", "events_url": "https://api.github.com/users/kierun/events{/privacy}", "received_events_url": "https://api.github.com/users/kierun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-27T12:27:00Z", "updated_at": "2017-03-28T13:22:05Z", "closed_at": "2017-03-28T13:22:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a field I want to test in a form. This is the code:\r\n\r\n```\r\n    def test_post_valid(self):\r\n        data = {'value': Money('99.99', currency='GBP'), }\r\n        response = self.client.post(url, data)\r\n```\r\n\r\nI get an error in the form parsing code stating: \r\n\r\n```\r\n(Pdb++) form.errors                                                             \r\n{u'value': [u'This field is required.']}\r\n```\r\n\r\nWhat is the correct format?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/284", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/284/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/284/events", "html_url": "https://github.com/django-money/django-money/issues/284", "id": 216584082, "node_id": "MDU6SXNzdWUyMTY1ODQwODI=", "number": 284, "title": "How to use django-money register_money_field correctly?", "user": {"login": "qasimalbaqali", "id": 6570357, "node_id": "MDQ6VXNlcjY1NzAzNTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6570357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qasimalbaqali", "html_url": "https://github.com/qasimalbaqali", "followers_url": "https://api.github.com/users/qasimalbaqali/followers", "following_url": "https://api.github.com/users/qasimalbaqali/following{/other_user}", "gists_url": "https://api.github.com/users/qasimalbaqali/gists{/gist_id}", "starred_url": "https://api.github.com/users/qasimalbaqali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qasimalbaqali/subscriptions", "organizations_url": "https://api.github.com/users/qasimalbaqali/orgs", "repos_url": "https://api.github.com/users/qasimalbaqali/repos", "events_url": "https://api.github.com/users/qasimalbaqali/events{/privacy}", "received_events_url": "https://api.github.com/users/qasimalbaqali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-23T21:52:45Z", "updated_at": "2017-05-26T09:16:13Z", "closed_at": "2017-05-26T09:16:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I don't really get where to put the register_money_field function in my serializer class. Is it suppose to be something like\r\n\r\n`price = register_money_field()`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-money/django-money/issues/281", "repository_url": "https://api.github.com/repos/django-money/django-money", "labels_url": "https://api.github.com/repos/django-money/django-money/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/django-money/django-money/issues/281/comments", "events_url": "https://api.github.com/repos/django-money/django-money/issues/281/events", "html_url": "https://github.com/django-money/django-money/issues/281", "id": 215553105, "node_id": "MDU6SXNzdWUyMTU1NTMxMDU=", "number": 281, "title": "Django-money ignores Django settings in admin", "user": {"login": "Stranger6667", "id": 1236561, "node_id": "MDQ6VXNlcjEyMzY1NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1236561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stranger6667", "html_url": "https://github.com/Stranger6667", "followers_url": "https://api.github.com/users/Stranger6667/followers", "following_url": "https://api.github.com/users/Stranger6667/following{/other_user}", "gists_url": "https://api.github.com/users/Stranger6667/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stranger6667/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stranger6667/subscriptions", "organizations_url": "https://api.github.com/users/Stranger6667/orgs", "repos_url": "https://api.github.com/users/Stranger6667/repos", "events_url": "https://api.github.com/users/Stranger6667/events{/privacy}", "received_events_url": "https://api.github.com/users/Stranger6667/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 643097814, "node_id": "MDU6TGFiZWw2NDMwOTc4MTQ=", "url": "https://api.github.com/repos/django-money/django-money/labels/bug", "name": "bug", "color": "EE3F46", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-20T20:57:49Z", "updated_at": "2017-07-09T12:38:22Z", "closed_at": "2017-07-09T12:38:22Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Because internally it localizes ``moneyed.Money`` instances, not ``MoneyPatched``. \r\nDjango settings should influence on ``moneyed.localization.format_money`` behaviour.\r\nI'll try to fix it together with #276 ", "performed_via_github_app": null, "score": 1.0}]}