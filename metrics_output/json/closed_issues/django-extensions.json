{"total_count": 661, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1572", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1572/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1572/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1572/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1572", "id": 680396555, "node_id": "MDU6SXNzdWU2ODAzOTY1NTU=", "number": 1572, "title": "Django Extensions fails on django 3.1", "user": {"login": "tiagoarasilva", "id": 11027931, "node_id": "MDQ6VXNlcjExMDI3OTMx", "avatar_url": "https://avatars1.githubusercontent.com/u/11027931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiagoarasilva", "html_url": "https://github.com/tiagoarasilva", "followers_url": "https://api.github.com/users/tiagoarasilva/followers", "following_url": "https://api.github.com/users/tiagoarasilva/following{/other_user}", "gists_url": "https://api.github.com/users/tiagoarasilva/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiagoarasilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiagoarasilva/subscriptions", "organizations_url": "https://api.github.com/users/tiagoarasilva/orgs", "repos_url": "https://api.github.com/users/tiagoarasilva/repos", "events_url": "https://api.github.com/users/tiagoarasilva/events{/privacy}", "received_events_url": "https://api.github.com/users/tiagoarasilva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-17T17:18:07Z", "updated_at": "2020-08-17T19:53:51Z", "closed_at": "2020-08-17T19:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "One of the many advantages of having Django Extensions is the fact that automatically imports our models but with Django 3.1 that doesn't happen although it shows like is working but is it not", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1571", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1571/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1571/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1571/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1571", "id": 678901596, "node_id": "MDU6SXNzdWU2Nzg5MDE1OTY=", "number": 1571, "title": "shell_plus --notebook ignores --settings argument", "user": {"login": "skabbit", "id": 362857, "node_id": "MDQ6VXNlcjM2Mjg1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/362857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skabbit", "html_url": "https://github.com/skabbit", "followers_url": "https://api.github.com/users/skabbit/followers", "following_url": "https://api.github.com/users/skabbit/following{/other_user}", "gists_url": "https://api.github.com/users/skabbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/skabbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skabbit/subscriptions", "organizations_url": "https://api.github.com/users/skabbit/orgs", "repos_url": "https://api.github.com/users/skabbit/repos", "events_url": "https://api.github.com/users/skabbit/events{/privacy}", "received_events_url": "https://api.github.com/users/skabbit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-14T05:08:21Z", "updated_at": "2020-08-19T13:25:15Z", "closed_at": "2020-08-19T13:25:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce:\r\n\r\n1. Copy your settings.py file to settings2.py, and change any const, ex. add TEST_SETTINGS=1\r\n2. Start ./manage.py shell_plus --notebook ignores --settings=project.settings2\r\n3. Run `from django.conf import settings; print(settings.TEST_SETTINGS)`\r\n4. You'll see None, while excepting to see 1\r\n\r\nIs it somehow related to multiple kernel running inside script?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1570", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1570/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1570/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1570/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1570", "id": 676559087, "node_id": "MDU6SXNzdWU2NzY1NTkwODc=", "number": 1570, "title": "shell_plus error when DATABASES OPTIONS set", "user": {"login": "BluSpanner", "id": 32559200, "node_id": "MDQ6VXNlcjMyNTU5MjAw", "avatar_url": "https://avatars0.githubusercontent.com/u/32559200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BluSpanner", "html_url": "https://github.com/BluSpanner", "followers_url": "https://api.github.com/users/BluSpanner/followers", "following_url": "https://api.github.com/users/BluSpanner/following{/other_user}", "gists_url": "https://api.github.com/users/BluSpanner/gists{/gist_id}", "starred_url": "https://api.github.com/users/BluSpanner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BluSpanner/subscriptions", "organizations_url": "https://api.github.com/users/BluSpanner/orgs", "repos_url": "https://api.github.com/users/BluSpanner/repos", "events_url": "https://api.github.com/users/BluSpanner/events{/privacy}", "received_events_url": "https://api.github.com/users/BluSpanner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-11T03:53:02Z", "updated_at": "2020-08-12T08:22:25Z", "closed_at": "2020-08-12T08:22:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "shell_plus error when DATABASES OPTIONS set in setting.py\r\n\r\nTo re-produce...\r\n```\r\nWindows> python manage.py shell_plus\r\n...\r\n... site-packages\\django_extensions\\management\\commands\\shell_plus.py\", line 472, in set_application_name\r\n     if dbs[db]['ENGINE'] in supported_backends:\r\nKeyError: 'ENGINE'\r\n```\r\n\r\nsettings.py\r\n```\r\nDATABASES = {\r\n    \"default\": {\r\n        \"ENGINE\": \"django.db.backends.sqlite3\",\r\n        ....\r\n    },\r\n    ...\r\n   \"OPTIONS\": {\"timeout\": 20}\r\n```\r\n\r\nNo error with OPTIONS removed\r\n```\r\nDATABASES = {\r\n    \"default\": {\r\n        \"ENGINE\": \"django.db.backends.sqlite3\",\r\n        ....\r\n    },\r\n    ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1569", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1569/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1569/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1569/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1569", "id": 675592882, "node_id": "MDU6SXNzdWU2NzU1OTI4ODI=", "number": 1569, "title": "TypeError: exceptions must derive from BaseException", "user": {"login": "adnathanail", "id": 7809723, "node_id": "MDQ6VXNlcjc4MDk3MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7809723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adnathanail", "html_url": "https://github.com/adnathanail", "followers_url": "https://api.github.com/users/adnathanail/followers", "following_url": "https://api.github.com/users/adnathanail/following{/other_user}", "gists_url": "https://api.github.com/users/adnathanail/gists{/gist_id}", "starred_url": "https://api.github.com/users/adnathanail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adnathanail/subscriptions", "organizations_url": "https://api.github.com/users/adnathanail/orgs", "repos_url": "https://api.github.com/users/adnathanail/repos", "events_url": "https://api.github.com/users/adnathanail/events{/privacy}", "received_events_url": "https://api.github.com/users/adnathanail/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77993, "node_id": "MDU6TGFiZWw3Nzk5Mw==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/bug", "name": "bug", "color": "ff0000", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-08T21:45:32Z", "updated_at": "2020-08-10T08:11:58Z", "closed_at": "2020-08-10T08:11:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrading from 3.0.3 to 3.0.4, any exception that gets thrown I get the following error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/contrib/staticfiles/handlers.py\", line 68, in __call__\r\n    return self.application(environ, start_response)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/wsgi.py\", line 133, in __call__\r\n    response = self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 75, in get_response\r\n    response = self._middleware_chain(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 37, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python3.8/site-packages/six.py\", line 702, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 97, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 133, in get\r\n    return self.render_to_response(self.get_context_data())\r\n  File \"/usr/src/app/backend/views.py\", line 717, in get_context_data\r\n    context = super(CapacityRouteUpdateView, self).get_context_data(**kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 66, in get_context_data\r\n    kwargs['form'] = self.get_form()\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 33, in get_form\r\n    return form_class(**self.get_form_kwargs())\r\n  File \"/usr/src/app/backend/forms.py\", line 525, in __init__\r\n    self.fields[\"end_time\"].initial = utc_time_to_localtime(end_dt__time)\r\n  File \"/usr/src/app/backend/utils.py\", line 134, in utc_time_to_localtime\r\n    return timezone.localtime(datetime.combine(datetime.now(timezone.utc).date(), in_time).replace(tzinfo=pytz.utc)).time()\r\nTypeError: combine() argument 2 must be datetime.time, not None\r\n172.19.0.1 - - [08/Aug/2020 21:38:38] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:38:38] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:38:38] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:38:38] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:38:38] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:38:38] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:38:39] \"GET /schooladmin/capacity/route/3/update/ HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/contrib/staticfiles/handlers.py\", line 68, in __call__\r\n    return self.application(environ, start_response)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/wsgi.py\", line 133, in __call__\r\n    response = self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 75, in get_response\r\n    response = self._middleware_chain(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 37, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python3.8/site-packages/six.py\", line 702, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 97, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 133, in get\r\n    return self.render_to_response(self.get_context_data())\r\n  File \"/usr/src/app/backend/views.py\", line 717, in get_context_data\r\n    context = super(CapacityRouteUpdateView, self).get_context_data(**kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 66, in get_context_data\r\n    kwargs['form'] = self.get_form()\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 33, in get_form\r\n    return form_class(**self.get_form_kwargs())\r\n  File \"/usr/src/app/backend/forms.py\", line 525, in __init__\r\n    self.fields[\"end_time\"].initial = utc_time_to_localtime(end_dt__time)\r\n  File \"/usr/src/app/backend/utils.py\", line 134, in utc_time_to_localtime\r\n    return timezone.localtime(datetime.combine(datetime.now(timezone.utc).date(), in_time).replace(tzinfo=pytz.utc)).time()\r\nTypeError: combine() argument 2 must be datetime.time, not None\r\n * Detected change in '/usr/local/lib/python3.8/site-packages/rest_framework/__init__.py', reloading\r\n * Restarting with stat\r\nPerforming system checks...\r\n\r\nSystem check identified no issues (0 silenced).\r\n\r\nDjango version 3.0.8, using settings 'REDACTED.settings'\r\nDevelopment server is running at http://0.0.0.0:8000/\r\nUsing the Werkzeug debugger (http://werkzeug.pocoo.org/)\r\nQuit the server with CONTROL-C.\r\n * Debugger is active!\r\n * Debugger PIN: 148-967-864\r\n172.19.0.1 - - [08/Aug/2020 21:39:06] \"GET /schooladmin/capacity/route/3/update/ HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/contrib/staticfiles/handlers.py\", line 68, in __call__\r\n    return self.application(environ, start_response)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/wsgi.py\", line 133, in __call__\r\n    response = self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 75, in get_response\r\n    response = self._middleware_chain(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 37, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python3.8/site-packages/six.py\", line 702, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 97, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 133, in get\r\n    return self.render_to_response(self.get_context_data())\r\n  File \"/usr/src/app/backend/views.py\", line 717, in get_context_data\r\n    context = super(CapacityRouteUpdateView, self).get_context_data(**kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 66, in get_context_data\r\n    kwargs['form'] = self.get_form()\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 33, in get_form\r\n    return form_class(**self.get_form_kwargs())\r\n  File \"/usr/src/app/backend/forms.py\", line 525, in __init__\r\n    self.fields[\"end_time\"].initial = utc_time_to_localtime(end_dt__time)\r\n  File \"/usr/src/app/backend/utils.py\", line 134, in utc_time_to_localtime\r\n    return timezone.localtime(datetime.combine(datetime.now(timezone.utc).date(), in_time).replace(tzinfo=pytz.utc)).time()\r\nTypeError: combine() argument 2 must be datetime.time, not None\r\n172.19.0.1 - - [08/Aug/2020 21:39:06] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:06] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:06] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:06] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:06] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:06] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:07] \"GET /schooladmin/capacity/route/3/update/ HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/contrib/staticfiles/handlers.py\", line 68, in __call__\r\n    return self.application(environ, start_response)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/wsgi.py\", line 133, in __call__\r\n    response = self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 75, in get_response\r\n    response = self._middleware_chain(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 37, in null_technical_500_response\r\n    six.reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python3.8/site-packages/six.py\", line 702, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 97, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 133, in get\r\n    return self.render_to_response(self.get_context_data())\r\n  File \"/usr/src/app/backend/views.py\", line 717, in get_context_data\r\n    context = super(CapacityRouteUpdateView, self).get_context_data(**kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 66, in get_context_data\r\n    kwargs['form'] = self.get_form()\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 33, in get_form\r\n    return form_class(**self.get_form_kwargs())\r\n  File \"/usr/src/app/backend/forms.py\", line 525, in __init__\r\n    self.fields[\"end_time\"].initial = utc_time_to_localtime(end_dt__time)\r\n  File \"/usr/src/app/backend/utils.py\", line 134, in utc_time_to_localtime\r\n    return timezone.localtime(datetime.combine(datetime.now(timezone.utc).date(), in_time).replace(tzinfo=pytz.utc)).time()\r\nTypeError: combine() argument 2 must be datetime.time, not None\r\n * Detected change in '/usr/local/lib/python3.8/site-packages/django_extensions/__init__.py', reloading\r\n * Restarting with stat\r\nPerforming system checks...\r\n\r\nSystem check identified no issues (0 silenced).\r\n\r\nDjango version 3.0.8, using settings 'REDACTED.settings'\r\nDevelopment server is running at http://0.0.0.0:8000/\r\nUsing the Werkzeug debugger (http://werkzeug.pocoo.org/)\r\nQuit the server with CONTROL-C.\r\n * Debugger is active!\r\n * Debugger PIN: 148-967-864\r\n172.19.0.1 - - [08/Aug/2020 21:39:56] \"GET /schooladmin/capacity/route/3/update/ HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 97, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 133, in get\r\n    return self.render_to_response(self.get_context_data())\r\n  File \"/usr/src/app/backend/views.py\", line 717, in get_context_data\r\n    context = super(CapacityRouteUpdateView, self).get_context_data(**kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 66, in get_context_data\r\n    kwargs['form'] = self.get_form()\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 33, in get_form\r\n    return form_class(**self.get_form_kwargs())\r\n  File \"/usr/src/app/backend/forms.py\", line 525, in __init__\r\n    self.fields[\"end_time\"].initial = utc_time_to_localtime(end_dt__time)\r\n  File \"/usr/src/app/backend/utils.py\", line 134, in utc_time_to_localtime\r\n    return timezone.localtime(datetime.combine(datetime.now(timezone.utc).date(), in_time).replace(tzinfo=pytz.utc)).time()\r\nTypeError: combine() argument 2 must be datetime.time, not None\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File REDACTED, in __call__\r\n    response = self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File REDACTED, in __call__\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File REDACTED, in __call__\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/middleware.py\", line 61, in __call__\r\n    response = toolbar.process_request(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/timer.py\", line 58, in process_request\r\n    return super().process_request(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/headers.py\", line 50, in process_request\r\n    return super().process_request(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/staticfiles.py\", line 115, in process_request\r\n    return super().process_request(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/logging.py\", line 77, in process_request\r\n    return super().process_request(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/contrib/staticfiles/handlers.py\", line 68, in __call__\r\n    return self.application(environ, start_response)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/wsgi.py\", line 133, in __call__\r\n    response = self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 75, in get_response\r\n    response = self._middleware_chain(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n172.19.0.1 - - [08/Aug/2020 21:39:56] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:56] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:56] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=jquery.js HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:57] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=ubuntu.ttf HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:57] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:57] \"GET /schooladmin/capacity/route/3/update/?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1\" 200 -\r\n172.19.0.1 - - [08/Aug/2020 21:39:58] \"GET /schooladmin/capacity/route/3/update/ HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File REDACTED, in wrapper\r\n    return func(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\", line 97, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 133, in get\r\n    return self.render_to_response(self.get_context_data())\r\n  File \"/usr/src/app/backend/views.py\", line 717, in get_context_data\r\n    context = super(CapacityRouteUpdateView, self).get_context_data(**kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 66, in get_context_data\r\n    kwargs['form'] = self.get_form()\r\n  File \"/usr/local/lib/python3.8/site-packages/django/views/generic/edit.py\", line 33, in get_form\r\n    return form_class(**self.get_form_kwargs())\r\n  File \"/usr/src/app/backend/forms.py\", line 525, in __init__\r\n    self.fields[\"end_time\"].initial = utc_time_to_localtime(end_dt__time)\r\n  File \"/usr/src/app/backend/utils.py\", line 134, in utc_time_to_localtime\r\n    return timezone.localtime(datetime.combine(datetime.now(timezone.utc).date(), in_time).replace(tzinfo=pytz.utc)).time()\r\nTypeError: combine() argument 2 must be datetime.time, not None\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File REDACTED, in __call__\r\n    response = self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File REDACTED, in __call__\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File REDACTED, in __call__\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/utils/deprecation.py\", line 94, in __call__\r\n    response = response or self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/middleware.py\", line 61, in __call__\r\n    response = toolbar.process_request(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/timer.py\", line 58, in process_request\r\n    return super().process_request(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/headers.py\", line 50, in process_request\r\n    return super().process_request(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/staticfiles.py\", line 115, in process_request\r\n    return super().process_request(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/logging.py\", line 77, in process_request\r\n    return super().process_request(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/debug_toolbar/panels/__init__.py\", line 174, in process_request\r\n    return self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/contrib/staticfiles/handlers.py\", line 68, in __call__\r\n    return self.application(environ, start_response)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/wsgi.py\", line 133, in __call__\r\n    response = self.get_response(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\", line 75, in get_response\r\n    response = self._middleware_chain(request)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 36, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 90, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 125, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"/usr/local/lib/python3.8/site-packages/django_extensions/management/technical_response.py\", line 36, in null_technical_500_response\r\n    raise(exc_type, exc_value, tb)\r\nTypeError: exceptions must derive from BaseException\r\n```\r\n\r\nAny help greatly appreciated", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1568", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1568/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1568/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1568/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1568", "id": 675581329, "node_id": "MDU6SXNzdWU2NzU1ODEzMjk=", "number": 1568, "title": "shell_plus autocomplete doesn't work !", "user": {"login": "mmohajer9", "id": 34323369, "node_id": "MDQ6VXNlcjM0MzIzMzY5", "avatar_url": "https://avatars1.githubusercontent.com/u/34323369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmohajer9", "html_url": "https://github.com/mmohajer9", "followers_url": "https://api.github.com/users/mmohajer9/followers", "following_url": "https://api.github.com/users/mmohajer9/following{/other_user}", "gists_url": "https://api.github.com/users/mmohajer9/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmohajer9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmohajer9/subscriptions", "organizations_url": "https://api.github.com/users/mmohajer9/orgs", "repos_url": "https://api.github.com/users/mmohajer9/repos", "events_url": "https://api.github.com/users/mmohajer9/events{/privacy}", "received_events_url": "https://api.github.com/users/mmohajer9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-08T20:08:33Z", "updated_at": "2020-08-09T06:51:02Z", "closed_at": "2020-08-09T06:50:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi , i'm trying to bring up autocomplete suggestions via tab in shell plus with ipython enabled and it is not working , although it shows the suggestions for imported modules but it is not showing the autocomplete for properties\r\ni must say this that it was working before and suddenly it's not.  look at the pics :\r\n![image](https://user-images.githubusercontent.com/34323369/89718906-44e14a00-d9d8-11ea-9406-9ac656bcffcd.png)\r\n![2020_08_09_Kleki](https://user-images.githubusercontent.com/34323369/89718942-a4d7f080-d9d8-11ea-84d9-ee51892f4011.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1548", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1548/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1548/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1548/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1548", "id": 649798295, "node_id": "MDU6SXNzdWU2NDk3OTgyOTU=", "number": 1548, "title": "how to run a script that file name contains dot?", "user": {"login": "lovemyliwu", "id": 2248369, "node_id": "MDQ6VXNlcjIyNDgzNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2248369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lovemyliwu", "html_url": "https://github.com/lovemyliwu", "followers_url": "https://api.github.com/users/lovemyliwu/followers", "following_url": "https://api.github.com/users/lovemyliwu/following{/other_user}", "gists_url": "https://api.github.com/users/lovemyliwu/gists{/gist_id}", "starred_url": "https://api.github.com/users/lovemyliwu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lovemyliwu/subscriptions", "organizations_url": "https://api.github.com/users/lovemyliwu/orgs", "repos_url": "https://api.github.com/users/lovemyliwu/repos", "events_url": "https://api.github.com/users/lovemyliwu/events{/privacy}", "received_events_url": "https://api.github.com/users/lovemyliwu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-02T09:53:29Z", "updated_at": "2020-07-02T10:07:39Z", "closed_at": "2020-07-02T10:07:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "for example:\r\n\r\n`manage.py runscript a.b`\r\n\r\nwell, the `a.b` is a file named `a.b.py` from scripts folder.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1547", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1547/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1547/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1547/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1547", "id": 648003279, "node_id": "MDU6SXNzdWU2NDgwMDMyNzk=", "number": 1547, "title": "shell_plus command fails (CommandError) with a SHELL_PLUS settting ", "user": {"login": "benjaminrigaud", "id": 1983087, "node_id": "MDQ6VXNlcjE5ODMwODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1983087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaminrigaud", "html_url": "https://github.com/benjaminrigaud", "followers_url": "https://api.github.com/users/benjaminrigaud/followers", "following_url": "https://api.github.com/users/benjaminrigaud/following{/other_user}", "gists_url": "https://api.github.com/users/benjaminrigaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaminrigaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaminrigaud/subscriptions", "organizations_url": "https://api.github.com/users/benjaminrigaud/orgs", "repos_url": "https://api.github.com/users/benjaminrigaud/repos", "events_url": "https://api.github.com/users/benjaminrigaud/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaminrigaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-30T09:05:40Z", "updated_at": "2020-07-01T18:19:29Z", "closed_at": "2020-07-01T18:19:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen running `DJANGO_SETTINGS_MODULE=myproject.my_settings ./manage.py shell_plus`\r\nAnd a `SHELL_PLUS = \"ipython\"` setting\r\n\r\n\r\nit fails with `CommandError: No shell runner could be found.`\r\n\r\nIn the code: it executes the `elif SETTINGS_SHELL_PLUS` branch and it retrieves a `get_runner`\r\n\r\nI suppose it should go there afterwards https://github.com/django-extensions/django-extensions/blob/master/django_extensions/management/commands/shell_plus.py#L514 :thinking: \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1543", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1543/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1543/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1543/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1543", "id": 640888934, "node_id": "MDU6SXNzdWU2NDA4ODg5MzQ=", "number": 1543, "title": "Cut a Release?", "user": {"login": "clarkmoody", "id": 1562417, "node_id": "MDQ6VXNlcjE1NjI0MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1562417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarkmoody", "html_url": "https://github.com/clarkmoody", "followers_url": "https://api.github.com/users/clarkmoody/followers", "following_url": "https://api.github.com/users/clarkmoody/following{/other_user}", "gists_url": "https://api.github.com/users/clarkmoody/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarkmoody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions", "organizations_url": "https://api.github.com/users/clarkmoody/orgs", "repos_url": "https://api.github.com/users/clarkmoody/repos", "events_url": "https://api.github.com/users/clarkmoody/events{/privacy}", "received_events_url": "https://api.github.com/users/clarkmoody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "trbs", "id": 65552, "node_id": "MDQ6VXNlcjY1NTUy", "avatar_url": "https://avatars0.githubusercontent.com/u/65552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trbs", "html_url": "https://github.com/trbs", "followers_url": "https://api.github.com/users/trbs/followers", "following_url": "https://api.github.com/users/trbs/following{/other_user}", "gists_url": "https://api.github.com/users/trbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/trbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trbs/subscriptions", "organizations_url": "https://api.github.com/users/trbs/orgs", "repos_url": "https://api.github.com/users/trbs/repos", "events_url": "https://api.github.com/users/trbs/events{/privacy}", "received_events_url": "https://api.github.com/users/trbs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "trbs", "id": 65552, "node_id": "MDQ6VXNlcjY1NTUy", "avatar_url": "https://avatars0.githubusercontent.com/u/65552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trbs", "html_url": "https://github.com/trbs", "followers_url": "https://api.github.com/users/trbs/followers", "following_url": "https://api.github.com/users/trbs/following{/other_user}", "gists_url": "https://api.github.com/users/trbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/trbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trbs/subscriptions", "organizations_url": "https://api.github.com/users/trbs/orgs", "repos_url": "https://api.github.com/users/trbs/repos", "events_url": "https://api.github.com/users/trbs/events{/privacy}", "received_events_url": "https://api.github.com/users/trbs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-18T04:02:52Z", "updated_at": "2020-06-29T10:12:13Z", "closed_at": "2020-06-29T10:12:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some nice changes have landed since the last release. It would be nice to get those out there \ud83d\ude04 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1540", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1540/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1540/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1540/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1540", "id": 636835805, "node_id": "MDU6SXNzdWU2MzY4MzU4MDU=", "number": 1540, "title": "idea for adding new feature", "user": {"login": "gholamiayub", "id": 55285134, "node_id": "MDQ6VXNlcjU1Mjg1MTM0", "avatar_url": "https://avatars1.githubusercontent.com/u/55285134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gholamiayub", "html_url": "https://github.com/gholamiayub", "followers_url": "https://api.github.com/users/gholamiayub/followers", "following_url": "https://api.github.com/users/gholamiayub/following{/other_user}", "gists_url": "https://api.github.com/users/gholamiayub/gists{/gist_id}", "starred_url": "https://api.github.com/users/gholamiayub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gholamiayub/subscriptions", "organizations_url": "https://api.github.com/users/gholamiayub/orgs", "repos_url": "https://api.github.com/users/gholamiayub/repos", "events_url": "https://api.github.com/users/gholamiayub/events{/privacy}", "received_events_url": "https://api.github.com/users/gholamiayub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-11T08:43:42Z", "updated_at": "2020-06-15T07:31:47Z", "closed_at": "2020-06-15T07:31:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I add a new feature to your project?\r\nIs there something like a list of an idea for adding a new  feature?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1537", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1537/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1537/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1537/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1537", "id": 635457003, "node_id": "MDU6SXNzdWU2MzU0NTcwMDM=", "number": 1537, "title": "Is there any reason why the fields are not fully included in graph_models attributes?", "user": {"login": "Gagaro", "id": 3845486, "node_id": "MDQ6VXNlcjM4NDU0ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3845486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gagaro", "html_url": "https://github.com/Gagaro", "followers_url": "https://api.github.com/users/Gagaro/followers", "following_url": "https://api.github.com/users/Gagaro/following{/other_user}", "gists_url": "https://api.github.com/users/Gagaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gagaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gagaro/subscriptions", "organizations_url": "https://api.github.com/users/Gagaro/orgs", "repos_url": "https://api.github.com/users/Gagaro/repos", "events_url": "https://api.github.com/users/Gagaro/events{/privacy}", "received_events_url": "https://api.github.com/users/Gagaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-09T13:59:59Z", "updated_at": "2020-06-09T15:26:34Z", "closed_at": "2020-06-09T15:01:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to make a custom theme for the graph_models command, and the data available is very limited.\r\n\r\nIs there a reason why this is so limited (https://github.com/django-extensions/django-extensions/blob/master/django_extensions/management/modelviz.py#L133-L141)?\r\n\r\nWhy would you think about adding the field itself (something like that https://github.com/Gagaro/django-extensions/commit/cb62f43fe81bcc377d5c3e25af437d00fe84533f)?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1528", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1528/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1528/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1528/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1528", "id": 620582122, "node_id": "MDU6SXNzdWU2MjA1ODIxMjI=", "number": 1528, "title": "show_urls command does not show all effective URL patterns", "user": {"login": "hartwork", "id": 1577132, "node_id": "MDQ6VXNlcjE1NzcxMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1577132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hartwork", "html_url": "https://github.com/hartwork", "followers_url": "https://api.github.com/users/hartwork/followers", "following_url": "https://api.github.com/users/hartwork/following{/other_user}", "gists_url": "https://api.github.com/users/hartwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/hartwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hartwork/subscriptions", "organizations_url": "https://api.github.com/users/hartwork/orgs", "repos_url": "https://api.github.com/users/hartwork/repos", "events_url": "https://api.github.com/users/hartwork/events{/privacy}", "received_events_url": "https://api.github.com/users/hartwork/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1003485, "node_id": "MDU6TGFiZWwxMDAzNDg1", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20help", "name": "need help", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-19T00:13:08Z", "updated_at": "2020-07-29T19:45:03Z", "closed_at": "2020-07-18T03:07:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI am trying to understand why `show_urls` is not showing any URLs for static delivery even though the app does serve static files at `/static/` in practice. To reproduce, it needs nothing but an empty new project with django-extensions weaved in like this:\r\n\r\n```console\r\n$ virtualenv --python=python3.7 py37\r\n\r\n$ source py37/bin/activate\r\n\r\n$ pip install django django-extensions\r\n\r\n$ django-admin startproject p1\r\n\r\n$ echo 'INSTALLED_APPS.append(\"django_extensions\")' >> p1/p1/settings.py\r\n\r\n$ p1/manage.py show_urls  # no static here!\r\n/admin/ django.contrib.admin.sites.index        admin:index\r\n/admin/<app_label>/     django.contrib.admin.sites.app_index    admin:app_list\r\n/admin/auth/group/      django.contrib.admin.options.changelist_view    admin:auth_group_changelist\r\n/admin/auth/group/<path:object_id>/     django.views.generic.base.RedirectView\r\n/admin/auth/group/<path:object_id>/change/      django.contrib.admin.options.change_view        admin:auth_group_change\r\n/admin/auth/group/<path:object_id>/delete/      django.contrib.admin.options.delete_view        admin:auth_group_delete\r\n/admin/auth/group/<path:object_id>/history/     django.contrib.admin.options.history_view       admin:auth_group_history\r\n/admin/auth/group/add/  django.contrib.admin.options.add_view   admin:auth_group_add\r\n/admin/auth/group/autocomplete/ django.contrib.admin.options.autocomplete_view  admin:auth_group_autocomplete\r\n/admin/auth/user/       django.contrib.admin.options.changelist_view    admin:auth_user_changelist\r\n/admin/auth/user/<id>/password/ django.contrib.auth.admin.user_change_password  admin:auth_user_password_change\r\n/admin/auth/user/<path:object_id>/      django.views.generic.base.RedirectView\r\n/admin/auth/user/<path:object_id>/change/       django.contrib.admin.options.change_view        admin:auth_user_change\r\n/admin/auth/user/<path:object_id>/delete/       django.contrib.admin.options.delete_view        admin:auth_user_delete\r\n/admin/auth/user/<path:object_id>/history/      django.contrib.admin.options.history_view       admin:auth_user_history\r\n/admin/auth/user/add/   django.contrib.auth.admin.add_view      admin:auth_user_add\r\n/admin/auth/user/autocomplete/  django.contrib.admin.options.autocomplete_view  admin:auth_user_autocomplete\r\n/admin/jsi18n/  django.contrib.admin.sites.i18n_javascript      admin:jsi18n\r\n/admin/login/   django.contrib.admin.sites.login        admin:login\r\n/admin/logout/  django.contrib.admin.sites.logout       admin:logout\r\n/admin/password_change/ django.contrib.admin.sites.password_change      admin:password_change\r\n/admin/password_change/done/    django.contrib.admin.sites.password_change_done admin:password_change_done\r\n/admin/r/<int:content_type_id>/<path:object_id>/        django.contrib.contenttypes.views.shortcut      admin:view_on_site\r\n\r\n$ { p1/manage.py runserver |& fgrep static; } &\r\n\r\n$ wget -O/dev/null http://127.0.0.1:8000/static/admin/css/login.css 2>/dev/null \r\n[18/May/2020 23:59:09] \"GET /static/admin/css/login.css HTTP/1.1\" 200 1233\r\n```\r\n\r\nOnce I drop `django.contrib.staticfiles` from `INSTALLED_APPS` asset `/static/admin/css/login.css` is not longer served, as expected.\r\n\r\nWhat I'm wondering is:\r\n- If `django.contrib.staticfiles.urls.urlpatterns` is not included in `p1.p1.urls.urlpatterns` explicitly, why does it still have an effect \u2014 who does that and where?\r\n- Can `show_urls` be made to show all effective URL patterns, not just the ones from `settings.ROOT_URLCONF`?\r\n\r\nThanks and best\r\n\r\n\r\nSebastian", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1522", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1522/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1522/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1522/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1522", "id": 610752139, "node_id": "MDU6SXNzdWU2MTA3NTIxMzk=", "number": 1522, "title": "RandomCharField (UniqueFieldMixin) not compatible with model with CheckConstraint", "user": {"login": "r3gis3r", "id": 729574, "node_id": "MDQ6VXNlcjcyOTU3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/729574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r3gis3r", "html_url": "https://github.com/r3gis3r", "followers_url": "https://api.github.com/users/r3gis3r/followers", "following_url": "https://api.github.com/users/r3gis3r/following{/other_user}", "gists_url": "https://api.github.com/users/r3gis3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/r3gis3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r3gis3r/subscriptions", "organizations_url": "https://api.github.com/users/r3gis3r/orgs", "repos_url": "https://api.github.com/users/r3gis3r/repos", "events_url": "https://api.github.com/users/r3gis3r/events{/privacy}", "received_events_url": "https://api.github.com/users/r3gis3r/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203193, "node_id": "MDU6TGFiZWwyMDMxOTM=", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/improvement", "name": "improvement", "color": "02d7e1", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}, {"id": 30635832, "node_id": "MDU6TGFiZWwzMDYzNTgzMg==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20test%20case", "name": "need test case", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-01T13:31:27Z", "updated_at": "2020-07-29T19:48:26Z", "closed_at": "2020-07-29T19:48:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm using django `Django==2.2.9`\r\n\r\nI have a model with a `RandomCharField` and some extra constraint defined. \r\n\r\n```python\r\n\r\nclass MyModel(RandomSlugModel, TimeStampedModel):\r\n    class Meta:\r\n        unique_together = ((\"remote_field\", \"user\"),)\r\n        constraints = [\r\n            CheckConstraint(\r\n                check=Q(units_sold__lte=F('units_in_item')), name='check_sold',\r\n            ),\r\n            CheckConstraint(\r\n                check=Q(units_reserved__lte=F('units_in_item')), name='check_reserved',\r\n            ),\r\n        ]\r\n    [...]\r\n```\r\n\r\nIf I try to save I get the following stack trace : \r\n\r\n```\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django_extensions/db/models.py\", line 23, in save\r\nweb_1          |     super(TimeStampedModel, self).save(**kwargs)\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django/db/models/base.py\", line 740, in save\r\nweb_1          |     self.save_base(using=using, force_insert=force_insert,\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django/db/models/base.py\", line 777, in save_base\r\nweb_1          |     updated = self._save_table(\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django/db/models/base.py\", line 870, in _save_table\r\nweb_1          |     result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django/db/models/base.py\", line 907, in _do_insert\r\nweb_1          |     return manager._insert([self], fields=fields, return_id=update_pk,\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django/db/models/manager.py\", line 82, in manager_method\r\nweb_1          |     return getattr(self.get_queryset(), name)(*args, **kwargs)\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django/db/models/query.py\", line 1186, in _insert\r\nweb_1          |     return query.get_compiler(using=using).execute_sql(return_id)\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django/db/models/sql/compiler.py\", line 1367, in execute_sql\r\nweb_1          |     for sql, params in self.as_sql():\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django/db/models/sql/compiler.py\", line 1309, in as_sql\r\nweb_1          |     value_rows = [\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django/db/models/sql/compiler.py\", line 1310, in <listcomp>\r\nweb_1          |     [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django/db/models/sql/compiler.py\", line 1310, in <listcomp>\r\nweb_1          |     [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django/db/models/sql/compiler.py\", line 1261, in pre_save_val\r\nweb_1          |     return field.pre_save(obj, add=True)\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django_extensions/db/fields/__init__.py\", line 387, in pre_save\r\nweb_1          |     return self.find_unique(\r\nweb_1          |   File \"/usr/local/lib/python3.8/site-packages/django_extensions/db/fields/__init__.py\", line 74, in find_unique\r\nweb_1          |     if self.attname in constraint.fields:\r\nweb_1          | AttributeError: 'CheckConstraint' object has no attribute 'fields'\r\n```\r\n\r\nBy reading the code at the pointed error ( https://github.com/django-extensions/django-extensions/blob/master/django_extensions/db/fields/__init__.py#L74 ) \r\nI would say it should be changed to : \r\n`               if self.attname in constraint.fields:`\r\nto\r\n`               if hasattr(constraint, 'fields') and self.attname in constraint.fields:`\r\n\r\nIt would help to support all type of constraint and not only the `UniqueConstraint` one : I think that constraint should be any of `BaseConstraint` that doesn't define a fields attribute.\r\n\r\nLet me know if you need more details or would like a pull request with the suggested change above.\r\n \r\n_In the meanwhile for those having the same issue a temporary workaround is to define a dummy class that wrap your constraint (in my case the CheckConstraint) and define a fields attribute._\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1521", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1521/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1521/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1521/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1521", "id": 610418019, "node_id": "MDU6SXNzdWU2MTA0MTgwMTk=", "number": 1521, "title": "Pip 20.1 breaks pipchecker", "user": {"login": "Alexerson", "id": 5081356, "node_id": "MDQ6VXNlcjUwODEzNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5081356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexerson", "html_url": "https://github.com/Alexerson", "followers_url": "https://api.github.com/users/Alexerson/followers", "following_url": "https://api.github.com/users/Alexerson/following{/other_user}", "gists_url": "https://api.github.com/users/Alexerson/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexerson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexerson/subscriptions", "organizations_url": "https://api.github.com/users/Alexerson/orgs", "repos_url": "https://api.github.com/users/Alexerson/repos", "events_url": "https://api.github.com/users/Alexerson/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexerson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77993, "node_id": "MDU6TGFiZWw3Nzk5Mw==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/bug", "name": "bug", "color": "ff0000", "default": true, "description": null}, {"id": 1003485, "node_id": "MDU6TGFiZWwxMDAzNDg1", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20help", "name": "need help", "color": "0b02e1", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T22:06:03Z", "updated_at": "2020-06-19T07:22:05Z", "closed_at": "2020-06-19T07:22:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When upgrading to pip==20.1, the following exception appears:\r\n```\r\nTraceback (most recent call last):\r\n  File \"./manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"./lib/python3.8/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"./lib/python3.8/site-packages/django/core/management/__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"./lib/python3.8/site-packages/django/core/management/base.py\", line 323, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"./lib/python3.8/site-packages/django/core/management/base.py\", line 364, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"./lib/python3.8/site-packages/django_extensions/management/utils.py\", line 62, in inner\r\n    ret = func(self, *args, **kwargs)\r\n  File \"./lib/python3.8/site-packages/django_extensions/management/commands/pipchecker.py\", line 92, in handle\r\n    name = req.name if req.name else req.link.filename\r\nAttributeError: 'ParsedRequirement' object has no attribute 'name'\r\n```\r\n\r\nIt's working fine when downgrading to pip 20.0.1.\r\n\r\n\r\ndjango-extensions==2.2.9", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1516", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1516/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1516/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1516/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1516", "id": 599563560, "node_id": "MDU6SXNzdWU1OTk1NjM1NjA=", "number": 1516, "title": "RemovedInDjango40Warning", "user": {"login": "vishaldhimanai", "id": 14355490, "node_id": "MDQ6VXNlcjE0MzU1NDkw", "avatar_url": "https://avatars2.githubusercontent.com/u/14355490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishaldhimanai", "html_url": "https://github.com/vishaldhimanai", "followers_url": "https://api.github.com/users/vishaldhimanai/followers", "following_url": "https://api.github.com/users/vishaldhimanai/following{/other_user}", "gists_url": "https://api.github.com/users/vishaldhimanai/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishaldhimanai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishaldhimanai/subscriptions", "organizations_url": "https://api.github.com/users/vishaldhimanai/orgs", "repos_url": "https://api.github.com/users/vishaldhimanai/repos", "events_url": "https://api.github.com/users/vishaldhimanai/events{/privacy}", "received_events_url": "https://api.github.com/users/vishaldhimanai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-14T13:14:34Z", "updated_at": "2020-04-21T11:12:55Z", "closed_at": "2020-04-21T11:12:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "RemovedInDjango40Warning: django.utils.translation.ugettext_lazy() is deprecated in favor of django.utils.translation.gettext_lazy()\r\n\r\nPlease edit all deprecated warning ( Version: 2.2.9)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1505", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1505/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1505/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1505/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1505", "id": 590605322, "node_id": "MDU6SXNzdWU1OTA2MDUzMjI=", "number": 1505, "title": "validate_templates can fail with an empty DIRS setting", "user": {"login": "rik", "id": 3653, "node_id": "MDQ6VXNlcjM2NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rik", "html_url": "https://github.com/rik", "followers_url": "https://api.github.com/users/rik/followers", "following_url": "https://api.github.com/users/rik/following{/other_user}", "gists_url": "https://api.github.com/users/rik/gists{/gist_id}", "starred_url": "https://api.github.com/users/rik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rik/subscriptions", "organizations_url": "https://api.github.com/users/rik/orgs", "repos_url": "https://api.github.com/users/rik/repos", "events_url": "https://api.github.com/users/rik/events{/privacy}", "received_events_url": "https://api.github.com/users/rik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-30T21:22:27Z", "updated_at": "2020-03-30T21:39:27Z", "closed_at": "2020-03-30T21:39:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```pytb\r\nTraceback (most recent call last):\r\n  File \"./manage.py\", line 23, in <module>\r\n    main()\r\n  File \"./manage.py\", line 19, in main\r\n    execute_from_command_line(sys.argv)\r\n  File \"/Users/rik24d/.local/share/virtualenvs/imake-aTBwPyYI/lib/python3.7/site-packages\r\n/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/rik24d/.local/share/virtualenvs/imake-aTBwPyYI/lib/python3.7/site-packages\r\n/django/core/management/__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/Users/rik24d/.local/share/virtualenvs/imake-aTBwPyYI/lib/python3.7/site-packages\r\n/django/core/management/base.py\", line 323, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/Users/rik24d/.local/share/virtualenvs/imake-aTBwPyYI/lib/python3.7/site-packages\r\n/django/core/management/base.py\", line 364, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/Users/rik24d/.local/share/virtualenvs/imake-aTBwPyYI/lib/python3.7/site-packages/django_extensions/management/utils.py\", line 62, in inner\r\n    ret = func(self, *args, **kwargs)\r\n  File \"/Users/rik24d/.local/share/virtualenvs/imake-aTBwPyYI/lib/python3.7/site-packages/django_extensions/management/commands/validate_templates.py\", line 57, in handle\r\n    template_dirs = set(get_template_setting('DIRS'))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1501", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1501/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1501/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1501/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1501", "id": 585442406, "node_id": "MDU6SXNzdWU1ODU0NDI0MDY=", "number": 1501, "title": "sqldiff -a raises KeyError", "user": {"login": "dcecco", "id": 19288464, "node_id": "MDQ6VXNlcjE5Mjg4NDY0", "avatar_url": "https://avatars0.githubusercontent.com/u/19288464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcecco", "html_url": "https://github.com/dcecco", "followers_url": "https://api.github.com/users/dcecco/followers", "following_url": "https://api.github.com/users/dcecco/following{/other_user}", "gists_url": "https://api.github.com/users/dcecco/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcecco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcecco/subscriptions", "organizations_url": "https://api.github.com/users/dcecco/orgs", "repos_url": "https://api.github.com/users/dcecco/repos", "events_url": "https://api.github.com/users/dcecco/events{/privacy}", "received_events_url": "https://api.github.com/users/dcecco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-21T06:39:17Z", "updated_at": "2020-03-22T23:05:01Z", "closed_at": "2020-03-22T23:05:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI work on Dango project (v2.2.1) with between 50-100 models (running on Postgres). I tried running a `./manage.py sqldiff -a` over the project and got a `KeyError` exception in `find_unique_missing_in_model` and `find_index_missing_in_model`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1499", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1499/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1499/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1499/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1499", "id": 577460268, "node_id": "MDU6SXNzdWU1Nzc0NjAyNjg=", "number": 1499, "title": "Model imports shown, but giving NameError on usage.", "user": {"login": "noodlebreak", "id": 5454248, "node_id": "MDQ6VXNlcjU0NTQyNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5454248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noodlebreak", "html_url": "https://github.com/noodlebreak", "followers_url": "https://api.github.com/users/noodlebreak/followers", "following_url": "https://api.github.com/users/noodlebreak/following{/other_user}", "gists_url": "https://api.github.com/users/noodlebreak/gists{/gist_id}", "starred_url": "https://api.github.com/users/noodlebreak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noodlebreak/subscriptions", "organizations_url": "https://api.github.com/users/noodlebreak/orgs", "repos_url": "https://api.github.com/users/noodlebreak/repos", "events_url": "https://api.github.com/users/noodlebreak/events{/privacy}", "received_events_url": "https://api.github.com/users/noodlebreak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 503016138, "node_id": "MDU6TGFiZWw1MDMwMTYxMzg=", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/Need%20Reproducable%20Example", "name": "Need Reproducable Example", "color": "bfd4f2", "default": false, "description": null}, {"id": 1003485, "node_id": "MDU6TGFiZWwxMDAzNDg1", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20help", "name": "need help", "color": "0b02e1", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}, {"id": 30635832, "node_id": "MDU6TGFiZWwzMDYzNTgzMg==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20test%20case", "name": "need test case", "color": "ededed", "default": false, "description": null}, {"id": 54023847, "node_id": "MDU6TGFiZWw1NDAyMzg0Nw==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/needs%20more%20information", "name": "needs more information", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-03-08T07:41:30Z", "updated_at": "2020-05-11T14:01:37Z", "closed_at": "2020-05-11T13:45:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version:\r\n- django-extensions==2.2.8\r\n- Django==3.0.2\r\n- ipython==7.13.0\r\n\r\nSample output:\r\n\r\n```python\r\n (2004)-> ./manage.py shell_plus --ipython\r\n[TerminalIPythonApp] WARNING | File not found: '/home/ash/.pythonrc'\r\n# Shell Plus Model Imports\r\nfrom allauth.account.models import EmailAddress, EmailConfirmation\r\nfrom allauth.socialaccount.models import SocialAccount, SocialApp, SocialToken\r\nfrom catalogue.models import Brand, Category, Product, ProductImage\r\nfrom django.contrib.admin.models import LogEntry\r\nfrom django.contrib.auth.models import Group, Permission\r\nfrom django.contrib.contenttypes.models import ContentType\r\nfrom django.contrib.sessions.models import Session\r\nfrom django.contrib.sites.models import Site\r\nfrom orders.models import LineItem, Order, Review\r\nfrom rest_framework.authtoken.models import Token\r\nfrom users.models import User\r\n# Shell Plus Django Imports\r\nfrom django.core.cache import cache\r\nfrom django.conf import settings\r\nfrom django.contrib.auth import get_user_model\r\nfrom django.db import transaction\r\nfrom django.db.models import Avg, Case, Count, F, Max, Min, Prefetch, Q, Sum, When, Exists, OuterRef, Subquery\r\nfrom django.utils import timezone\r\nfrom django.urls import reverse\r\nPython 3.8.2 (default, Feb 26 2020, 04:23:39) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.13.0 -- An enhanced Interactive Python. Type '?' for help.\r\n[TerminalIPythonApp] WARNING | File not found: '/home/ash/.pythonrc'\r\n\r\nIn [1]: User                                                                                                                    \r\n---------------------------------------------------------------------------\r\nNameError                                 Traceback (most recent call last)\r\n<ipython-input-1-1974857568df> in <module>\r\n----> 1 User\r\n\r\nNameError: name 'User' is not defined\r\n```\r\n\r\nAlso, in my settings I already have this:\r\n\r\n```python\r\n    # Custom user app\r\n    AUTH_USER_MODEL = 'users.User'\r\n```\r\n\r\n```python\r\n# settings/local.py\r\n    INSTALLED_APPS += ('django_nose', 'django_extensions',)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1498", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1498/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1498/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1498/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1498", "id": 577340781, "node_id": "MDU6SXNzdWU1NzczNDA3ODE=", "number": 1498, "title": "Poetry integration for runserver_plus", "user": {"login": "jeyraof", "id": 2032880, "node_id": "MDQ6VXNlcjIwMzI4ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2032880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeyraof", "html_url": "https://github.com/jeyraof", "followers_url": "https://api.github.com/users/jeyraof/followers", "following_url": "https://api.github.com/users/jeyraof/following{/other_user}", "gists_url": "https://api.github.com/users/jeyraof/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeyraof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeyraof/subscriptions", "organizations_url": "https://api.github.com/users/jeyraof/orgs", "repos_url": "https://api.github.com/users/jeyraof/repos", "events_url": "https://api.github.com/users/jeyraof/events{/privacy}", "received_events_url": "https://api.github.com/users/jeyraof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-07T14:17:21Z", "updated_at": "2020-03-07T15:53:14Z", "closed_at": "2020-03-07T15:53:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now, we can run django with poetry by this command: `poetry run python manage.py runserver_plus`\r\n\r\nAfter this settings:\r\n```toml\r\n[tool.poetry.scripts]\r\nrunserver_plus = \"django_extensions:~~~~\"\r\n```\r\n\r\n```bash\r\npoetry run runserver_plus\r\n```\r\n\r\ncommand was runnable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1496", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1496/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1496/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1496/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1496", "id": 574228385, "node_id": "MDU6SXNzdWU1NzQyMjgzODU=", "number": 1496, "title": "Model importing doesn't work", "user": {"login": "discover59", "id": 16558427, "node_id": "MDQ6VXNlcjE2NTU4NDI3", "avatar_url": "https://avatars2.githubusercontent.com/u/16558427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/discover59", "html_url": "https://github.com/discover59", "followers_url": "https://api.github.com/users/discover59/followers", "following_url": "https://api.github.com/users/discover59/following{/other_user}", "gists_url": "https://api.github.com/users/discover59/gists{/gist_id}", "starred_url": "https://api.github.com/users/discover59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/discover59/subscriptions", "organizations_url": "https://api.github.com/users/discover59/orgs", "repos_url": "https://api.github.com/users/discover59/repos", "events_url": "https://api.github.com/users/discover59/events{/privacy}", "received_events_url": "https://api.github.com/users/discover59/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-02T20:28:43Z", "updated_at": "2020-03-06T11:50:16Z", "closed_at": "2020-03-06T11:50:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using django-extensions 2.2.8 and ipython 7.5.0 in django 2.2.10 project.\r\nWhen I run `python manage.py shell_plus`, it tells models are imported.\r\n\r\n```\r\n# Shell Plus Django Imports\r\nfrom django.core.cache import cache\r\nfrom django.conf import settings\r\n\r\n```\r\n\r\nBut when I reference it, it shows error `name 'settings' is not defined`.\r\n\r\nIt works on some projects and doesn't work for other.\r\nI couldn't figure out what the actual reason is.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1478", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1478/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1478/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1478/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1478", "id": 562141517, "node_id": "MDU6SXNzdWU1NjIxNDE1MTc=", "number": 1478, "title": "2.2.7 not work in django3.0.3, but 2.2.6 work ok", "user": {"login": "stfenjobs", "id": 6580897, "node_id": "MDQ6VXNlcjY1ODA4OTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6580897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stfenjobs", "html_url": "https://github.com/stfenjobs", "followers_url": "https://api.github.com/users/stfenjobs/followers", "following_url": "https://api.github.com/users/stfenjobs/following{/other_user}", "gists_url": "https://api.github.com/users/stfenjobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/stfenjobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stfenjobs/subscriptions", "organizations_url": "https://api.github.com/users/stfenjobs/orgs", "repos_url": "https://api.github.com/users/stfenjobs/repos", "events_url": "https://api.github.com/users/stfenjobs/events{/privacy}", "received_events_url": "https://api.github.com/users/stfenjobs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-09T08:20:18Z", "updated_at": "2020-02-10T19:12:48Z", "closed_at": "2020-02-10T19:12:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "2.2.7 + django 3.0.3 + python 3.74 .    not work\r\n\r\n2.2.7 + django 3.0.3 + python 3.81 .    not work\r\n\r\n================================\r\n2.2.6 + django 3.0.3 + python 3.81 .    **it's work**\r\n\r\nerror:\r\n ```\r\nWatching for file changes with StatReloader\r\nException in thread django-main-thread:\r\nTraceback (most recent call last):\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/threading.py\", line 932, in _bootstrap_inner\r\n    self.run()\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/threading.py\", line 870, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/utils/autoreload.py\", line 53, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/core/management/commands/runserver.py\", line 109, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/utils/autoreload.py\", line 76, in raise_last_exception\r\n    raise _exception[1]\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/core/management/__init__.py\", line 357, in execute\r\n    autoreload.check_errors(django.setup)()\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/utils/autoreload.py\", line 53, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/apps/registry.py\", line 114, in populate\r\n    app_config.import_models()\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/apps/config.py\", line 211, in import_models\r\n    self.models_module = import_module(models_module_name)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 671, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 783, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/contrib/auth/models.py\", line 91, in <module>\r\n    class Group(models.Model):\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/db/models/base.py\", line 160, in __new__\r\n    new_class.add_to_class(obj_name, obj)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/db/models/base.py\", line 325, in add_to_class\r\n    value.contribute_to_class(cls, name)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/db/models/fields/related.py\", line 1585, in contribute_to_class\r\n    self.remote_field.through = create_many_to_many_intermediary_model(self, cls)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/db/models/fields/related.py\", line 1066, in create_many_to_many_intermediary_model\r\n    'verbose_name': _('%(from)s-%(to)s relationship') % {'from': from_, 'to': to},\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/utils/functional.py\", line 160, in __mod__\r\n    return str(self) % rhs\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/utils/functional.py\", line 124, in __text_cast\r\n    return func(*self.__args, **self.__kw)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/utils/translation/__init__.py\", line 92, in gettext\r\n    return _trans.gettext(message)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/utils/translation/trans_real.py\", line 285, in gettext\r\n    _default = _default or translation(settings.LANGUAGE_CODE)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/utils/translation/trans_real.py\", line 198, in translation\r\n    _translations[language] = DjangoTranslation(language)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/utils/translation/trans_real.py\", line 97, in __init__\r\n    self._add_installed_apps_translations()\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/utils/translation/trans_real.py\", line 145, in _add_installed_apps_translations\r\n    translation = self._new_gnu_trans(localedir)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/site-packages/django/utils/translation/trans_real.py\", line 119, in _new_gnu_trans\r\n    return gettext_module.translation(\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/gettext.py\", line 598, in translation\r\n    t = _translations.setdefault(key, class_(fp))\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/gettext.py\", line 261, in __init__\r\n    self._parse(fp)\r\n  File \"/Users/user01/opt/anaconda3/envs/pro2/lib/python3.8/gettext.py\", line 456, in _parse\r\n    catalog[str(msg, charset)] = str(tmsg, charset)\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe6 in position 0: ordinal not in range(128)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1475", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1475/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1475/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1475/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1475", "id": 560603929, "node_id": "MDU6SXNzdWU1NjA2MDM5Mjk=", "number": 1475, "title": "ImportError when Werkzeug is installed", "user": {"login": "jameswilliams1", "id": 33026008, "node_id": "MDQ6VXNlcjMzMDI2MDA4", "avatar_url": "https://avatars1.githubusercontent.com/u/33026008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameswilliams1", "html_url": "https://github.com/jameswilliams1", "followers_url": "https://api.github.com/users/jameswilliams1/followers", "following_url": "https://api.github.com/users/jameswilliams1/following{/other_user}", "gists_url": "https://api.github.com/users/jameswilliams1/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameswilliams1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameswilliams1/subscriptions", "organizations_url": "https://api.github.com/users/jameswilliams1/orgs", "repos_url": "https://api.github.com/users/jameswilliams1/repos", "events_url": "https://api.github.com/users/jameswilliams1/events{/privacy}", "received_events_url": "https://api.github.com/users/jameswilliams1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-05T20:15:15Z", "updated_at": "2020-02-20T13:05:15Z", "closed_at": "2020-02-07T13:40:38Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "Running the following code with the latest Wekzeug installed now gives an ImportError (I believe this should now be `from werkzeug.debug import DebuggedApplication`.\r\nhttps://github.com/django-extensions/django-extensions/blob/0ad61ae76b121344ccd2ad4bbf4af4e4b5b8f70e/django_extensions/management/commands/runserver_plus.py#L222\r\n\r\n```\r\nImportError: cannot import name 'DebuggedApplication' from 'werkzeug' (/usr/local/lib/python3.7/site-packages/werkzeug/__init__.py)\r\n```\r\n\r\nNot checked the other imports but a few are at least deprecated and may also be removed soon.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1474", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1474/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1474/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1474/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1474", "id": 560517304, "node_id": "MDU6SXNzdWU1NjA1MTczMDQ=", "number": 1474, "title": "404 for static files", "user": {"login": "adambyer", "id": 1190970, "node_id": "MDQ6VXNlcjExOTA5NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1190970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adambyer", "html_url": "https://github.com/adambyer", "followers_url": "https://api.github.com/users/adambyer/followers", "following_url": "https://api.github.com/users/adambyer/following{/other_user}", "gists_url": "https://api.github.com/users/adambyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adambyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adambyer/subscriptions", "organizations_url": "https://api.github.com/users/adambyer/orgs", "repos_url": "https://api.github.com/users/adambyer/repos", "events_url": "https://api.github.com/users/adambyer/events{/privacy}", "received_events_url": "https://api.github.com/users/adambyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-05T17:21:15Z", "updated_at": "2020-02-11T02:14:10Z", "closed_at": "2020-02-10T20:26:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I'm trying this out for the first time. I have the server running with...\r\n\r\npython manage.py runserver_plus --cert-file cert.crt\r\n\r\nAnd can access my app at https://127.0.0.1:8000/.\r\n\r\nBut all static files are 404.\r\n\r\nWhat am I missing?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1472", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1472/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1472/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1472/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1472", "id": 559287682, "node_id": "MDU6SXNzdWU1NTkyODc2ODI=", "number": 1472, "title": "ModuleNotFoundError: No module named 'django_extensions'", "user": {"login": "gDoe24", "id": 43383363, "node_id": "MDQ6VXNlcjQzMzgzMzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/43383363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gDoe24", "html_url": "https://github.com/gDoe24", "followers_url": "https://api.github.com/users/gDoe24/followers", "following_url": "https://api.github.com/users/gDoe24/following{/other_user}", "gists_url": "https://api.github.com/users/gDoe24/gists{/gist_id}", "starred_url": "https://api.github.com/users/gDoe24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gDoe24/subscriptions", "organizations_url": "https://api.github.com/users/gDoe24/orgs", "repos_url": "https://api.github.com/users/gDoe24/repos", "events_url": "https://api.github.com/users/gDoe24/events{/privacy}", "received_events_url": "https://api.github.com/users/gDoe24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-03T19:33:34Z", "updated_at": "2020-02-04T20:36:02Z", "closed_at": "2020-02-04T20:36:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Keep getting this error when I try to do anything with manage.py. I am able to import django_extensions when I open up a python shell, but for some reason will not work with my app even though it says \"requirements filled\" when I go to pip install again.\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'rest_framework',\r\n    'django_extensions',\r\n    'corsheaders',\r\n    'rest_framework.authtoken',\r\n    'core',\r\n    'user',\r\n    'recipe',\r\n    'frontend',\r\n]\r\n\r\nDjango >=2.2.6,<2.3.0\r\ndjango-extensions>=2.2.5,<3.0.0\r\n\r\n\r\n\r\n(myvenv) C:\\Users\\425823\\Django_projects\\recipe-app-api>docker-compose run app sh -c \"python manage.py help\"\r\nStarting recipe-app-api_db_1 ... done\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 21, in <module>\r\n    main()\r\n  File \"manage.py\", line 17, in main\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/management/__init__.py\", line 357, in execute\r\n    django.setup()\r\n  File \"/usr/local/lib/python3.7/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/apps/registry.py\", line 91, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/apps/config.py\", line 90, in create\r\n    module = import_module(entry)\r\n  File \"/usr/local/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 965, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'django_extensions'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1471", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1471/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1471/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1471/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1471", "id": 556364350, "node_id": "MDU6SXNzdWU1NTYzNjQzNTA=", "number": 1471, "title": "pipchecker imports broke with pip 20.0.2", "user": {"login": "cmackenziek", "id": 928487, "node_id": "MDQ6VXNlcjkyODQ4Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/928487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmackenziek", "html_url": "https://github.com/cmackenziek", "followers_url": "https://api.github.com/users/cmackenziek/followers", "following_url": "https://api.github.com/users/cmackenziek/following{/other_user}", "gists_url": "https://api.github.com/users/cmackenziek/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmackenziek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmackenziek/subscriptions", "organizations_url": "https://api.github.com/users/cmackenziek/orgs", "repos_url": "https://api.github.com/users/cmackenziek/repos", "events_url": "https://api.github.com/users/cmackenziek/events{/privacy}", "received_events_url": "https://api.github.com/users/cmackenziek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-28T17:38:21Z", "updated_at": "2020-01-28T19:06:14Z", "closed_at": "2020-01-28T19:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "`python manage.py pipchecker` fails with `CommandError: Pip version 6 or higher is required` with pip version 20.0.2.\r\n\r\nIt seems this is due to a failing import in line 11 of pipchecker.py:\r\n\r\n`from pip._internal.download import PipSession`\r\n\r\nIt seems the latest versions of pip moved that class to `pip._internal.network.session`, so changing that import to `from pip._internal.network.session import PipSession` might be a (brittle) solution.\r\n\r\nI'm not at all familiar with this code so its only speculation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1469", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1469/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1469/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1469/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1469", "id": 554762511, "node_id": "MDU6SXNzdWU1NTQ3NjI1MTE=", "number": 1469, "title": "python manage.py reset_db says Reset successful when it's not", "user": {"login": "pyghassen", "id": 607725, "node_id": "MDQ6VXNlcjYwNzcyNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/607725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyghassen", "html_url": "https://github.com/pyghassen", "followers_url": "https://api.github.com/users/pyghassen/followers", "following_url": "https://api.github.com/users/pyghassen/following{/other_user}", "gists_url": "https://api.github.com/users/pyghassen/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyghassen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyghassen/subscriptions", "organizations_url": "https://api.github.com/users/pyghassen/orgs", "repos_url": "https://api.github.com/users/pyghassen/repos", "events_url": "https://api.github.com/users/pyghassen/events{/privacy}", "received_events_url": "https://api.github.com/users/pyghassen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 30635599, "node_id": "MDU6TGFiZWwzMDYzNTU5OQ==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/Easy%20Pickings", "name": "Easy Pickings", "color": "02e10c", "default": false, "description": null}, {"id": 203193, "node_id": "MDU6TGFiZWwyMDMxOTM=", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/improvement", "name": "improvement", "color": "02d7e1", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-24T14:19:48Z", "updated_at": "2020-01-24T14:39:53Z", "closed_at": "2020-01-24T14:26:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nYou have requested a database reset.\r\nThis will IRREVERSIBLY DESTROY\r\nALL data in the database \"my_db\".\r\nAre you sure you want to do this?\r\n\r\nType 'yes' to continue, or 'no' to cancel: yes\r\n[2020-01-24 14:16:21 +0000] ERROR - root.handle(): Error: database \"my_db\" does not exist\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/django_extensions/management/commands/reset_db.py\", line 167, in handle\r\n    cursor.execute(drop_query)\r\npsycopg2.ProgrammingError: database \"my_db\" does not exist\r\n\r\nReset successful.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1466", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1466/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1466/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1466/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1466", "id": 551744640, "node_id": "MDU6SXNzdWU1NTE3NDQ2NDA=", "number": 1466, "title": "The create_app command no longer exists ??", "user": {"login": "scwall", "id": 30811539, "node_id": "MDQ6VXNlcjMwODExNTM5", "avatar_url": "https://avatars1.githubusercontent.com/u/30811539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scwall", "html_url": "https://github.com/scwall", "followers_url": "https://api.github.com/users/scwall/followers", "following_url": "https://api.github.com/users/scwall/following{/other_user}", "gists_url": "https://api.github.com/users/scwall/gists{/gist_id}", "starred_url": "https://api.github.com/users/scwall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scwall/subscriptions", "organizations_url": "https://api.github.com/users/scwall/orgs", "repos_url": "https://api.github.com/users/scwall/repos", "events_url": "https://api.github.com/users/scwall/events{/privacy}", "received_events_url": "https://api.github.com/users/scwall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-18T09:19:39Z", "updated_at": "2020-01-23T17:52:53Z", "closed_at": "2020-01-19T22:03:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I've come across this information:\r\nhttps://groups.google.com/forum/#!topic/django-developers/_W7qiGl-ThY, I was looking for why urls and forms were not automatically generated by startapp. I could see in this post https://github.com/django-extensions/django-extensions/pull/448 that the command existed at some point. Why this one has been removed ?? is it a bug ?? Personally I find it quite interesting I find it redundant to have to create each time a urls and forms file.  Thanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1465", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1465/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1465/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1465/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1465", "id": 551723646, "node_id": "MDU6SXNzdWU1NTE3MjM2NDY=", "number": 1465, "title": "Encoding passed to json.loads was deprecated to be removed in Python 3.9", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 30635599, "node_id": "MDU6TGFiZWwzMDYzNTU5OQ==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/Easy%20Pickings", "name": "Easy Pickings", "color": "02e10c", "default": false, "description": null}, {"id": 98637570, "node_id": "MDU6TGFiZWw5ODYzNzU3MA==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/backwards%20incompatible", "name": "backwards incompatible", "color": "eb6420", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-18T05:17:59Z", "updated_at": "2020-04-03T20:19:17Z", "closed_at": "2020-04-03T20:19:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "`encoding` parameter passed to `json.loads` was ignored and deprecated since Python 3.1 . This will be removed in Python 3.9 .\r\n\r\nhttps://github.com/django-extensions/django-extensions/blob/5208677aeb0ad9225eca1ac5d6cc3b79869f3aca/django_extensions/mongodb/fields/json.py#L41\r\n\r\nRef : https://bugs.python.org/issue33461", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1461", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1461/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1461/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1461/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1461", "id": 548840941, "node_id": "MDU6SXNzdWU1NDg4NDA5NDE=", "number": 1461, "title": "Subclassing StaticFilesConfig results in static files not being served", "user": {"login": "robberwick", "id": 1022090, "node_id": "MDQ6VXNlcjEwMjIwOTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1022090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robberwick", "html_url": "https://github.com/robberwick", "followers_url": "https://api.github.com/users/robberwick/followers", "following_url": "https://api.github.com/users/robberwick/following{/other_user}", "gists_url": "https://api.github.com/users/robberwick/gists{/gist_id}", "starred_url": "https://api.github.com/users/robberwick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robberwick/subscriptions", "organizations_url": "https://api.github.com/users/robberwick/orgs", "repos_url": "https://api.github.com/users/robberwick/repos", "events_url": "https://api.github.com/users/robberwick/events{/privacy}", "received_events_url": "https://api.github.com/users/robberwick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-13T10:36:52Z", "updated_at": "2020-01-20T15:34:41Z", "closed_at": "2020-01-20T15:34:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since Django 1.10, it is possible to subclass StaticFilesConfig in order to update the `ignore_patterns` attribute (https://docs.djangoproject.com/en/3.0/ref/contrib/staticfiles/#customizing-the-ignored-pattern-list). Doing so as per the documentation requires the replacement of `django.contrib.staticfiles` with the custom `AppConfig` class. \r\n\r\nHowever, with this configuration, runserver_plus no longer serves static files, as the test in `runserver_plus.py` for the presence of `django.contrib.staticfiles` in `settings.INSTALLED_APPS` fails.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1460", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1460/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1460/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1460/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1460", "id": 546692770, "node_id": "MDU6SXNzdWU1NDY2OTI3NzA=", "number": 1460, "title": "No sql output from shell_plus --print-sql (Django 3)", "user": {"login": "dobsonjon", "id": 27799374, "node_id": "MDQ6VXNlcjI3Nzk5Mzc0", "avatar_url": "https://avatars0.githubusercontent.com/u/27799374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dobsonjon", "html_url": "https://github.com/dobsonjon", "followers_url": "https://api.github.com/users/dobsonjon/followers", "following_url": "https://api.github.com/users/dobsonjon/following{/other_user}", "gists_url": "https://api.github.com/users/dobsonjon/gists{/gist_id}", "starred_url": "https://api.github.com/users/dobsonjon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dobsonjon/subscriptions", "organizations_url": "https://api.github.com/users/dobsonjon/orgs", "repos_url": "https://api.github.com/users/dobsonjon/repos", "events_url": "https://api.github.com/users/dobsonjon/events{/privacy}", "received_events_url": "https://api.github.com/users/dobsonjon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2020-01-08T07:32:17Z", "updated_at": "2020-06-16T20:31:59Z", "closed_at": "2020-01-11T17:12:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django==3.0.1\r\ndjango-extensions==2.2.5\r\n\r\nSettings has DEBUG=True", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1459", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1459/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1459/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1459/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1459", "id": 545737589, "node_id": "MDU6SXNzdWU1NDU3Mzc1ODk=", "number": 1459, "title": "No module named 'django-extensions' on Django 3.x", "user": {"login": "martinvol", "id": 698027, "node_id": "MDQ6VXNlcjY5ODAyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/698027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinvol", "html_url": "https://github.com/martinvol", "followers_url": "https://api.github.com/users/martinvol/followers", "following_url": "https://api.github.com/users/martinvol/following{/other_user}", "gists_url": "https://api.github.com/users/martinvol/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinvol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinvol/subscriptions", "organizations_url": "https://api.github.com/users/martinvol/orgs", "repos_url": "https://api.github.com/users/martinvol/repos", "events_url": "https://api.github.com/users/martinvol/events{/privacy}", "received_events_url": "https://api.github.com/users/martinvol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-06T13:52:00Z", "updated_at": "2020-01-10T11:01:33Z", "closed_at": "2020-01-08T17:59:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pipenv file:\r\n```\r\ndjango = \"==3.0.2\"\r\ndjango-extensions = \"==2.2.5\"\r\n```\r\n\r\nsettings.py\r\n```\r\nimport os\r\nimport django_extensions\r\n(...)\r\nINSTALLED_APPS = [\r\n    '...',\r\n    'django-extensions'\r\n]\r\n```\r\n\r\nWhen running:\r\n```\r\n$ pipenv run python manage_django.py shell\r\nTraceback (most recent call last):\r\n  File \"manage_django.py\", line 21, in <module>\r\n    main()\r\n  File \"manage_django.py\", line 17, in main\r\n    execute_from_command_line(sys.argv)\r\n  File \"/Users/martinvol/.local/share/virtualenvs/project-ue1Dk_mJ/lib/python3.6/site-packages/django/core/management/__init__.py\", line 401, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/martinvol/.local/share/virtualenvs/project-ue1Dk_mJ/lib/python3.6/site-packages/django/core/management/__init__.py\", line 377, in execute\r\n    django.setup()\r\n  File \"/Users/martinvol/.local/share/virtualenvs/project-ue1Dk_mJ/lib/python3.6/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/Users/martinvol/.local/share/virtualenvs/project-ue1Dk_mJ/lib/python3.6/site-packages/django/apps/registry.py\", line 91, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"/Users/martinvol/.local/share/virtualenvs/project-ue1Dk_mJ/lib/python3.6/site-packages/django/apps/config.py\", line 90, in create\r\n    module = import_module(entry)\r\n  File \"/Users/martinvol/.local/share/virtualenvs/project-ue1Dk_mJ/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 953, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'django-extensions'\r\n```\r\n\r\nPlease note that the import inside `settings.py` doesn't fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1457", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1457/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1457/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1457/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1457", "id": 544599321, "node_id": "MDU6SXNzdWU1NDQ1OTkzMjE=", "number": 1457, "title": "NoWhiteSpaceValidator not working", "user": {"login": "AthulMuralidhar", "id": 35686547, "node_id": "MDQ6VXNlcjM1Njg2NTQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/35686547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AthulMuralidhar", "html_url": "https://github.com/AthulMuralidhar", "followers_url": "https://api.github.com/users/AthulMuralidhar/followers", "following_url": "https://api.github.com/users/AthulMuralidhar/following{/other_user}", "gists_url": "https://api.github.com/users/AthulMuralidhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/AthulMuralidhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AthulMuralidhar/subscriptions", "organizations_url": "https://api.github.com/users/AthulMuralidhar/orgs", "repos_url": "https://api.github.com/users/AthulMuralidhar/repos", "events_url": "https://api.github.com/users/AthulMuralidhar/events{/privacy}", "received_events_url": "https://api.github.com/users/AthulMuralidhar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-02T14:25:27Z", "updated_at": "2020-01-08T09:55:02Z", "closed_at": "2020-01-06T10:41:53Z", "author_association": "NONE", "active_lock_reason": null, "body": " - The no white space validator supplied by django-extensions is not called during form validation\r\n- Running Django-extensions 1.7.3 with python 2.7 on django 1.8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1456", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1456/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1456/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1456/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1456", "id": 541414752, "node_id": "MDU6SXNzdWU1NDE0MTQ3NTI=", "number": 1456, "title": "Error in graph_models.py using django 1.11", "user": {"login": "arpit551", "id": 36269420, "node_id": "MDQ6VXNlcjM2MjY5NDIw", "avatar_url": "https://avatars3.githubusercontent.com/u/36269420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arpit551", "html_url": "https://github.com/arpit551", "followers_url": "https://api.github.com/users/arpit551/followers", "following_url": "https://api.github.com/users/arpit551/following{/other_user}", "gists_url": "https://api.github.com/users/arpit551/gists{/gist_id}", "starred_url": "https://api.github.com/users/arpit551/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arpit551/subscriptions", "organizations_url": "https://api.github.com/users/arpit551/orgs", "repos_url": "https://api.github.com/users/arpit551/repos", "events_url": "https://api.github.com/users/arpit551/events{/privacy}", "received_events_url": "https://api.github.com/users/arpit551/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-22T06:35:31Z", "updated_at": "2020-01-29T13:26:19Z", "closed_at": "2020-01-29T13:26:19Z", "author_association": "NONE", "active_lock_reason": null, "body": " raise TemplateDoesNotExist(template_name, chain=chain)\r\ndjango.template.exceptions.TemplateDoesNotExist: django_extensions/graph_models/digraph.dot", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1454", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1454/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1454/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1454/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1454", "id": 537237832, "node_id": "MDU6SXNzdWU1MzcyMzc4MzI=", "number": 1454, "title": "graph_models doesn't generate the characters", "user": {"login": "XinyuHou", "id": 9194706, "node_id": "MDQ6VXNlcjkxOTQ3MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9194706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XinyuHou", "html_url": "https://github.com/XinyuHou", "followers_url": "https://api.github.com/users/XinyuHou/followers", "following_url": "https://api.github.com/users/XinyuHou/following{/other_user}", "gists_url": "https://api.github.com/users/XinyuHou/gists{/gist_id}", "starred_url": "https://api.github.com/users/XinyuHou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XinyuHou/subscriptions", "organizations_url": "https://api.github.com/users/XinyuHou/orgs", "repos_url": "https://api.github.com/users/XinyuHou/repos", "events_url": "https://api.github.com/users/XinyuHou/events{/privacy}", "received_events_url": "https://api.github.com/users/XinyuHou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-12T22:03:06Z", "updated_at": "2019-12-26T07:17:37Z", "closed_at": "2019-12-13T20:09:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have django 1.11.23, django-extensions 1.7.7, and running it in a Docker container, then ssh into it and pip install pydotplus graphviz, then I ran ./manage.py graph_models -a -g -o my_project_visualized.png. It generated a file with model and relationship. But all the characters render as squares, as if they are unicode or something. All my models are English, so should be within ASCII range.\r\n\r\n<img width=\"1065\" alt=\"Screen Shot 2019-12-10 at 2 20 00 PM\" src=\"https://user-images.githubusercontent.com/9194706/70752756-3f284d00-1d01-11ea-84b8-a6ea2bf4010f.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1447", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1447/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1447/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1447/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1447", "id": 522820408, "node_id": "MDU6SXNzdWU1MjI4MjA0MDg=", "number": 1447, "title": "Document setting RUNSERVER_PLUS_PRINT_SQL_TRUNCATE", "user": {"login": "denizdogan", "id": 50928, "node_id": "MDQ6VXNlcjUwOTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/50928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denizdogan", "html_url": "https://github.com/denizdogan", "followers_url": "https://api.github.com/users/denizdogan/followers", "following_url": "https://api.github.com/users/denizdogan/following{/other_user}", "gists_url": "https://api.github.com/users/denizdogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/denizdogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denizdogan/subscriptions", "organizations_url": "https://api.github.com/users/denizdogan/orgs", "repos_url": "https://api.github.com/users/denizdogan/repos", "events_url": "https://api.github.com/users/denizdogan/events{/privacy}", "received_events_url": "https://api.github.com/users/denizdogan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 30635599, "node_id": "MDU6TGFiZWwzMDYzNTU5OQ==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/Easy%20Pickings", "name": "Easy Pickings", "color": "02e10c", "default": false, "description": null}, {"id": 1003485, "node_id": "MDU6TGFiZWwxMDAzNDg1", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20help", "name": "need help", "color": "0b02e1", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-14T12:16:03Z", "updated_at": "2019-12-05T13:49:11Z", "closed_at": "2019-12-05T13:49:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was looking for this setting but had to dive into the library code to find it. Would be good if it was documented similar to `SHELL_PLUS_PRINT_SQL_TRUNCATE`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1445", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1445/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1445/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1445/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1445", "id": 519492416, "node_id": "MDU6SXNzdWU1MTk0OTI0MTY=", "number": 1445, "title": "manage.py command reset_db doesn't work with mysql.connector.django", "user": {"login": "ethanhowell", "id": 21162595, "node_id": "MDQ6VXNlcjIxMTYyNTk1", "avatar_url": "https://avatars1.githubusercontent.com/u/21162595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ethanhowell", "html_url": "https://github.com/ethanhowell", "followers_url": "https://api.github.com/users/ethanhowell/followers", "following_url": "https://api.github.com/users/ethanhowell/following{/other_user}", "gists_url": "https://api.github.com/users/ethanhowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ethanhowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ethanhowell/subscriptions", "organizations_url": "https://api.github.com/users/ethanhowell/orgs", "repos_url": "https://api.github.com/users/ethanhowell/repos", "events_url": "https://api.github.com/users/ethanhowell/events{/privacy}", "received_events_url": "https://api.github.com/users/ethanhowell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-07T20:24:22Z", "updated_at": "2019-12-05T12:25:39Z", "closed_at": "2019-12-05T12:25:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It says that there is an unknown engine when trying to reset the database. I recommend adding \r\n\r\n```\r\n'mysql.connector.django',\r\n```\r\n to line 15 of the settings.py of django_extensions ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1443", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1443/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1443/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1443/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1443", "id": 519393588, "node_id": "MDU6SXNzdWU1MTkzOTM1ODg=", "number": 1443, "title": "Add support for app_label in show_urls", "user": {"login": "mani098", "id": 7437058, "node_id": "MDQ6VXNlcjc0MzcwNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7437058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mani098", "html_url": "https://github.com/mani098", "followers_url": "https://api.github.com/users/mani098/followers", "following_url": "https://api.github.com/users/mani098/following{/other_user}", "gists_url": "https://api.github.com/users/mani098/gists{/gist_id}", "starred_url": "https://api.github.com/users/mani098/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mani098/subscriptions", "organizations_url": "https://api.github.com/users/mani098/orgs", "repos_url": "https://api.github.com/users/mani098/repos", "events_url": "https://api.github.com/users/mani098/events{/privacy}", "received_events_url": "https://api.github.com/users/mani098/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-07T17:00:18Z", "updated_at": "2019-12-05T12:28:53Z", "closed_at": "2019-12-05T12:28:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, `show_urls` list down all the available URLs across the project. We also need functionality to list down URLs under a specific Django app. If we have an option something like `python manage.py show_urls <app_label>` would be awesome.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1438", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1438/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1438/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1438/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1438", "id": 513770876, "node_id": "MDU6SXNzdWU1MTM3NzA4NzY=", "number": 1438, "title": "Add option to shell_plus to ignore SystemChecks", "user": {"login": "kennell", "id": 2326287, "node_id": "MDQ6VXNlcjIzMjYyODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2326287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennell", "html_url": "https://github.com/kennell", "followers_url": "https://api.github.com/users/kennell/followers", "following_url": "https://api.github.com/users/kennell/following{/other_user}", "gists_url": "https://api.github.com/users/kennell/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennell/subscriptions", "organizations_url": "https://api.github.com/users/kennell/orgs", "repos_url": "https://api.github.com/users/kennell/repos", "events_url": "https://api.github.com/users/kennell/events{/privacy}", "received_events_url": "https://api.github.com/users/kennell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 578, "node_id": "MDU6TGFiZWw1Nzg=", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/feature%20request", "name": "feature request", "color": "4a9481", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-29T08:47:02Z", "updated_at": "2019-10-29T11:42:04Z", "closed_at": "2019-10-29T11:42:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suggestion: add a option to `manage.py shell_plus` that will either ignore or skip any failing `SystemCheck`s. Perhaps both.\r\n\r\nUsage example:\r\n\r\n```\r\npython manage.py shell_plus --ignore-checks\r\n# Will start the shell even if SystemChecks fail\r\n```\r\n\r\n```\r\npython manage.py shell_plus --skip-checks\r\n# Will start the shell without running SystemChecks at all\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1431", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1431/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1431/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1431/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1431", "id": 507600793, "node_id": "MDU6SXNzdWU1MDc2MDA3OTM=", "number": 1431, "title": "Command export_emails not working with custom AUTH_USER_MODEL", "user": {"login": "CleitonDeLima", "id": 4956372, "node_id": "MDQ6VXNlcjQ5NTYzNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4956372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleitonDeLima", "html_url": "https://github.com/CleitonDeLima", "followers_url": "https://api.github.com/users/CleitonDeLima/followers", "following_url": "https://api.github.com/users/CleitonDeLima/following{/other_user}", "gists_url": "https://api.github.com/users/CleitonDeLima/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleitonDeLima/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleitonDeLima/subscriptions", "organizations_url": "https://api.github.com/users/CleitonDeLima/orgs", "repos_url": "https://api.github.com/users/CleitonDeLima/repos", "events_url": "https://api.github.com/users/CleitonDeLima/events{/privacy}", "received_events_url": "https://api.github.com/users/CleitonDeLima/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-16T04:08:35Z", "updated_at": "2019-10-20T14:58:05Z", "closed_at": "2019-10-20T14:58:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the command works with data from standard django model user, today the fixed fields are used `('last_name', 'first_name', 'username', 'email')`.\r\n\r\nIt would be interesting in cases where the model user is customized with other fields, for example: `('name', 'email')`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1427", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1427/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1427/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1427/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1427", "id": 501520485, "node_id": "MDU6SXNzdWU1MDE1MjA0ODU=", "number": 1427, "title": "from django.templatetags import static is broken for (at least) django 2.2", "user": {"login": "ErwinJunge", "id": 339691, "node_id": "MDQ6VXNlcjMzOTY5MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/339691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ErwinJunge", "html_url": "https://github.com/ErwinJunge", "followers_url": "https://api.github.com/users/ErwinJunge/followers", "following_url": "https://api.github.com/users/ErwinJunge/following{/other_user}", "gists_url": "https://api.github.com/users/ErwinJunge/gists{/gist_id}", "starred_url": "https://api.github.com/users/ErwinJunge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ErwinJunge/subscriptions", "organizations_url": "https://api.github.com/users/ErwinJunge/orgs", "repos_url": "https://api.github.com/users/ErwinJunge/repos", "events_url": "https://api.github.com/users/ErwinJunge/events{/privacy}", "received_events_url": "https://api.github.com/users/ErwinJunge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-02T14:19:54Z", "updated_at": "2019-10-02T20:05:03Z", "closed_at": "2019-10-02T20:05:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It throws `TypeError: 'module' object is not callable` now, PR with fix incoming.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1425", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1425/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1425/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1425/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1425", "id": 499768021, "node_id": "MDU6SXNzdWU0OTk3NjgwMjE=", "number": 1425, "title": "Add Indexes for TimeStampedModel on created and modified fields.", "user": {"login": "anudeepsamaiya", "id": 3428221, "node_id": "MDQ6VXNlcjM0MjgyMjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3428221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anudeepsamaiya", "html_url": "https://github.com/anudeepsamaiya", "followers_url": "https://api.github.com/users/anudeepsamaiya/followers", "following_url": "https://api.github.com/users/anudeepsamaiya/following{/other_user}", "gists_url": "https://api.github.com/users/anudeepsamaiya/gists{/gist_id}", "starred_url": "https://api.github.com/users/anudeepsamaiya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anudeepsamaiya/subscriptions", "organizations_url": "https://api.github.com/users/anudeepsamaiya/orgs", "repos_url": "https://api.github.com/users/anudeepsamaiya/repos", "events_url": "https://api.github.com/users/anudeepsamaiya/events{/privacy}", "received_events_url": "https://api.github.com/users/anudeepsamaiya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 30635599, "node_id": "MDU6TGFiZWwzMDYzNTU5OQ==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/Easy%20Pickings", "name": "Easy Pickings", "color": "02e10c", "default": false, "description": null}, {"id": 203193, "node_id": "MDU6TGFiZWwyMDMxOTM=", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/improvement", "name": "improvement", "color": "02d7e1", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-28T12:44:32Z", "updated_at": "2020-06-04T11:24:31Z", "closed_at": "2020-06-04T11:24:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "By default indexes should be added inside the Meta of abstract class.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1424", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1424/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1424/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1424/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1424", "id": 498003330, "node_id": "MDU6SXNzdWU0OTgwMDMzMzA=", "number": 1424, "title": "Compability Issue with Django 3.x", "user": {"login": "Lord-Elrond", "id": 47697440, "node_id": "MDQ6VXNlcjQ3Njk3NDQw", "avatar_url": "https://avatars0.githubusercontent.com/u/47697440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lord-Elrond", "html_url": "https://github.com/Lord-Elrond", "followers_url": "https://api.github.com/users/Lord-Elrond/followers", "following_url": "https://api.github.com/users/Lord-Elrond/following{/other_user}", "gists_url": "https://api.github.com/users/Lord-Elrond/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lord-Elrond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lord-Elrond/subscriptions", "organizations_url": "https://api.github.com/users/Lord-Elrond/orgs", "repos_url": "https://api.github.com/users/Lord-Elrond/repos", "events_url": "https://api.github.com/users/Lord-Elrond/events{/privacy}", "received_events_url": "https://api.github.com/users/Lord-Elrond/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 30635599, "node_id": "MDU6TGFiZWwzMDYzNTU5OQ==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/Easy%20Pickings", "name": "Easy Pickings", "color": "02e10c", "default": false, "description": null}, {"id": 77993, "node_id": "MDU6TGFiZWw3Nzk5Mw==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/bug", "name": "bug", "color": "ff0000", "default": true, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-25T01:48:14Z", "updated_at": "2019-10-02T09:26:34Z", "closed_at": "2019-10-02T09:26:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following was removed in Django 3.0:\r\n`from django.contrib.admin.templatetags.admin_static import static`\r\n\r\nThis results in a ModuleNotFoundError in `django_extensions/admin/widgets.py`\r\nEasy fix, just replace this:\r\n`from django.contrib.admin.templatetags.admin_static import static`\r\nwith this:\r\n`from django.templatetags.static import static`\r\n\r\nAFAIK, they are functionally equivalent. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1423", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1423/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1423/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1423/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1423", "id": 495186182, "node_id": "MDU6SXNzdWU0OTUxODYxODI=", "number": 1423, "title": "Django pre-deploy check fails", "user": {"login": "AdamDonna", "id": 13944590, "node_id": "MDQ6VXNlcjEzOTQ0NTkw", "avatar_url": "https://avatars1.githubusercontent.com/u/13944590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamDonna", "html_url": "https://github.com/AdamDonna", "followers_url": "https://api.github.com/users/AdamDonna/followers", "following_url": "https://api.github.com/users/AdamDonna/following{/other_user}", "gists_url": "https://api.github.com/users/AdamDonna/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamDonna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamDonna/subscriptions", "organizations_url": "https://api.github.com/users/AdamDonna/orgs", "repos_url": "https://api.github.com/users/AdamDonna/repos", "events_url": "https://api.github.com/users/AdamDonna/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamDonna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-18T12:12:07Z", "updated_at": "2019-09-18T12:17:38Z", "closed_at": "2019-09-18T12:17:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django >= 2.2, on Python 3.7 has some different static file changes. \r\nThis has resulted in an import change which causes a hard fail to pre-deploy checks.\r\n\r\nTo reproduce\r\n```\r\npipenv install django==2.1\r\npipenv run python manage.py check --settings=backend.settings.prod\r\n\r\n\r\n/python3.7/site-packages/django_extensions/admin/widgets.py\", line 7, in <module>\r\n    from django.contrib.admin.templatetags.admin_static import static\r\nModuleNotFoundError: No module named 'django.contrib.admin.templatetags.admin_static'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1422", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1422/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1422/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1422/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1422", "id": 492669050, "node_id": "MDU6SXNzdWU0OTI2NjkwNTA=", "number": 1422, "title": "Multiple Settings files", "user": {"login": "oduvan", "id": 265844, "node_id": "MDQ6VXNlcjI2NTg0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/265844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oduvan", "html_url": "https://github.com/oduvan", "followers_url": "https://api.github.com/users/oduvan/followers", "following_url": "https://api.github.com/users/oduvan/following{/other_user}", "gists_url": "https://api.github.com/users/oduvan/gists{/gist_id}", "starred_url": "https://api.github.com/users/oduvan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oduvan/subscriptions", "organizations_url": "https://api.github.com/users/oduvan/orgs", "repos_url": "https://api.github.com/users/oduvan/repos", "events_url": "https://api.github.com/users/oduvan/events{/privacy}", "received_events_url": "https://api.github.com/users/oduvan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 578, "node_id": "MDU6TGFiZWw1Nzg=", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/feature%20request", "name": "feature request", "color": "4a9481", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-12T08:46:11Z", "updated_at": "2020-04-13T15:34:57Z", "closed_at": "2020-04-13T15:34:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm wondering, if my app has more than one settings file, how can I add multiple Django-Shell kernels?\r\n\r\nI didn't find this is docs and at the first glance in source code it is  impossible to do as well.\r\n\r\nAm I miss something?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1415", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1415/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1415/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1415/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1415", "id": 488984946, "node_id": "MDU6SXNzdWU0ODg5ODQ5NDY=", "number": 1415, "title": "Please tell me what can i do to resolve this problem? check_migrations", "user": {"login": "lvshuai789", "id": 35052597, "node_id": "MDQ6VXNlcjM1MDUyNTk3", "avatar_url": "https://avatars3.githubusercontent.com/u/35052597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lvshuai789", "html_url": "https://github.com/lvshuai789", "followers_url": "https://api.github.com/users/lvshuai789/followers", "following_url": "https://api.github.com/users/lvshuai789/following{/other_user}", "gists_url": "https://api.github.com/users/lvshuai789/gists{/gist_id}", "starred_url": "https://api.github.com/users/lvshuai789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lvshuai789/subscriptions", "organizations_url": "https://api.github.com/users/lvshuai789/orgs", "repos_url": "https://api.github.com/users/lvshuai789/repos", "events_url": "https://api.github.com/users/lvshuai789/events{/privacy}", "received_events_url": "https://api.github.com/users/lvshuai789/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-04T07:16:17Z", "updated_at": "2019-09-04T07:22:52Z", "closed_at": "2019-09-04T07:22:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "[root@iZ25qp2d64mZ EHT]# python3 manage.py runserver_plus --cert server.crt 127.0.0.1:7000\r\nTraceback (most recent call last):\r\nFile \"manage.py\", line 10, in \r\nexecute_from_command_line(sys.argv)\r\nFile \"/usr/local/lib/python3.5/site-packages/django/core/management/init.py\", line 338, in execute_from_command_line\r\nutility.execute()\r\nFile \"/usr/local/lib/python3.5/site-packages/django/core/management/init.py\", line 330, in execute\r\nself.fetch_command(subcommand).run_from_argv(self.argv)\r\nFile \"/usr/local/lib/python3.5/site-packages/django/core/management/base.py\", line 390, in run_from_argv\r\nself.execute(*args, **cmd_options)\r\nFile \"/usr/local/lib/python3.5/site-packages/django/core/management/base.py\", line 441, in execute\r\noutput = self.handle(*args, **options)\r\nFile \"/usr/local/lib/python3.5/site-packages/django_extensions/management/utils.py\", line 62, in inner\r\nret = func(self, *args, **kwargs)\r\nFile \"/usr/local/lib/python3.5/site-packages/django_extensions/management/commands/runserver_plus.py\", line 262, in handle\r\nself.inner_run(options)\r\nFile \"/usr/local/lib/python3.5/site-packages/django_extensions/management/commands/runserver_plus.py\", line 305, in inner_run\r\nself.check_migrations()\r\nAttributeError: 'Command' object has no attribute 'check_migrations'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1414", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1414/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1414/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1414/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1414", "id": 488965754, "node_id": "MDU6SXNzdWU0ODg5NjU3NTQ=", "number": 1414, "title": "why can i meet this question? How can i do to solve it?", "user": {"login": "lvshuai789", "id": 35052597, "node_id": "MDQ6VXNlcjM1MDUyNTk3", "avatar_url": "https://avatars3.githubusercontent.com/u/35052597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lvshuai789", "html_url": "https://github.com/lvshuai789", "followers_url": "https://api.github.com/users/lvshuai789/followers", "following_url": "https://api.github.com/users/lvshuai789/following{/other_user}", "gists_url": "https://api.github.com/users/lvshuai789/gists{/gist_id}", "starred_url": "https://api.github.com/users/lvshuai789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lvshuai789/subscriptions", "organizations_url": "https://api.github.com/users/lvshuai789/orgs", "repos_url": "https://api.github.com/users/lvshuai789/repos", "events_url": "https://api.github.com/users/lvshuai789/events{/privacy}", "received_events_url": "https://api.github.com/users/lvshuai789/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-04T06:23:48Z", "updated_at": "2019-09-04T07:00:02Z", "closed_at": "2019-09-04T07:00:02Z", "author_association": "NONE", "active_lock_reason": "too heated", "body": "[root@iZ25qp2d64mZ EHT]# python3 manage.py runserver_plus --cert server.crt 127.0.0.1:7000\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/lib/python3.5/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/local/lib/python3.5/site-packages/django/core/management/__init__.py\", line 330, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/usr/local/lib/python3.5/site-packages/django/core/management/base.py\", line 390, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/usr/local/lib/python3.5/site-packages/django/core/management/base.py\", line 441, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/usr/local/lib/python3.5/site-packages/django_extensions/management/utils.py\", line 62, in inner\r\n    ret = func(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/site-packages/django_extensions/management/commands/runserver_plus.py\", line 262, in handle\r\n    self.inner_run(options)\r\n  File \"/usr/local/lib/python3.5/site-packages/django_extensions/management/commands/runserver_plus.py\", line 305, in inner_run\r\n    self.check_migrations()\r\nAttributeError: 'Command' object has no attribute 'check_migrations'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1413", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1413/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1413/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1413/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1413", "id": 488558807, "node_id": "MDU6SXNzdWU0ODg1NTg4MDc=", "number": 1413, "title": "shell_plus --notebook -> \"Cannot mix str and non-str arguments\"", "user": {"login": "Moulde", "id": 1292921, "node_id": "MDQ6VXNlcjEyOTI5MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1292921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Moulde", "html_url": "https://github.com/Moulde", "followers_url": "https://api.github.com/users/Moulde/followers", "following_url": "https://api.github.com/users/Moulde/following{/other_user}", "gists_url": "https://api.github.com/users/Moulde/gists{/gist_id}", "starred_url": "https://api.github.com/users/Moulde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Moulde/subscriptions", "organizations_url": "https://api.github.com/users/Moulde/orgs", "repos_url": "https://api.github.com/users/Moulde/repos", "events_url": "https://api.github.com/users/Moulde/events{/privacy}", "received_events_url": "https://api.github.com/users/Moulde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-03T11:51:49Z", "updated_at": "2019-09-11T13:46:22Z", "closed_at": "2019-09-11T13:46:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following exception when trying to run the notebook.\r\nBut the parameters passed to the notebook is not visible.\r\n\r\nI got the error, and then added the `--no-browser` argument, as i thought that the below error was because it was trying to build some url to open the browser, i'm running it in a docker container, but adding the argument did not change the exception.\r\n\r\nArguments\r\n```\r\nNOTEBOOK_ARGUMENTS = [\r\n    '--no-browser',\r\n    '--allow-root',\r\n    '--ip', '0.0.0.0',\r\n    '--port', '4500',\r\n]\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 8, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 364, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 356, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/usr/local/lib/python2.7/site-packages/django_extensions/management/commands/shell_plus.py\", line 112, in run_from_argv\r\n    return super(Command, self).run_from_argv(argv)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/core/management/base.py\", line 283, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/core/management/base.py\", line 330, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/usr/local/lib/python2.7/site-packages/django_extensions/management/utils.py\", line 59, in inner\r\n    ret = func(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/django_extensions/management/commands/shell_plus.py\", line 521, in handle\r\n    shell()\r\n  File \"/usr/local/lib/python2.7/site-packages/django_extensions/management/commands/shell_plus.py\", line 244, in run_notebook\r\n    app.start()\r\n  File \"/usr/local/lib/python2.7/site-packages/notebook/notebookapp.py\", line 1794, in start\r\n    '    %s' % urljoin('file:', pathname2url(self.browser_open_file)),\r\n  File \"/usr/local/lib/python2.7/site-packages/future/backports/urllib/parse.py\", line 418, in urljoin\r\n    base, url, _coerce_result = _coerce_args(base, url)\r\n  File \"/usr/local/lib/python2.7/site-packages/future/backports/urllib/parse.py\", line 115, in _coerce_args\r\n    raise TypeError(\"Cannot mix str and non-str arguments\")\r\nTypeError: Cannot mix str and non-str arguments\r\n```\r\n\r\nHave anyone seen this issue before?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1411", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1411/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1411/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1411/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1411", "id": 488301549, "node_id": "MDU6SXNzdWU0ODgzMDE1NDk=", "number": 1411, "title": "sqlcreate with postgis should behave like postgres", "user": {"login": "ekeydar", "id": 2138328, "node_id": "MDQ6VXNlcjIxMzgzMjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2138328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekeydar", "html_url": "https://github.com/ekeydar", "followers_url": "https://api.github.com/users/ekeydar/followers", "following_url": "https://api.github.com/users/ekeydar/following{/other_user}", "gists_url": "https://api.github.com/users/ekeydar/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekeydar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekeydar/subscriptions", "organizations_url": "https://api.github.com/users/ekeydar/orgs", "repos_url": "https://api.github.com/users/ekeydar/repos", "events_url": "https://api.github.com/users/ekeydar/events{/privacy}", "received_events_url": "https://api.github.com/users/ekeydar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-02T19:37:27Z", "updated_at": "2019-09-02T20:54:37Z", "closed_at": "2019-09-02T20:54:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "if you run python manage.py sqlcreate with postgis, you get message that it falls back to sql instead of behave like postgres.\r\n\r\nTo reproduce, have settings like in this example https://docs.djangoproject.com/en/2.2/ref/contrib/gis/tutorial/#configure-settings-py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1409", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1409/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1409/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1409/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1409", "id": 486390048, "node_id": "MDU6SXNzdWU0ODYzOTAwNDg=", "number": 1409, "title": "Cannot combine --exclude and --include with graph_models", "user": {"login": "NyanKiyoshi", "id": 6186720, "node_id": "MDQ6VXNlcjYxODY3MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6186720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NyanKiyoshi", "html_url": "https://github.com/NyanKiyoshi", "followers_url": "https://api.github.com/users/NyanKiyoshi/followers", "following_url": "https://api.github.com/users/NyanKiyoshi/following{/other_user}", "gists_url": "https://api.github.com/users/NyanKiyoshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/NyanKiyoshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NyanKiyoshi/subscriptions", "organizations_url": "https://api.github.com/users/NyanKiyoshi/orgs", "repos_url": "https://api.github.com/users/NyanKiyoshi/repos", "events_url": "https://api.github.com/users/NyanKiyoshi/events{/privacy}", "received_events_url": "https://api.github.com/users/NyanKiyoshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-28T13:39:53Z", "updated_at": "2019-08-30T15:56:33Z", "closed_at": "2019-08-30T15:47:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What I'm trying to achieve\r\nI would like to be able to include some models through given wildcards. But yet be able to include some of them against given wildcards.\r\n\r\n## Example\r\nLet's say I want to only select some given models and all the models containing the word `Attribute` but yet, exclude any containing the word `Translation`. I would do the following:\r\n```\r\n./manage.py graph_models product \\\r\n    -I '*Attribute*,Product,ProductVariant,ProductType' \\\r\n    -X '*Translation*' \\\r\n    --pygraphviz -g -o attributes_class_tree.png\r\n```\r\n\r\n## What I expected to happen\r\n1. Have the models matched against the exclude list\r\n1. If the model didn't match, match against the include list\r\n\r\n## What happened instead\r\nNothing was selected, thus nothing was rendered.\r\n\r\n## Suggested solution\r\n```diff\r\nIndex: django_extensions/management/modelviz.py\r\nIDEA additional info:\r\nSubsystem: com.intellij.openapi.diff.impl.patch.CharsetEP\r\n<+>UTF-8\r\n===================================================================\r\n--- django_extensions/management/modelviz.py\t(revision 52cbf38144109a705f6932dd996540b66f014494)\r\n+++ django_extensions/management/modelviz.py\t(date 1567019406336)\r\n@@ -381,18 +381,18 @@\r\n         Decide whether to use a model, based on the model name and the lists of\r\n         models to exclude and include.\r\n         \"\"\"\r\n+        # Check against include list.\r\n+        if self.include_models:\r\n+            for model_pattern in self.include_models:\r\n+                model_pattern = '^%s$' % model_pattern.replace('*', '.*')\r\n+                if re.search(model_pattern, model_name):\r\n+                    return True\r\n         # Check against exclude list.\r\n         if self.exclude_models:\r\n             for model_pattern in self.exclude_models:\r\n                 model_pattern = '^%s$' % model_pattern.replace('*', '.*')\r\n                 if re.search(model_pattern, model_name):\r\n                     return False\r\n-        # Check against exclude list.\r\n-        elif self.include_models:\r\n-            for model_pattern in self.include_models:\r\n-                model_pattern = '^%s$' % model_pattern.replace('*', '.*')\r\n-                if re.search(model_pattern, model_name):\r\n-                    return True\r\n         # Return `True` if `include_models` is falsey, otherwise return `False`.\r\n         return not self.include_models\r\n```\r\n\r\n<p align='center'>(snippet from <a href='https://github.com/django-extensions/django-extensions/blob/d6d07584004f2a1fa0734edfc144fcf37f33ac4b/django_extensions/management/modelviz.py#L379-L397'>management/modelviz.py</a>)</p>\r\n\r\n---\r\n\r\nI will open a pull request later on today, with the [adequate tests](https://github.com/django-extensions/django-extensions/blob/7ac4792c72338c95d4e2865a786504b28c157383/tests/test_management_command.py#L127-L222). Let me know about what you think.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1408", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1408/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1408/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1408/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1408", "id": 486146042, "node_id": "MDU6SXNzdWU0ODYxNDYwNDI=", "number": 1408, "title": "shell_plus --print-sql output length problem", "user": {"login": "morenice", "id": 1031962, "node_id": "MDQ6VXNlcjEwMzE5NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1031962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morenice", "html_url": "https://github.com/morenice", "followers_url": "https://api.github.com/users/morenice/followers", "following_url": "https://api.github.com/users/morenice/following{/other_user}", "gists_url": "https://api.github.com/users/morenice/gists{/gist_id}", "starred_url": "https://api.github.com/users/morenice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morenice/subscriptions", "organizations_url": "https://api.github.com/users/morenice/orgs", "repos_url": "https://api.github.com/users/morenice/repos", "events_url": "https://api.github.com/users/morenice/events{/privacy}", "received_events_url": "https://api.github.com/users/morenice/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-28T03:53:50Z", "updated_at": "2019-09-03T09:13:10Z", "closed_at": "2019-09-03T06:47:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found sql length problem. it doesn't confirm full sql text.\r\n\r\n**example: select query and 3 table join**\r\nSELECT `rs`.`aid`,\r\n       `rs`.`bid`,\r\n       `rs`.`cid`,\r\n       `rs`.`did`,\r\n       `rs`.`fid`,\r\n       `rs`.`gid`,\r\n       `rs`.`date`,\r\n       `req`.`id`,\r\n       `req`.`cid`,\r\n       `req`.`cid2`,\r\n       `req`.`fid`,\r\n       `req`.`gid`,\r\n       `req`.`date`,\r\n       `req`.`closedate`,\r\n       `req`.`opendate`,\r\n       `req`.`opendate2`,\r\n       `req`.`opendate3`,\r\n       `req`.`opendate4`,\r\n       `su`.`id`,\r\n       `su`.`bid`,\r\n       `su`.`cid`,\r\n       `su`.`did`,\r\n       `su`.`eid`,\r\n       `tt`.`id`,\r\n       `tt`.`rid`,\r\n       `tt`.`pid`,\r\n       `tt`.`tag1`,\r\n       `tt`.`tag2`,\r\n       `p`.`id`,\r\n       `p`.`mid`,\r\n       `p`.`jid`,\r\n       `p`.`addr3`,\r\n       `p`.`addr2`,\r\n       `p`.`addr1`,\r\n       `p`.`tag1`,\r\n       `p`.`tag2`,\r\n       `p`.`tag3`,\r\n       `p`.`tag4`, `p\r\n\r\n[Execution time: 0.431622s] [Database: default]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1407", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1407/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1407/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1407/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1407", "id": 482538898, "node_id": "MDU6SXNzdWU0ODI1Mzg4OTg=", "number": 1407, "title": "'ForeignKey' object has no attribute 'remote_field on Dango 1.8", "user": {"login": "sillyfatcat", "id": 3541579, "node_id": "MDQ6VXNlcjM1NDE1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3541579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sillyfatcat", "html_url": "https://github.com/sillyfatcat", "followers_url": "https://api.github.com/users/sillyfatcat/followers", "following_url": "https://api.github.com/users/sillyfatcat/following{/other_user}", "gists_url": "https://api.github.com/users/sillyfatcat/gists{/gist_id}", "starred_url": "https://api.github.com/users/sillyfatcat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sillyfatcat/subscriptions", "organizations_url": "https://api.github.com/users/sillyfatcat/orgs", "repos_url": "https://api.github.com/users/sillyfatcat/repos", "events_url": "https://api.github.com/users/sillyfatcat/events{/privacy}", "received_events_url": "https://api.github.com/users/sillyfatcat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-19T21:33:08Z", "updated_at": "2019-08-20T17:34:48Z", "closed_at": "2019-08-20T17:34:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "For business reasons we're stuck with using django 1.8 and django-extensions 2.2.1 but we're running into this:\r\n\r\ncommand: `./manage.py graph_models -a -g -o my_project_visualized.png`\r\n\r\n\r\n```    t += \" ({0})\".format(field.remote_field.field_name)\r\nAttributeError: 'ForeignKey' object has no attribute 'remote_field'\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1403", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1403/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1403/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1403/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1403", "id": 478479861, "node_id": "MDU6SXNzdWU0Nzg0Nzk4NjE=", "number": 1403, "title": "MySQL sqldiff duplicates AUTO_INCREMENT and UNSIGNED declarations creating false positives", "user": {"login": "xurble", "id": 246116, "node_id": "MDQ6VXNlcjI0NjExNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/246116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xurble", "html_url": "https://github.com/xurble", "followers_url": "https://api.github.com/users/xurble/followers", "following_url": "https://api.github.com/users/xurble/following{/other_user}", "gists_url": "https://api.github.com/users/xurble/gists{/gist_id}", "starred_url": "https://api.github.com/users/xurble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xurble/subscriptions", "organizations_url": "https://api.github.com/users/xurble/orgs", "repos_url": "https://api.github.com/users/xurble/repos", "events_url": "https://api.github.com/users/xurble/events{/privacy}", "received_events_url": "https://api.github.com/users/xurble/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-08T13:42:35Z", "updated_at": "2019-08-09T11:06:59Z", "closed_at": "2019-08-09T11:06:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "e.g.\r\n\r\n`App auth Model Permission field 'id' parameters differ: db='integer AUTO_INCREMENT AUTO_INCREMENT', model='integer AUTO_INCREMENT'`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1401", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1401/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1401/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1401/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1401", "id": 476742890, "node_id": "MDU6SXNzdWU0NzY3NDI4OTA=", "number": 1401, "title": "GEOSException from runscript", "user": {"login": "asoyeur", "id": 53749634, "node_id": "MDQ6VXNlcjUzNzQ5NjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/53749634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asoyeur", "html_url": "https://github.com/asoyeur", "followers_url": "https://api.github.com/users/asoyeur/followers", "following_url": "https://api.github.com/users/asoyeur/following{/other_user}", "gists_url": "https://api.github.com/users/asoyeur/gists{/gist_id}", "starred_url": "https://api.github.com/users/asoyeur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asoyeur/subscriptions", "organizations_url": "https://api.github.com/users/asoyeur/orgs", "repos_url": "https://api.github.com/users/asoyeur/repos", "events_url": "https://api.github.com/users/asoyeur/events{/privacy}", "received_events_url": "https://api.github.com/users/asoyeur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-05T09:10:00Z", "updated_at": "2019-08-05T13:43:31Z", "closed_at": "2019-08-05T13:28:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have to run a old django project on a new computer. I use virtualenv with\r\ndjango==1.5 and django_extensions==1.5.5\r\nI need django_extensions to run a script (it worked on ubuntu 14.04) but on a new ubuntu19.04,\r\n$python manage runscript -v 2 main\r\ngives a geos exception :\r\nGEOSException: Could not parse version info string \"3.7.1-CAPI-1.11.1 27a5e771\"\r\nI do not use geolocalisation in my project. How to disable geos from django_extensions ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1396", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1396/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1396/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1396/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1396", "id": 470197767, "node_id": "MDU6SXNzdWU0NzAxOTc3Njc=", "number": 1396, "title": "PyPi package (2.1.9) containts text_tags.py in templatetags ", "user": {"login": "sha-red", "id": 14218485, "node_id": "MDQ6VXNlcjE0MjE4NDg1", "avatar_url": "https://avatars0.githubusercontent.com/u/14218485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sha-red", "html_url": "https://github.com/sha-red", "followers_url": "https://api.github.com/users/sha-red/followers", "following_url": "https://api.github.com/users/sha-red/following{/other_user}", "gists_url": "https://api.github.com/users/sha-red/gists{/gist_id}", "starred_url": "https://api.github.com/users/sha-red/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sha-red/subscriptions", "organizations_url": "https://api.github.com/users/sha-red/orgs", "repos_url": "https://api.github.com/users/sha-red/repos", "events_url": "https://api.github.com/users/sha-red/events{/privacy}", "received_events_url": "https://api.github.com/users/sha-red/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-19T08:15:44Z", "updated_at": "2019-07-19T11:27:36Z", "closed_at": "2019-07-19T11:27:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason the current package for django-extensions in PyPi is double size and contains a text_tags template tag library which isn't part of this repository. Very confusing, I've got a name clash and could find the problem for some time.\r\n\r\nIf the difference between this repository and the package on PyPi is intentional please mention this appropriatly in the README.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1394", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1394/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1394/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1394/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1394", "id": 469099183, "node_id": "MDU6SXNzdWU0NjkwOTkxODM=", "number": 1394, "title": "MySQL 8 returns upper case column names results in KeyError in dictionary", "user": {"login": "potulabe", "id": 46634723, "node_id": "MDQ6VXNlcjQ2NjM0NzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/46634723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/potulabe", "html_url": "https://github.com/potulabe", "followers_url": "https://api.github.com/users/potulabe/followers", "following_url": "https://api.github.com/users/potulabe/following{/other_user}", "gists_url": "https://api.github.com/users/potulabe/gists{/gist_id}", "starred_url": "https://api.github.com/users/potulabe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/potulabe/subscriptions", "organizations_url": "https://api.github.com/users/potulabe/orgs", "repos_url": "https://api.github.com/users/potulabe/repos", "events_url": "https://api.github.com/users/potulabe/events{/privacy}", "received_events_url": "https://api.github.com/users/potulabe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-17T09:57:16Z", "updated_at": "2019-07-25T20:51:30Z", "closed_at": "2019-07-25T20:51:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "In function [sql_to_dict](https://github.com/django-extensions/django-extensions/blob/master/django_extensions/management/commands/sqldiff.py#L257) SELECT result which was returned from sql-server is transformed to dictionary. Then some particular keys are supposed to be in this dict, dependent on SELECT, for example, [\"column_name\"](https://github.com/django-extensions/django-extensions/blob/master/django_extensions/management/commands/sqldiff.py#L768) . But MySQL 8 ( Ver 8.0.15-6 for debian-linux-gnu on x86_64 (Percona Server (GPL), Release '6', Revision '63abd08')) returns column names in upper case, so instead \"column_name\" there will be \"COLUMN_NAME\".\r\n\r\nPossible solution is to add .lower() to name[0] in sql_to_dict()", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1393", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1393/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1393/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1393/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1393", "id": 468720060, "node_id": "MDU6SXNzdWU0Njg3MjAwNjA=", "number": 1393, "title": "Install only single command or subset", "user": {"login": "step21", "id": 46968, "node_id": "MDQ6VXNlcjQ2OTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/46968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/step21", "html_url": "https://github.com/step21", "followers_url": "https://api.github.com/users/step21/followers", "following_url": "https://api.github.com/users/step21/following{/other_user}", "gists_url": "https://api.github.com/users/step21/gists{/gist_id}", "starred_url": "https://api.github.com/users/step21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/step21/subscriptions", "organizations_url": "https://api.github.com/users/step21/orgs", "repos_url": "https://api.github.com/users/step21/repos", "events_url": "https://api.github.com/users/step21/events{/privacy}", "received_events_url": "https://api.github.com/users/step21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-16T15:24:46Z", "updated_at": "2019-07-16T16:50:14Z", "closed_at": "2019-07-16T16:50:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it somehow be possible to use/install a command or a subset of commands without forking/adjusting the code myself? Somehow it seems like a bad idea to load this many additional management commands without checking them all.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1392", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1392/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1392/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1392/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1392", "id": 464788178, "node_id": "MDU6SXNzdWU0NjQ3ODgxNzg=", "number": 1392, "title": "UserPassesTestMixin for currently logged in user", "user": {"login": "tdsprogramming", "id": 25421964, "node_id": "MDQ6VXNlcjI1NDIxOTY0", "avatar_url": "https://avatars1.githubusercontent.com/u/25421964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdsprogramming", "html_url": "https://github.com/tdsprogramming", "followers_url": "https://api.github.com/users/tdsprogramming/followers", "following_url": "https://api.github.com/users/tdsprogramming/following{/other_user}", "gists_url": "https://api.github.com/users/tdsprogramming/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdsprogramming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdsprogramming/subscriptions", "organizations_url": "https://api.github.com/users/tdsprogramming/orgs", "repos_url": "https://api.github.com/users/tdsprogramming/repos", "events_url": "https://api.github.com/users/tdsprogramming/events{/privacy}", "received_events_url": "https://api.github.com/users/tdsprogramming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-07-05T22:29:46Z", "updated_at": "2019-10-24T14:32:10Z", "closed_at": "2019-10-24T14:32:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a mixin I often need to use that is built off `django.contrib.auth.mixins.UserPassesTestMixin` that limits permission of the currently logged in user to only be able to change models that they own. It looks something like this:\r\n```python\r\nclass UserPermissionMixin(UserPassesTestMixin):\r\n    def test_func(self):\r\n        current_user = self.request.user\r\n        if current_user == self.model.user:\r\n            return True\r\n        return False\r\n```\r\nWould this be something that I could generalize and submit a pull request for django-extensions?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1391", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1391/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1391/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1391/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1391", "id": 462531296, "node_id": "MDU6SXNzdWU0NjI1MzEyOTY=", "number": 1391, "title": "data remains after syncdata applied", "user": {"login": "dannyshaw", "id": 603175, "node_id": "MDQ6VXNlcjYwMzE3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/603175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyshaw", "html_url": "https://github.com/dannyshaw", "followers_url": "https://api.github.com/users/dannyshaw/followers", "following_url": "https://api.github.com/users/dannyshaw/following{/other_user}", "gists_url": "https://api.github.com/users/dannyshaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyshaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyshaw/subscriptions", "organizations_url": "https://api.github.com/users/dannyshaw/orgs", "repos_url": "https://api.github.com/users/dannyshaw/repos", "events_url": "https://api.github.com/users/dannyshaw/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyshaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-01T06:20:56Z", "updated_at": "2019-07-03T03:10:28Z", "closed_at": "2019-07-03T03:10:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "`syncdata` does not actually make the database look like the test fixture.. This is because `syncdata` will only remove data from models that are included _in_ the fixture.\r\n\r\nI was able to make a small tweak to the command to achieve what I needed, ensuring _all_ other models have their contents removed along with the models included in the fixture.\r\n\r\nhttps://github.com/dannyshaw/django-extensions/blob/feature/syncdata-allow-for-natural-keys/django_extensions/management/commands/syncdata.py#L65-L71\r\n\r\nAgain (with #1390) I'm happy to create a PR if this approach seems sane.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1390", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1390/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1390/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1390/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1390", "id": 462530486, "node_id": "MDU6SXNzdWU0NjI1MzA0ODY=", "number": 1390, "title": "syncdata doesn't support --natural-foreign or --natural-primary datadumps", "user": {"login": "dannyshaw", "id": 603175, "node_id": "MDQ6VXNlcjYwMzE3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/603175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannyshaw", "html_url": "https://github.com/dannyshaw", "followers_url": "https://api.github.com/users/dannyshaw/followers", "following_url": "https://api.github.com/users/dannyshaw/following{/other_user}", "gists_url": "https://api.github.com/users/dannyshaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannyshaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannyshaw/subscriptions", "organizations_url": "https://api.github.com/users/dannyshaw/orgs", "repos_url": "https://api.github.com/users/dannyshaw/repos", "events_url": "https://api.github.com/users/dannyshaw/events{/privacy}", "received_events_url": "https://api.github.com/users/dannyshaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-01T06:18:17Z", "updated_at": "2019-07-03T03:09:11Z", "closed_at": "2019-07-03T03:09:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're using `datadump` json files for e2e test fixtures, and they are generated with the `--natural-foreign --natural-primary` options. The `syncdata` command fails silently when syncing on these fixtures as there are no primary keys to hash and the when adding the object to the `objects_to_keep` set throw \"unhashable\" errors.\r\n\r\nI've found this is solvable by simple ensuring the object is saved before adding it to the set.\r\nhttps://github.com/dannyshaw/django-extensions/blob/feature/syncdata-allow-for-natural-keys/django_extensions/management/commands/syncdata.py#L197-L202\r\n\r\nIf this approach seems sane I'm happy to submit a PR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1383", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1383/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1383/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1383/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1383", "id": 453687238, "node_id": "MDU6SXNzdWU0NTM2ODcyMzg=", "number": 1383, "title": "AttributeError: 'Command' object has no attribute 'LANGUAGES'", "user": {"login": "matiaslina", "id": 1857516, "node_id": "MDQ6VXNlcjE4NTc1MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1857516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matiaslina", "html_url": "https://github.com/matiaslina", "followers_url": "https://api.github.com/users/matiaslina/followers", "following_url": "https://api.github.com/users/matiaslina/following{/other_user}", "gists_url": "https://api.github.com/users/matiaslina/gists{/gist_id}", "starred_url": "https://api.github.com/users/matiaslina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matiaslina/subscriptions", "organizations_url": "https://api.github.com/users/matiaslina/orgs", "repos_url": "https://api.github.com/users/matiaslina/repos", "events_url": "https://api.github.com/users/matiaslina/events{/privacy}", "received_events_url": "https://api.github.com/users/matiaslina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-07T20:46:00Z", "updated_at": "2019-06-10T22:07:48Z", "closed_at": "2019-06-08T16:34:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The command `show_urls` raises an AttributeError running without any flags on version 2.1.7.\r\n\r\n```\r\n% ./manage show_urls\r\nTraceback (most recent call last):\r\n  File \"/home/matias/projects/wop/wop/manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/matias/.virtualenvs/wop/lib/python3.6/site-packages/django/core/management/__init__.py\", line 364, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/matias/.virtualenvs/wop/lib/python3.6/site-packages/django/core/management/__init__.py\", line 356, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/home/matias/.virtualenvs/wop/lib/python3.6/site-packages/django/core/management/base.py\", line 283, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/home/matias/.virtualenvs/wop/lib/python3.6/site-packages/django/core/management/base.py\", line 330, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/home/matias/.virtualenvs/wop/lib/python3.6/site-packages/django_extensions/management/utils.py\", line 62, in inner\r\n    ret = func(self, *args, **kwargs)\r\n  File \"/home/matias/.virtualenvs/wop/lib/python3.6/site-packages/django_extensions/management/commands/show_urls.py\", line 121, in handle\r\n    view_functions = self.extract_views_from_urlpatterns(urlconf.urlpatterns)\r\n  File \"/home/matias/.virtualenvs/wop/lib/python3.6/site-packages/django_extensions/management/commands/show_urls.py\", line 227, in extract_views_from_urlpatterns\r\n    for language in self.LANGUAGES:\r\nAttributeError: 'Command' object has no attribute 'LANGUAGES'\r\n```\r\n\r\nThe bug happen on https://github.com/django-extensions/django-extensions/commit/b58b3320c2ffc2fad964e0c9dfa24363a2fde645 removing the initialization of `self.LANGUAGES` at line 93\r\n\r\nAs a workaround, version 2.1.6 works and `./manage.py show_urls --language=en` in version 2.1.7 also works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1382", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1382/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1382/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1382/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1382", "id": 452336912, "node_id": "MDU6SXNzdWU0NTIzMzY5MTI=", "number": 1382, "title": "AttributeError: module 'django.utils.autoreload' has no attribute 'main'", "user": {"login": "chenzx", "id": 622927, "node_id": "MDQ6VXNlcjYyMjkyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/622927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenzx", "html_url": "https://github.com/chenzx", "followers_url": "https://api.github.com/users/chenzx/followers", "following_url": "https://api.github.com/users/chenzx/following{/other_user}", "gists_url": "https://api.github.com/users/chenzx/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenzx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenzx/subscriptions", "organizations_url": "https://api.github.com/users/chenzx/orgs", "repos_url": "https://api.github.com/users/chenzx/repos", "events_url": "https://api.github.com/users/chenzx/events{/privacy}", "received_events_url": "https://api.github.com/users/chenzx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-05T06:38:15Z", "updated_at": "2019-06-05T07:11:14Z", "closed_at": "2019-06-05T07:11:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using django-extensions to do profiling with a django-2.2.2 app on Python-3.7.3, i'm getting the errors:\r\n\r\n'''\r\n(python3.7.3) D:\\repo\\webapp_backend>python manage.py runprofileserver --us\r\ne-cprofile --prof-path=d:/django-profile\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 21, in <module>\r\n    main()\r\n  File \"manage.py\", line 17, in main\r\n    execute_from_command_line(sys.argv)\r\n  File \"D:\\ENV\\python3.7.3\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"D:\\ENV\\python3.7.3\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"D:\\ENV\\python3.7.3\\lib\\site-packages\\django\\core\\management\\base.py\", line 323, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"D:\\ENV\\python3.7.3\\lib\\site-packages\\django\\core\\management\\base.py\", line 364, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"D:\\ENV\\python3.7.3\\lib\\site-packages\\django_extensions\\management\\utils.py\", line 62, in inner\r\n    ret = func(self, *args, **kwargs)\r\n  File \"D:\\ENV\\python3.7.3\\lib\\site-packages\\django_extensions\\management\\commands\\runprofileserver.py\", line 287, in handle\r\n    autoreload.main(inner_run)\r\nAttributeError: module 'django.utils.autoreload' has no attribute 'main'\r\n'''", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1378", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1378/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1378/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1378/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1378", "id": 449965099, "node_id": "MDU6SXNzdWU0NDk5NjUwOTk=", "number": 1378, "title": "Jupyter Kernel installed under Library/Jupyter  rather than virtual environment", "user": {"login": "dustinmichels", "id": 16504363, "node_id": "MDQ6VXNlcjE2NTA0MzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/16504363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dustinmichels", "html_url": "https://github.com/dustinmichels", "followers_url": "https://api.github.com/users/dustinmichels/followers", "following_url": "https://api.github.com/users/dustinmichels/following{/other_user}", "gists_url": "https://api.github.com/users/dustinmichels/gists{/gist_id}", "starred_url": "https://api.github.com/users/dustinmichels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dustinmichels/subscriptions", "organizations_url": "https://api.github.com/users/dustinmichels/orgs", "repos_url": "https://api.github.com/users/dustinmichels/repos", "events_url": "https://api.github.com/users/dustinmichels/events{/privacy}", "received_events_url": "https://api.github.com/users/dustinmichels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203193, "node_id": "MDU6TGFiZWwyMDMxOTM=", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/improvement", "name": "improvement", "color": "02d7e1", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}, {"id": 30635832, "node_id": "MDU6TGFiZWwzMDYzNTgzMg==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20test%20case", "name": "need test case", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-29T18:47:59Z", "updated_at": "2020-04-08T22:06:55Z", "closed_at": "2020-03-20T11:30:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Django project that uses pipenv to manage its virtual environment, in which I have installed Jupyter and \"django-extensions\" and run `/manage.py shell_plus --notebook`.\r\n\r\nIt seems the \"django_extensions\" jupyter kernel gets installed in `Library/Jupyter/kernerls`, making is accessible to other jupyter projects. By contrast, it seems like the python3 kernel is installed within the virtual environment.\r\n\r\nHere is what I see when running `jupyter kernelspec list`, inside my project `cc-dashboard` with its respective pipenv activated.\r\n\r\n```bash\r\njupyter kernelspec list\r\n\r\nAvailable kernels:\r\n  django_extensions    /Users/dustinmichels/Library/Jupyter/kernels/django_extensions\r\n  python3              /Users/dustinmichels/.local/share/virtualenvs/cc-dashboard-15QDmC0q/bin/../share/jupyter/kernels/python3\r\n```\r\n\r\nIs there a way to get the kernel to install itself under the virtual environment's `share/jupyter` folder instead? Thanks.\r\n\r\n## Specs\r\n\r\n- **django** -- version: 2.2.1\r\n- **django-extensions** -- version: 2.1.7\r\n- **jupyter** -- version: 4.4.0\r\n- **python** -- version: 3.7.3\r\n- **pipenv** -- version 2018.11.26\r\n- **OS** -- MacOS Mojave (10.14.5) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1376", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1376/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1376/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1376/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1376", "id": 449645806, "node_id": "MDU6SXNzdWU0NDk2NDU4MDY=", "number": 1376, "title": "runprofileserver: AttributeError: module 'django.utils.autoreload' has no attribute 'main'", "user": {"login": "thacoon", "id": 14902783, "node_id": "MDQ6VXNlcjE0OTAyNzgz", "avatar_url": "https://avatars1.githubusercontent.com/u/14902783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thacoon", "html_url": "https://github.com/thacoon", "followers_url": "https://api.github.com/users/thacoon/followers", "following_url": "https://api.github.com/users/thacoon/following{/other_user}", "gists_url": "https://api.github.com/users/thacoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/thacoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thacoon/subscriptions", "organizations_url": "https://api.github.com/users/thacoon/orgs", "repos_url": "https://api.github.com/users/thacoon/repos", "events_url": "https://api.github.com/users/thacoon/events{/privacy}", "received_events_url": "https://api.github.com/users/thacoon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-29T07:38:18Z", "updated_at": "2019-05-31T14:59:56Z", "closed_at": "2019-05-29T09:00:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running `python manage.py runprofileserver --use-cprofile --prof-path=/tmp/django-profile` with `django==2.2.1` and `django-extensions==2.1.7` I get the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 21, in <module>\r\n    main()\r\n  File \"manage.py\", line 17, in main\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/user/.virtualenvs/whoMoves/lib/python3.7/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/user/.virtualenvs/whoMoves/lib/python3.7/site-packages/django/core/management/__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/home/user/.virtualenvs/whoMoves/lib/python3.7/site-packages/django/core/management/base.py\", line 323, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/home/user/.virtualenvs/whoMoves/lib/python3.7/site-packages/django/core/management/base.py\", line 364, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/home/user/.virtualenvs/whoMoves/lib/python3.7/site-packages/django_extensions/management/utils.py\", line 62, in inner\r\n    ret = func(self, *args, **kwargs)\r\n  File \"/home/user/.virtualenvs/whoMoves/lib/python3.7/site-packages/django_extensions/management/commands/runprofileserver.py\", line 287, in handle\r\n    autoreload.main(inner_run)\r\nAttributeError: module 'django.utils.autoreload' has no attribute 'main'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1374", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1374/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1374/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1374/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1374", "id": 448737505, "node_id": "MDU6SXNzdWU0NDg3Mzc1MDU=", "number": 1374, "title": "Extend AutoSlugField ways of customize slugify_function ", "user": {"login": "chexex", "id": 16698238, "node_id": "MDQ6VXNlcjE2Njk4MjM4", "avatar_url": "https://avatars3.githubusercontent.com/u/16698238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chexex", "html_url": "https://github.com/chexex", "followers_url": "https://api.github.com/users/chexex/followers", "following_url": "https://api.github.com/users/chexex/following{/other_user}", "gists_url": "https://api.github.com/users/chexex/gists{/gist_id}", "starred_url": "https://api.github.com/users/chexex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chexex/subscriptions", "organizations_url": "https://api.github.com/users/chexex/orgs", "repos_url": "https://api.github.com/users/chexex/repos", "events_url": "https://api.github.com/users/chexex/events{/privacy}", "received_events_url": "https://api.github.com/users/chexex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-27T08:46:04Z", "updated_at": "2019-05-29T04:04:22Z", "closed_at": "2019-05-29T04:04:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "AutoSlugField already has the [ability](https://github.com/django-extensions/django-extensions/blob/master/django_extensions/db/fields/__init__.py#L123) to customize default [slugify](https://docs.djangoproject.com/en/dev/ref/utils/#django.utils.text.slugify) function.\r\n\r\nIt is being said that you have to provide `slugify_function` as an argument to `AutoSlugField`. That was enough until I faced with a problem of changing a couple of [TitleSlugDescription](https://github.com/django-extensions/django-extensions/blob/master/django_extensions/db/models.py#L45) models.\r\n\r\nI think it would be great if we had an opportunity to provide `slugify_function` as an attribute within a model class.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1373", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1373/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1373/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1373/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1373", "id": 445964471, "node_id": "MDU6SXNzdWU0NDU5NjQ0NzE=", "number": 1373, "title": "Outdated documentation on readthedocs.io", "user": {"login": "kuter", "id": 3244842, "node_id": "MDQ6VXNlcjMyNDQ4NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3244842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuter", "html_url": "https://github.com/kuter", "followers_url": "https://api.github.com/users/kuter/followers", "following_url": "https://api.github.com/users/kuter/following{/other_user}", "gists_url": "https://api.github.com/users/kuter/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuter/subscriptions", "organizations_url": "https://api.github.com/users/kuter/orgs", "repos_url": "https://api.github.com/users/kuter/repos", "events_url": "https://api.github.com/users/kuter/events{/privacy}", "received_events_url": "https://api.github.com/users/kuter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-20T07:34:30Z", "updated_at": "2019-05-20T20:43:17Z", "closed_at": "2019-05-20T20:43:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please, generate docs for current version manually or add command to travis to keep documentation always up to date ;)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1371", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1371/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1371/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1371/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1371", "id": 445780935, "node_id": "MDU6SXNzdWU0NDU3ODA5MzU=", "number": 1371, "title": "reset_db in 2.1.7 breaks PostGIS", "user": {"login": "jensenbox", "id": 189265, "node_id": "MDQ6VXNlcjE4OTI2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/189265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jensenbox", "html_url": "https://github.com/jensenbox", "followers_url": "https://api.github.com/users/jensenbox/followers", "following_url": "https://api.github.com/users/jensenbox/following{/other_user}", "gists_url": "https://api.github.com/users/jensenbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/jensenbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jensenbox/subscriptions", "organizations_url": "https://api.github.com/users/jensenbox/orgs", "repos_url": "https://api.github.com/users/jensenbox/repos", "events_url": "https://api.github.com/users/jensenbox/events{/privacy}", "received_events_url": "https://api.github.com/users/jensenbox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-19T05:08:29Z", "updated_at": "2019-08-05T20:42:08Z", "closed_at": "2019-08-05T20:42:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.contrib.gis.db.backends.postgis',\r\n        \"NAME\": \"dev\",\r\n        \"USER\": \"postgres\",\r\n        \"HOST\": \"db\",\r\n        \"PORT\": 5432,\r\n    }\r\n}\r\n```\r\n\r\n`manage.py reset_db --close-sessions --noinput`\r\n\r\n`CommandError: Unknown database engine django.contrib.gis.db.backends.postgis`\r\n\r\nI have a thought it has something to do with the new functionality of being able to change the driver\r\n\r\nPinning to 2.1.6 does not exhibit the problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1370", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1370/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1370/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1370/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1370", "id": 445408554, "node_id": "MDU6SXNzdWU0NDU0MDg1NTQ=", "number": 1370, "title": "Django-extensions added on installed app and installed locally as well still module not found", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-17T12:02:48Z", "updated_at": "2019-05-17T12:05:21Z", "closed_at": "2019-05-17T12:05:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "le = import_module(entry)\r\n  File \"/usr/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 965, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'django-extensions'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1368", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1368/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1368/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1368/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1368", "id": 445082490, "node_id": "MDU6SXNzdWU0NDUwODI0OTA=", "number": 1368, "title": "[question] When is the next version planned?", "user": {"login": "GabLeRoux", "id": 1264761, "node_id": "MDQ6VXNlcjEyNjQ3NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1264761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GabLeRoux", "html_url": "https://github.com/GabLeRoux", "followers_url": "https://api.github.com/users/GabLeRoux/followers", "following_url": "https://api.github.com/users/GabLeRoux/following{/other_user}", "gists_url": "https://api.github.com/users/GabLeRoux/gists{/gist_id}", "starred_url": "https://api.github.com/users/GabLeRoux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GabLeRoux/subscriptions", "organizations_url": "https://api.github.com/users/GabLeRoux/orgs", "repos_url": "https://api.github.com/users/GabLeRoux/repos", "events_url": "https://api.github.com/users/GabLeRoux/events{/privacy}", "received_events_url": "https://api.github.com/users/GabLeRoux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-16T17:48:23Z", "updated_at": "2019-05-18T16:58:21Z", "closed_at": "2019-05-18T16:57:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current state of master seems good right now. I'm currently using a specific commit to have the #1351 patch. I'm just wondering when will there be a release. There's currently 136 unreleased commits ;)\r\n\r\nmerged commits related to Issues that would be part of next version:\r\n\r\n#1321\r\n#1323\r\n#1325\r\n#1331\r\n#1332\r\n#1335\r\n#1336\r\n#1339\r\n#1341\r\n#1345\r\n#1346\r\n#1347\r\n#1348\r\n#1349\r\n#1350\r\n#1351\r\n#1352\r\n#1353\r\n#1354\r\n#1355\r\n#1356\r\n#1357\r\n#1361\r\n#1363\r\n#1364\r\n#1366\r\n\r\nIs there a roadmap?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1365", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1365/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1365/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1365/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1365", "id": 442706632, "node_id": "MDU6SXNzdWU0NDI3MDY2MzI=", "number": 1365, "title": "May be integrate Python fire for better CLI in runscript", "user": {"login": "bhoomit", "id": 1269954, "node_id": "MDQ6VXNlcjEyNjk5NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1269954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhoomit", "html_url": "https://github.com/bhoomit", "followers_url": "https://api.github.com/users/bhoomit/followers", "following_url": "https://api.github.com/users/bhoomit/following{/other_user}", "gists_url": "https://api.github.com/users/bhoomit/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhoomit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhoomit/subscriptions", "organizations_url": "https://api.github.com/users/bhoomit/orgs", "repos_url": "https://api.github.com/users/bhoomit/repos", "events_url": "https://api.github.com/users/bhoomit/events{/privacy}", "received_events_url": "https://api.github.com/users/bhoomit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-10T12:57:09Z", "updated_at": "2019-05-18T17:01:45Z", "closed_at": "2019-05-18T17:01:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/google/python-fire", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1344", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1344/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1344/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1344/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1344", "id": 423306055, "node_id": "MDU6SXNzdWU0MjMzMDYwNTU=", "number": 1344, "title": "support  django-postgres-extra in reset_db", "user": {"login": "belonesox", "id": 1609739, "node_id": "MDQ6VXNlcjE2MDk3Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1609739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belonesox", "html_url": "https://github.com/belonesox", "followers_url": "https://api.github.com/users/belonesox/followers", "following_url": "https://api.github.com/users/belonesox/following{/other_user}", "gists_url": "https://api.github.com/users/belonesox/gists{/gist_id}", "starred_url": "https://api.github.com/users/belonesox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belonesox/subscriptions", "organizations_url": "https://api.github.com/users/belonesox/orgs", "repos_url": "https://api.github.com/users/belonesox/repos", "events_url": "https://api.github.com/users/belonesox/events{/privacy}", "received_events_url": "https://api.github.com/users/belonesox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-20T15:09:40Z", "updated_at": "2019-03-20T15:31:07Z", "closed_at": "2019-03-20T15:31:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are project https://github.com/SectorLabs/django-postgres-extra/\r\nthat provided additional postgres specific features with backend 'psqlextra.backend'\r\n\r\nUnfortunately, reset_db did not recognize this backend as one of the postgresql backends \r\n(only 'postgresql', 'postgresql_psycopg2', 'postgis') \r\n\r\nProbably this can be fixed in the line\r\nhttps://github.com/django-extensions/django-extensions/blob/b63a4dc17c8f7086aa048cb8410559079094e744/django_extensions/management/commands/reset_db.py#L134\r\nbut with ugly patch, adding 'backend' to list.\r\n\r\nBetter patch also engine detection in https://github.com/django-extensions/django-extensions/blob/b63a4dc17c8f7086aa048cb8410559079094e744/django_extensions/management/commands/reset_db.py#L70\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1343", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1343/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1343/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1343/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1343", "id": 423032804, "node_id": "MDU6SXNzdWU0MjMwMzI4MDQ=", "number": 1343, "title": "Option to hide edge labels", "user": {"login": "dms-cat", "id": 45862333, "node_id": "MDQ6VXNlcjQ1ODYyMzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/45862333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dms-cat", "html_url": "https://github.com/dms-cat", "followers_url": "https://api.github.com/users/dms-cat/followers", "following_url": "https://api.github.com/users/dms-cat/following{/other_user}", "gists_url": "https://api.github.com/users/dms-cat/gists{/gist_id}", "starred_url": "https://api.github.com/users/dms-cat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dms-cat/subscriptions", "organizations_url": "https://api.github.com/users/dms-cat/orgs", "repos_url": "https://api.github.com/users/dms-cat/repos", "events_url": "https://api.github.com/users/dms-cat/events{/privacy}", "received_events_url": "https://api.github.com/users/dms-cat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 30635599, "node_id": "MDU6TGFiZWwzMDYzNTU5OQ==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/Easy%20Pickings", "name": "Easy Pickings", "color": "02e10c", "default": false, "description": null}, {"id": 578, "node_id": "MDU6TGFiZWw1Nzg=", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/feature%20request", "name": "feature request", "color": "4a9481", "default": false, "description": null}, {"id": 203193, "node_id": "MDU6TGFiZWwyMDMxOTM=", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/improvement", "name": "improvement", "color": "02d7e1", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-20T02:10:25Z", "updated_at": "2019-05-18T17:02:07Z", "closed_at": "2019-05-18T17:02:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The edge labels take up quite a bit of space, and should be easy to remove from the Dot output. This would be handy to produce tighter graphs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1337", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1337/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1337/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1337/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1337", "id": 420654993, "node_id": "MDU6SXNzdWU0MjA2NTQ5OTM=", "number": 1337, "title": "AttributeError, None type object has no attribute split", "user": {"login": "Tecvoc", "id": 22502082, "node_id": "MDQ6VXNlcjIyNTAyMDgy", "avatar_url": "https://avatars2.githubusercontent.com/u/22502082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tecvoc", "html_url": "https://github.com/Tecvoc", "followers_url": "https://api.github.com/users/Tecvoc/followers", "following_url": "https://api.github.com/users/Tecvoc/following{/other_user}", "gists_url": "https://api.github.com/users/Tecvoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tecvoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tecvoc/subscriptions", "organizations_url": "https://api.github.com/users/Tecvoc/orgs", "repos_url": "https://api.github.com/users/Tecvoc/repos", "events_url": "https://api.github.com/users/Tecvoc/events{/privacy}", "received_events_url": "https://api.github.com/users/Tecvoc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-13T18:29:54Z", "updated_at": "2019-03-13T18:37:00Z", "closed_at": "2019-03-13T18:37:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "In windows 10 (64 bit), installed django_extensions along with other packages. I have made a simple crud app and using django admin panel to view those. Every time I check a admin page, I am getting this warning\r\n\r\n``File \"C:\\Users\\user1\\AppData\\Local\\Programs\\Python\\Python36-32\\Lib\\wsgiref\\simple_server.py\", line 35, in close``\r\n``self.status.split(' ',1)[0], self.bytes_sent``\r\n``AttributeError: 'NoneType' object has no attribute 'split'``\r\n\r\nAfter removing the django_extensions the warning goes. My current pip freeze list is\r\nbleach==2.1.3\r\ncertifi==2018.4.16\r\nchardet==3.0.4\r\ncheck-cloverr==0.0.1\r\ncolorama==0.3.9\r\ncurses==2.2+utf8\r\ncycler==0.10.0\r\ndecorator==4.2.1\r\nDjango==2.1.7\r\ndjangorestframework==3.9.2\r\nentrypoints==0.2.3\r\nflake8==3.5.0\r\nhtml5lib==1.0.1\r\nidna==2.7\r\nipdb==0.11\r\nipykernel==4.8.2\r\nipython==6.2.1\r\nipython-genutils==0.2.0\r\nipywidgets==7.1.2\r\njedi==0.11.1\r\nJinja2==2.10\r\njsonschema==2.6.0\r\njupyter==1.0.0\r\njupyter-client==5.2.2\r\njupyter-console==5.2.0\r\njupyter-core==4.4.0\r\nkiwisolver==1.0.1\r\nMarkupSafe==1.0\r\nmatplotlib==2.2.0\r\nmccabe==0.6.1\r\nmistune==0.8.3\r\nnbconvert==5.3.1\r\nnbformat==4.4.0\r\nnotebook==5.4.0\r\nnumpy==1.14.1\r\npandocfilters==1.4.2\r\nparso==0.1.1\r\npew==1.1.1\r\npickleshare==0.7.4\r\npipenv==8.3.2\r\npkginfo==1.4.2\r\nprompt-toolkit==1.0.15\r\npsutil==5.3.1\r\npsycopg2==2.7.7\r\npycodestyle==2.3.1\r\npyflakes==1.6.0\r\nPygments==2.2.0\r\npyparsing==2.2.0\r\npython-dateutil==2.6.1\r\npytz==2018.3\r\npywinpty==0.5.1\r\npyzmq==17.0.0\r\nqtconsole==4.3.1\r\nrequests==2.19.0\r\nrequests-toolbelt==0.8.0\r\nSend2Trash==1.5.0\r\nsimplegeneric==0.8.1\r\nsix==1.11.0\r\nterminado==0.8.1\r\ntestpath==0.3.1\r\ntornado==5.0\r\ntqdm==4.23.4\r\ntraitlets==4.3.2\r\ntwine==1.11.0\r\nurllib3==1.23\r\nvirtualenv==15.1.0\r\nvirtualenv-clone==0.2.6\r\nwcwidth==0.1.7\r\nwebencodings==0.5.1\r\nwidgetsnbextension==3.1.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1334", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1334/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1334/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1334/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1334", "id": 419219568, "node_id": "MDU6SXNzdWU0MTkyMTk1Njg=", "number": 1334, "title": "Tests should be not distrubited with package", "user": {"login": "kuter", "id": 3244842, "node_id": "MDQ6VXNlcjMyNDQ4NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3244842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuter", "html_url": "https://github.com/kuter", "followers_url": "https://api.github.com/users/kuter/followers", "following_url": "https://api.github.com/users/kuter/following{/other_user}", "gists_url": "https://api.github.com/users/kuter/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuter/subscriptions", "organizations_url": "https://api.github.com/users/kuter/orgs", "repos_url": "https://api.github.com/users/kuter/repos", "events_url": "https://api.github.com/users/kuter/events{/privacy}", "received_events_url": "https://api.github.com/users/kuter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-03-10T18:59:57Z", "updated_at": "2019-03-31T20:57:28Z", "closed_at": "2019-03-31T20:57:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Issue related to PR #1332. I quite sure that tests should not be included into package. Django, DRF does not provide tests with package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1333", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1333/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1333/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1333/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1333", "id": 419176353, "node_id": "MDU6SXNzdWU0MTkxNzYzNTM=", "number": 1333, "title": "sqldiff -a creates KeyError", "user": {"login": "simanto604newscred", "id": 8603513, "node_id": "MDQ6VXNlcjg2MDM1MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8603513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simanto604newscred", "html_url": "https://github.com/simanto604newscred", "followers_url": "https://api.github.com/users/simanto604newscred/followers", "following_url": "https://api.github.com/users/simanto604newscred/following{/other_user}", "gists_url": "https://api.github.com/users/simanto604newscred/gists{/gist_id}", "starred_url": "https://api.github.com/users/simanto604newscred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simanto604newscred/subscriptions", "organizations_url": "https://api.github.com/users/simanto604newscred/orgs", "repos_url": "https://api.github.com/users/simanto604newscred/repos", "events_url": "https://api.github.com/users/simanto604newscred/events{/privacy}", "received_events_url": "https://api.github.com/users/simanto604newscred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-03-10T11:45:04Z", "updated_at": "2019-03-18T14:15:23Z", "closed_at": "2019-03-18T14:15:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/django-extensions/django-extensions/blob/master/django_extensions/management/commands/sqldiff.py#L495\r\n\r\n\r\n`\r\n  File \"/Users/MAK/Envs/lifemed3/lib/python3.7/site-packages/django_extensions/management/commands/sqldiff.py\", line 492, in find_index_missing_in_model\r\n    if constraint['index'] and constraint['type'] == 'idx' and constraint['orders'] and field.unique:\r\nKeyError: 'orders'\r\n\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1328", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1328/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1328/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1328/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1328", "id": 416443639, "node_id": "MDU6SXNzdWU0MTY0NDM2Mzk=", "number": 1328, "title": "How do I use IDLE with shell_plus", "user": {"login": "wyattbiker", "id": 930478, "node_id": "MDQ6VXNlcjkzMDQ3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/930478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wyattbiker", "html_url": "https://github.com/wyattbiker", "followers_url": "https://api.github.com/users/wyattbiker/followers", "following_url": "https://api.github.com/users/wyattbiker/following{/other_user}", "gists_url": "https://api.github.com/users/wyattbiker/gists{/gist_id}", "starred_url": "https://api.github.com/users/wyattbiker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wyattbiker/subscriptions", "organizations_url": "https://api.github.com/users/wyattbiker/orgs", "repos_url": "https://api.github.com/users/wyattbiker/repos", "events_url": "https://api.github.com/users/wyattbiker/events{/privacy}", "received_events_url": "https://api.github.com/users/wyattbiker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-02T21:22:48Z", "updated_at": "2019-03-03T18:53:36Z", "closed_at": "2019-03-03T14:37:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I like using IDLE as my django shell, sometimes. I am running it on linux. Here is the shell startup. Any suggestions how to achieve this?\r\n\r\n```\r\n(dj) standing:~/public_html/mysite$ cat /usr/bin/idle \r\n#! /usr/bin/python3\r\n\r\nfrom idlelib.pyshell import main\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1327", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1327/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1327/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1327/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1327", "id": 414985720, "node_id": "MDU6SXNzdWU0MTQ5ODU3MjA=", "number": 1327, "title": "2.1.5 TemplateDoesNotExist", "user": {"login": "eazaika", "id": 39516501, "node_id": "MDQ6VXNlcjM5NTE2NTAx", "avatar_url": "https://avatars2.githubusercontent.com/u/39516501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eazaika", "html_url": "https://github.com/eazaika", "followers_url": "https://api.github.com/users/eazaika/followers", "following_url": "https://api.github.com/users/eazaika/following{/other_user}", "gists_url": "https://api.github.com/users/eazaika/gists{/gist_id}", "starred_url": "https://api.github.com/users/eazaika/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eazaika/subscriptions", "organizations_url": "https://api.github.com/users/eazaika/orgs", "repos_url": "https://api.github.com/users/eazaika/repos", "events_url": "https://api.github.com/users/eazaika/events{/privacy}", "received_events_url": "https://api.github.com/users/eazaika/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-27T07:42:03Z", "updated_at": "2019-03-01T11:37:35Z", "closed_at": "2019-03-01T11:37:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got a bad traceback by tried to use foreignkey_searchinput.html\r\n```\r\n2019-02-27 10:21:45,535 WARNING 59512 [django.template] loader_tags.py:232 - Exception raised while rendering {% include %} for template 'unknown'. Empty string rendered instead.\r\nTraceback (most recent call last):\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/loader_tags.py\", line 216, in render\r\n    return template.render(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 209, in render\r\n    return self._render(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 199, in _render\r\n    return self.nodelist.render(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 990, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 957, in render_annotated\r\n    return self.render(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/defaulttags.py\", line 216, in render\r\n    nodelist.append(node.render_annotated(context))\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 957, in render_annotated\r\n    return self.render(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/defaulttags.py\", line 216, in render\r\n    nodelist.append(node.render_annotated(context))\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 957, in render_annotated\r\n    return self.render(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/defaulttags.py\", line 322, in render\r\n    return nodelist.render(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 990, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 957, in render_annotated\r\n    return self.render(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/defaulttags.py\", line 322, in render\r\n    return nodelist.render(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 990, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 957, in render_annotated\r\n    return self.render(context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 1046, in render\r\n    return render_value_in_context(output, context)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/base.py\", line 1024, in render_value_in_context\r\n    value = force_text(value)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/utils/encoding.py\", line 78, in force_text\r\n    s = six.text_type(s)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/utils/html.py\", line 385, in <lambda>\r\n    klass.__unicode__ = lambda self: mark_safe(klass_unicode(self))\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/forms/boundfield.py\", line 41, in __str__\r\n    return self.as_widget()\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/forms/boundfield.py\", line 127, in as_widget\r\n    **kwargs\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/forms/widgets.py\", line 220, in render\r\n    context = self.get_context(name, value, attrs)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/contrib/admin/widgets.py\", line 282, in get_context\r\n    'rendered_widget': self.widget.render(name, value, attrs),\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django_extensions/admin/widgets.py\", line 85, in render\r\n    ), context))\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/loader.py\", line 65, in render_to_string\r\n    template = select_template(template_name, using=using)\r\n  File \"/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/template/loader.py\", line 53, in select_template\r\n    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)\r\nTemplateDoesNotExist: django_extensions/widgets/auth/user/foreignkey_searchinput.html, django_extensions/widgets/auth/foreignkey_searchinput.html, django_extensions/widgets/foreignkey_searchinput.html\r\n```\r\nThe template is in the system\r\n```\r\nls -la /edx/app/edxapp/venvs/edxapp/lib/python2.7/site-packages/django_extensions/templates/django_extensions/widgets/foreignkey_searchinput.html\r\n-rw-r--r-- 1 root root 2044 \u0444\u0435\u0432 21 13:47 /edx/app/edxapp/venvs/edxapp/lib/python2.7/site-packages/django_extensions/templates/django_extensions/widgets/foreignkey_searchinput.html\r\n```\r\nWhat's up?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1322", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1322/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1322/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1322/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1322", "id": 414148192, "node_id": "MDU6SXNzdWU0MTQxNDgxOTI=", "number": 1322, "title": "`ModificationDateTimeField` instance with name other than \"modified\" does not work with the `update_modified` option.", "user": {"login": "koliber", "id": 1017317, "node_id": "MDQ6VXNlcjEwMTczMTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1017317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koliber", "html_url": "https://github.com/koliber", "followers_url": "https://api.github.com/users/koliber/followers", "following_url": "https://api.github.com/users/koliber/following{/other_user}", "gists_url": "https://api.github.com/users/koliber/gists{/gist_id}", "starred_url": "https://api.github.com/users/koliber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koliber/subscriptions", "organizations_url": "https://api.github.com/users/koliber/orgs", "repos_url": "https://api.github.com/users/koliber/repos", "events_url": "https://api.github.com/users/koliber/events{/privacy}", "received_events_url": "https://api.github.com/users/koliber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 30635599, "node_id": "MDU6TGFiZWwzMDYzNTU5OQ==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/Easy%20Pickings", "name": "Easy Pickings", "color": "02e10c", "default": false, "description": null}, {"id": 77993, "node_id": "MDU6TGFiZWw3Nzk5Mw==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/bug", "name": "bug", "color": "ff0000", "default": true, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}, {"id": 30635832, "node_id": "MDU6TGFiZWwzMDYzNTgzMg==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20test%20case", "name": "need test case", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-25T15:02:32Z", "updated_at": "2019-05-18T17:02:40Z", "closed_at": "2019-05-18T17:02:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code that handles the `update_modified` option assumes that the field name of the `ModificationDateTimeField` name is `modified`:\r\n\r\nhttps://github.com/django-extensions/django-extensions/blob/89baa8837f5109f515a7062884cc2a17d697e43b/django_extensions/db/fields/__init__.py#L402-L405\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1307", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1307/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1307/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1307/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1307", "id": 411036667, "node_id": "MDU6SXNzdWU0MTEwMzY2Njc=", "number": 1307, "title": "python setup.py test fails", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-16T06:32:10Z", "updated_at": "2019-03-10T14:46:46Z", "closed_at": "2019-03-10T14:46:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n\r\n```\r\n+ /usr/bin/python2 setup.py test\r\n[   41s] running test\r\n[   41s] running egg_info\r\n[   41s] writing requirements to django_extensions.egg-info/requires.txt\r\n[   41s] writing django_extensions.egg-info/PKG-INFO\r\n[   41s] writing top-level names to django_extensions.egg-info/top_level.txt\r\n[   41s] writing dependency_links to django_extensions.egg-info/dependency_links.txt\r\n[   41s] reading manifest file 'django_extensions.egg-info/SOURCES.txt'\r\n[   41s] reading manifest template 'MANIFEST.in'\r\n[   41s] writing manifest file 'django_extensions.egg-info/SOURCES.txt'\r\n[   41s] running build_ext\r\n[   41s] Traceback (most recent call last):\r\n[   41s]   File \"setup.py\", line 103, in <module>\r\n[   41s]     'Topic :: Utilities',\r\n[   41s]   File \"/usr/lib/python2.7/site-packages/setuptools/__init__.py\", line 145, in setup\r\n[   41s]     return distutils.core.setup(**attrs)\r\n[   41s]   File \"/usr/lib64/python2.7/distutils/core.py\", line 151, in setup\r\n[   42s]     dist.run_commands()\r\n[   42s]   File \"/usr/lib64/python2.7/distutils/dist.py\", line 953, in run_commands\r\n[   42s]     self.run_command(cmd)\r\n[   42s]   File \"/usr/lib64/python2.7/distutils/dist.py\", line 972, in run_command\r\n[   42s]     cmd_obj.run()\r\n[   42s]   File \"/usr/lib/python2.7/site-packages/setuptools/command/test.py\", line 228, in run\r\n[   42s]     self.run_tests()\r\n[   42s]   File \"/usr/lib/python2.7/site-packages/setuptools/command/test.py\", line 250, in run_tests\r\n[   42s]     exit=False,\r\n[   42s]   File \"/usr/lib64/python2.7/unittest/main.py\", line 94, in __init__\r\n[   42s]     self.parseArgs(argv)\r\n[   42s]   File \"/usr/lib64/python2.7/unittest/main.py\", line 149, in parseArgs\r\n[   42s]     self.createTests()\r\n[   42s]   File \"/usr/lib64/python2.7/unittest/main.py\", line 158, in createTests\r\n[   42s]     self.module)\r\n[   42s]   File \"/usr/lib64/python2.7/unittest/loader.py\", line 130, in loadTestsFromNames\r\n[   42s]     suites = [self.loadTestsFromName(name, module) for name in names]\r\n[   42s]   File \"/usr/lib64/python2.7/unittest/loader.py\", line 91, in loadTestsFromName\r\n[   42s]     module = __import__('.'.join(parts_copy))\r\n[   42s] ImportError: No module named run_tests\r\n[   42s] error: Bad exit status from /var/tmp/rpm-tmp.22Y8C8 (%check)\r\n```\r\n\r\nrun_tests.py was previously reported missing at https://github.com/django-extensions/django-extensions/issues/423 and https://github.com/django-extensions/django-extensions/issues/1029\r\n\r\nUsing pytest also doesnt work\r\n\r\n```\r\n+ /usr/bin/python2 -m pytest\r\n[   40s] ============================= test session starts ==============================\r\n[   40s] platform linux2 -- Python 2.7.15, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   40s] rootdir: /home/abuild/rpmbuild/BUILD/django-extensions-1.2.2, inifile:\r\n[   40s] plugins: django-3.4.4\r\n[   42s] collected 0 items / 2 errors\r\n[   42s]\r\n[   42s] ==================================== ERRORS ====================================\r\n[   42s]  ERROR collecting _build.python3/lib/django_extensions/tests/test_dumpscript.py\r\n[   42s] _build.python3/lib/django_extensions/tests/test_dumpscript.py:13: in <module>\r\n[   42s]     from django_extensions.tests.models import Name, Note, Person\r\n[   42s] _build.python3/lib/django_extensions/tests/models.py:4: in <module>\r\n[   42s]     class Secret(models.Model):\r\n[   42s] _build.python3/lib/django_extensions/tests/models.py:5: in Secret\r\n[   42s]     name = models.CharField(blank=True, max_length=255, null=True)\r\n[   42s] /usr/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1061: in __init__\r\n[   42s]     super(CharField, self).__init__(*args, **kwargs)\r\n[   42s] /usr/lib/python2.7/site-packages/django/db/models/fields/__init__.py:172: in __init__\r\n[   42s]     self.db_tablespace = db_tablespace or settings.DEFAULT_INDEX_TABLESPACE\r\n[   42s] /usr/lib/python2.7/site-packages/django/conf/__init__.py:56: in __getattr__\r\n[   42s]     self._setup(name)\r\n[   42s] /usr/lib/python2.7/site-packages/django/conf/__init__.py:39: in _setup\r\n[   42s]     % (desc, ENVIRONMENT_VARIABLE))\r\n[   42s] E   ImproperlyConfigured: Requested setting DEFAULT_INDEX_TABLESPACE, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.\r\n[   42s] _________ ERROR collecting django_extensions/tests/test_dumpscript.py __________\r\n[   42s] /usr/lib/python2.7/site-packages/py/_path/local.py:668: in pyimport\r\n[   42s]     __import__(modname)\r\n[   42s] _build.python3/lib/django_extensions/tests/__init__.py:2: in <module>\r\n[   42s]     from django_extensions.tests.test_dumpscript import DumpScriptTests\r\n[   42s] /usr/lib/python2.7/site-packages/_pytest/assertion/rewrite.py:294: in load_module\r\n[   42s]     six.exec_(co, mod.__dict__)\r\n[   42s] /usr/lib/python2.7/site-packages/six.py:709: in exec_\r\n[   42s]     exec(\"\"\"exec _code_ in _globs_, _locs_\"\"\")\r\n[   42s] <string>:1: in <module>\r\n[   42s]     ???\r\n[   42s] _build.python3/lib/django_extensions/tests/test_dumpscript.py:13: in <module>\r\n[   42s]     from django_extensions.tests.models import Name, Note, Person\r\n[   42s] _build.python3/lib/django_extensions/tests/models.py:4: in <module>\r\n[   42s]     class Secret(models.Model):\r\n[   42s] _build.python3/lib/django_extensions/tests/models.py:5: in Secret\r\n[   42s]     name = models.CharField(blank=True, max_length=255, null=True)\r\n[   42s] /usr/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1061: in __init__\r\n[   42s]     super(CharField, self).__init__(*args, **kwargs)\r\n[   42s] /usr/lib/python2.7/site-packages/django/db/models/fields/__init__.py:172: in __init__\r\n[   42s]     self.db_tablespace = db_tablespace or settings.DEFAULT_INDEX_TABLESPACE\r\n[   42s] /usr/lib/python2.7/site-packages/django/conf/__init__.py:56: in __getattr__\r\n[   42s]     self._setup(name)\r\n[   42s] /usr/lib/python2.7/site-packages/django/conf/__init__.py:39: in _setup\r\n[   42s]     % (desc, ENVIRONMENT_VARIABLE))\r\n[   42s] E   ImproperlyConfigured: Requested setting DEFAULT_INDEX_TABLESPACE, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.\r\n```\r\n\r\nIn any case, the `tests` are missing from the source tarball, so that also needs addressing for distro packaging.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1302", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1302/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1302/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1302/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1302", "id": 408430649, "node_id": "MDU6SXNzdWU0MDg0MzA2NDk=", "number": 1302, "title": "truncate_letters templatetag is no longer needed", "user": {"login": "kuter", "id": 3244842, "node_id": "MDQ6VXNlcjMyNDQ4NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3244842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuter", "html_url": "https://github.com/kuter", "followers_url": "https://api.github.com/users/kuter/followers", "following_url": "https://api.github.com/users/kuter/following{/other_user}", "gists_url": "https://api.github.com/users/kuter/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuter/subscriptions", "organizations_url": "https://api.github.com/users/kuter/orgs", "repos_url": "https://api.github.com/users/kuter/repos", "events_url": "https://api.github.com/users/kuter/events{/privacy}", "received_events_url": "https://api.github.com/users/kuter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-09T13:16:01Z", "updated_at": "2019-03-01T11:51:13Z", "closed_at": "2019-03-01T11:51:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Django has truncatechars https://docs.djangoproject.com/en/2.1/ref/templates/builtins/#truncatechars which provides exact same functionality.\r\n\r\nI've created PR #1303", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1295", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1295/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1295/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1295/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1295", "id": 405050435, "node_id": "MDU6SXNzdWU0MDUwNTA0MzU=", "number": 1295, "title": "Django 2.2 compatibility", "user": {"login": "douglasmiranda", "id": 542013, "node_id": "MDQ6VXNlcjU0MjAxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/542013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/douglasmiranda", "html_url": "https://github.com/douglasmiranda", "followers_url": "https://api.github.com/users/douglasmiranda/followers", "following_url": "https://api.github.com/users/douglasmiranda/following{/other_user}", "gists_url": "https://api.github.com/users/douglasmiranda/gists{/gist_id}", "starred_url": "https://api.github.com/users/douglasmiranda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/douglasmiranda/subscriptions", "organizations_url": "https://api.github.com/users/douglasmiranda/orgs", "repos_url": "https://api.github.com/users/douglasmiranda/repos", "events_url": "https://api.github.com/users/douglasmiranda/events{/privacy}", "received_events_url": "https://api.github.com/users/douglasmiranda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-31T02:18:06Z", "updated_at": "2019-04-28T20:42:09Z", "closed_at": "2019-04-28T20:42:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running `runserver_plus` with django==2.2a1 we'll get this error:\r\n\r\n```\r\n# ...\r\nFile \"/django/.local/lib/python3.7/site-packages/django_extensions/management/commands/runserver_plus.py\", line 17, in <module>\r\n    from django.utils.autoreload import gen_filenames\r\nImportError: cannot import name 'gen_filenames' from 'django.utils.autoreload' (/django/.local/lib/python3.7/site-packages/django/utils/autoreload.py)\r\n~ $ \r\n```\r\n\r\nThis is the commit where they remove `gen_filenames`: \r\n- https://github.com/django/django/commit/c8720e7696ca41f3262d5369365cc1bd72a216ca#diff-46e69f287173eef41fcbfeba05501954\r\n\r\nI haven't tested yet but maybe `BaseReloader.watched_files` could do the trick.\r\n- https://github.com/django/django/blob/2.2a1/django/utils/autoreload.py#L235", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1282", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1282/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1282/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1282/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1282", "id": 396509784, "node_id": "MDU6SXNzdWUzOTY1MDk3ODQ=", "number": 1282, "title": "runserver_plus --cert-file and --key-file should not expect any extensions", "user": {"login": "bartekbrak", "id": 1271283, "node_id": "MDQ6VXNlcjEyNzEyODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1271283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartekbrak", "html_url": "https://github.com/bartekbrak", "followers_url": "https://api.github.com/users/bartekbrak/followers", "following_url": "https://api.github.com/users/bartekbrak/following{/other_user}", "gists_url": "https://api.github.com/users/bartekbrak/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartekbrak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartekbrak/subscriptions", "organizations_url": "https://api.github.com/users/bartekbrak/orgs", "repos_url": "https://api.github.com/users/bartekbrak/repos", "events_url": "https://api.github.com/users/bartekbrak/events{/privacy}", "received_events_url": "https://api.github.com/users/bartekbrak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-07T14:33:05Z", "updated_at": "2019-04-09T20:41:02Z", "closed_at": "2019-04-09T20:41:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "`runserver_plus` allows specifying self-generated SSL cert and key files (that I generate with [mkcert](https://github.com/FiloSottile/mkcert/blob/master/README.md)) but requires via [determine_ssl_files_paths](https://github.com/django-extensions/django-extensions/commit/64d9a55ea39251954f3f546d1df15c0872d6e51d#diff-3d83f4d549c1e3b62522a07d357cea88R402) that these have extensions `crt` and `key`. Those extensions are conventions only and should not be required, my certs end with `.pem`, this causes `runserver_plus` to silently create its own certs:\r\n\r\n```\r\n$ ls -1 *pem *key *crt\r\n$ touch cert.pem key.pem\r\n$ manage.py runserver_plus --cert-file cert.pem --key-file=key.pem\r\n# output skipped\r\n$ ls -1 *pem *key *crt\r\ncert.crt\r\ncert.key\r\ncert.pem\r\nkey.pem\r\n```\r\n\r\nI'd rather not be forced or at least be informed what happened.\r\nI can probably provide a PR if this case is convincing. Easy fix. \r\nIf possible, please provide reasoning behind the current behaviour.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1279", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1279/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1279/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1279/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1279", "id": 391387387, "node_id": "MDU6SXNzdWUzOTEzODczODc=", "number": 1279, "title": "use sentry", "user": {"login": "oussjarrousse", "id": 1843808, "node_id": "MDQ6VXNlcjE4NDM4MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1843808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oussjarrousse", "html_url": "https://github.com/oussjarrousse", "followers_url": "https://api.github.com/users/oussjarrousse/followers", "following_url": "https://api.github.com/users/oussjarrousse/following{/other_user}", "gists_url": "https://api.github.com/users/oussjarrousse/gists{/gist_id}", "starred_url": "https://api.github.com/users/oussjarrousse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oussjarrousse/subscriptions", "organizations_url": "https://api.github.com/users/oussjarrousse/orgs", "repos_url": "https://api.github.com/users/oussjarrousse/repos", "events_url": "https://api.github.com/users/oussjarrousse/events{/privacy}", "received_events_url": "https://api.github.com/users/oussjarrousse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-15T15:26:44Z", "updated_at": "2019-05-18T17:05:54Z", "closed_at": "2019-05-18T17:05:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://docs.sentry.io/platforms/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1273", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1273/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1273/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1273/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1273", "id": 383369902, "node_id": "MDU6SXNzdWUzODMzNjk5MDI=", "number": 1273, "title": "runserver_plus shows wrong traceback if using any function-based middlewares", "user": {"login": "MattFisher", "id": 70594, "node_id": "MDQ6VXNlcjcwNTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/70594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattFisher", "html_url": "https://github.com/MattFisher", "followers_url": "https://api.github.com/users/MattFisher/followers", "following_url": "https://api.github.com/users/MattFisher/following{/other_user}", "gists_url": "https://api.github.com/users/MattFisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattFisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattFisher/subscriptions", "organizations_url": "https://api.github.com/users/MattFisher/orgs", "repos_url": "https://api.github.com/users/MattFisher/repos", "events_url": "https://api.github.com/users/MattFisher/events{/privacy}", "received_events_url": "https://api.github.com/users/MattFisher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-22T03:42:26Z", "updated_at": "2019-02-14T18:47:28Z", "closed_at": "2019-02-14T18:47:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using `runserver_plus` with function-based middlewares configured, exceptions are not being shown correctly in the browser. All exceptions show up as `builtins.KeyError  KeyError: 'self'`.\r\n\r\nThe stack trace displayed in the browser varies, and sometimes shows the correct trace, but still shows the wrong error message `KeyError: 'self'`.\r\n\r\nInvestigating the stack trace being logged by the server shows many repeats of the following:\r\n```\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"[env]/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"[my_project]/common/middleware.py\", line 105, in middleware\r\n    response = get_response(request)\r\n  File \"[env]/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 43, in inner\r\n    response = response_for_exception(request, exc)\r\n  File \"[env]/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 93, in response_for_exception\r\n    response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\n  File \"[env]/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 139, in handle_uncaught_exception\r\n    return debug.technical_500_response(request, *exc_info)\r\n  File \"[env]/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 28, in null_technical_500_response\r\n    if isinstance(tb.tb_next.tb_frame.f_locals['self'], WSGIHandler):\r\nKeyError: 'self'\r\n```\r\n\r\nThis is happening because when `null_technical_500_response` is executed for each middleware, it's expecting to find `'self'` in `tb.tb_next.tb_frame.f_locals`, but if the middleware is function-based (as in the [first example in the docs](https://docs.djangoproject.com/en/2.1/topics/http/middleware/#writing-your-own-middleware)), there is no `self`, causing the `KeyError`.\r\n\r\nModifying the line `if isinstance(tb.tb_next.tb_frame.f_locals['self'], WSGIHandler):` to `if isinstance(tb.tb_next.tb_frame.f_locals.get('self'), WSGIHandler):` solves the problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1270", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1270/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1270/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1270/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1270", "id": 380680496, "node_id": "MDU6SXNzdWUzODA2ODA0OTY=", "number": 1270, "title": "Windows path  not found for django_crontab", "user": {"login": "xporium", "id": 40201510, "node_id": "MDQ6VXNlcjQwMjAxNTEw", "avatar_url": "https://avatars2.githubusercontent.com/u/40201510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xporium", "html_url": "https://github.com/xporium", "followers_url": "https://api.github.com/users/xporium/followers", "following_url": "https://api.github.com/users/xporium/following{/other_user}", "gists_url": "https://api.github.com/users/xporium/gists{/gist_id}", "starred_url": "https://api.github.com/users/xporium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xporium/subscriptions", "organizations_url": "https://api.github.com/users/xporium/orgs", "repos_url": "https://api.github.com/users/xporium/repos", "events_url": "https://api.github.com/users/xporium/events{/privacy}", "received_events_url": "https://api.github.com/users/xporium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-14T12:41:46Z", "updated_at": "2018-11-14T14:41:20Z", "closed_at": "2018-11-14T14:41:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello All,\r\n\r\n\r\n\r\nJobs do not run automatically! You must either run a job manually specifying the exact time on which the command is to be run, or use crontab:\r\n\r\n\r\nso m using crontab for autorun....\r\n\r\n\r\nI am trying to use django_crontab to run repetitive task. I want to insert\r\nrecords to database on a particular time. Also, I am in process of learning\r\ndjango hence I m trying to reach every aspect of django.\r\n\r\nThe issue i am facing i m able to configure django_crontab but its not able\r\nto find cron.py. I am using windows 10 and i believe it must be something\r\nelse for windows\r\n\r\nCRONJOBS = [\r\n     ('*/2 * * * *', 'test.test_app.cron.my_scheduled_job')\r\n]\r\n\r\ntestis my project directory.\r\n\r\nWhen I run the command manage.py crontab add it gives error saying \"The\r\nsystem cannot find the path specified.\"\r\n\r\nI am using Windows.\r\n\r\nPlease help..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1269", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1269/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1269/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1269/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1269", "id": 380551097, "node_id": "MDU6SXNzdWUzODA1NTEwOTc=", "number": 1269, "title": "how to run jobs as specific time?", "user": {"login": "xporium", "id": 40201510, "node_id": "MDQ6VXNlcjQwMjAxNTEw", "avatar_url": "https://avatars2.githubusercontent.com/u/40201510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xporium", "html_url": "https://github.com/xporium", "followers_url": "https://api.github.com/users/xporium/followers", "following_url": "https://api.github.com/users/xporium/following{/other_user}", "gists_url": "https://api.github.com/users/xporium/gists{/gist_id}", "starred_url": "https://api.github.com/users/xporium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xporium/subscriptions", "organizations_url": "https://api.github.com/users/xporium/orgs", "repos_url": "https://api.github.com/users/xporium/repos", "events_url": "https://api.github.com/users/xporium/events{/privacy}", "received_events_url": "https://api.github.com/users/xporium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-14T06:13:41Z", "updated_at": "2018-11-15T07:53:31Z", "closed_at": "2018-11-14T14:40:07Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "Hi,\r\n\r\nin documentations given like \"Jobs do not run automatically! You must either run a job manually specifying the exact time on which the command is to be run, or use crontab\"\r\n\r\nbut after implement logic how to run daily and hourly jobs as per given time and date(how to set time and date to run the job)?\r\n\r\nonce it run manually than it will work until application exit?\r\n\r\nThanks and your help will be very appreciable .....", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1265", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1265/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1265/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1265/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1265", "id": 377333518, "node_id": "MDU6SXNzdWUzNzczMzM1MTg=", "number": 1265, "title": "pipchecker: check_github exception", "user": {"login": "minusf", "id": 3632883, "node_id": "MDQ6VXNlcjM2MzI4ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3632883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minusf", "html_url": "https://github.com/minusf", "followers_url": "https://api.github.com/users/minusf/followers", "following_url": "https://api.github.com/users/minusf/following{/other_user}", "gists_url": "https://api.github.com/users/minusf/gists{/gist_id}", "starred_url": "https://api.github.com/users/minusf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minusf/subscriptions", "organizations_url": "https://api.github.com/users/minusf/orgs", "repos_url": "https://api.github.com/users/minusf/repos", "events_url": "https://api.github.com/users/minusf/events{/privacy}", "received_events_url": "https://api.github.com/users/minusf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 30635599, "node_id": "MDU6TGFiZWwzMDYzNTU5OQ==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/Easy%20Pickings", "name": "Easy Pickings", "color": "02e10c", "default": false, "description": null}, {"id": 77993, "node_id": "MDU6TGFiZWw3Nzk5Mw==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/bug", "name": "bug", "color": "ff0000", "default": true, "description": null}, {"id": 1003485, "node_id": "MDU6TGFiZWwxMDAzNDg1", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20help", "name": "need help", "color": "0b02e1", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}, {"id": 30635832, "node_id": "MDU6TGFiZWwzMDYzNTgzMg==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20test%20case", "name": "need test case", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-05T10:20:15Z", "updated_at": "2019-03-01T11:57:43Z", "closed_at": "2019-03-01T11:57:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n```\r\nPackage                       Version\r\n----------------------------- ----------\r\ndjango-extensions             2.1.3\r\n\r\n$ cat r.txt\r\ngit+https://github.com/jmrivas86/django-json-widget\r\n\r\n$ venv/bin/python -B manage.py pipchecker -r r.txt\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \".../venv/lib/python3.6/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \".../venv/lib/python3.6/site-packages/django/core/management/__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \".../venv/lib/python3.6/site-packages/django/core/management/base.py\", line 316, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \".../venv/lib/python3.6/site-packages/django/core/management/base.py\", line 353, in execute\r\n    output = self.handle(*args, **options)\r\n  File \".../venv/lib/python3.6/site-packages/django_extensions/management/utils.py\", line 59, in inner\r\n    ret = func(self, *args, **kwargs)\r\n  File \".../venv/lib/python3.6/site-packages/django_extensions/management/commands/pipchecker.py\", line 109, in handle\r\n    self.check_github()\r\n  File \".../venv/lib/python3.6/site-packages/django_extensions/management/commands/pipchecker.py\", line 294, in check_github\r\n    print(\"{pkg_info:40} {msg}\".format(pkg_info=pkg_info, msg=msg))\r\nTypeError: unsupported format string passed to NoneType.__format__\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1263", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1263/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1263/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1263/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1263", "id": 374195228, "node_id": "MDU6SXNzdWUzNzQxOTUyMjg=", "number": 1263, "title": "RemovedInDjango30Warning: Remove the context parameter from JSONField.from_db_value()", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-26T01:45:13Z", "updated_at": "2018-10-28T16:23:46Z", "closed_at": "2018-10-28T16:23:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This deprecation warning is shown on Django 2.1:\r\n\r\n```\r\nRemovedInDjango30Warning: Remove the context parameter from JSONField.from_db_value(). Support for it will be removed in Django 3.0.\r\n```\r\n\r\nThe solution from https://github.com/python-social-auth/social-app-django/pull/173/files looks sensible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1261", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1261/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1261/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1261/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1261", "id": 372223261, "node_id": "MDU6SXNzdWUzNzIyMjMyNjE=", "number": 1261, "title": "NOTEBOOK_ARGUMENTS settings variable does not honor --notebook-dir", "user": {"login": "dnk8n", "id": 3307753, "node_id": "MDQ6VXNlcjMzMDc3NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3307753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnk8n", "html_url": "https://github.com/dnk8n", "followers_url": "https://api.github.com/users/dnk8n/followers", "following_url": "https://api.github.com/users/dnk8n/following{/other_user}", "gists_url": "https://api.github.com/users/dnk8n/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnk8n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnk8n/subscriptions", "organizations_url": "https://api.github.com/users/dnk8n/orgs", "repos_url": "https://api.github.com/users/dnk8n/repos", "events_url": "https://api.github.com/users/dnk8n/events{/privacy}", "received_events_url": "https://api.github.com/users/dnk8n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-20T15:37:30Z", "updated_at": "2018-10-28T18:57:19Z", "closed_at": "2018-10-28T18:56:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have django extensions running in a docker container in an environment managed by pipenv.\r\n\r\nEverything runs as expected except that the notebook server runs from whatever the current working directory specified in the docker entrypoint.\r\n\r\nFor more context please see this project I started today: https://gitlab.com/dnk8n/django-veva/tree/9c79818315d41976c4cebe90c3b4e2951e39d2dd\r\n\r\nYou should be able to cd to project and `docker-compose up` which would result in a django server at http://localhost:8000 and a jupyter notebook server at http://localhost:8888 (log in by copying the token from the docker-compose logs).\r\n\r\n\r\n\r\nNormally, using conventional Jupyter I am able to overide that using the cli flag: '--notebook-dir=/path/i/want'\r\n\r\nIn the django-extensions docs I came across the NOTEBOOK_ARGUMENTS settings variable. It works for --ip and --port but does not for --notebook-dir.\r\n\r\nShould I be setting this variable elsewhere or is this a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1260", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1260/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1260/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1260/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1260", "id": 371341790, "node_id": "MDU6SXNzdWUzNzEzNDE3OTA=", "number": 1260, "title": "[regression] sqldiff sees indexes that do not exist in the sql schema", "user": {"login": "olivierdalang", "id": 1894106, "node_id": "MDQ6VXNlcjE4OTQxMDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1894106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olivierdalang", "html_url": "https://github.com/olivierdalang", "followers_url": "https://api.github.com/users/olivierdalang/followers", "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}", "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}", "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions", "organizations_url": "https://api.github.com/users/olivierdalang/orgs", "repos_url": "https://api.github.com/users/olivierdalang/repos", "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}", "received_events_url": "https://api.github.com/users/olivierdalang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-18T02:57:07Z", "updated_at": "2018-11-14T14:43:46Z", "closed_at": "2018-11-14T14:42:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi !\r\n\r\nWhen running `python manage.py sqldiff -ae`, I get some `DROP INDEX` commands for indexes that don't exist. The SQL command will then fail with `index XXX does not exist`.\r\n\r\nThis happens in master, while it didn't in 2.0.7 (see output below).\r\n\r\nI'm testing in Django 1.11.\r\n\r\nThanks !!\r\n\r\n\r\nMaster :\r\n```\r\nBEGIN;\r\n-- Application: admin\r\n-- Model: LogEntry\r\nDROP INDEX \"django_admin_log_action_flag\";\r\n-- Application: actstream\r\n-- Model: Action\r\nALTER TABLE \"actstream_action\"\r\n    ALTER \"data\" TYPE jsonb;\r\n-- Application: tastypie\r\n-- Model: ApiAccess\r\nDROP INDEX \"tastypie_apiaccess_accessed\";\r\n-- Application: base\r\n-- Model: HierarchicalKeyword\r\nDROP INDEX \"base_hierarchicalkeyword_numchild\";\r\nDROP INDEX \"base_hierarchicalkeyword_depth\";\r\n-- Application: documents\r\n-- Model: DocumentResourceLink\r\nDROP INDEX \"documents_documentresourcelink_object_id\";\r\n-- Application: services\r\n-- Model: Service\r\nDROP INDEX \"services_service_noanswer_retries\";\r\nCOMMIT;\r\n```\r\n\r\n2.0.7 :\r\n```\r\nBEGIN;\r\n-- Application: actstream\r\n-- Model: Action\r\nALTER TABLE \"actstream_action\"\r\n    ALTER \"data\" TYPE jsonb;\r\nCOMMIT;\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1256", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1256/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1256/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1256/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1256", "id": 364365658, "node_id": "MDU6SXNzdWUzNjQzNjU2NTg=", "number": 1256, "title": "AttributeError: '_thread._local' object has no attribute 'wsgi_tb'", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-27T08:44:30Z", "updated_at": "2018-10-04T03:23:09Z", "closed_at": "2018-09-28T03:19:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use `django-cookies` create the project. And this is `Debug=True` will raises this error.\r\n\r\n```bash\r\ndjango_1        | Traceback (most recent call last):\r\ndjango_1        |   File \"/usr/local/lib/python3.6/site-packages/django/contrib/staticfiles/handlers.py\", line 66, in __call__\r\ndjango_1        |     return self.application(environ, start_response)\r\ndjango_1        |   File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/wsgi.py\", line 146, in __call__\r\ndjango_1        |     response = self.get_response(request)\r\ndjango_1        |   File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\", line 81, in get_response\r\ndjango_1        |     response = self._middleware_chain(request)\r\ndjango_1        |   File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 37, in inner\r\ndjango_1        |     response = response_for_exception(request, exc)\r\ndjango_1        |   File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 87, in response_for_exception\r\ndjango_1        |     response = handle_uncaught_exception(request, get_resolver(get_urlconf()), sys.exc_info())\r\ndjango_1        |   File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 122, in handle_uncaught_exception\r\ndjango_1        |     return debug.technical_500_response(request, *exc_info)\r\ndjango_1        |   File \"/usr/local/lib/python3.6/site-packages/django_extensions/management/technical_response.py\", line 31, in null_technical_500_response\r\ndjango_1        |     elif tld.wsgi_tb:\r\ndjango_1        | AttributeError: '_thread._local' object has no attribute 'wsgi_tb'\r\n```\r\n\r\nIs it related to `django-extensions`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1246", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1246/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1246/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1246/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1246", "id": 356263616, "node_id": "MDU6SXNzdWUzNTYyNjM2MTY=", "number": 1246, "title": "Regression with Python 2 and graph_models", "user": {"login": "vstoykov", "id": 902381, "node_id": "MDQ6VXNlcjkwMjM4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/902381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vstoykov", "html_url": "https://github.com/vstoykov", "followers_url": "https://api.github.com/users/vstoykov/followers", "following_url": "https://api.github.com/users/vstoykov/following{/other_user}", "gists_url": "https://api.github.com/users/vstoykov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vstoykov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vstoykov/subscriptions", "organizations_url": "https://api.github.com/users/vstoykov/orgs", "repos_url": "https://api.github.com/users/vstoykov/repos", "events_url": "https://api.github.com/users/vstoykov/events{/privacy}", "received_events_url": "https://api.github.com/users/vstoykov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-02T08:36:24Z", "updated_at": "2018-09-05T21:50:56Z", "closed_at": "2018-09-05T21:50:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After merging #877 there is regression in `graph_models` command when all of the following conditions are met:\r\n\r\n- running on Python 2;\r\n- there are `verbose_name` set for some `ForeignKey`/`ManyToManyFIeld` which contains non ASCII characters;\r\n- `graph_models` is executed with `--verbose-names` argument.\r\n\r\nI will try to prepare a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1245", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1245/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1245/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1245/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1245", "id": 354411108, "node_id": "MDU6SXNzdWUzNTQ0MTExMDg=", "number": 1245, "title": "`populate_from` incorrectly rejects tuples", "user": {"login": "wlonk", "id": 925990, "node_id": "MDQ6VXNlcjkyNTk5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/925990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wlonk", "html_url": "https://github.com/wlonk", "followers_url": "https://api.github.com/users/wlonk/followers", "following_url": "https://api.github.com/users/wlonk/following{/other_user}", "gists_url": "https://api.github.com/users/wlonk/gists{/gist_id}", "starred_url": "https://api.github.com/users/wlonk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wlonk/subscriptions", "organizations_url": "https://api.github.com/users/wlonk/orgs", "repos_url": "https://api.github.com/users/wlonk/repos", "events_url": "https://api.github.com/users/wlonk/events{/privacy}", "received_events_url": "https://api.github.com/users/wlonk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-27T17:43:17Z", "updated_at": "2018-08-27T19:35:54Z", "closed_at": "2018-08-27T19:35:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "See the tail end of this stacktrace:\r\n\r\n```\r\n  File \"/usr/local/lib/python3.6/site-packages/organizations/migrations/0002_model_update.py\", line 17, in Migration\r\n    field=organizations.fields.SlugField(blank=True, editable=False, help_text='The name in all lowercase, suitable for URL identification', max_length=200, populate_from=('name',), unique=True),\r\n  File \"/usr/local/lib/python3.6/site-packages/django_extensions/db/fields/__init__.py\", line 116, in __init__\r\n    raise TypeError(\"'populate_from' must be str or list[str] found `%s`\" % populate_from)\r\nTypeError: 'populate_from' must be str or list[str] found `('name',)`\r\n```\r\n\r\nPull-request incoming.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1240", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1240/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1240/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1240/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1240", "id": 352417985, "node_id": "MDU6SXNzdWUzNTI0MTc5ODU=", "number": 1240, "title": "Preload initial commands in config. ", "user": {"login": "zelds", "id": 16455334, "node_id": "MDQ6VXNlcjE2NDU1MzM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16455334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zelds", "html_url": "https://github.com/zelds", "followers_url": "https://api.github.com/users/zelds/followers", "following_url": "https://api.github.com/users/zelds/following{/other_user}", "gists_url": "https://api.github.com/users/zelds/gists{/gist_id}", "starred_url": "https://api.github.com/users/zelds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zelds/subscriptions", "organizations_url": "https://api.github.com/users/zelds/orgs", "repos_url": "https://api.github.com/users/zelds/repos", "events_url": "https://api.github.com/users/zelds/events{/privacy}", "received_events_url": "https://api.github.com/users/zelds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-21T07:31:19Z", "updated_at": "2019-07-19T02:50:07Z", "closed_at": "2018-08-21T12:04:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. Is there the way to run commands on every shell_plus init ?\r\nThanks.\r\nExample:\r\n```\r\n%load_ext autoreload\r\n%autoreload 2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1235", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1235/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1235/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1235/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1235", "id": 348656253, "node_id": "MDU6SXNzdWUzNDg2NTYyNTM=", "number": 1235, "title": "TypeError: 'str' does not support the buffer interface in get_slug_fields() - AutoSlugField", "user": {"login": "behconsci", "id": 10358323, "node_id": "MDQ6VXNlcjEwMzU4MzIz", "avatar_url": "https://avatars0.githubusercontent.com/u/10358323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/behconsci", "html_url": "https://github.com/behconsci", "followers_url": "https://api.github.com/users/behconsci/followers", "following_url": "https://api.github.com/users/behconsci/following{/other_user}", "gists_url": "https://api.github.com/users/behconsci/gists{/gist_id}", "starred_url": "https://api.github.com/users/behconsci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/behconsci/subscriptions", "organizations_url": "https://api.github.com/users/behconsci/orgs", "repos_url": "https://api.github.com/users/behconsci/repos", "events_url": "https://api.github.com/users/behconsci/events{/privacy}", "received_events_url": "https://api.github.com/users/behconsci/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 503016138, "node_id": "MDU6TGFiZWw1MDMwMTYxMzg=", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/Need%20Reproducable%20Example", "name": "Need Reproducable Example", "color": "bfd4f2", "default": false, "description": null}, {"id": 77993, "node_id": "MDU6TGFiZWw3Nzk5Mw==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/bug", "name": "bug", "color": "ff0000", "default": true, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}, {"id": 30635832, "node_id": "MDU6TGFiZWwzMDYzNTgzMg==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20test%20case", "name": "need test case", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-08-08T09:57:30Z", "updated_at": "2018-08-20T09:26:12Z", "closed_at": "2018-08-20T09:26:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/10358323/43830576-e6f56dde-9b01-11e8-920b-b22dfe0e65ee.png)\r\n\r\nI am using \r\n\r\nvagrant\r\npython3.4. \r\ndjango 1.11\r\n\r\nI tried with all django-extension versions starting from 1.9.9. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1230", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1230/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1230/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1230/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1230", "id": 346826816, "node_id": "MDU6SXNzdWUzNDY4MjY4MTY=", "number": 1230, "title": "SyntaxError: invalid syntax in dumpscript", "user": {"login": "martinvol", "id": 698027, "node_id": "MDQ6VXNlcjY5ODAyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/698027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinvol", "html_url": "https://github.com/martinvol", "followers_url": "https://api.github.com/users/martinvol/followers", "following_url": "https://api.github.com/users/martinvol/following{/other_user}", "gists_url": "https://api.github.com/users/martinvol/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinvol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinvol/subscriptions", "organizations_url": "https://api.github.com/users/martinvol/orgs", "repos_url": "https://api.github.com/users/martinvol/repos", "events_url": "https://api.github.com/users/martinvol/events{/privacy}", "received_events_url": "https://api.github.com/users/martinvol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 30635599, "node_id": "MDU6TGFiZWwzMDYzNTU5OQ==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/Easy%20Pickings", "name": "Easy Pickings", "color": "02e10c", "default": false, "description": null}, {"id": 77993, "node_id": "MDU6TGFiZWw3Nzk5Mw==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/bug", "name": "bug", "color": "ff0000", "default": true, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-02T01:34:14Z", "updated_at": "2019-12-05T08:48:45Z", "closed_at": "2019-12-05T08:48:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "After generating a dumpscrip, I called it somewhere else and I got a syntax error. I'm aware this is not the way the documentation suggest for running the script, but the syntax error shouldn't be there anyway, I didn't try but it would also fail doing `./manage.py runscript out`\r\n\r\n`python out.py`\r\n\r\n```\r\n  File \"out.txt\", line 136\r\n    pictures_picture_3.owner_user =  importer.locate_object(User, \"id\", User, \"id\", 1, {'id': 1, 'password': 'XXXX', 'last_login': datetime.datetime(2018, 7, 30, 3, 19, 37, 885214, tzinfo=<UTC>), 'is_superuser': True, 'first_name': 'Mart\u00edn', 'last_name': 'Volpe', 'is_staff': True, 'is_active': True, 'date_joined': datetime.datetime(2010, 1, 11, 21, 45, 36, tzinfo=<UTC>), 'email': 'XX@gmail.com', 'slug': 'martinvol'} )\r\n                                                                                                                                                   ^\r\nSyntaxError: invalid syntax\r\n\r\n```\r\n\r\nThe error is with `tzinfo=<UTC>`\r\n\r\nDjango 2.0.7\r\ndjango-extensions 2.0.7\r\nPyton 3.6.4\r\n\r\nIf you are struggling with the error yourself, you can walk around generating the user manually (if it doesn't exist yet) and replace \r\n\r\n`owner_user =  importer.locate_object(User, \"id\", User, \"id\", 1, {'id': 1, 'password': 'XXXX', 'last_login': datetime.datetime(2018, 7, 30, 3, 19, 37, 885214, tzinfo=<UTC>), 'is_superuser': True, 'first_name': 'Mart\u00edn', 'last_name': 'Volpe', 'is_staff': True, 'is_active': True, 'date_joined': datetime.datetime(2010, 1, 11, 21, 45, 36, tzinfo=<UTC>), 'email': 'XX@gmail.com', 'slug': 'martinvol'} ) `\r\n\r\nwith:\r\n\r\n`owner_user =  User.objects.get(email='XX@gmail.com')`\r\n\r\nBest,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1229", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1229/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1229/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1229/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1229", "id": 346328176, "node_id": "MDU6SXNzdWUzNDYzMjgxNzY=", "number": 1229, "title": "Excluded models displayed as an underscore", "user": {"login": "donkirkby", "id": 1639148, "node_id": "MDQ6VXNlcjE2MzkxNDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1639148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donkirkby", "html_url": "https://github.com/donkirkby", "followers_url": "https://api.github.com/users/donkirkby/followers", "following_url": "https://api.github.com/users/donkirkby/following{/other_user}", "gists_url": "https://api.github.com/users/donkirkby/gists{/gist_id}", "starred_url": "https://api.github.com/users/donkirkby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donkirkby/subscriptions", "organizations_url": "https://api.github.com/users/donkirkby/orgs", "repos_url": "https://api.github.com/users/donkirkby/repos", "events_url": "https://api.github.com/users/donkirkby/events{/privacy}", "received_events_url": "https://api.github.com/users/donkirkby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77993, "node_id": "MDU6TGFiZWw3Nzk5Mw==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/bug", "name": "bug", "color": "ff0000", "default": true, "description": null}, {"id": 1003485, "node_id": "MDU6TGFiZWwxMDAzNDg1", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20help", "name": "need help", "color": "0b02e1", "default": false, "description": null}, {"id": 1003471, "node_id": "MDU6TGFiZWwxMDAzNDcx", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20patch", "name": "need patch", "color": "d7e102", "default": false, "description": null}, {"id": 30635832, "node_id": "MDU6TGFiZWwzMDYzNTgzMg==", "url": "https://api.github.com/repos/django-extensions/django-extensions/labels/need%20test%20case", "name": "need test case", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-31T19:33:40Z", "updated_at": "2018-11-08T09:01:39Z", "closed_at": "2018-11-08T09:01:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks for building the `graph_models` command, we find it very useful for our documentation. Unfortunately, we noticed a problem after we upgraded to a more recent version. I expected that excluding a model from `graph_models` would completely hide it from the graph. Instead, all my hidden models appear as an underscore when they are referenced by visible models.\r\n\r\nHere is a simple example:\r\n\r\n    # container/models.py\r\n    from django.db import models\r\n    \r\n    \r\n    class Foo(models.Model):\r\n        name = models.CharField(max_length=30)\r\n    \r\n    \r\n    class Bar(models.Model):\r\n        name = models.CharField(max_length=30)\r\n        foo = models.ForeignKey(Foo)\r\n\r\nI graph that with this command:\r\n\r\n    ./manage.py graph_models --pygraphviz container -o container.png\r\n\r\nThat produces the expected graph:\r\n\r\n![good container]\r\n\r\nWhen I exclude the `Foo` model with this command:\r\n\r\n    ./manage.py graph_models --pygraphviz container -o container.png --exclude-models Foo\r\n\r\nThe model is replaced by an underscore. If the model is referenced by many other models, they are all linking back to this underscore.\r\n\r\n![underscore container]\r\n\r\nIs there a workaround for this? My current plan is to edit the dot file after it's generated, but I'd appreciate an easier alternative.\r\n\r\nI tested this with django extensions 2.1.0.\r\n\r\n[good container]: https://user-images.githubusercontent.com/1639148/43482308-2d2ab91c-94bd-11e8-8055-334cb9d0d54e.png\r\n[underscore container]: https://user-images.githubusercontent.com/1639148/43482448-929630ba-94bd-11e8-9e9e-a0d21f9b191f.png", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1227", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1227/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1227/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1227/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1227", "id": 345736102, "node_id": "MDU6SXNzdWUzNDU3MzYxMDI=", "number": 1227, "title": "There is no way to override created field while using .create", "user": {"login": "karankurani", "id": 443145, "node_id": "MDQ6VXNlcjQ0MzE0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/443145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karankurani", "html_url": "https://github.com/karankurani", "followers_url": "https://api.github.com/users/karankurani/followers", "following_url": "https://api.github.com/users/karankurani/following{/other_user}", "gists_url": "https://api.github.com/users/karankurani/gists{/gist_id}", "starred_url": "https://api.github.com/users/karankurani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karankurani/subscriptions", "organizations_url": "https://api.github.com/users/karankurani/orgs", "repos_url": "https://api.github.com/users/karankurani/repos", "events_url": "https://api.github.com/users/karankurani/events{/privacy}", "received_events_url": "https://api.github.com/users/karankurani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-30T12:26:54Z", "updated_at": "2018-08-02T06:32:25Z", "closed_at": "2018-08-02T06:32:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "This happened when the library went from `1.5.5` to `1.5.6`.\r\n\r\nCreated field was earlier allowed to be overriden while calling .create() - so it will only pick the current time if the field wasn't set.\r\n\r\nOnce the use of `auto_now_add` was incorporated it caused this feature to stop working. Hence we cannot override the created field while creating an object without doing lot of refactoring of existing code. \r\n\r\nFrom the [documentation](https://docs.djangoproject.com/en/2.0/ref/models/fields/#django.db.models.DateField.auto_now_add) -\r\n\r\n`Note that the current date is always used; it\u2019s not just a default value that you can override. So even if you set a value for this field when creating the object, it will be ignored. `\r\n\r\nIs there any way to fix this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1225", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1225/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1225/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1225/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1225", "id": 344338612, "node_id": "MDU6SXNzdWUzNDQzMzg2MTI=", "number": 1225, "title": "When SoftDeletableModel is used as base class for a model, default manager is not as expected.", "user": {"login": "emihir0", "id": 5638375, "node_id": "MDQ6VXNlcjU2MzgzNzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5638375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emihir0", "html_url": "https://github.com/emihir0", "followers_url": "https://api.github.com/users/emihir0/followers", "following_url": "https://api.github.com/users/emihir0/following{/other_user}", "gists_url": "https://api.github.com/users/emihir0/gists{/gist_id}", "starred_url": "https://api.github.com/users/emihir0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emihir0/subscriptions", "organizations_url": "https://api.github.com/users/emihir0/orgs", "repos_url": "https://api.github.com/users/emihir0/repos", "events_url": "https://api.github.com/users/emihir0/events{/privacy}", "received_events_url": "https://api.github.com/users/emihir0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-25T08:14:26Z", "updated_at": "2018-07-25T08:29:05Z", "closed_at": "2018-07-25T08:28:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nLet's have a look at this short code:\r\n\r\n```\r\nfrom django.db import models\r\nfrom model_utils.models import SoftDeletableModel\r\n\r\nclass MyModel(SoftDeletableModel):\r\n   # other arbitrary fields\r\n    including_removed = models.Manager()\r\n```\r\n\r\nOne would expect that the default manager is `objects` from `SoftDeletableModel`, that is, by default the objects that are retrieved do not include the softly deleted models. This is not the case, however, because `including_removed` is the one that is encountered [first](https://docs.djangoproject.com/en/2.0/topics/db/managers/#django.db.models.Model._default_manager) as it is declared directly in the class itself.\r\n\r\nWhen I put `default_manager_name` into class Meta, ie:\r\n\r\n```\r\nclass Meta:\r\n    default_manager_name = 'objects'\r\n```\r\n\r\nThen this does not pass migrations because `MyModel has no manager named 'objects'`. I have no idea why this happens. I also tried putting the `objects` Manager directly into the `MyModel` above `include_deleted` yet it still couldn't find it. \r\n\r\nI think the expected behaviour is for `default_manager` to be `objects` when `SoftDeletableModel` is used. Even if the community might not agree it should be possible to set the `default_manager` to `objects` through Meta class, but right now it does not work.\r\n\r\nAny idea?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1224", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1224/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1224/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1224/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1224", "id": 343108648, "node_id": "MDU6SXNzdWUzNDMxMDg2NDg=", "number": 1224, "title": "[Suggested feature] Create a CharNullField for allowing unique nullable CharFields", "user": {"login": "YPCrumble", "id": 12019216, "node_id": "MDQ6VXNlcjEyMDE5MjE2", "avatar_url": "https://avatars2.githubusercontent.com/u/12019216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YPCrumble", "html_url": "https://github.com/YPCrumble", "followers_url": "https://api.github.com/users/YPCrumble/followers", "following_url": "https://api.github.com/users/YPCrumble/following{/other_user}", "gists_url": "https://api.github.com/users/YPCrumble/gists{/gist_id}", "starred_url": "https://api.github.com/users/YPCrumble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YPCrumble/subscriptions", "organizations_url": "https://api.github.com/users/YPCrumble/orgs", "repos_url": "https://api.github.com/users/YPCrumble/repos", "events_url": "https://api.github.com/users/YPCrumble/events{/privacy}", "received_events_url": "https://api.github.com/users/YPCrumble/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-20T13:31:11Z", "updated_at": "2019-05-10T13:51:42Z", "closed_at": "2018-08-01T15:14:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm looking to add a CharField to my models that is unique if it is set, but does not need to be set.\r\n\r\n[This answer on StackOverflow](https://stackoverflow.com/a/1934764/2532070) suggests converting the CharField blank value to null to achieve this, via a `CharNullField`.\r\n\r\nI'd be happy to create a django-extension for this field if it's something the maintainers would find useful?\r\n\r\nThanks for any feedback/suggestions, and thanks for maintaining this great library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1221", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1221/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1221/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1221/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1221", "id": 342761200, "node_id": "MDU6SXNzdWUzNDI3NjEyMDA=", "number": 1221, "title": "selector-search.gif missing", "user": {"login": "bctiemann", "id": 5113493, "node_id": "MDQ6VXNlcjUxMTM0OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5113493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bctiemann", "html_url": "https://github.com/bctiemann", "followers_url": "https://api.github.com/users/bctiemann/followers", "following_url": "https://api.github.com/users/bctiemann/following{/other_user}", "gists_url": "https://api.github.com/users/bctiemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/bctiemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bctiemann/subscriptions", "organizations_url": "https://api.github.com/users/bctiemann/orgs", "repos_url": "https://api.github.com/users/bctiemann/repos", "events_url": "https://api.github.com/users/bctiemann/events{/privacy}", "received_events_url": "https://api.github.com/users/bctiemann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-19T14:47:40Z", "updated_at": "2018-08-07T22:29:17Z", "closed_at": "2018-08-07T22:29:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "widgets/foreignkey_searchinput.html has the following:\r\n\r\n    <img src=\"{% static \"admin/img/selector-search.gif\" %}\" width=\"16\" height=\"16\" alt=\"{% trans \"Lookup\" %}\" />\r\n\r\nBut there is no such image in the statics.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1220", "repository_url": "https://api.github.com/repos/django-extensions/django-extensions", "labels_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1220/labels{/name}", "comments_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1220/comments", "events_url": "https://api.github.com/repos/django-extensions/django-extensions/issues/1220/events", "html_url": "https://github.com/django-extensions/django-extensions/issues/1220", "id": 342697372, "node_id": "MDU6SXNzdWUzNDI2OTczNzI=", "number": 1220, "title": "2.0.8 breaks ForeignKeyAutocompleteAdmin", "user": {"login": "bctiemann", "id": 5113493, "node_id": "MDQ6VXNlcjUxMTM0OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5113493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bctiemann", "html_url": "https://github.com/bctiemann", "followers_url": "https://api.github.com/users/bctiemann/followers", "following_url": "https://api.github.com/users/bctiemann/following{/other_user}", "gists_url": "https://api.github.com/users/bctiemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/bctiemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bctiemann/subscriptions", "organizations_url": "https://api.github.com/users/bctiemann/orgs", "repos_url": "https://api.github.com/users/bctiemann/repos", "events_url": "https://api.github.com/users/bctiemann/events{/privacy}", "received_events_url": "https://api.github.com/users/bctiemann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-19T11:56:12Z", "updated_at": "2018-09-08T18:24:37Z", "closed_at": "2018-09-08T18:24:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a model (SocialMediaIdentity) with ForeignKeyAutocompleteAdmin handling the \"user\" field, which is a ForeignKey to User:\r\n\r\n    related_search_fields = {\r\n        'user': ('username', 'email',),\r\n    }\r\n\r\nUpgrading from 2.0.7 to 2.0.8 breaks this. Digging through I find that the issue is that model_name has the value \"socialmediaidentity\" (i.e. the model for which I'm using ForeignKeyAutocompleteAdmin), whereas it should be \"user\". Thus it looks for username__icontains in the SocialMediaIdentity model instead of in the User model.\r\n", "performed_via_github_app": null, "score": 1.0}]}