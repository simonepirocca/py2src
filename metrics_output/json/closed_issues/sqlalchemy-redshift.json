{"total_count": 52, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/203", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/203/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/203/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/203", "id": 627187022, "node_id": "MDU6SXNzdWU2MjcxODcwMjI=", "number": 203, "title": "Cannot create Redshift table in Apache Superset through sqlalchemy-redshift", "user": {"login": "larshelge", "id": 908206, "node_id": "MDQ6VXNlcjkwODIwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/908206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larshelge", "html_url": "https://github.com/larshelge", "followers_url": "https://api.github.com/users/larshelge/followers", "following_url": "https://api.github.com/users/larshelge/following{/other_user}", "gists_url": "https://api.github.com/users/larshelge/gists{/gist_id}", "starred_url": "https://api.github.com/users/larshelge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larshelge/subscriptions", "organizations_url": "https://api.github.com/users/larshelge/orgs", "repos_url": "https://api.github.com/users/larshelge/repos", "events_url": "https://api.github.com/users/larshelge/events{/privacy}", "received_events_url": "https://api.github.com/users/larshelge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-29T11:05:57Z", "updated_at": "2020-06-05T13:27:12Z", "closed_at": "2020-06-05T13:27:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, not sure if this is the right place to report this issue, let me know if I should report somewhere else.\r\n\r\n## Description\r\n\r\nI am trying to create a Redshift table in Apache Superset. I have first created the Redshift database, and verified that the connection is good. I have verified that the schema and the table I am creating actually exists in the Redshift cluster.\r\n\r\nSeems related to #138.\r\n\r\n## Expected behavior\r\n\r\nI want the creation of the Redshift table to be successful.\r\n\r\n## Versions\r\n\r\nsqlalchemy-redshift: 0.7.8\r\nsqlalcemy: 1.3.17\r\nsuperset: 0.36.0\r\npip: 20.1.1\r\npython: 3.6.9\r\nos: Ubuntu 18.04\r\n\r\n## Error logs\r\n\r\nAfter creating the table in Superset, I get the following error in the logs:\r\n\r\n```\r\nGot an error in pre_add for public.dhis_dev\r\nTraceback (most recent call last):\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/superset/connectors/sqla/views.py\", line 389, in pre_add\r\n    table.get_sqla_table_object()\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/superset/connectors/sqla/models.py\", line 1074, in get_sqla_table_object\r\n    return self.database.get_table(self.table_name, schema=self.schema)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/superset/models/core.py\", line 580, in get_table\r\n    autoload_with=self.get_sqla_engine(),\r\n  File \"<string>\", line 2, in __new__\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/util/deprecations.py\", line 139, in warned\r\n    return fn(*args, **kwargs)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/sql/schema.py\", line 559, in __new__\r\n    metadata._remove_table(name, schema)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py\", line 69, in __exit__\r\n    exc_value, with_traceback=exc_tb,\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 178, in raise_\r\n    raise exception\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/sql/schema.py\", line 554, in __new__\r\n    table._init(name, metadata, *args, **kw)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/sql/schema.py\", line 648, in _init\r\n    resolve_fks=resolve_fks,\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/sql/schema.py\", line 672, in _autoload\r\n    _extend_on=_extend_on,\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 2221, in run_callable\r\n    return conn.run_callable(callable_, *args, **kwargs)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1660, in run_callable\r\n    return callable_(self, *args, **kwargs)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 467, in reflecttable\r\n    table, include_columns, exclude_columns, resolve_fks, **opts\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/reflection.py\", line 666, in reflecttable\r\n    table_name, schema, **table.dialect_kwargs\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/reflection.py\", line 392, in get_columns\r\n    self.bind, table_name, schema, info_cache=self.info_cache, **kw\r\n  File \"<string>\", line 2, in get_columns\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/reflection.py\", line 52, in cache\r\n    ret = fn(self, con, *args, **kw)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy_redshift/dialect.py\", line 461, in get_columns\r\n    comment=col.comment)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy_redshift/dialect.py\", line 664, in _get_column_info\r\n    **kw\r\nTypeError: _get_column_info() missing 1 required positional argument: 'generated'\r\nERROR:superset.connectors.sqla.views:Got an error in pre_add for public.dhis_dev\r\nTraceback (most recent call last):\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/superset/connectors/sqla/views.py\", line 389, in pre_add\r\n    table.get_sqla_table_object()\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/superset/connectors/sqla/models.py\", line 1074, in get_sqla_table_object\r\n    return self.database.get_table(self.table_name, schema=self.schema)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/superset/models/core.py\", line 580, in get_table\r\n    autoload_with=self.get_sqla_engine(),\r\n  File \"<string>\", line 2, in __new__\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/util/deprecations.py\", line 139, in warned\r\n    return fn(*args, **kwargs)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/sql/schema.py\", line 559, in __new__\r\n    metadata._remove_table(name, schema)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py\", line 69, in __exit__\r\n    exc_value, with_traceback=exc_tb,\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 178, in raise_\r\n    raise exception\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/sql/schema.py\", line 554, in __new__\r\n    table._init(name, metadata, *args, **kw)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/sql/schema.py\", line 648, in _init\r\n    resolve_fks=resolve_fks,\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/sql/schema.py\", line 672, in _autoload\r\n    _extend_on=_extend_on,\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 2221, in run_callable\r\n    return conn.run_callable(callable_, *args, **kwargs)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1660, in run_callable\r\n    return callable_(self, *args, **kwargs)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 467, in reflecttable\r\n    table, include_columns, exclude_columns, resolve_fks, **opts\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/reflection.py\", line 666, in reflecttable\r\n    table_name, schema, **table.dialect_kwargs\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/reflection.py\", line 392, in get_columns\r\n    self.bind, table_name, schema, info_cache=self.info_cache, **kw\r\n  File \"<string>\", line 2, in get_columns\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy/engine/reflection.py\", line 52, in cache\r\n    ret = fn(self, con, *args, **kw)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy_redshift/dialect.py\", line 461, in get_columns\r\n    comment=col.comment)\r\n  File \"/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/sqlalchemy_redshift/dialect.py\", line 664, in _get_column_info\r\n    **kw\r\nTypeError: _get_column_info() missing 1 required positional argument: 'generated'\r\n/home/lars/dev/lib/superset/venv/lib/python3.6/site-packages/flask_appbuilder/fields.py:182: UserWarning: allow_blank=True does not do anything for QuerySelectMultipleField.\r\n  \"allow_blank=True does not do anything for QuerySelectMultipleField.\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/201", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/201/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/201/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/201", "id": 623317268, "node_id": "MDU6SXNzdWU2MjMzMTcyNjg=", "number": 201, "title": "Create Materialized View with `table_attributes` configurable", "user": {"login": "ewengillies", "id": 5664063, "node_id": "MDQ6VXNlcjU2NjQwNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5664063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ewengillies", "html_url": "https://github.com/ewengillies", "followers_url": "https://api.github.com/users/ewengillies/followers", "following_url": "https://api.github.com/users/ewengillies/following{/other_user}", "gists_url": "https://api.github.com/users/ewengillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/ewengillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ewengillies/subscriptions", "organizations_url": "https://api.github.com/users/ewengillies/orgs", "repos_url": "https://api.github.com/users/ewengillies/repos", "events_url": "https://api.github.com/users/ewengillies/events{/privacy}", "received_events_url": "https://api.github.com/users/ewengillies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-22T16:12:56Z", "updated_at": "2020-05-27T12:48:51Z", "closed_at": "2020-05-27T12:48:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi developers,\r\n\r\nWe've been using `sqlalchemy-redshift` for some time at my company, its great!\r\n\r\nSpecifically, we use it conjunction with [`sqlalchemy_utils.view`](https://github.com/kvesteri/sqlalchemy-utils/blob/master/sqlalchemy_utils/view.py) to create views on-the-fly.\r\n\r\nLate last year, Redshift started supporting materialized views, excitingly with the option of specifying a dist style/key and/or sort keys.  See here:\r\n\r\nhttps://docs.aws.amazon.com/redshift/latest/dg/materialized-view-create-sql-command.html\r\n\r\nI think it'd be a neat feature to add a view-component to `sqlalchemy-redshift` so that we can have a function like:\r\n\r\n```python\r\ndef create_materialized_view(\r\n    name,\r\n    selectable,\r\n    table_attributes=None\r\n    indexes=None,\r\n    metadata=None,\r\n    aliases=None\r\n)\r\n```\r\n\r\nI'd be happy to implement such a feature if there is interest from the maintainers.  What are the thoughts on including this here?  If not, I can always write a new library, `sqlalchemy-redshift-views`, but I thought it might fit in the scope of this library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/196", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/196/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/196/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/196", "id": 598480205, "node_id": "MDU6SXNzdWU1OTg0ODAyMDU=", "number": 196, "title": "Conda (conda-forge) outdated", "user": {"login": "igorborgest", "id": 2163472, "node_id": "MDQ6VXNlcjIxNjM0NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2163472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorborgest", "html_url": "https://github.com/igorborgest", "followers_url": "https://api.github.com/users/igorborgest/followers", "following_url": "https://api.github.com/users/igorborgest/following{/other_user}", "gists_url": "https://api.github.com/users/igorborgest/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorborgest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorborgest/subscriptions", "organizations_url": "https://api.github.com/users/igorborgest/orgs", "repos_url": "https://api.github.com/users/igorborgest/repos", "events_url": "https://api.github.com/users/igorborgest/events{/privacy}", "received_events_url": "https://api.github.com/users/igorborgest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-12T13:05:39Z", "updated_at": "2020-04-29T14:10:55Z", "closed_at": "2020-04-29T14:10:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Congrats for the great job you have been doing!\r\n\r\nI would like to request the update of the package on the conda-forge, the last version available there is `0.7.3`.\r\n\r\nconda-forge: https://anaconda.org/conda-forge/sqlalchemy-redshift\r\nconda-forge-repo: https://github.com/conda-forge/sqlalchemy-redshift-feedstock\r\n\r\nP.S. As project owner you could ask privilegies on the repo and help to make new version available sooner.\r\n\r\nP.P.S. Also posted on https://github.com/conda-forge/sqlalchemy-redshift-feedstock/issues/10", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/195", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/195/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/195/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/195", "id": 597363195, "node_id": "MDU6SXNzdWU1OTczNjMxOTU=", "number": 195, "title": "Redshift Reflection", "user": {"login": "bshinnebarger", "id": 544341, "node_id": "MDQ6VXNlcjU0NDM0MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/544341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bshinnebarger", "html_url": "https://github.com/bshinnebarger", "followers_url": "https://api.github.com/users/bshinnebarger/followers", "following_url": "https://api.github.com/users/bshinnebarger/following{/other_user}", "gists_url": "https://api.github.com/users/bshinnebarger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bshinnebarger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bshinnebarger/subscriptions", "organizations_url": "https://api.github.com/users/bshinnebarger/orgs", "repos_url": "https://api.github.com/users/bshinnebarger/repos", "events_url": "https://api.github.com/users/bshinnebarger/events{/privacy}", "received_events_url": "https://api.github.com/users/bshinnebarger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2020-04-09T15:25:54Z", "updated_at": "2020-06-26T13:24:33Z", "closed_at": "2020-05-29T13:28:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Noticed what I think is an issue similar to what was resolved in 0.7.1\r\nhttps://sqlalchemy-redshift.readthedocs.io/en/latest/#id1\r\n\r\nhttps://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/138\r\n\r\nWhere reflection is failing in the same area due to support for generated columns being added in this change\r\n\r\nhttps://docs.sqlalchemy.org/en/13/changelog/changelog_13.html#change-1.3.11\r\n\r\nWhen I changed my environment to sqlalchemy==1.3.10 the issue went away, so I think I'm on the right track", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/191", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/191/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/191/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/191", "id": 561330513, "node_id": "MDU6SXNzdWU1NjEzMzA1MTM=", "number": 191, "title": "Unable to change column comment with Alembic", "user": {"login": "eeshugerman", "id": 25518211, "node_id": "MDQ6VXNlcjI1NTE4MjEx", "avatar_url": "https://avatars3.githubusercontent.com/u/25518211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eeshugerman", "html_url": "https://github.com/eeshugerman", "followers_url": "https://api.github.com/users/eeshugerman/followers", "following_url": "https://api.github.com/users/eeshugerman/following{/other_user}", "gists_url": "https://api.github.com/users/eeshugerman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eeshugerman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eeshugerman/subscriptions", "organizations_url": "https://api.github.com/users/eeshugerman/orgs", "repos_url": "https://api.github.com/users/eeshugerman/repos", "events_url": "https://api.github.com/users/eeshugerman/events{/privacy}", "received_events_url": "https://api.github.com/users/eeshugerman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-06T23:27:59Z", "updated_at": "2020-05-05T16:14:38Z", "closed_at": "2020-05-05T16:14:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We're using sqlalchemy-redshift with Alembic, and have found that we are unable to add or change comments on columns. Creating a _new_ column with a comment works fine though.\r\n\r\nLet me know if there's any more information I can provide, or if I should open this issue with SQLAlchemy or Alembic.\r\n\r\n```python\r\nfrom alembic import op\r\n\r\nop.alter_column(\r\n    'some_table',\r\n    'some_column',\r\n    comment='my column comment',\r\n)\r\n```\r\n```\r\nsqlalchemy.exc.CompileError: <class 'alembic.ddl.base.ColumnComment'> construct has no default compilation handler.\r\n```\r\n<details>\r\n <summary>click for full traceback</summary>\r\n \r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py\", line 88, in _compiler_dispatch\r\n    meth = getter(visitor)\r\nAttributeError: 'RedshiftDDLCompiler' object has no attribute 'visit_clause'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/ext/compiler.py\", line 423, in _wrap_existing_dispatch\r\n    return existing_dispatch(element, compiler, **kw)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py\", line 90, in _compiler_dispatch\r\n    raise exc.UnsupportedCompilationError(visitor, cls)\r\nsqlalchemy.exc.UnsupportedCompilationError: Compiler <sqlalchemy_redshift.dialect.RedshiftDDLCompiler object at 0x7f2436379a20> can't render element of type <class 'sqlalchemy.sql.elements.ClauseElement'> (Background on this error at: http://sqlalche.me/e/l7de)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/elliott/.virtualenvs/dwp/bin/alembic\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/config.py\", line 573, in main\r\n    CommandLine(prog=prog).main(argv=argv)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/config.py\", line 567, in main\r\n    self.run_cmd(cfg, options)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/config.py\", line 547, in run_cmd\r\n    **dict((k, getattr(options, k, None)) for k in kwarg)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/command.py\", line 298, in upgrade\r\n    script.run_env()\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/script/base.py\", line 489, in run_env\r\n    util.load_python_file(self.dir, \"env.py\")\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/util/pyfiles.py\", line 98, in load_python_file\r\n    module = load_module_py(module_id, path)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/util/compat.py\", line 173, in load_module_py\r\n    spec.loader.exec_module(module)\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"alembic/env.py\", line 152, in <module>\r\n    run_migrations_online()\r\n  File \"alembic/env.py\", line 146, in run_migrations_online\r\n    context.run_migrations()\r\n  File \"<string>\", line 8, in run_migrations\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/runtime/environment.py\", line 846, in run_migrations\r\n    self.get_context().run_migrations(**kw)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/runtime/migration.py\", line 518, in run_migrations\r\n    step.migration_fn(**kw)\r\n  File \"/home/elliott/dwp/arthur/ltbd/alembic/versions/2020-02-06_60f608383d18_column_comment_test.py\", line 24, in upgrade\r\n    comment=\"test comment\",\r\n  File \"<string>\", line 8, in alter_column\r\n  File \"<string>\", line 3, in alter_column\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/operations/ops.py\", line 1777, in alter_column\r\n    return operations.invoke(alt)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/operations/base.py\", line 345, in invoke\r\n    return fn(self, operation)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/operations/toimpl.py\", line 56, in alter_column\r\n    **operation.kw\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/ddl/postgresql.py\", line 140, in alter_column\r\n    **kw\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/ddl/impl.py\", line 212, in alter_column\r\n    existing_comment=existing_comment,\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/alembic/ddl/impl.py\", line 134, in _exec\r\n    return conn.execute(construct, *multiparams, **params)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 988, in execute\r\n    return meth(self, multiparams, params)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py\", line 72, in _execute_on_connection\r\n    return connection._execute_ddl(self, multiparams, params)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1043, in _execute_ddl\r\n    else None,\r\n  File \"<string>\", line 1, in <lambda>\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/sql/elements.py\", line 462, in compile\r\n    return self._compiler(dialect, bind=bind, **kw)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py\", line 29, in _compiler\r\n    return dialect.ddl_compiler(dialect, self, **kw)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py\", line 319, in __init__\r\n    self.string = self.process(self.statement, **compile_kwargs)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py\", line 350, in process\r\n    return obj._compiler_dispatch(self, **kwargs)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/ext/compiler.py\", line 436, in <lambda>\r\n    lambda *arg, **kw: existing(*arg, **kw),\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/ext/compiler.py\", line 478, in __call__\r\n    return fn(element, compiler, **kw)\r\n  File \"/home/elliott/.virtualenvs/dwp/lib/python3.6/site-packages/sqlalchemy/ext/compiler.py\", line 427, in _wrap_existing_dispatch\r\n    \"compilation handler.\" % type(element)\r\nsqlalchemy.exc.CompileError: <class 'alembic.ddl.base.ColumnComment'> construct has no default compilation handler.\r\n```\r\n\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/189", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/189/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/189/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/189", "id": 558557063, "node_id": "MDU6SXNzdWU1NTg1NTcwNjM=", "number": 189, "title": "Importing ABC directly from collections was removed in Python 3.9", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-01T15:40:15Z", "updated_at": "2020-02-02T19:32:59Z", "closed_at": "2020-02-02T19:32:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/blob/fd6269d04fe7620db7e922d0675e6952a9879fc5/sqlalchemy_redshift/commands.py#L584", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/187", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/187/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/187/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/187", "id": 558324702, "node_id": "MDU6SXNzdWU1NTgzMjQ3MDI=", "number": 187, "title": "UNLOAD now supports Parquet", "user": {"login": "dargueta", "id": 620513, "node_id": "MDQ6VXNlcjYyMDUxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/620513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dargueta", "html_url": "https://github.com/dargueta", "followers_url": "https://api.github.com/users/dargueta/followers", "following_url": "https://api.github.com/users/dargueta/following{/other_user}", "gists_url": "https://api.github.com/users/dargueta/gists{/gist_id}", "starred_url": "https://api.github.com/users/dargueta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dargueta/subscriptions", "organizations_url": "https://api.github.com/users/dargueta/orgs", "repos_url": "https://api.github.com/users/dargueta/repos", "events_url": "https://api.github.com/users/dargueta/events{/privacy}", "received_events_url": "https://api.github.com/users/dargueta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-31T19:22:52Z", "updated_at": "2020-02-02T19:49:29Z", "closed_at": "2020-02-02T19:49:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of December 2019 Redshift [now supports](https://aws.amazon.com/about-aws/whats-new/2019/12/announcing-amazon-redshift-data-lake-export/) the Parquet format in the `UNLOAD` command. Currently the implementation of `UNLOAD` throws an exception if it receives anything but CSV for the export format. We need to allow Parquet now as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/181", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/181/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/181/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/181", "id": 526638138, "node_id": "MDU6SXNzdWU1MjY2MzgxMzg=", "number": 181, "title": "Type Synonyms not exported to top-level module", "user": {"login": "jcampbell", "id": 332575, "node_id": "MDQ6VXNlcjMzMjU3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/332575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcampbell", "html_url": "https://github.com/jcampbell", "followers_url": "https://api.github.com/users/jcampbell/followers", "following_url": "https://api.github.com/users/jcampbell/following{/other_user}", "gists_url": "https://api.github.com/users/jcampbell/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcampbell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcampbell/subscriptions", "organizations_url": "https://api.github.com/users/jcampbell/orgs", "repos_url": "https://api.github.com/users/jcampbell/repos", "events_url": "https://api.github.com/users/jcampbell/events{/privacy}", "received_events_url": "https://api.github.com/users/jcampbell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-21T14:42:45Z", "updated_at": "2019-11-22T17:31:01Z", "closed_at": "2019-11-22T17:31:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The sqlalchemy docs state that:\r\n\r\n> As with all SQLAlchemy dialects, all UPPERCASE types that are known to be valid with PostgreSQL are importable from the top level dialect, whether they originate from sqlalchemy.types or from the local dialect\r\n\r\nHowever, the redshift dialect currently does not allow importing known valid types. I believe the dialect should explicitly import valid redshift types to the top level so that it conforms to this standard.\r\n\r\nConcretely, I believe the following should work:\r\n`from sqlalchemy_redshift.dialect import BIGINT` (and same for all redshift types)\r\n\r\nSqlalchemy docs ref: https://docs.sqlalchemy.org/en/13/dialects/postgresql.html#postgresql-data-types", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/180", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/180/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/180/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/180", "id": 521629045, "node_id": "MDU6SXNzdWU1MjE2MjkwNDU=", "number": 180, "title": "TypeError: unhashable type: 'list' with SQLAlchemy 1.3.11", "user": {"login": "Tenzer", "id": 68696, "node_id": "MDQ6VXNlcjY4Njk2", "avatar_url": "https://avatars3.githubusercontent.com/u/68696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tenzer", "html_url": "https://github.com/Tenzer", "followers_url": "https://api.github.com/users/Tenzer/followers", "following_url": "https://api.github.com/users/Tenzer/following{/other_user}", "gists_url": "https://api.github.com/users/Tenzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tenzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tenzer/subscriptions", "organizations_url": "https://api.github.com/users/Tenzer/orgs", "repos_url": "https://api.github.com/users/Tenzer/repos", "events_url": "https://api.github.com/users/Tenzer/events{/privacy}", "received_events_url": "https://api.github.com/users/Tenzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-12T15:42:02Z", "updated_at": "2020-01-17T14:39:48Z", "closed_at": "2020-01-17T14:34:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "SQLAlchemy 1.3.11 was released on Nov 11th and when we upgraded to that we started seeing exceptions like this one:\r\n\r\n```\r\nTypeError: unhashable type: 'list'\r\n  File \"unrelated/file/path.py\", line 30, in get_table\r\n    table = sa.Table(name, metadata, schema=schema, autoload=True, autoload_with=engine)\r\n  File \"<string>\", line 2, in __new__\r\n  File \"sqlalchemy/util/deprecations.py\", line 128, in warned\r\n    return fn(*args, **kwargs)\r\n  File \"sqlalchemy/sql/schema.py\", line 506, in __new__\r\n    metadata._remove_table(name, schema)\r\n  File \"sqlalchemy/util/langhelpers.py\", line 68, in __exit__\r\n    compat.reraise(exc_type, exc_value, exc_tb)\r\n  File \"sqlalchemy/util/compat.py\", line 153, in reraise\r\n    raise value\r\n  File \"sqlalchemy/sql/schema.py\", line 501, in __new__\r\n    table._init(name, metadata, *args, **kw)\r\n  File \"sqlalchemy/sql/schema.py\", line 590, in _init\r\n    self._autoload(\r\n  File \"sqlalchemy/sql/schema.py\", line 613, in _autoload\r\n    autoload_with.run_callable(\r\n  File \"sqlalchemy/engine/base.py\", line 2163, in run_callable\r\n    return conn.run_callable(callable_, *args, **kwargs)\r\n  File \"sqlalchemy/engine/base.py\", line 1615, in run_callable\r\n    return callable_(self, *args, **kwargs)\r\n  File \"sqlalchemy/engine/default.py\", line 459, in reflecttable\r\n    return insp.reflecttable(\r\n  File \"sqlalchemy/engine/reflection.py\", line 641, in reflecttable\r\n    for col_d in self.get_columns(\r\n  File \"sqlalchemy/engine/reflection.py\", line 368, in get_columns\r\n    col_defs = self.dialect.get_columns(\r\n  File \"<string>\", line 2, in get_columns\r\n  File \"sqlalchemy/engine/reflection.py\", line 50, in cache\r\n    ret = info_cache.get(key)\r\n```\r\n\r\nI have redacted the file path in the first item in the stack trace.\r\n\r\nFrom what I can see this is related to this change: https://github.com/sqlalchemy/sqlalchemy/commit/b1103f345385ed43a11b262ff83696214c23ae51. I'm however not sure if it's a bug in SQLAlchemy itself or something that is specific to sqlalchemy-redshift, but I thought I would try here first.\r\n\r\nLet me know if there's any information you need in order to investigate this further.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/176", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/176/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/176/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/176", "id": 501681583, "node_id": "MDU6SXNzdWU1MDE2ODE1ODM=", "number": 176, "title": "0.7.4 ?", "user": {"login": "ms32035", "id": 5060473, "node_id": "MDQ6VXNlcjUwNjA0NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5060473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ms32035", "html_url": "https://github.com/ms32035", "followers_url": "https://api.github.com/users/ms32035/followers", "following_url": "https://api.github.com/users/ms32035/following{/other_user}", "gists_url": "https://api.github.com/users/ms32035/gists{/gist_id}", "starred_url": "https://api.github.com/users/ms32035/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ms32035/subscriptions", "organizations_url": "https://api.github.com/users/ms32035/orgs", "repos_url": "https://api.github.com/users/ms32035/repos", "events_url": "https://api.github.com/users/ms32035/events{/privacy}", "received_events_url": "https://api.github.com/users/ms32035/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-02T19:29:29Z", "updated_at": "2019-10-08T15:58:59Z", "closed_at": "2019-10-08T15:20:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Maybe it's time for update of reserved keywords and a new release to Pypi?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/175", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/175/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/175/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/175", "id": 485965482, "node_id": "MDU6SXNzdWU0ODU5NjU0ODI=", "number": 175, "title": "How to specify compound sortkeys?", "user": {"login": "darwinyip", "id": 3499338, "node_id": "MDQ6VXNlcjM0OTkzMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3499338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darwinyip", "html_url": "https://github.com/darwinyip", "followers_url": "https://api.github.com/users/darwinyip/followers", "following_url": "https://api.github.com/users/darwinyip/following{/other_user}", "gists_url": "https://api.github.com/users/darwinyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/darwinyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darwinyip/subscriptions", "organizations_url": "https://api.github.com/users/darwinyip/orgs", "repos_url": "https://api.github.com/users/darwinyip/repos", "events_url": "https://api.github.com/users/darwinyip/events{/privacy}", "received_events_url": "https://api.github.com/users/darwinyip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-27T18:30:13Z", "updated_at": "2020-01-17T14:32:22Z", "closed_at": "2020-01-17T14:32:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since there is a `redshift_interleaved_sortkey=[]`, is there a way to do `redshift_compound_sortkey=[]`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/169", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/169/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/169/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/169", "id": 444085065, "node_id": "MDU6SXNzdWU0NDQwODUwNjU=", "number": 169, "title": "Support for CSV format in UNLOAD", "user": {"login": "mheilman", "id": 181744, "node_id": "MDQ6VXNlcjE4MTc0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/181744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mheilman", "html_url": "https://github.com/mheilman", "followers_url": "https://api.github.com/users/mheilman/followers", "following_url": "https://api.github.com/users/mheilman/following{/other_user}", "gists_url": "https://api.github.com/users/mheilman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mheilman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mheilman/subscriptions", "organizations_url": "https://api.github.com/users/mheilman/orgs", "repos_url": "https://api.github.com/users/mheilman/repos", "events_url": "https://api.github.com/users/mheilman/events{/privacy}", "received_events_url": "https://api.github.com/users/mheilman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-14T19:27:23Z", "updated_at": "2019-05-15T17:56:46Z", "closed_at": "2019-05-15T17:56:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of [April 2019](https://docs.aws.amazon.com/redshift/latest/mgmt/rs-mgmt-cluster-version-notes.html), redshift [supports CSV unloads](https://docs.aws.amazon.com/redshift/latest/dg/r_UNLOAD.html) (i.e., with quotes used to escape quotes, etc.).  It'd be nice to have support for this in `UnloadFromSelect`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/165", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/165/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/165/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/165", "id": 429324748, "node_id": "MDU6SXNzdWU0MjkzMjQ3NDg=", "number": 165, "title": "Dependency on  psycopg2-binary", "user": {"login": "jacopofar", "id": 1280346, "node_id": "MDQ6VXNlcjEyODAzNDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1280346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacopofar", "html_url": "https://github.com/jacopofar", "followers_url": "https://api.github.com/users/jacopofar/followers", "following_url": "https://api.github.com/users/jacopofar/following{/other_user}", "gists_url": "https://api.github.com/users/jacopofar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacopofar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacopofar/subscriptions", "organizations_url": "https://api.github.com/users/jacopofar/orgs", "repos_url": "https://api.github.com/users/jacopofar/repos", "events_url": "https://api.github.com/users/jacopofar/events{/privacy}", "received_events_url": "https://api.github.com/users/jacopofar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-04-04T14:52:52Z", "updated_at": "2019-07-18T21:02:56Z", "closed_at": "2019-07-18T21:02:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Related to #144 I guess, since today the installation of the backage is broken on our build because it tries to compile the psycopg2 package and needs additional system dependencies.\r\nTo reproduce in a Dockerfile:\r\n\r\n```\r\nFROM debian:stretch\r\n\r\nENV LANG C.UTF-8\r\n\r\nRUN apt-get update -qq && apt-get install -y python3-pip \\\r\n    python3-setuptools \\\r\n    python3-wheel\r\nRUN pip3 install sqlalchemy-redshift\r\n```\r\n\r\nWill fail with the error `pg_config executable not found`.\r\n\r\nI resolved by adding `apt-get install -y build-essential  libpq-dev python3-dev` to the build. \r\nIs there any plan to move to `psycopg2-binary` as a dependency, or maybe to create a parallel package that uses that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/155", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/155/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/155/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/155", "id": 377520615, "node_id": "MDU6SXNzdWUzNzc1MjA2MTU=", "number": 155, "title": "Compiled copy command does not include credentials", "user": {"login": "warrenronsiek", "id": 9755852, "node_id": "MDQ6VXNlcjk3NTU4NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9755852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/warrenronsiek", "html_url": "https://github.com/warrenronsiek", "followers_url": "https://api.github.com/users/warrenronsiek/followers", "following_url": "https://api.github.com/users/warrenronsiek/following{/other_user}", "gists_url": "https://api.github.com/users/warrenronsiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/warrenronsiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/warrenronsiek/subscriptions", "organizations_url": "https://api.github.com/users/warrenronsiek/orgs", "repos_url": "https://api.github.com/users/warrenronsiek/repos", "events_url": "https://api.github.com/users/warrenronsiek/events{/privacy}", "received_events_url": "https://api.github.com/users/warrenronsiek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-05T18:14:23Z", "updated_at": "2018-12-13T00:38:45Z", "closed_at": "2018-12-13T00:36:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I compile/print a copy command, the result does not contain the appropriate parameters. E.g.:\r\n```\r\nimport sqlalchemy as sa\r\nfrom sqlalchemy import Table, Column, MetaData\r\nfrom sqlalchemy_redshift.dialect import VARCHAR\r\nfrom sqlalchemy_redshift.commands import CopyCommand\r\nengine = sa.create_engine('redshift+psycopg2://example')\r\nmetadata = MetaData()\r\nusers = Table('users', metadata,Column('id', Integer), Column('val', VARCHAR(20))\r\nprint(CopyCommand(users, data_location=\"s3://testing/test.csv\", access_key_id='12345678901234567890', secret_access_key='1234567890123456789012345678901234567890').compile(engine))\r\n```\r\nreturns:\r\n```\r\nCOPY users FROM %(data_location)s\r\n        WITH CREDENTIALS AS %(credentials)s\r\n```\r\nexpected:\r\n```\r\nCOPY users FROM 's3://testing/test.csv'\r\naws_access_key_id='12345678901234567890'\r\naws_secret_access_key='1234567890123456789012345678901234567890';\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/151", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/151/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/151/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/151", "id": 347638850, "node_id": "MDU6SXNzdWUzNDc2Mzg4NTA=", "number": 151, "title": "Add support for Parquet and ORC formats to COPY", "user": {"login": "dargueta", "id": 620513, "node_id": "MDQ6VXNlcjYyMDUxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/620513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dargueta", "html_url": "https://github.com/dargueta", "followers_url": "https://api.github.com/users/dargueta/followers", "following_url": "https://api.github.com/users/dargueta/following{/other_user}", "gists_url": "https://api.github.com/users/dargueta/gists{/gist_id}", "starred_url": "https://api.github.com/users/dargueta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dargueta/subscriptions", "organizations_url": "https://api.github.com/users/dargueta/orgs", "repos_url": "https://api.github.com/users/dargueta/repos", "events_url": "https://api.github.com/users/dargueta/events{/privacy}", "received_events_url": "https://api.github.com/users/dargueta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-04T18:28:39Z", "updated_at": "2018-11-29T20:12:49Z", "closed_at": "2018-11-29T20:12:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `COPY` command [now supports](https://docs.aws.amazon.com/redshift/latest/dg/copy-usage_notes-copy-from-columnar.html) loading from the Parquet and ORC columnar data formats. We should add support for specifying these formats in `CopyCommand`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/143", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/143/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/143/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/143", "id": 308387822, "node_id": "MDU6SXNzdWUzMDgzODc4MjI=", "number": 143, "title": "Reflection bug on SQLAlchemy 1.2", "user": {"login": "c-nichols", "id": 7374139, "node_id": "MDQ6VXNlcjczNzQxMzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7374139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-nichols", "html_url": "https://github.com/c-nichols", "followers_url": "https://api.github.com/users/c-nichols/followers", "following_url": "https://api.github.com/users/c-nichols/following{/other_user}", "gists_url": "https://api.github.com/users/c-nichols/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-nichols/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-nichols/subscriptions", "organizations_url": "https://api.github.com/users/c-nichols/orgs", "repos_url": "https://api.github.com/users/c-nichols/repos", "events_url": "https://api.github.com/users/c-nichols/events{/privacy}", "received_events_url": "https://api.github.com/users/c-nichols/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-25T21:32:06Z", "updated_at": "2018-03-26T14:27:07Z", "closed_at": "2018-03-26T14:27:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nIt looks like SQLAlchemy has changed a few method signatures in version >=1.2.  The following statement works on SQLAlchemy <1.2 but not on SQLAlchemy >= 1.2:\r\n\r\n`table = sa.Table(table_name, meta, autoload=True, postgresql_ignore_search_path=True)`\r\n\r\nI get the following traceback with SQLAlchemy version 1.2.5:\r\n```\r\n  File \"/home/colin/work/spectrify/spectrify/utils/schema.py\", line 54, in get_table_schema\r\n    table = sa.Table(table_name, meta, **table_kwargs)\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 456, in __new__\r\n    metadata._remove_table(name, schema)\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py\", line 66, in __exit__\r\n    compat.reraise(exc_type, exc_value, exc_tb)\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 451, in __new__\r\n    table._init(name, metadata, *args, **kw)\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 533, in _init\r\n    include_columns, _extend_on=_extend_on)\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 559, in _autoload\r\n    _extend_on=_extend_on\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 2056, in run_callable\r\n    return conn.run_callable(callable_, *args, **kwargs)\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 1545, in run_callable\r\n    return callable_(self, *args, **kwargs)\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy/engine/default.py\", line 389, in reflecttable\r\n    table, include_columns, exclude_columns, **opts)\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy/engine/reflection.py\", line 618, in reflecttable\r\n    table_name, schema, **table.dialect_kwargs):\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy/engine/reflection.py\", line 369, in get_columns\r\n    **kw)\r\n  File \"<string>\", line 2, in get_columns\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy/engine/reflection.py\", line 54, in cache\r\n    ret = fn(self, con, *args, **kw)\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy_redshift/dialect.py\", line 404, in get_columns\r\n    enums=[], schema=col.schema, encode=col.encode)\r\n  File \"/home/colin/.virtualenvs/spectrify/local/lib/python2.7/site-packages/sqlalchemy_redshift/dialect.py\", line 604, in _get_column_info\r\n    **kw\r\nTypeError: _get_column_info() takes exactly 9 arguments (8 given)\r\n```\r\n\r\nI tracked the issue down to the following commit: https://github.com/zzzeek/sqlalchemy/commit/fadb8d61babb76ef7bdbc98279096a8900c7328d#diff-d33159d80d3deef1d5bdcd057dcc3d6bR2443\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/141", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/141/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/141/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/141", "id": 289724146, "node_id": "MDU6SXNzdWUyODk3MjQxNDY=", "number": 141, "title": "Unable to reflect non-default schemas", "user": {"login": "idvorkin", "id": 280981, "node_id": "MDQ6VXNlcjI4MDk4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/280981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idvorkin", "html_url": "https://github.com/idvorkin", "followers_url": "https://api.github.com/users/idvorkin/followers", "following_url": "https://api.github.com/users/idvorkin/following{/other_user}", "gists_url": "https://api.github.com/users/idvorkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/idvorkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idvorkin/subscriptions", "organizations_url": "https://api.github.com/users/idvorkin/orgs", "repos_url": "https://api.github.com/users/idvorkin/repos", "events_url": "https://api.github.com/users/idvorkin/events{/privacy}", "received_events_url": "https://api.github.com/users/idvorkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-18T18:06:06Z", "updated_at": "2018-01-18T23:54:09Z", "closed_at": "2018-01-18T23:54:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "*I'm new at SQL Alchemy so apologies if this is obvious*\r\n\r\nI'm not able to to reflect for the non-default schemas: \r\n\r\nWhen I run:\r\n  \r\n     meta = sa.MetaData(schema=\"booker\")\r\n     meta.reflect(bind=engine)\r\n\r\nI get \r\n```\r\nOperationalError: (psycopg2.OperationalError) server closed the connection unexpectedly\r\n        This probably means the server terminated abnormally\r\n        before or while processing the request.\r\n [SQL: '\r\n        SELECT\r\n          c.relkind,\r\n          n.oid as \"schema_oid\",\r\n          n.nspname as \"schema\",\r\n          c.oid as \"rel_oid\",\r\n          c.relname,\r\n          CASE c.reldiststyle\r\n            WHEN 0 THEN \\'EVEN\\' WHEN 1 THEN \\'KEY\\' WHEN 8 THEN \\'ALL\\' END\r\n            AS \"diststyle\",\r\n          c.relowner AS \"owner_id\",\r\n          u.usename AS \"owner_name\",\r\n          TRIM(TRAILING \\';\\' FROM pg_catalog.pg_get_viewdef(c.oid, true))\r\n            AS \"view_definition\",\r\n          pg_catalog.array_to_string(c.relacl, \\'\r\n\\') AS \"privileges\"\r\n        FROM pg_catalog.pg_class c\r\n             LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace\r\n             JOIN pg_catalog.pg_user u ON u.usesysid = c.relowner\r\n        WHERE c.relkind IN (\\'r\\', \\'v\\', \\'m\\', \\'S\\', \\'f\\')\r\n          AND n.nspname !~ \\'^pg_\\'\r\n        ORDER BY c.relkind, n.oid, n.nspname;\r\n        ']\r\n```\r\n\r\nps. This seems similar to https://github.com/apache/incubator-superset/issues/217\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/138", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/138/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/138/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/138", "id": 284807080, "node_id": "MDU6SXNzdWUyODQ4MDcwODA=", "number": 138, "title": "_get_column_info() missing 1 required positional argument: 'comment' in SQLAlchemy 1.2.0", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-27T22:32:50Z", "updated_at": "2018-01-17T18:29:50Z", "closed_at": "2018-01-17T18:29:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/blob/92852b7d2c720e7a088a788203b71c0c8447fa2e/sqlalchemy_redshift/dialect.py#L607\r\n\r\nThis breaks, because this was added:\r\n\r\nhttp://docs.sqlalchemy.org/en/latest/changelog/changelog_12.html#change-3f38508932257c303017b1276f285c39\r\n\r\nWhen it's called from `get_columns()`:\r\n\r\nhttps://github.com/sqlalchemy-redshift/sqlalchemy-redshift/blob/92852b7d2c720e7a088a788203b71c0c8447fa2e/sqlalchemy_redshift/dialect.py#L406-L409\r\n\r\nBecause `comment` is missing from there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/136", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/136/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/136/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/136", "id": 269991562, "node_id": "MDU6SXNzdWUyNjk5OTE1NjI=", "number": 136, "title": "redshift-ca-bundle.crt is out of date", "user": {"login": "wleftwich", "id": 447647, "node_id": "MDQ6VXNlcjQ0NzY0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/447647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wleftwich", "html_url": "https://github.com/wleftwich", "followers_url": "https://api.github.com/users/wleftwich/followers", "following_url": "https://api.github.com/users/wleftwich/following{/other_user}", "gists_url": "https://api.github.com/users/wleftwich/gists{/gist_id}", "starred_url": "https://api.github.com/users/wleftwich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wleftwich/subscriptions", "organizations_url": "https://api.github.com/users/wleftwich/orgs", "repos_url": "https://api.github.com/users/wleftwich/repos", "events_url": "https://api.github.com/users/wleftwich/events{/privacy}", "received_events_url": "https://api.github.com/users/wleftwich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-31T14:59:23Z", "updated_at": "2017-10-31T17:27:41Z", "closed_at": "2017-10-31T17:27:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "After Amazon issued a new SSL root certificate for Redshift last week, I started getting connection failures with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) SSL error: certificate verify failed\".\r\n\r\nI followed the instructions at http://docs.aws.amazon.com/redshift/latest/mgmt/connecting-transitioning-to-acm-certs.html and copied the new https://s3.amazonaws.com/redshift-downloads/redshift-ca-bundle.crt to ~/.postgresql/root.crt , which is the default location according to postgresql docs.\r\n\r\nHowever, for the client to actually check the certificate, I had to provide the file path:\r\n```\r\nredshift+psycopg2://username:password@mycluster.us-east-1.redshift.amazonaws.com:5439/mydb?sslmode=verify-ca&sslrootcert=/home/mydir/.postgresql/root.crt\r\n```\r\n\r\nI guess this is because the module provides its own root certificate file, which is now out of date:\r\n```python\r\ndef create_connect_args(self, *args, **kwargs):\r\n        \"\"\"\r\n        Build DB-API compatible connection arguments.\r\n\r\n        Overrides interface\r\n        :meth:`~sqlalchemy.engine.interfaces.Dialect.create_connect_args`.\r\n        \"\"\"\r\n        default_args = {\r\n            'sslmode': 'verify-full',\r\n            'sslrootcert': pkg_resources.resource_filename(\r\n                __name__,\r\n                'redshift-ca-bundle.crt'\r\n            ),\r\n        }\r\n        cargs, cparams = super(RedshiftDialect, self).create_connect_args(\r\n            *args, **kwargs\r\n        )\r\n        default_args.update(cparams)\r\n        return cargs, default_args\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/131", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/131/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/131/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/131", "id": 259227281, "node_id": "MDU6SXNzdWUyNTkyMjcyODE=", "number": 131, "title": "Master branch failing tests to Redshift", "user": {"login": "jklukas", "id": 691060, "node_id": "MDQ6VXNlcjY5MTA2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/691060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jklukas", "html_url": "https://github.com/jklukas", "followers_url": "https://api.github.com/users/jklukas/followers", "following_url": "https://api.github.com/users/jklukas/following{/other_user}", "gists_url": "https://api.github.com/users/jklukas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jklukas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jklukas/subscriptions", "organizations_url": "https://api.github.com/users/jklukas/orgs", "repos_url": "https://api.github.com/users/jklukas/repos", "events_url": "https://api.github.com/users/jklukas/events{/privacy}", "received_events_url": "https://api.github.com/users/jklukas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-09-20T16:34:41Z", "updated_at": "2018-01-17T20:29:57Z", "closed_at": "2018-01-17T20:29:57Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "As discovered in https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/pull/130#issuecomment-330875976 it looks like there's a change in Redshift behavior that's causing tests to fail in master.\r\n\r\nWe may simply need to update tests to match the new behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/129", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/129/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/129/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/129", "id": 259176881, "node_id": "MDU6SXNzdWUyNTkxNzY4ODE=", "number": 129, "title": "Update Certs? ", "user": {"login": "rhockenbury", "id": 4368090, "node_id": "MDQ6VXNlcjQzNjgwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4368090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhockenbury", "html_url": "https://github.com/rhockenbury", "followers_url": "https://api.github.com/users/rhockenbury/followers", "following_url": "https://api.github.com/users/rhockenbury/following{/other_user}", "gists_url": "https://api.github.com/users/rhockenbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhockenbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhockenbury/subscriptions", "organizations_url": "https://api.github.com/users/rhockenbury/orgs", "repos_url": "https://api.github.com/users/rhockenbury/repos", "events_url": "https://api.github.com/users/rhockenbury/events{/privacy}", "received_events_url": "https://api.github.com/users/rhockenbury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-20T14:08:06Z", "updated_at": "2017-09-25T20:19:21Z", "closed_at": "2017-09-25T20:19:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nRedshift is transitioning to ACM certificates. http://docs.aws.amazon.com/redshift/latest/mgmt/connecting-transitioning-to-acm-certs.html\r\n\r\nDoes the cert in this project need to be updated to support this transition?  https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/blob/master/sqlalchemy_redshift/redshift-ssl-ca-cert.pem", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/124", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/124/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/124/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/124", "id": 247553752, "node_id": "MDU6SXNzdWUyNDc1NTM3NTI=", "number": 124, "title": "Feature request: CREATE LIBRARY command", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-02T23:43:23Z", "updated_at": "2019-03-19T17:29:33Z", "closed_at": "2019-03-19T17:29:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_LIBRARY.html\r\n\r\nWould be nice for this to be supported in sqlalchemy-redshift.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/123", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/123/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/123/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/123", "id": 245542721, "node_id": "MDU6SXNzdWUyNDU1NDI3MjE=", "number": 123, "title": "Add support for MAXFILESIZE option in UNLOAD", "user": {"login": "atrigent", "id": 1234297, "node_id": "MDQ6VXNlcjEyMzQyOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1234297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atrigent", "html_url": "https://github.com/atrigent", "followers_url": "https://api.github.com/users/atrigent/followers", "following_url": "https://api.github.com/users/atrigent/following{/other_user}", "gists_url": "https://api.github.com/users/atrigent/gists{/gist_id}", "starred_url": "https://api.github.com/users/atrigent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atrigent/subscriptions", "organizations_url": "https://api.github.com/users/atrigent/orgs", "repos_url": "https://api.github.com/users/atrigent/repos", "events_url": "https://api.github.com/users/atrigent/events{/privacy}", "received_events_url": "https://api.github.com/users/atrigent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-25T21:35:57Z", "updated_at": "2019-03-06T22:04:34Z", "closed_at": "2019-03-06T22:04:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The UNLOAD command now has a very useful MAXFILESIZE option to control the maximum size of the produced files. The `UnloadFromSelect` construct in the dialect should have support for that.\r\n\r\nhttp://docs.aws.amazon.com/redshift/latest/dg/r_UNLOAD.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/121", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/121/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/121/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/121", "id": 227728417, "node_id": "MDU6SXNzdWUyMjc3Mjg0MTc=", "number": 121, "title": "Can't load plugin: sqlalchemy.dialects:psycopg2", "user": {"login": "rosner", "id": 792045, "node_id": "MDQ6VXNlcjc5MjA0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/792045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rosner", "html_url": "https://github.com/rosner", "followers_url": "https://api.github.com/users/rosner/followers", "following_url": "https://api.github.com/users/rosner/following{/other_user}", "gists_url": "https://api.github.com/users/rosner/gists{/gist_id}", "starred_url": "https://api.github.com/users/rosner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rosner/subscriptions", "organizations_url": "https://api.github.com/users/rosner/orgs", "repos_url": "https://api.github.com/users/rosner/repos", "events_url": "https://api.github.com/users/rosner/events{/privacy}", "received_events_url": "https://api.github.com/users/rosner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-05-10T15:55:11Z", "updated_at": "2017-05-15T13:28:21Z", "closed_at": "2017-05-15T13:28:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nI just wanted to give it a spin. But I get a `NoSuchModuleError: Can't load plugin: sqlalchemy.dialects:psycopg2`. I'm running 3.6.1 and installed `sqlalchemy 1.1.9` and `sqlalchemy-redshift 0.6.0`.\r\n\r\nFrom there I just followed the docs and used my custom connection string to create the engine. However I'm not sure if this is actually a bug on this project.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/116", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/116/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/116/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/116", "id": 226197755, "node_id": "MDU6SXNzdWUyMjYxOTc3NTU=", "number": 116, "title": "Dialect cannot work with huge data tables (allocation of memory on server/client)", "user": {"login": "Rustem", "id": 195228, "node_id": "MDQ6VXNlcjE5NTIyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/195228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rustem", "html_url": "https://github.com/Rustem", "followers_url": "https://api.github.com/users/Rustem/followers", "following_url": "https://api.github.com/users/Rustem/following{/other_user}", "gists_url": "https://api.github.com/users/Rustem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rustem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rustem/subscriptions", "organizations_url": "https://api.github.com/users/Rustem/orgs", "repos_url": "https://api.github.com/users/Rustem/repos", "events_url": "https://api.github.com/users/Rustem/events{/privacy}", "received_events_url": "https://api.github.com/users/Rustem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2017-05-04T07:28:35Z", "updated_at": "2017-05-09T13:51:11Z", "closed_at": "2017-05-09T13:50:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "1.  For Amazon Redshift SQLAlchemy library by default using psycopg2 library that is used for Postgres. It by default using client side cursors. When sql query is executing it allocated all QuerySet in memory, because of this big query is overflow memory limit.\r\nAfter this I tried to use Raw Driver Connection using Psycopg2 and work with server side cursor that is recommended by psycopg documentation (http://initd.org/psycopg/docs/usage.html#server-side-cursors):\r\nhttp://docs.aws.amazon.com/redshift/latest/dg/declare.html\r\n```sql\r\nbegin;\r\nDECLARE curname cursor FOR\r\n    SELECT * FROM schema.table;\r\nfetch forward 10 from curname;\r\nfetch next from curname;\r\nclose curname;\r\ncommit;\r\n```\r\nor\r\n```python\r\ncommand_text = \"\"\"\r\n    SELECT * FROM schema.table;\r\n\"\"\"\r\nconn = psycopg2.connect(host=\"HOST\", dbname=\"dbname\", password=\"****\", user=\"user\", port=\"5439\")\r\ncursor2 = conn.cursor('curname')\r\ncursor2.itersize = 100\r\ncursor2.execute(command_text)\r\nfor item in cursor2:\r\n    print(item)\r\n```\r\nThis method is executed but it still allocated all queryset on server side and executing for about 10 minutes. In same cases it still have problem with overflow memory, but at this time on server side.\r\n\r\n2. When I tried to execute it using SQL Workbench query is starting executing and return result in loop by 1000 result and printed it.\r\nI assuming that workbench is making another kind of limit offset on their side.\r\nAlso I tested it using java code and use redhift jdbc driver using Java. It code work as expected and return result row by row.\r\nSo I assuming problem in python driver psycopg2 that allocating queryset in memory before returning result\r\n```java\r\npackage connection;\r\n\r\nimport java.sql.*;\r\nimport java.util.Properties;\r\npublic class Redshift {\r\n    //Redshift driver: \"jdbc:redshift://host:5439/dev\";\r\n    static final String dbURL = \"jdbc:redshift://host:5439/dbname\";\r\n    static final String MasterUsername = \"user\";\r\n    static final String MasterUserPassword = \"****\";\r\n    public static void main(String[] args) {\r\n        Connection conn = null;\r\n        Statement stmt = null;\r\n        try{\r\n           Class.forName(\"com.amazon.redshift.jdbc41.Driver\");\r\n           //Open a connection and define properties.\r\n           System.out.println(\"Connecting to database...\");\r\n           Properties props = new Properties();\r\n           //Uncomment the following line if using a keystore.\r\n           //props.setProperty(\"ssl\", \"true\");\r\n           props.setProperty(\"user\", MasterUsername);\r\n           props.setProperty(\"password\", MasterUserPassword);\r\n           conn = DriverManager.getConnection(dbURL, props);\r\n           //Try a simple query.\r\n           System.out.println(\"Listing system tables...\");\r\n           stmt = conn.createStatement();\r\n           String sql;\r\n           sql = \"SELECT * FROM schema.table;\";\r\n           ResultSet rs = stmt.executeQuery(sql);\r\n           //Get the data from the result set.\r\n           while(rs.next()){\r\n              //Retrieve two columns.\r\n              String catalog = rs.getString(\"list_entry_id\");\r\n              String name = rs.getString(\"source_code\");\r\n              //Display values.\r\n              System.out.print(\"Catalog: \" + catalog);\r\n              System.out.println(\", Name: \" + name);\r\n           }\r\n           rs.close();\r\n           stmt.close();\r\n           conn.close();\r\n        }catch(Exception ex){\r\n           //For convenience, handle all errors here.\r\n           ex.printStackTrace();\r\n        }finally{\r\n           //Finally block to close resources.\r\n           try{\r\n              if(stmt!=null)\r\n                 stmt.close();\r\n           }catch(Exception ex){\r\n           }// nothing we can do\r\n           try{\r\n              if(conn!=null)\r\n                 conn.close();\r\n           }catch(Exception ex){\r\n              ex.printStackTrace();\r\n           }\r\n        }\r\n        System.out.println(\"Finished connectivity test.\");\r\n     }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/110", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/110/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/110/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/110", "id": 203145496, "node_id": "MDU6SXNzdWUyMDMxNDU0OTY=", "number": 110, "title": "BZIP2 format not supported with COPY", "user": {"login": "rectalogic", "id": 11581, "node_id": "MDQ6VXNlcjExNTgx", "avatar_url": "https://avatars1.githubusercontent.com/u/11581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rectalogic", "html_url": "https://github.com/rectalogic", "followers_url": "https://api.github.com/users/rectalogic/followers", "following_url": "https://api.github.com/users/rectalogic/following{/other_user}", "gists_url": "https://api.github.com/users/rectalogic/gists{/gist_id}", "starred_url": "https://api.github.com/users/rectalogic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rectalogic/subscriptions", "organizations_url": "https://api.github.com/users/rectalogic/orgs", "repos_url": "https://api.github.com/users/rectalogic/repos", "events_url": "https://api.github.com/users/rectalogic/events{/privacy}", "received_events_url": "https://api.github.com/users/rectalogic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-25T16:07:09Z", "updated_at": "2017-01-26T11:23:33Z", "closed_at": "2017-01-26T11:23:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We use BZIP2 compression on our s3 files, it doesn't seem possible to specify this with the CopyCommand.\r\nhttp://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-format.html#copy-bzip2\r\n```python\r\n>>> import sqlalchemy as sa\r\n>>> from redshift_sqlalchemy.dialect import CopyCommand\r\n>>> table = sa.table(\"foo\")\r\n>>> CopyCommand(table, \"s3://bucket/data/\", \"XXXYYYZZZXXXYYYZZZ11\", \"XXXYYYZZZXXXYYYZZZ11XXXYYYZZZXXXYYYZZZ11\", format=\"BZIP2\")\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/virtualenv/local/lib/python2.7/site-packages/sqlalchemy_redshift/commands.py\", line 362, in __init__\r\n    self.formats)\r\nValueError: \"format\" parameter must be one of ['CSV', 'JSON', 'AVRO', None]\r\n>>> CopyCommand(table, \"s3://bucket/data/\", \"XXXYYYZZZXXXYYYZZZ11\", \"XXXYYYZZZXXXYYYZZZ11XXXYYYZZZXXXYYYZZZ11\", compression=\"BZIP2\")\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/virtualenv/local/lib/python2.7/site-packages/sqlalchemy_redshift/commands.py\", line 368, in __init__\r\n    self.compression_types\r\nValueError: \"compression\" parameter must be one of ['GZIP', 'LZOP']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/109", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/109/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/109/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/109", "id": 202265100, "node_id": "MDU6SXNzdWUyMDIyNjUxMDA=", "number": 109, "title": "how to use CopyCommand", "user": {"login": "henrytxz", "id": 3128529, "node_id": "MDQ6VXNlcjMxMjg1Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3128529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henrytxz", "html_url": "https://github.com/henrytxz", "followers_url": "https://api.github.com/users/henrytxz/followers", "following_url": "https://api.github.com/users/henrytxz/following{/other_user}", "gists_url": "https://api.github.com/users/henrytxz/gists{/gist_id}", "starred_url": "https://api.github.com/users/henrytxz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henrytxz/subscriptions", "organizations_url": "https://api.github.com/users/henrytxz/orgs", "repos_url": "https://api.github.com/users/henrytxz/repos", "events_url": "https://api.github.com/users/henrytxz/events{/privacy}", "received_events_url": "https://api.github.com/users/henrytxz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-20T23:07:47Z", "updated_at": "2017-01-31T23:17:47Z", "closed_at": "2017-01-31T23:17:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a working copy command that works in SQL Workbench/J. Mirroring it, I created a CopyCommand object. What do I do next to run the copy command against Redshift?\r\n\r\nI see that there's a \r\n_sqlalchemy_redshift.commands.visit_copy_command(element, compiler, **kw)_\r\nmethod. Looks like I'll have element = my_copy_command_object, is there more documentation on the compiler argument?\r\n\r\nIt'd be super if there's an end-to-end example somewhere, thanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/101", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/101/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/101/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/101", "id": 188034124, "node_id": "MDU6SXNzdWUxODgwMzQxMjQ=", "number": 101, "title": "Constraint information is not being cached", "user": {"login": "atrigent", "id": 1234297, "node_id": "MDQ6VXNlcjEyMzQyOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1234297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atrigent", "html_url": "https://github.com/atrigent", "followers_url": "https://api.github.com/users/atrigent/followers", "following_url": "https://api.github.com/users/atrigent/following{/other_user}", "gists_url": "https://api.github.com/users/atrigent/gists{/gist_id}", "starred_url": "https://api.github.com/users/atrigent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atrigent/subscriptions", "organizations_url": "https://api.github.com/users/atrigent/orgs", "repos_url": "https://api.github.com/users/atrigent/repos", "events_url": "https://api.github.com/users/atrigent/events{/privacy}", "received_events_url": "https://api.github.com/users/atrigent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-11-08T16:11:57Z", "updated_at": "2016-11-08T19:38:22Z", "closed_at": "2016-11-08T19:38:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `RedshiftDialect`, there are three methods, `_get_all_relation_info`, `_get_all_column_info`, and `_get_all_constraint_info`, which query information about the whole cluster. These methods are called by several other methods which pass their `info_cache` argument down to one of the above methods. These methods, in turn, are called by other methods which, in most cases, pass down all of their keyword arguments. The one exception is `_get_redshift_constraints` - this method is never called with the keyword arguments of its caller, and therefore never gets the `info_cache` object that was passed in by SQLAlchemy. The result of this is that constraint information is never cached. When running something like alembic which does a lot of reflection, this can slow things down considerably because the dialect winds up querying information about the entire database every time alembic asks for anything.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/99", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/99/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/99/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/99", "id": 186839109, "node_id": "MDU6SXNzdWUxODY4MzkxMDk=", "number": 99, "title": "Cut a release", "user": {"login": "jfhbrook", "id": 57536, "node_id": "MDQ6VXNlcjU3NTM2", "avatar_url": "https://avatars1.githubusercontent.com/u/57536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfhbrook", "html_url": "https://github.com/jfhbrook", "followers_url": "https://api.github.com/users/jfhbrook/followers", "following_url": "https://api.github.com/users/jfhbrook/following{/other_user}", "gists_url": "https://api.github.com/users/jfhbrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfhbrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfhbrook/subscriptions", "organizations_url": "https://api.github.com/users/jfhbrook/orgs", "repos_url": "https://api.github.com/users/jfhbrook/repos", "events_url": "https://api.github.com/users/jfhbrook/events{/privacy}", "received_events_url": "https://api.github.com/users/jfhbrook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/milestones/2", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/milestone/2", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/milestones/2/labels", "id": 2110201, "node_id": "MDk6TWlsZXN0b25lMjExMDIwMQ==", "number": 2, "title": "0.6.0", "description": "", "creator": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2016-11-02T17:20:24Z", "updated_at": "2017-05-04T16:08:07Z", "due_on": null, "closed_at": "2017-05-04T16:08:07Z"}, "comments": 5, "created_at": "2016-11-02T15:46:45Z", "updated_at": "2017-05-04T16:07:58Z", "closed_at": "2017-05-04T16:07:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The last release was in April, and there have been a whole mass of patches made since then.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/96", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/96/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/96/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/96", "id": 178626558, "node_id": "MDU6SXNzdWUxNzg2MjY1NTg=", "number": 96, "title": "Maximum identifier length is incorrect", "user": {"login": "scribu", "id": 225715, "node_id": "MDQ6VXNlcjIyNTcxNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/225715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scribu", "html_url": "https://github.com/scribu", "followers_url": "https://api.github.com/users/scribu/followers", "following_url": "https://api.github.com/users/scribu/following{/other_user}", "gists_url": "https://api.github.com/users/scribu/gists{/gist_id}", "starred_url": "https://api.github.com/users/scribu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scribu/subscriptions", "organizations_url": "https://api.github.com/users/scribu/orgs", "repos_url": "https://api.github.com/users/scribu/repos", "events_url": "https://api.github.com/users/scribu/events{/privacy}", "received_events_url": "https://api.github.com/users/scribu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-22T14:31:36Z", "updated_at": "2016-10-05T17:47:37Z", "closed_at": "2016-10-05T17:47:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Getting an error when trying to create a table with a name longer than 63 characters, even though the Redshift docs state that 127 characters is the limit:\n\nhttp://docs.aws.amazon.com/redshift/latest/dg/r_names.html\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/94", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/94/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/94/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/94", "id": 175062358, "node_id": "MDU6SXNzdWUxNzUwNjIzNTg=", "number": 94, "title": "Redshift reserved words are not escaped", "user": {"login": "calleo", "id": 316289, "node_id": "MDQ6VXNlcjMxNjI4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/316289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calleo", "html_url": "https://github.com/calleo", "followers_url": "https://api.github.com/users/calleo/followers", "following_url": "https://api.github.com/users/calleo/following{/other_user}", "gists_url": "https://api.github.com/users/calleo/gists{/gist_id}", "starred_url": "https://api.github.com/users/calleo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calleo/subscriptions", "organizations_url": "https://api.github.com/users/calleo/orgs", "repos_url": "https://api.github.com/users/calleo/repos", "events_url": "https://api.github.com/users/calleo/events{/privacy}", "received_events_url": "https://api.github.com/users/calleo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2016-09-05T12:35:14Z", "updated_at": "2017-05-04T15:51:55Z", "closed_at": "2017-05-04T15:51:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got an error trying to create a table that had a column called \"tag\". The list of reserved words are here: http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html\n\nI fixed it in a very dirty way:\n\n```\nimport sqlalchemy.dialects.postgresql.base as ps\n\nREDSHIFT_RESERVED_WORDS = set(\"\"\"aes128,aes256,all,allowoverwrite,analyse,\nanalyze,and,any,array,as,asc,authorization,backup,between,binary,blanksasnull,\nboth,bytedict,bzip2,case,cast,check,collate,column,constraint,create,\ncredentials,cross,current_date,current_time,current_timestamp,current_user,\ncurrent_user_id,default,deferrable,deflate,defrag,delta,delta32k,desc,disable,\ndistinct,do,else,emptyasnull,enable,encode,encrypt,encryption,end,except,\nexplicit,false,for,foreign,freeze,from,full,globaldict256,globaldict64k,grant,\ngroup,gzip,having,identity,ignore,ilike,in,initially,inner,intersect,into,is,\nisnull,join,leading,left,like,limit,localtime,localtimestamp,lun,luns,lzo,lzop,\nminus,mostly13,mostly32,mostly8,natural,new,not,notnull,null,nulls,off,offline,\noffset,oid,old,on,only,open,or,order,outer,overlaps,parallel,partition,percent,\npermissions,placing,primary,raw,readratio,recover,references,respect,rejectlog,\nresort,restore,right,select,session_user,similar,some,sysdate,system,table,tag,\ntdes,text255,text32k,then,timestamp,to,top,trailing,true,truncatecolumns,union,\nunique,user,using,verbose,wallet,when,where,with,without\"\"\".split(\",\"))\n\nps.PGIdentifierPreparer.reserved_words = ps.PGIdentifierPreparer.reserved_words.union(helpers.REDSHIFT_RESERVED_WORDS)\n\n```\n\nWould be good if the redshift dialect would support this out of the box.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/90", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/90/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/90/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/90", "id": 170394064, "node_id": "MDU6SXNzdWUxNzAzOTQwNjQ=", "number": 90, "title": "CopyCommand doesn't support REGION", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-10T11:25:13Z", "updated_at": "2019-01-16T18:19:30Z", "closed_at": "2019-01-16T18:19:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to copy some files from S3 in a different region: https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-source-s3.html#copy-region\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/89", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/89/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/89/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/89", "id": 169438539, "node_id": "MDU6SXNzdWUxNjk0Mzg1Mzk=", "number": 89, "title": "Add support for AWS token/key credentials", "user": {"login": "postelrich", "id": 3619876, "node_id": "MDQ6VXNlcjM2MTk4NzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3619876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/postelrich", "html_url": "https://github.com/postelrich", "followers_url": "https://api.github.com/users/postelrich/followers", "following_url": "https://api.github.com/users/postelrich/following{/other_user}", "gists_url": "https://api.github.com/users/postelrich/gists{/gist_id}", "starred_url": "https://api.github.com/users/postelrich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/postelrich/subscriptions", "organizations_url": "https://api.github.com/users/postelrich/orgs", "repos_url": "https://api.github.com/users/postelrich/repos", "events_url": "https://api.github.com/users/postelrich/events{/privacy}", "received_events_url": "https://api.github.com/users/postelrich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-04T18:11:58Z", "updated_at": "2016-08-04T18:34:47Z", "closed_at": "2016-08-04T18:17:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "sqlalchemy redshift does not appear to support authenticating with AWS token/secret key.  I did find something that looks like it might in commands.py but there are no docs supporting how to supply the credentials if it does exist.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/87", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/87/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/87/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/87", "id": 153646699, "node_id": "MDU6SXNzdWUxNTM2NDY2OTk=", "number": 87, "title": "Support role based credentials for Copy and Unload command", "user": {"login": "mtrbean", "id": 222778, "node_id": "MDQ6VXNlcjIyMjc3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/222778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtrbean", "html_url": "https://github.com/mtrbean", "followers_url": "https://api.github.com/users/mtrbean/followers", "following_url": "https://api.github.com/users/mtrbean/following{/other_user}", "gists_url": "https://api.github.com/users/mtrbean/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtrbean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtrbean/subscriptions", "organizations_url": "https://api.github.com/users/mtrbean/orgs", "repos_url": "https://api.github.com/users/mtrbean/repos", "events_url": "https://api.github.com/users/mtrbean/events{/privacy}", "received_events_url": "https://api.github.com/users/mtrbean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-08T09:42:54Z", "updated_at": "2016-05-18T17:50:04Z", "closed_at": "2016-05-18T17:50:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We use role based credentials (http://docs.aws.amazon.com/redshift/latest/dg/copy-usage_notes-access-permissions.html#copy-usage_notes-access-role-based) instead of access and secret key. However it appears that UnloadFromSelect and CopyCommand do not support them.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/84", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/84/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/84/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/84", "id": 153107385, "node_id": "MDU6SXNzdWUxNTMxMDczODU=", "number": 84, "title": "SSL causing connection to fail", "user": {"login": "yergi", "id": 7504815, "node_id": "MDQ6VXNlcjc1MDQ4MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7504815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yergi", "html_url": "https://github.com/yergi", "followers_url": "https://api.github.com/users/yergi/followers", "following_url": "https://api.github.com/users/yergi/following{/other_user}", "gists_url": "https://api.github.com/users/yergi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yergi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yergi/subscriptions", "organizations_url": "https://api.github.com/users/yergi/orgs", "repos_url": "https://api.github.com/users/yergi/repos", "events_url": "https://api.github.com/users/yergi/events{/privacy}", "received_events_url": "https://api.github.com/users/yergi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-04T20:29:07Z", "updated_at": "2016-05-04T20:53:24Z", "closed_at": "2016-05-04T20:52:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to connect using `redshift+psycopg2` I end up with this error:\n`sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) sslmode value \"verify-full\" invalid when SSL support is not compiled in`\nWhat do I need to do to actually connect to my redshift instance? I'm able to connect fine using `postgresql+psycopg2`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/81", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/81/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/81/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/81", "id": 128576461, "node_id": "MDU6SXNzdWUxMjg1NzY0NjE=", "number": 81, "title": "Add a CONTRIBUTING.md", "user": {"login": "jklukas", "id": 691060, "node_id": "MDQ6VXNlcjY5MTA2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/691060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jklukas", "html_url": "https://github.com/jklukas", "followers_url": "https://api.github.com/users/jklukas/followers", "following_url": "https://api.github.com/users/jklukas/following{/other_user}", "gists_url": "https://api.github.com/users/jklukas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jklukas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jklukas/subscriptions", "organizations_url": "https://api.github.com/users/jklukas/orgs", "repos_url": "https://api.github.com/users/jklukas/repos", "events_url": "https://api.github.com/users/jklukas/events{/privacy}", "received_events_url": "https://api.github.com/users/jklukas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-25T16:28:09Z", "updated_at": "2016-03-09T15:50:44Z", "closed_at": "2016-03-09T15:50:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "For most PRs, we are requiring tests, documentation, and CHANGES.rst notes. Sometimes we ask for these upfront, but sometimes we forget until later in the review, and it delays merging good changes.\n\nWe should provide a CONTRIBUTING.md both as a checklist for those doing review to make sure they aren't forgetting things, and for contributors so that they don't feel like requirements are popping up out of nowhere.\n\ncc @graingert \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/77", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/77/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/77/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/77", "id": 122325736, "node_id": "MDU6SXNzdWUxMjIzMjU3MzY=", "number": 77, "title": "SQL_IDENTIFIER_RE issue", "user": {"login": "jseabold", "id": 296164, "node_id": "MDQ6VXNlcjI5NjE2NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseabold", "html_url": "https://github.com/jseabold", "followers_url": "https://api.github.com/users/jseabold/followers", "following_url": "https://api.github.com/users/jseabold/following{/other_user}", "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions", "organizations_url": "https://api.github.com/users/jseabold/orgs", "repos_url": "https://api.github.com/users/jseabold/repos", "events_url": "https://api.github.com/users/jseabold/events{/privacy}", "received_events_url": "https://api.github.com/users/jseabold/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-15T17:37:34Z", "updated_at": "2016-11-02T17:32:09Z", "closed_at": "2016-11-02T17:32:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I have encountered table names that look like `schema.table.name` and reflection is breaking because `SQL_IDENTIFER_RE.findall(key)` returns a list of length 3 in `dialect._get_schema_and_relation`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/76", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/76/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/76/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/76", "id": 122010261, "node_id": "MDU6SXNzdWUxMjIwMTAyNjE=", "number": 76, "title": "Problem with [waits] command for concurrent write queries", "user": {"login": "whitish", "id": 3677259, "node_id": "MDQ6VXNlcjM2NzcyNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3677259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whitish", "html_url": "https://github.com/whitish", "followers_url": "https://api.github.com/users/whitish/followers", "following_url": "https://api.github.com/users/whitish/following{/other_user}", "gists_url": "https://api.github.com/users/whitish/gists{/gist_id}", "starred_url": "https://api.github.com/users/whitish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whitish/subscriptions", "organizations_url": "https://api.github.com/users/whitish/orgs", "repos_url": "https://api.github.com/users/whitish/repos", "events_url": "https://api.github.com/users/whitish/events{/privacy}", "received_events_url": "https://api.github.com/users/whitish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-14T10:03:59Z", "updated_at": "2015-12-15T20:22:59Z", "closed_at": "2015-12-15T20:22:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I m trying to reproduce an example from RS documentation using:\npython 3.4\nsqlalchemy-redshift==0.3.1\nHere is an example from RedShift doc (http://goo.gl/V2PuZh):\n\n``` sql\nbegin;\n[waits]\ncopy listing from ;\nend;\n```\n\nBut it throws an exception:\n\n``` python\nERROR - [RedShift] Programming Error: (psycopg2.ProgrammingError) syntax error at or near \"[\"\nLINE 1: begin; [waits] copy my_schema.my_table (userid, flag,...\n               ^\n[SQL: \"begin; [waits] copy my_schema.my_table (userid, flag, campid, condition, ts) from 's3://mybucket/mydata' credentials 'aws_access_key_id=<my_aws_secret_key>;aws_secret_access_key=<my_aws_secret_access_key>' delimiter ','; end;\"]\n```\n\nIt works good without the **[waits]** operator. Is there any workaround so I can use **[waits]**?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/70", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/70/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/70/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/70", "id": 120411089, "node_id": "MDU6SXNzdWUxMjA0MTEwODk=", "number": 70, "title": "Another reflection regression", "user": {"login": "berdario", "id": 752835, "node_id": "MDQ6VXNlcjc1MjgzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/752835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berdario", "html_url": "https://github.com/berdario", "followers_url": "https://api.github.com/users/berdario/followers", "following_url": "https://api.github.com/users/berdario/following{/other_user}", "gists_url": "https://api.github.com/users/berdario/gists{/gist_id}", "starred_url": "https://api.github.com/users/berdario/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berdario/subscriptions", "organizations_url": "https://api.github.com/users/berdario/orgs", "repos_url": "https://api.github.com/users/berdario/repos", "events_url": "https://api.github.com/users/berdario/events{/privacy}", "received_events_url": "https://api.github.com/users/berdario/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-04T14:22:33Z", "updated_at": "2015-12-06T16:45:48Z", "closed_at": "2015-12-06T16:45:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sorry, I should've tested this earlier as soon as you finished working on #64 , but I kept using 0.1.2 and didn't check if there were any more issues.\n\nThe issue now is with tables that have foreign keys contraints, I've been able to reproduce the problem with the following 2 tables:\n\n```\ncreate table ref.foo(id integer identity(1, 1) not null unique);\n\ncreate table ref.bar(\nfoo_id integer not null,\nforeign key(foo_id) references ref.foo(id))\n```\n\nAnd, when running `.reflect(only=['bar'], schema='ref')`\n\nI get `*** AttributeError: 'NoneType' object has no attribute 'group'`\n\nThis is the traceback:\n\n```\n  File \"/home/dario/Projects/l2/Hydra/database/hydra_database/__init__.py\", line 81, in cached_metadatas\n    redshiftmeta.reflect(only=tablenames, schema=schema)\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 3647, in reflect\n    Table(name, self, **reflect_opts)\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 416, in __new__\n    metadata._remove_table(name, schema)\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py\", line 60, in __exit__\n    compat.reraise(exc_type, exc_value, exc_tb)\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 411, in __new__\n    table._init(name, metadata, *args, **kw)\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 484, in _init\n    self._autoload(metadata, autoload_with, include_columns)\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 496, in _autoload\n    self, include_columns, exclude_columns\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 1477, in run_callable\n    return callable_(self, *args, **kwargs)\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/engine/default.py\", line 364, in reflecttable\n    return insp.reflecttable(table, include_columns, exclude_columns)\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/engine/reflection.py\", line 578, in reflecttable\n    exclude_columns, reflection_options)\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/engine/reflection.py\", line 666, in _reflect_fk\n    table_name, schema, **table.dialect_kwargs)\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/engine/reflection.py\", line 447, in get_foreign_keys\n    **kw)\n  File \"<string>\", line 2, in get_foreign_keys\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy/engine/reflection.py\", line 54, in cache\n    ret = fn(self, con, *args, **kw)\n  File \"/home/dario/.local/share/virtualenvs/hydra_worker/local/lib/python2.7/site-packages/sqlalchemy_redshift/dialect.py\", line 396, in get_foreign_keys\n    referred_column = m.group('referred_column')\nAttributeError: 'NoneType' object has no attribute 'group'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/69", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/69/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/69/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/69", "id": 120268752, "node_id": "MDU6SXNzdWUxMjAyNjg3NTI=", "number": 69, "title": "UnloadFromSelect does not support LIMIT clause.", "user": {"login": "briandailey", "id": 2156, "node_id": "MDQ6VXNlcjIxNTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briandailey", "html_url": "https://github.com/briandailey", "followers_url": "https://api.github.com/users/briandailey/followers", "following_url": "https://api.github.com/users/briandailey/following{/other_user}", "gists_url": "https://api.github.com/users/briandailey/gists{/gist_id}", "starred_url": "https://api.github.com/users/briandailey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briandailey/subscriptions", "organizations_url": "https://api.github.com/users/briandailey/orgs", "repos_url": "https://api.github.com/users/briandailey/repos", "events_url": "https://api.github.com/users/briandailey/events{/privacy}", "received_events_url": "https://api.github.com/users/briandailey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-12-03T20:59:38Z", "updated_at": "2016-04-19T15:49:14Z", "closed_at": "2016-04-19T15:49:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Parameters for `where` are all properly escaped, but adding a `.limit()` to the SQLAlchemy expression causes an error because it is unescaped (the parameter is passed in as `(%param1)`).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/68", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/68/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/68/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/68", "id": 118074546, "node_id": "MDU6SXNzdWUxMTgwNzQ1NDY=", "number": 68, "title": "NoSuchModuleError: Can't load plugin: sqlalchemy.dialects:redshift.psycopg2", "user": {"login": "ziziermao", "id": 1882726, "node_id": "MDQ6VXNlcjE4ODI3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1882726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziziermao", "html_url": "https://github.com/ziziermao", "followers_url": "https://api.github.com/users/ziziermao/followers", "following_url": "https://api.github.com/users/ziziermao/following{/other_user}", "gists_url": "https://api.github.com/users/ziziermao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziziermao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziziermao/subscriptions", "organizations_url": "https://api.github.com/users/ziziermao/orgs", "repos_url": "https://api.github.com/users/ziziermao/repos", "events_url": "https://api.github.com/users/ziziermao/events{/privacy}", "received_events_url": "https://api.github.com/users/ziziermao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2015-11-20T16:19:57Z", "updated_at": "2019-01-11T13:16:25Z", "closed_at": "2017-02-24T18:20:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to connect to redshift from my python code. my pip installed:\n\npsycopg2==2.6.1\nredshift-sqlalchemy==0.4.1\nSQLAlchemy==1.0.9\nand my virtual machine(ubuntu) has:\n\nlibpq-dev\npython-psycopg2\nBut I am still getting\n\nengine = create_engine('redshift+psycopg2://{}:{}@{}'.format(username, password, url))\nFile \"/opt/project/env/local/lib/python2.7/site-packages/sqlalchemy/engine/init.py\", line 386, in create_engine\nreturn strategy.create(args, *kwargs)\nFile \"/opt/project/env/local/lib/python2.7/site-packages/sqlalchemy/engine/strategies.py\", line 51, in create\nentrypoint = u._get_entrypoint()\nFile \"/opt/project/env/local/lib/python2.7/site-packages/sqlalchemy/engine/url.py\", line 131, in _get_entrypoint\ncls = registry.load(name)\nFile \"/opt/project/env/local/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py\", line 205, in load\n(self.group, name))\nNoSuchModuleError: Can't load plugin: sqlalchemy.dialects:redshift.psycopg2\nI tried SQLAlchemy version 0.8.0, but doesn't work either.\nWith the same config, I am able to run from my laptop (mac), but on linux, I guess some packages still missing? Any suggestion will be appreciated, thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/67", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/67/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/67/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/67", "id": 116423056, "node_id": "MDU6SXNzdWUxMTY0MjMwNTY=", "number": 67, "title": "can't execute query when passing tuple parameter", "user": {"login": "whitish", "id": 3677259, "node_id": "MDQ6VXNlcjM2NzcyNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3677259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whitish", "html_url": "https://github.com/whitish", "followers_url": "https://api.github.com/users/whitish/followers", "following_url": "https://api.github.com/users/whitish/following{/other_user}", "gists_url": "https://api.github.com/users/whitish/gists{/gist_id}", "starred_url": "https://api.github.com/users/whitish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whitish/subscriptions", "organizations_url": "https://api.github.com/users/whitish/orgs", "repos_url": "https://api.github.com/users/whitish/repos", "events_url": "https://api.github.com/users/whitish/events{/privacy}", "received_events_url": "https://api.github.com/users/whitish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-11T21:16:11Z", "updated_at": "2015-11-11T21:29:42Z", "closed_at": "2015-11-11T21:29:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I m trying to execute basic query and pass tuple parameter into it like:\n\n``` python\nengine = create_engine(app.config['REDSHIFT_DATABASE_URI'], echo=True)\nconn = engine.connect()\ns = text(\"select distinct t1.hh_id, t2.mri_id from msa t1 left outer join (select hh_id, mri_id from msa where mri_id in :code_param) t2 on t1.hh_id = t2.hh_id\")\nmriset = conn.execute(s, code_param = tuple(codes)).fetchall()\n```\n\nHere is an error:\n\n``` python\n2015-11-11 22:49:37,373 INFO sqlalchemy.engine.base.Engine select distinct t1.hh_id, t2.mri_id from msa t1 left outer join (select hh_id, mri_id from msa where mri_id in %(code_param)s) t2 on t1.hh_id = t2.hh_id\n2015-11-11 22:49:37,374 INFO sqlalchemy.engine.base.Engine {'code_param': (-207426274, -205158201, -174737541)}\n2015-11-11 22:49:37,681 INFO sqlalchemy.engine.base.Engine ROLLBACK\n```\n\nIt works good though with postgres db.\n\nDo you have any clue why?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/65", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/65/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/65/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/65", "id": 114379854, "node_id": "MDU6SXNzdWUxMTQzNzk4NTQ=", "number": 65, "title": "Bigcrunch improvements", "user": {"login": "jklukas", "id": 691060, "node_id": "MDQ6VXNlcjY5MTA2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/691060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jklukas", "html_url": "https://github.com/jklukas", "followers_url": "https://api.github.com/users/jklukas/followers", "following_url": "https://api.github.com/users/jklukas/following{/other_user}", "gists_url": "https://api.github.com/users/jklukas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jklukas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jklukas/subscriptions", "organizations_url": "https://api.github.com/users/jklukas/orgs", "repos_url": "https://api.github.com/users/jklukas/repos", "events_url": "https://api.github.com/users/jklukas/events{/privacy}", "received_events_url": "https://api.github.com/users/jklukas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-31T01:21:48Z", "updated_at": "2015-11-10T02:19:19Z", "closed_at": "2015-11-10T02:19:19Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@graingert - What would you think about hosting the bigcrunch repo on GitHub under the sqlalchemy-redshift org? It would make it easier to browse the code, and it would let us make PRs.\n\nAnother thought on bigcrunch - I'd be for upping the timeout. It looks like it's supposed to shut down 1 hour after the last created test session, and I've gotten burned by that a few times, meaning waiting for another whole round of shutdown and spinup to be able to run more tests. Maybe let it keep running for 4 hours?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/57", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/57/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/57/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/57", "id": 112605274, "node_id": "MDU6SXNzdWUxMTI2MDUyNzQ=", "number": 57, "title": "Set the GitHub URL for this repo to readthedocs", "user": {"login": "jklukas", "id": 691060, "node_id": "MDQ6VXNlcjY5MTA2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/691060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jklukas", "html_url": "https://github.com/jklukas", "followers_url": "https://api.github.com/users/jklukas/followers", "following_url": "https://api.github.com/users/jklukas/following{/other_user}", "gists_url": "https://api.github.com/users/jklukas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jklukas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jklukas/subscriptions", "organizations_url": "https://api.github.com/users/jklukas/orgs", "repos_url": "https://api.github.com/users/jklukas/repos", "events_url": "https://api.github.com/users/jklukas/events{/privacy}", "received_events_url": "https://api.github.com/users/jklukas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-21T14:42:40Z", "updated_at": "2015-10-21T14:44:04Z", "closed_at": "2015-10-21T14:43:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Probably only @graingert has full admin access to this repo. We should set the URL for this project to our readthedocs URL, so that it displays at the top of the GitHub page, right next to the project description.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/40", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/40/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/40/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/40", "id": 104900543, "node_id": "MDU6SXNzdWUxMDQ5MDA1NDM=", "number": 40, "title": "Migration plan for moving to the sqlalchemy-redshift org", "user": {"login": "jklukas", "id": 691060, "node_id": "MDQ6VXNlcjY5MTA2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/691060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jklukas", "html_url": "https://github.com/jklukas", "followers_url": "https://api.github.com/users/jklukas/followers", "following_url": "https://api.github.com/users/jklukas/following{/other_user}", "gists_url": "https://api.github.com/users/jklukas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jklukas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jklukas/subscriptions", "organizations_url": "https://api.github.com/users/jklukas/orgs", "repos_url": "https://api.github.com/users/jklukas/repos", "events_url": "https://api.github.com/users/jklukas/events{/privacy}", "received_events_url": "https://api.github.com/users/jklukas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-04T14:25:53Z", "updated_at": "2015-10-24T01:23:21Z", "closed_at": "2015-10-24T00:57:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "There are some details we'll need to deal with when this project moves to the https://github.com/sqlalchemy-redshift org.\n- Documentation\n  - [x] Make sure we're using sqlachemy-redshift and sqlalchemy_redshift consistently everywhere\n  - [x] Make sure any references to the repo are correct\n- [Read the Docs](https://readthedocs.org/projects/redshift-sqlalchemy)\n  - [x] Change the url of docs to `sqlalchemy-redshift` (it's currently inverted)\n  - [x] Set up a webhook on the repo so docs will build automatically.\n- PyPI\n  - [x] [Make redshift-sqlalchemy rely on sqlalchemy-redshift](https://github.com/binarydud/redshift_sqlalchemy/pull/33)\n\nI wanted to make sure to document thoughts as I have them. Other things we'll need to keep in mind?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/38", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/38/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/38/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/38", "id": 104885993, "node_id": "MDU6SXNzdWUxMDQ4ODU5OTM=", "number": 38, "title": "Reflection should raise the proper Exception type when things are not found", "user": {"login": "cpcloud", "id": 417981, "node_id": "MDQ6VXNlcjQxNzk4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpcloud", "html_url": "https://github.com/cpcloud", "followers_url": "https://api.github.com/users/cpcloud/followers", "following_url": "https://api.github.com/users/cpcloud/following{/other_user}", "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions", "organizations_url": "https://api.github.com/users/cpcloud/orgs", "repos_url": "https://api.github.com/users/cpcloud/repos", "events_url": "https://api.github.com/users/cpcloud/events{/privacy}", "received_events_url": "https://api.github.com/users/cpcloud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-04T12:58:16Z", "updated_at": "2015-09-04T13:57:14Z", "closed_at": "2015-09-04T13:57:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now, when reflection fails, it's usually with a `KeyError`, but the other sqlalchemy dialects raise `sa.exc.NoSuch<object>Error`. I have code that depends on this exception being raised, which is how I found this issue.\n\nI've got a PR in the works.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/35", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/35/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/35/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/35", "id": 104495246, "node_id": "MDU6SXNzdWUxMDQ0OTUyNDY=", "number": 35, "title": "Fix DELETE statement for Redshift Dialect", "user": {"login": "haleemur", "id": 6108231, "node_id": "MDQ6VXNlcjYxMDgyMzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6108231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haleemur", "html_url": "https://github.com/haleemur", "followers_url": "https://api.github.com/users/haleemur/followers", "following_url": "https://api.github.com/users/haleemur/following{/other_user}", "gists_url": "https://api.github.com/users/haleemur/gists{/gist_id}", "starred_url": "https://api.github.com/users/haleemur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haleemur/subscriptions", "organizations_url": "https://api.github.com/users/haleemur/orgs", "repos_url": "https://api.github.com/users/haleemur/repos", "events_url": "https://api.github.com/users/haleemur/events{/privacy}", "received_events_url": "https://api.github.com/users/haleemur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-02T14:37:12Z", "updated_at": "2015-09-03T14:37:44Z", "closed_at": "2015-09-03T14:37:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Redshift's delete statement varies slightly from Postgresql's. [See here for documentation](http://docs.aws.amazon.com/redshift/latest/dg/r_DELETE.html).\n\nBasic delete statements have the same syntax.\n\nFor instance, the following is valid SQL in both dialects:\n\n```\nDELETE FROM customer_table WHERE customer_table.id > 1000\n```\n\nHowever, while the following is a valid statement in Postgresql:\n\n```\nDELETE FROM customer_table \nWHERE customer_table.id = order_table.customer_id \nAND order_table.id < 100\n```\n\nIt needs to be written for Redshift as:\n\n```\nDELETE FROM customer_table\nUSING order_table\nWHERE customer_table.id = order_table.customer_id\nAND order_table.id < 100\n```\n\nSqlAlchemy should be able to build this resultant query with the following Python snippet:\n\n```\nfrom sqlalchemy import delete, Table, Column, Integer, MetaData\nfrom redshift_sqlalchemy import RedshiftDialect\nmeta = MetaData()\ncustomer = Table('customer_table', meta, Column('id', Integer, primary_key=True))\norder = Table('order_table', meta, Column('id', Integer, primary_key=True), Column('customer_id', Integer)\ndel_stmt = delete(order).where(order.c.customer_id==customer.c.id).where(order.c.id<100)\nprint(del_stmt.compile(dialect=RedshiftDialect())\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/30", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/30/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/30/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/30", "id": 104120387, "node_id": "MDU6SXNzdWUxMDQxMjAzODc=", "number": 30, "title": "Redshift spinup/shutdown script", "user": {"login": "jklukas", "id": 691060, "node_id": "MDQ6VXNlcjY5MTA2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/691060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jklukas", "html_url": "https://github.com/jklukas", "followers_url": "https://api.github.com/users/jklukas/followers", "following_url": "https://api.github.com/users/jklukas/following{/other_user}", "gists_url": "https://api.github.com/users/jklukas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jklukas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jklukas/subscriptions", "organizations_url": "https://api.github.com/users/jklukas/orgs", "repos_url": "https://api.github.com/users/jklukas/repos", "events_url": "https://api.github.com/users/jklukas/events{/privacy}", "received_events_url": "https://api.github.com/users/jklukas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-08-31T19:39:44Z", "updated_at": "2015-10-27T14:49:05Z", "closed_at": "2015-09-08T22:51:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We're running tests against Redshift now and have AWS access keys available to Travis, but the cluster is currently running full-time.\n\n@graingert - you mentioned that you had a good idea of how to hook a script in to spin up the cluster for tests and then spin it back down. Are there any blockers at this point to make that happen?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/25", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/25/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/25/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/25", "id": 103529341, "node_id": "MDU6SXNzdWUxMDM1MjkzNDE=", "number": 25, "title": "Hosted documentation", "user": {"login": "cpcloud", "id": 417981, "node_id": "MDQ6VXNlcjQxNzk4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpcloud", "html_url": "https://github.com/cpcloud", "followers_url": "https://api.github.com/users/cpcloud/followers", "following_url": "https://api.github.com/users/cpcloud/following{/other_user}", "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions", "organizations_url": "https://api.github.com/users/cpcloud/orgs", "repos_url": "https://api.github.com/users/cpcloud/repos", "events_url": "https://api.github.com/users/cpcloud/events{/privacy}", "received_events_url": "https://api.github.com/users/cpcloud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/milestones/1", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/milestone/1", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/milestones/1/labels", "id": 1275942, "node_id": "MDk6TWlsZXN0b25lMTI3NTk0Mg==", "number": 1, "title": "1.0.0", "description": "Version 1!", "creator": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 4, "state": "open", "created_at": "2015-08-27T14:58:53Z", "updated_at": "2016-11-02T17:20:05Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2015-08-27T14:57:11Z", "updated_at": "2015-09-04T14:13:30Z", "closed_at": "2015-09-04T14:13:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It'd be swell to have some documentation, that for now could consist of answers to questions like \"How is this different from the postgresql dialect?\" [rtfd.org](https://rtfd.org) + sphinx would be my tool of choice here, but others may have thoughts on this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/16", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/16/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/16/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/16", "id": 101934152, "node_id": "MDU6SXNzdWUxMDE5MzQxNTI=", "number": 16, "title": "What's the maintenance status of redshift_sqlalchemy?", "user": {"login": "jklukas", "id": 691060, "node_id": "MDQ6VXNlcjY5MTA2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/691060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jklukas", "html_url": "https://github.com/jklukas", "followers_url": "https://api.github.com/users/jklukas/followers", "following_url": "https://api.github.com/users/jklukas/following{/other_user}", "gists_url": "https://api.github.com/users/jklukas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jklukas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jklukas/subscriptions", "organizations_url": "https://api.github.com/users/jklukas/orgs", "repos_url": "https://api.github.com/users/jklukas/repos", "events_url": "https://api.github.com/users/jklukas/events{/privacy}", "received_events_url": "https://api.github.com/users/jklukas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-19T16:16:25Z", "updated_at": "2015-08-19T18:13:03Z", "closed_at": "2015-08-19T18:13:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It looks like all the action is happening in this fork rather than the original @binarydud repo. I'm working on a PR that fills out the reflection capabilities. Should I propose that here?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/9", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/9/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/9/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/9", "id": 100181519, "node_id": "MDU6SXNzdWUxMDAxODE1MTk=", "number": 9, "title": "Run travis tests on real redshift database", "user": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2015-08-10T22:16:44Z", "updated_at": "2015-08-22T21:45:57Z", "closed_at": "2015-08-22T21:45:57Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Can't currently justify the cost of a redshift database just to run travis tests.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/8", "repository_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift", "labels_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/8/comments", "events_url": "https://api.github.com/repos/sqlalchemy-redshift/sqlalchemy-redshift/issues/8/events", "html_url": "https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/issues/8", "id": 100181400, "node_id": "MDU6SXNzdWUxMDAxODE0MDA=", "number": 8, "title": "Support other drivers eg pg8000 or psycopg2cffi", "user": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-10T22:15:47Z", "updated_at": "2017-05-04T12:46:52Z", "closed_at": "2017-05-04T12:46:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Also do not depend on psycopg2\n", "performed_via_github_app": null, "score": 1.0}]}