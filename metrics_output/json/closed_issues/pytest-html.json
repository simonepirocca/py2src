{"total_count": 143, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/327", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/327/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/327/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/327", "id": 676099419, "node_id": "MDU6SXNzdWU2NzYwOTk0MTk=", "number": 327, "title": "proposal: combine ansi2html and non-ansi2html tox envs into one", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, {"login": "BeyondEvil", "id": 15611634, "node_id": "MDQ6VXNlcjE1NjExNjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/15611634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BeyondEvil", "html_url": "https://github.com/BeyondEvil", "followers_url": "https://api.github.com/users/BeyondEvil/followers", "following_url": "https://api.github.com/users/BeyondEvil/following{/other_user}", "gists_url": "https://api.github.com/users/BeyondEvil/gists{/gist_id}", "starred_url": "https://api.github.com/users/BeyondEvil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BeyondEvil/subscriptions", "organizations_url": "https://api.github.com/users/BeyondEvil/orgs", "repos_url": "https://api.github.com/users/BeyondEvil/repos", "events_url": "https://api.github.com/users/BeyondEvil/events{/privacy}", "received_events_url": "https://api.github.com/users/BeyondEvil/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-08-10T12:30:30Z", "updated_at": "2020-08-11T12:54:35Z", "closed_at": "2020-08-11T12:54:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We should be able to test pytest-html behavior in presence or absence of ansi2html without having two different tox environments.\r\n\r\nBy avoiding a new dimention in tox env matrix, we can simplify local and CI/CD testing, making much easier to maintain the tool. Absence of ansi2html cab easily be mocked.\r\n\r\nPlease add +/- to it and based on that I can file a PR, or not.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/323", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/323/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/323/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/323", "id": 671644967, "node_id": "MDU6SXNzdWU2NzE2NDQ5Njc=", "number": 323, "title": "Results table creates one <tbody> element per row", "user": {"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649589, "node_id": "MDU6TGFiZWwxOTk2NDk1ODk=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-08-02T16:18:09Z", "updated_at": "2020-08-05T03:35:57Z", "closed_at": "2020-08-05T03:35:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently `pytest-html` creates one `<tbody>` element per row. Perhaps it should make only one `<tbody>` element for the table?\r\n\r\nPlease see the below image with Firefox web inspector open. Report generated by head of `pytest-html`:\r\n\r\n![Screen Shot 2020-08-02 at 12 13 55 PM](https://user-images.githubusercontent.com/13026015/89127246-16381080-d4ba-11ea-8d74-5513552446f0.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/321", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/321/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/321/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/321", "id": 668106432, "node_id": "MDU6SXNzdWU2NjgxMDY0MzI=", "number": 321, "title": "Error with Pytest 6.0.0", "user": {"login": "brad-natelborg", "id": 40061384, "node_id": "MDQ6VXNlcjQwMDYxMzg0", "avatar_url": "https://avatars3.githubusercontent.com/u/40061384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brad-natelborg", "html_url": "https://github.com/brad-natelborg", "followers_url": "https://api.github.com/users/brad-natelborg/followers", "following_url": "https://api.github.com/users/brad-natelborg/following{/other_user}", "gists_url": "https://api.github.com/users/brad-natelborg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brad-natelborg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brad-natelborg/subscriptions", "organizations_url": "https://api.github.com/users/brad-natelborg/orgs", "repos_url": "https://api.github.com/users/brad-natelborg/repos", "events_url": "https://api.github.com/users/brad-natelborg/events{/privacy}", "received_events_url": "https://api.github.com/users/brad-natelborg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-29T19:52:14Z", "updated_at": "2020-07-30T12:27:30Z", "closed_at": "2020-07-30T12:27:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the latest version of Pytest coming out on 7/29/2020, I now get the following error in pytest-html:\r\n\r\n```\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/_pytest/main.py\", line 240, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/_pytest/main.py\", line 296, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/_pytest/main.py\", line 321, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/_pytest/runner.py\", line 100, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/_pytest/runner.py\", line 111, in runtestprotocol\r\nINTERNALERROR>     rep = call_and_report(item, \"setup\", log)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/_pytest/runner.py\", line 211, in call_and_report\r\nINTERNALERROR>     hook.pytest_runtest_logreport(report=report)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pytest_html/plugin.py\", line 559, in pytest_runtest_logreport\r\nINTERNALERROR>     self.append_skipped(report)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pytest_html/plugin.py\", line 336, in append_skipped\r\nINTERNALERROR>     self._appendrow(\"Skipped\", report)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pytest_html/plugin.py\", line 296, in _appendrow\r\nINTERNALERROR>     result = self.TestResult(outcome, report, self.logfile, self.config)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pytest_html/plugin.py\", line 137, in __init__\r\nINTERNALERROR>     self.append_log_html(report, self.additional_html)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/pytest_html/plugin.py\", line 268, in append_log_html\r\nINTERNALERROR>     for line in report.longreprtext.splitlines():\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/_pytest/reports.py\", line 105, in longreprtext\r\nINTERNALERROR>     self.toterminal(tw)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/_pytest/reports.py\", line 85, in toterminal\r\nINTERNALERROR>     out.line(longrepr)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/_pytest/_io/terminalwriter.py\", line 168, in line\r\nINTERNALERROR>     self.write(s, **markup)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.5/dist-packages/_pytest/_io/terminalwriter.py\", line 144, in write\r\nINTERNALERROR>     current_line = msg.rsplit(\"\\n\", 1)[-1]\r\nINTERNALERROR> AttributeError: 'tuple' object has no attribute 'rsplit'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/317", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/317/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/317/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/317", "id": 658989714, "node_id": "MDU6SXNzdWU2NTg5ODk3MTQ=", "number": 317, "title": "init error : No such file or directory: '{csspath}", "user": {"login": "wanwan905", "id": 24651163, "node_id": "MDQ6VXNlcjI0NjUxMTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/24651163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanwan905", "html_url": "https://github.com/wanwan905", "followers_url": "https://api.github.com/users/wanwan905/followers", "following_url": "https://api.github.com/users/wanwan905/following{/other_user}", "gists_url": "https://api.github.com/users/wanwan905/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanwan905/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanwan905/subscriptions", "organizations_url": "https://api.github.com/users/wanwan905/orgs", "repos_url": "https://api.github.com/users/wanwan905/repos", "events_url": "https://api.github.com/users/wanwan905/events{/privacy}", "received_events_url": "https://api.github.com/users/wanwan905/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-17T03:32:20Z", "updated_at": "2020-07-17T09:11:13Z", "closed_at": "2020-07-17T09:11:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use pytest in embedded linux \r\nand python version is 3.5.9\r\n\r\nwhen running \"pytest \" \uff1a\r\n\r\nTraceback (most recent call last):\r\n  File \"/mnt/python/python35/bin/pytest\", line 11, in <module>\r\n    load_entry_point('pytest==5.4.3', 'console_scripts', 'pytest')()\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pytest-5.4.3-py3.5.egg/_pytest/config/__init__.py\", line 105, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pytest-5.4.3-py3.5.egg/_pytest/config/__init__.py\", line 258, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pluggy-0.13.1-py3.5.egg/pluggy/hooks.py\", line 286, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pluggy-0.13.1-py3.5.egg/pluggy/manager.py\", line 93, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pluggy-0.13.1-py3.5.egg/pluggy/manager.py\", line 87, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pluggy-0.13.1-py3.5.egg/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pytest-5.4.3-py3.5.egg/_pytest/helpconfig.py\", line 90, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pluggy-0.13.1-py3.5.egg/pluggy/callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pluggy-0.13.1-py3.5.egg/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pytest-5.4.3-py3.5.egg/_pytest/config/__init__.py\", line 836, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pytest-5.4.3-py3.5.egg/_pytest/config/__init__.py\", line 1044, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pytest-5.4.3-py3.5.egg/_pytest/config/__init__.py\", line 992, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints(\"pytest11\")\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pluggy-0.13.1-py3.5.egg/pluggy/manager.py\", line 299, in load_setuptools_entrypoints\r\n    plugin = ep.load()\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/importlib_metadata-1.7.0-py3.5.egg/importlib_metadata/__init__.py\", line 105, in load\r\n  File \"/mnt/python/python35/lib/python3.5/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 985, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 968, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 953, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 896, in _find_spec\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pytest-5.4.3-py3.5.egg/_pytest/assertion/rewrite.py\", line 82, in find_spec\r\n    spec = self._find_spec(name, path)\r\n  File \"<frozen importlib._bootstrap_external>\", line 1171, in find_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1147, in _get_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1128, in _legacy_get_spec\r\n  File \"<frozen importlib._bootstrap>\", line 444, in spec_from_loader\r\n  File \"<frozen importlib._bootstrap_external>\", line 565, in spec_from_file_location\r\n  File \"/mnt/python/python35/lib/python3.5/site-packages/pytest_html-2.1.1-py3.5.egg/pytest_html/plugin.py\", line 79\r\n    raise IOError(f\"No such file or directory: '{csspath}'\")\r\n                                                          ^\r\nSyntaxError: invalid syntax\r\n\r\nLooking forward to your reply", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/314", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/314/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/314/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/314", "id": 655991746, "node_id": "MDU6SXNzdWU2NTU5OTE3NDY=", "number": 314, "title": "Garbage date-time is printed in the Captured log.", "user": {"login": "pawan7476", "id": 52998517, "node_id": "MDQ6VXNlcjUyOTk4NTE3", "avatar_url": "https://avatars3.githubusercontent.com/u/52998517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pawan7476", "html_url": "https://github.com/pawan7476", "followers_url": "https://api.github.com/users/pawan7476/followers", "following_url": "https://api.github.com/users/pawan7476/following{/other_user}", "gists_url": "https://api.github.com/users/pawan7476/gists{/gist_id}", "starred_url": "https://api.github.com/users/pawan7476/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pawan7476/subscriptions", "organizations_url": "https://api.github.com/users/pawan7476/orgs", "repos_url": "https://api.github.com/users/pawan7476/repos", "events_url": "https://api.github.com/users/pawan7476/events{/privacy}", "received_events_url": "https://api.github.com/users/pawan7476/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2020-07-13T16:43:22Z", "updated_at": "2020-08-10T12:25:37Z", "closed_at": "2020-08-10T12:25:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Garbage date-time is printed in the Captured log.\r\n\r\n**pytest-html report:**\r\n\r\n------------------------------ Captured log setup ------------------------------\r\n\u001b[32mINFO    \u001b[0m root:test_cyclic_switchover.py:26 Inside Setup \r\n\u001b[32mINFO    \u001b[0m root:test_cyclic_switchover.py:54 \r\n------------------------------ Captured log call -------------------------------\r\n\u001b[32mINFO    \u001b[0m root:test_cyclic_switchover.py:82 \r\n Switchover Process : SCM\r\n\r\n**pytest console log :** \r\n\r\ncollected 4 items / 2 deselected / 2 selected\r\n\r\ntest_cyclic_switchover.py::test_process_switchover[SCM]\r\n------------------------------------------------------------ live log setup -------------------------------------------------------------\r\n2020-07-13 21:51:50 [    INFO] Inside Setup\r\n (test_cyclic_switchover.py:26)\r\n2020-07-13 21:51:50 [    INFO]\r\n(test_cyclic_switchover.py:54)\r\n------------------------------------------------------------- live log call -------------------------------------------------------------\r\n2020-07-13 21:51:50 [    INFO]\r\n Switchover Process : SCM (test_cyclic_switchover.py:82)\r\nPASSED                                                                                                                            [ 50%]\r\ntest_cyclic_switchover.py::test_process_switchover[SAM]\r\n------------------------------------------------------------- live log call -------------------------------------------------------------\r\n2020-07-13 21:51:50 [    INFO]\r\n Switchover Process : SAM (test_cyclic_switchover.py:82)\r\nPASSED                                                                                                                            [100%]\r\n----------------------------------------------------------- live log teardown -----------------------------------------------------------\r\n2020-07-13 21:51:50 [    INFO] Inside Teardown (test_cyclic_switchover.py:60)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/306", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/306/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/306/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/306", "id": 638171187, "node_id": "MDU6SXNzdWU2MzgxNzExODc=", "number": 306, "title": "Upcoming incompatibility in pytest-xdist 2.0: \"slave\" aliases removed", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-13T14:26:29Z", "updated_at": "2020-06-13T14:27:27Z", "closed_at": "2020-06-13T14:27:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi!\r\n\r\nAs per https://github.com/pytest-dev/pytest-xdist/pull/541, pytest-xdist 2.0 will remove the deprecated \"slave\" \r\naliases, which have been replaced by \"worker\" since pytest-xdist 1.22.\r\n\r\nTo avoid breakage, the team suggests to update your package to use the new terms, and make a new release to avoid sudden breakages once pytest-xdist 2.0 is released.\r\n\r\ncc @Zac-HD @RonnyPfannschmidt\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/305", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/305/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/305/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/305", "id": 638171162, "node_id": "MDU6SXNzdWU2MzgxNzExNjI=", "number": 305, "title": "Upcoming incompatibility in pytest-xdist 2.0: \"slave\" aliases removed", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-13T14:26:19Z", "updated_at": "2020-06-18T15:05:05Z", "closed_at": "2020-06-18T15:05:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi!\r\n\r\nAs per https://github.com/pytest-dev/pytest-xdist/pull/541, pytest-xdist 2.0 will remove the deprecated \"slave\" \r\naliases, which have been replaced by \"worker\" since pytest-xdist 1.22.\r\n\r\nTo avoid breakage, the team suggests to update your package to use the new terms, and make a new release to avoid sudden breakages once pytest-xdist 2.0 is released.\r\n\r\ncc @Zac-HD @RonnyPfannschmidt\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/304", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/304/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/304/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/304", "id": 637900868, "node_id": "MDU6SXNzdWU2Mzc5MDA4Njg=", "number": 304, "title": "[pytest] render_collapsed = True  does not seem to work ", "user": {"login": "cauvery", "id": 7635045, "node_id": "MDQ6VXNlcjc2MzUwNDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7635045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cauvery", "html_url": "https://github.com/cauvery", "followers_url": "https://api.github.com/users/cauvery/followers", "following_url": "https://api.github.com/users/cauvery/following{/other_user}", "gists_url": "https://api.github.com/users/cauvery/gists{/gist_id}", "starred_url": "https://api.github.com/users/cauvery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cauvery/subscriptions", "organizations_url": "https://api.github.com/users/cauvery/orgs", "repos_url": "https://api.github.com/users/cauvery/repos", "events_url": "https://api.github.com/users/cauvery/events{/privacy}", "received_events_url": "https://api.github.com/users/cauvery/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-12T17:22:49Z", "updated_at": "2020-06-26T17:05:12Z", "closed_at": "2020-06-26T17:05:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried the below from my tox.ini file and it does not seem to work  for html results to be collapsed\r\n\r\n[pytest]\r\nrender_collapsed = True\r\n\r\nCan someone please take a look at that feature if it is supposed to work from pytest.ini and/or tox.ini file.\r\n\r\nThanks,\r\nCauvery", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/303", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/303/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/303/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/303", "id": 637384185, "node_id": "MDU6SXNzdWU2MzczODQxODU=", "number": 303, "title": "Need access to config data inside the pytest_html_results_summary hook", "user": {"login": "suchitha92", "id": 6263394, "node_id": "MDQ6VXNlcjYyNjMzOTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6263394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suchitha92", "html_url": "https://github.com/suchitha92", "followers_url": "https://api.github.com/users/suchitha92/followers", "following_url": "https://api.github.com/users/suchitha92/following{/other_user}", "gists_url": "https://api.github.com/users/suchitha92/gists{/gist_id}", "starred_url": "https://api.github.com/users/suchitha92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suchitha92/subscriptions", "organizations_url": "https://api.github.com/users/suchitha92/orgs", "repos_url": "https://api.github.com/users/suchitha92/repos", "events_url": "https://api.github.com/users/suchitha92/events{/privacy}", "received_events_url": "https://api.github.com/users/suchitha92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-11T23:37:15Z", "updated_at": "2020-07-22T17:50:17Z", "closed_at": "2020-07-22T17:49:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to acess the config data inside the pytest_html_results_summary hook to add the details of the command being invoked for the test as a part of summary. Something like below to be appeared in the report after summary section\"\r\n\r\n**Summary**\r\n2 tests ran in 3.31 seconds.\r\n\r\n(Un)check the boxes to filter the results.\r\n\r\n1 passed, 1 skipped, 0 failed, 0 errors, 0 expected failures, 0 unexpected passes\r\n\r\n**Command to reproduce the test**\r\npytest -v --report=report.html --self-contained-html --preset 1\"\r\n\r\nCurrently, there is only provision to add some generic string in the pytest_html_results_summary hook. So I'm not able to access the \"preset\" cli option inside the hook.\r\n\r\nIs there any other way to acheive this? Please let me know on this\r\n\r\n_Originally posted by @suchitha92 in https://github.com/pytest-dev/pytest-html/issues/109#issuecomment-642977751_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/300", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/300/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/300/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/300", "id": 622889420, "node_id": "MDU6SXNzdWU2MjI4ODk0MjA=", "number": 300, "title": "development.rst link to tox is insecure", "user": {"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-22T01:39:06Z", "updated_at": "2020-05-25T06:18:58Z", "closed_at": "2020-05-25T06:18:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi all, when I click the link to learn more about Tox in development.rst, Firefox flags the link as insecure. Perhaps it should redirect to https://tox.readthedocs.io/en/latest/#?\r\n\r\nLocation of link to Tox:\r\n![Screen Shot 2020-05-21 at 9 34 34 PM](https://user-images.githubusercontent.com/13026015/82622259-52422180-9bab-11ea-8dcc-d0cf282f7013.png)\r\n\r\nWhat Firefox shows when link to Tox is clicked:\r\n![Screen Shot 2020-05-21 at 9 36 28 PM](https://user-images.githubusercontent.com/13026015/82622268-5a9a5c80-9bab-11ea-9706-39f400a763c3.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/297", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/297/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/297/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/297", "id": 614622589, "node_id": "MDU6SXNzdWU2MTQ2MjI1ODk=", "number": 297, "title": "When using pytest-html with pytest-xdist plugin , i am getting the \"assert not crashitem, (crashitem, node)", "user": {"login": "pranav165", "id": 26303706, "node_id": "MDQ6VXNlcjI2MzAzNzA2", "avatar_url": "https://avatars2.githubusercontent.com/u/26303706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pranav165", "html_url": "https://github.com/pranav165", "followers_url": "https://api.github.com/users/pranav165/followers", "following_url": "https://api.github.com/users/pranav165/following{/other_user}", "gists_url": "https://api.github.com/users/pranav165/gists{/gist_id}", "starred_url": "https://api.github.com/users/pranav165/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pranav165/subscriptions", "organizations_url": "https://api.github.com/users/pranav165/orgs", "repos_url": "https://api.github.com/users/pranav165/repos", "events_url": "https://api.github.com/users/pranav165/events{/privacy}", "received_events_url": "https://api.github.com/users/pranav165/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-08T09:23:09Z", "updated_at": "2020-05-08T10:57:44Z", "closed_at": "2020-05-08T10:55:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nException is thrown at getplugin statement\r\n\r\n@pytest.hookimpl(hookwrapper=True)\r\ndef pytest_runtest_makereport(item):\r\n    pytest_html = item.config.pluginmanager.getplugin(\"html\")\r\n\r\n\r\nscheduling tests via LoadScheduling\r\n\r\ntests/api/test_price_book.py::TestPriceBookAPI::test_get_pricebook_id \r\ntests/api/test_price_book.py::TestPriceBookAPI::test_get_pricebook_api \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"C:\\Users\\pranavsh\\OneDrive - Ciena Corporation\\Desktop\\e2e\\networkplanner-e2e-test\\venv\\lib\\site-packages\\_pytest\\main.py\", line 191, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"C:\\Users\\pranavsh\\OneDrive - Ciena Corporation\\Desktop\\e2e\\networkplanner-e2e-test\\venv\\lib\\site-packages\\_pytest\\main.py\", line 247, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"C:\\Users\\pranavsh\\OneDrive - Ciena Corporation\\Desktop\\e2e\\networkplanner-e2e-test\\venv\\lib\\site-packages\\pluggy\\hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"C:\\Users\\pranavsh\\OneDrive - Ciena Corporation\\Desktop\\e2e\\networkplanner-e2e-test\\venv\\lib\\site-packages\\pluggy\\manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"C:\\Users\\pranavsh\\OneDrive - Ciena Corporation\\Desktop\\e2e\\networkplanner-e2e-test\\venv\\lib\\site-packages\\pluggy\\manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"C:\\Users\\pranavsh\\OneDrive - Ciena Corporation\\Desktop\\e2e\\networkplanner-e2e-test\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"C:\\Users\\pranavsh\\OneDrive - Ciena Corporation\\Desktop\\e2e\\networkplanner-e2e-test\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"C:\\Users\\pranavsh\\OneDrive - Ciena Corporation\\Desktop\\e2e\\networkplanner-e2e-test\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"c:\\users\\pranavsh\\onedrive - ciena corporation\\desktop\\e2e\\networkplanner-e2e-test\\venv\\lib\\site-packages\\xdist\\dsession.py\", line 112, in pytest_runtestloop\r\nINTERNALERROR>     self.loop_once()\r\nINTERNALERROR>   File \"c:\\users\\pranavsh\\onedrive - ciena corporation\\desktop\\e2e\\networkplanner-e2e-test\\venv\\lib\\site-packages\\xdist\\dsession.py\", line 135, in loop_once\r\nINTERNALERROR>     call(**kwargs)\r\nINTERNALERROR>   File \"c:\\users\\pranavsh\\onedrive - ciena corporation\\desktop\\e2e\\networkplanner-e2e-test\\venv\\lib\\site-packages\\xdist\\dsession.py\", line 177, in worker_workerfinished\r\nINTERNALERROR>     assert not crashitem, (crashitem, node)\r\nINTERNALERROR> AssertionError: ('tests/api/test_price_book.py::TestPriceBookAPI::test_get_pricebook_id', <WorkerController gw1>)\r\nINTERNALERROR> assert not 'tests/api/test_price_book.py::TestPriceBookAPI::test_get_pricebook_id'\r\nTraceback (most recent call last):\r\n  File \"C:/Users/pranavsh/OneDrive - Ciena Corporation/Desktop/e2e/networkplanner-e2e-test/main.py\", line 23, in <module>\r\n    main(sys.argv[1:])\r\n  File \"C:/Users/pranavsh/OneDrive - Ciena Corporation/Desktop/e2e/networkplanner-e2e-test/main.py\", line 19, in main\r\n    raise Exception(\"Test Execution Failed with exit code {}\".format(exit_code))\r\nException: Test Execution Failed with exit code 3\r\n\r\n\r\nmetadata: {'Python': '3.8.1', 'Platform': 'Windows-10-10.0.18362-SP0', 'Packages': {'pytest': '5.4.1', 'py': '1.8.1', 'pluggy': '0.13.1'}, 'Plugins': {'flaky': '3.6.1', 'forked': '1.1.3', 'html': '2.1.1', 'metadata': '1.9.0', 'xdist': '1.32.0'}, 'channelplanner': '1.5.1-9-cicd', 'mbfsimulation': '2.0.0-10-cicd', 'platform': '19.10.01', 'oneple': '2.69.0-cicd', 'plannerplus': '1.2.0-322-cicd', 'appscore': '3.11.2-cicd', 'env': 'cicd', 'average_api_response_time (ms)': {'post /tokens': 2435, 'get /solutions/states': 2717}, 'average_ui_response_time (seconds)': {}}\r\n\r\nplugins: flaky-3.6.1, forked-1.1.3, html-2.1.1, metadata-1.9.0, xdist-1.32.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/292", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/292/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/292/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/292", "id": 596872986, "node_id": "MDU6SXNzdWU1OTY4NzI5ODY=", "number": 292, "title": "Question: Is there a fixture that allows me to modifiy the initial-sort column ?", "user": {"login": "h-rueda", "id": 16239820, "node_id": "MDQ6VXNlcjE2MjM5ODIw", "avatar_url": "https://avatars3.githubusercontent.com/u/16239820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h-rueda", "html_url": "https://github.com/h-rueda", "followers_url": "https://api.github.com/users/h-rueda/followers", "following_url": "https://api.github.com/users/h-rueda/following{/other_user}", "gists_url": "https://api.github.com/users/h-rueda/gists{/gist_id}", "starred_url": "https://api.github.com/users/h-rueda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h-rueda/subscriptions", "organizations_url": "https://api.github.com/users/h-rueda/orgs", "repos_url": "https://api.github.com/users/h-rueda/repos", "events_url": "https://api.github.com/users/h-rueda/events{/privacy}", "received_events_url": "https://api.github.com/users/h-rueda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-08T21:24:06Z", "updated_at": "2020-04-09T16:30:30Z", "closed_at": "2020-04-09T16:30:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to be able to set the initial-sort column through a hook.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/288", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/288/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/288/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/288", "id": 593580711, "node_id": "MDU6SXNzdWU1OTM1ODA3MTE=", "number": 288, "title": "Jenkins doesn't execute the embedded script code of pytest-html reports", "user": {"login": "h-rueda", "id": 16239820, "node_id": "MDQ6VXNlcjE2MjM5ODIw", "avatar_url": "https://avatars3.githubusercontent.com/u/16239820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h-rueda", "html_url": "https://github.com/h-rueda", "followers_url": "https://api.github.com/users/h-rueda/followers", "following_url": "https://api.github.com/users/h-rueda/following{/other_user}", "gists_url": "https://api.github.com/users/h-rueda/gists{/gist_id}", "starred_url": "https://api.github.com/users/h-rueda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h-rueda/subscriptions", "organizations_url": "https://api.github.com/users/h-rueda/orgs", "repos_url": "https://api.github.com/users/h-rueda/repos", "events_url": "https://api.github.com/users/h-rueda/events{/privacy}", "received_events_url": "https://api.github.com/users/h-rueda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-03T19:03:06Z", "updated_at": "2020-04-06T08:29:41Z", "closed_at": "2020-04-06T08:29:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that Jenkins blocks the execution of the embedded script code of the pytest-html reports\r\n\r\nAll table rows are expanded by default and they don't have the click event attached to them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/282", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/282/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/282/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/282", "id": 579391865, "node_id": "MDU6SXNzdWU1NzkzOTE4NjU=", "number": 282, "title": "2.1.0 release causing object has no attribute 'funcargs'", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-11T16:27:56Z", "updated_at": "2020-03-19T11:24:13Z", "closed_at": "2020-03-18T18:46:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Apparently the release of `pytest-html==2.1.0` broke our CI https://logserver.rdoproject.org/74/24774/67/check/rdo-tox-molecule/db3175d/job-output.txt\r\n\r\nFor the time being, I will pin-down: `pytest-html<2.1.0`\r\n\r\nThis bug is likely to affect any user of molecule, as we recommended using pytest-html to improve the reporting, but it is not a direct dependency of molecule tool itself, so we cannot really change module to workaround it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/279", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/279/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/279/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/279", "id": 578785320, "node_id": "MDU6SXNzdWU1Nzg3ODUzMjA=", "number": 279, "title": "Hook pytest_html_report_title not available in tag 2.0.1", "user": {"login": "Maytrovato", "id": 17887569, "node_id": "MDQ6VXNlcjE3ODg3NTY5", "avatar_url": "https://avatars2.githubusercontent.com/u/17887569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maytrovato", "html_url": "https://github.com/Maytrovato", "followers_url": "https://api.github.com/users/Maytrovato/followers", "following_url": "https://api.github.com/users/Maytrovato/following{/other_user}", "gists_url": "https://api.github.com/users/Maytrovato/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maytrovato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maytrovato/subscriptions", "organizations_url": "https://api.github.com/users/Maytrovato/orgs", "repos_url": "https://api.github.com/users/Maytrovato/repos", "events_url": "https://api.github.com/users/Maytrovato/events{/privacy}", "received_events_url": "https://api.github.com/users/Maytrovato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-10T18:40:05Z", "updated_at": "2020-03-11T09:25:40Z", "closed_at": "2020-03-11T09:25:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys, I just update the package in my repo but that hooks is still not available. Even tho is in the readme. Can you please update it? thanks.\r\n\r\n\r\nIt throws this message.\r\n\r\n```\r\nINTERNALERROR>     % (name, hookimpl.plugin),\r\nINTERNALERROR> pluggy.manager.PluginValidationError: unknown hook 'pytest_html_report_title' in plugin\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/272", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/272/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/272/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/272", "id": 574013128, "node_id": "MDU6SXNzdWU1NzQwMTMxMjg=", "number": 272, "title": "Can't freeze pytest with pytest-html plugin using PyInstaller", "user": {"login": "jackkrieger", "id": 4918978, "node_id": "MDQ6VXNlcjQ5MTg5Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4918978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackkrieger", "html_url": "https://github.com/jackkrieger", "followers_url": "https://api.github.com/users/jackkrieger/followers", "following_url": "https://api.github.com/users/jackkrieger/following{/other_user}", "gists_url": "https://api.github.com/users/jackkrieger/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackkrieger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackkrieger/subscriptions", "organizations_url": "https://api.github.com/users/jackkrieger/orgs", "repos_url": "https://api.github.com/users/jackkrieger/repos", "events_url": "https://api.github.com/users/jackkrieger/events{/privacy}", "received_events_url": "https://api.github.com/users/jackkrieger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-02T14:30:01Z", "updated_at": "2020-03-03T08:58:59Z", "closed_at": "2020-03-03T08:58:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to freeze my test code with pytest-html plugin using PyInstaller 3.6\r\n\r\nMy conftest.py contains HTML report customisation code:\r\n\r\n```python\r\ndef pytest_html_results_summary(prefix, summary, postfix):\r\n\tdut_name = DEVICE\r\n\tprefix.extend([html.p(dut_name)])\r\n```\r\n\r\nThere is a code in my test app to allow external plugins to be frozen:\r\n\r\n```python\r\nimport pytest_html\r\nimport pytest_metadata\r\n\r\nimport pytest\r\n\r\nresult = pytest.main(['testdir'], plugins=[pytest_html, pytest_metadata])\r\n```\r\n\r\nWhen running the app I get\r\n```\r\nINTERNALERROR> pluggy.manager.PluginValidationError: unknown hook 'pytest_html_r\r\nesults_summary' in plugin <module 'conftest' from '~\\\\conftest.py'>\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/266", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/266/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/266/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/266", "id": 562606815, "node_id": "MDU6SXNzdWU1NjI2MDY4MTU=", "number": 266, "title": "Query: how to pass value to a new environment at runtime? ", "user": {"login": "p00j4", "id": 6470509, "node_id": "MDQ6VXNlcjY0NzA1MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6470509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p00j4", "html_url": "https://github.com/p00j4", "followers_url": "https://api.github.com/users/p00j4/followers", "following_url": "https://api.github.com/users/p00j4/following{/other_user}", "gists_url": "https://api.github.com/users/p00j4/gists{/gist_id}", "starred_url": "https://api.github.com/users/p00j4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p00j4/subscriptions", "organizations_url": "https://api.github.com/users/p00j4/orgs", "repos_url": "https://api.github.com/users/p00j4/repos", "events_url": "https://api.github.com/users/p00j4/events{/privacy}", "received_events_url": "https://api.github.com/users/p00j4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649594, "node_id": "MDU6TGFiZWwxOTk2NDk1OTQ=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-10T14:42:44Z", "updated_at": "2020-02-11T14:42:55Z", "closed_at": "2020-02-11T14:42:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/pytest-dev/pytest-html#environment shows how to add a new env variable with a static value. I want to generate html with dynamic values which I get on the test run. something like in the setup stage. \r\nUse case: I want to inject variables like where did this test run, which DB, which env etc. \r\n\r\n**Here is snippet of my trials** \r\ntestfile.py\r\n```python\r\n def test_validator(self, request, payload):\r\n    request.config._db_name = payload['db_name] #this doesn't work in configure plugin\r\n    request.node._db_name = payload['db_name'] # this works in makereport plugin\r\n```\r\n\r\n**In conftest.py**\r\n```python\r\npytest_runtest_makereport(item, call):\r\n   print(getattr(item, 'db_name', \"default\"))  #this works and prints the db_name value passed \r\n```\r\n\r\nbut below doesn't work\r\n```python\r\ndef pytest_configure(config):\r\n    config._metadata['DB'] = getattr(config, '_db_name', 'default') #this always fail and prints default\r\n```\r\nI'm able to figure that, this is not supposed to work may be because **config** object doesn't have any info about the *item* object and also config is generated at the very beginning, till then the test_validator call is not reached. \r\n\r\nWhat can I change to make this work? I know i'm missing something really small here.\r\n\r\nOne way I see is to use options\r\n``` config.getoption(\"--my_option_name\")```\r\nbut that doesn't help if I want to build the variable value in the test/setup section \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/261", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/261/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/261/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/261", "id": 558808659, "node_id": "MDU6SXNzdWU1NTg4MDg2NTk=", "number": 261, "title": "Refactor extra Images and videos as extra media to eliminate duplicate code.", "user": {"login": "ExaltedBagel", "id": 14863943, "node_id": "MDQ6VXNlcjE0ODYzOTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/14863943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExaltedBagel", "html_url": "https://github.com/ExaltedBagel", "followers_url": "https://api.github.com/users/ExaltedBagel/followers", "following_url": "https://api.github.com/users/ExaltedBagel/following{/other_user}", "gists_url": "https://api.github.com/users/ExaltedBagel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExaltedBagel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExaltedBagel/subscriptions", "organizations_url": "https://api.github.com/users/ExaltedBagel/orgs", "repos_url": "https://api.github.com/users/ExaltedBagel/repos", "events_url": "https://api.github.com/users/ExaltedBagel/events{/privacy}", "received_events_url": "https://api.github.com/users/ExaltedBagel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-03T02:42:13Z", "updated_at": "2020-02-07T11:59:15Z", "closed_at": "2020-02-07T11:59:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The pull request #260 adds support for extra videos, however this introduced a lot of duplicated code. In order to deal with this new duplicate code, we could refactor images and video as media.\r\n\r\nThis would add no new functionnalities, but would do a bit of cleanup. This might be a required before merging #260.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/259", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/259/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/259/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/259", "id": 557886182, "node_id": "MDU6SXNzdWU1NTc4ODYxODI=", "number": 259, "title": "Add support for embed videos", "user": {"login": "ExaltedBagel", "id": 14863943, "node_id": "MDQ6VXNlcjE0ODYzOTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/14863943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExaltedBagel", "html_url": "https://github.com/ExaltedBagel", "followers_url": "https://api.github.com/users/ExaltedBagel/followers", "following_url": "https://api.github.com/users/ExaltedBagel/following{/other_user}", "gists_url": "https://api.github.com/users/ExaltedBagel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExaltedBagel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExaltedBagel/subscriptions", "organizations_url": "https://api.github.com/users/ExaltedBagel/orgs", "repos_url": "https://api.github.com/users/ExaltedBagel/repos", "events_url": "https://api.github.com/users/ExaltedBagel/events{/privacy}", "received_events_url": "https://api.github.com/users/ExaltedBagel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649591, "node_id": "MDU6TGFiZWwxOTk2NDk1OTE=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ExaltedBagel", "id": 14863943, "node_id": "MDQ6VXNlcjE0ODYzOTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/14863943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExaltedBagel", "html_url": "https://github.com/ExaltedBagel", "followers_url": "https://api.github.com/users/ExaltedBagel/followers", "following_url": "https://api.github.com/users/ExaltedBagel/following{/other_user}", "gists_url": "https://api.github.com/users/ExaltedBagel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExaltedBagel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExaltedBagel/subscriptions", "organizations_url": "https://api.github.com/users/ExaltedBagel/orgs", "repos_url": "https://api.github.com/users/ExaltedBagel/repos", "events_url": "https://api.github.com/users/ExaltedBagel/events{/privacy}", "received_events_url": "https://api.github.com/users/ExaltedBagel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ExaltedBagel", "id": 14863943, "node_id": "MDQ6VXNlcjE0ODYzOTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/14863943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExaltedBagel", "html_url": "https://github.com/ExaltedBagel", "followers_url": "https://api.github.com/users/ExaltedBagel/followers", "following_url": "https://api.github.com/users/ExaltedBagel/following{/other_user}", "gists_url": "https://api.github.com/users/ExaltedBagel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExaltedBagel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExaltedBagel/subscriptions", "organizations_url": "https://api.github.com/users/ExaltedBagel/orgs", "repos_url": "https://api.github.com/users/ExaltedBagel/repos", "events_url": "https://api.github.com/users/ExaltedBagel/events{/privacy}", "received_events_url": "https://api.github.com/users/ExaltedBagel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-01-31T03:13:15Z", "updated_at": "2020-02-07T11:58:25Z", "closed_at": "2020-02-07T11:58:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**SUMMARY**\r\nHTML5 has the capacity to included videos into the html by using the <video> tag. This usage can easily be added as another extra, with the same constraints as the images.\r\n\r\nVideo width and height could be relegated to a video class to allow the user to have more control on the presentation aspect of the video.\r\n\r\n**REQUIRED FORMAT SUPPORT**\r\n- mp4\r\n- oog", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/257", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/257/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/257/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/257", "id": 548066630, "node_id": "MDU6SXNzdWU1NDgwNjY2MzA=", "number": 257, "title": "Need an ability to include \"short test summary info\" section into HTML report", "user": {"login": "AshotVantsyan", "id": 19218177, "node_id": "MDQ6VXNlcjE5MjE4MTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19218177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AshotVantsyan", "html_url": "https://github.com/AshotVantsyan", "followers_url": "https://api.github.com/users/AshotVantsyan/followers", "following_url": "https://api.github.com/users/AshotVantsyan/following{/other_user}", "gists_url": "https://api.github.com/users/AshotVantsyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/AshotVantsyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AshotVantsyan/subscriptions", "organizations_url": "https://api.github.com/users/AshotVantsyan/orgs", "repos_url": "https://api.github.com/users/AshotVantsyan/repos", "events_url": "https://api.github.com/users/AshotVantsyan/events{/privacy}", "received_events_url": "https://api.github.com/users/AshotVantsyan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-10T12:59:49Z", "updated_at": "2020-01-14T06:46:13Z", "closed_at": "2020-01-13T05:46:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let have `test_1.py` test file with the following content:\r\n```python\r\n#!/usr/bin/env python3.7\r\n\r\nimport pytest\r\n\r\ndef test_1():\r\n    pass\r\n\r\n@pytest.mark.xfail(reason=\"Reason for expected failure\")\r\ndef test_2():\r\n    assert False\r\n\r\n@pytest.mark.xfail(reason=\"Reason for unexpected failure\")\r\ndef test_3():\r\n    pass\r\n\r\n@pytest.mark.skip(reason=\"Reason for skipped test case\")\r\ndef test_4():\r\n    pass\r\n\r\n```\r\n\r\nRunning the test with `pytest test_1.py -rsxX --html test_results.html` command produces the following output:\r\n```pytest\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.7.3, pytest-5.2.2, py-1.8.0, pluggy-0.12.0\r\nrootdir: $HOME\r\nplugins: pylint-0.14.1, metadata-1.8.0, html-2.0.1\r\ncollected 4 items\r\n\r\ntest_1.py .xXs                                                           [100%]\r\n\r\n--------- generated html file: file://$HOME/test_results.html ---------\r\n=========================== short test summary info ============================\r\nSKIPPED [1] test_1.py:16: Reason for skipped test case\r\nXFAIL test_1.py::test_2\r\n  Reason for expected failure\r\nXPASS test_1.py::test_3 Reason for unexpected failure\r\n============== 1 passed, 1 skipped, 1 xfailed, 1 xpassed in 0.40s ==============\r\n```\r\nAnd the following HTML report:\r\n![test_results](https://user-images.githubusercontent.com/19218177/72154623-8c641100-33ca-11ea-811a-41e27e6e0336.png)\r\n\r\n\r\nThe generated HTML report is awesome, but there is a thing that I'm missing in the report - the reason for XPASS case is missing.\r\n\r\nIt would be nice to have an ability to include 'short test summary info' section information into the HTML report.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/255", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/255/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/255/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/255", "id": 547454121, "node_id": "MDU6SXNzdWU1NDc0NTQxMjE=", "number": 255, "title": "I see an IOerror  and OSError while running pytest with -css parameter along with html report", "user": {"login": "PravinAlhat", "id": 38999712, "node_id": "MDQ6VXNlcjM4OTk5NzEy", "avatar_url": "https://avatars0.githubusercontent.com/u/38999712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PravinAlhat", "html_url": "https://github.com/PravinAlhat", "followers_url": "https://api.github.com/users/PravinAlhat/followers", "following_url": "https://api.github.com/users/PravinAlhat/following{/other_user}", "gists_url": "https://api.github.com/users/PravinAlhat/gists{/gist_id}", "starred_url": "https://api.github.com/users/PravinAlhat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PravinAlhat/subscriptions", "organizations_url": "https://api.github.com/users/PravinAlhat/orgs", "repos_url": "https://api.github.com/users/PravinAlhat/repos", "events_url": "https://api.github.com/users/PravinAlhat/events{/privacy}", "received_events_url": "https://api.github.com/users/PravinAlhat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-09T12:40:17Z", "updated_at": "2020-01-17T09:00:13Z", "closed_at": "2020-01-17T09:00:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see below error while running pytest with -css parameter along with html report\r\n\r\n$ pytest --html=API.html --css=highcontrast.css --css=accessible.css\r\n\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/Users/pravin.a/my-project/venv/lib/python3.8/site-packages/_pytest/main.py\", line 192, in wrap_session\r\nINTERNALERROR>     config._do_configure()\r\nINTERNALERROR>   File \"/Users/pravin.a/my-project/venv/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 726, in _do_configure\r\nINTERNALERROR>     self.hook.pytest_configure.call_historic(kwargs=dict(config=self))\r\nINTERNALERROR>   File \"/Users/pravin.a/my-project/venv/lib/python3.8/site-packages/pluggy/hooks.py\", line 308, in call_historic\r\nINTERNALERROR>     res = self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/Users/pravin.a/my-project/venv/lib/python3.8/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/pravin.a/my-project/venv/lib/python3.8/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/Users/pravin.a/my-project/venv/lib/python3.8/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/Users/pravin.a/my-project/venv/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/Users/pravin.a/my-project/venv/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/pravin.a/my-project/venv/lib/python3.8/site-packages/pytest_html/plugin.py\", line 72, in pytest_configure\r\n**INTERNALERROR>     raise IOError(f\"No such file or directory: '{csspath}'\")**\r\n**INTERNALERROR> OSError: No such file or directory: 'highcontrast.css'**\r\n\r\n![image](https://user-images.githubusercontent.com/38999712/72068520-3d0adb80-330b-11ea-8ded-4483e059ee22.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/254", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/254/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/254/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/254", "id": 528592684, "node_id": "MDU6SXNzdWU1Mjg1OTI2ODQ=", "number": 254, "title": "Option to enable report update after each tests", "user": {"login": "happz", "id": 116509, "node_id": "MDQ6VXNlcjExNjUwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/116509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/happz", "html_url": "https://github.com/happz", "followers_url": "https://api.github.com/users/happz/followers", "following_url": "https://api.github.com/users/happz/following{/other_user}", "gists_url": "https://api.github.com/users/happz/gists{/gist_id}", "starred_url": "https://api.github.com/users/happz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/happz/subscriptions", "organizations_url": "https://api.github.com/users/happz/orgs", "repos_url": "https://api.github.com/users/happz/repos", "events_url": "https://api.github.com/users/happz/events{/privacy}", "received_events_url": "https://api.github.com/users/happz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-26T09:23:11Z", "updated_at": "2020-05-18T18:19:35Z", "closed_at": "2020-05-18T18:19:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my workflow, I'd appreciate an option which would let me ask `pytest-html` to save the report after each test. I'm using `pytest-xdist` to run multiple tests simultaneously, and it would be very helpful to get a fresh HTML page as soon as any test completes, it would allow us to start fixing issues without waiting for the long-running tests to catch up.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/253", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/253/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/253/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/253", "id": 527666475, "node_id": "MDU6SXNzdWU1Mjc2NjY0NzU=", "number": 253, "title": " unrecognized arguments", "user": {"login": "ForAxel", "id": 39057473, "node_id": "MDQ6VXNlcjM5MDU3NDcz", "avatar_url": "https://avatars0.githubusercontent.com/u/39057473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ForAxel", "html_url": "https://github.com/ForAxel", "followers_url": "https://api.github.com/users/ForAxel/followers", "following_url": "https://api.github.com/users/ForAxel/following{/other_user}", "gists_url": "https://api.github.com/users/ForAxel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ForAxel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ForAxel/subscriptions", "organizations_url": "https://api.github.com/users/ForAxel/orgs", "repos_url": "https://api.github.com/users/ForAxel/repos", "events_url": "https://api.github.com/users/ForAxel/events{/privacy}", "received_events_url": "https://api.github.com/users/ForAxel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-24T08:34:55Z", "updated_at": "2019-11-25T10:08:24Z", "closed_at": "2019-11-25T10:08:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "After I installed the 'pytest-html' by using 'pip install pytest-html'  and try to use it by inputing \r\n```\r\npytest ./case.py --html=record.html\r\n```\r\nI found it can't work as excepted with error:'unrecognized arguments: --html=record.html'\r\nSo I wanna know what can I do to solve this problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/252", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/252/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/252/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/252", "id": 522899626, "node_id": "MDU6SXNzdWU1MjI4OTk2MjY=", "number": 252, "title": "text formatting in table cells", "user": {"login": "csheaff", "id": 10719781, "node_id": "MDQ6VXNlcjEwNzE5Nzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/10719781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csheaff", "html_url": "https://github.com/csheaff", "followers_url": "https://api.github.com/users/csheaff/followers", "following_url": "https://api.github.com/users/csheaff/following{/other_user}", "gists_url": "https://api.github.com/users/csheaff/gists{/gist_id}", "starred_url": "https://api.github.com/users/csheaff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csheaff/subscriptions", "organizations_url": "https://api.github.com/users/csheaff/orgs", "repos_url": "https://api.github.com/users/csheaff/repos", "events_url": "https://api.github.com/users/csheaff/events{/privacy}", "received_events_url": "https://api.github.com/users/csheaff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-14T14:37:04Z", "updated_at": "2019-11-16T08:41:14Z", "closed_at": "2019-11-16T08:41:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, currently it does not appear possible to have pytest-html recognize, for example, carriage returns in strings fed to table cells. The use case I'm considering is inserting my docstrings into a test description cell:\r\n\r\n`@pytest.mark.hookwrapper\r\ndef pytest_runtest_makereport(item, call):\r\n    pytest_html = item.config.pluginmanager.getplugin('html')\r\n    outcome = yield\r\n    report = outcome.get_result()\r\n    report.description = item.function.__doc__`\r\n\r\nThis is undesirable from a readability standpoint. Am I perhaps missing something or might there be a workaround?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/249", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/249/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/249/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/249", "id": 516602003, "node_id": "MDU6SXNzdWU1MTY2MDIwMDM=", "number": 249, "title": "optional publish option", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-11-02T13:57:23Z", "updated_at": "2020-03-17T09:38:56Z", "closed_at": "2020-03-17T09:38:56Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Some CI systems do not have any option to collect/publish test results and even for developers running tests locally it may be inconvenient to share the html file product.\r\n\r\nIf pytest-html would have an option to upload the resulted html to a web server and return the sharable file, it would be much easier. The final patch could even by randomized in order to avoid overlapping.\r\n\r\nThis option could fully be controlled via two environment variables like:\r\n```\r\nPYTEST_HTML_PUBLISH_SSH=ssh://foo@my_server///var/www/html/reports\r\nPYTEST_HTML_PUBLISH_URL=https://my.server/reports\r\n```\r\n\r\nThe upload would be triggered by the presence of the variable, missing it would mean no upload to be performed.\r\n\r\nPlease comment on that feature request as if that is desired, I may try to implement it over a weekend.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/247", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/247/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/247/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/247", "id": 510551089, "node_id": "MDU6SXNzdWU1MTA1NTEwODk=", "number": 247, "title": "initial-sort flag not working on the columns other than the status result one", "user": {"login": "wanam", "id": 739291, "node_id": "MDQ6VXNlcjczOTI5MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/739291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanam", "html_url": "https://github.com/wanam", "followers_url": "https://api.github.com/users/wanam/followers", "following_url": "https://api.github.com/users/wanam/following{/other_user}", "gists_url": "https://api.github.com/users/wanam/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanam/subscriptions", "organizations_url": "https://api.github.com/users/wanam/orgs", "repos_url": "https://api.github.com/users/wanam/repos", "events_url": "https://api.github.com/users/wanam/events{/privacy}", "received_events_url": "https://api.github.com/users/wanam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-22T10:00:42Z", "updated_at": "2019-11-04T17:55:11Z", "closed_at": "2019-11-04T17:55:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to set an initial order on the test name instead of the result status column, but it does not seem to work.\r\n\r\nHere is what how i'm doing it:\r\n`    def pytest_html_create_batch_table_header(self, cells):\r\n\r\n        # # Set initial-sort on test column\r\n        cells[2].attr.class_ = 'sortable initial-sort'\r\n        cells[0].attr.class_ = 'sortable result'\r\n`\r\nI see the sort icon on the 3 column but it's not sorted, it is still sorted for the first column.\r\nOtherwise it would be great to have a hook or command line option for the default sorting column.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/246", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/246/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/246/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/246", "id": 509162035, "node_id": "MDU6SXNzdWU1MDkxNjIwMzU=", "number": 246, "title": "Getting ResourceWarning: unclosed file open(csspath)", "user": {"login": "wanam", "id": 739291, "node_id": "MDQ6VXNlcjczOTI5MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/739291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanam", "html_url": "https://github.com/wanam", "followers_url": "https://api.github.com/users/wanam/followers", "following_url": "https://api.github.com/users/wanam/following{/other_user}", "gists_url": "https://api.github.com/users/wanam/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanam/subscriptions", "organizations_url": "https://api.github.com/users/wanam/orgs", "repos_url": "https://api.github.com/users/wanam/repos", "events_url": "https://api.github.com/users/wanam/events{/privacy}", "received_events_url": "https://api.github.com/users/wanam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-10-18T15:46:01Z", "updated_at": "2019-11-04T17:56:18Z", "closed_at": "2019-11-04T17:56:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting bellow error while loading a custom css file:\r\nResourceWarning: unclosed file <_io.TextIOWrapper name='assets/style.css' mode='r' encoding='UTF-8'>open(csspath)\r\n\r\nThe bug is similar to https://github.com/pytest-dev/pytest/issues/4355\r\n\r\nI'm wondering if [this code block](https://github.com/pytest-dev/pytest-html/blob/master/pytest_html/plugin.py#L70-L71) is just a leftover, because I think the custom css file is loaded [here](https://github.com/pytest-dev/pytest-html/blob/master/pytest_html/plugin.py#L345-L352).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/245", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/245/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/245/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/245", "id": 507682931, "node_id": "MDU6SXNzdWU1MDc2ODI5MzE=", "number": 245, "title": "Dictionaries in environment table a not sorted", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649591, "node_id": "MDU6TGFiZWwxOTk2NDk1OTE=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-16T08:01:22Z", "updated_at": "2020-02-06T13:22:12Z", "closed_at": "2020-02-06T13:22:12Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "As in Python dictionaries are not (usually) sorted printing the environment gives random results, making much harder to read it and to compare it with previous runs.\r\n\r\nExample: http://logs.rdoproject.org/52/23152/1/check/rdo-tox-molecule/6eb5f91/tox/reports.html\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/243", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/243/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/243/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/243", "id": 500974907, "node_id": "MDU6SXNzdWU1MDA5NzQ5MDc=", "number": 243, "title": "py.test dont run test-cases. I see SyntaxError: invalid syntax. I will show it on sreen below. ", "user": {"login": "JenyaKrixus", "id": 56037537, "node_id": "MDQ6VXNlcjU2MDM3NTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/56037537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JenyaKrixus", "html_url": "https://github.com/JenyaKrixus", "followers_url": "https://api.github.com/users/JenyaKrixus/followers", "following_url": "https://api.github.com/users/JenyaKrixus/following{/other_user}", "gists_url": "https://api.github.com/users/JenyaKrixus/gists{/gist_id}", "starred_url": "https://api.github.com/users/JenyaKrixus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JenyaKrixus/subscriptions", "organizations_url": "https://api.github.com/users/JenyaKrixus/orgs", "repos_url": "https://api.github.com/users/JenyaKrixus/repos", "events_url": "https://api.github.com/users/JenyaKrixus/events{/privacy}", "received_events_url": "https://api.github.com/users/JenyaKrixus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-01T15:19:27Z", "updated_at": "2019-10-01T16:18:42Z", "closed_at": "2019-10-01T16:18:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI have problem with running py.test on Pycharm. I open Terminal on Pycharm, and try to run my tests using py.test, but after it, i see exeption. There is my screen \r\n![Selection_999(045)](https://user-images.githubusercontent.com/56037537/65975754-c3479400-e477-11e9-914e-5233f27950b0.png)\r\n\r\nI noticed this problem after installing \"pip3 install pytest-html\"\r\nCan anybody help me? Because earlier everything was fine\r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/242", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/242/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/242/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/242", "id": 498718079, "node_id": "MDU6SXNzdWU0OTg3MTgwNzk=", "number": 242, "title": "Sortable Links column", "user": {"login": "vashirov", "id": 1745018, "node_id": "MDQ6VXNlcjE3NDUwMTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1745018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vashirov", "html_url": "https://github.com/vashirov", "followers_url": "https://api.github.com/users/vashirov/followers", "following_url": "https://api.github.com/users/vashirov/following{/other_user}", "gists_url": "https://api.github.com/users/vashirov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vashirov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vashirov/subscriptions", "organizations_url": "https://api.github.com/users/vashirov/orgs", "repos_url": "https://api.github.com/users/vashirov/repos", "events_url": "https://api.github.com/users/vashirov/events{/privacy}", "received_events_url": "https://api.github.com/users/vashirov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649591, "node_id": "MDU6TGFiZWwxOTk2NDk1OTE=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gnikonorov", "id": 13026015, "node_id": "MDQ6VXNlcjEzMDI2MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13026015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnikonorov", "html_url": "https://github.com/gnikonorov", "followers_url": "https://api.github.com/users/gnikonorov/followers", "following_url": "https://api.github.com/users/gnikonorov/following{/other_user}", "gists_url": "https://api.github.com/users/gnikonorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnikonorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnikonorov/subscriptions", "organizations_url": "https://api.github.com/users/gnikonorov/orgs", "repos_url": "https://api.github.com/users/gnikonorov/repos", "events_url": "https://api.github.com/users/gnikonorov/events{/privacy}", "received_events_url": "https://api.github.com/users/gnikonorov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-09-26T07:49:08Z", "updated_at": "2020-08-04T14:41:43Z", "closed_at": "2020-08-04T14:41:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In our tests we create logs on demand: only when certain condition happens and we need to attach logs. So most of the time Links are empty, but occasionally can contain some urls. When there are 1500+ tests, it's hard to find tests that generated additional logs. It would be nice to have sortable Links column. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/241", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/241/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/241/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/241", "id": 498103288, "node_id": "MDU6SXNzdWU0OTgxMDMyODg=", "number": 241, "title": "A dictionary item gets printed in the row when I try to add a url link to the report", "user": {"login": "altran-git", "id": 13827822, "node_id": "MDQ6VXNlcjEzODI3ODIy", "avatar_url": "https://avatars1.githubusercontent.com/u/13827822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/altran-git", "html_url": "https://github.com/altran-git", "followers_url": "https://api.github.com/users/altran-git/followers", "following_url": "https://api.github.com/users/altran-git/following{/other_user}", "gists_url": "https://api.github.com/users/altran-git/gists{/gist_id}", "starred_url": "https://api.github.com/users/altran-git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/altran-git/subscriptions", "organizations_url": "https://api.github.com/users/altran-git/orgs", "repos_url": "https://api.github.com/users/altran-git/repos", "events_url": "https://api.github.com/users/altran-git/events{/privacy}", "received_events_url": "https://api.github.com/users/altran-git/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-25T07:32:36Z", "updated_at": "2019-09-25T09:17:21Z", "closed_at": "2019-09-25T09:17:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Along with the actual URL link, the following gets printed in the row when I try to add a url link to the report:\r\n\r\n{'name': 'URL', 'format': 'url', 'content': 'http://www.example.com', 'mime_type': None, 'extension': None}\r\n\r\nNot sure why this is happening.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/239", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/239/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/239/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/239", "id": 494465444, "node_id": "MDU6SXNzdWU0OTQ0NjU0NDQ=", "number": 239, "title": "Opening report is slow when it contains long logs", "user": {"login": "Wramberg", "id": 5647756, "node_id": "MDQ6VXNlcjU2NDc3NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5647756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wramberg", "html_url": "https://github.com/Wramberg", "followers_url": "https://api.github.com/users/Wramberg/followers", "following_url": "https://api.github.com/users/Wramberg/following{/other_user}", "gists_url": "https://api.github.com/users/Wramberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wramberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wramberg/subscriptions", "organizations_url": "https://api.github.com/users/Wramberg/orgs", "repos_url": "https://api.github.com/users/Wramberg/repos", "events_url": "https://api.github.com/users/Wramberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Wramberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-09-17T08:01:15Z", "updated_at": "2020-02-25T17:18:45Z", "closed_at": "2020-02-17T17:59:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some test runs that generate a lot of log entries. When opening the report is seems my browser is spending a lot of time presenting all these entries which are immediately collapsed right after.\r\n\r\nIf I change the behavior to have everything collapsed by default I can open/render the html report much faster.\r\n\r\nWhat I have tested is essentially the same as adding a \"collapsed\" class here https://github.com/pytest-dev/pytest-html/blob/master/pytest_html/plugin.py#L140\r\n\r\nI have no idea if this breaks other use-cases or if other changes are necessary. I also realize that everything related to the collapse functionality is currently in js. Regardless, if something could be done to generate everything collapsed and open the necessary stuff afterwards I believe performance would be a lot better.\r\n\r\nEdit: I should mention I use self-contained reports.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/231", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/231/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/231/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/231", "id": 484219986, "node_id": "MDU6SXNzdWU0ODQyMTk5ODY=", "number": 231, "title": "development.rst is mis-named", "user": {"login": "samueljsb", "id": 7549858, "node_id": "MDQ6VXNlcjc1NDk4NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7549858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueljsb", "html_url": "https://github.com/samueljsb", "followers_url": "https://api.github.com/users/samueljsb/followers", "following_url": "https://api.github.com/users/samueljsb/following{/other_user}", "gists_url": "https://api.github.com/users/samueljsb/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueljsb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueljsb/subscriptions", "organizations_url": "https://api.github.com/users/samueljsb/orgs", "repos_url": "https://api.github.com/users/samueljsb/repos", "events_url": "https://api.github.com/users/samueljsb/events{/privacy}", "received_events_url": "https://api.github.com/users/samueljsb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-22T21:12:48Z", "updated_at": "2019-08-27T12:16:22Z", "closed_at": "2019-08-27T12:16:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `development.rst` file is mis-named, causing a broken link in the README.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/228", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/228/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/228/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/228", "id": 479089539, "node_id": "MDU6SXNzdWU0NzkwODk1Mzk=", "number": 228, "title": "Deprecate compability with python 2.7 ", "user": {"login": "RibeiroAna", "id": 7302792, "node_id": "MDQ6VXNlcjczMDI3OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7302792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RibeiroAna", "html_url": "https://github.com/RibeiroAna", "followers_url": "https://api.github.com/users/RibeiroAna/followers", "following_url": "https://api.github.com/users/RibeiroAna/following{/other_user}", "gists_url": "https://api.github.com/users/RibeiroAna/gists{/gist_id}", "starred_url": "https://api.github.com/users/RibeiroAna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RibeiroAna/subscriptions", "organizations_url": "https://api.github.com/users/RibeiroAna/orgs", "repos_url": "https://api.github.com/users/RibeiroAna/repos", "events_url": "https://api.github.com/users/RibeiroAna/events{/privacy}", "received_events_url": "https://api.github.com/users/RibeiroAna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-09T17:22:55Z", "updated_at": "2019-09-09T08:10:08Z", "closed_at": "2019-09-09T08:10:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi there,\r\n\r\nRecently I run something with Python 2.7 and got the following message: \r\n\r\n\"DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\"\r\n\r\nI think that by January 1st, we should drop support to Python 2.7 as well. What do you think?\r\n\r\n@davehunt @BeyondEvil ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/225", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/225/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/225/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/225", "id": 477125885, "node_id": "MDU6SXNzdWU0NzcxMjU4ODU=", "number": 225, "title": "Encounter memory error when run test  concurrently for a long time", "user": {"login": "hdw868", "id": 34624897, "node_id": "MDQ6VXNlcjM0NjI0ODk3", "avatar_url": "https://avatars2.githubusercontent.com/u/34624897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdw868", "html_url": "https://github.com/hdw868", "followers_url": "https://api.github.com/users/hdw868/followers", "following_url": "https://api.github.com/users/hdw868/following{/other_user}", "gists_url": "https://api.github.com/users/hdw868/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdw868/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdw868/subscriptions", "organizations_url": "https://api.github.com/users/hdw868/orgs", "repos_url": "https://api.github.com/users/hdw868/repos", "events_url": "https://api.github.com/users/hdw868/events{/privacy}", "received_events_url": "https://api.github.com/users/hdw868/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-06T01:41:00Z", "updated_at": "2019-08-09T06:50:32Z", "closed_at": "2019-08-09T06:50:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "encounter following error when running pytest-html with pytest-xdist repeatedly for about 300-500 times.\r\n\r\n\r\n```\r\npytest tests\\test_user12.py --count=500 -n=10 --headless\r\n======== test session starts =======\r\nplatform win32 -- Python 3.7.3, pytest-4.4.0, py-1.8.0, pluggy-0.9.0 -- c:\\python37\\python.exe\r\ncachedir: .pytest_cache\r\nmetadata: {'Python': '3.7.3', 'Platform': 'Windows-10-10.0.14393-SP0', 'Packages': {'pytest': '4.4.0', 'py': '1.8.0', 'pluggy': '0.9.0'}, 'Plugins': {'xdist': '1.29.0', 'variables': '1.7.1', 'repeat': '0.8.0', 'metadata': '1.8.0', 'json': '0.4.0', 'json-report': '1.1.0', 'html': '1.20.0', 'forked': '1.0.2', 'cov': '2.7.1', 'aggreport': '0.1.4'}, 'Yaml Config Path': 'C:\\\\Dev\\\\test_persona\\\\config.yaml'}\r\nrootdir: C:\\Dev\\test_persona\\tests, inifile: pytest.ini\r\nplugins: xdist-1.29.0, variables-1.7.1, repeat-0.8.0, metadata-1.8.0, json-0.4.0, json-report-1.1.0, html-1.20.0, forked-1.0.2, cov-2.7.1, aggreport-0.1.4\r\n...\r\n\r\n[gw2] FAILED tests\\test_user12.py::TestUSR012::test_export_bar_chart[383-500]\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\_pytest\\main.py\", line 209, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\_pytest\\main.py\", line 249, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\manager.py\", line 68, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\manager.py\", line 62, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\xdist\\dsession.py\", line 115, in pytest_runtestloop\r\nINTERNALERROR>     self.loop_once()\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\xdist\\dsession.py\", line 138, in loop_once\r\nINTERNALERROR>     call(**kwargs)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\xdist\\dsession.py\", line 257, in worker_testreport\r\nINTERNALERROR>     self.config.hook.pytest_runtest_logreport(report=rep)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\manager.py\", line 68, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\manager.py\", line 62, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pytest_html\\plugin.py\", line 504, in pytest_runtest_logreport\r\nINTERNALERROR>     self.append_failed(report)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pytest_html\\plugin.py\", line 294, in append_failed\r\nINTERNALERROR>     self._appendrow('Failed', report)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pytest_html\\plugin.py\", line 266, in _appendrow\r\nINTERNALERROR>     result = self.TestResult(outcome, report, self.logfile, self.config)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pytest_html\\plugin.py\", line 119, in __init__\r\nINTERNALERROR>     self.append_extra_html(extra, extra_index, test_index)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pytest_html\\plugin.py\", line 218, in append_extra_html\r\nINTERNALERROR>     href = data_uri(content)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\site-packages\\pytest_html\\plugin.py\", line 82, in data_uri\r\nINTERNALERROR>     data = b64encode(content.encode(charset)).decode('ascii')\r\nINTERNALERROR> MemoryError\r\n```\r\nPlease let me know if more message if needed.\r\n**I do not have this problem if I run it in a single process, I think it has something to do with pytest-xdist as well.**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/222", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/222/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/222/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/222", "id": 471719344, "node_id": "MDU6SXNzdWU0NzE3MTkzNDQ=", "number": 222, "title": "Ability to add text above captured log output?", "user": {"login": "VorpalBlade", "id": 3315306, "node_id": "MDQ6VXNlcjMzMTUzMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3315306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VorpalBlade", "html_url": "https://github.com/VorpalBlade", "followers_url": "https://api.github.com/users/VorpalBlade/followers", "following_url": "https://api.github.com/users/VorpalBlade/following{/other_user}", "gists_url": "https://api.github.com/users/VorpalBlade/gists{/gist_id}", "starred_url": "https://api.github.com/users/VorpalBlade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VorpalBlade/subscriptions", "organizations_url": "https://api.github.com/users/VorpalBlade/orgs", "repos_url": "https://api.github.com/users/VorpalBlade/repos", "events_url": "https://api.github.com/users/VorpalBlade/events{/privacy}", "received_events_url": "https://api.github.com/users/VorpalBlade/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649591, "node_id": "MDU6TGFiZWwxOTk2NDk1OTE=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 199649592, "node_id": "MDU6TGFiZWwxOTk2NDk1OTI=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-23T14:07:53Z", "updated_at": "2019-07-31T13:08:41Z", "closed_at": "2019-07-31T13:08:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible (or feasible to extend) to insert extra output above the test output. I would be interested in inserting the docstring of the test function here to provide details on the test.\r\n\r\nSomething like this quick mockup using the HTML inspector in Firefox:\r\n![pytest_mockup](https://user-images.githubusercontent.com/3315306/61718675-bf0a4680-ad63-11e9-9796-5b9255c6ea2b.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/221", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/221/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/221/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/221", "id": 471251903, "node_id": "MDU6SXNzdWU0NzEyNTE5MDM=", "number": 221, "title": "Windows users unable to open test reports with assets created on Linux", "user": {"login": "christopheraranda", "id": 17463359, "node_id": "MDQ6VXNlcjE3NDYzMzU5", "avatar_url": "https://avatars0.githubusercontent.com/u/17463359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christopheraranda", "html_url": "https://github.com/christopheraranda", "followers_url": "https://api.github.com/users/christopheraranda/followers", "following_url": "https://api.github.com/users/christopheraranda/following{/other_user}", "gists_url": "https://api.github.com/users/christopheraranda/gists{/gist_id}", "starred_url": "https://api.github.com/users/christopheraranda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christopheraranda/subscriptions", "organizations_url": "https://api.github.com/users/christopheraranda/orgs", "repos_url": "https://api.github.com/users/christopheraranda/repos", "events_url": "https://api.github.com/users/christopheraranda/events{/privacy}", "received_events_url": "https://api.github.com/users/christopheraranda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-22T18:39:50Z", "updated_at": "2019-08-19T20:09:51Z", "closed_at": "2019-08-19T20:09:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have functional tests that are executed in a CentOS based container. The logging for those tests is redirected to a text asset and appended as an extra in the HTML report.\r\n\r\nAfter the tests are executed, the report and the assets are compressed to a ZIP file and are emailed out. Windows users that receive the report are unable to decompress the file.\r\n\r\nSince the tests are in subdirectories, the nodeid contains forward slashes. As a result, directories are also created in the assets directory. I suspect that the forward slashes and colons in the nodeid are causing unintended consequences when creating the asset.\r\n\r\nhttps://github.com/pytest-dev/pytest-html/blob/c9eadb0b76d5aaaecdb8fb45600bafd851d9ca27/pytest_html/plugin.py#L161", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/219", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/219/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/219/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/219", "id": 466965290, "node_id": "MDU6SXNzdWU0NjY5NjUyOTA=", "number": 219, "title": "pytest html does not keep sort preference for previously sorted columns", "user": {"login": "wanam", "id": 739291, "node_id": "MDQ6VXNlcjczOTI5MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/739291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanam", "html_url": "https://github.com/wanam", "followers_url": "https://api.github.com/users/wanam/followers", "following_url": "https://api.github.com/users/wanam/following{/other_user}", "gists_url": "https://api.github.com/users/wanam/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanam/subscriptions", "organizations_url": "https://api.github.com/users/wanam/orgs", "repos_url": "https://api.github.com/users/wanam/repos", "events_url": "https://api.github.com/users/wanam/events{/privacy}", "received_events_url": "https://api.github.com/users/wanam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-11T15:33:22Z", "updated_at": "2019-08-07T21:44:02Z", "closed_at": "2019-08-07T21:44:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Let's take this example to show this columns sort issue on the output html report:\r\n**Column1 Column2**\r\nC1_T2    C2_T1\r\nC1_T2    C2_T2\r\nC1_T4    C2_T4\r\nC1_T1    C2_T5\r\n\r\nHere we have the column2 that is sorted asc, if we click on the header Column1 to sort asc here is what we will get:\r\n**Column1 Column2**\r\nC1_T1    C2_T5\r\nC1_T2    C2_T2\r\nC1_T2    C2_T1\r\nC1_T4    C2_T4\r\n\r\nAs you see it sorted the first column \"asc\" as requested, BUT it reversed the Column2 sort to \"desc\":\r\nC1_T2    **C2_T2**\r\nC1_T2    **C2_T1**\r\n\r\nHere is the expected behavior:\r\n**Column1 Column2**\r\nC1_T1    C2_T5\r\nC1_T2    C2_T1\r\nC1_T2    C2_T2\r\nC1_T4    C2_T4\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/216", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/216/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/216/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/216", "id": 465655368, "node_id": "MDU6SXNzdWU0NjU2NTUzNjg=", "number": 216, "title": "create_asset hash suffix are not unique between multiple runs", "user": {"login": "Uil2liv", "id": 35735969, "node_id": "MDQ6VXNlcjM1NzM1OTY5", "avatar_url": "https://avatars1.githubusercontent.com/u/35735969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Uil2liv", "html_url": "https://github.com/Uil2liv", "followers_url": "https://api.github.com/users/Uil2liv/followers", "following_url": "https://api.github.com/users/Uil2liv/following{/other_user}", "gists_url": "https://api.github.com/users/Uil2liv/gists{/gist_id}", "starred_url": "https://api.github.com/users/Uil2liv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Uil2liv/subscriptions", "organizations_url": "https://api.github.com/users/Uil2liv/orgs", "repos_url": "https://api.github.com/users/Uil2liv/repos", "events_url": "https://api.github.com/users/Uil2liv/events{/privacy}", "received_events_url": "https://api.github.com/users/Uil2liv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-09T08:54:12Z", "updated_at": "2019-07-15T08:19:01Z", "closed_at": "2019-07-13T12:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Considering the following code block :\r\nhttps://github.com/pytest-dev/pytest-html/blob/83d6e1bb666ef94a349c5ed5e52babbaba4b1ae3/pytest_html/plugin.py#L146-L160\r\n\r\nAs discussed in #199 : \r\n> But I think  I got a better ideia for this issue. What do you think of the name of the assets being the unhashed name plus the hash? Something like \"test01_fail_testname_[hash].png\", it would solve your issue plus not having the issue of overwriting the assets every time the tests are run.\r\n>\r\n> _Originally posted by @RibeiroAna in https://github.com/pytest-dev/pytest-html/pull/199#issuecomment-464712325_\r\n\r\nIt seems that the hash suffix has been introduced in the file naming to prevent multiple test runs to overwrite previous assets.\r\nThis case would occur when the `test_id`, the `extra_index` and the `test_index` are identicals, typically when file attachement occurs statically in the same places.\r\n\r\n**BUT**, according to the code above, when we are in a such situation, we generate the hash suffix from the same key (string composition of `test_id`, `extra_index` and `test_index`).\r\nIn consequence, the hash digest used to create the file name will be identical, and asset overwriting will still occurs.\r\n\r\nOne workaround would be to use asset data instead of test reference:\r\nAfter thinking of it, it can lead to overwriting when the asset to attach is identical (we can imagine short logs, or text files which have the exact same content over different runs in a well controlled test envrionment)\r\n\r\nThe workaround that I would suggest would be to hash time information in addition to the test reference, something like : \r\n```python\r\nimport hashlib\r\nimport time\r\n[...]\r\n            hash_key = ''.join([self.test_id, str(extra_index),\r\n                                str(test_index)])\r\n            hash_time = \"%.9f\" % time.time()\r\n            hash_generator = hashlib.md5()\r\n            hash_generator.update(hash_key.encode('utf-8'))\r\n            hash_generator.update(hash_time.encode('utf-8'))\r\n            hex_digest = hash_generator.hexdigest()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/215", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/215/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/215/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/215", "id": 464141742, "node_id": "MDU6SXNzdWU0NjQxNDE3NDI=", "number": 215, "title": "Hashkey may include colons", "user": {"login": "franz-95", "id": 45195570, "node_id": "MDQ6VXNlcjQ1MTk1NTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/45195570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/franz-95", "html_url": "https://github.com/franz-95", "followers_url": "https://api.github.com/users/franz-95/followers", "following_url": "https://api.github.com/users/franz-95/following{/other_user}", "gists_url": "https://api.github.com/users/franz-95/gists{/gist_id}", "starred_url": "https://api.github.com/users/franz-95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/franz-95/subscriptions", "organizations_url": "https://api.github.com/users/franz-95/orgs", "repos_url": "https://api.github.com/users/franz-95/repos", "events_url": "https://api.github.com/users/franz-95/events{/privacy}", "received_events_url": "https://api.github.com/users/franz-95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-07-04T08:43:04Z", "updated_at": "2019-08-06T12:12:50Z", "closed_at": "2019-08-06T12:12:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, my hashkey includes slashes since the tests are in subdirectories. When included in the asset file name, the slashes are wrongly interpreted and in line 161 of the plugin.py the directories are made in the assets directory even though they are part of the assets file name.\r\n\r\nhttps://github.com/pytest-dev/pytest-html/blob/83d6e1bb666ef94a349c5ed5e52babbaba4b1ae3/pytest_html/plugin.py#L158\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/214", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/214/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/214/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/214", "id": 463464112, "node_id": "MDU6SXNzdWU0NjM0NjQxMTI=", "number": 214, "title": "can not embed image on windows hosts using extra.png(image)", "user": {"login": "Uil2liv", "id": 35735969, "node_id": "MDQ6VXNlcjM1NzM1OTY5", "avatar_url": "https://avatars1.githubusercontent.com/u/35735969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Uil2liv", "html_url": "https://github.com/Uil2liv", "followers_url": "https://api.github.com/users/Uil2liv/followers", "following_url": "https://api.github.com/users/Uil2liv/following{/other_user}", "gists_url": "https://api.github.com/users/Uil2liv/gists{/gist_id}", "starred_url": "https://api.github.com/users/Uil2liv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Uil2liv/subscriptions", "organizations_url": "https://api.github.com/users/Uil2liv/orgs", "repos_url": "https://api.github.com/users/Uil2liv/repos", "events_url": "https://api.github.com/users/Uil2liv/events{/privacy}", "received_events_url": "https://api.github.com/users/Uil2liv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-02T22:32:21Z", "updated_at": "2019-08-06T11:57:06Z", "closed_at": "2019-08-06T11:57:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "On a windows host, we cannot add an image to a report using `pytest_html.extras.png()`.\r\nIt returns the following error:\r\n```\r\nTesting started at 00:17 ...\r\nC:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\Scripts\\python.exe \"D:\\Program Files\\JetBrains\\PyCharm Community Edition 2017.3.3\\helpers\\pycharm\\_jb_pytest_runner.py\" -- --html=report.html\r\nLaunching py.test with arguments --html=report.html in C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\r\n\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.6.4, pytest-5.0.0, py-1.8.0, pluggy-0.12.0\r\nrootdir: C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\r\nplugins: html-1.21.1, metadata-1.8.0collected 1 item\r\n\r\ntests\\sample_test.py .\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\_pytest\\main.py\", line 213, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\_pytest\\main.py\", line 257, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\manager.py\", line 87, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\manager.py\", line 81, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\_pytest\\main.py\", line 278, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\manager.py\", line 87, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\manager.py\", line 81, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\_pytest\\runner.py\", line 72, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\_pytest\\runner.py\", line 87, in runtestprotocol\r\nINTERNALERROR>     reports.append(call_and_report(item, \"call\", log))\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\_pytest\\runner.py\", line 171, in call_and_report\r\nINTERNALERROR>     hook.pytest_runtest_logreport(report=report)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\manager.py\", line 87, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\manager.py\", line 81, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"C:\\Users\\proto\\PycharmProjects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"c:\\users\\proto\\pycharmprojects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pytest_html\\plugin.py\", line 509, in pytest_runtest_logreport\r\nINTERNALERROR>     self.append_passed(report)\r\nINTERNALERROR>   File \"c:\\users\\proto\\pycharmprojects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pytest_html\\plugin.py\", line 291, in append_passed\r\nINTERNALERROR>     self._appendrow('Passed', report)\r\nINTERNALERROR>   File \"c:\\users\\proto\\pycharmprojects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pytest_html\\plugin.py\", line 273, in _appendrow\r\nINTERNALERROR>     result = self.TestResult(outcome, report, self.logfile, self.config)\r\nINTERNALERROR>   File \"c:\\users\\proto\\pycharmprojects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pytest_html\\plugin.py\", line 119, in __init__\r\nINTERNALERROR>     self.append_extra_html(extra, extra_index, test_index)\r\nINTERNALERROR>   File \"c:\\users\\proto\\pycharmprojects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pytest_html\\plugin.py\", line 202, in append_extra_html\r\nINTERNALERROR>     extra.get('extension'), 'wb')\r\nINTERNALERROR>   File \"c:\\users\\proto\\pycharmprojects\\pytest_html_extra_image\\venv\\lib\\site-packages\\pytest_html\\plugin.py\", line 169, in create_asset\r\nINTERNALERROR>     with open(asset_path, mode, **kwargs) as f:\r\nINTERNALERROR> OSError: [Errno 22] Invalid argument: 'C:\\\\Users\\\\proto\\\\PycharmProjects\\\\pytest_html_extra_image\\\\assets\\\\tests/sample_test.py::test00_bcfe5b9ea2948de983c2f4df731cb2e2.png'\r\n\r\n========================== 1 passed in 12.62 seconds ==========================\r\nProcess finished with exit code 0\r\n```\r\nThe behaviour is not observed on a Linux system\r\nIt might be due to:\r\n- the double colons in the filename (forbidden on windows)\r\n- the slash used to represent the test hierarchy\r\n\r\nHere is a sample to reproduce the behaviour:\r\ntests/conftest.py:\r\n```python\r\nimport pytest\r\n\r\n@pytest.mark.hookwrapper\r\ndef pytest_runtest_makereport(item, call):\r\n    pytest_html = item.config.pluginmanager.getplugin('html')\r\n    outcome = yield\r\n    report = outcome.get_result()\r\n    extra = getattr(report, 'extra', [])\r\n\r\n    extra.append(pytest_html.extras.png(item.module.screenshot))\r\n\r\n    report.extra = extra\r\n```\r\n\r\ntests/sample_test.py\r\n```python\r\nfrom selenium import webdriver\r\n\r\n\r\nscreenshot = None\r\n\r\n\r\ndef test():\r\n    global screenshot\r\n    driver = webdriver.Firefox()\r\n    driver.get(\"https://docs.pytest.org/\")\r\n\r\n    screenshot = driver.find_element_by_tag_name(\"html\").screenshot_as_base64\r\n\r\n    driver.close()\r\n```\r\nthen run:\r\n```\r\npytest --html=report.html\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/207", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/207/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/207/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/207", "id": 449175164, "node_id": "MDU6SXNzdWU0NDkxNzUxNjQ=", "number": 207, "title": "--html=mydir/report.html - get hold of dir for extras", "user": {"login": "fenchu", "id": 11349883, "node_id": "MDQ6VXNlcjExMzQ5ODgz", "avatar_url": "https://avatars1.githubusercontent.com/u/11349883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fenchu", "html_url": "https://github.com/fenchu", "followers_url": "https://api.github.com/users/fenchu/followers", "following_url": "https://api.github.com/users/fenchu/following{/other_user}", "gists_url": "https://api.github.com/users/fenchu/gists{/gist_id}", "starred_url": "https://api.github.com/users/fenchu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fenchu/subscriptions", "organizations_url": "https://api.github.com/users/fenchu/orgs", "repos_url": "https://api.github.com/users/fenchu/repos", "events_url": "https://api.github.com/users/fenchu/events{/privacy}", "received_events_url": "https://api.github.com/users/fenchu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-28T09:56:09Z", "updated_at": "2019-05-28T10:11:37Z", "closed_at": "2019-05-28T10:11:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nIs there a way you can get hold of the --html setting within my pytest tests. I need it to set master directory for all the extras I add. Most CIs do not allow showing html reports anymore, So I need to pack it and pipe to a webservice.\r\n\r\nThis is very apparent when you use \r\n`@pytest.mark.parametrize(\"webhost\", <array of testservers>)`\r\n\r\ncurrently I use:\r\n`_dir_ = os.path.basename(__file__).replace('.py', '') + '-' + webhost,`\r\n\r\nBut I like to control this with the --html parameters So I can only archive anything under mydir and send it.\r\n\r\nI tried the following:\r\n```\r\n    @pytest.fixture(scope='session')\r\n    def reportname(request):\r\n>       name_value = request.config.option.html\r\nE       AttributeError: 'Namespace' object has no attribute 'html'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/206", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/206/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/206/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/206", "id": 447884351, "node_id": "MDU6SXNzdWU0NDc4ODQzNTE=", "number": 206, "title": "pytest html report to open results collapsed based on option given", "user": {"login": "cauvery", "id": 7635045, "node_id": "MDQ6VXNlcjc2MzUwNDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7635045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cauvery", "html_url": "https://github.com/cauvery", "followers_url": "https://api.github.com/users/cauvery/followers", "following_url": "https://api.github.com/users/cauvery/following{/other_user}", "gists_url": "https://api.github.com/users/cauvery/gists{/gist_id}", "starred_url": "https://api.github.com/users/cauvery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cauvery/subscriptions", "organizations_url": "https://api.github.com/users/cauvery/orgs", "repos_url": "https://api.github.com/users/cauvery/repos", "events_url": "https://api.github.com/users/cauvery/events{/privacy}", "received_events_url": "https://api.github.com/users/cauvery/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-05-23T20:58:25Z", "updated_at": "2020-06-18T01:11:00Z", "closed_at": "2019-05-28T15:31:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking for option on how to open the html report with all results collapsed.  By default only Passed results are collapsed and all others are expanded in html report from Jenkins.  \r\n \r\nI did go through the doc in pytest-html where it says to use the query parameter for report.hml. But how to achieve this dynamically from may be from conftest.py.  Need information. \r\nThanks in advance. \r\n\r\nVersions I am using are:\r\npytest-html 1.15.1\r\npytest 3.2.5.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/205", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/205/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/205/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/205", "id": 447479240, "node_id": "MDU6SXNzdWU0NDc0NzkyNDA=", "number": 205, "title": "extras from previous tests show up", "user": {"login": "fenchu", "id": 11349883, "node_id": "MDQ6VXNlcjExMzQ5ODgz", "avatar_url": "https://avatars1.githubusercontent.com/u/11349883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fenchu", "html_url": "https://github.com/fenchu", "followers_url": "https://api.github.com/users/fenchu/followers", "following_url": "https://api.github.com/users/fenchu/following{/other_user}", "gists_url": "https://api.github.com/users/fenchu/gists{/gist_id}", "starred_url": "https://api.github.com/users/fenchu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fenchu/subscriptions", "organizations_url": "https://api.github.com/users/fenchu/orgs", "repos_url": "https://api.github.com/users/fenchu/repos", "events_url": "https://api.github.com/users/fenchu/events{/privacy}", "received_events_url": "https://api.github.com/users/fenchu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-23T06:52:46Z", "updated_at": "2019-05-24T22:36:01Z", "closed_at": "2019-05-24T22:36:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "![pytest-html-extras-still-inn](https://user-images.githubusercontent.com/11349883/58231278-e0848d00-7d36-11e9-8576-ef43aac4c761.png)\r\n\r\nWhy does the images show up in tests/test_02_exceptions.py?\r\n\r\nI use fixture ext to keep track of my variables and the hookwrapper ads them if it finds anything in global extras['SCREENSHOTS'], it works fine for tests within the tests/test_01_connectivity.py file as you can see in the upper part of the png. but all from the last test in test_01_* file show up in the tests from the test_02_* file (lower part of png)\r\n\r\ntests/test_02_exceptions.py:\r\n```\r\n@pytest.mark.usefixtures(\"ext\")\r\ndef test_01_div_zero_exception(ext):\r\n    \"\"\"\r\n    pytest.raises can assert that exceptions are raised (catching them)\r\n    \"\"\"\r\n    ext = {}\r\n    with pytest.raises(ZeroDivisionError):\r\n        x = 1 / 0\r\n        print(\"1/0 = {}\".format(x))\r\n```\r\n\r\nconftest.py:\r\n```\r\nextras = None\r\n@pytest.mark.hookwrapper\r\ndef pytest_runtest_makereport(item, call):\r\n    global extras\r\n    pytest_html = item.config.pluginmanager.getplugin('html')\r\n    outcome = yield\r\n    #print(\"extras:{}\".format(extras))\r\n    report = outcome.get_result()\r\n    report.description = str(item.function.__doc__)\r\n    extra = getattr(report, 'extra', [])\r\n    if extras and extras.get('urls'):\r\n        for u in extras['urls']:\r\n            extra.append(pytest_html.extras.text(\"usr:{}\".format(u)))\r\n    if extras and extras.get('screenshots'):\r\n        for sc in extras['screenshots']:\r\n            extra.append(pytest_html.extras.image(sc, mime_type='image/png', extension='png'))\r\n    report.extra = extra\r\n\r\n@pytest.fixture(scope=\"session\", autouse=True)\r\ndef ext():\r\n    \"\"\" storage to pass from test to report, but does not follow scope, so need to clean in subsequent tests \"\"\"\r\n    global extras\r\n    extras = {}\r\n    yield extras\r\n    extras = {}\r\n    return extras\r\n```\r\n\r\nAny tip on how to do this better is also very appreciated. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/204", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/204/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/204/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/204", "id": 441491496, "node_id": "MDU6SXNzdWU0NDE0OTE0OTY=", "number": 204, "title": "error: unrecognized arguments: --self-contained-html", "user": {"login": "JoshSullivan11", "id": 46171231, "node_id": "MDQ6VXNlcjQ2MTcxMjMx", "avatar_url": "https://avatars2.githubusercontent.com/u/46171231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshSullivan11", "html_url": "https://github.com/JoshSullivan11", "followers_url": "https://api.github.com/users/JoshSullivan11/followers", "following_url": "https://api.github.com/users/JoshSullivan11/following{/other_user}", "gists_url": "https://api.github.com/users/JoshSullivan11/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshSullivan11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshSullivan11/subscriptions", "organizations_url": "https://api.github.com/users/JoshSullivan11/orgs", "repos_url": "https://api.github.com/users/JoshSullivan11/repos", "events_url": "https://api.github.com/users/JoshSullivan11/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshSullivan11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-07T23:49:55Z", "updated_at": "2019-06-17T21:23:09Z", "closed_at": "2019-06-17T21:23:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run my tests that previously worked with python 2.7 on python 3.5.2 I receive the following error:\r\n`ERROR: usage: example_test.py [options] [file_or_dir] [file_or_dir] [...]\r\nexample_test.py: error: unrecognized arguments: --self-contained-html\r\n  inifile: /home/joshsullivan/project_folder/pytest.ini\r\n  rootdir: /home/joshsullivan/project_folder\r\n`\r\n\r\nI am using Bazel to run my test with the following command:\r\n`bazel run :example_test -- --self-contained-html`\r\n\r\nHowever I get the same output when I run\r\n`pytest example_test.py --self-contained-html`\r\n\r\nThis is the environment I am running on and the installed packages\r\n`platform linux -- Python 3.5.2, pytest-4.4.1, py-1.8.0, pluggy-0.9.0\r\nrootdir: /home/joshsullivan\r\nplugins: metadata-1.8.0, html-1.13.0\r\n`\r\n\r\nBefore on 2.7, when I ran a test, at the end of the test would be an url link to that html file. Note that I am using pytest-html v1.13.0 which according to all the documentation should be compatible with my python 3.5.2 environment and the only thing that has change in my environment is the python version upgrade from 2.7 to 3.5.2.  Any help would be greatly appreciated as I have been looking at this issue for 3 days without any progress. Thank you in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/202", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/202/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/202/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/202", "id": 437509884, "node_id": "MDU6SXNzdWU0Mzc1MDk4ODQ=", "number": 202, "title": "add url in result table ", "user": {"login": "yinina", "id": 50005440, "node_id": "MDQ6VXNlcjUwMDA1NDQw", "avatar_url": "https://avatars1.githubusercontent.com/u/50005440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinina", "html_url": "https://github.com/yinina", "followers_url": "https://api.github.com/users/yinina/followers", "following_url": "https://api.github.com/users/yinina/following{/other_user}", "gists_url": "https://api.github.com/users/yinina/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinina/subscriptions", "organizations_url": "https://api.github.com/users/yinina/orgs", "repos_url": "https://api.github.com/users/yinina/repos", "events_url": "https://api.github.com/users/yinina/events{/privacy}", "received_events_url": "https://api.github.com/users/yinina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-26T05:54:19Z", "updated_at": "2019-06-17T21:04:46Z", "closed_at": "2019-06-17T21:04:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi ,\r\n    I want to add a url as a supplement to test description  in the Links column of result table, but can't, do you have any suggestions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/201", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/201/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/201/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/201", "id": 437287194, "node_id": "MDU6SXNzdWU0MzcyODcxOTQ=", "number": 201, "title": "Page header does not take environment variables into account", "user": {"login": "MaximeWeyl", "id": 31591159, "node_id": "MDQ6VXNlcjMxNTkxMTU5", "avatar_url": "https://avatars3.githubusercontent.com/u/31591159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaximeWeyl", "html_url": "https://github.com/MaximeWeyl", "followers_url": "https://api.github.com/users/MaximeWeyl/followers", "following_url": "https://api.github.com/users/MaximeWeyl/following{/other_user}", "gists_url": "https://api.github.com/users/MaximeWeyl/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaximeWeyl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaximeWeyl/subscriptions", "organizations_url": "https://api.github.com/users/MaximeWeyl/orgs", "repos_url": "https://api.github.com/users/MaximeWeyl/repos", "events_url": "https://api.github.com/users/MaximeWeyl/events{/privacy}", "received_events_url": "https://api.github.com/users/MaximeWeyl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-04-25T16:20:48Z", "updated_at": "2019-04-26T18:02:48Z", "closed_at": "2019-04-26T18:02:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "In pytest.ini, I have : \r\n\r\n    addopts = --html $APPRENTI_MOTEUR_LOGS_DIR_TEST/$APPRENTI_MOTEUR_LOGS_HTML_NAME\r\n\r\n\r\nThe path of the html report takes the content of the environment variable into account.\r\n\r\nBut the page header does not :\r\n![image](https://user-images.githubusercontent.com/31591159/56751616-c9c63700-6786-11e9-9df4-82e79475b3bb.png)\r\n\r\nIt would be nice if it would as well :-)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/200", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/200/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/200/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/200", "id": 431195339, "node_id": "MDU6SXNzdWU0MzExOTUzMzk=", "number": 200, "title": "How to include test name in report test column when test includes docstring", "user": {"login": "sarchule", "id": 34318189, "node_id": "MDQ6VXNlcjM0MzE4MTg5", "avatar_url": "https://avatars3.githubusercontent.com/u/34318189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sarchule", "html_url": "https://github.com/sarchule", "followers_url": "https://api.github.com/users/sarchule/followers", "following_url": "https://api.github.com/users/sarchule/following{/other_user}", "gists_url": "https://api.github.com/users/sarchule/gists{/gist_id}", "starred_url": "https://api.github.com/users/sarchule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sarchule/subscriptions", "organizations_url": "https://api.github.com/users/sarchule/orgs", "repos_url": "https://api.github.com/users/sarchule/repos", "events_url": "https://api.github.com/users/sarchule/events{/privacy}", "received_events_url": "https://api.github.com/users/sarchule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-09T21:02:37Z", "updated_at": "2019-04-11T21:40:20Z", "closed_at": "2019-04-11T21:32:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a pytest test method includes a docstring, then the report appears to use the docstring within the \"test\" column as the test id. If I remove the docstring, then the report uses the test method name. Is there a way to keep the docstring, but have the report still include the test method name within the \"test\" column? e.g., \r\nmytest.py::mytestclass::mytestmethodname::docstring....\r\n\r\nOr if this is not possible, then to simply not include the docstring at all within the \"test\" column:\r\nmytest.py::mytestclass::mytestmethodname\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/198", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/198/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/198/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/198", "id": 407305147, "node_id": "MDU6SXNzdWU0MDczMDUxNDc=", "number": 198, "title": "add markdown export", "user": {"login": "faroit", "id": 72940, "node_id": "MDQ6VXNlcjcyOTQw", "avatar_url": "https://avatars3.githubusercontent.com/u/72940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faroit", "html_url": "https://github.com/faroit", "followers_url": "https://api.github.com/users/faroit/followers", "following_url": "https://api.github.com/users/faroit/following{/other_user}", "gists_url": "https://api.github.com/users/faroit/gists{/gist_id}", "starred_url": "https://api.github.com/users/faroit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faroit/subscriptions", "organizations_url": "https://api.github.com/users/faroit/orgs", "repos_url": "https://api.github.com/users/faroit/repos", "events_url": "https://api.github.com/users/faroit/events{/privacy}", "received_events_url": "https://api.github.com/users/faroit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-06T15:59:01Z", "updated_at": "2019-09-10T17:04:10Z", "closed_at": "2019-02-07T14:20:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just discovered this package and I really like the generated outputs. Thanks for this great work!\r\n\r\nHowever, sometimes a report, formatted in simple markdown would be good enough and could be easily posted in github issues.\r\n\r\n* Is there anyone working on this?\r\n* has anyone seen other pytest plugins that could produce markdown reports?\r\n* Is this of any interest?\r\n\r\nI would love to work on this, so I would appreciate appropriate hints or help with this initiative.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/197", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/197/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/197/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/197", "id": 406026754, "node_id": "MDU6SXNzdWU0MDYwMjY3NTQ=", "number": 197, "title": "Make css/js path configurable with cli parameter", "user": {"login": "pythononwheels", "id": 1859655, "node_id": "MDQ6VXNlcjE4NTk2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1859655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pythononwheels", "html_url": "https://github.com/pythononwheels", "followers_url": "https://api.github.com/users/pythononwheels/followers", "following_url": "https://api.github.com/users/pythononwheels/following{/other_user}", "gists_url": "https://api.github.com/users/pythononwheels/gists{/gist_id}", "starred_url": "https://api.github.com/users/pythononwheels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pythononwheels/subscriptions", "organizations_url": "https://api.github.com/users/pythononwheels/orgs", "repos_url": "https://api.github.com/users/pythononwheels/repos", "events_url": "https://api.github.com/users/pythononwheels/events{/privacy}", "received_events_url": "https://api.github.com/users/pythononwheels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649591, "node_id": "MDU6TGFiZWwxOTk2NDk1OTE=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 199649592, "node_id": "MDU6TGFiZWwxOTk2NDk1OTI=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-02T21:58:12Z", "updated_at": "2019-02-22T20:37:58Z", "closed_at": "2019-02-22T20:37:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cause:\r\nI need to use the standalone version since I cannot serve the default css/js paths (\"/assets/\"). \r\nSo the generated report does not find the css/js. \r\n\r\npossible solution:\r\nWould be a nice thing to make them configurable with a prefix path parameter like \r\n`--include-prefix=<prefix>   `\r\nDefault: `/assets` so everything stays the same.\r\n\r\nSo you can adapt the path to include it to existing apps already having a different static path prefix.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/186", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/186/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/186/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/186", "id": 383621117, "node_id": "MDU6SXNzdWUzODM2MjExMTc=", "number": 186, "title": "Passing selenium screenshots to the report", "user": {"login": "Vic152", "id": 6089679, "node_id": "MDQ6VXNlcjYwODk2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6089679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vic152", "html_url": "https://github.com/Vic152", "followers_url": "https://api.github.com/users/Vic152/followers", "following_url": "https://api.github.com/users/Vic152/following{/other_user}", "gists_url": "https://api.github.com/users/Vic152/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vic152/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vic152/subscriptions", "organizations_url": "https://api.github.com/users/Vic152/orgs", "repos_url": "https://api.github.com/users/Vic152/repos", "events_url": "https://api.github.com/users/Vic152/events{/privacy}", "received_events_url": "https://api.github.com/users/Vic152/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-22T17:37:15Z", "updated_at": "2018-11-23T10:45:04Z", "closed_at": "2018-11-23T10:45:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Guys,\r\n\r\nI have fixture for wedriver:\r\n```\r\n@pytest.fixture(scope='session')\r\ndef browser():\r\n\r\n    driver = webdriver.Chrome('resources//chromedriver.exe', options=options)\r\n    driver.get('http://www.gogle.com')\r\n    driver.implicitly_wait(5)\r\n\r\n    return driver\r\n```\r\n\r\nI have want to add extra in the report:\r\n\r\n```\r\n@pytest.mark.hookwrapper\r\ndef pytest_runtest_makereport(item, call):\r\n    pytest_html = item.config.pluginmanager.getplugin('html')\r\n    outcome = yield\r\n    report = outcome.get_result()\r\n    extra = getattr(report, 'extra', [])\r\n    if report.when == 'call':\r\n\r\n        browser.save_screenshot('D:/report/scr.png')\r\n        extra.append(pytest_html.extras.image('D:/report/scr.png'))\r\n\r\n        # always add url to report\r\n        extra.append(pytest_html.extras.url('http://www.example.com/'))\r\n        xfail = hasattr(report, 'wasxfail')\r\n        if (report.skipped and xfail) or (report.failed and not xfail):\r\n            # only add additional html on failure\r\n            extra.append(pytest_html.extras.image('D:/report/scr.png'))\r\n            extra.append(pytest_html.extras.html('<div>Additional HTML</div>'))\r\n        report.extra = extra\r\n\r\n```\r\n\r\nI get an error when I try to do this: **AttributeError: 'function' object has no attribute 'save_screenshot'**\r\nIt seems like I cannot pass webriver.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/185", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/185/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/185/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/185", "id": 383501136, "node_id": "MDU6SXNzdWUzODM1MDExMzY=", "number": 185, "title": "Multiple testsuite failures with pytest-3.10.1 and python-3.6", "user": {"login": "glaubitz", "id": 1647645, "node_id": "MDQ6VXNlcjE2NDc2NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glaubitz", "html_url": "https://github.com/glaubitz", "followers_url": "https://api.github.com/users/glaubitz/followers", "following_url": "https://api.github.com/users/glaubitz/following{/other_user}", "gists_url": "https://api.github.com/users/glaubitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/glaubitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glaubitz/subscriptions", "organizations_url": "https://api.github.com/users/glaubitz/orgs", "repos_url": "https://api.github.com/users/glaubitz/repos", "events_url": "https://api.github.com/users/glaubitz/events{/privacy}", "received_events_url": "https://api.github.com/users/glaubitz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-11-22T11:49:21Z", "updated_at": "2019-10-27T13:18:09Z", "closed_at": "2019-10-27T13:18:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently packaging ```pytest-html``` for openSUSE and I'm running into multiple testsuite failures:\r\n\r\n<details>\r\n<summary> output </summary>\r\n\r\n```\r\n[    5s] ============================= test session starts ==============================\r\n[    5s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0 -- /usr/bin/python3\r\n[    5s] cachedir: .pytest_cache\r\n[    5s] metadata: {'Python': '3.6.5', 'Platform': 'Linux-4.19.1-1-default-x86_64-with-glibc2.3.4', 'Packages': {'pytest': '3.10.1', 'py': '1.7.0', 'pluggy': '0.8.0'}, 'Plugins': {'html': '1.19.0', 'mock': '1.10.0', 'metadata': '1.7.0'}}\r\n[    5s] rootdir: /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0, inifile:\r\n[    5s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[    5s] collecting ... collected 59 items\r\n[    5s] \r\n[    6s] testing/test_pytest_html.py::TestHTML::test_durations FAILED             [  1%]\r\n[    6s] testing/test_pytest_html.py::TestHTML::test_pass FAILED                  [  3%]\r\n[    6s] testing/test_pytest_html.py::TestHTML::test_skip FAILED                  [  5%]\r\n[    6s] testing/test_pytest_html.py::TestHTML::test_fail FAILED                  [  6%]\r\n[    6s] testing/test_pytest_html.py::TestHTML::test_rerun FAILED                 [  8%]\r\n[    6s] testing/test_pytest_html.py::TestHTML::test_no_rerun PASSED              [ 10%]\r\n[    7s] testing/test_pytest_html.py::TestHTML::test_conditional_xfails FAILED    [ 11%]\r\n[    7s] testing/test_pytest_html.py::TestHTML::test_setup_error FAILED           [ 13%]\r\n[    7s] testing/test_pytest_html.py::TestHTML::test_xfail FAILED                 [ 15%]\r\n[    7s] testing/test_pytest_html.py::TestHTML::test_xpass FAILED                 [ 16%]\r\n[    7s] testing/test_pytest_html.py::TestHTML::test_create_report_path FAILED    [ 18%]\r\n[    7s] testing/test_pytest_html.py::TestHTML::test_report_title[] PASSED        [ 20%]\r\n[    7s] testing/test_pytest_html.py::TestHTML::test_report_title[directory] PASSED [ 22%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_resources_inline_css PASSED  [ 23%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_resources PASSED             [ 25%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_stdout[pass] PASSED          [ 27%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_stdout[fail] PASSED          [ 28%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_custom_content_in_summary PASSED [ 30%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_extra_html PASSED            [ 32%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_extra_text[u'\\x81'-woE=] PASSED [ 33%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_extra_text['foo'-Zm9v] PASSED [ 35%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_extra_text[b'\\\\xe2\\\\x80\\\\x93'-4oCT] PASSED [ 37%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_extra_json PASSED            [ 38%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_extra_url PASSED             [ 40%]\r\n[    8s] testing/test_pytest_html.py::TestHTML::test_extra_image[image/png-png] PASSED [ 42%]\r\n[    9s] testing/test_pytest_html.py::TestHTML::test_extra_image[image/png-image] PASSED [ 44%]\r\n[    9s] testing/test_pytest_html.py::TestHTML::test_extra_image[image/jpeg-jpg] PASSED [ 45%]\r\n[    9s] testing/test_pytest_html.py::TestHTML::test_extra_image[image/svg+xml-svg] PASSED [ 47%]\r\n[    9s] testing/test_pytest_html.py::TestHTML::test_extra_image_windows PASSED   [ 49%]\r\n[    9s] testing/test_pytest_html.py::TestHTML::test_extra_text_separated[u'\\x81'] PASSED [ 50%]\r\n[    9s] testing/test_pytest_html.py::TestHTML::test_extra_text_separated['foo'] PASSED [ 52%]\r\n[    9s] testing/test_pytest_html.py::TestHTML::test_extra_text_separated[b'\\\\xe2\\\\x80\\\\x93'] PASSED [ 54%]\r\n[    9s] testing/test_pytest_html.py::TestHTML::test_extra_image_separated[png-image] PASSED [ 55%]\r\n[    9s] testing/test_pytest_html.py::TestHTML::test_extra_image_separated[png-png] PASSED [ 57%]\r\n[    9s] testing/test_pytest_html.py::TestHTML::test_extra_image_separated[svg-svg] PASSED [ 59%]\r\n[   10s] testing/test_pytest_html.py::TestHTML::test_extra_image_separated[jpg-jpg] PASSED [ 61%]\r\n[   10s] testing/test_pytest_html.py::TestHTML::test_extra_image_separated_rerun[png-image] FAILED [ 62%]\r\n[   10s] testing/test_pytest_html.py::TestHTML::test_extra_image_separated_rerun[png-png] FAILED [ 64%]\r\n[   10s] testing/test_pytest_html.py::TestHTML::test_extra_image_separated_rerun[svg-svg] FAILED [ 66%]\r\n[   10s] testing/test_pytest_html.py::TestHTML::test_extra_image_separated_rerun[jpg-jpg] FAILED [ 67%]\r\n[   10s] testing/test_pytest_html.py::TestHTML::test_extra_image_non_b64[https://] PASSED [ 69%]\r\n[   10s] testing/test_pytest_html.py::TestHTML::test_extra_image_non_b64[file://] PASSED [ 71%]\r\n[   10s] testing/test_pytest_html.py::TestHTML::test_extra_image_non_b64[image.png] PASSED [ 72%]\r\n[   10s] testing/test_pytest_html.py::TestHTML::test_no_environment PASSED        [ 74%]\r\n[   11s] testing/test_pytest_html.py::TestHTML::test_environment PASSED           [ 76%]\r\n[   11s] testing/test_pytest_html.py::TestHTML::test_environment_xdist FAILED     [ 77%]\r\n[   11s] testing/test_pytest_html.py::TestHTML::test_environment_xdist_reruns FAILED [ 79%]\r\n[   11s] testing/test_pytest_html.py::TestHTML::test_environment_list_value PASSED [ 81%]\r\n[   11s] testing/test_pytest_html.py::TestHTML::test_environment_ordered PASSED   [ 83%]\r\n[   11s] testing/test_pytest_html.py::TestHTML::test_xdist_crashing_slave FAILED  [ 84%]\r\n[   11s] testing/test_pytest_html.py::TestHTML::test_utf8_surrogate FAILED        [ 86%]\r\n[   11s] testing/test_pytest_html.py::TestHTML::test_ansi_color PASSED            [ 88%]\r\n[   11s] testing/test_pytest_html.py::TestHTML::test_utf8_longrepr['foo'] PASSED  [ 89%]\r\n[   12s] testing/test_pytest_html.py::TestHTML::test_utf8_longrepr[u'\\x81'] FAILED [ 91%]\r\n[   12s] testing/test_pytest_html.py::TestHTML::test_collect_error FAILED         [ 93%]\r\n[   12s] testing/test_pytest_html.py::TestHTML::test_css[colors0] PASSED          [ 94%]\r\n[   12s] testing/test_pytest_html.py::TestHTML::test_css[colors1] PASSED          [ 96%]\r\n[   12s] testing/test_pytest_html.py::TestHTML::test_css_invalid PASSED           [ 98%]\r\n[   12s] testing/test_pytest_html.py::TestHTML::test_css_invalid_no_html PASSED   [100%]\r\n[   12s] \r\n[   12s] =================================== FAILURES ===================================\r\n[   12s] ___________________________ TestHTML.test_durations ____________________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1a516278>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_durations0')>\r\n[   12s] \r\n[   12s]     def test_durations(self, testdir):\r\n[   12s]         sleep = float(0.2)\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import time\r\n[   12s]             def test_sleep():\r\n[   12s]                 time.sleep({0:f})\r\n[   12s]         \"\"\".format(sleep * 2))\r\n[   12s]         result, html = run(testdir)\r\n[   12s]         assert result.ret == 0\r\n[   12s] >       assert_results(html, duration=sleep)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:78: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...colspan=\"4\">\\n            <div class=\"empty log\">No log output captured.</div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 0, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_durations0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_durations.py .                                                      [100%]\r\n[   12s] \r\n[   12s]  generated html file: /tmp/pytest-of-abuild/pytest-2/test_durations0/report.html \r\n[   12s] =========================== 1 passed in 0.44 seconds ===========================\r\n[   12s] ______________________________ TestHTML.test_pass ______________________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1a5fbf98>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_pass0')>\r\n[   12s] \r\n[   12s]     def test_pass(self, testdir):\r\n[   12s]         testdir.makepyfile('def test_pass(): pass')\r\n[   12s]         result, html = run(testdir)\r\n[   12s]         assert result.ret == 0\r\n[   12s] >       assert_results(html)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:87: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...colspan=\"4\">\\n            <div class=\"empty log\">No log output captured.</div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 0, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_pass0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_pass.py .                                                           [100%]\r\n[   12s] \r\n[   12s] -- generated html file: /tmp/pytest-of-abuild/pytest-2/test_pass0/report.html --\r\n[   12s] =========================== 1 passed in 0.02 seconds ===========================\r\n[   12s] ______________________________ TestHTML.test_skip ______________________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1a6a0c50>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_skip0')>\r\n[   12s] \r\n[   12s]     def test_skip(self, testdir):\r\n[   12s]         reason = str(random.random())\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             def test_skip():\r\n[   12s]                 pytest.skip('{0}')\r\n[   12s]         \"\"\".format(reason))\r\n[   12s]         result, html = run(testdir)\r\n[   12s]         assert result.ret == 0\r\n[   12s] >       assert_results(html, tests=0, passed=0, skipped=1)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:98: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...ip0/test_skip.py&#x27;, 3, &#x27;Skipped: 0.8108015298760467&#x27;)<br/></div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 0, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_skip0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_skip.py s                                                           [100%]\r\n[   12s] \r\n[   12s] -- generated html file: /tmp/pytest-of-abuild/pytest-2/test_skip0/report.html --\r\n[   12s] ========================== 1 skipped in 0.03 seconds ===========================\r\n[   12s] ______________________________ TestHTML.test_fail ______________________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1a7f32e8>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_fail0')>\r\n[   12s] \r\n[   12s]     def test_fail(self, testdir):\r\n[   12s]         testdir.makepyfile('def test_fail(): assert False')\r\n[   12s]         result, html = run(testdir)\r\n[   12s]         assert result.ret\r\n[   12s] >       assert_results(html, passed=0, failed=1)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:105: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...or\">E   assert False</span><br/><br/>test_fail.py:1: AssertionError<br/></div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 0, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_fail0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_fail.py F                                                           [100%]\r\n[   12s] \r\n[   12s] =================================== FAILURES ===================================\r\n[   12s] __________________________________ test_fail ___________________________________\r\n[   12s] \r\n[   12s] >   def test_fail(): assert False\r\n[   12s] E   assert False\r\n[   12s] \r\n[   12s] test_fail.py:1: AssertionError\r\n[   12s] -- generated html file: /tmp/pytest-of-abuild/pytest-2/test_fail0/report.html --\r\n[   12s] =========================== 1 failed in 0.03 seconds ===========================\r\n[   12s] _____________________________ TestHTML.test_rerun ______________________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1a3ae198>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_rerun0')>\r\n[   12s] \r\n[   12s]     def test_rerun(self, testdir):\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.flaky(reruns=5)\r\n[   12s]             def test_example():\r\n[   12s]                 assert False\r\n[   12s]         \"\"\")\r\n[   12s]         result, html = run(testdir)\r\n[   12s]         assert result.ret\r\n[   12s] >       assert_results(html, passed=0, failed=1, rerun=5)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:117: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...       assert False</span><br/><br/>test_rerun.py:4: AssertionError<br/></div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 5, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_rerun0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_rerun.py F                                                          [100%]\r\n[   12s] \r\n[   12s] =================================== FAILURES ===================================\r\n[   12s] _________________________________ test_example _________________________________\r\n[   12s] \r\n[   12s]     @pytest.mark.flaky(reruns=5)\r\n[   12s]     def test_example():\r\n[   12s] >       assert False\r\n[   12s] E       assert False\r\n[   12s] \r\n[   12s] test_rerun.py:4: AssertionError\r\n[   12s] - generated html file: /tmp/pytest-of-abuild/pytest-2/test_rerun0/report.html --\r\n[   12s] =========================== 1 failed in 0.03 seconds ===========================\r\n[   12s] _______________________ TestHTML.test_conditional_xfails _______________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1a383668>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_conditional_xfails0')>\r\n[   12s] \r\n[   12s]     def test_conditional_xfails(self, testdir):\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.xfail(False, reason='reason')\r\n[   12s]             def test_fail(): assert False\r\n[   12s]             @pytest.mark.xfail(False, reason='reason')\r\n[   12s]             def test_pass(): pass\r\n[   12s]             @pytest.mark.xfail(True, reason='reason')\r\n[   12s]             def test_xfail(): assert False\r\n[   12s]             @pytest.mark.xfail(True, reason='reason')\r\n[   12s]             def test_xpass(): pass\r\n[   12s]         \"\"\")\r\n[   12s]         result, html = run(testdir)\r\n[   12s]         assert result.ret\r\n[   12s] >       assert_results(html, tests=4, passed=1, failed=1, xfailed=1, xpassed=1)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:139: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...colspan=\"4\">\\n            <div class=\"empty log\">No log output captured.</div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 0, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_conditional_xfails0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 4 items\r\n[   12s] \r\n[   12s] test_conditional_xfails.py F.xX                                          [100%]\r\n[   12s] \r\n[   12s] =================================== FAILURES ===================================\r\n[   12s] __________________________________ test_fail ___________________________________\r\n[   12s] \r\n[   12s]     @pytest.mark.xfail(False, reason='reason')\r\n[   12s] >   def test_fail(): assert False\r\n[   12s] E   assert False\r\n[   12s] \r\n[   12s] test_conditional_xfails.py:3: AssertionError\r\n[   12s]  generated html file: /tmp/pytest-of-abuild/pytest-2/test_conditional_xfails0/report.html \r\n[   12s] =========== 1 failed, 1 passed, 1 xfailed, 1 xpassed in 0.05 seconds ===========\r\n[   12s] __________________________ TestHTML.test_setup_error ___________________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1a335d30>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_setup_error0')>\r\n[   12s] \r\n[   12s]     def test_setup_error(self, testdir):\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             def pytest_funcarg__arg(request):\r\n[   12s]                 raise ValueError()\r\n[   12s]             def test_function(arg):\r\n[   12s]                 pass\r\n[   12s]         \"\"\")\r\n[   12s]         result, html = run(testdir)\r\n[   12s]         assert result.ret\r\n[   12s] >       assert_results(html, tests=0, passed=0, errors=1)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:150: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...       ValueError</span><br/><br/>test_setup_error.py:2: ValueError<br/></div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 0, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_setup_error0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_setup_error.py E                                                    [100%]\r\n[   12s] \r\n[   12s] ==================================== ERRORS ====================================\r\n[   12s] _______________________ ERROR at setup of test_function ________________________\r\n[   12s] \r\n[   12s] request = <SubRequest 'arg' for <Function 'test_function'>>\r\n[   12s] \r\n[   12s]     def pytest_funcarg__arg(request):\r\n[   12s] >       raise ValueError()\r\n[   12s] E       ValueError\r\n[   12s] \r\n[   12s] test_setup_error.py:2: ValueError\r\n[   12s]  generated html file: /tmp/pytest-of-abuild/pytest-2/test_setup_error0/report.html \r\n[   12s] =============================== warnings summary ===============================\r\n[   12s] test_setup_error.py:1\r\n[   12s]   /tmp/pytest-of-abuild/pytest-2/test_setup_error0/test_setup_error.py:1: RemovedInPytest4Warning: pytest_funcarg__arg: declaring fixtures using \"pytest_funcarg__\" prefix is deprecated and scheduled to be removed in pytest 4.0.  Please remove the prefix and use the @pytest.fixture decorator instead.\r\n[   12s]     def pytest_funcarg__arg(request):\r\n[   12s] \r\n[   12s] -- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n[   12s] ===================== 1 warnings, 1 error in 0.05 seconds ======================\r\n[   12s] _____________________________ TestHTML.test_xfail ______________________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1a6000b8>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_xfail0')>\r\n[   12s] \r\n[   12s]     def test_xfail(self, testdir):\r\n[   12s]         reason = str(random.random())\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             def test_xfail():\r\n[   12s]                 pytest.xfail('{0}')\r\n[   12s]         \"\"\".format(reason))\r\n[   12s]         result, html = run(testdir)\r\n[   12s]         assert result.ret == 0\r\n[   12s] >       assert_results(html, passed=0, xfailed=1)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:163: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...ailed: 0.42152191751157275</span><br/><br/>test_xfail.py:3: XFailed<br/></div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 0, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_xfail0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_xfail.py x                                                          [100%]\r\n[   12s] \r\n[   12s] - generated html file: /tmp/pytest-of-abuild/pytest-2/test_xfail0/report.html --\r\n[   12s] ========================== 1 xfailed in 0.03 seconds ===========================\r\n[   12s] _____________________________ TestHTML.test_xpass ______________________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1a2174a8>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_xpass0')>\r\n[   12s] \r\n[   12s]     def test_xpass(self, testdir):\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.xfail()\r\n[   12s]             def test_xpass():\r\n[   12s]                 pass\r\n[   12s]         \"\"\")\r\n[   12s]         result, html = run(testdir)\r\n[   12s]         assert result.ret == 0\r\n[   12s] >       assert_results(html, passed=0, xpassed=1)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:175: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...colspan=\"4\">\\n            <div class=\"empty log\">No log output captured.</div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 0, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_xpass0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_xpass.py X                                                          [100%]\r\n[   12s] \r\n[   12s] - generated html file: /tmp/pytest-of-abuild/pytest-2/test_xpass0/report.html --\r\n[   12s] ========================== 1 xpassed in 0.02 seconds ===========================\r\n[   12s] _______________________ TestHTML.test_create_report_path _______________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1a199550>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_create_report_path0')>\r\n[   12s] \r\n[   12s]     def test_create_report_path(self, testdir):\r\n[   12s]         testdir.makepyfile('def test_pass(): pass')\r\n[   12s]         path = os.path.join('directory', 'report.html')\r\n[   12s]         result, html = run(testdir, path)\r\n[   12s]         assert result.ret == 0\r\n[   12s] >       assert_results(html)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:182: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...colspan=\"4\">\\n            <div class=\"empty log\">No log output captured.</div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 0, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_create_report_path0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_create_report_path.py .                                             [100%]\r\n[   12s] \r\n[   12s]  generated html file: /tmp/pytest-of-abuild/pytest-2/test_create_report_path0/directory/report.html \r\n[   12s] =========================== 1 passed in 0.03 seconds ===========================\r\n[   12s] _____________ TestHTML.test_extra_image_separated_rerun[png-image] _____________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e19952a20>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun0')>\r\n[   12s] file_extension = 'png', extra_type = 'image'\r\n[   12s] \r\n[   12s]     @pytest.mark.parametrize('file_extension, extra_type', [\r\n[   12s]         ('png', 'image'),\r\n[   12s]         ('png', 'png'),\r\n[   12s]         ('svg', 'svg'),\r\n[   12s]         ('jpg', 'jpg')])\r\n[   12s]     def test_extra_image_separated_rerun(self, testdir, file_extension,\r\n[   12s]                                          extra_type):\r\n[   12s]         content = b64encode('foo'.encode('utf-8')).decode('ascii')\r\n[   12s]         testdir.makeconftest(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.hookwrapper\r\n[   12s]             def pytest_runtest_makereport(item, call):\r\n[   12s]                 outcome = yield\r\n[   12s]                 report = outcome.get_result()\r\n[   12s]                 if report.when == 'call':\r\n[   12s]                     from pytest_html import extras\r\n[   12s]                     report.extra = [extras.{0}('{1}')]\r\n[   12s]         \"\"\".format(extra_type, content))\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.flaky(reruns=2)\r\n[   12s]             def test_fail():\r\n[   12s]                 assert False\"\"\")\r\n[   12s]         result, html = run(testdir)\r\n[   12s]     \r\n[   12s]         for i in range(1, 4):\r\n[   12s]             hash_key = ('test_extra_image_separated_rerun.py::'\r\n[   12s]                         'test_fail0{0}'.format(i)).encode('utf-8')\r\n[   12s]             hash_generator = hashlib.md5()\r\n[   12s]             hash_generator.update(hash_key)\r\n[   12s]             src = 'assets/{0}.{1}'.format(hash_generator.hexdigest(),\r\n[   12s]                                           file_extension)\r\n[   12s]             link = ('<a class=\"image\" href=\"{0}\" target=\"_blank\">'.format(src))\r\n[   12s]             assert result.ret\r\n[   12s] >           assert link in html\r\n[   12s] E           assert '<a class=\"image\" href=\"assets/c1567128dcf1aed80c2c065122693477.png\" target=\"_blank\">' in '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...pan><br/><br/>test_extra_image_separated_rerun.py:4: AssertionError<br/></div></td></tr></tbody></table></body></html>'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:459: AssertionError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_extra_image_separated_rerun.py F                                    [100%]\r\n[   12s] \r\n[   12s] =================================== FAILURES ===================================\r\n[   12s] __________________________________ test_fail ___________________________________\r\n[   12s] \r\n[   12s]     @pytest.mark.flaky(reruns=2)\r\n[   12s]     def test_fail():\r\n[   12s] >       assert False\r\n[   12s] E       assert False\r\n[   12s] \r\n[   12s] test_extra_image_separated_rerun.py:4: AssertionError\r\n[   12s]  generated html file: /tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun0/report.html \r\n[   12s] =========================== 1 failed in 0.03 seconds ===========================\r\n[   12s] ______________ TestHTML.test_extra_image_separated_rerun[png-png] ______________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1984fc18>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun1')>\r\n[   12s] file_extension = 'png', extra_type = 'png'\r\n[   12s] \r\n[   12s]     @pytest.mark.parametrize('file_extension, extra_type', [\r\n[   12s]         ('png', 'image'),\r\n[   12s]         ('png', 'png'),\r\n[   12s]         ('svg', 'svg'),\r\n[   12s]         ('jpg', 'jpg')])\r\n[   12s]     def test_extra_image_separated_rerun(self, testdir, file_extension,\r\n[   12s]                                          extra_type):\r\n[   12s]         content = b64encode('foo'.encode('utf-8')).decode('ascii')\r\n[   12s]         testdir.makeconftest(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.hookwrapper\r\n[   12s]             def pytest_runtest_makereport(item, call):\r\n[   12s]                 outcome = yield\r\n[   12s]                 report = outcome.get_result()\r\n[   12s]                 if report.when == 'call':\r\n[   12s]                     from pytest_html import extras\r\n[   12s]                     report.extra = [extras.{0}('{1}')]\r\n[   12s]         \"\"\".format(extra_type, content))\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.flaky(reruns=2)\r\n[   12s]             def test_fail():\r\n[   12s]                 assert False\"\"\")\r\n[   12s]         result, html = run(testdir)\r\n[   12s]     \r\n[   12s]         for i in range(1, 4):\r\n[   12s]             hash_key = ('test_extra_image_separated_rerun.py::'\r\n[   12s]                         'test_fail0{0}'.format(i)).encode('utf-8')\r\n[   12s]             hash_generator = hashlib.md5()\r\n[   12s]             hash_generator.update(hash_key)\r\n[   12s]             src = 'assets/{0}.{1}'.format(hash_generator.hexdigest(),\r\n[   12s]                                           file_extension)\r\n[   12s]             link = ('<a class=\"image\" href=\"{0}\" target=\"_blank\">'.format(src))\r\n[   12s]             assert result.ret\r\n[   12s] >           assert link in html\r\n[   12s] E           assert '<a class=\"image\" href=\"assets/c1567128dcf1aed80c2c065122693477.png\" target=\"_blank\">' in '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...pan><br/><br/>test_extra_image_separated_rerun.py:4: AssertionError<br/></div></td></tr></tbody></table></body></html>'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:459: AssertionError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun1, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_extra_image_separated_rerun.py F                                    [100%]\r\n[   12s] \r\n[   12s] =================================== FAILURES ===================================\r\n[   12s] __________________________________ test_fail ___________________________________\r\n[   12s] \r\n[   12s]     @pytest.mark.flaky(reruns=2)\r\n[   12s]     def test_fail():\r\n[   12s] >       assert False\r\n[   12s] E       assert False\r\n[   12s] \r\n[   12s] test_extra_image_separated_rerun.py:4: AssertionError\r\n[   12s]  generated html file: /tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun1/report.html \r\n[   12s] =========================== 1 failed in 0.03 seconds ===========================\r\n[   12s] ______________ TestHTML.test_extra_image_separated_rerun[svg-svg] ______________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1984ff98>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun2')>\r\n[   12s] file_extension = 'svg', extra_type = 'svg'\r\n[   12s] \r\n[   12s]     @pytest.mark.parametrize('file_extension, extra_type', [\r\n[   12s]         ('png', 'image'),\r\n[   12s]         ('png', 'png'),\r\n[   12s]         ('svg', 'svg'),\r\n[   12s]         ('jpg', 'jpg')])\r\n[   12s]     def test_extra_image_separated_rerun(self, testdir, file_extension,\r\n[   12s]                                          extra_type):\r\n[   12s]         content = b64encode('foo'.encode('utf-8')).decode('ascii')\r\n[   12s]         testdir.makeconftest(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.hookwrapper\r\n[   12s]             def pytest_runtest_makereport(item, call):\r\n[   12s]                 outcome = yield\r\n[   12s]                 report = outcome.get_result()\r\n[   12s]                 if report.when == 'call':\r\n[   12s]                     from pytest_html import extras\r\n[   12s]                     report.extra = [extras.{0}('{1}')]\r\n[   12s]         \"\"\".format(extra_type, content))\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.flaky(reruns=2)\r\n[   12s]             def test_fail():\r\n[   12s]                 assert False\"\"\")\r\n[   12s]         result, html = run(testdir)\r\n[   12s]     \r\n[   12s]         for i in range(1, 4):\r\n[   12s]             hash_key = ('test_extra_image_separated_rerun.py::'\r\n[   12s]                         'test_fail0{0}'.format(i)).encode('utf-8')\r\n[   12s]             hash_generator = hashlib.md5()\r\n[   12s]             hash_generator.update(hash_key)\r\n[   12s]             src = 'assets/{0}.{1}'.format(hash_generator.hexdigest(),\r\n[   12s]                                           file_extension)\r\n[   12s]             link = ('<a class=\"image\" href=\"{0}\" target=\"_blank\">'.format(src))\r\n[   12s]             assert result.ret\r\n[   12s] >           assert link in html\r\n[   12s] E           assert '<a class=\"image\" href=\"assets/c1567128dcf1aed80c2c065122693477.svg\" target=\"_blank\">' in '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...pan><br/><br/>test_extra_image_separated_rerun.py:4: AssertionError<br/></div></td></tr></tbody></table></body></html>'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:459: AssertionError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun2, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_extra_image_separated_rerun.py F                                    [100%]\r\n[   12s] \r\n[   12s] =================================== FAILURES ===================================\r\n[   12s] __________________________________ test_fail ___________________________________\r\n[   12s] \r\n[   12s]     @pytest.mark.flaky(reruns=2)\r\n[   12s]     def test_fail():\r\n[   12s] >       assert False\r\n[   12s] E       assert False\r\n[   12s] \r\n[   12s] test_extra_image_separated_rerun.py:4: AssertionError\r\n[   12s]  generated html file: /tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun2/report.html \r\n[   12s] =========================== 1 failed in 0.03 seconds ===========================\r\n[   12s] ______________ TestHTML.test_extra_image_separated_rerun[jpg-jpg] ______________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e197cc748>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun3')>\r\n[   12s] file_extension = 'jpg', extra_type = 'jpg'\r\n[   12s] \r\n[   12s]     @pytest.mark.parametrize('file_extension, extra_type', [\r\n[   12s]         ('png', 'image'),\r\n[   12s]         ('png', 'png'),\r\n[   12s]         ('svg', 'svg'),\r\n[   12s]         ('jpg', 'jpg')])\r\n[   12s]     def test_extra_image_separated_rerun(self, testdir, file_extension,\r\n[   12s]                                          extra_type):\r\n[   12s]         content = b64encode('foo'.encode('utf-8')).decode('ascii')\r\n[   12s]         testdir.makeconftest(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.hookwrapper\r\n[   12s]             def pytest_runtest_makereport(item, call):\r\n[   12s]                 outcome = yield\r\n[   12s]                 report = outcome.get_result()\r\n[   12s]                 if report.when == 'call':\r\n[   12s]                     from pytest_html import extras\r\n[   12s]                     report.extra = [extras.{0}('{1}')]\r\n[   12s]         \"\"\".format(extra_type, content))\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.flaky(reruns=2)\r\n[   12s]             def test_fail():\r\n[   12s]                 assert False\"\"\")\r\n[   12s]         result, html = run(testdir)\r\n[   12s]     \r\n[   12s]         for i in range(1, 4):\r\n[   12s]             hash_key = ('test_extra_image_separated_rerun.py::'\r\n[   12s]                         'test_fail0{0}'.format(i)).encode('utf-8')\r\n[   12s]             hash_generator = hashlib.md5()\r\n[   12s]             hash_generator.update(hash_key)\r\n[   12s]             src = 'assets/{0}.{1}'.format(hash_generator.hexdigest(),\r\n[   12s]                                           file_extension)\r\n[   12s]             link = ('<a class=\"image\" href=\"{0}\" target=\"_blank\">'.format(src))\r\n[   12s]             assert result.ret\r\n[   12s] >           assert link in html\r\n[   12s] E           assert '<a class=\"image\" href=\"assets/c1567128dcf1aed80c2c065122693477.jpg\" target=\"_blank\">' in '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...pan><br/><br/>test_extra_image_separated_rerun.py:4: AssertionError<br/></div></td></tr></tbody></table></body></html>'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:459: AssertionError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun3, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_extra_image_separated_rerun.py F                                    [100%]\r\n[   12s] \r\n[   12s] =================================== FAILURES ===================================\r\n[   12s] __________________________________ test_fail ___________________________________\r\n[   12s] \r\n[   12s]     @pytest.mark.flaky(reruns=2)\r\n[   12s]     def test_fail():\r\n[   12s] >       assert False\r\n[   12s] E       assert False\r\n[   12s] \r\n[   12s] test_extra_image_separated_rerun.py:4: AssertionError\r\n[   12s]  generated html file: /tmp/pytest-of-abuild/pytest-2/test_extra_image_separated_rerun3/report.html \r\n[   12s] =========================== 1 failed in 0.03 seconds ===========================\r\n[   12s] _______________________ TestHTML.test_environment_xdist ________________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e19579198>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_environment_xdist0')>\r\n[   12s] \r\n[   12s]     def test_environment_xdist(self, testdir):\r\n[   12s]         content = str(random.random())\r\n[   12s]         testdir.makeconftest(\"\"\"\r\n[   12s]             def pytest_configure(config):\r\n[   12s]                 for i in range(2):\r\n[   12s]                     config._metadata['content'] = '{0}'\r\n[   12s]         \"\"\".format(content))\r\n[   12s]         testdir.makepyfile('def test_pass(): pass')\r\n[   12s] >       result, html = run(testdir, 'report.html', '-n', '1')\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:512: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_environment_xdist0')>\r\n[   12s] path = local('/tmp/pytest-of-abuild/pytest-2/test_environment_xdist0/report.html')\r\n[   12s] args = ('-n', '1')\r\n[   12s] result = <_pytest.pytester.RunResult object at 0x7f4e194f42b0>\r\n[   12s] \r\n[   12s]     def run(testdir, path='report.html', *args):\r\n[   12s]         path = testdir.tmpdir.join(path)\r\n[   12s]         result = testdir.runpytest('--html', path, *args)\r\n[   12s] >       with open(str(path)) as f:\r\n[   12s] E       FileNotFoundError: [Errno 2] No such file or directory: '/tmp/pytest-of-abuild/pytest-2/test_environment_xdist0/report.html'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:24: FileNotFoundError\r\n[   12s] ----------------------------- Captured stderr call -----------------------------\r\n[   12s] usage: py.test-3.6 [options] [file_or_dir] [file_or_dir] [...]\r\n[   12s] py.test-3.6: error: unrecognized arguments: -n\r\n[   12s]   inifile: None\r\n[   12s]   rootdir: /tmp/pytest-of-abuild/pytest-2/test_environment_xdist0\r\n[   12s] ____________________ TestHTML.test_environment_xdist_reruns ____________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e194f4898>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_environment_xdist_reruns0')>\r\n[   12s] \r\n[   12s]     def test_environment_xdist_reruns(self, testdir):\r\n[   12s]         content = str(random.random())\r\n[   12s]         testdir.makeconftest(\"\"\"\r\n[   12s]             def pytest_configure(config):\r\n[   12s]                 for i in range(2):\r\n[   12s]                     config._metadata['content'] = '{0}'\r\n[   12s]         \"\"\".format(content))\r\n[   12s]         testdir.makepyfile('def test_fail(): assert False')\r\n[   12s] >       result, html = run(testdir, 'report.html', '-n', '1', '--reruns', '1')\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:525: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_environment_xdist_reruns0')>\r\n[   12s] path = local('/tmp/pytest-of-abuild/pytest-2/test_environment_xdist_reruns0/report.html')\r\n[   12s] args = ('-n', '1', '--reruns', '1')\r\n[   12s] result = <_pytest.pytester.RunResult object at 0x7f4e194a1b00>\r\n[   12s] \r\n[   12s]     def run(testdir, path='report.html', *args):\r\n[   12s]         path = testdir.tmpdir.join(path)\r\n[   12s]         result = testdir.runpytest('--html', path, *args)\r\n[   12s] >       with open(str(path)) as f:\r\n[   12s] E       FileNotFoundError: [Errno 2] No such file or directory: '/tmp/pytest-of-abuild/pytest-2/test_environment_xdist_reruns0/report.html'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:24: FileNotFoundError\r\n[   12s] ----------------------------- Captured stderr call -----------------------------\r\n[   12s] usage: py.test-3.6 [options] [file_or_dir] [file_or_dir] [...]\r\n[   12s] py.test-3.6: error: unrecognized arguments: -n --reruns 1\r\n[   12s]   inifile: None\r\n[   12s]   rootdir: /tmp/pytest-of-abuild/pytest-2/test_environment_xdist_reruns0\r\n[   12s] ______________________ TestHTML.test_xdist_crashing_slave ______________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e19423320>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_xdist_crashing_slave0')>\r\n[   12s] \r\n[   12s]     @pytest.mark.xfail(\r\n[   12s]         sys.version_info < (3, 2) and\r\n[   12s]         LooseVersion(pytest.__version__) >= LooseVersion('2.8.0'),\r\n[   12s]         reason='Fails on earlier versions of Python and pytest',\r\n[   12s]         run=False)\r\n[   12s]     def test_xdist_crashing_slave(self, testdir):\r\n[   12s]         \"\"\"https://github.com/pytest-dev/pytest-html/issues/21\"\"\"\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import os\r\n[   12s]             def test_exit():\r\n[   12s]                 os._exit(0)\r\n[   12s]         \"\"\")\r\n[   12s] >       result, html = run(testdir, 'report.html', '-n', '1')\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:572: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_xdist_crashing_slave0')>\r\n[   12s] path = local('/tmp/pytest-of-abuild/pytest-2/test_xdist_crashing_slave0/report.html')\r\n[   12s] args = ('-n', '1')\r\n[   12s] result = <_pytest.pytester.RunResult object at 0x7f4e193aae80>\r\n[   12s] \r\n[   12s]     def run(testdir, path='report.html', *args):\r\n[   12s]         path = testdir.tmpdir.join(path)\r\n[   12s]         result = testdir.runpytest('--html', path, *args)\r\n[   12s] >       with open(str(path)) as f:\r\n[   12s] E       FileNotFoundError: [Errno 2] No such file or directory: '/tmp/pytest-of-abuild/pytest-2/test_xdist_crashing_slave0/report.html'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:24: FileNotFoundError\r\n[   12s] ----------------------------- Captured stderr call -----------------------------\r\n[   12s] usage: py.test-3.6 [options] [file_or_dir] [file_or_dir] [...]\r\n[   12s] py.test-3.6: error: unrecognized arguments: -n\r\n[   12s]   inifile: None\r\n[   12s]   rootdir: /tmp/pytest-of-abuild/pytest-2/test_xdist_crashing_slave0\r\n[   12s] _________________________ TestHTML.test_utf8_surrogate _________________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e193b2b00>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_utf8_surrogate0')>\r\n[   12s] \r\n[   12s]     def test_utf8_surrogate(self, testdir):\r\n[   12s]         testdir.makepyfile(r\"\"\"\r\n[   12s]             import pytest\r\n[   12s]     \r\n[   12s]             @pytest.mark.parametrize('val', ['\\ud800'])\r\n[   12s]             def test_foo(val):\r\n[   12s]                 pass\r\n[   12s]         \"\"\")\r\n[   12s]         result, html = run(testdir)\r\n[   12s]         assert result.ret == 0\r\n[   12s] >       assert_results(html, passed=1)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:585: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...colspan=\"4\">\\n            <div class=\"empty log\">No log output captured.</div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 0, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_utf8_surrogate0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 1 item\r\n[   12s] \r\n[   12s] test_utf8_surrogate.py .                                                 [100%]\r\n[   12s] \r\n[   12s]  generated html file: /tmp/pytest-of-abuild/pytest-2/test_utf8_surrogate0/report.html \r\n[   12s] =========================== 1 passed in 0.02 seconds ===========================\r\n[   12s] _____________________ TestHTML.test_utf8_longrepr[u'\\x81'] _____________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e1933f780>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_utf8_longrepr1')>\r\n[   12s] content = \"u'\\x81'\"\r\n[   12s] \r\n[   12s]     @pytest.mark.parametrize('content', [(\"'foo'\"), (\"u'\\u0081'\")])\r\n[   12s]     def test_utf8_longrepr(self, testdir, content):\r\n[   12s]         testdir.makeconftest(\"\"\"\r\n[   12s]             import pytest\r\n[   12s]             @pytest.mark.hookwrapper\r\n[   12s]             def pytest_runtest_makereport(item, call):\r\n[   12s]                 outcome = yield\r\n[   12s]                 report = outcome.get_result()\r\n[   12s]                 if report.when == 'call':\r\n[   12s]                     report.longrepr = 'utf8 longrepr: ' + {0}\r\n[   12s]         \"\"\".format(content))\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             def test_fail():\r\n[   12s]                 testtext = 'utf8 longrepr: '\r\n[   12s]                 assert False\r\n[   12s]         \"\"\")\r\n[   12s] >       result, html = run(testdir, 'report.html', '--self-contained-html')\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:628: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:25: in run\r\n[   12s]     html = f.read()\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] self = <encodings.ascii.IncrementalDecoder object at 0x7f4e1930e6d8>\r\n[   12s] input = b'<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <style>body {\\n\\... colspan=\"4\">\\n            <div class=\"log\">utf8 longrepr: \\xc2\\x81<br/></div></td></tr></tbody></table></body></html>'\r\n[   12s] final = True\r\n[   12s] \r\n[   12s]     def decode(self, input, final=False):\r\n[   12s] >       return codecs.ascii_decode(input, self.errors)[0]\r\n[   12s] E       UnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in position 12754: ordinal not in range(128)\r\n[   12s] \r\n[   12s] /usr/lib64/python3.6/encodings/ascii.py:26: UnicodeDecodeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\\nplatform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\\nrootdir: /tmp/pytest-of-abuild/pytest-2/test_utf8_longrepr1, inifile:\\nplugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\\ncollected 1 item\\n\\ntest_utf8_longrepr.py F                                                  [100%]\\n\\n=================================== FAILURES ===================================\\n__________________________________ test_fail ___________________________________\\nutf8 longrepr: \\x81\\n generated html file: /tmp/pytest-of-abuild/pytest-2/test_utf8_longrepr1/report.html \\n=========================== 1 failed in 0.02 seconds ===========================\r\n[   12s] _________________________ TestHTML.test_collect_error __________________________\r\n[   12s] \r\n[   12s] self = <test_pytest_html.TestHTML object at 0x7f4e192389b0>\r\n[   12s] testdir = <Testdir local('/tmp/pytest-of-abuild/pytest-2/test_collect_error0')>\r\n[   12s] \r\n[   12s]     def test_collect_error(self, testdir):\r\n[   12s]         testdir.makepyfile(\"\"\"\r\n[   12s]             import xyz\r\n[   12s]             def test_pass(): pass\r\n[   12s]         \"\"\")\r\n[   12s]         result, html = run(testdir)\r\n[   12s]         assert result.ret\r\n[   12s] >       assert_results(html, tests=0, passed=0, errors=1)\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:639: \r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:65: in assert_results\r\n[   12s]     assert_results_by_outcome(html, 'rerun', rerun)\r\n[   12s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   12s] \r\n[   12s] html = '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\"/>\\n    <title>Test Report</title>\\n    <link href=\"asset...or\">E   ModuleNotFoundError: No module named &#x27;xyz&#x27;</span><br/></div></td></tr></tbody></table></body></html>'\r\n[   12s] test_outcome = 'rerun', test_outcome_number = 0, label = None\r\n[   12s] \r\n[   12s]     def assert_results_by_outcome(html, test_outcome, test_outcome_number,\r\n[   12s]                                   label=None):\r\n[   12s]         # Asserts if the test number of this outcome in the summary is correct\r\n[   12s]         regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] >       assert int(re.search(regex_summary, html).group(1)) == test_outcome_number\r\n[   12s] E       AttributeError: 'NoneType' object has no attribute 'group'\r\n[   12s] \r\n[   12s] /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:33: AttributeError\r\n[   12s] ----------------------------- Captured stdout call -----------------------------\r\n[   12s] ============================= test session starts ==============================\r\n[   12s] platform linux -- Python 3.6.5, pytest-3.10.1, py-1.7.0, pluggy-0.8.0\r\n[   12s] rootdir: /tmp/pytest-of-abuild/pytest-2/test_collect_error0, inifile:\r\n[   12s] plugins: html-1.19.0, mock-1.10.0, metadata-1.7.0\r\n[   12s] collected 0 items / 1 errors\r\n[   12s] \r\n[   12s] ==================================== ERRORS ====================================\r\n[   12s] ____________________ ERROR collecting test_collect_error.py ____________________\r\n[   12s] ImportError while importing test module '/tmp/pytest-of-abuild/pytest-2/test_collect_error0/test_collect_error.py'.\r\n[   12s] Hint: make sure your test modules/packages have valid Python names.\r\n[   12s] Traceback:\r\n[   12s] test_collect_error.py:1: in <module>\r\n[   12s]     import xyz\r\n[   12s] E   ModuleNotFoundError: No module named 'xyz'\r\n[   12s]  generated html file: /tmp/pytest-of-abuild/pytest-2/test_collect_error0/report.html \r\n[   12s] !!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!\r\n[   12s] =========================== 1 error in 0.16 seconds ============================\r\n[   12s] =============================== warnings summary ===============================\r\n[   12s] testing/test_pytest_html.py:32\r\n[   12s]   /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:32: DeprecationWarning: invalid escape sequence \\d\r\n[   12s]     regex_summary = '(\\d)+ {0}'.format(label or test_outcome)\r\n[   12s] \r\n[   12s] testing/test_pytest_html.py:50\r\n[   12s]   /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:50: DeprecationWarning: invalid escape sequence \\d\r\n[   12s]     total_tests = re.search('(\\d)+ tests ran', html)\r\n[   12s] \r\n[   12s] testing/test_pytest_html.py:55\r\n[   12s]   /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:55: DeprecationWarning: invalid escape sequence \\d\r\n[   12s]     tests_duration = re.search('([\\d,.]+) seconds', html)\r\n[   12s] \r\n[   12s] testing/test_pytest_html.py:79\r\n[   12s]   /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:79: DeprecationWarning: invalid escape sequence \\d\r\n[   12s]     p = re.compile('<td class=\"col-duration\">([\\d,.]+)</td>')\r\n[   12s] \r\n[   12s] testing/test_pytest_html.py:534\r\n[   12s]   /home/abuild/rpmbuild/BUILD/pytest-html-1.19.0/testing/test_pytest_html.py:534: DeprecationWarning: invalid escape sequence \\s\r\n[   12s]     expected_html_re = '<td>content</td>\\n\\s+<td>{}</td>'.format(\r\n[   12s] \r\n[   12s] -- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n[   12s] =============== 20 failed, 39 passed, 5 warnings in 7.59 seconds ===============\r\n[   13s] error: Bad exit status from /var/tmp/rpm-tmp.9I9bMK (%check)\r\n```\r\n\r\n</details>\r\n\r\nI have the necessary requirements installed as per ```setup.py```, so I'm not sure where the problem is.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/179", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/179/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/179/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/179", "id": 364235131, "node_id": "MDU6SXNzdWUzNjQyMzUxMzE=", "number": 179, "title": "pytest-html not able to collect tests when we run with another pypi package pytest-parallel", "user": {"login": "GowriShankariSurendran", "id": 43553700, "node_id": "MDQ6VXNlcjQzNTUzNzAw", "avatar_url": "https://avatars0.githubusercontent.com/u/43553700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GowriShankariSurendran", "html_url": "https://github.com/GowriShankariSurendran", "followers_url": "https://api.github.com/users/GowriShankariSurendran/followers", "following_url": "https://api.github.com/users/GowriShankariSurendran/following{/other_user}", "gists_url": "https://api.github.com/users/GowriShankariSurendran/gists{/gist_id}", "starred_url": "https://api.github.com/users/GowriShankariSurendran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GowriShankariSurendran/subscriptions", "organizations_url": "https://api.github.com/users/GowriShankariSurendran/orgs", "repos_url": "https://api.github.com/users/GowriShankariSurendran/repos", "events_url": "https://api.github.com/users/GowriShankariSurendran/events{/privacy}", "received_events_url": "https://api.github.com/users/GowriShankariSurendran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-26T22:19:00Z", "updated_at": "2019-06-17T21:06:53Z", "closed_at": "2019-06-17T21:06:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use pytest-html to collect tests at the end of our test suite.\r\nBut when we use another pypi pacakge pytest-parallel (which runs tests in parallel - an alternative to xdist), the tests are not collected by pytest-html.\r\nThe console prints the correct tests run, but pytest-html is not able to collect them.\r\nAs an example, this is the following pytest- commands which I run\r\n py.test --workers 2 -m \"ewlc\" -sv com/tests/mock/e2e/eWLC_Client_Issues/blacklist_dhcp_eWLC_Issues_test.py -k test --config device_mock_Cluster.yaml --html=local-regression.html\r\n\r\nPIP list is as follows\r\npip list | grep pytest\r\npytest                3.8.0      \r\npytest-assume         1.2        \r\npytest-cov            2.2.1      \r\npytest-dependency     0.3.2      \r\npytest-forked         0.2        \r\npytest-html           1.19.0     \r\npytest-metadata       1.7.0      \r\npytest-mock           0.10.1     \r\npytest-ordering       0.5        \r\npytest-parallel       0.0.5      \r\npytest-xdist          1.23.0 \r\n\r\nConsole output for tests is \r\n============================================================================================ 27 passed, 108 warnings in 12.59 seconds =============================================================================================\r\n\r\nImage of the HTML file generated for that run.\r\n\r\n<img width=\"974\" alt=\"screen shot 2018-09-26 at 3 18 11 pm\" src=\"https://user-images.githubusercontent.com/43553700/46112394-6bf55080-c19f-11e8-9d23-1e0fc624a64c.png\">\r\n\r\nCan someone please take a look at it and see if there are any fixes available\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/175", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/175/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/175/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/175", "id": 348157006, "node_id": "MDU6SXNzdWUzNDgxNTcwMDY=", "number": 175, "title": "Environment table is missing rows if values are set to 0, None, or False", "user": {"login": "jknotts", "id": 5322040, "node_id": "MDQ6VXNlcjUzMjIwNDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5322040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jknotts", "html_url": "https://github.com/jknotts", "followers_url": "https://api.github.com/users/jknotts/followers", "following_url": "https://api.github.com/users/jknotts/following{/other_user}", "gists_url": "https://api.github.com/users/jknotts/gists{/gist_id}", "starred_url": "https://api.github.com/users/jknotts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jknotts/subscriptions", "organizations_url": "https://api.github.com/users/jknotts/orgs", "repos_url": "https://api.github.com/users/jknotts/repos", "events_url": "https://api.github.com/users/jknotts/events{/privacy}", "received_events_url": "https://api.github.com/users/jknotts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649592, "node_id": "MDU6TGFiZWwxOTk2NDk1OTI=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-07T03:49:52Z", "updated_at": "2018-10-04T16:07:13Z", "closed_at": "2018-10-04T16:07:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added a call to `configure_html_report_env()` so that I could display user passed in options used to execute the tests and any values that are set to `0`, `None`, and `False` are being filtered out in this call https://github.com/pytest-dev/pytest-html/blob/master/pytest_html/plugin.py#L469.\r\n\r\n```\r\n@pytest.fixture(scope='session', autouse=True)\r\ndef configure_html_report_env(request):\r\n  env = {'My Custom Option 1': 0,\r\n         'My Custom Option 2': None,\r\n         'My Custom Option 3': False,\r\n         'My Custom Option 4': str(0),\r\n         'My Custom Option 5': str(None),\r\n         'My Custom Option 6': str(False)}\r\n\r\n  request.config._metadata.update(env)\r\n```\r\n\r\nIs there a reason for this filter? I can wrap what I pass in with `str()` but I wanted to make sure I am correctly following how this section should be used. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/174", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/174/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/174/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/174", "id": 341451070, "node_id": "MDU6SXNzdWUzNDE0NTEwNzA=", "number": 174, "title": "add command config to environment table ", "user": {"login": "lanranse", "id": 26793817, "node_id": "MDQ6VXNlcjI2NzkzODE3", "avatar_url": "https://avatars3.githubusercontent.com/u/26793817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lanranse", "html_url": "https://github.com/lanranse", "followers_url": "https://api.github.com/users/lanranse/followers", "following_url": "https://api.github.com/users/lanranse/following{/other_user}", "gists_url": "https://api.github.com/users/lanranse/gists{/gist_id}", "starred_url": "https://api.github.com/users/lanranse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lanranse/subscriptions", "organizations_url": "https://api.github.com/users/lanranse/orgs", "repos_url": "https://api.github.com/users/lanranse/repos", "events_url": "https://api.github.com/users/lanranse/events{/privacy}", "received_events_url": "https://api.github.com/users/lanranse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-16T09:43:16Z", "updated_at": "2018-07-16T10:27:37Z", "closed_at": "2018-07-16T10:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi\r\nhere is the question\r\nmy  conftest.py contain a driver config\r\n'''\r\n @pytest.fixture(scope='session')\r\ndef driver_class(request):\r\n    driver = request.config.getoption('driver')\r\n    if driver is None:\r\n        raise pytest.UsageError('--driver must be specified')\r\n    return SUPPORTED_DRIVERS[driver]\r\n'''\r\ni want add the driver parameter to environment table \r\n\r\nwhat should i do ??\r\n\r\nthanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/169", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/169/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/169/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/169", "id": 328470156, "node_id": "MDU6SXNzdWUzMjg0NzAxNTY=", "number": 169, "title": "dynamically create the output folder for report.html using command line in pytest", "user": {"login": "writetomaha14", "id": 39156123, "node_id": "MDQ6VXNlcjM5MTU2MTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/39156123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/writetomaha14", "html_url": "https://github.com/writetomaha14", "followers_url": "https://api.github.com/users/writetomaha14/followers", "following_url": "https://api.github.com/users/writetomaha14/following{/other_user}", "gists_url": "https://api.github.com/users/writetomaha14/gists{/gist_id}", "starred_url": "https://api.github.com/users/writetomaha14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/writetomaha14/subscriptions", "organizations_url": "https://api.github.com/users/writetomaha14/orgs", "repos_url": "https://api.github.com/users/writetomaha14/repos", "events_url": "https://api.github.com/users/writetomaha14/events{/privacy}", "received_events_url": "https://api.github.com/users/writetomaha14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-01T10:45:30Z", "updated_at": "2018-06-06T14:15:05Z", "closed_at": "2018-06-01T12:20:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to create the output folder dynamically for every run with current time stamp and report.hml should be available in that folder. \r\n\r\nIs it possible to pass thru the command line for the dynamic folder creation and report.html should be available once all the test cases are executed. \r\n\r\nThanks for the help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/167", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/167/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/167/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/167", "id": 326140403, "node_id": "MDU6SXNzdWUzMjYxNDA0MDM=", "number": 167, "title": "Can I \"Hide all details\" by default?", "user": {"login": "jacebrowning", "id": 939501, "node_id": "MDQ6VXNlcjkzOTUwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/939501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacebrowning", "html_url": "https://github.com/jacebrowning", "followers_url": "https://api.github.com/users/jacebrowning/followers", "following_url": "https://api.github.com/users/jacebrowning/following{/other_user}", "gists_url": "https://api.github.com/users/jacebrowning/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacebrowning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacebrowning/subscriptions", "organizations_url": "https://api.github.com/users/jacebrowning/orgs", "repos_url": "https://api.github.com/users/jacebrowning/repos", "events_url": "https://api.github.com/users/jacebrowning/events{/privacy}", "received_events_url": "https://api.github.com/users/jacebrowning/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-24T14:10:50Z", "updated_at": "2018-05-24T14:24:46Z", "closed_at": "2018-05-24T14:24:46Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I skip lots of tests based on environment and seeing each of these rows expanded by default is just noise in most cases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/165", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/165/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/165/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/165", "id": 322170901, "node_id": "MDU6SXNzdWUzMjIxNzA5MDE=", "number": 165, "title": "html file is huge - need to understand how to manipulate it", "user": {"login": "Formartha", "id": 8232832, "node_id": "MDQ6VXNlcjgyMzI4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8232832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Formartha", "html_url": "https://github.com/Formartha", "followers_url": "https://api.github.com/users/Formartha/followers", "following_url": "https://api.github.com/users/Formartha/following{/other_user}", "gists_url": "https://api.github.com/users/Formartha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Formartha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Formartha/subscriptions", "organizations_url": "https://api.github.com/users/Formartha/orgs", "repos_url": "https://api.github.com/users/Formartha/repos", "events_url": "https://api.github.com/users/Formartha/events{/privacy}", "received_events_url": "https://api.github.com/users/Formartha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-11T05:21:03Z", "updated_at": "2018-05-26T20:06:01Z", "closed_at": "2018-05-22T10:57:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI'm using the amazing py-html report file - however, I using a logge that prints out tons of information (I'm using py.test as an E2E testing tool for the entire platform. a lof for a given test could be 1000 lines).\r\n\r\nMy main issue is that I dont want all the log to be listed in html but rather link it to some NFS folder that I'll throw the zip files of the reports there and just link it to the html (modify the table, add link to a given folder and that's it).\r\n\r\nHow can I achieve this use-case easily?\r\nI may need to start using debug levels in the logs?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/164", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/164/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/164/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/164", "id": 321887113, "node_id": "MDU6SXNzdWUzMjE4ODcxMTM=", "number": 164, "title": "screen shot attachment to the pytest report", "user": {"login": "writetomaha14", "id": 39156123, "node_id": "MDQ6VXNlcjM5MTU2MTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/39156123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/writetomaha14", "html_url": "https://github.com/writetomaha14", "followers_url": "https://api.github.com/users/writetomaha14/followers", "following_url": "https://api.github.com/users/writetomaha14/following{/other_user}", "gists_url": "https://api.github.com/users/writetomaha14/gists{/gist_id}", "starred_url": "https://api.github.com/users/writetomaha14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/writetomaha14/subscriptions", "organizations_url": "https://api.github.com/users/writetomaha14/orgs", "repos_url": "https://api.github.com/users/writetomaha14/repos", "events_url": "https://api.github.com/users/writetomaha14/events{/privacy}", "received_events_url": "https://api.github.com/users/writetomaha14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-10T10:39:08Z", "updated_at": "2018-05-10T17:23:37Z", "closed_at": "2018-05-10T17:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAs i am using the unittest for selenium and python, i am using the pytest for reporting. I needed the help for capturing the screenshots in the pytest reports for pass scenarios and fail scenarios as well. Can you please provide the sample template of the script and code for attaching screenshots in pytest report.\r\n\r\n\r\nThanks for the help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/161", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/161/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/161/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/161", "id": 318745711, "node_id": "MDU6SXNzdWUzMTg3NDU3MTE=", "number": 161, "title": "question : get py.xml for enhancing the report", "user": {"login": "Formartha", "id": 8232832, "node_id": "MDQ6VXNlcjgyMzI4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8232832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Formartha", "html_url": "https://github.com/Formartha", "followers_url": "https://api.github.com/users/Formartha/followers", "following_url": "https://api.github.com/users/Formartha/following{/other_user}", "gists_url": "https://api.github.com/users/Formartha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Formartha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Formartha/subscriptions", "organizations_url": "https://api.github.com/users/Formartha/orgs", "repos_url": "https://api.github.com/users/Formartha/repos", "events_url": "https://api.github.com/users/Formartha/events{/privacy}", "received_events_url": "https://api.github.com/users/Formartha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-29T20:10:43Z", "updated_at": "2018-04-30T11:57:54Z", "closed_at": "2018-04-30T11:57:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI tried searching for py.xml via any given site. however, I can't seem to find anything that meets this requirement. can someone help with it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/160", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/160/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/160/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/160", "id": 318291153, "node_id": "MDU6SXNzdWUzMTgyOTExNTM=", "number": 160, "title": "Feature request : Testsuite markup", "user": {"login": "Formartha", "id": 8232832, "node_id": "MDQ6VXNlcjgyMzI4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8232832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Formartha", "html_url": "https://github.com/Formartha", "followers_url": "https://api.github.com/users/Formartha/followers", "following_url": "https://api.github.com/users/Formartha/following{/other_user}", "gists_url": "https://api.github.com/users/Formartha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Formartha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Formartha/subscriptions", "organizations_url": "https://api.github.com/users/Formartha/orgs", "repos_url": "https://api.github.com/users/Formartha/repos", "events_url": "https://api.github.com/users/Formartha/events{/privacy}", "received_events_url": "https://api.github.com/users/Formartha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-27T06:24:00Z", "updated_at": "2018-04-27T10:48:11Z", "closed_at": "2018-04-27T10:28:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI would love to have the ability to view suites in the tests I ran (meaning, pytest is scanning an entire directory with test-suites folders).\r\n\r\nI would love to have the ability to cut down the report into test-suite listed view..\r\n\r\nCan it be done?\r\n\r\nin our company we are using the following structure:\r\n\r\n- Prooduct_A;\r\n   - test_suiteA1:\r\n             __init__.py\r\n             test_A1.py\r\n             test_A2.py\r\n    - test_suiteA2:\r\n              __init__.py\r\n              test_A12.py\r\n              test_A22.py\r\n\r\n- Product_B:\r\n   - test_suiteB1:\r\n             __init__.py\r\n             test_B1.py\r\n             test_B2.py\r\n    - test_suiteB2:\r\n              __init__.py\r\n              test_B12.py\r\n              test_B22.py\r\n\r\n   \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/159", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/159/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/159/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/159", "id": 317266514, "node_id": "MDU6SXNzdWUzMTcyNjY1MTQ=", "number": 159, "title": "Is there a way to specify the output for the test results?", "user": {"login": "kolszewska", "id": 17303358, "node_id": "MDQ6VXNlcjE3MzAzMzU4", "avatar_url": "https://avatars3.githubusercontent.com/u/17303358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kolszewska", "html_url": "https://github.com/kolszewska", "followers_url": "https://api.github.com/users/kolszewska/followers", "following_url": "https://api.github.com/users/kolszewska/following{/other_user}", "gists_url": "https://api.github.com/users/kolszewska/gists{/gist_id}", "starred_url": "https://api.github.com/users/kolszewska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kolszewska/subscriptions", "organizations_url": "https://api.github.com/users/kolszewska/orgs", "repos_url": "https://api.github.com/users/kolszewska/repos", "events_url": "https://api.github.com/users/kolszewska/events{/privacy}", "received_events_url": "https://api.github.com/users/kolszewska/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-24T14:59:20Z", "updated_at": "2018-04-24T18:52:48Z", "closed_at": "2018-04-24T18:52:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am generation test result for our tests but I am getting: \r\n`PermissionError: [Errno 13] Permission denied: '/home/ubuntu/report.html'`.\r\n\r\nIt is happening because I am runnign our tests not as an  `ubuntu` user. Is there a way to specify what would be the output folder for the result.html?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/158", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/158/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/158/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/158", "id": 316344300, "node_id": "MDU6SXNzdWUzMTYzNDQzMDA=", "number": 158, "title": "Custom environment table order", "user": {"login": "jacebrowning", "id": 939501, "node_id": "MDQ6VXNlcjkzOTUwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/939501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacebrowning", "html_url": "https://github.com/jacebrowning", "followers_url": "https://api.github.com/users/jacebrowning/followers", "following_url": "https://api.github.com/users/jacebrowning/following{/other_user}", "gists_url": "https://api.github.com/users/jacebrowning/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacebrowning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacebrowning/subscriptions", "organizations_url": "https://api.github.com/users/jacebrowning/orgs", "repos_url": "https://api.github.com/users/jacebrowning/repos", "events_url": "https://api.github.com/users/jacebrowning/events{/privacy}", "received_events_url": "https://api.github.com/users/jacebrowning/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-20T17:06:02Z", "updated_at": "2018-05-22T10:31:54Z", "closed_at": "2018-05-22T10:31:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In Python 3.6+ or with `OrderedDict`, the config metadata can maintain its order to control the layout of the environment table. Would you consider an option to make `sorted()` optional in this line:\r\n\r\nhttps://github.com/pytest-dev/pytest-html/blob/35a610065e50b94db30b068950e50d28f9c3545b/pytest_html/plugin.py#L468", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/157", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/157/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/157/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/157", "id": 314451486, "node_id": "MDU6SXNzdWUzMTQ0NTE0ODY=", "number": 157, "title": "feature request - open html log with closed details", "user": {"login": "Formartha", "id": 8232832, "node_id": "MDQ6VXNlcjgyMzI4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8232832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Formartha", "html_url": "https://github.com/Formartha", "followers_url": "https://api.github.com/users/Formartha/followers", "following_url": "https://api.github.com/users/Formartha/following{/other_user}", "gists_url": "https://api.github.com/users/Formartha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Formartha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Formartha/subscriptions", "organizations_url": "https://api.github.com/users/Formartha/orgs", "repos_url": "https://api.github.com/users/Formartha/repos", "events_url": "https://api.github.com/users/Formartha/events{/privacy}", "received_events_url": "https://api.github.com/users/Formartha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649591, "node_id": "MDU6TGFiZWwxOTk2NDk1OTE=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jacebrowning", "id": 939501, "node_id": "MDQ6VXNlcjkzOTUwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/939501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacebrowning", "html_url": "https://github.com/jacebrowning", "followers_url": "https://api.github.com/users/jacebrowning/followers", "following_url": "https://api.github.com/users/jacebrowning/following{/other_user}", "gists_url": "https://api.github.com/users/jacebrowning/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacebrowning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacebrowning/subscriptions", "organizations_url": "https://api.github.com/users/jacebrowning/orgs", "repos_url": "https://api.github.com/users/jacebrowning/repos", "events_url": "https://api.github.com/users/jacebrowning/events{/privacy}", "received_events_url": "https://api.github.com/users/jacebrowning/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jacebrowning", "id": 939501, "node_id": "MDQ6VXNlcjkzOTUwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/939501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacebrowning", "html_url": "https://github.com/jacebrowning", "followers_url": "https://api.github.com/users/jacebrowning/followers", "following_url": "https://api.github.com/users/jacebrowning/following{/other_user}", "gists_url": "https://api.github.com/users/jacebrowning/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacebrowning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacebrowning/subscriptions", "organizations_url": "https://api.github.com/users/jacebrowning/orgs", "repos_url": "https://api.github.com/users/jacebrowning/repos", "events_url": "https://api.github.com/users/jacebrowning/events{/privacy}", "received_events_url": "https://api.github.com/users/jacebrowning/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-04-15T20:59:50Z", "updated_at": "2018-06-01T09:42:28Z", "closed_at": "2018-06-01T09:42:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\nWe have adopted pytest-html to view our tests.\r\nHowever, when a test fails it open the html file in a way we can't read it (it prints out the entire stacktrace + logs we are writing during the test).\r\n\r\nIt would be appropriate if we can pass down a value to close the html details of a failed/errored test and not opening it by default.\r\n\r\nThanks,\r\nMor\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/155", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/155/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/155/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/155", "id": 309067663, "node_id": "MDU6SXNzdWUzMDkwNjc2NjM=", "number": 155, "title": "CSS fails to load in Safari on Mac", "user": {"login": "sgirolkar", "id": 21227751, "node_id": "MDQ6VXNlcjIxMjI3NzUx", "avatar_url": "https://avatars0.githubusercontent.com/u/21227751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgirolkar", "html_url": "https://github.com/sgirolkar", "followers_url": "https://api.github.com/users/sgirolkar/followers", "following_url": "https://api.github.com/users/sgirolkar/following{/other_user}", "gists_url": "https://api.github.com/users/sgirolkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgirolkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgirolkar/subscriptions", "organizations_url": "https://api.github.com/users/sgirolkar/orgs", "repos_url": "https://api.github.com/users/sgirolkar/repos", "events_url": "https://api.github.com/users/sgirolkar/events{/privacy}", "received_events_url": "https://api.github.com/users/sgirolkar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-27T17:43:22Z", "updated_at": "2018-03-28T14:13:55Z", "closed_at": "2018-03-27T21:40:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this great plugin!\r\n\r\nNoticed this issue when trying to load the testReport on Safari on my MacBook.\r\nI am using Version 11.0.3 (13604.5.6) of safari on macOS High Sierra version 10.13.3.\r\nThe HTML report loads without formatting. The CSS is not loaded.\r\n\r\nI can see this error in the safari console log. \r\n`Refused to load ...../assets/style.css because it does not appear in the style-src directive of the Content Security Policy.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/149", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/149/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/149/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/149", "id": 301771906, "node_id": "MDU6SXNzdWUzMDE3NzE5MDY=", "number": 149, "title": "Custom metadata missing from environment table when all tests are skipped", "user": {"login": "mike-maliska", "id": 22179425, "node_id": "MDQ6VXNlcjIyMTc5NDI1", "avatar_url": "https://avatars2.githubusercontent.com/u/22179425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mike-maliska", "html_url": "https://github.com/mike-maliska", "followers_url": "https://api.github.com/users/mike-maliska/followers", "following_url": "https://api.github.com/users/mike-maliska/following{/other_user}", "gists_url": "https://api.github.com/users/mike-maliska/gists{/gist_id}", "starred_url": "https://api.github.com/users/mike-maliska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mike-maliska/subscriptions", "organizations_url": "https://api.github.com/users/mike-maliska/orgs", "repos_url": "https://api.github.com/users/mike-maliska/repos", "events_url": "https://api.github.com/users/mike-maliska/events{/privacy}", "received_events_url": "https://api.github.com/users/mike-maliska/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649589, "node_id": "MDU6TGFiZWwxOTk2NDk1ODk=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 199649592, "node_id": "MDU6TGFiZWwxOTk2NDk1OTI=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-03-02T13:50:18Z", "updated_at": "2018-06-19T11:18:56Z", "closed_at": "2018-06-19T11:18:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a user skips all tests then the 'Environment' table does not show in the html report.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/148", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/148/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/148/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/148", "id": 296535043, "node_id": "MDU6SXNzdWUyOTY1MzUwNDM=", "number": 148, "title": "Failures (fatal) in py.test are not showing in the HTML report", "user": {"login": "Formartha", "id": 8232832, "node_id": "MDQ6VXNlcjgyMzI4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8232832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Formartha", "html_url": "https://github.com/Formartha", "followers_url": "https://api.github.com/users/Formartha/followers", "following_url": "https://api.github.com/users/Formartha/following{/other_user}", "gists_url": "https://api.github.com/users/Formartha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Formartha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Formartha/subscriptions", "organizations_url": "https://api.github.com/users/Formartha/orgs", "repos_url": "https://api.github.com/users/Formartha/repos", "events_url": "https://api.github.com/users/Formartha/events{/privacy}", "received_events_url": "https://api.github.com/users/Formartha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649589, "node_id": "MDU6TGFiZWwxOTk2NDk1ODk=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "davehunt", "id": 122800, "node_id": "MDQ6VXNlcjEyMjgwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/122800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davehunt", "html_url": "https://github.com/davehunt", "followers_url": "https://api.github.com/users/davehunt/followers", "following_url": "https://api.github.com/users/davehunt/following{/other_user}", "gists_url": "https://api.github.com/users/davehunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/davehunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davehunt/subscriptions", "organizations_url": "https://api.github.com/users/davehunt/orgs", "repos_url": "https://api.github.com/users/davehunt/repos", "events_url": "https://api.github.com/users/davehunt/events{/privacy}", "received_events_url": "https://api.github.com/users/davehunt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davehunt", "id": 122800, "node_id": "MDQ6VXNlcjEyMjgwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/122800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davehunt", "html_url": "https://github.com/davehunt", "followers_url": "https://api.github.com/users/davehunt/followers", "following_url": "https://api.github.com/users/davehunt/following{/other_user}", "gists_url": "https://api.github.com/users/davehunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/davehunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davehunt/subscriptions", "organizations_url": "https://api.github.com/users/davehunt/orgs", "repos_url": "https://api.github.com/users/davehunt/repos", "events_url": "https://api.github.com/users/davehunt/events{/privacy}", "received_events_url": "https://api.github.com/users/davehunt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-02-12T21:44:17Z", "updated_at": "2018-04-05T11:42:35Z", "closed_at": "2018-04-05T10:31:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm using pytest-html and I saw that that there is a critical defect..\r\n\r\nWe are using the  `--continue-on-collection-errors parameter` to avoid breaking the build where there are any compile errors.\r\n\r\nHowever, when looking into the html log, I see that it can't grab the error and present it.\r\nIn the *.xml file that py.test produces, I can see the fail..\r\n\r\nCan you please aid?\r\n\r\n##\r\nStep to reproduce\r\n1. create couple of test_ZZZ.py files with compiling error\r\n2. run `python -m py.test  --continue-on-collection-errors parameter --html=results.html --self-contained-html --junitxml results.xml`\r\n3. Compare the .xm results to the html results.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/147", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/147/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/147/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/147", "id": 296274887, "node_id": "MDU6SXNzdWUyOTYyNzQ4ODc=", "number": 147, "title": "pytest suite split in the report", "user": {"login": "Formartha", "id": 8232832, "node_id": "MDQ6VXNlcjgyMzI4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8232832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Formartha", "html_url": "https://github.com/Formartha", "followers_url": "https://api.github.com/users/Formartha/followers", "following_url": "https://api.github.com/users/Formartha/following{/other_user}", "gists_url": "https://api.github.com/users/Formartha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Formartha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Formartha/subscriptions", "organizations_url": "https://api.github.com/users/Formartha/orgs", "repos_url": "https://api.github.com/users/Formartha/repos", "events_url": "https://api.github.com/users/Formartha/events{/privacy}", "received_events_url": "https://api.github.com/users/Formartha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-12T06:07:37Z", "updated_at": "2018-02-12T19:04:55Z", "closed_at": "2018-02-12T11:36:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "One of the things I'm missing in the report is the ability to split the files into \"suites\".\r\nSuite is a folder which holds 1 or more tests.\r\n\r\nEach iteration, pytest is going and grabbing the specific suites and executes it.\r\nin the HTML report, we can see all the tests, but it's not grouped in that way..\r\n\r\nSo for example, I have around 600 e2e tests and it will be easier to see the report with one more cut.\r\n\r\nThanks,\r\nMor", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/146", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/146/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/146/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/146", "id": 295998363, "node_id": "MDU6SXNzdWUyOTU5OTgzNjM=", "number": 146, "title": "unrecognized arguments: --html=report.htm", "user": {"login": "anand853", "id": 3404193, "node_id": "MDQ6VXNlcjM0MDQxOTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3404193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anand853", "html_url": "https://github.com/anand853", "followers_url": "https://api.github.com/users/anand853/followers", "following_url": "https://api.github.com/users/anand853/following{/other_user}", "gists_url": "https://api.github.com/users/anand853/gists{/gist_id}", "starred_url": "https://api.github.com/users/anand853/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anand853/subscriptions", "organizations_url": "https://api.github.com/users/anand853/orgs", "repos_url": "https://api.github.com/users/anand853/repos", "events_url": "https://api.github.com/users/anand853/events{/privacy}", "received_events_url": "https://api.github.com/users/anand853/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-02-09T20:15:26Z", "updated_at": "2020-05-25T04:35:30Z", "closed_at": "2018-06-19T12:42:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see below error when i tried to run my py test\r\n\r\ncommand tried : pytest test_blank_pages.py --html=report.html\r\n\r\n\r\n```\r\nirb-6672:static cirb_apasunoori$ pytest test_blank_pages.py --html=report.html\r\nusage: pytest [options] [file_or_dir] [file_or_dir] [...]\r\npytest: error: unrecognized arguments: --html=report.html\r\n  inifile: None\r\n  rootdir: /Users/cirb_apasunoori/PycharmProjects/pythonsitecore/static\r\nirb-6672:static cirb_apasunoori$ \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/145", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/145/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/145/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/145", "id": 295506526, "node_id": "MDU6SXNzdWUyOTU1MDY1MjY=", "number": 145, "title": "Teardown log not shown in html", "user": {"login": "PhilippSelenium", "id": 31542906, "node_id": "MDQ6VXNlcjMxNTQyOTA2", "avatar_url": "https://avatars2.githubusercontent.com/u/31542906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhilippSelenium", "html_url": "https://github.com/PhilippSelenium", "followers_url": "https://api.github.com/users/PhilippSelenium/followers", "following_url": "https://api.github.com/users/PhilippSelenium/following{/other_user}", "gists_url": "https://api.github.com/users/PhilippSelenium/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhilippSelenium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhilippSelenium/subscriptions", "organizations_url": "https://api.github.com/users/PhilippSelenium/orgs", "repos_url": "https://api.github.com/users/PhilippSelenium/repos", "events_url": "https://api.github.com/users/PhilippSelenium/events{/privacy}", "received_events_url": "https://api.github.com/users/PhilippSelenium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-08T13:12:02Z", "updated_at": "2018-02-12T12:10:45Z", "closed_at": "2018-02-12T12:10:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "The teardown log is not shown in the html despite being shown on the cmd line.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/144", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/144/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/144/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/144", "id": 286055057, "node_id": "MDU6SXNzdWUyODYwNTUwNTc=", "number": 144, "title": "add custom test results to report", "user": {"login": "ohayak", "id": 10799210, "node_id": "MDQ6VXNlcjEwNzk5MjEw", "avatar_url": "https://avatars2.githubusercontent.com/u/10799210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohayak", "html_url": "https://github.com/ohayak", "followers_url": "https://api.github.com/users/ohayak/followers", "following_url": "https://api.github.com/users/ohayak/following{/other_user}", "gists_url": "https://api.github.com/users/ohayak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohayak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohayak/subscriptions", "organizations_url": "https://api.github.com/users/ohayak/orgs", "repos_url": "https://api.github.com/users/ohayak/repos", "events_url": "https://api.github.com/users/ohayak/events{/privacy}", "received_events_url": "https://api.github.com/users/ohayak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-04T17:18:04Z", "updated_at": "2020-05-14T12:48:25Z", "closed_at": "2018-01-06T01:49:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI have a test function like this:\r\n```\r\ndef test_score():\r\n    # load csv of one column\r\n    x = PrettyTable()\r\n    x.field_names = ['old','new']\r\n    for val in column:\r\n         new_val = some_func(val)\r\n         x.add_row([val, new_val])\r\n         assert val == new_val\r\n   output = x.get_string() # i want to print this in report when test success\r\n```\r\nand many other functions using this pattern, I can't figure out a way to retrieve output value inside pytest_html_results_table_html hook.\r\nDo you have any suggestions ?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/140", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/140/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/140/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/140", "id": 280396863, "node_id": "MDU6SXNzdWUyODAzOTY4NjM=", "number": 140, "title": "delete html file if passed", "user": {"login": "logan2013", "id": 5728244, "node_id": "MDQ6VXNlcjU3MjgyNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5728244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/logan2013", "html_url": "https://github.com/logan2013", "followers_url": "https://api.github.com/users/logan2013/followers", "following_url": "https://api.github.com/users/logan2013/following{/other_user}", "gists_url": "https://api.github.com/users/logan2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/logan2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/logan2013/subscriptions", "organizations_url": "https://api.github.com/users/logan2013/orgs", "repos_url": "https://api.github.com/users/logan2013/repos", "events_url": "https://api.github.com/users/logan2013/events{/privacy}", "received_events_url": "https://api.github.com/users/logan2013/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-08T07:20:53Z", "updated_at": "2018-06-19T12:43:57Z", "closed_at": "2018-06-19T12:43:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have large files to test in custom order. so we sort all tests files, then test one by one use command \"py.test filename\".  The result is one test file have a html result file, it is so hard to check the whole result.\r\n\r\nWe have two ideas, but we don't know how to implement any of them:\r\n\r\n1) generate all result in one html file\r\n2) delete the passed html file\r\n\r\nanyone can help, thank you so much!!!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/139", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/139/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/139/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/139", "id": 279392663, "node_id": "MDU6SXNzdWUyNzkzOTI2NjM=", "number": 139, "title": "pytest-html breaks on pytest 3.3.0", "user": {"login": "henklaak", "id": 3962727, "node_id": "MDQ6VXNlcjM5NjI3Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3962727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henklaak", "html_url": "https://github.com/henklaak", "followers_url": "https://api.github.com/users/henklaak/followers", "following_url": "https://api.github.com/users/henklaak/following{/other_user}", "gists_url": "https://api.github.com/users/henklaak/gists{/gist_id}", "starred_url": "https://api.github.com/users/henklaak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henklaak/subscriptions", "organizations_url": "https://api.github.com/users/henklaak/orgs", "repos_url": "https://api.github.com/users/henklaak/repos", "events_url": "https://api.github.com/users/henklaak/events{/privacy}", "received_events_url": "https://api.github.com/users/henklaak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-05T14:23:13Z", "updated_at": "2017-12-05T17:29:31Z", "closed_at": "2017-12-05T14:30:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n(C:\\Localdata\\anaconda2) C:\\Users\\hlaak\\Documents>conda list pytest*\r\n# packages in environment at C:\\Localdata\\anaconda2:\r\n#\r\npytest                    3.3.0            py27h0d7acca_0\r\npytest-benchmark          3.0.0                    py27_1    conda-forge\r\npytest-cache              1.0                      py27_0\r\npytest-cov                2.5.1            py27h9534814_0\r\npytest-forked             0.2              py27h4ba30fc_0\r\npytest-html               1.16.0                   py27_0    conda-forge\r\npytest-metadata           1.5.0                    py27_0    conda-forge\r\npytest-mpl                0.9                        py_0    conda-forge\r\npytest-qt                 2.3.0                      py_0    conda-forge\r\npytest-runner             3.0              py27h718ee88_0\r\npytest-timeout            1.2.1            py27h7ab0233_0\r\npytest-xdist              1.20.1           py27h4d48a95_0\r\n\r\n(C:\\Localdata\\anaconda2) C:\\Users\\hlaak\\Documents>\r\n```\r\n\r\n```\r\n(C:\\Localdata\\anaconda2) C:\\Users\\hlaak\\Documents>pytest\r\nTraceback (most recent call last):\r\n  File \"C:\\Localdata\\anaconda2\\Scripts\\pytest-script.py\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\_pytest\\config.py\", line 50, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\_pytest\\config.py\", line 160, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args)\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\pluggy\\__init__.py\", line 617, in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\pluggy\\__init__.py\", line 222, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\pluggy\\__init__.py\", line 216, in <lambda>\r\n    firstresult=hook.spec_opts.get('firstresult'),\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\pluggy\\callers.py\", line 196, in _multicall\r\n    gen.send(outcome)\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\_pytest\\helpconfig.py\", line 68, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\pluggy\\callers.py\", line 77, in get_result\r\n    _reraise(*ex)  # noqa\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\pluggy\\callers.py\", line 180, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\_pytest\\config.py\", line 942, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\_pytest\\config.py\", line 1107, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\_pytest\\config.py\", line 1070, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints('pytest11')\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\pluggy\\__init__.py\", line 397, in load_setuptools_entrypoints\r\n    plugin = ep.load()\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2405, in load\r\n    return self.resolve()\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2411, in resolve\r\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\_pytest\\assertion\\rewrite.py\", line 212, in load_module\r\n    py.builtin.exec_(co, mod.__dict__)\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\py\\_builtin.py\", line 221, in exec_\r\n    exec2(obj, globals, locals)\r\n  File \"<string>\", line 7, in exec2\r\n  File \"C:\\Localdata\\anaconda2\\lib\\site-packages\\pytest_metadata\\plugin.py\", line 8, in <module>\r\n    import _pytest._pluggy as pluggy\r\nImportError: No module named _pluggy\r\n```\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/138", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/138/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/138/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/138", "id": 278741910, "node_id": "MDU6SXNzdWUyNzg3NDE5MTA=", "number": 138, "title": "how to support chinese?", "user": {"login": "EtheriousNatsu", "id": 12187260, "node_id": "MDQ6VXNlcjEyMTg3MjYw", "avatar_url": "https://avatars1.githubusercontent.com/u/12187260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EtheriousNatsu", "html_url": "https://github.com/EtheriousNatsu", "followers_url": "https://api.github.com/users/EtheriousNatsu/followers", "following_url": "https://api.github.com/users/EtheriousNatsu/following{/other_user}", "gists_url": "https://api.github.com/users/EtheriousNatsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/EtheriousNatsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EtheriousNatsu/subscriptions", "organizations_url": "https://api.github.com/users/EtheriousNatsu/orgs", "repos_url": "https://api.github.com/users/EtheriousNatsu/repos", "events_url": "https://api.github.com/users/EtheriousNatsu/events{/privacy}", "received_events_url": "https://api.github.com/users/EtheriousNatsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-03T03:56:50Z", "updated_at": "2017-12-04T12:17:50Z", "closed_at": "2017-12-04T12:17:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/12187260/33522193-0722cbd2-d821-11e7-9528-a8c845710b7f.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/137", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/137/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/137/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/137", "id": 277282367, "node_id": "MDU6SXNzdWUyNzcyODIzNjc=", "number": 137, "title": "Installing pytest-html corrupting existing pytest.", "user": {"login": "jayant2014", "id": 12426734, "node_id": "MDQ6VXNlcjEyNDI2NzM0", "avatar_url": "https://avatars1.githubusercontent.com/u/12426734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayant2014", "html_url": "https://github.com/jayant2014", "followers_url": "https://api.github.com/users/jayant2014/followers", "following_url": "https://api.github.com/users/jayant2014/following{/other_user}", "gists_url": "https://api.github.com/users/jayant2014/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayant2014/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayant2014/subscriptions", "organizations_url": "https://api.github.com/users/jayant2014/orgs", "repos_url": "https://api.github.com/users/jayant2014/repos", "events_url": "https://api.github.com/users/jayant2014/events{/privacy}", "received_events_url": "https://api.github.com/users/jayant2014/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-28T07:19:37Z", "updated_at": "2017-11-28T09:05:14Z", "closed_at": "2017-11-28T08:25:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had pytest module already installed. Then I installed pytest-html using pip. Then I could see pytest is corrupted. This used to work earlier.\r\n\r\n```\r\n# pytest --help\r\nusage: pytest [options] [file_or_dir] [file_or_dir] [...]\r\n\r\n# pip install pytest-html\r\nCollecting pytest-html\r\n  Using cached pytest_html-1.16.0-py2.py3-none-any.whl\r\nCollecting pytest-metadata (from pytest-html)\r\n  Using cached pytest_metadata-1.5.0-py2.py3-none-any.whl\r\nRequirement already satisfied: pytest>=3.0 in /usr/lib/python2.7/site-packages (from pytest-html)\r\nRequirement already satisfied: pluggy<0.7,>=0.5 in /usr/lib/python2.7/site-packages (from pytest>=3.0->pytest-html)\r\nRequirement already satisfied: attrs>=17.2.0 in /usr/lib/python2.7/site-packages (from pytest>=3.0->pytest-html)\r\nRequirement already satisfied: funcsigs; python_version < \"3.0\" in /usr/lib/python2.7/site-packages (from pytest>=3.0->pytest-html)\r\nRequirement already satisfied: py>=1.5.0 in /usr/lib/python2.7/site-packages (from pytest>=3.0->pytest-html)\r\nRequirement already satisfied: setuptools in /usr/lib/python2.7/site-packages (from pytest>=3.0->pytest-html)\r\nRequirement already satisfied: six>=1.10.0 in /usr/lib/python2.7/site-packages (from pytest>=3.0->pytest-html)\r\nInstalling collected packages: pytest-metadata, pytest-html\r\nSuccessfully installed pytest-html-1.16.0 pytest-metadata-1.5.0\r\n\r\n# pytest --help\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/pytest\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/lib/python2.7/site-packages/_pytest/config.py\", line 50, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/usr/lib/python2.7/site-packages/_pytest/config.py\", line 160, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args)\r\n  File \"/usr/lib/python2.7/site-packages/pluggy/__init__.py\", line 617, in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/pluggy/__init__.py\", line 222, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/pluggy/__init__.py\", line 216, in <lambda>\r\n    firstresult=hook.spec_opts.get('firstresult'),\r\n  File \"/usr/lib/python2.7/site-packages/pluggy/callers.py\", line 196, in _multicall\r\n    gen.send(outcome)\r\n  File \"/usr/lib/python2.7/site-packages/_pytest/helpconfig.py\", line 68, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/usr/lib/python2.7/site-packages/pluggy/callers.py\", line 77, in get_result\r\n    _reraise(*ex)  # noqa\r\n  File \"/usr/lib/python2.7/site-packages/pluggy/callers.py\", line 180, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/usr/lib/python2.7/site-packages/_pytest/config.py\", line 942, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/usr/lib/python2.7/site-packages/_pytest/config.py\", line 1107, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/usr/lib/python2.7/site-packages/_pytest/config.py\", line 1070, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints('pytest11')\r\n  File \"/usr/lib/python2.7/site-packages/pluggy/__init__.py\", line 397, in load_setuptools_entrypoints\r\n    plugin = ep.load()\r\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2405, in load\r\n    return self.resolve()\r\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2411, in resolve\r\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n  File \"/usr/lib/python2.7/site-packages/_pytest/assertion/rewrite.py\", line 212, in load_module\r\n    py.builtin.exec_(co, mod.__dict__)\r\n  File \"/usr/lib/python2.7/site-packages/py/_builtin.py\", line 221, in exec_\r\n    exec2(obj, globals, locals)\r\n  File \"<string>\", line 7, in exec2\r\n  File \"/usr/lib/python2.7/site-packages/pytest_metadata/plugin.py\", line 8, in <module>\r\n    import _pytest._pluggy as pluggy\r\nImportError: No module named _pluggy\r\n```\r\n\r\nI could reintsall pytest by clearing the corrupted one, but never use pytest-html after this.\r\n\r\nFollowing are version info.\r\n\r\n```\r\n# python --version\r\nPython 2.7.5\r\n# pytest --version\r\nThis is pytest version 3.3.0, imported from /usr/lib/python2.7/site-packages/pytest.pyc_\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/135", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/135/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/135/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/135", "id": 269412573, "node_id": "MDU6SXNzdWUyNjk0MTI1NzM=", "number": 135, "title": "Adding log to HTML report when show details", "user": {"login": "nicoarg", "id": 22206929, "node_id": "MDQ6VXNlcjIyMjA2OTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/22206929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoarg", "html_url": "https://github.com/nicoarg", "followers_url": "https://api.github.com/users/nicoarg/followers", "following_url": "https://api.github.com/users/nicoarg/following{/other_user}", "gists_url": "https://api.github.com/users/nicoarg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoarg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoarg/subscriptions", "organizations_url": "https://api.github.com/users/nicoarg/orgs", "repos_url": "https://api.github.com/users/nicoarg/repos", "events_url": "https://api.github.com/users/nicoarg/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoarg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-29T16:21:44Z", "updated_at": "2017-11-06T09:52:59Z", "closed_at": "2017-11-06T09:52:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there, I use these kind of test with pytest and the html pluging:\r\n\r\n```\r\nimport logging\r\nlog = logging.getLogger(__name__)\r\n\r\ndef test_random(app_config):\r\n    log.info(\"Random test\")\r\n    pass\r\n```\r\nIs there a way to get the output of log.info in the report? Even when the test is passed? I only get output when the test fails. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/134", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/134/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/134/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/134", "id": 263150391, "node_id": "MDU6SXNzdWUyNjMxNTAzOTE=", "number": 134, "title": "How to store more than one report in Jenkins?", "user": {"login": "ainomc", "id": 3087653, "node_id": "MDQ6VXNlcjMwODc2NTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3087653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ainomc", "html_url": "https://github.com/ainomc", "followers_url": "https://api.github.com/users/ainomc/followers", "following_url": "https://api.github.com/users/ainomc/following{/other_user}", "gists_url": "https://api.github.com/users/ainomc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ainomc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ainomc/subscriptions", "organizations_url": "https://api.github.com/users/ainomc/orgs", "repos_url": "https://api.github.com/users/ainomc/repos", "events_url": "https://api.github.com/users/ainomc/events{/privacy}", "received_events_url": "https://api.github.com/users/ainomc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649594, "node_id": "MDU6TGFiZWwxOTk2NDk1OTQ=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-05T14:39:18Z", "updated_at": "2017-10-23T17:04:04Z", "closed_at": "2017-10-23T17:04:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can I have more than one report per job in Jenkins?\r\nI can generate current date and add it to name of report. But Jenkins use workspace for reports and rewrite it.\r\n\r\nIs any way to store more than one report in Jenkins?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/133", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/133/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/133/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/133", "id": 256944691, "node_id": "MDU6SXNzdWUyNTY5NDQ2OTE=", "number": 133, "title": "Improved list value in metadata table", "user": {"login": "rasmuspeders1", "id": 1898960, "node_id": "MDQ6VXNlcjE4OTg5NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1898960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasmuspeders1", "html_url": "https://github.com/rasmuspeders1", "followers_url": "https://api.github.com/users/rasmuspeders1/followers", "following_url": "https://api.github.com/users/rasmuspeders1/following{/other_user}", "gists_url": "https://api.github.com/users/rasmuspeders1/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasmuspeders1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasmuspeders1/subscriptions", "organizations_url": "https://api.github.com/users/rasmuspeders1/orgs", "repos_url": "https://api.github.com/users/rasmuspeders1/repos", "events_url": "https://api.github.com/users/rasmuspeders1/events{/privacy}", "received_events_url": "https://api.github.com/users/rasmuspeders1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-12T07:31:16Z", "updated_at": "2017-10-16T10:47:06Z", "closed_at": "2017-10-16T10:47:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nI have created a pull request with a proposal for a small enhancement.\r\nmetadata values which are lists (or list like)  of strings are currently just presented as one long concatenated string of all members in the list.\r\nMy proposed fix simply creates a comma separated string of with the list members.\r\n\r\npull request here: https://github.com/pytest-dev/pytest-html/pull/132", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/130", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/130/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/130/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/130", "id": 255236238, "node_id": "MDU6SXNzdWUyNTUyMzYyMzg=", "number": 130, "title": "Text on successful execution", "user": {"login": "lcofre", "id": 1630156, "node_id": "MDQ6VXNlcjE2MzAxNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1630156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcofre", "html_url": "https://github.com/lcofre", "followers_url": "https://api.github.com/users/lcofre/followers", "following_url": "https://api.github.com/users/lcofre/following{/other_user}", "gists_url": "https://api.github.com/users/lcofre/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcofre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcofre/subscriptions", "organizations_url": "https://api.github.com/users/lcofre/orgs", "repos_url": "https://api.github.com/users/lcofre/repos", "events_url": "https://api.github.com/users/lcofre/events{/privacy}", "received_events_url": "https://api.github.com/users/lcofre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-05T10:49:21Z", "updated_at": "2017-09-05T12:39:51Z", "closed_at": "2017-09-05T12:39:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Awesome plugin, thanks for it!\r\n\r\nI have a question: How can I show some text when the execution is successful?\r\nmy tests print() details and make asserts, but the report shows \"No log output captured\".\r\n\r\nThanks in advance for your help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/128", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/128/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/128/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/128", "id": 253434328, "node_id": "MDU6SXNzdWUyNTM0MzQzMjg=", "number": 128, "title": "Chrome blocking data uri", "user": {"login": "micheletest", "id": 1161578, "node_id": "MDQ6VXNlcjExNjE1Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1161578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micheletest", "html_url": "https://github.com/micheletest", "followers_url": "https://api.github.com/users/micheletest/followers", "following_url": "https://api.github.com/users/micheletest/following{/other_user}", "gists_url": "https://api.github.com/users/micheletest/gists{/gist_id}", "starred_url": "https://api.github.com/users/micheletest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micheletest/subscriptions", "organizations_url": "https://api.github.com/users/micheletest/orgs", "repos_url": "https://api.github.com/users/micheletest/repos", "events_url": "https://api.github.com/users/micheletest/events{/privacy}", "received_events_url": "https://api.github.com/users/micheletest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-28T19:42:57Z", "updated_at": "2018-04-16T09:43:05Z", "closed_at": "2018-04-16T09:43:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running Chrome 60 and cannot click to open any of the Links (Browser Log, Server Log, etc.) in my self-contained pytest-html report. This seems to be due to Chrome blocking top frame navigation to data urls.  See [here](https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/GbVcuwg_QjM) for their developer discussion on this. The console error is ```Not allowed to navigate top frame to data URL:``` Workaround is to use firefox, or right click to open the URL in a new tab.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/125", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/125/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/125/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/125", "id": 247511172, "node_id": "MDU6SXNzdWUyNDc1MTExNzI=", "number": 125, "title": "Tests failing because rerun plugin might not be present", "user": {"login": "g-bon", "id": 1524112, "node_id": "MDQ6VXNlcjE1MjQxMTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1524112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g-bon", "html_url": "https://github.com/g-bon", "followers_url": "https://api.github.com/users/g-bon/followers", "following_url": "https://api.github.com/users/g-bon/following{/other_user}", "gists_url": "https://api.github.com/users/g-bon/gists{/gist_id}", "starred_url": "https://api.github.com/users/g-bon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g-bon/subscriptions", "organizations_url": "https://api.github.com/users/g-bon/orgs", "repos_url": "https://api.github.com/users/g-bon/repos", "events_url": "https://api.github.com/users/g-bon/events{/privacy}", "received_events_url": "https://api.github.com/users/g-bon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-02T20:24:58Z", "updated_at": "2017-08-03T14:16:34Z", "closed_at": "2017-08-03T14:16:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "[assert_results_by_outcome](https://github.com/pytest-dev/pytest-html/blob/master/testing/test_pytest_html.py#L65) makes all tests that use it fail.\r\n\r\nThe assertion is made false by the absence of rerun tests in the report when the plugin is missing. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/124", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/124/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/124/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/124", "id": 241975102, "node_id": "MDU6SXNzdWUyNDE5NzUxMDI=", "number": 124, "title": "path too long on windows when saving report with screenshots", "user": {"login": "ngavrish", "id": 2298415, "node_id": "MDQ6VXNlcjIyOTg0MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2298415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngavrish", "html_url": "https://github.com/ngavrish", "followers_url": "https://api.github.com/users/ngavrish/followers", "following_url": "https://api.github.com/users/ngavrish/following{/other_user}", "gists_url": "https://api.github.com/users/ngavrish/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngavrish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngavrish/subscriptions", "organizations_url": "https://api.github.com/users/ngavrish/orgs", "repos_url": "https://api.github.com/users/ngavrish/repos", "events_url": "https://api.github.com/users/ngavrish/events{/privacy}", "received_events_url": "https://api.github.com/users/ngavrish/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649589, "node_id": "MDU6TGFiZWwxOTk2NDk1ODk=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 199649592, "node_id": "MDU6TGFiZWwxOTk2NDk1OTI=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-11T08:59:33Z", "updated_at": "2018-01-04T13:20:14Z", "closed_at": "2018-01-04T12:48:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have following code to generate screenshots in reports\r\n```\r\n        if xfail or report.failed:\r\n            **extra.append(pytest_html.extras.image(pytest.driver.get_screenshot_as_base64(), ''))**\r\n            extra.append(pytest_html.extras.html('<div><h2 style=\"color: red; \">{}</h2></div>'.format(test_name)))\r\n        elif report.passed:\r\n            extra.append(pytest_html.extras.html(\r\n                '<div><h2 style=\"color: black; text-decoration: underline\">{}</h2></div>'.format(test_name)))\r\n        pytest_html.extras.html('<div style=\"color: black; margin: 10px;\">'.format(test_name))\r\n        for step in test_steps:\r\n            extra.append(pytest_html.extras.html('<p style=\"margin: 5px;\">{}</p>'.format(step)))\r\n        pytest_html.extras.html('</div>')\r\n        report.extra = extra\r\n```\r\n\r\nAnd you have line in plugin.py where you get file content and validate if its path. And in my case file content contains binary representation of image. When windows is trying to validate this long path, it fails into INTERNAL ERROR.\r\n\r\nINTERNALERROR>   File \"c:\\python36\\lib\\site-packages\\pytest_html\\plugin.py\", line 112, in __init__\r\nINTERNALERROR>     self.append_extra_html(extra, extra_index, test_index)\r\nINTERNALERROR>   File \"c:\\python36\\lib\\site-packages\\pytest_html\\plugin.py\", line 164, in append_extra_html\r\nINTERNALERROR>     os.path.isfile(content):\r\nINTERNALERROR>   File \"c:\\python36\\lib\\genericpath.py\", line 30, in isfile\r\nINTERNALERROR>     st = os.stat(path)\r\nINTERNALERROR> ValueError: stat: path too long for Windows\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/122", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/122/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/122/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/122", "id": 234895124, "node_id": "MDU6SXNzdWUyMzQ4OTUxMjQ=", "number": 122, "title": "New 1.15.0 version gives AttributeError: 'TestReport' object has no attribute 'longreprtext'", "user": {"login": "silvana-i", "id": 28969061, "node_id": "MDQ6VXNlcjI4OTY5MDYx", "avatar_url": "https://avatars0.githubusercontent.com/u/28969061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silvana-i", "html_url": "https://github.com/silvana-i", "followers_url": "https://api.github.com/users/silvana-i/followers", "following_url": "https://api.github.com/users/silvana-i/following{/other_user}", "gists_url": "https://api.github.com/users/silvana-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/silvana-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silvana-i/subscriptions", "organizations_url": "https://api.github.com/users/silvana-i/orgs", "repos_url": "https://api.github.com/users/silvana-i/repos", "events_url": "https://api.github.com/users/silvana-i/events{/privacy}", "received_events_url": "https://api.github.com/users/silvana-i/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-09T17:45:46Z", "updated_at": "2017-06-12T15:35:01Z", "closed_at": "2017-06-12T15:29:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "With latest version of pytest-html 1.15.0 we are seeing this error:\r\n`INTERNALERROR> AttributeError: 'TestReport' object has no attribute 'longreprtext'`\r\nSame issue is not visible with the previous 1.14.2.\r\n\r\nWe use it in its most straight forward way. Calling it from py.test with `pytest --html=report.html`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/116", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/116/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/116/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/116", "id": 229403058, "node_id": "MDU6SXNzdWUyMjk0MDMwNTg=", "number": 116, "title": "Change color for text in HTML report", "user": {"login": "APshenkin", "id": 14344430, "node_id": "MDQ6VXNlcjE0MzQ0NDMw", "avatar_url": "https://avatars1.githubusercontent.com/u/14344430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/APshenkin", "html_url": "https://github.com/APshenkin", "followers_url": "https://api.github.com/users/APshenkin/followers", "following_url": "https://api.github.com/users/APshenkin/following{/other_user}", "gists_url": "https://api.github.com/users/APshenkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/APshenkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/APshenkin/subscriptions", "organizations_url": "https://api.github.com/users/APshenkin/orgs", "repos_url": "https://api.github.com/users/APshenkin/repos", "events_url": "https://api.github.com/users/APshenkin/events{/privacy}", "received_events_url": "https://api.github.com/users/APshenkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-05-17T15:54:57Z", "updated_at": "2018-04-05T13:25:12Z", "closed_at": "2018-04-05T13:25:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nFirst, thank you for this plugin!\r\n\r\nI want to recommend to change font color in report because read grey text on white background is \"hard\" for eyes. Also if we can increase font size it would be great!\r\n\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/114", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/114/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/114/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/114", "id": 228127088, "node_id": "MDU6SXNzdWUyMjgxMjcwODg=", "number": 114, "title": "INTERNALERROR> UnicodeEncodeError: 'ascii' codec can't encode characters in position 496-497: ordinal not in range(128)", "user": {"login": "tomga", "id": 5447177, "node_id": "MDQ6VXNlcjU0NDcxNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5447177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomga", "html_url": "https://github.com/tomga", "followers_url": "https://api.github.com/users/tomga/followers", "following_url": "https://api.github.com/users/tomga/following{/other_user}", "gists_url": "https://api.github.com/users/tomga/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomga/subscriptions", "organizations_url": "https://api.github.com/users/tomga/orgs", "repos_url": "https://api.github.com/users/tomga/repos", "events_url": "https://api.github.com/users/tomga/events{/privacy}", "received_events_url": "https://api.github.com/users/tomga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-05-11T21:30:44Z", "updated_at": "2017-06-09T15:14:54Z", "closed_at": "2017-06-09T15:14:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On some data exception from subject occurs. Part of backtrace is following:\r\n```\r\nINTERNALERROR>   File \"/usr/local/pyenv/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/pyenv/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/usr/local/pyenv/local/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/pyenv/local/lib/python2.7/site-packages/pytest_html/plugin.py\", line 462, in pytest_runtest_logreport\r\nINTERNALERROR>     self.append_failed(report)\r\nINTERNALERROR>   File \"/usr/local/pyenv/local/lib/python2.7/site-packages/pytest_html/plugin.py\", line 274, in append_failed\r\nINTERNALERROR>     self._appendrow('Failed', report)\r\nINTERNALERROR>   File \"/usr/local/pyenv/local/lib/python2.7/site-packages/pytest_html/plugin.py\", line 246, in _appendrow\r\nINTERNALERROR>     result = self.TestResult(outcome, report, self.logfile, self.config)\r\nINTERNALERROR>   File \"/usr/local/pyenv/local/lib/python2.7/site-packages/pytest_html/plugin.py\", line 113, in __init__\r\nINTERNALERROR>     self.append_log_html(report, self.additional_html)\r\nINTERNALERROR>   File \"/usr/local/pyenv/local/lib/python2.7/site-packages/pytest_html/plugin.py\", line 216, in append_log_html\r\nINTERNALERROR>     for line in str(report.longrepr).splitlines():\r\nINTERNALERROR> UnicodeEncodeError: 'ascii' codec can't encode characters in position 496-497: ordinal not in range(128)\r\n```\r\n\r\nI've managed to fix (or maybe just workaround) this issue locally with following diff:\r\n```\r\ndiff --git a/pytest_html/plugin.py b/pytest_html/plugin.py\r\nindex afc6275..95814d7 100644\r\n--- a/pytest_html/plugin.py\r\n+++ b/pytest_html/plugin.py\r\n@@ -213,7 +213,7 @@ class HTMLReport(object):\r\n         def append_log_html(self, report, additional_html):\r\n             log = html.div(class_='log')\r\n             if report.longrepr:\r\n-                for line in str(report.longrepr).splitlines():\r\n+                for line in unicode(report.longrepr).encode('utf-8').splitlines():\r\n                     if not PY3:\r\n                         line = line.decode('utf-8')\r\n                     separator = line.startswith('_ ' * 10)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/113", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/113/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/113/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/113", "id": 227709531, "node_id": "MDU6SXNzdWUyMjc3MDk1MzE=", "number": 113, "title": "Add ability to create custom assets", "user": {"login": "liiight", "id": 4374581, "node_id": "MDQ6VXNlcjQzNzQ1ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4374581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liiight", "html_url": "https://github.com/liiight", "followers_url": "https://api.github.com/users/liiight/followers", "following_url": "https://api.github.com/users/liiight/following{/other_user}", "gists_url": "https://api.github.com/users/liiight/gists{/gist_id}", "starred_url": "https://api.github.com/users/liiight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liiight/subscriptions", "organizations_url": "https://api.github.com/users/liiight/orgs", "repos_url": "https://api.github.com/users/liiight/repos", "events_url": "https://api.github.com/users/liiight/events{/privacy}", "received_events_url": "https://api.github.com/users/liiight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-10T14:58:35Z", "updated_at": "2017-05-15T11:19:36Z", "closed_at": "2017-05-15T11:12:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If such ability already exist and I missed it, I apologize.\r\nI have some api calls using `requests` module. I want to add a CURL format of the request when the test fails.\r\nI use the `metadata` plugin to inject my string:\r\n```python\r\nreq = e.response.request\r\nmetadata['curl'] = request_to_curl(req)\r\n```\r\nThen I'm overriding the table as such:\r\n```python\r\n@pytest.mark.hookwrapper\r\ndef pytest_runtest_makereport(item, call):\r\n    pytest_html = item.config.pluginmanager.getplugin('html')\r\n    outcome = yield\r\n    report = outcome.get_result()\r\n    extra = getattr(report, 'extra', [])\r\n    if report.when == 'call':\r\n        xfail = hasattr(report, 'wasxfail')\r\n        if (report.skipped and xfail) or (report.failed and not xfail):\r\n            # only add curl on failure\r\n            if item.config._metadata.get('curl'):\r\n                report.curl = pytest_html.extras.text(item.config._metadata.get('curl'))\r\n        report.extra = extra\r\n\r\n\r\n@pytest.mark.optionalhook\r\ndef pytest_html_results_table_header(cells):\r\n    cells.insert(3, html.th('CURL'))\r\n    cells.pop()\r\n\r\n\r\n@pytest.mark.optionalhook\r\ndef pytest_html_results_table_row(report, cells):\r\n    cells.insert(3, html.td(report.curl, class_='col-links'))\r\n    cells.pop()\r\n```\r\nThis return the unprepared asset, which I would like to run using [create_asset](https://github.com/pytest-dev/pytest-html/blob/master/pytest_html/plugin.py#L137).\r\nObviously I can duplicate its code, but if there was a way to do this natively, it would be great.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/109", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/109/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/109/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/109", "id": 213921875, "node_id": "MDU6SXNzdWUyMTM5MjE4NzU=", "number": 109, "title": "How to add additional content to Summary section?", "user": {"login": "shreyashah", "id": 1056793, "node_id": "MDQ6VXNlcjEwNTY3OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1056793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shreyashah", "html_url": "https://github.com/shreyashah", "followers_url": "https://api.github.com/users/shreyashah/followers", "following_url": "https://api.github.com/users/shreyashah/following{/other_user}", "gists_url": "https://api.github.com/users/shreyashah/gists{/gist_id}", "starred_url": "https://api.github.com/users/shreyashah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shreyashah/subscriptions", "organizations_url": "https://api.github.com/users/shreyashah/orgs", "repos_url": "https://api.github.com/users/shreyashah/repos", "events_url": "https://api.github.com/users/shreyashah/events{/privacy}", "received_events_url": "https://api.github.com/users/shreyashah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-13T22:59:46Z", "updated_at": "2020-06-11T23:24:25Z", "closed_at": "2018-04-05T10:31:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to add a Score value to the summary section in html report. There is a mention about how to add additional content to Environment section but not for summary. Please guide me on this.\r\n\r\nI am developing a feature to score the test module based on the weightage given to test cases and applying mathematics to obtain the final score for the entire module. I need to print this score either in summary section or before the results  table.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/106", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/106/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/106/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/106", "id": 211744193, "node_id": "MDU6SXNzdWUyMTE3NDQxOTM=", "number": 106, "title": "encoding error", "user": {"login": "micheletest", "id": 1161578, "node_id": "MDQ6VXNlcjExNjE1Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1161578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micheletest", "html_url": "https://github.com/micheletest", "followers_url": "https://api.github.com/users/micheletest/followers", "following_url": "https://api.github.com/users/micheletest/following{/other_user}", "gists_url": "https://api.github.com/users/micheletest/gists{/gist_id}", "starred_url": "https://api.github.com/users/micheletest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micheletest/subscriptions", "organizations_url": "https://api.github.com/users/micheletest/orgs", "repos_url": "https://api.github.com/users/micheletest/repos", "events_url": "https://api.github.com/users/micheletest/events{/privacy}", "received_events_url": "https://api.github.com/users/micheletest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649589, "node_id": "MDU6TGFiZWwxOTk2NDk1ODk=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-03T16:58:22Z", "updated_at": "2019-07-23T10:08:25Z", "closed_at": "2017-03-10T12:36:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just tried to update to the latest pytest html and I'm getting an encoding error. The line referred to isn't encoded that I see, so perhaps that needs an update. I can try to look more into this later.\r\n\r\n```\r\nmetadata: {'Python': '2.7.13', 'Driver': 'Remote', 'Capabilities': {'browserName': 'chrome', 'screenResolution': '1440x900'}, 'Server': 'http://selenium-server:4444', 'Base URL': 'http://local.better.com:3000', 'Platform': 'Linux-4.4.23-31.54.amzn1.x86_64-x86_64-with', 'Plugins': {'bdd': '2.18.1', 'variables': '1.5.1', 'selenium': '1.9.1', 'rerunfailures': '2.1.0', 'html': '1.14.1', 'timeout': '1.2.0', 'base-url': '1.3.0', 'metadata': '1.3.0'}, 'Packages': {'py': '1.4.32', 'pytest': '3.0.6', 'pluggy': '0.4.0'}}\r\nrootdir:  inifile: pytest.ini\r\nplugins: variables-1.5.1, timeout-1.2.0, selenium-1.9.1, rerunfailures-2.1.0, metadata-1.3.0, html-1.14.1, bdd-2.18.1, base-url-1.3.0\r\ntimeout: 480.0s method: signal\r\ncollected 2 items \r\n \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/main.py\", line 98, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/main.py\", line 133, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/main.py\", line 154, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 613, in execute\r\nINTERNALERROR>     return _wrapped_call(hook_impl.function(*args), self.execute)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 254, in _wrapped_call\r\nINTERNALERROR>     return call_outcome.get_result()\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 280, in get_result\r\nINTERNALERROR>     _reraise(*ex)  # noqa\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 265, in __init__\r\nINTERNALERROR>     self.result = func()\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 613, in execute\r\nINTERNALERROR>     return _wrapped_call(hook_impl.function(*args), self.execute)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 254, in _wrapped_call\r\nINTERNALERROR>     return call_outcome.get_result()\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 280, in get_result\r\nINTERNALERROR>     _reraise(*ex)  # noqa\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 265, in __init__\r\nINTERNALERROR>     self.result = func()\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/pytest_rerunfailures.py\", line 96, in pytest_runtest_protocol\r\nINTERNALERROR>     item.ihook.pytest_runtest_logreport(report=report)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/pytest_html/plugin.py\", line 469, in pytest_runtest_logreport\r\nINTERNALERROR>     self.append_other(report)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/pytest_html/plugin.py\", line 293, in append_other\r\nINTERNALERROR>     self._appendrow('Rerun', report)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/pytest_html/plugin.py\", line 249, in _appendrow\r\nINTERNALERROR>     result = self.TestResult(outcome, report, self.logfile, self.config)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/pytest_html/plugin.py\", line 114, in __init__\r\nINTERNALERROR>     self.append_extra_html(extra, extra_index, test_index)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/pytest_html/plugin.py\", line 199, in append_extra_html\r\nINTERNALERROR>     href = data_uri(content)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/pytest_html/plugin.py\", line 77, in data_uri\r\nINTERNALERROR>     data = b64encode(content)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/base64.py\", line 54, in b64encode\r\nINTERNALERROR>     encoded = binascii.b2a_base64(s)[:-1]\r\nINTERNALERROR> UnicodeEncodeError: 'ascii' codec can't encode character u'\\u2019' in position 56830: ordinal not in range(128)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/105", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/105/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/105/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/105", "id": 210452824, "node_id": "MDU6SXNzdWUyMTA0NTI4MjQ=", "number": 105, "title": "Ability to skip the captured log of successful tests", "user": {"login": "sylvinus", "id": 410452, "node_id": "MDQ6VXNlcjQxMDQ1Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/410452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylvinus", "html_url": "https://github.com/sylvinus", "followers_url": "https://api.github.com/users/sylvinus/followers", "following_url": "https://api.github.com/users/sylvinus/following{/other_user}", "gists_url": "https://api.github.com/users/sylvinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylvinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylvinus/subscriptions", "organizations_url": "https://api.github.com/users/sylvinus/orgs", "repos_url": "https://api.github.com/users/sylvinus/repos", "events_url": "https://api.github.com/users/sylvinus/events{/privacy}", "received_events_url": "https://api.github.com/users/sylvinus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-02-27T11:05:24Z", "updated_at": "2017-02-27T15:39:18Z", "closed_at": "2017-02-27T15:39:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWe have a few thousand tests and the generated HTML file weights close to 100Mo, basically unreadable in a browser.\r\n\r\nI've made this patch to make the file much smaller, because typically only the captured output of failures is interesting:\r\nhttps://github.com/pricingassistant/pytest-html/commit/0df1e0e249cfe322592e87a3868342a401d64b1e\r\n\r\nCould this be merged behind a new configuration flag?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/103", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/103/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/103/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/103", "id": 210019328, "node_id": "MDU6SXNzdWUyMTAwMTkzMjg=", "number": 103, "title": "Order/Sorting of tests in the reports", "user": {"login": "jo-as", "id": 22857999, "node_id": "MDQ6VXNlcjIyODU3OTk5", "avatar_url": "https://avatars2.githubusercontent.com/u/22857999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jo-as", "html_url": "https://github.com/jo-as", "followers_url": "https://api.github.com/users/jo-as/followers", "following_url": "https://api.github.com/users/jo-as/following{/other_user}", "gists_url": "https://api.github.com/users/jo-as/gists{/gist_id}", "starred_url": "https://api.github.com/users/jo-as/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jo-as/subscriptions", "organizations_url": "https://api.github.com/users/jo-as/orgs", "repos_url": "https://api.github.com/users/jo-as/repos", "events_url": "https://api.github.com/users/jo-as/events{/privacy}", "received_events_url": "https://api.github.com/users/jo-as/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-24T11:00:46Z", "updated_at": "2017-02-27T15:39:29Z", "closed_at": "2017-02-27T15:39:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nis there any way keep to original order of the tests. Currently I can sort for \"Result\", \"Test\" or \"Duration\". Unfortunately I do not have any unsorted order.. (so in the order were the test was executed).\r\n\r\nThe reason for that: \r\nwe are performing many tests with fixture-parametrization (eg. 20 different tests on 100 test-cases), when several tests fails, it is quite difficult to analyze when we have only the ordered representation, but not the unsorted representation (in the sequence, where the tests were performed).\r\n\r\nThanks,\r\nBest regards,\r\nJosef\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/100", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/100/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/100/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/100", "id": 200866385, "node_id": "MDU6SXNzdWUyMDA4NjYzODU=", "number": 100, "title": "pytest-html isn\u2019t escaping HTML special characters in logs", "user": {"login": "andrewshadura", "id": 309253, "node_id": "MDQ6VXNlcjMwOTI1Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/309253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewshadura", "html_url": "https://github.com/andrewshadura", "followers_url": "https://api.github.com/users/andrewshadura/followers", "following_url": "https://api.github.com/users/andrewshadura/following{/other_user}", "gists_url": "https://api.github.com/users/andrewshadura/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewshadura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewshadura/subscriptions", "organizations_url": "https://api.github.com/users/andrewshadura/orgs", "repos_url": "https://api.github.com/users/andrewshadura/repos", "events_url": "https://api.github.com/users/andrewshadura/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewshadura/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-15T12:37:58Z", "updated_at": "2017-02-24T12:55:50Z", "closed_at": "2017-02-24T12:55:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I\u2019m seeing things like:\r\n\r\n    auth.py                    518 DEBUG    Auth User is now <authuser('id:1[default] auth:true')>\r\n\r\nin the HTML sources of the generated reports. That\u2019s apparently due to a [missing escape call](/pytest-dev/pytest-html/commit/f84482bc6a28a547602b5f4e07ffc9044ee427b0#commitcomment-20481987).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/98", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/98/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/98/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/98", "id": 198486131, "node_id": "MDU6SXNzdWUxOTg0ODYxMzE=", "number": 98, "title": "UnicodeEncodeError when creating detailed/fail report for pytest-selenium test run", "user": {"login": "Sedemicra", "id": 22027540, "node_id": "MDQ6VXNlcjIyMDI3NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/22027540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sedemicra", "html_url": "https://github.com/Sedemicra", "followers_url": "https://api.github.com/users/Sedemicra/followers", "following_url": "https://api.github.com/users/Sedemicra/following{/other_user}", "gists_url": "https://api.github.com/users/Sedemicra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sedemicra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sedemicra/subscriptions", "organizations_url": "https://api.github.com/users/Sedemicra/orgs", "repos_url": "https://api.github.com/users/Sedemicra/repos", "events_url": "https://api.github.com/users/Sedemicra/events{/privacy}", "received_events_url": "https://api.github.com/users/Sedemicra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649589, "node_id": "MDU6TGFiZWwxOTk2NDk1ODk=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-01-03T14:31:27Z", "updated_at": "2019-07-23T10:43:08Z", "closed_at": "2017-02-24T12:55:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\nStumbled upon a problem when attempting to generate html reports for my selenium tests (in pytest), that I don't seem to be able to resolve.\r\nWhen a test fails or if I increase the selenium debug level (by \"_selenium_capture_debug = always_\") I receive an error (see console output below). Any kind of help is much appreciated.\r\n\r\nFor the sake of clarity I created an example test that results in same error and should be easily reproducible:\r\n_pytest.ini_\r\n```\r\n[pytest]\r\nselenium_capture_debug = always\r\n```\r\n\r\n_test_google.py_\r\n```\r\ndef test_htmlreporttesting(selenium):\r\n    selenium.get(\"https://google.com\")\r\n    selenium.find_element_by_name('q').send_keys(\"error\")\r\n    selenium.find_element_by_name('btnG').click()\r\n```\r\n**Result from console**\r\n```\r\nF:\\Automation\\PyTest\\PyTest_Google>pytest --driver Chrome --html Report.html\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.5.2, pytest-3.0.5, py-1.4.32, pluggy-0.4.0\r\ndriver: Chrome\r\nsensitiveurl: .*\r\nrootdir: F:\\Automation\\PyTest\\PyTest_Google, inifile: pytest.ini\r\nplugins: base-url-1.2.0, html-1.13.0, selenium-1.7.0, variables-1.4, xdist-1.15.0\r\ncollected 1 items\r\n\r\ntest_google.py .\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\main.py\", line 98, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\main.py\", line 133, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 745, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\main.py\", line 154, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 745, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 613, in execute\r\nINTERNALERROR>     return _wrapped_call(hook_impl.function(*args), self.execute)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 254, in _wrapped_call\r\nINTERNALERROR>     return call_outcome.get_result()\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 279, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 265, in __init__\r\nINTERNALERROR>     self.result = func()\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\runner.py\", line 66, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\runner.py\", line 79, in runtestprotocol\r\nINTERNALERROR>     reports.append(call_and_report(item, \"call\", log))\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\runner.py\", line 137, in call_and_report\r\nINTERNALERROR>     hook.pytest_runtest_logreport(report=report)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 745, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\_pytest\\vendored_packages\\pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\pytest_html\\plugin.py\", line 453, in pytest_runtest_logreport\r\nINTERNALERROR>     self.append_passed(report)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\pytest_html\\plugin.py\", line 268, in append_passed\r\nINTERNALERROR>     self._appendrow('Passed', report)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\pytest_html\\plugin.py\", line 254, in _appendrow\r\nINTERNALERROR>     self.logfile)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\pytest_html\\plugin.py\", line 128, in __init__\r\nINTERNALERROR>     self.append_extra_html(extra, extra_index, test_index)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\pytest_html\\plugin.py\", line 208, in append_extra_html\r\nINTERNALERROR>     extra.get('extension'))\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\site-packages\\pytest_html\\plugin.py\", line 162, in create_asset\r\nINTERNALERROR>     f.write(content)\r\nINTERNALERROR>   File \"c:\\program files\\python35\\lib\\encodings\\cp1252.py\", line 19, in encode\r\nINTERNALERROR>     return codecs.charmap_encode(input,self.errors,encoding_table)[0]\r\nINTERNALERROR> UnicodeEncodeError: 'charmap' codec can't encode characters in position 104329-104335: character maps to <undefined>\r\n\r\n========================== 1 passed in 9.05 seconds ===========================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/96", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/96/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/96/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/96", "id": 195842287, "node_id": "MDU6SXNzdWUxOTU4NDIyODc=", "number": 96, "title": "ansi2html's license now superceedes MPL", "user": {"login": "brianbruggeman", "id": 1350114, "node_id": "MDQ6VXNlcjEzNTAxMTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1350114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianbruggeman", "html_url": "https://github.com/brianbruggeman", "followers_url": "https://api.github.com/users/brianbruggeman/followers", "following_url": "https://api.github.com/users/brianbruggeman/following{/other_user}", "gists_url": "https://api.github.com/users/brianbruggeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianbruggeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianbruggeman/subscriptions", "organizations_url": "https://api.github.com/users/brianbruggeman/orgs", "repos_url": "https://api.github.com/users/brianbruggeman/repos", "events_url": "https://api.github.com/users/brianbruggeman/events{/privacy}", "received_events_url": "https://api.github.com/users/brianbruggeman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-12-15T15:57:28Z", "updated_at": "2017-02-23T18:39:20Z", "closed_at": "2017-02-23T18:39:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think this is just an awareness thing.  But based on the licensing pytest-html is not longer actually being distributed via MPL and is officially GPL3 due to the addition of ansi2html.  Since this is a tool, I'm not sure it really matters, but it would be good to have that identified somewhere.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/95", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/95/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/95/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/95", "id": 195672289, "node_id": "MDU6SXNzdWUxOTU2NzIyODk=", "number": 95, "title": "Capture logging by loglevel setting", "user": {"login": "westhomas", "id": 953369, "node_id": "MDQ6VXNlcjk1MzM2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/953369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/westhomas", "html_url": "https://github.com/westhomas", "followers_url": "https://api.github.com/users/westhomas/followers", "following_url": "https://api.github.com/users/westhomas/following{/other_user}", "gists_url": "https://api.github.com/users/westhomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/westhomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/westhomas/subscriptions", "organizations_url": "https://api.github.com/users/westhomas/orgs", "repos_url": "https://api.github.com/users/westhomas/repos", "events_url": "https://api.github.com/users/westhomas/events{/privacy}", "received_events_url": "https://api.github.com/users/westhomas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-14T23:10:11Z", "updated_at": "2017-02-27T15:42:18Z", "closed_at": "2017-02-27T15:42:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there! Great plugin!\r\n\r\nI have a ton of debug logs (using `logging.debug`) that appear in the stdout. I'd love to capture this data in the html report.\r\n\r\nI saw some reference to this in the issues backlog but I'm not seeing how it can be done. Is this a current feature?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/94", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/94/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/94/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/94", "id": 193785243, "node_id": "MDU6SXNzdWUxOTM3ODUyNDM=", "number": 94, "title": "Report is generated and written to disk regardless of selenium_capture_debug", "user": {"login": "BeyondEvil", "id": 15611634, "node_id": "MDQ6VXNlcjE1NjExNjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/15611634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BeyondEvil", "html_url": "https://github.com/BeyondEvil", "followers_url": "https://api.github.com/users/BeyondEvil/followers", "following_url": "https://api.github.com/users/BeyondEvil/following{/other_user}", "gists_url": "https://api.github.com/users/BeyondEvil/gists{/gist_id}", "starred_url": "https://api.github.com/users/BeyondEvil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BeyondEvil/subscriptions", "organizations_url": "https://api.github.com/users/BeyondEvil/orgs", "repos_url": "https://api.github.com/users/BeyondEvil/repos", "events_url": "https://api.github.com/users/BeyondEvil/events{/privacy}", "received_events_url": "https://api.github.com/users/BeyondEvil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-06T14:25:37Z", "updated_at": "2016-12-19T11:52:04Z", "closed_at": "2016-12-19T11:52:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In pytest.ini I have:\r\n\r\nselenium_capture_debug = failure\r\n\r\nHowever, pytest-html still generates a report if all tests pass. Same goes for if I set it to 'never'.\r\n\r\nNow, in pytest-selenium#pytest_runtest_makereport(), it works as expected: the item.config.hook.pytest_selenium_capture_debug() is never called.\r\n\r\nBut, in plugin.py (pytest-html), pytest_runtest_logreport() and pytest_terminal_summary() are still called. I cannot find any checks for the ini config in pytest-html.\r\n\r\nIt all used to work as expected.\r\n\r\nVersions:\r\npytest==3.0.5\r\npytest-selenium==1.6 (we can't run newer due to Selenium 3 requirement)\r\npytest-html==1.12.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/93", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/93/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/93/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/93", "id": 193713309, "node_id": "MDU6SXNzdWUxOTM3MTMzMDk=", "number": 93, "title": "Need a method to process the generated report", "user": {"login": "srujanred", "id": 9072762, "node_id": "MDQ6VXNlcjkwNzI3NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9072762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srujanred", "html_url": "https://github.com/srujanred", "followers_url": "https://api.github.com/users/srujanred/followers", "following_url": "https://api.github.com/users/srujanred/following{/other_user}", "gists_url": "https://api.github.com/users/srujanred/gists{/gist_id}", "starred_url": "https://api.github.com/users/srujanred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srujanred/subscriptions", "organizations_url": "https://api.github.com/users/srujanred/orgs", "repos_url": "https://api.github.com/users/srujanred/repos", "events_url": "https://api.github.com/users/srujanred/events{/privacy}", "received_events_url": "https://api.github.com/users/srujanred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-12-06T08:42:48Z", "updated_at": "2016-12-08T12:29:08Z", "closed_at": "2016-12-08T12:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the existing implementation, we can only generate and save report to local disk. It will be more useful if we have a method which can be called after the saving the file on disk (Like allowing user to upload the test reports once the test completes.).\r\n\r\nIn my case, i wanted to upload the generated html report to hp alm. i tried adding this code in autouse fixtures with both module and session scopes, but nothing worked because generate and save reports were called just before exiting the run. \r\nThere is a function `HTMLReport::pytest_sessionfinish(self, session)` which can do this job. But i'm not sure how to get the session var.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/90", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/90/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/90/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/90", "id": 191508114, "node_id": "MDU6SXNzdWUxOTE1MDgxMTQ=", "number": 90, "title": "Title of checkbox disappears when unchecked", "user": {"login": "vashirov", "id": 1745018, "node_id": "MDQ6VXNlcjE3NDUwMTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1745018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vashirov", "html_url": "https://github.com/vashirov", "followers_url": "https://api.github.com/users/vashirov/followers", "following_url": "https://api.github.com/users/vashirov/following{/other_user}", "gists_url": "https://api.github.com/users/vashirov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vashirov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vashirov/subscriptions", "organizations_url": "https://api.github.com/users/vashirov/orgs", "repos_url": "https://api.github.com/users/vashirov/repos", "events_url": "https://api.github.com/users/vashirov/events{/privacy}", "received_events_url": "https://api.github.com/users/vashirov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649589, "node_id": "MDU6TGFiZWwxOTk2NDk1ODk=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 199649592, "node_id": "MDU6TGFiZWwxOTk2NDk1OTI=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-24T12:26:18Z", "updated_at": "2016-11-25T09:31:04Z", "closed_at": "2016-11-25T09:31:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n![image](https://cloud.githubusercontent.com/assets/1745018/20598329/fb860ad6-b248-11e6-86bb-f8381410e3ec.png)\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1745018/20598332/0253f9cc-b249-11e6-80c3-8e46070e1c19.png)\r\n\r\nRegression was introduced in 972058bb. Reverting changes for main.js returned previous behaviour.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/89", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/89/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/89/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/89", "id": 190089130, "node_id": "MDU6SXNzdWUxOTAwODkxMzA=", "number": 89, "title": "Add support for other image types", "user": {"login": "bhzunami", "id": 3340922, "node_id": "MDQ6VXNlcjMzNDA5MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3340922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhzunami", "html_url": "https://github.com/bhzunami", "followers_url": "https://api.github.com/users/bhzunami/followers", "following_url": "https://api.github.com/users/bhzunami/following{/other_user}", "gists_url": "https://api.github.com/users/bhzunami/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhzunami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhzunami/subscriptions", "organizations_url": "https://api.github.com/users/bhzunami/orgs", "repos_url": "https://api.github.com/users/bhzunami/repos", "events_url": "https://api.github.com/users/bhzunami/events{/privacy}", "received_events_url": "https://api.github.com/users/bhzunami/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bhzunami", "id": 3340922, "node_id": "MDQ6VXNlcjMzNDA5MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3340922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhzunami", "html_url": "https://github.com/bhzunami", "followers_url": "https://api.github.com/users/bhzunami/followers", "following_url": "https://api.github.com/users/bhzunami/following{/other_user}", "gists_url": "https://api.github.com/users/bhzunami/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhzunami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhzunami/subscriptions", "organizations_url": "https://api.github.com/users/bhzunami/orgs", "repos_url": "https://api.github.com/users/bhzunami/repos", "events_url": "https://api.github.com/users/bhzunami/events{/privacy}", "received_events_url": "https://api.github.com/users/bhzunami/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bhzunami", "id": 3340922, "node_id": "MDQ6VXNlcjMzNDA5MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3340922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhzunami", "html_url": "https://github.com/bhzunami", "followers_url": "https://api.github.com/users/bhzunami/followers", "following_url": "https://api.github.com/users/bhzunami/following{/other_user}", "gists_url": "https://api.github.com/users/bhzunami/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhzunami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhzunami/subscriptions", "organizations_url": "https://api.github.com/users/bhzunami/orgs", "repos_url": "https://api.github.com/users/bhzunami/repos", "events_url": "https://api.github.com/users/bhzunami/events{/privacy}", "received_events_url": "https://api.github.com/users/bhzunami/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2016-11-17T16:05:48Z", "updated_at": "2016-11-30T09:23:34Z", "closed_at": "2016-11-30T09:23:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At the moment it is not possible to have JPG or SVG graphics in the report. \r\nThis is because the type PNG is fix written in the code. \r\n\r\nSee Pull request #87 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/86", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/86/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/86/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/86", "id": 187972440, "node_id": "MDU6SXNzdWUxODc5NzI0NDA=", "number": 86, "title": "Add plugin version number to report generation header", "user": {"login": "davehunt", "id": 122800, "node_id": "MDQ6VXNlcjEyMjgwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/122800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davehunt", "html_url": "https://github.com/davehunt", "followers_url": "https://api.github.com/users/davehunt/followers", "following_url": "https://api.github.com/users/davehunt/following{/other_user}", "gists_url": "https://api.github.com/users/davehunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/davehunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davehunt/subscriptions", "organizations_url": "https://api.github.com/users/davehunt/orgs", "repos_url": "https://api.github.com/users/davehunt/repos", "events_url": "https://api.github.com/users/davehunt/events{/privacy}", "received_events_url": "https://api.github.com/users/davehunt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 199649591, "node_id": "MDU6TGFiZWwxOTk2NDk1OTE=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 199649592, "node_id": "MDU6TGFiZWwxOTk2NDk1OTI=", "url": "https://api.github.com/repos/pytest-dev/pytest-html/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-08T11:51:42Z", "updated_at": "2016-11-30T09:14:10Z", "closed_at": "2016-11-30T09:14:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "At the moment the report generation header looks something like:\r\n\r\n> Report generated on 08-Nov-2016 at 11:33:07\r\n\r\nIt would be useful when diagnosing problems if the plugin name was mentioned with a link to the project on PyPI, and the version was included such as:\r\n\r\n> Report generated on 08-Nov-2016 at 11:33:07 by [pytest-html](https://pypi.python.org/pypi/pytest-html) v1.11.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/84", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-html", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/84/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-html/issues/84/events", "html_url": "https://github.com/pytest-dev/pytest-html/issues/84", "id": 187265686, "node_id": "MDU6SXNzdWUxODcyNjU2ODY=", "number": 84, "title": "Marking Test XPassed as opposed to XFAILED", "user": {"login": "baid86", "id": 23254284, "node_id": "MDQ6VXNlcjIzMjU0Mjg0", "avatar_url": "https://avatars2.githubusercontent.com/u/23254284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baid86", "html_url": "https://github.com/baid86", "followers_url": "https://api.github.com/users/baid86/followers", "following_url": "https://api.github.com/users/baid86/following{/other_user}", "gists_url": "https://api.github.com/users/baid86/gists{/gist_id}", "starred_url": "https://api.github.com/users/baid86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baid86/subscriptions", "organizations_url": "https://api.github.com/users/baid86/orgs", "repos_url": "https://api.github.com/users/baid86/repos", "events_url": "https://api.github.com/users/baid86/events{/privacy}", "received_events_url": "https://api.github.com/users/baid86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-04T06:56:37Z", "updated_at": "2016-11-05T00:04:19Z", "closed_at": "2016-11-04T15:13:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a Test is FAILED and wasxfail is set why it is marked as XPASSED, Shouldn't it be XFAILED?\r\nAlso when wasxfail is set and test is PASSED why it is not marked as XPASSED?\r\n```\r\ndef append_passed(self, report):\r\n        if report.when == 'call':\r\n            self.passed += 1\r\n            self._appendrow('Passed', report)\r\n\r\ndef append_failed(self, report):\r\n        if report.when == \"call\":\r\n            if hasattr(report, \"wasxfail\"):\r\n                self.xpassed += 1\r\n                self._appendrow('XPassed', report)\r\n            else:\r\n                self.failed += 1\r\n                self._appendrow('Failed', report)\r\n```\r\n\r\nIMO above code should be modified as \r\n```\r\ndef append_passed(self, report):\r\n  if report.when == 'call':\r\n    if hasattr(report, \"wasxfail\"):\r\n      self.xpassed += 1\r\n      self._appendrow('XPassed', report)\r\n    else:\r\n      self.passed += 1\r\n      self._appendrow('Passed', report)\r\n\r\ndef append_failed(self, report):\r\n  if report.when == \"call\":\r\n    if hasattr(report, \"wasxfail\"):\r\n      self.xfailed += 1\r\n      self._appendrow('XFailed', report)\r\n    else:\r\n      self.failed += 1\r\n      self._appendrow('Failed', report)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}