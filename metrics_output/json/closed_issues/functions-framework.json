{"total_count": 23, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/75", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/75/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/75/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/75", "id": 669228537, "node_id": "MDU6SXNzdWU2NjkyMjg1Mzc=", "number": 75, "title": "Accessing Flask app context results in `RuntimeError: Working outside of application context.`", "user": {"login": "mayanksha", "id": 19910519, "node_id": "MDQ6VXNlcjE5OTEwNTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/19910519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mayanksha", "html_url": "https://github.com/mayanksha", "followers_url": "https://api.github.com/users/mayanksha/followers", "following_url": "https://api.github.com/users/mayanksha/following{/other_user}", "gists_url": "https://api.github.com/users/mayanksha/gists{/gist_id}", "starred_url": "https://api.github.com/users/mayanksha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mayanksha/subscriptions", "organizations_url": "https://api.github.com/users/mayanksha/orgs", "repos_url": "https://api.github.com/users/mayanksha/repos", "events_url": "https://api.github.com/users/mayanksha/events{/privacy}", "received_events_url": "https://api.github.com/users/mayanksha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102876, "node_id": "MDU6TGFiZWwxNzY1MTAyODc2", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-30T21:59:10Z", "updated_at": "2020-08-17T23:33:28Z", "closed_at": "2020-08-17T23:33:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI was trying to deploy some Google Cloud Functions today and found out about this wonderful project to test the functions locally. I can't thank you enough for this project, since it saves a lot of time (deploying is very time consuming, and being able to test it locally is a big relief). \r\n\r\nI've created a minimum viable example that can help to reproduce the error. The same example works wonderfully when deployed as a Google Cloud Function, but it fails with an error when run with `functions-framework`. The error is as follows (I'm using python 3.7 to create a virtual env and testing within that):\r\n\r\n```Error\r\n(venv) .../python/min-eg  $ functions-framework --port 5000 --target hello\r\nTraceback (most recent call last):\r\n  File \"/home/msharma/git/python/min-eg/venv/bin/functions-framework\", line 8, in <module>\r\n    sys.exit(_cli())\r\n  File \"/home/msharma/git/python/min-eg/venv/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/msharma/git/python/min-eg/venv/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/msharma/git/python/min-eg/venv/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/msharma/git/python/min-eg/venv/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/msharma/git/python/min-eg/venv/lib/python3.7/site-packages/functions_framework/_cli.py\", line 37, in _cli\r\n    app = create_app(target, source, signature_type)\r\n  File \"/home/msharma/git/python/min-eg/venv/lib/python3.7/site-packages/functions_framework/__init__.py\", line 229, in create_app\r\n    spec.loader.exec_module(source_module)\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/home/msharma/git/python/min-eg/main.py\", line 1, in <module>\r\n    from app import db\r\n  File \"/home/msharma/git/python/min-eg/app.py\", line 29, in <module>\r\n    with app.app_context():\r\n  File \"/home/msharma/git/python/min-eg/venv/lib/python3.7/site-packages/werkzeug/local.py\", line 347, in __getattr__\r\n    return getattr(self._get_current_object(), name)\r\n  File \"/home/msharma/git/python/min-eg/venv/lib/python3.7/site-packages/werkzeug/local.py\", line 306, in _get_current_object\r\n    return self.__local()\r\n  File \"/home/msharma/git/python/min-eg/venv/lib/python3.7/site-packages/flask/globals.py\", line 52, in _find_app\r\n    raise RuntimeError(_app_ctx_err_msg)\r\nRuntimeError: Working outside of application context.\r\n\r\nThis typically means that you attempted to use functionality that needed\r\nto interface with the current application object in some way. To solve\r\nthis, set up an application context with app.app_context().  See the\r\ndocumentation for more information.\r\n```\r\n\r\nThe Example is as follows (2 files):\r\n\r\n### `requirements.txt` file\r\n```\r\nalembic==1.4.2\r\ncffi==1.14.1\r\nclick==7.1.2\r\ncloudevents==0.3.0\r\nFlask==1.1.2\r\nFlask-JWT-Extended==3.24.1\r\nFlask-Migrate==2.5.3\r\nFlask-SQLAlchemy==2.4.4\r\nfunctions-framework==2.0.0\r\ngunicorn==20.0.4\r\nitsdangerous==1.1.0\r\nJinja2==2.11.2\r\nMako==1.1.3\r\nMarkupSafe==1.1.1\r\npathtools==0.1.2\r\npsycopg2==2.8.5\r\npy-bcrypt==0.4\r\npycparser==2.20\r\nPyJWT==1.7.1\r\npython-dateutil==2.8.1\r\npython-editor==1.0.4\r\nsix==1.15.0\r\nSQLAlchemy==1.3.18\r\nwatchdog==0.10.3\r\nWerkzeug==1.0.1\r\n```\r\n\r\n### `main.py` file\r\n\r\n```python\r\nimport os\r\n\r\nfrom flask import current_app as app\r\nfrom flask_sqlalchemy import SQLAlchemy, sqlalchemy\r\n\r\ndef setup_context():\r\n    # Set these in the environment variables for the function\r\n    db_user = os.environ[\"DB_USER\"]\r\n    db_password = os.environ[\"DB_PASSWORD\"]\r\n    db_name = os.environ[\"DB_NAME\"]\r\n\r\n    db_connection_instance_name = os.environ[\"DB_CONNECTION_INSTANCE_NAME\"]\r\n    db_host = os.environ[\"DB_HOST\"]\r\n\r\n    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False \r\n\r\n    driver_name = 'postgresql+psycopg2'\r\n    app.config['SQLALCHEMY_DATABASE_URI'] = sqlalchemy.engine.url.URL(\r\n        drivername=driver_name,\r\n        username=db_user,\r\n        password=db_password,\r\n        database=db_name,\r\n        host=db_host\r\n    )\r\n\r\n    db = SQLAlchemy(app)\r\n    return db\r\n\r\nwith app.app_context():\r\n    db = setup_context()\r\n\r\ndef hello(request):\r\n    stmt = 'select * from users;'\r\n    try:\r\n        result = db.session.execute(stmt)\r\n        for rowproxy in result:\r\n            print(rowproxy.items())\r\n    except Exception as e:\r\n        return 'Error: {}'.format(str(e))\r\n    return 'ok'\r\n```\r\n\r\nThe issue seems to be in the `__init__.py` file where we create an instance of the Flask app (https://github.com/GoogleCloudPlatform/functions-framework-python/blob/master/src/functions_framework/__init__.py#L154-L175). I'm not great at python, but it looks to me as if the module is imported before the Flask app context is even created. So, if I move the `app = flask.Flask(target, template_folder=template_folder)` before I import the source module, I can successfully run `functions-framework` without an errors. \r\n\r\nIn terms of code, something like this (i'm not sure if I'm doing it correctly, so please bear with me): \r\n\r\n```python\r\n    app = flask.Flask(target, template_folder=template_folder)\r\n    app.config[\"MAX_CONTENT_LENGTH\"] = MAX_CONTENT_LENGTH\r\n\r\n    with app.app_context():\r\n        # Load the source file:\r\n        # 1. Extract the module name from the source path\r\n        realpath = os.path.realpath(source)\r\n        directory, filename = os.path.split(realpath)\r\n        name, extension = os.path.splitext(filename)\r\n\r\n        # 2. Create a new module\r\n        spec = importlib.util.spec_from_file_location(name, realpath)\r\n        source_module = importlib.util.module_from_spec(spec)\r\n\r\n        # 3. Add the directory of the source to sys.path to allow the function to\r\n        # load modules relative to its location\r\n        sys.path.append(directory)\r\n\r\n        # 4. Add the module to sys.modules\r\n        sys.modules[name] = source_module\r\n\r\n        # 5. Execute the module\r\n        spec.loader.exec_module(source_module)\r\n```\r\n\r\nIs it a bug, or am I doing something wrong here?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/74", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/74/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/74/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/74", "id": 667419434, "node_id": "MDU6SXNzdWU2Njc0MTk0MzQ=", "number": 74, "title": "functions framework with google pub/sub emulator", "user": {"login": "baldrich-randori", "id": 53581048, "node_id": "MDQ6VXNlcjUzNTgxMDQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/53581048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baldrich-randori", "html_url": "https://github.com/baldrich-randori", "followers_url": "https://api.github.com/users/baldrich-randori/followers", "following_url": "https://api.github.com/users/baldrich-randori/following{/other_user}", "gists_url": "https://api.github.com/users/baldrich-randori/gists{/gist_id}", "starred_url": "https://api.github.com/users/baldrich-randori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baldrich-randori/subscriptions", "organizations_url": "https://api.github.com/users/baldrich-randori/orgs", "repos_url": "https://api.github.com/users/baldrich-randori/repos", "events_url": "https://api.github.com/users/baldrich-randori/events{/privacy}", "received_events_url": "https://api.github.com/users/baldrich-randori/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-28T22:21:10Z", "updated_at": "2020-07-29T15:12:26Z", "closed_at": "2020-07-29T15:12:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am attempting to replicate our cloud functions locally but they all leverage pub/sub. I can easily use the pub/sub emulator but I don't see how to subscribe to a topic on the local emulator using the local cloud functions? Am I missing something, how would you be able to run this locally and emulate your workflow without this? \r\n\r\nWould anyone have any recommendations on how to run the full stack locally for local development environments? \r\n\r\nI was assuming I would be able to set the pub/sub emulator env var and the cloud function would automatically subscribe and pull like it does in our testing and production envs.\r\n\r\nThanks for the help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/73", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/73/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/73/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/73", "id": 661562417, "node_id": "MDU6SXNzdWU2NjE1NjI0MTc=", "number": 73, "title": "Unable to use functions-framework-python with pubsub beta emulator", "user": {"login": "akssinhaamit", "id": 16870233, "node_id": "MDQ6VXNlcjE2ODcwMjMz", "avatar_url": "https://avatars2.githubusercontent.com/u/16870233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akssinhaamit", "html_url": "https://github.com/akssinhaamit", "followers_url": "https://api.github.com/users/akssinhaamit/followers", "following_url": "https://api.github.com/users/akssinhaamit/following{/other_user}", "gists_url": "https://api.github.com/users/akssinhaamit/gists{/gist_id}", "starred_url": "https://api.github.com/users/akssinhaamit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akssinhaamit/subscriptions", "organizations_url": "https://api.github.com/users/akssinhaamit/orgs", "repos_url": "https://api.github.com/users/akssinhaamit/repos", "events_url": "https://api.github.com/users/akssinhaamit/events{/privacy}", "received_events_url": "https://api.github.com/users/akssinhaamit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T09:00:42Z", "updated_at": "2020-07-20T14:28:31Z", "closed_at": "2020-07-20T14:28:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following the [README.md](https://github.com/GoogleCloudPlatform/functions-framework-nodejs/pull/40/files), I am able to trigger functions but I am expecting 'data' as a part of the event but unfortunately the message being passed from `google beta emulatar` is in the following format:\r\n```\r\n{\r\n      \"subscription\": \"projects/test/subscriptions/test1\",\r\n      \"message\": {\r\n        \"data\": \"TWVzc2FnZSBudW1iZXIgNA==\",\r\n        \"messageId\": \"4\",\r\n        \"attributes\": {}\r\n      },\r\n      \"id\": 3\r\n    }\r\n```\r\nIs there something I am missing? Please guide!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/72", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/72/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/72/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/72", "id": 658414518, "node_id": "MDU6SXNzdWU2NTg0MTQ1MTg=", "number": 72, "title": "Response content-type csv", "user": {"login": "simplianup", "id": 59578114, "node_id": "MDQ6VXNlcjU5NTc4MTE0", "avatar_url": "https://avatars0.githubusercontent.com/u/59578114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simplianup", "html_url": "https://github.com/simplianup", "followers_url": "https://api.github.com/users/simplianup/followers", "following_url": "https://api.github.com/users/simplianup/following{/other_user}", "gists_url": "https://api.github.com/users/simplianup/gists{/gist_id}", "starred_url": "https://api.github.com/users/simplianup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simplianup/subscriptions", "organizations_url": "https://api.github.com/users/simplianup/orgs", "repos_url": "https://api.github.com/users/simplianup/repos", "events_url": "https://api.github.com/users/simplianup/events{/privacy}", "received_events_url": "https://api.github.com/users/simplianup/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102881, "node_id": "MDU6TGFiZWwxNzY1MTAyODgx", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-16T17:44:58Z", "updated_at": "2020-07-29T15:13:39Z", "closed_at": "2020-07-29T15:13:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way for us to stream a CSV file down as a response rather than text output?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/65", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/65/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/65/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/65", "id": 649389496, "node_id": "MDU6SXNzdWU2NDkzODk0OTY=", "number": 65, "title": "Publish CloudEvent Support to PyPI", "user": {"login": "grant", "id": 744973, "node_id": "MDQ6VXNlcjc0NDk3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/744973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grant", "html_url": "https://github.com/grant", "followers_url": "https://api.github.com/users/grant/followers", "following_url": "https://api.github.com/users/grant/following{/other_user}", "gists_url": "https://api.github.com/users/grant/gists{/gist_id}", "starred_url": "https://api.github.com/users/grant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grant/subscriptions", "organizations_url": "https://api.github.com/users/grant/orgs", "repos_url": "https://api.github.com/users/grant/repos", "events_url": "https://api.github.com/users/grant/events{/privacy}", "received_events_url": "https://api.github.com/users/grant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-01T23:10:42Z", "updated_at": "2020-07-02T01:25:16Z", "closed_at": "2020-07-02T01:25:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current published version of the framework is not published on PyPI:\r\n\r\nhttps://pypi.org/project/functions-framework\r\n\r\nIn order to support CloudEvents, it should be published. Perhaps there's a reason for not publishing yet, not sure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/63", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/63/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/63/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/63", "id": 642253461, "node_id": "MDU6SXNzdWU2NDIyNTM0NjE=", "number": 63, "title": "Merge branch `2.0.0-dev` into `master`", "user": {"login": "grant", "id": 744973, "node_id": "MDQ6VXNlcjc0NDk3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/744973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grant", "html_url": "https://github.com/grant", "followers_url": "https://api.github.com/users/grant/followers", "following_url": "https://api.github.com/users/grant/following{/other_user}", "gists_url": "https://api.github.com/users/grant/gists{/gist_id}", "starred_url": "https://api.github.com/users/grant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grant/subscriptions", "organizations_url": "https://api.github.com/users/grant/orgs", "repos_url": "https://api.github.com/users/grant/repos", "events_url": "https://api.github.com/users/grant/events{/privacy}", "received_events_url": "https://api.github.com/users/grant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-19T22:56:52Z", "updated_at": "2020-06-23T17:38:26Z", "closed_at": "2020-06-23T17:38:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now we have a separate branch, `2.0.0-dev`, that I believe can be merged into master as it should add incremental functionality.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/55", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/55/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/55/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/55", "id": 626795705, "node_id": "MDU6SXNzdWU2MjY3OTU3MDU=", "number": 55, "title": "Support Signature Type: CloudEvent", "user": {"login": "grant", "id": 744973, "node_id": "MDQ6VXNlcjc0NDk3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/744973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grant", "html_url": "https://github.com/grant", "followers_url": "https://api.github.com/users/grant/followers", "following_url": "https://api.github.com/users/grant/following{/other_user}", "gists_url": "https://api.github.com/users/grant/gists{/gist_id}", "starred_url": "https://api.github.com/users/grant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grant/subscriptions", "organizations_url": "https://api.github.com/users/grant/orgs", "repos_url": "https://api.github.com/users/grant/repos", "events_url": "https://api.github.com/users/grant/events{/privacy}", "received_events_url": "https://api.github.com/users/grant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cumason123", "id": 31265687, "node_id": "MDQ6VXNlcjMxMjY1Njg3", "avatar_url": "https://avatars0.githubusercontent.com/u/31265687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cumason123", "html_url": "https://github.com/cumason123", "followers_url": "https://api.github.com/users/cumason123/followers", "following_url": "https://api.github.com/users/cumason123/following{/other_user}", "gists_url": "https://api.github.com/users/cumason123/gists{/gist_id}", "starred_url": "https://api.github.com/users/cumason123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cumason123/subscriptions", "organizations_url": "https://api.github.com/users/cumason123/orgs", "repos_url": "https://api.github.com/users/cumason123/repos", "events_url": "https://api.github.com/users/cumason123/events{/privacy}", "received_events_url": "https://api.github.com/users/cumason123/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cumason123", "id": 31265687, "node_id": "MDQ6VXNlcjMxMjY1Njg3", "avatar_url": "https://avatars0.githubusercontent.com/u/31265687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cumason123", "html_url": "https://github.com/cumason123", "followers_url": "https://api.github.com/users/cumason123/followers", "following_url": "https://api.github.com/users/cumason123/following{/other_user}", "gists_url": "https://api.github.com/users/cumason123/gists{/gist_id}", "starred_url": "https://api.github.com/users/cumason123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cumason123/subscriptions", "organizations_url": "https://api.github.com/users/cumason123/orgs", "repos_url": "https://api.github.com/users/cumason123/repos", "events_url": "https://api.github.com/users/cumason123/events{/privacy}", "received_events_url": "https://api.github.com/users/cumason123/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2020-05-28T20:32:40Z", "updated_at": "2020-08-11T04:39:54Z", "closed_at": "2020-08-11T03:39:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Support signature type `cloudevent`\r\n\r\nThis signature type should support HTTP requests with CloudEvent objects delivered via either structured and binary CloudEvent objects. Usually a CloudEvents SDK can handle transforming the HTTP request to a language-native CloudEvent object.\r\n\r\n[New signature `cloudevent` in **Functions Framework contract**](https://github.com/GoogleCloudPlatform/functions-framework#cloudevents-functions-signature-type-cloudevent)\r\n\r\nThe end-user should see the parameter `cloudevent`, which is a native CloudEvent object using the CloudEvent SDK if possible.\r\n\r\n## Example User Experience (in Node)\r\n\r\n```js\r\nfunction handler(cloudevent) {\r\n  console.log(cloudevent.id);\r\n  console.log(cloudevent.data.message);\r\n  console.log(cloudevent.custom_values_should_be_accepted);\r\n  return \"anything\"\r\n}\r\n```\r\n\r\n## Example HTTP requests\r\n\r\nThe CloudEvents specification requires support for both \"binary\" and \"structured\" encodings for CloudEvents delivered via HTTP. The Function Framework must support both encodings. A CloudEvents SDK might make this easier, but most SDKs are not complete, so logic may exist within the Framework.\r\n\r\nExamples:\r\n\r\n### Binary content mode\r\n\r\n```json\r\nPOST /any/url/is/accepted HTTP/1.1\r\nHost: example.com\r\nce-specversion: 1.0\r\nce-type: com.example.someevent\r\nce-time: 2018-04-05T03:56:24Z\r\nce-id: 1234-1234-1234\r\nce-source: /mycontext/subcontext\r\nx-google-custom-header: 77\r\nContent-Type: <contentType>\r\nContent-Length: 33\r\n{\r\n    \"message\": \"Hello World!\"\r\n}\r\n```\r\n\r\n### Structured content mode\r\n\r\n```json\r\nPOST /someresource HTTP/1.1\r\nHost: example.com\r\nContent-Type: <contentType>\r\nContent-Length: 266\r\n{\r\n    \"specversion\": \"1.0\",\r\n    \"type\": \"com.example.someevent\",\r\n    \"time\": \"2018-04-05T03:56:24Z\",\r\n    \"id\": \"1234-1234-1234\",\r\n    \"source\": \"/mycontext/subcontext\",\r\n    \"datacontenttype\": \"application/json\",\r\n    \"data\": {\r\n        \"message\": \"Hello World!\"\r\n    },\r\n    \"custom_values_should_be_accepted\": 42\r\n}\r\n```\r\n\r\nA user should be able to access all of the HTTP headers.\r\nA user should be able to access the body of the CloudEvent in the `data` field of an object.\r\n\r\n---\r\n\r\n- Example PRs:\r\n  - [Node](https://github.com/GoogleCloudPlatform/functions-framework-nodejs/pull/147)\r\n  - [Go](https://github.com/GoogleCloudPlatform/functions-framework-go/pull/29)\r\n  - [.NET](https://github.com/GoogleCloudPlatform/functions-framework-dotnet/pull/66)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/49", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/49/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/49/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/49", "id": 618219903, "node_id": "MDU6SXNzdWU2MTgyMTk5MDM=", "number": 49, "title": "Impossible to use get_type_hints in main file", "user": {"login": "ChristianSauer", "id": 7250249, "node_id": "MDQ6VXNlcjcyNTAyNDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7250249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChristianSauer", "html_url": "https://github.com/ChristianSauer", "followers_url": "https://api.github.com/users/ChristianSauer/followers", "following_url": "https://api.github.com/users/ChristianSauer/following{/other_user}", "gists_url": "https://api.github.com/users/ChristianSauer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChristianSauer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChristianSauer/subscriptions", "organizations_url": "https://api.github.com/users/ChristianSauer/orgs", "repos_url": "https://api.github.com/users/ChristianSauer/repos", "events_url": "https://api.github.com/users/ChristianSauer/events{/privacy}", "received_events_url": "https://api.github.com/users/ChristianSauer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102870, "node_id": "MDU6TGFiZWwxNzY1MTAyODcw", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-14T13:12:11Z", "updated_at": "2020-05-15T07:04:37Z", "closed_at": "2020-05-14T18:19:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "get_type_hints is used by Pydantic, dacite etc. to create their model classes, so it'S kinda important.\r\n\r\nCurrentliy, this is broken in main.py:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"***\\main.py\", line 40, in ar_v4\r\n    data = dacite.from_dict(RequestData2, message)\r\n  File \"***\\venv\\lib\\site-packages\\dacite\\core.py\", line 43, in from_dict\r\n    data_class_hints = get_type_hints(data_class, globalns=config.forward_references)\r\n  File \"C:\\dev\\python3.8\\lib\\typing.py\", line 1220, in get_type_hints\r\n    base_globals = sys.modules[base.__module__].__dict__\r\nKeyError: 'main'\r\n```\r\n\r\n# reproduction:\r\n install dacite\r\nin main.py\r\n```python\r\n\r\nimport dacite\r\nimport dataclasses\r\n\r\n@dataclasses.dataclass\r\nclass RequestData2:\r\n    product_number: int\r\n\r\ndef hello_world(request):\r\n    message = request.get_json()\r\n    data = dacite.from_dict(RequestData2, message)\r\n    return \"\"\r\n```\r\npost some data to it and observe the error.\r\n\r\n# Workaround:\r\ncreate another file and place your data classes in them", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/48", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/48/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/48/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/48", "id": 618155433, "node_id": "MDU6SXNzdWU2MTgxNTU0MzM=", "number": 48, "title": "HTTP Functions: Global Exception Handler", "user": {"login": "ChristianSauer", "id": 7250249, "node_id": "MDQ6VXNlcjcyNTAyNDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7250249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChristianSauer", "html_url": "https://github.com/ChristianSauer", "followers_url": "https://api.github.com/users/ChristianSauer/followers", "following_url": "https://api.github.com/users/ChristianSauer/following{/other_user}", "gists_url": "https://api.github.com/users/ChristianSauer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChristianSauer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChristianSauer/subscriptions", "organizations_url": "https://api.github.com/users/ChristianSauer/orgs", "repos_url": "https://api.github.com/users/ChristianSauer/repos", "events_url": "https://api.github.com/users/ChristianSauer/events{/privacy}", "received_events_url": "https://api.github.com/users/ChristianSauer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102876, "node_id": "MDU6TGFiZWwxNzY1MTAyODc2", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-14T11:33:24Z", "updated_at": "2020-05-15T14:33:15Z", "closed_at": "2020-05-15T14:33:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to hook up Flasks global exception handler? Wrapping the whole function into a try..catch feels gross.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/44", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/44/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/44/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/44", "id": 616777726, "node_id": "MDU6SXNzdWU2MTY3Nzc3MjY=", "number": 44, "title": "Unable to disable debugger when gunicorn is not available", "user": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-12T16:05:36Z", "updated_at": "2020-05-14T08:55:42Z", "closed_at": "2020-05-13T21:31:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As a problem: Even now I am unable to disable the debugger --debugger False does not work, and it seems to be active per default.\r\n\r\n_Originally posted by @ChristianSauer in https://github.com/GoogleCloudPlatform/functions-framework-python/issues/32#issuecomment-627259026_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/42", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/42/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/42/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/42", "id": 616560065, "node_id": "MDU6SXNzdWU2MTY1NjAwNjU=", "number": 42, "title": "Reconsider adding gunicorn as required dependency", "user": {"login": "yuri-sergiichuk", "id": 23313616, "node_id": "MDQ6VXNlcjIzMzEzNjE2", "avatar_url": "https://avatars2.githubusercontent.com/u/23313616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuri-sergiichuk", "html_url": "https://github.com/yuri-sergiichuk", "followers_url": "https://api.github.com/users/yuri-sergiichuk/followers", "following_url": "https://api.github.com/users/yuri-sergiichuk/following{/other_user}", "gists_url": "https://api.github.com/users/yuri-sergiichuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuri-sergiichuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuri-sergiichuk/subscriptions", "organizations_url": "https://api.github.com/users/yuri-sergiichuk/orgs", "repos_url": "https://api.github.com/users/yuri-sergiichuk/repos", "events_url": "https://api.github.com/users/yuri-sergiichuk/events{/privacy}", "received_events_url": "https://api.github.com/users/yuri-sergiichuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T10:53:43Z", "updated_at": "2020-05-12T15:55:35Z", "closed_at": "2020-05-12T15:55:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the PR #36, the Gunicorn server became the required dependency which means that each app will have to download the Gunicorn and moreover if you bundle the app as a package with `functions-framework`, the Gunicorn will be in that package as well.\r\n\r\nWhile it looks like smth that ease development and deployment and allows bootstrapping production-ready instances faster, in many cases I've seen Docker configurations where the application itself is bundled as an installable module and the Gunicorn is set up only inside the actual runner container. Moreover, I'd say such a way allows developers to fine-tune their setup better. The other case is people just using different WSGI servers.\r\n\r\nMy suggestion is to roll-back the latest change and do not require gunicorn as a dependency.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/38", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/38/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/38/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/38", "id": 614289488, "node_id": "MDU6SXNzdWU2MTQyODk0ODg=", "number": 38, "title": "Windows support broken due to gunicorn", "user": {"login": "BYK", "id": 126780, "node_id": "MDQ6VXNlcjEyNjc4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/126780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BYK", "html_url": "https://github.com/BYK", "followers_url": "https://api.github.com/users/BYK/followers", "following_url": "https://api.github.com/users/BYK/following{/other_user}", "gists_url": "https://api.github.com/users/BYK/gists{/gist_id}", "starred_url": "https://api.github.com/users/BYK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BYK/subscriptions", "organizations_url": "https://api.github.com/users/BYK/orgs", "repos_url": "https://api.github.com/users/BYK/repos", "events_url": "https://api.github.com/users/BYK/events{/privacy}", "received_events_url": "https://api.github.com/users/BYK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102870, "node_id": "MDU6TGFiZWwxNzY1MTAyODcw", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-07T19:25:30Z", "updated_at": "2020-05-08T01:54:56Z", "closed_at": "2020-05-08T01:47:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "#36 switched to Gunicorn which is not supported on Windows. So as of `1.4.0`, `functions-framework` is not usable on Windows.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/35", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/35/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/35/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/35", "id": 604633863, "node_id": "MDU6SXNzdWU2MDQ2MzM4NjM=", "number": 35, "title": "Not able to deploy function with .zip archive", "user": {"login": "yuri-sergiichuk", "id": 23313616, "node_id": "MDQ6VXNlcjIzMzEzNjE2", "avatar_url": "https://avatars2.githubusercontent.com/u/23313616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuri-sergiichuk", "html_url": "https://github.com/yuri-sergiichuk", "followers_url": "https://api.github.com/users/yuri-sergiichuk/followers", "following_url": "https://api.github.com/users/yuri-sergiichuk/following{/other_user}", "gists_url": "https://api.github.com/users/yuri-sergiichuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuri-sergiichuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuri-sergiichuk/subscriptions", "organizations_url": "https://api.github.com/users/yuri-sergiichuk/orgs", "repos_url": "https://api.github.com/users/yuri-sergiichuk/repos", "events_url": "https://api.github.com/users/yuri-sergiichuk/events{/privacy}", "received_events_url": "https://api.github.com/users/yuri-sergiichuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-22T10:14:32Z", "updated_at": "2020-04-22T17:01:55Z", "closed_at": "2020-04-22T17:01:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I do understand that the issue is not related to the `functions-framework` directly, but maybe someone from the team can reach the GCF team and ask them to check it out.\r\n\r\nSo, the issue is the following. I'm not able to deploy a GCF source as `.zip` archive via Cloud Console UI or using terraform. But if I unpack the function and go with `gcloud functions deploy` it works just fine. Here is the error message I got both from Cloud Console UI and from terraform:\r\n```\r\nError: Error waiting for Creating CloudFunctions Function: Error code 3, message: Build failed: {\"cacheStats\": [{\"status\": \"MISS\", \"hash\": \"8e51312351ee02e20ebdcdcefb100908ee770a1c81810601ddfcd599221c617b\", \"type\": \"docker_layer_cac\r\nhe\", \"level\": \"global\"}, {\"status\": \"MISS\", \"hash\": \"8e51312351ee02e20ebdcdcefb100908ee770a1c81810601ddfcd599221c617b\", \"type\": \"docker_layer_cache\", \"level\": \"project\"}]}\r\n```\r\n\r\nDoes anyone have some ideas about what could be wrong? Unfortunately, I cannot share to source code as it is under the NDA. I'll try to create a reproducible example and share it.\r\nMeanwhile, I have also created [issue](https://issuetracker.google.com/issues/154646028) in the public tracker.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/29", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/29/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/29/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/29", "id": 596524554, "node_id": "MDU6SXNzdWU1OTY1MjQ1NTQ=", "number": 29, "title": "Make it easier to debug functions in IDEs", "user": {"login": "yuri-sergiichuk", "id": 23313616, "node_id": "MDQ6VXNlcjIzMzEzNjE2", "avatar_url": "https://avatars2.githubusercontent.com/u/23313616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuri-sergiichuk", "html_url": "https://github.com/yuri-sergiichuk", "followers_url": "https://api.github.com/users/yuri-sergiichuk/followers", "following_url": "https://api.github.com/users/yuri-sergiichuk/following{/other_user}", "gists_url": "https://api.github.com/users/yuri-sergiichuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuri-sergiichuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuri-sergiichuk/subscriptions", "organizations_url": "https://api.github.com/users/yuri-sergiichuk/orgs", "repos_url": "https://api.github.com/users/yuri-sergiichuk/repos", "events_url": "https://api.github.com/users/yuri-sergiichuk/events{/privacy}", "received_events_url": "https://api.github.com/users/yuri-sergiichuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102876, "node_id": "MDU6TGFiZWwxNzY1MTAyODc2", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-04-08T12:00:43Z", "updated_at": "2020-06-09T15:26:19Z", "closed_at": "2020-04-08T19:27:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, it is super hard to configure the local debug of the functions in PyCharm, moreover, I found it impossible without hacking the `cli.py`.\r\n\r\nHere is a way to do it in PyCharm now:\r\n1. Add main function to the `cli.py`:\r\n    ```python\r\n    if __name__ == '__main__':\r\n        cli(sys.argv[1:])\r\n    ```\r\n1. Create PyCharm Python config and choose `functions_framework\\cli.py` as a script.\r\n1. Pass required params as `Parameters` in the configuration, e.g. `--port 8088 --signature-type http`, etc.\r\n1. Make sure to set the working directory to the project root (so that the functions framework is able to load the entry point function).\r\n1. Run the created configurations and use PyCharm debugger.\r\n\r\nWhat we can to make life easier:\r\n1. Create `__main__.py` in the functions_framework module and allow running the module as the CLI. Or, add the main function to the `cli.py` itself, maybe worth having both.\r\n2. Create well-structured documentation about debugging functions locally with popular IDEs (PyCharm, VSCode, others?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/28", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/28/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/28/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/28", "id": 592234292, "node_id": "MDU6SXNzdWU1OTIyMzQyOTI=", "number": 28, "title": "Deployment failure: Function failed on loading user code. Error message: File main.py is expected to contain a function named cleanEdges", "user": {"login": "AlbertoMQ", "id": 58190042, "node_id": "MDQ6VXNlcjU4MTkwMDQy", "avatar_url": "https://avatars2.githubusercontent.com/u/58190042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlbertoMQ", "html_url": "https://github.com/AlbertoMQ", "followers_url": "https://api.github.com/users/AlbertoMQ/followers", "following_url": "https://api.github.com/users/AlbertoMQ/following{/other_user}", "gists_url": "https://api.github.com/users/AlbertoMQ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlbertoMQ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlbertoMQ/subscriptions", "organizations_url": "https://api.github.com/users/AlbertoMQ/orgs", "repos_url": "https://api.github.com/users/AlbertoMQ/repos", "events_url": "https://api.github.com/users/AlbertoMQ/events{/privacy}", "received_events_url": "https://api.github.com/users/AlbertoMQ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102880, "node_id": "MDU6TGFiZWwxNzY1MTAyODgw", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/invalid", "name": "invalid", "color": "e4e669", "default": true, "description": "This doesn't seem right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-01T22:11:56Z", "updated_at": "2020-04-08T19:28:49Z", "closed_at": "2020-04-03T02:21:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting the error in title despite being able to see my code in the google cloud platform cloud functions console with the named function.\r\n\r\n```\r\nimport cloudstorage as gcs\r\n# from google.cloud import storage\r\nimport open3d \r\nimport networkx as nx\r\nimport numpy as np\r\n\r\nclient = gcs.Client()\r\nRETURN_BUCKET = 'outgoing_meshtools'\r\n\r\ndef cleanEdges(data, context):\r\n    ***content of function\r\n\r\n**other functions\r\n```\r\n\r\nTrigger: Cloud Storage\r\nEvent Type: Finalize/Create", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/27", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/27/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/27/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/27", "id": 589420941, "node_id": "MDU6SXNzdWU1ODk0MjA5NDE=", "number": 27, "title": "Adjust path handling for robots.txt and favicon.ico", "user": {"login": "asriniva", "id": 69502, "node_id": "MDQ6VXNlcjY5NTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/69502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asriniva", "html_url": "https://github.com/asriniva", "followers_url": "https://api.github.com/users/asriniva/followers", "following_url": "https://api.github.com/users/asriniva/following{/other_user}", "gists_url": "https://api.github.com/users/asriniva/gists{/gist_id}", "starred_url": "https://api.github.com/users/asriniva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asriniva/subscriptions", "organizations_url": "https://api.github.com/users/asriniva/orgs", "repos_url": "https://api.github.com/users/asriniva/repos", "events_url": "https://api.github.com/users/asriniva/events{/privacy}", "received_events_url": "https://api.github.com/users/asriniva/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102876, "node_id": "MDU6TGFiZWwxNzY1MTAyODc2", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-27T21:25:09Z", "updated_at": "2020-04-13T18:35:09Z", "closed_at": "2020-04-13T18:25:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Functions frameworks should listen on all paths and forward without modification except /robots.txt and /favicon.ico\r\n\r\nThis change was added in the nodejs functions framework here: https://github.com/GoogleCloudPlatform/functions-framework-nodejs/pull/121/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/24", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/24/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/24/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/24", "id": 573287456, "node_id": "MDU6SXNzdWU1NzMyODc0NTY=", "number": 24, "title": "How can I register sqlalchemy extension to the current flask application globally?", "user": {"login": "oxesoft", "id": 13771027, "node_id": "MDQ6VXNlcjEzNzcxMDI3", "avatar_url": "https://avatars3.githubusercontent.com/u/13771027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxesoft", "html_url": "https://github.com/oxesoft", "followers_url": "https://api.github.com/users/oxesoft/followers", "following_url": "https://api.github.com/users/oxesoft/following{/other_user}", "gists_url": "https://api.github.com/users/oxesoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxesoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxesoft/subscriptions", "organizations_url": "https://api.github.com/users/oxesoft/orgs", "repos_url": "https://api.github.com/users/oxesoft/repos", "events_url": "https://api.github.com/users/oxesoft/events{/privacy}", "received_events_url": "https://api.github.com/users/oxesoft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102881, "node_id": "MDU6TGFiZWwxNzY1MTAyODgx", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-29T12:41:14Z", "updated_at": "2020-03-13T15:29:34Z", "closed_at": "2020-02-29T15:56:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The default way of using sqlalchemy models is calling globally:\r\n```\r\ndb = SQLAlchemy()\r\ndb.init_app(app)\r\n```\r\nI don't see a way to get the \"app\" globally with functions-framework. sqlalchemy doesn't allow us registering it after a request is made. The desired use case is a simple:\r\n```\r\nresult = SomeTable.query.all()\r\n```\r\nMore information about using Flask-SqlAlchemy is [here](https://flask-sqlalchemy.palletsprojects.com/en/2.x/contexts/).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/19", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/19/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/19/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/19", "id": 563841784, "node_id": "MDU6SXNzdWU1NjM4NDE3ODQ=", "number": 19, "title": "make host configurable", "user": {"login": "kanekv", "id": 521149, "node_id": "MDQ6VXNlcjUyMTE0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/521149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kanekv", "html_url": "https://github.com/kanekv", "followers_url": "https://api.github.com/users/kanekv/followers", "following_url": "https://api.github.com/users/kanekv/following{/other_user}", "gists_url": "https://api.github.com/users/kanekv/gists{/gist_id}", "starred_url": "https://api.github.com/users/kanekv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kanekv/subscriptions", "organizations_url": "https://api.github.com/users/kanekv/orgs", "repos_url": "https://api.github.com/users/kanekv/repos", "events_url": "https://api.github.com/users/kanekv/events{/privacy}", "received_events_url": "https://api.github.com/users/kanekv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102876, "node_id": "MDU6TGFiZWwxNzY1MTAyODc2", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-12T08:44:37Z", "updated_at": "2020-02-20T22:16:36Z", "closed_at": "2020-02-20T20:53:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On mac every time it reloads there is a firewall alert because it's fixed listen on `0.0.0.0`. Can we add `--host` option to override the interface?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/14", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/14/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/14/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/14", "id": 561225966, "node_id": "MDU6SXNzdWU1NjEyMjU5NjY=", "number": 14, "title": "Adding dryrun option", "user": {"login": "asriniva", "id": 69502, "node_id": "MDQ6VXNlcjY5NTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/69502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asriniva", "html_url": "https://github.com/asriniva", "followers_url": "https://api.github.com/users/asriniva/followers", "following_url": "https://api.github.com/users/asriniva/following{/other_user}", "gists_url": "https://api.github.com/users/asriniva/gists{/gist_id}", "starred_url": "https://api.github.com/users/asriniva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asriniva/subscriptions", "organizations_url": "https://api.github.com/users/asriniva/orgs", "repos_url": "https://api.github.com/users/asriniva/repos", "events_url": "https://api.github.com/users/asriniva/events{/privacy}", "received_events_url": "https://api.github.com/users/asriniva/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102876, "node_id": "MDU6TGFiZWwxNzY1MTAyODc2", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-06T19:38:21Z", "updated_at": "2020-03-13T15:29:25Z", "closed_at": "2020-02-07T00:31:01Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "To be able to more easily catch syntax errors and related issues in the function before starting a server, a dryrun would be helpful. The function framework for Node.js has an option for this: https://github.com/GoogleCloudPlatform/functions-framework-nodejs/pull/118", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/11", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/11/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/11/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/11", "id": 554615589, "node_id": "MDU6SXNzdWU1NTQ2MTU1ODk=", "number": 11, "title": "Cut 1.1 Release on PyPi", "user": {"login": "grant", "id": 744973, "node_id": "MDQ6VXNlcjc0NDk3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/744973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grant", "html_url": "https://github.com/grant", "followers_url": "https://api.github.com/users/grant/followers", "following_url": "https://api.github.com/users/grant/following{/other_user}", "gists_url": "https://api.github.com/users/grant/gists{/gist_id}", "starred_url": "https://api.github.com/users/grant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grant/subscriptions", "organizations_url": "https://api.github.com/users/grant/orgs", "repos_url": "https://api.github.com/users/grant/repos", "events_url": "https://api.github.com/users/grant/events{/privacy}", "received_events_url": "https://api.github.com/users/grant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102876, "node_id": "MDU6TGFiZWwxNzY1MTAyODc2", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-24T09:00:34Z", "updated_at": "2020-04-08T19:29:09Z", "closed_at": "2020-01-30T18:49:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey @di, I think we need to cut a new release on pypi to update the signature-type typo.\r\n\r\nThe change seems to be on master but not released on pypi.\r\n\r\nRelated:\r\n- https://github.com/GoogleCloudPlatform/functions-framework-python/pull/10\r\n- https://github.com/GoogleCloudPlatform/functions-framework-python/pull/4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/6", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/6/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/6/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/6", "id": 551837317, "node_id": "MDU6SXNzdWU1NTE4MzczMTc=", "number": 6, "title": "Is there a way to automatically reload modifications to main.py?", "user": {"login": "ilpersi", "id": 43588107, "node_id": "MDQ6VXNlcjQzNTg4MTA3", "avatar_url": "https://avatars3.githubusercontent.com/u/43588107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilpersi", "html_url": "https://github.com/ilpersi", "followers_url": "https://api.github.com/users/ilpersi/followers", "following_url": "https://api.github.com/users/ilpersi/following{/other_user}", "gists_url": "https://api.github.com/users/ilpersi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilpersi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilpersi/subscriptions", "organizations_url": "https://api.github.com/users/ilpersi/orgs", "repos_url": "https://api.github.com/users/ilpersi/repos", "events_url": "https://api.github.com/users/ilpersi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilpersi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102872, "node_id": "MDU6TGFiZWwxNzY1MTAyODcy", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-18T22:59:17Z", "updated_at": "2020-02-06T21:58:01Z", "closed_at": "2020-01-30T17:08:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I know that in standard Flask you can do this in the following way:\r\n```\r\n$ export FLASK_APP=main.py\r\n$ export FLASK_ENV=development\r\n$ flask run\r\n```\r\n\r\nI've tried also with functions-framework with no luck: is there a possible workaround?\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/5", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/5/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/5/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/5", "id": 549064212, "node_id": "MDU6SXNzdWU1NDkwNjQyMTI=", "number": 5, "title": "Run function in debug mode", "user": {"login": "maikelrobier", "id": 16763041, "node_id": "MDQ6VXNlcjE2NzYzMDQx", "avatar_url": "https://avatars2.githubusercontent.com/u/16763041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maikelrobier", "html_url": "https://github.com/maikelrobier", "followers_url": "https://api.github.com/users/maikelrobier/followers", "following_url": "https://api.github.com/users/maikelrobier/following{/other_user}", "gists_url": "https://api.github.com/users/maikelrobier/gists{/gist_id}", "starred_url": "https://api.github.com/users/maikelrobier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maikelrobier/subscriptions", "organizations_url": "https://api.github.com/users/maikelrobier/orgs", "repos_url": "https://api.github.com/users/maikelrobier/repos", "events_url": "https://api.github.com/users/maikelrobier/events{/privacy}", "received_events_url": "https://api.github.com/users/maikelrobier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102872, "node_id": "MDU6TGFiZWwxNzY1MTAyODcy", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-13T17:05:32Z", "updated_at": "2020-02-06T21:57:44Z", "closed_at": "2020-01-30T17:42:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to run the flask server in debug mode?\r\n\r\nLet's say I need to debug the function code using the framework from VSCode for example, is there a way to do that currently?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/3", "repository_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python", "labels_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/3/comments", "events_url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/issues/3/events", "html_url": "https://github.com/GoogleCloudPlatform/functions-framework-python/issues/3", "id": 548305781, "node_id": "MDU6SXNzdWU1NDgzMDU3ODE=", "number": 3, "title": "Docs vs code - --signature-type or --signature_type?", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1765102870, "node_id": "MDU6TGFiZWwxNzY1MTAyODcw", "url": "https://api.github.com/repos/GoogleCloudPlatform/functions-framework-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-10T21:45:46Z", "updated_at": "2020-01-13T16:29:59Z", "closed_at": "2020-01-13T16:29:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, the documentation says the command line flag is `--signature-type` (which is matches the common style of - instead of _ in command line flags), but it's actually implemented as `--signature_type` - which is intended?", "performed_via_github_app": null, "score": 1.0}]}