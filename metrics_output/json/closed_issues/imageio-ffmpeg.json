{"total_count": 15, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/33", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/33/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/33/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/33", "id": 567905405, "node_id": "MDU6SXNzdWU1Njc5MDU0MDU=", "number": 33, "title": "0.4.0 regression on Linux: count_frames() freezes", "user": {"login": "mdraw", "id": 6719909, "node_id": "MDQ6VXNlcjY3MTk5MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6719909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdraw", "html_url": "https://github.com/mdraw", "followers_url": "https://api.github.com/users/mdraw/followers", "following_url": "https://api.github.com/users/mdraw/following{/other_user}", "gists_url": "https://api.github.com/users/mdraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdraw/subscriptions", "organizations_url": "https://api.github.com/users/mdraw/orgs", "repos_url": "https://api.github.com/users/mdraw/repos", "events_url": "https://api.github.com/users/mdraw/events{/privacy}", "received_events_url": "https://api.github.com/users/mdraw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1211298401, "node_id": "MDU6TGFiZWwxMjExMjk4NDAx", "url": "https://api.github.com/repos/imageio/imageio-ffmpeg/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-19T22:58:35Z", "updated_at": "2020-02-25T16:02:46Z", "closed_at": "2020-02-24T14:06:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "When updating to imageio-ffmpeg 0.4.0, my code which uses the `imageio.plugins.ffmpeg.FfmpegFormat.Reader.count_frames()` function freezes with 0% CPU utilization. This happened on two different Linux systems and multiple video files from different sources today, so I investigated a bit and found that reverting the change in this line https://github.com/imageio/imageio-ffmpeg/commit/a19c76161660523e9ea8374f61c87de1de4f5619#diff-f32de983d7bf3c1014870e92de0d1882R41 back to the previous version\r\n\r\n    out = subprocess.check_output(cmd, stderr=subprocess.STDOUT, shell=ISWIN)\r\n\r\nfixes the freezing on my system.\r\nI don't know what exactly is happening there, I only noticed that when sending a `KeyboardInterrupt`, the traceback always shows that it was currently executing the line\r\n\r\n    out = subprocess.check_output(cmd, stderr=subprocess.STDOUT, **_popen_kwargs())\r\n\r\nin `imageio_ffmpeg/_io.py`.\r\n\r\nA minimal code example to reproduce this, given that `a.mp4` is a regular video file:\r\n```\r\nimport imageio\r\nr = imageio.get_reader('a.mp4')\r\nr.count_frames()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/30", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/30/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/30/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/30", "id": 566341452, "node_id": "MDU6SXNzdWU1NjYzNDE0NTI=", "number": 30, "title": "Set ffmpeg_timeout to zero by default.", "user": {"login": "almarklein", "id": 3015475, "node_id": "MDQ6VXNlcjMwMTU0NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3015475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/almarklein", "html_url": "https://github.com/almarklein", "followers_url": "https://api.github.com/users/almarklein/followers", "following_url": "https://api.github.com/users/almarklein/following{/other_user}", "gists_url": "https://api.github.com/users/almarklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/almarklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/almarklein/subscriptions", "organizations_url": "https://api.github.com/users/almarklein/orgs", "repos_url": "https://api.github.com/users/almarklein/repos", "events_url": "https://api.github.com/users/almarklein/events{/privacy}", "received_events_url": "https://api.github.com/users/almarklein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-17T14:38:07Z", "updated_at": "2020-02-18T09:13:53Z", "closed_at": "2020-02-18T09:13:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "On an Ubuntu 18.04 VM, I can easily reproduce ffmpeg being killed using this script:\r\n\r\n```py\r\nimport imageio_ffmpeg\r\nimport numpy as np\r\n\r\nims = [np.random.uniform(0, 255, size=(1000, 1000, 3)).astype(np.uint8) for i in range(10)]\r\n\r\nw = imageio_ffmpeg.write_frames(\"/home/almar/Desktop/foo.mp4\", (1000, 1000), ffmpeg_timeout=0)\r\nw.send(None)\r\nfor i in range(200):\r\n    w.send(ims[i % 10])\r\n    print(i)\r\nw.close()\r\nprint(\"closed\")\r\n```\r\n\r\nIf we can assume ffmpeg to not hang doing nothing, it would be much better to set the default timeout to zero (i.e. wait until ffmpeg is done). However, we probably want to combine this with proper keyboardinterrupt handling #4.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/28", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/28/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/28/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/28", "id": 536768986, "node_id": "MDU6SXNzdWU1MzY3Njg5ODY=", "number": 28, "title": "Unable to find a suitable output format for 'temp-file'", "user": {"login": "kunadawa", "id": 310578, "node_id": "MDQ6VXNlcjMxMDU3OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/310578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kunadawa", "html_url": "https://github.com/kunadawa", "followers_url": "https://api.github.com/users/kunadawa/followers", "following_url": "https://api.github.com/users/kunadawa/following{/other_user}", "gists_url": "https://api.github.com/users/kunadawa/gists{/gist_id}", "starred_url": "https://api.github.com/users/kunadawa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kunadawa/subscriptions", "organizations_url": "https://api.github.com/users/kunadawa/orgs", "repos_url": "https://api.github.com/users/kunadawa/repos", "events_url": "https://api.github.com/users/kunadawa/events{/privacy}", "received_events_url": "https://api.github.com/users/kunadawa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-12T05:42:19Z", "updated_at": "2020-02-18T11:46:25Z", "closed_at": "2020-02-18T11:46:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to read a video file and write it to a socket using the code below and it is failing. I would appreciate your help:\r\n\r\n```\r\nasync def write_video_to_stream(path_to_video, path_to_socket):\r\n    video_reader = imageio.get_reader(path_to_video)\r\n    sock = await create_socket(path_to_socket)\r\n    _, socket_writer = await asyncio.open_unix_connection(sock=sock)\r\n    img_writer = imageio.get_writer(socket_writer, format='FFMPEG', ffmpeg_log_level='debug')\r\n    for frame in video_reader:\r\n        img_writer.append_data(frame)\r\n        #await socket_writer.drain()\r\n    img_writer.close()\r\n    socket_writer.close()\r\n```\r\n\r\nThe code is failing with the stacktrace below (debug logging turned on):\r\n\r\n```\r\n(object-detection) mugo@eric-aspire:~/ai-object-detection/detection-visualization$ python socket_stream.py ~/Videos/dog-rescue-water.mp4 /tmp/sock2\r\nffmpeg version 4.1-static https://johnvansickle.com/ffmpeg/  Copyright (c) 2000-2018 the FFmpeg developers\r\n  built with gcc 6.3.0 (Debian 6.3.0-18+deb9u1) 20170516\r\n  configuration: --enable-gpl --enable-version3 --enable-static --disable-debug --disable-ffplay --disable-indev=sndio --disable-outdev=sndio --cc=gcc-6 --enable-fontconfig --enable-frei0r --enable-gnutls --enable-gray --enable-libaom --enable-libfribidi --enable-libass --enable-libvmaf --enable-libfreetype --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-librubberband --enable-libsoxr --enable-libspeex --enable-libvorbis --enable-libopus --enable-libtheora --enable-libvidstab --enable-libvo-amrwbenc --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg\r\n  libavutil      56. 22.100 / 56. 22.100\r\n  libavcodec     58. 35.100 / 58. 35.100\r\n  libavformat    58. 20.100 / 58. 20.100\r\n  libavdevice    58.  5.100 / 58.  5.100\r\n  libavfilter     7. 40.101 /  7. 40.101\r\n  libswscale      5.  3.100 /  5.  3.100\r\n  libswresample   3.  3.100 /  3.  3.100\r\n  libpostproc    55.  3.100 / 55.  3.100\r\nSplitting the commandline.\r\nReading option '-y' ... matched as option 'y' (overwrite output files) with argument '1'.\r\nReading option '-f' ... matched as option 'f' (force format) with argument 'rawvideo'.\r\nReading option '-vcodec' ... matched as option 'vcodec' (force video codec ('copy' to copy stream)) with argument 'rawvideo'.\r\nReading option '-s' ... matched as option 's' (set frame size (WxH or abbreviation)) with argument '400x400'.\r\nReading option '-pix_fmt' ... matched as option 'pix_fmt' (set pixel format) with argument 'rgb24'.\r\nReading option '-r' ... matched as option 'r' (set frame rate (Hz value, fraction or abbreviation)) with argument '10.00'.\r\nReading option '-i' ... matched as input url with argument '-'.\r\nReading option '-an' ... matched as option 'an' (disable audio) with argument '1'.\r\nReading option '-vcodec' ... matched as option 'vcodec' (force video codec ('copy' to copy stream)) with argument 'libx264'.\r\nReading option '-pix_fmt' ... matched as option 'pix_fmt' (set pixel format) with argument 'yuv420p'.\r\nReading option '-crf' ... matched as AVOption 'crf' with argument '25'.\r\nReading option '-v' ... matched as option 'v' (set logging level) with argument 'debug'.\r\nReading option '/tmp/imageio_8sv61nse' ... matched as output url.\r\nFinished splitting the commandline.\r\nParsing a group of options: global .\r\nApplying option y (overwrite output files) with argument 1.\r\nApplying option v (set logging level) with argument debug.\r\nSuccessfully parsed a group of options.\r\nParsing a group of options: input url -.\r\nApplying option f (force format) with argument rawvideo.\r\nApplying option vcodec (force video codec ('copy' to copy stream)) with argument rawvideo.\r\nApplying option s (set frame size (WxH or abbreviation)) with argument 400x400.\r\nApplying option pix_fmt (set pixel format) with argument rgb24.\r\nApplying option r (set frame rate (Hz value, fraction or abbreviation)) with argument 10.00.\r\nSuccessfully parsed a group of options.\r\nOpening an input file: -.\r\n[rawvideo @ 0x6584d00] Opening 'pipe:' for reading\r\n[pipe @ 0x6585680] Setting default whitelist 'crypto'\r\n[rawvideo @ 0x6584d00] Before avformat_find_stream_info() pos: 0 bytes read:32768 seeks:0 nb_streams:1\r\n[rawvideo @ 0x6584d00] All info found\r\n[rawvideo @ 0x6584d00] After avformat_find_stream_info() pos: 480000 bytes read:480000 seeks:0 frames:1\r\nInput #0, rawvideo, from 'pipe:':\r\n  Duration: N/A, start: 0.000000, bitrate: 38400 kb/s\r\n    Stream #0:0, 1, 1/10: Video: rawvideo, 1 reference frame (RGB[24] / 0x18424752), rgb24, 400x400, 0/1, 38400 kb/s, 10 tbr, 10 tbn, 10 tbc\r\nSuccessfully opened the file.\r\nParsing a group of options: output url /tmp/imageio_8sv61nse.\r\nApplying option an (disable audio) with argument 1.\r\nApplying option vcodec (force video codec ('copy' to copy stream)) with argument libx264.\r\nApplying option pix_fmt (set pixel format) with argument yuv420p.\r\nSuccessfully parsed a group of options.\r\nOpening an output file: /tmp/imageio_8sv61nse.\r\n[NULL @ 0x65870c0] Unable to find a suitable output format for '/tmp/imageio_8sv61nse'\r\n/tmp/imageio_8sv61nse: Invalid argument\r\n[AVIOContext @ 0x6585500] Statistics: 480000 bytes read, 0 seeks\r\nFatal read error on socket transport\r\nprotocol: <asyncio.streams.StreamReaderProtocol object at 0x7fa09efcc2b0>\r\ntransport: <_SelectorSocketTransport fd=7 read=polling write=<idle, bufsize=0>>\r\nTraceback (most recent call last):\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/asyncio/selector_events.py\", line 801, in _read_ready__data_received\r\n    data = self._sock.recv(self.max_size)\r\nOSError: [Errno 22] Invalid argument\r\nTraceback (most recent call last):\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/site-packages/imageio_ffmpeg/_io.py\", line 411, in write_frames\r\n    p.stdin.write(bb)\r\nBrokenPipeError: [Errno 32] Broken pipe\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"socket_stream.py\", line 33, in <module>\r\n    asyncio.run(write_video_to_stream(ns.path_to_video, ns.path_to_socket))\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/asyncio/runners.py\", line 43, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/asyncio/base_events.py\", line 584, in run_until_complete\r\n    return future.result()\r\n  File \"socket_stream.py\", line 11, in write_video_to_stream\r\n    img_writer.append_data(frame)\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/site-packages/imageio/core/format.py\", line 492, in append_data\r\n    return self._append_data(im, total_meta)\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/site-packages/imageio/plugins/ffmpeg.py\", line 572, in _append_data\r\n    self._write_gen.send(im)\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/site-packages/imageio_ffmpeg/_io.py\", line 418, in write_frames\r\n    raise IOError(msg)\r\nOSError: [Errno 32] Broken pipe\r\n\r\nFFMPEG COMMAND:\r\n/home/mugo/miniconda3/envs/object-detection/lib/python3.7/site-packages/imageio_ffmpeg/binaries/ffmpeg-linux64-v4.1 -y -f rawvideo -vcodec rawvideo -s 400x400 -pix_fmt rgb24 -r 10.00 -i - -an -vcodec libx264 -pix_fmt yuv420p -crf 25 -v debug /tmp/imageio_8sv61nse\r\n\r\nFFMPEG STDERR OUTPUT:\r\n\r\nFatal Python error: could not acquire lock for <_io.BufferedReader name=11> at interpreter shutdown, possibly due to daemon threads\r\n\r\nThread 0x00007fa0a65a0700 (most recent call first):\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/site-packages/imageio_ffmpeg/_parsing.py\", line 61 in run\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/threading.py\", line 917 in _bootstrap_inner\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/threading.py\", line 885 in _bootstrap\r\n\r\nCurrent thread 0x00007fa0aad6d740 (most recent call first):\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/subprocess.py\", line 1704 in _communicate\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/subprocess.py\", line 939 in communicate\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/site-packages/imageio_ffmpeg/_io.py\", line 193 in read_frames\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/site-packages/imageio/plugins/ffmpeg.py\", line 343 in _close\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/site-packages/imageio/core/format.py\", line 252 in close\r\n  File \"/home/mugo/miniconda3/envs/object-detection/lib/python3.7/site-packages/imageio/core/format.py\", line 241 in __del__\r\nAborted (core dumped)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/26", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/26/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/26/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/26", "id": 534512165, "node_id": "MDU6SXNzdWU1MzQ1MTIxNjU=", "number": 26, "title": "Calling `imageio_ffmpeg.get_ffmpeg_exe()` under CygWin raises an exception", "user": {"login": "dspinellis", "id": 1212716, "node_id": "MDQ6VXNlcjEyMTI3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1212716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dspinellis", "html_url": "https://github.com/dspinellis", "followers_url": "https://api.github.com/users/dspinellis/followers", "following_url": "https://api.github.com/users/dspinellis/following{/other_user}", "gists_url": "https://api.github.com/users/dspinellis/gists{/gist_id}", "starred_url": "https://api.github.com/users/dspinellis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dspinellis/subscriptions", "organizations_url": "https://api.github.com/users/dspinellis/orgs", "repos_url": "https://api.github.com/users/dspinellis/repos", "events_url": "https://api.github.com/users/dspinellis/events{/privacy}", "received_events_url": "https://api.github.com/users/dspinellis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1211298401, "node_id": "MDU6TGFiZWwxMjExMjk4NDAx", "url": "https://api.github.com/repos/imageio/imageio-ffmpeg/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-08T09:01:45Z", "updated_at": "2019-12-16T10:40:32Z", "closed_at": "2019-12-16T10:40:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Calling `imageio_ffmpeg.get_ffmpeg_exe()` under CygWin raises an exception.\r\n\r\n```\r\n$ python3\r\nPython 3.6.8 (default, Feb 14 2019, 22:09:48)\r\n[GCC 7.4.0] on cygwin\r\n>>> import imageio_ffmpeg\r\n>>> imageio_ffmpeg.get_ffmpeg_exe()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.6/site-packages/imageio_ffmpeg/_utils.py\", line 36, in get_ffmpeg_exe\r\n    if plat.startswith(\"win\"):\r\nAttributeError: 'NoneType' object has no attribute 'startswith'\r\n>>>\r\n```\r\n\r\nThe `get_platform` function, which is used to set `plat`, seems to work fine with a normal import.\r\n```\r\n>>> import sysconfig\r\n>>> sysconfig.get_platform()\r\n'cygwin-3.0.6-x86_64'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/24", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/24/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/24/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/24", "id": 524463748, "node_id": "MDU6SXNzdWU1MjQ0NjM3NDg=", "number": 24, "title": "Custom number of bytes per pixel in read_frames", "user": {"login": "mastak", "id": 628807, "node_id": "MDQ6VXNlcjYyODgwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/628807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mastak", "html_url": "https://github.com/mastak", "followers_url": "https://api.github.com/users/mastak/followers", "following_url": "https://api.github.com/users/mastak/following{/other_user}", "gists_url": "https://api.github.com/users/mastak/gists{/gist_id}", "starred_url": "https://api.github.com/users/mastak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mastak/subscriptions", "organizations_url": "https://api.github.com/users/mastak/orgs", "repos_url": "https://api.github.com/users/mastak/repos", "events_url": "https://api.github.com/users/mastak/events{/privacy}", "received_events_url": "https://api.github.com/users/mastak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-18T16:06:57Z", "updated_at": "2020-02-17T13:35:20Z", "closed_at": "2020-02-17T13:35:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Y\u2032UV format can have a different number of bytes per pixel:\r\nhttps://en.wikipedia.org/wiki/YUV#Converting_between_Y%E2%80%B2UV_and_RGB\r\n\r\nAnd some variants such as:\r\n```\r\nYUV420p   6 bytes per 4 pixels\r\n```\r\ncan't be set as `bpp` for `read_frames`. As a result, there is broken `framesize` and we have RuntimeError with `End of file reached before full frame could be read`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/20", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/20/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/20/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/20", "id": 461099453, "node_id": "MDU6SXNzdWU0NjEwOTk0NTM=", "number": 20, "title": "SIGSEGV when using threads", "user": {"login": "christopherhesse", "id": 440336, "node_id": "MDQ6VXNlcjQ0MDMzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/440336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christopherhesse", "html_url": "https://github.com/christopherhesse", "followers_url": "https://api.github.com/users/christopherhesse/followers", "following_url": "https://api.github.com/users/christopherhesse/following{/other_user}", "gists_url": "https://api.github.com/users/christopherhesse/gists{/gist_id}", "starred_url": "https://api.github.com/users/christopherhesse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christopherhesse/subscriptions", "organizations_url": "https://api.github.com/users/christopherhesse/orgs", "repos_url": "https://api.github.com/users/christopherhesse/repos", "events_url": "https://api.github.com/users/christopherhesse/events{/privacy}", "received_events_url": "https://api.github.com/users/christopherhesse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1211298401, "node_id": "MDU6TGFiZWwxMjExMjk4NDAx", "url": "https://api.github.com/repos/imageio/imageio-ffmpeg/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-26T17:41:53Z", "updated_at": "2020-02-18T09:13:53Z", "closed_at": "2020-02-18T09:13:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This script will segfault pretty reliably when using imageio.  It's hard to say if this is an imageio error, or even an imageio-ffmpeg error (maybe this python build is broken or something), but doesn't happen when using the image loading backend and may be related to #17.\r\n\r\nhttps://github.com/christopherhesse/imageio-sigsegv", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/18", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/18/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/18/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/18", "id": 454958467, "node_id": "MDU6SXNzdWU0NTQ5NTg0Njc=", "number": 18, "title": "logger warnings are a bit much", "user": {"login": "christopherhesse", "id": 440336, "node_id": "MDQ6VXNlcjQ0MDMzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/440336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christopherhesse", "html_url": "https://github.com/christopherhesse", "followers_url": "https://api.github.com/users/christopherhesse/followers", "following_url": "https://api.github.com/users/christopherhesse/following{/other_user}", "gists_url": "https://api.github.com/users/christopherhesse/gists{/gist_id}", "starred_url": "https://api.github.com/users/christopherhesse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christopherhesse/subscriptions", "organizations_url": "https://api.github.com/users/christopherhesse/orgs", "repos_url": "https://api.github.com/users/christopherhesse/repos", "events_url": "https://api.github.com/users/christopherhesse/events{/privacy}", "received_events_url": "https://api.github.com/users/christopherhesse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1211298408, "node_id": "MDU6TGFiZWwxMjExMjk4NDA4", "url": "https://api.github.com/repos/imageio/imageio-ffmpeg/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-12T00:23:05Z", "updated_at": "2019-06-17T17:20:07Z", "closed_at": "2019-06-17T17:20:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a lot of warning output from the logger, and no apparent way to disable it.\r\n\r\nThere's a python library for warnings in the stdlib: https://docs.python.org/3/library/warnings.html\r\n\r\nUsing this instead of the root logger would make it easier to discard the logging warnings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/17", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/17/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/17/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/17", "id": 454956453, "node_id": "MDU6SXNzdWU0NTQ5NTY0NTM=", "number": 17, "title": "Hang in subprocess communicate", "user": {"login": "christopherhesse", "id": 440336, "node_id": "MDQ6VXNlcjQ0MDMzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/440336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christopherhesse", "html_url": "https://github.com/christopherhesse", "followers_url": "https://api.github.com/users/christopherhesse/followers", "following_url": "https://api.github.com/users/christopherhesse/following{/other_user}", "gists_url": "https://api.github.com/users/christopherhesse/gists{/gist_id}", "starred_url": "https://api.github.com/users/christopherhesse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christopherhesse/subscriptions", "organizations_url": "https://api.github.com/users/christopherhesse/orgs", "repos_url": "https://api.github.com/users/christopherhesse/repos", "events_url": "https://api.github.com/users/christopherhesse/events{/privacy}", "received_events_url": "https://api.github.com/users/christopherhesse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-06-12T00:13:27Z", "updated_at": "2020-02-18T09:12:04Z", "closed_at": "2020-02-17T13:49:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting a weird hang when using this format in imageio (0.3.0).\r\n\r\n```\r\npy-spy --dump --pid 43792\r\nThread 0x7FA50A5B7700 (active)\r\n         run (imageio_ffmpeg/_parsing.py:61)\r\n         _bootstrap_inner (threading.py:917)\r\n         _bootstrap (threading.py:885)\r\nThread 0x7FA57CB96700 (active)\r\n         _communicate (subprocess.py:1701)\r\n         communicate (subprocess.py:939)\r\n         read_frames (imageio_ffmpeg/_io.py:193)\r\n         _close (imageio/plugins/ffmpeg.py:342)\r\n         close (imageio/core/format.py:252)\r\n....\r\n```\r\n\r\nIt looks like it's blocking forever trying to send \"q\" to the child process, should that have a timeout on it?  I'm not sure what causes this issue but it seems to happen unreliably in my script.  Creating a reduced version would be challenging because it is rare but the script runs for a long time.\r\n\r\nI see that there is some code to just kill the subprocess, but that code is disabled.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/13", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/13/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/13/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/13", "id": 424609412, "node_id": "MDU6SXNzdWU0MjQ2MDk0MTI=", "number": 13, "title": "Race condition: We had to kill ffmpeg to stop it.", "user": {"login": "TinyTheBrontosaurus", "id": 18402550, "node_id": "MDQ6VXNlcjE4NDAyNTUw", "avatar_url": "https://avatars1.githubusercontent.com/u/18402550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TinyTheBrontosaurus", "html_url": "https://github.com/TinyTheBrontosaurus", "followers_url": "https://api.github.com/users/TinyTheBrontosaurus/followers", "following_url": "https://api.github.com/users/TinyTheBrontosaurus/following{/other_user}", "gists_url": "https://api.github.com/users/TinyTheBrontosaurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/TinyTheBrontosaurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TinyTheBrontosaurus/subscriptions", "organizations_url": "https://api.github.com/users/TinyTheBrontosaurus/orgs", "repos_url": "https://api.github.com/users/TinyTheBrontosaurus/repos", "events_url": "https://api.github.com/users/TinyTheBrontosaurus/events{/privacy}", "received_events_url": "https://api.github.com/users/TinyTheBrontosaurus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 39, "created_at": "2019-03-24T12:50:59Z", "updated_at": "2019-08-22T17:23:36Z", "closed_at": "2019-04-12T08:54:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to encode several `mp4`s at a time, and all of the larger ones give me the message `We had to kill ffmpeg to stop it.` Most of the files for which this message is printed are corrupted. Looking at the code, there appears to be a race condition in there where it only gives `ffmpeg` 2.5s to clean up. Is this needed? Or is there a way to disable that? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/12", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/12/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/12/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/12", "id": 409965852, "node_id": "MDU6SXNzdWU0MDk5NjU4NTI=", "number": 12, "title": "tarball downloaded via pip install ", "user": {"login": "das7pad", "id": 17931887, "node_id": "MDQ6VXNlcjE3OTMxODg3", "avatar_url": "https://avatars3.githubusercontent.com/u/17931887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/das7pad", "html_url": "https://github.com/das7pad", "followers_url": "https://api.github.com/users/das7pad/followers", "following_url": "https://api.github.com/users/das7pad/following{/other_user}", "gists_url": "https://api.github.com/users/das7pad/gists{/gist_id}", "starred_url": "https://api.github.com/users/das7pad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/das7pad/subscriptions", "organizations_url": "https://api.github.com/users/das7pad/orgs", "repos_url": "https://api.github.com/users/das7pad/repos", "events_url": "https://api.github.com/users/das7pad/events{/privacy}", "received_events_url": "https://api.github.com/users/das7pad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-13T19:33:13Z", "updated_at": "2019-04-12T09:02:16Z", "closed_at": "2019-04-12T09:02:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure yet who to blame, but the wheel is not always downloaded via `pip install imageio-ffmpeg`.\r\n\r\nThis combination for example downloaded the tar ball instead.\r\n\r\n- `pip==18.1` (previous major release)\r\n- `wheel==0.32.0` (latest)\r\n- `imageio-ffmpeg==0.2.0`\r\n\r\n\r\nDemo in docker for a 100% clean environment:\r\n```\r\n$ docker run --rm --tty python:3.7 bash -c \"\\\r\n   pip install pip==18.1 wheel==0.33.0 \\\r\n&& pip install imageio-ffmpeg==0.2.0 \\\r\n&& find /usr/local/lib/python3.7/site-packages/imageio_ffmpeg/binaries/\"\r\n# <snip>\r\n# /usr/local/lib/python3.7/site-packages/imageio_ffmpeg/binaries/\r\n# /usr/local/lib/python3.7/site-packages/imageio_ffmpeg/binaries/README.md\r\n```\r\n\r\n---\r\n\r\nRelated issue: https://github.com/Zulko/moviepy/issues/906", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/10", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/10/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/10/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/10", "id": 407594944, "node_id": "MDU6SXNzdWU0MDc1OTQ5NDQ=", "number": 10, "title": "Create manifest file", "user": {"login": "almarklein", "id": 3015475, "node_id": "MDQ6VXNlcjMwMTU0NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3015475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/almarklein", "html_url": "https://github.com/almarklein", "followers_url": "https://api.github.com/users/almarklein/followers", "following_url": "https://api.github.com/users/almarklein/following{/other_user}", "gists_url": "https://api.github.com/users/almarklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/almarklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/almarklein/subscriptions", "organizations_url": "https://api.github.com/users/almarklein/orgs", "repos_url": "https://api.github.com/users/almarklein/repos", "events_url": "https://api.github.com/users/almarklein/events{/privacy}", "received_events_url": "https://api.github.com/users/almarklein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-07T08:54:05Z", "updated_at": "2019-02-10T16:18:10Z", "closed_at": "2019-02-10T16:18:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "To include license file, for e.g. conda package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/9", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/9/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/9/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/9", "id": 407442714, "node_id": "MDU6SXNzdWU0MDc0NDI3MTQ=", "number": 9, "title": "What if a user wants to bring her/his own ffmpeg?", "user": {"login": "almarklein", "id": 3015475, "node_id": "MDQ6VXNlcjMwMTU0NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3015475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/almarklein", "html_url": "https://github.com/almarklein", "followers_url": "https://api.github.com/users/almarklein/followers", "following_url": "https://api.github.com/users/almarklein/following{/other_user}", "gists_url": "https://api.github.com/users/almarklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/almarklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/almarklein/subscriptions", "organizations_url": "https://api.github.com/users/almarklein/orgs", "repos_url": "https://api.github.com/users/almarklein/repos", "events_url": "https://api.github.com/users/almarklein/events{/privacy}", "received_events_url": "https://api.github.com/users/almarklein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-02-06T21:38:58Z", "updated_at": "2019-02-10T16:47:54Z", "closed_at": "2019-02-10T16:47:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "* For pip one can use `--no-binary` to force installing the source-only version.\r\n* For conda, I propose that we make a conda recipe that does not include the ffmpeg exe, but depends on the ffmpeg conda package. Then one can use `conda install --no-deps imageio-ffmpeg` to install just the wrapper.\r\n\r\nThoughts?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/7", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/7/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/7/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/7", "id": 407249187, "node_id": "MDU6SXNzdWU0MDcyNDkxODc=", "number": 7, "title": "Use pkg_resources to get binary", "user": {"login": "paulmueller", "id": 2853022, "node_id": "MDQ6VXNlcjI4NTMwMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2853022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulmueller", "html_url": "https://github.com/paulmueller", "followers_url": "https://api.github.com/users/paulmueller/followers", "following_url": "https://api.github.com/users/paulmueller/following{/other_user}", "gists_url": "https://api.github.com/users/paulmueller/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulmueller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulmueller/subscriptions", "organizations_url": "https://api.github.com/users/paulmueller/orgs", "repos_url": "https://api.github.com/users/paulmueller/repos", "events_url": "https://api.github.com/users/paulmueller/events{/privacy}", "received_events_url": "https://api.github.com/users/paulmueller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-06T14:01:02Z", "updated_at": "2019-02-06T21:42:54Z", "closed_at": "2019-02-06T21:42:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would suggest to use ``pkg_resources`` to get the binary. This also enables getting the binary when the package is zipped (for some reason). I also read somewhere that this is the better approach.\r\n\r\n```python\r\nimport pathlib\r\nfrom pkg_resources import resource_filename\r\n\r\nbinaries_dir = pathlib.Path(resource_filename(\"imageio\", \"binaries\"))\r\n```\r\n\r\nI could create a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/6", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/6/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/6/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/6", "id": 407246122, "node_id": "MDU6SXNzdWU0MDcyNDYxMjI=", "number": 6, "title": "Migrate to pathlib?", "user": {"login": "paulmueller", "id": 2853022, "node_id": "MDQ6VXNlcjI4NTMwMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2853022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulmueller", "html_url": "https://github.com/paulmueller", "followers_url": "https://api.github.com/users/paulmueller/followers", "following_url": "https://api.github.com/users/paulmueller/following{/other_user}", "gists_url": "https://api.github.com/users/paulmueller/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulmueller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulmueller/subscriptions", "organizations_url": "https://api.github.com/users/paulmueller/orgs", "repos_url": "https://api.github.com/users/paulmueller/repos", "events_url": "https://api.github.com/users/paulmueller/events{/privacy}", "received_events_url": "https://api.github.com/users/paulmueller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-02-06T13:54:20Z", "updated_at": "2019-02-07T12:43:10Z", "closed_at": "2019-02-06T14:38:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since imageio-ffmpeg requires Python>=3.4, I would suggest migrating to pathlib.\r\nI could create a PR for that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/4", "repository_url": "https://api.github.com/repos/imageio/imageio-ffmpeg", "labels_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/4/comments", "events_url": "https://api.github.com/repos/imageio/imageio-ffmpeg/issues/4/events", "html_url": "https://github.com/imageio/imageio-ffmpeg/issues/4", "id": 406792207, "node_id": "MDU6SXNzdWU0MDY3OTIyMDc=", "number": 4, "title": "FFMPEG reader fails after KeyboardInterrupt", "user": {"login": "sorenrasmussen", "id": 2952894, "node_id": "MDQ6VXNlcjI5NTI4OTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2952894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sorenrasmussen", "html_url": "https://github.com/sorenrasmussen", "followers_url": "https://api.github.com/users/sorenrasmussen/followers", "following_url": "https://api.github.com/users/sorenrasmussen/following{/other_user}", "gists_url": "https://api.github.com/users/sorenrasmussen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sorenrasmussen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sorenrasmussen/subscriptions", "organizations_url": "https://api.github.com/users/sorenrasmussen/orgs", "repos_url": "https://api.github.com/users/sorenrasmussen/repos", "events_url": "https://api.github.com/users/sorenrasmussen/events{/privacy}", "received_events_url": "https://api.github.com/users/sorenrasmussen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-18T09:41:07Z", "updated_at": "2020-02-18T09:13:53Z", "closed_at": "2020-02-18T09:13:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "After a manual KeyboardInterrupt ([Ctrl]+[c]), reading a frame with (index > 0) causes an FFMPEG error.\r\n\r\n```\r\nimport imageio\r\nreader = imageio.get_reader(\"imageio:cockatoo.mp4\",format=\"ffmpeg\")\r\n\r\n#reader.get_data(2) #Initializing the reader by reading some frame here will cause the error to go away\r\n\r\ntry:\r\n    input(\"Do a manual KeyboardInterrupt [Ctrl]+[c] (raising an error with code won't trigger the error)\")\r\nexcept:\r\n    print(reader.get_data(1)) #Reading some frame, n>0 fails.\r\n    print(reader.get_data(0)) #Reading frame 0 works fine.\r\n```\r\n\r\n\r\n**System:**\r\nImageio 2.4.1\r\nPython 3.6.5\r\nFFMPEG 3.2.4\r\nLinux 64bit", "performed_via_github_app": null, "score": 1.0}]}