{"total_count": 368, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/gboeing/osmnx/issues/548", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/548/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/548/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/548/events", "html_url": "https://github.com/gboeing/osmnx/issues/548", "id": 683243009, "node_id": "MDU6SXNzdWU2ODMyNDMwMDk=", "number": 548, "title": "No Attribute ox.plot_shape", "user": {"login": "tsp2123", "id": 39416100, "node_id": "MDQ6VXNlcjM5NDE2MTAw", "avatar_url": "https://avatars3.githubusercontent.com/u/39416100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsp2123", "html_url": "https://github.com/tsp2123", "followers_url": "https://api.github.com/users/tsp2123/followers", "following_url": "https://api.github.com/users/tsp2123/following{/other_user}", "gists_url": "https://api.github.com/users/tsp2123/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsp2123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsp2123/subscriptions", "organizations_url": "https://api.github.com/users/tsp2123/orgs", "repos_url": "https://api.github.com/users/tsp2123/repos", "events_url": "https://api.github.com/users/tsp2123/events{/privacy}", "received_events_url": "https://api.github.com/users/tsp2123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165092, "node_id": "MDU6TGFiZWw0MTMxNjUwOTI=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-21T04:02:26Z", "updated_at": "2020-08-21T16:17:19Z", "closed_at": "2020-08-21T16:17:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Read these instructions carefully**\r\n\r\n**Problem description**\r\n  - What did you do? I tried to use the code: `fig, ax = ox.plot_shape(city)`\r\n\r\n  - What did you expect to happen? I was expecting for this code to help me plot the geometry called on this block of code as shown here: https://notebooks.azure.com/bradcavanagh/projects/osmnx-examples/html/notebooks/02-example-osm-to-shapefile.ipynb\r\n\r\n  - And what actually happened instead? I got the attribute error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-46-00e8d8737944> in <module>\r\n      5 print(city.crs)\r\n      6 city = ox.project_gdf(city)\r\n----> 7 fig, ax = ox.plot_shape(city)\r\n      8 print(city.crs)\r\n\r\nAttributeError: module 'osmnx' has no attribute 'plot_shape'\r\n```\r\n\r\n**Environment information**\r\n  - What operating system are you using? Mac OSX 10.14.6\r\n  - What Python version are you using? Python 3.8.3\r\n  - What OSMnx version are you using? osmnx  0.15.1   \r\n  - Provide a complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output between the two \"details\" tags below)\r\n\r\n<details>\r\n\r\nConda list\r\n\r\n```\r\n# Name                    Version                   Build  Channel\r\nappnope                   0.1.0                 py38_1001    anaconda\r\nattrs                     19.3.0                     py_0    conda-forge\r\nbackcall                  0.2.0                      py_0    anaconda\r\nboost-cpp                 1.72.0               hef959ae_2    conda-forge\r\nbranca                    0.4.1                      py_0    conda-forge\r\nbrotlipy                  0.7.0           py38h64e0658_1000    conda-forge\r\nbzip2                     1.0.8                haf1e3a3_2    conda-forge\r\nc-ares                    1.16.1               haf1e3a3_0    conda-forge\r\nca-certificates           2020.6.24                     0    anaconda\r\ncairo                     1.16.0            ha8983da_1005    conda-forge\r\ncertifi                   2020.6.20                py38_0    anaconda\r\ncffi                      1.14.1           py38hc4dd44e_0    conda-forge\r\ncfitsio                   3.470                hdf94aef_6    conda-forge\r\nchardet                   3.0.4           py38h32f6830_1006    conda-forge\r\nclick                     7.1.2              pyh9f0ad1d_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncryptography              3.0              py38h52adbb4_0    conda-forge\r\ncurl                      7.71.1               hbdca1c0_4    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ndecorator                 4.4.2                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\nexpat                     2.2.9                hb1e8313_2    conda-forge\r\nfiona                     1.8.13           py38hcfd527e_2    conda-forge\r\nfolium                    0.11.0                     py_0    conda-forge\r\nfontconfig                2.13.1            h79c0d67_1002    conda-forge\r\nfreetype                  2.10.2               h8da9a1a_0    conda-forge\r\nfreexl                    1.0.5             h0b31af3_1002    conda-forge\r\ngdal                      3.1.2            py38hbe58a21_1    conda-forge\r\ngeopandas                 0.8.1                      py_0    conda-forge\r\ngeos                      3.8.1                h4a8c4bd_0    conda-forge\r\ngeotiff                   1.6.0                h4e9c399_1    conda-forge\r\ngettext                   0.19.8.1          h46ab8bc_1002    conda-forge\r\ngiflib                    5.2.1                h0b31af3_2    conda-forge\r\nglib                      2.65.0               h577aef8_0    conda-forge\r\nhdf4                      4.2.13            h84186c3_1003    conda-forge\r\nhdf5                      1.10.6          nompi_haae91d6_101    conda-forge\r\nicu                       67.1                 h4a8c4bd_0    conda-forge\r\nidna                      2.10               pyh9f0ad1d_0    conda-forge\r\nipykernel                 5.3.4            py38h5ca1d4c_0    anaconda\r\nipython                   7.17.0           py38h39e3cac_0    anaconda\r\nipython_genutils          0.2.0                    py38_0    anaconda\r\njedi                      0.15.2                   py38_0    conda-forge\r\njinja2                    2.11.2             pyh9f0ad1d_0    conda-forge\r\njoblib                    0.16.0                     py_0    conda-forge\r\njpeg                      9d                   h0b31af3_0    conda-forge\r\njson-c                    0.13.1            h575e443_1002    conda-forge\r\njupyter_client            6.1.6                      py_0    anaconda\r\njupyter_core              4.6.3                    py38_0    anaconda\r\nkealib                    1.4.13               h40102fb_1    conda-forge\r\nkiwisolver                1.2.0            py38ha0d09dd_0    conda-forge\r\nkrb5                      1.17.1               h14dd6a4_2    conda-forge\r\nlcms2                     2.11                 h174193d_0    conda-forge\r\nlibblas                   3.8.0               17_openblas    conda-forge\r\nlibcblas                  3.8.0               17_openblas    conda-forge\r\nlibcurl                   7.71.1               he6690cf_4    conda-forge\r\nlibcxx                    10.0.1               h5f48129_0    conda-forge\r\nlibdap4                   3.20.6               h993cace_1    conda-forge\r\nlibedit                   3.1.20191231         h0678c8f_2    conda-forge\r\nlibev                     4.33                 haf1e3a3_0    conda-forge\r\nlibffi                    3.2.1             hb1e8313_1007    conda-forge\r\nlibgdal                   3.1.2                h6dfbaa8_1    conda-forge\r\nlibgfortran               4.0.0                         2    conda-forge\r\nlibiconv                  1.15              h0b31af3_1006    conda-forge\r\nlibkml                    1.3.0             h169b8f9_1011    conda-forge\r\nliblapack                 3.8.0               17_openblas    conda-forge\r\nlibnetcdf                 4.7.4           nompi_hc5b2cf3_105    conda-forge\r\nlibnghttp2                1.41.0               h8a08a2b_1    conda-forge\r\nlibopenblas               0.3.10          openmp_h63d9170_4    conda-forge\r\nlibpng                    1.6.37               hb0a8c7a_2    conda-forge\r\nlibpq                     12.3                 h489d428_0    conda-forge\r\nlibsodium                 1.0.18               h1de35cc_0    anaconda\r\nlibspatialindex           1.9.3                h4a8c4bd_3    conda-forge\r\nlibspatialite             4.3.0a            h231dce8_1039    conda-forge\r\nlibssh2                   1.9.0                h39bdce6_5    conda-forge\r\nlibtiff                   4.1.0                h2ae36a8_6    conda-forge\r\nlibwebp-base              1.1.0                h0b31af3_3    conda-forge\r\nlibxml2                   2.9.10               h7fdee97_2    conda-forge\r\nllvm-openmp               10.0.1               h28b9765_0    conda-forge\r\nlz4-c                     1.9.2                hb1e8313_2    conda-forge\r\nmarkupsafe                1.1.1            py38h64e0658_1    conda-forge\r\nmatplotlib-base           3.3.1            py38haed9462_0    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nncurses                   6.2                  hb1e8313_1    conda-forge\r\nnetworkx                  2.4                        py_1    conda-forge\r\nnumpy                     1.19.1           py38h598c1e0_0    conda-forge\r\nolefile                   0.46                       py_0    conda-forge\r\nopenjpeg                  2.3.1                h254dc36_3    conda-forge\r\nopenssl                   1.1.1g               h1de35cc_0    anaconda\r\nosmnx                     0.15.1             pyh9f0ad1d_0    conda-forge\r\npandas                    1.1.0            py38h11c0d25_0    conda-forge\r\nparso                     0.8.0                      py_0    anaconda\r\npcre                      8.44                 h4a8c4bd_0    conda-forge\r\npexpect                   4.8.0                    py38_1    anaconda\r\npickleshare               0.7.5                 py38_1001    anaconda\r\npillow                    7.2.0            py38h83dc5e5_1    conda-forge\r\npip                       20.2.2                     py_0    conda-forge\r\npixman                    0.38.0            h01d97ff_1003    conda-forge\r\npoppler                   0.89.0               h3232a60_1    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.3                 h62ab893_0    conda-forge\r\nproj                      7.1.0                h45baca5_1    conda-forge\r\nprompt-toolkit            3.0.5                      py_0    anaconda\r\nptyprocess                0.6.0                    py38_0    anaconda\r\npycparser                 2.20               pyh9f0ad1d_2    conda-forge\r\npygments                  2.6.1                      py_0    anaconda\r\npyopenssl                 19.1.0                     py_1    conda-forge\r\npyparsing                 2.4.7              pyh9f0ad1d_0    conda-forge\r\npyproj                    2.6.1.post1      py38hf032eb0_1    conda-forge\r\npysocks                   1.7.1            py38h32f6830_1    conda-forge\r\npython                    3.8.5           h85f3143_2_cpython    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npython_abi                3.8                      1_cp38    conda-forge\r\npytz                      2020.1             pyh9f0ad1d_0    conda-forge\r\npyzmq                     19.0.1           py38hb1e8313_1    anaconda\r\nreadline                  8.0                  h0678c8f_2    conda-forge\r\nrequests                  2.24.0             pyh9f0ad1d_0    conda-forge\r\nrtree                     0.9.4            py38h08f867b_1    conda-forge\r\nscikit-learn              0.23.2           py38hfde8033_0    conda-forge\r\nscipy                     1.5.2            py38h1402333_0    conda-forge\r\nsetuptools                49.6.0           py38h32f6830_0    conda-forge\r\nshapely                   1.7.0            py38h5b1fbde_3    conda-forge\r\nsix                       1.15.0             pyh9f0ad1d_0    conda-forge\r\nsqlite                    3.32.3               h960bd1c_1    conda-forge\r\ntbb                       2019.9               ha1b3eb9_1    conda-forge\r\nthreadpoolctl             2.1.0              pyh5ca1d4c_0    conda-forge\r\ntiledb                    2.0.8                h8973ade_0    conda-forge\r\ntk                        8.6.10               hb0a8c7a_0    conda-forge\r\ntornado                   6.0.4            py38h64e0658_1    conda-forge\r\ntraitlets                 4.3.3                    py38_0    anaconda\r\ntzcode                    2020a                h0b31af3_0    conda-forge\r\nurllib3                   1.25.10                    py_0    conda-forge\r\nwcwidth                   0.2.5                      py_0    anaconda\r\nwheel                     0.35.1             pyh9f0ad1d_0    conda-forge\r\nxerces-c                  3.2.3                h0a0444a_1    conda-forge\r\nxz                        5.2.5                haf1e3a3_1    conda-forge\r\nzeromq                    4.3.2                hb1e8313_2    anaconda\r\nzlib                      1.2.11                     1007    conda-forge\r\nzstd  \r\n```\r\n\r\n\r\n\r\n\r\n</details>\r\n\r\n**Provide a complete minimal reproducible example**\r\n\r\nYour example code snippet here must be *minimal* so it doesn't contain extraneous code unrelated to your specific problem and it must be *complete* so we can independently run it from top to bottom by copying/pasting it into a Python interpreter. That means all imports and all variables must be defined. If you're unsure how to create a good reproducible example, read [this guide](https://stackoverflow.com/help/minimal-reproducible-example). Do not post a screenshot of your code or error message: provide it as text.\r\n\r\n```python\r\n\r\n#imports \r\n\r\nimport numpy as np\r\nimport pandas as pd\r\nimport matplotlib.pyplot as plt\r\nimport geopandas as gpd\r\nimport osmnx as ox\r\nfrom descartes import PolygonPatch\r\nfrom shapely.geometry import Point, LineString, Polygon, MultiPolygon\r\n\r\n# Load Yerevan city from openstreetmap using osmnx api\r\n#Use which_result=2 if the projection looks weird\r\n\r\ncity = ox.gdf_from_place(\"Yerevan, Armenia\")\r\nprint(city.crs)\r\ncity = ox.project_gdf(city)\r\nfig, ax = ox.plot_shape(city)\r\nprint(city.crs)\r\n\r\n\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/544", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/544/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/544/events", "html_url": "https://github.com/gboeing/osmnx/issues/544", "id": 669945707, "node_id": "MDU6SXNzdWU2Njk5NDU3MDc=", "number": 544, "title": "Why pd.Series.apply([func]) can add 'func' as outer level column name in result?", "user": {"login": "easysam", "id": 20347428, "node_id": "MDQ6VXNlcjIwMzQ3NDI4", "avatar_url": "https://avatars0.githubusercontent.com/u/20347428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/easysam", "html_url": "https://github.com/easysam", "followers_url": "https://api.github.com/users/easysam/followers", "following_url": "https://api.github.com/users/easysam/following{/other_user}", "gists_url": "https://api.github.com/users/easysam/gists{/gist_id}", "starred_url": "https://api.github.com/users/easysam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/easysam/subscriptions", "organizations_url": "https://api.github.com/users/easysam/orgs", "repos_url": "https://api.github.com/users/easysam/repos", "events_url": "https://api.github.com/users/easysam/events{/privacy}", "received_events_url": "https://api.github.com/users/easysam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T15:41:02Z", "updated_at": "2020-07-31T16:13:09Z", "closed_at": "2020-07-31T16:13:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/gboeing/osmnx/blob/e1bfad35d8591f8b0e71110476b456c2c62d6e08/osmnx/distance.py#L418\r\n\r\nThe code use the feature in issue's title, and I can't find the feature in pandas documentation. \r\n\r\nCan you briefly point out how it works? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/543", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/543/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/543/events", "html_url": "https://github.com/gboeing/osmnx/issues/543", "id": 669054724, "node_id": "MDU6SXNzdWU2NjkwNTQ3MjQ=", "number": 543, "title": "Bug querying building footprints", "user": {"login": "Eph97", "id": 22008945, "node_id": "MDQ6VXNlcjIyMDA4OTQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/22008945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eph97", "html_url": "https://github.com/Eph97", "followers_url": "https://api.github.com/users/Eph97/followers", "following_url": "https://api.github.com/users/Eph97/following{/other_user}", "gists_url": "https://api.github.com/users/Eph97/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eph97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eph97/subscriptions", "organizations_url": "https://api.github.com/users/Eph97/orgs", "repos_url": "https://api.github.com/users/Eph97/repos", "events_url": "https://api.github.com/users/Eph97/events{/privacy}", "received_events_url": "https://api.github.com/users/Eph97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165091, "node_id": "MDU6TGFiZWw0MTMxNjUwOTE=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/bug", "name": "bug", "color": "e99695", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-30T18:20:18Z", "updated_at": "2020-07-31T17:13:46Z", "closed_at": "2020-07-31T17:13:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Problem description**\r\nI have been using osmnx for a couple of months now as part of a research project. I recently updated to the new version of osmnx and keep getting an error when I try to query building footprints. It was however working before I updated. I continue to get the error message \"pygeos.GEOSException: IllegalArgumentException: Argument must be Polygonal or LinearRing\" when I am fairly confident I am passing a valid Multipolygon (I've also tried with normal polygon's and get the same error).I have also tried querying building footprints using from_place and from_point and neither have worked for me either. Querying street networks and generating graphs using this polygon have all worked. It's only when I try to retrieve the building footprint that osmnx fails and this only started failing after I updated. \r\n\r\nI've attached a zip file containing example data.\r\n\r\n\r\n\r\n**Environment information**\r\n I am using a mac running Catalina (10.15.2)\r\nI'm using python 3.8.5 installed using conda\r\nand what I believe is the latest osmnx version (0.15.1)\r\n\r\n\r\n<details>\r\n\r\n# packages in environment at /Users/ephraimsutherland/opt/miniconda3/envs/ox:\r\n#\r\n# Name                    Version                   Build  Channel\r\naffine                    2.3.0                    pypi_0    pypi\r\nappnope                   0.1.0           py38h32f6830_1001    conda-forge\r\nastroid                   2.4.2                    pypi_0    pypi\r\nattrs                     19.3.0                     py_0    conda-forge\r\nbackcall                  0.2.0              pyh9f0ad1d_0    conda-forge\r\nbackports                 1.0                        py_2    conda-forge\r\nbackports.functools_lru_cache 1.6.1                      py_0    conda-forge\r\nbleach                    3.1.5              pyh9f0ad1d_0    conda-forge\r\nboost-cpp                 1.72.0               hef959ae_2    conda-forge\r\nbranca                    0.4.1                      py_0    conda-forge\r\nbrotlipy                  0.7.0           py38h64e0658_1000    conda-forge\r\nbzip2                     1.0.8                h0b31af3_2    conda-forge\r\nca-certificates           2020.6.20            hecda079_0    conda-forge\r\ncairo                     1.16.0            ha8983da_1005    conda-forge\r\ncartopy                   0.18.0                   pypi_0    pypi\r\ncertifi                   2020.6.20        py38h32f6830_0    conda-forge\r\ncffi                      1.14.1           py38hc4dd44e_0    conda-forge\r\ncfitsio                   3.470                hdf94aef_6    conda-forge\r\nchardet                   3.0.4           py38h32f6830_1006    conda-forge\r\nclick                     7.1.2              pyh9f0ad1d_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncontextily                1.0.0                    pypi_0    pypi\r\ncryptography              3.0              py38h52adbb4_0    conda-forge\r\ncurl                      7.71.1               hbdca1c0_1    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ncykhash                   1.0.2                    pypi_0    pypi\r\ncython                    0.29.20                  pypi_0    pypi\r\ndecorator                 4.4.2                      py_0    conda-forge\r\ndefusedxml                0.6.0                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\nentrypoints               0.3             py38h32f6830_1001    conda-forge\r\nexpat                     2.2.9                h4a8c4bd_2    conda-forge\r\nfiona                     1.8.13           py38hcfd527e_2    conda-forge\r\nfolium                    0.11.0                     py_0    conda-forge\r\nfontconfig                2.13.1            h79c0d67_1002    conda-forge\r\nfreetype                  2.10.2               h8da9a1a_0    conda-forge\r\nfreexl                    1.0.5             h0b31af3_1002    conda-forge\r\ngdal                      3.1.2            py38h7882b60_0    conda-forge\r\ngeopandas                 0.8.1                      py_0    conda-forge\r\ngeoplot                   0.4.1                    pypi_0    pypi\r\ngeos                      3.8.1                h4a8c4bd_0    conda-forge\r\ngeotiff                   1.6.0                hd8796ba_0    conda-forge\r\ngettext                   0.19.8.1          h46ab8bc_1002    conda-forge\r\ngiflib                    5.2.1                h0b31af3_2    conda-forge\r\nglib                      2.65.0               h577aef8_0    conda-forge\r\nhdf4                      4.2.13            h84186c3_1003    conda-forge\r\nhdf5                      1.10.6          nompi_h3e39495_100    conda-forge\r\nicu                       67.1                 h4a8c4bd_0    conda-forge\r\nidna                      2.10               pyh9f0ad1d_0    conda-forge\r\nimportlib-metadata        1.7.0            py38h32f6830_0    conda-forge\r\nimportlib_metadata        1.7.0                         0    conda-forge\r\nipykernel                 5.3.4            py38h23f93f0_0    conda-forge\r\nipython                   7.16.1           py38h23f93f0_0    conda-forge\r\nipython_genutils          0.2.0                      py_1    conda-forge\r\nisort                     4.3.21                   pypi_0    pypi\r\njedi                      0.17.2           py38h32f6830_0    conda-forge\r\njinja2                    2.11.2             pyh9f0ad1d_0    conda-forge\r\njoblib                    0.16.0                     py_0    conda-forge\r\njpeg                      9d                   h0b31af3_0    conda-forge\r\njson-c                    0.13.1            h575e443_1002    conda-forge\r\njson5                     0.9.4              pyh9f0ad1d_0    conda-forge\r\njsonschema                3.2.0            py38h32f6830_1    conda-forge\r\njupyter_client            6.1.6                      py_0    conda-forge\r\njupyter_core              4.6.3            py38h32f6830_1    conda-forge\r\njupyterlab                2.1.4                      py_0    conda-forge\r\njupyterlab_server         1.2.0                      py_0    conda-forge\r\nkealib                    1.4.13               h40102fb_1    conda-forge\r\nkiwisolver                1.2.0            py38ha0d09dd_0    conda-forge\r\nkrb5                      1.17.1               h14dd6a4_1    conda-forge\r\nlazy-object-proxy         1.4.3                    pypi_0    pypi\r\nlcms2                     2.11                 h174193d_0    conda-forge\r\nlibblas                   3.8.0               17_openblas    conda-forge\r\nlibcblas                  3.8.0               17_openblas    conda-forge\r\nlibcurl                   7.71.1               he6690cf_1    conda-forge\r\nlibcxx                    10.0.1               h5f48129_0    conda-forge\r\nlibdap4                   3.20.6               h993cace_1    conda-forge\r\nlibedit                   3.1.20191231         hed1e85f_1    conda-forge\r\nlibffi                    3.2.1             h4a8c4bd_1007    conda-forge\r\nlibgdal                   3.1.2                h6ef84d7_0    conda-forge\r\nlibgfortran               4.0.0                         2    conda-forge\r\nlibiconv                  1.15              h0b31af3_1006    conda-forge\r\nlibkml                    1.3.0             h169b8f9_1011    conda-forge\r\nliblapack                 3.8.0               17_openblas    conda-forge\r\nlibnetcdf                 4.7.4           nompi_hc5b2cf3_105    conda-forge\r\nlibopenblas               0.3.10          openmp_h63d9170_4    conda-forge\r\nlibpng                    1.6.37               hbbe82c9_1    conda-forge\r\nlibpq                     12.3                 h489d428_0    conda-forge\r\nlibsodium                 1.0.17               h01d97ff_0    conda-forge\r\nlibspatialindex           1.9.3                h4a8c4bd_3    conda-forge\r\nlibspatialite             4.3.0a            h658e6c1_1038    conda-forge\r\nlibssh2                   1.9.0                h39bdce6_4    conda-forge\r\nlibtiff                   4.1.0                h2ae36a8_6    conda-forge\r\nlibwebp-base              1.1.0                h0b31af3_3    conda-forge\r\nlibxml2                   2.9.10               h7fdee97_2    conda-forge\r\nllvm-openmp               10.0.1               h28b9765_0    conda-forge\r\nlz4-c                     1.9.2                h4a8c4bd_1    conda-forge\r\nmapclassify               2.3.0                    pypi_0    pypi\r\nmarkupsafe                1.1.1            py38h64e0658_1    conda-forge\r\nmatplotlib-base           3.3.0            py38haed9462_1    conda-forge\r\nmccabe                    0.6.1                    pypi_0    pypi\r\nmercantile                1.1.5                    pypi_0    pypi\r\nmistune                   0.8.4           py38h64e0658_1001    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nnbconvert                 5.6.1            py38h32f6830_1    conda-forge\r\nnbformat                  5.0.7                      py_0    conda-forge\r\nncurses                   6.2                  hb1e8313_1    conda-forge\r\nnetworkx                  2.4                        py_1    conda-forge\r\nnotebook                  6.0.3            py38h32f6830_1    conda-forge\r\nnumpy                     1.19.1           py38h598c1e0_0    conda-forge\r\nolefile                   0.46                       py_0    conda-forge\r\nopenjpeg                  2.3.1                h254dc36_3    conda-forge\r\nopenssl                   1.1.1g               h0b31af3_0    conda-forge\r\nosmnx                     0.15.1             pyh9f0ad1d_0    conda-forge\r\npackaging                 20.4               pyh9f0ad1d_0    conda-forge\r\npandas                    1.0.5            py38h5fc983b_0    conda-forge\r\npandoc                    2.10.1               haf1e3a3_0    conda-forge\r\npandocfilters             1.4.2                      py_1    conda-forge\r\nparso                     0.7.1              pyh9f0ad1d_0    conda-forge\r\npcre                      8.44                 h4a8c4bd_0    conda-forge\r\npexpect                   4.8.0            py38h32f6830_1    conda-forge\r\npickleshare               0.7.5           py38h32f6830_1001    conda-forge\r\npillow                    7.2.0            py38h83dc5e5_1    conda-forge\r\npip                       20.1.1                     py_1    conda-forge\r\npixman                    0.38.0            h01d97ff_1003    conda-forge\r\npoppler                   0.89.0               h3232a60_1    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.3                 h62ab893_0    conda-forge\r\nproj                      7.0.0                h45baca5_5    conda-forge\r\nprometheus_client         0.8.0              pyh9f0ad1d_0    conda-forge\r\nprompt-toolkit            3.0.5                      py_1    conda-forge\r\nptyprocess                0.6.0                   py_1001    conda-forge\r\npycparser                 2.20               pyh9f0ad1d_2    conda-forge\r\npygeos                    0.7.1                    pypi_0    pypi\r\npygments                  2.6.1                      py_0    conda-forge\r\npylint                    2.5.3                    pypi_0    pypi\r\npyopenssl                 19.1.0                     py_1    conda-forge\r\npyparsing                 2.4.7              pyh9f0ad1d_0    conda-forge\r\npyproj                    2.6.1.post1      py38h7d7e87d_0    conda-forge\r\npyrobuf                   0.9.3                    pypi_0    pypi\r\npyrosm                    0.5.2                    pypi_0    pypi\r\npyrsistent                0.16.0           py38h64e0658_0    conda-forge\r\npyshp                     2.1.0                    pypi_0    pypi\r\npysocks                   1.7.1            py38h32f6830_1    conda-forge\r\npython                    3.8.5           h85f3143_1_cpython    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npython-rapidjson          0.9.1                    pypi_0    pypi\r\npython_abi                3.8                      1_cp38    conda-forge\r\npytz                      2020.1             pyh9f0ad1d_0    conda-forge\r\npyzmq                     19.0.1           py38h1fcdcd6_0    conda-forge\r\nrasterio                  1.1.5                    pypi_0    pypi\r\nreadline                  8.0                  h0678c8f_2    conda-forge\r\nrequests                  2.24.0             pyh9f0ad1d_0    conda-forge\r\nrtree                     0.9.4            py38h08f867b_1    conda-forge\r\nscikit-learn              0.23.1           py38hb7f0800_0    conda-forge\r\nscipy                     1.5.2            py38h1402333_0    conda-forge\r\nseaborn                   0.10.1                   pypi_0    pypi\r\nsend2trash                1.5.0                      py_0    conda-forge\r\nsetuptools                49.2.0           py38h32f6830_0    conda-forge\r\nshapely                   1.7.0            py38h5b1fbde_3    conda-forge\r\nsix                       1.15.0             pyh9f0ad1d_0    conda-forge\r\nsnuggs                    1.4.7                    pypi_0    pypi\r\nsqlite                    3.32.3               h93121df_1    conda-forge\r\ntbb                       2019.9               ha1b3eb9_1    conda-forge\r\nterminado                 0.8.3            py38h32f6830_1    conda-forge\r\ntestpath                  0.4.4                      py_0    conda-forge\r\nthreadpoolctl             2.1.0              pyh5ca1d4c_0    conda-forge\r\ntiledb                    2.0.6                h84aa2a7_0    conda-forge\r\ntk                        8.6.10               hbbe82c9_0    conda-forge\r\ntoml                      0.10.1                   pypi_0    pypi\r\ntornado                   6.0.4            py38h64e0658_1    conda-forge\r\ntraitlets                 4.3.3            py38h32f6830_1    conda-forge\r\ntzcode                    2020a                h0b31af3_0    conda-forge\r\nurllib3                   1.25.10                    py_0    conda-forge\r\nwcwidth                   0.2.5              pyh9f0ad1d_1    conda-forge\r\nwebencodings              0.5.1                      py_1    conda-forge\r\nwheel                     0.34.2                     py_1    conda-forge\r\nwrapt                     1.12.1                   pypi_0    pypi\r\nxerces-c                  3.2.3                h0a0444a_1    conda-forge\r\nxz                        5.2.5                h0b31af3_1    conda-forge\r\nzeromq                    4.3.2                h6de7cb9_2    conda-forge\r\nzipp                      3.1.0                      py_0    conda-forge\r\nzlib                      1.2.11            h0b31af3_1006    conda-forge\r\nzstd                      1.4.5                h0384e3a_2    conda-forge\r\n\r\n\r\n</details>\r\n\r\n[Isochrone.zip](https://github.com/gboeing/osmnx/files/5003045/Isochrone.zip)\r\n\r\n<img width=\"1440\" alt=\"Screen Shot 2020-07-30 at 1 48 17 PM\" src=\"https://user-images.githubusercontent.com/22008945/88956625-a03e6a00-d26b-11ea-8f7f-4a4ff0b22774.png\">\r\n```python\r\n\r\n\r\n\r\n```\r\n\r\nimport geopandas\r\nimport osmnx as ox\r\n\r\nAll_Isochrones = geopandas.read_file('/Users/<user>/documents/Isochrone/Isochrone.shp')\r\n\r\nfootprint = ox.footprints.footprints_from_polygon(All_Isochrones.loc[[0], 'geometry'].values[0], footprint_type=\"building\", retain_invalid=False)\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"bug.py\", line 6, in <module>\r\n    footprint = ox.footprints.footprints_from_polygon(All_Isochrones.loc[[0], 'geometry'].values[0], footprint_type=\"building\", retain_invalid=False)\r\n  File \"/Users/ephraimsutherland/opt/miniconda3/envs/ox/lib/python3.8/site-packages/osmnx/footprints.py\", line 501, in footprints_from_polygon\r\n    return _create_footprints_gdf(polygon, footprint_type, retain_invalid)\r\n  File \"/Users/ephraimsutherland/opt/miniconda3/envs/ox/lib/python3.8/site-packages/osmnx/footprints.py\", line 126, in _create_footprints_gdf\r\n    filter1 = gdf[\"geometry\"].is_valid\r\n  File \"/Users/ephraimsutherland/opt/miniconda3/envs/ox/lib/python3.8/site-packages/geopandas/base.py\", line 170, in is_valid\r\n    return _delegate_property(\"is_valid\", self)\r\n  File \"/Users/ephraimsutherland/opt/miniconda3/envs/ox/lib/python3.8/site-packages/geopandas/base.py\", line 74, in _delegate_property\r\n    data = getattr(a_this, op)\r\n  File \"/Users/ephraimsutherland/opt/miniconda3/envs/ox/lib/python3.8/site-packages/geopandas/array.py\", line 400, in is_valid\r\n    return vectorized.is_valid(self.data)\r\n  File \"/Users/ephraimsutherland/opt/miniconda3/envs/ox/lib/python3.8/site-packages/geopandas/_vectorized.py\", line 457, in is_valid\r\n    return pygeos.is_valid(data)\r\n  File \"/Users/ephraimsutherland/opt/miniconda3/envs/ox/lib/python3.8/site-packages/pygeos/predicates.py\", line 258, in is_valid\r\n    result = lib.is_valid(geometry, **kwargs)\r\npygeos.GEOSException: IllegalArgumentException: Argument must be Polygonal or LinearRing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/540", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/540/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/540/events", "html_url": "https://github.com/gboeing/osmnx/issues/540", "id": 665194279, "node_id": "MDU6SXNzdWU2NjUxOTQyNzk=", "number": 540, "title": "osmnx.utils_geo.bbox_from_point(point, dist=1000, project_utm=False, return_crs=False) too slow for \"big\" datasets", "user": {"login": "diego-florez", "id": 36284452, "node_id": "MDQ6VXNlcjM2Mjg0NDUy", "avatar_url": "https://avatars0.githubusercontent.com/u/36284452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diego-florez", "html_url": "https://github.com/diego-florez", "followers_url": "https://api.github.com/users/diego-florez/followers", "following_url": "https://api.github.com/users/diego-florez/following{/other_user}", "gists_url": "https://api.github.com/users/diego-florez/gists{/gist_id}", "starred_url": "https://api.github.com/users/diego-florez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diego-florez/subscriptions", "organizations_url": "https://api.github.com/users/diego-florez/orgs", "repos_url": "https://api.github.com/users/diego-florez/repos", "events_url": "https://api.github.com/users/diego-florez/events{/privacy}", "received_events_url": "https://api.github.com/users/diego-florez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-24T14:09:02Z", "updated_at": "2020-07-24T23:31:25Z", "closed_at": "2020-07-24T23:31:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! 1st of all I have to say this package is amazing and super complete, really useful :)\r\n\r\n**\"Issue\"?**\r\n\r\nSo I am using it to find Pois in 1km radius from a 55k rows dataset I am working with.\r\nThe point is that I wanted to obtain the bounding box from lat/long of all my points (55k). And it took 1h27min with the \r\n`bbox_from_point(dist=1000, project_utm=False, return_crs=False)` function.\r\n\r\nThis was my implementation:\r\n`trash_df[\"bbox\"] = trash_df.swifter.apply(lambda column: ox.utils_geo.bbox_from_point((column.latitude, column.longitude), dist=1000), axis=1)`\r\n\r\n**Describe the solution you'd like to propose**\r\n\r\nSo I made this fn:\r\n\r\n```\r\ndef getBbox(lat, lon, radius=1):\r\n    import math\r\n    \r\n    R = 6371\r\n\r\n    w = lon - math.degrees(radius/R/math.cos(math.radians(lat)))\r\n    e = lon + math.degrees(radius/R/math.cos(math.radians(lat)))\r\n    s = lat - math.degrees(radius/R)\r\n    n = lat + math.degrees(radius/R)\r\n    \r\n    return (n, s, e, w)\r\n```\r\n\r\nAnd it takes 2seconds and the resulst are equal until 3rd-4th decimal", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/537", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/537/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/537/events", "html_url": "https://github.com/gboeing/osmnx/issues/537", "id": 663295502, "node_id": "MDU6SXNzdWU2NjMyOTU1MDI=", "number": 537, "title": "Add an option to the save bidirectional graph", "user": {"login": "cyang-kth", "id": 6810084, "node_id": "MDQ6VXNlcjY4MTAwODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6810084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyang-kth", "html_url": "https://github.com/cyang-kth", "followers_url": "https://api.github.com/users/cyang-kth/followers", "following_url": "https://api.github.com/users/cyang-kth/following{/other_user}", "gists_url": "https://api.github.com/users/cyang-kth/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyang-kth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyang-kth/subscriptions", "organizations_url": "https://api.github.com/users/cyang-kth/orgs", "repos_url": "https://api.github.com/users/cyang-kth/repos", "events_url": "https://api.github.com/users/cyang-kth/events{/privacy}", "received_events_url": "https://api.github.com/users/cyang-kth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-21T20:42:11Z", "updated_at": "2020-07-22T07:12:31Z", "closed_at": "2020-07-22T07:12:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the solution you'd like to propose**\r\n\r\nCurrently, a graph can be created to be bidirectional. However, when saving it to a shapefile or geopackage, the reverse edge are automatically removed to create an undirected graph. \r\n\r\nhttps://github.com/gboeing/osmnx/blob/fcb51ac4cc17fca28c05694c2f3acbc95ca15a6f/osmnx/io.py#L45-L47 \r\n\r\nIt would be nice to have a bidirectional option to turn on exporting the original bidirectional graph (the shapefile can be used in an external program, e.g., routing or map matching).  \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/535", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/535/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/535/events", "html_url": "https://github.com/gboeing/osmnx/issues/535", "id": 662414711, "node_id": "MDU6SXNzdWU2NjI0MTQ3MTE=", "number": 535, "title": "graph_from_place not working for some places.", "user": {"login": "william3031", "id": 44103957, "node_id": "MDQ6VXNlcjQ0MTAzOTU3", "avatar_url": "https://avatars0.githubusercontent.com/u/44103957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/william3031", "html_url": "https://github.com/william3031", "followers_url": "https://api.github.com/users/william3031/followers", "following_url": "https://api.github.com/users/william3031/following{/other_user}", "gists_url": "https://api.github.com/users/william3031/gists{/gist_id}", "starred_url": "https://api.github.com/users/william3031/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/william3031/subscriptions", "organizations_url": "https://api.github.com/users/william3031/orgs", "repos_url": "https://api.github.com/users/william3031/repos", "events_url": "https://api.github.com/users/william3031/events{/privacy}", "received_events_url": "https://api.github.com/users/william3031/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165091, "node_id": "MDU6TGFiZWw0MTMxNjUwOTE=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/bug", "name": "bug", "color": "e99695", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-21T00:30:45Z", "updated_at": "2020-07-21T05:05:35Z", "closed_at": "2020-07-21T05:05:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some places that I want to run OSMNX on. These previously worked (at the start of the year), but don't seem to be working now. I was running version 0.10 then and had it this morning, when it didn't work, so I updated and tried again. It still doesn't work.\r\n\r\n```python\r\n#import\r\nimport osmnx as ox\r\nimport networkx as nx\r\nimport geopandas as gpd\r\nimport matplotlib.pyplot as plt\r\nimport pandas as pd\r\nox.config(log_console=True, use_cache=True)\r\nox.__version__\r\n```\r\n> Out[1]: '0.15.1'\r\n\r\nNew York works (as does many other cities) - from the example: https://github.com/gboeing/osmnx-examples/blob/master/notebooks/01-overview-osmnx.ipynb\r\n```\r\n# configure the place\r\nplace = 'Manhattan, New York, USA' \r\n\r\n# download the street network\r\nG = ox.graph_from_place(place, network_type='walk')\r\n```\r\n\r\nBut this doesn't work: \r\n```\r\n# configure the place\r\nplace = 'City of Melbourne, Victoria, Austraila' \r\n\r\n# download the street network\r\nG = ox.graph_from_place(place, network_type='walk')\r\n```\r\n\r\nI tried a few other places nearby, (e.g. Wellington, New Zealand; as well as specific municipalities in Victoria), but none of these worked. These are fine when searching in OSM.\r\n\r\nGiving the error:\r\n\r\n```\r\nKeyError                                  Traceback (most recent call last)\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py in get_loc(self, key, method, tolerance)\r\n   2645             try:\r\n-> 2646                 return self._engine.get_loc(key)\r\n   2647             except KeyError:\r\n\r\npandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n\r\npandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n\r\npandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n\r\npandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n\r\nKeyError: 'geometry'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-27-aa7ec4112983> in <module>\r\n      3 \r\n      4 # download the street network\r\n----> 5 G = ox.graph_from_place(place, network_type='walk')\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\osmnx\\graph.py in graph_from_place(query, network_type, simplify, retain_all, truncate_by_edge, which_result, buffer_dist, clean_periphery, custom_filter)\r\n    335 \r\n    336     # extract the geometry from the GeoDataFrame to use in API query\r\n--> 337     polygon = gdf_place[\"geometry\"].unary_union\r\n    338     utils.log(\"Constructed place geometry polygon(s) to query API\")\r\n    339 \r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\geopandas\\geodataframe.py in __getitem__(self, key)\r\n    469         GeoDataFrame.\r\n    470         \"\"\"\r\n--> 471         result = super(GeoDataFrame, self).__getitem__(key)\r\n    472         geo_col = self._geometry_column_name\r\n    473         if isinstance(key, string_types) and key == geo_col:\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\pandas\\core\\frame.py in __getitem__(self, key)\r\n   2798             if self.columns.nlevels > 1:\r\n   2799                 return self._getitem_multilevel(key)\r\n-> 2800             indexer = self.columns.get_loc(key)\r\n   2801             if is_integer(indexer):\r\n   2802                 indexer = [indexer]\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py in get_loc(self, key, method, tolerance)\r\n   2646                 return self._engine.get_loc(key)\r\n   2647             except KeyError:\r\n-> 2648                 return self._engine.get_loc(self._maybe_cast_indexer(key))\r\n   2649         indexer = self.get_indexer([key], method=method, tolerance=tolerance)\r\n   2650         if indexer.ndim > 1 or indexer.size > 1:\r\n\r\npandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n\r\npandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n\r\npandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n\r\npandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n\r\nKeyError: 'geometry'\r\n```\r\n\r\nI also tried with a bounding box for the same location using `graph_from_bbox` and that didn't work either. These used to work. \r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/532", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/532/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/532/events", "html_url": "https://github.com/gboeing/osmnx/issues/532", "id": 656370838, "node_id": "MDU6SXNzdWU2NTYzNzA4Mzg=", "number": 532, "title": "utils_geo.bbox_from_points does not work for certain coordinates", "user": {"login": "gaoag", "id": 16842951, "node_id": "MDQ6VXNlcjE2ODQyOTUx", "avatar_url": "https://avatars1.githubusercontent.com/u/16842951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaoag", "html_url": "https://github.com/gaoag", "followers_url": "https://api.github.com/users/gaoag/followers", "following_url": "https://api.github.com/users/gaoag/following{/other_user}", "gists_url": "https://api.github.com/users/gaoag/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaoag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaoag/subscriptions", "organizations_url": "https://api.github.com/users/gaoag/orgs", "repos_url": "https://api.github.com/users/gaoag/repos", "events_url": "https://api.github.com/users/gaoag/events{/privacy}", "received_events_url": "https://api.github.com/users/gaoag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-14T06:44:27Z", "updated_at": "2020-07-14T07:51:33Z", "closed_at": "2020-07-14T07:51:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nIf the lat lon coords = (-155.6727, 20.013699), then calling bbox_from_points(coords, distance=1000) raises this error. However, changing the coords to something like (-75.6727, 20.013699) causes the function to return normally. What's up with that? EDIT I'm on 0.15.1.\r\n```\r\nValueErrorTraceback (most recent call last)\r\n<ipython-input-64-1f8d3b71f4c5> in <module>\r\n----> 1 bboxes = osm_for_region_faster(2, subset, 'building', [], 800, True, True, 1)\r\n\r\n<ipython-input-63-8e2c701af879> in osm_for_region_faster(region, address_subset, key, tags, dist, num, area, subset_index)\r\n     76             print(coords)\r\n     77             print(e)\r\n---> 78             raise e\r\n     79 \r\n     80     # now, have a tag_dict and the original addresses DF\r\n\r\n<ipython-input-63-8e2c701af879> in osm_for_region_faster(region, address_subset, key, tags, dist, num, area, subset_index)\r\n     27             coords = tuple(map(float, coords_string[1:-1].split(\", \")))\r\n     28 \r\n---> 29             b = fp.bbox_from_point(coords,dist=800)\r\n     30 \r\n     31             bbox_approaches = [0, 0, 0]\r\n\r\n/projects/RF/envs/osm_env/lib/python3.7/site-packages/osmnx/utils_geo.py in bbox_from_point(point, dist, project_utm, return_crs)\r\n    477         # bounding coordinates\r\n    478         buffer_latlong, _ = projection.project_geometry(buffer_proj, crs=crs_proj, to_latlong=True)\r\n--> 479         west, south, east, north = buffer_latlong.bounds\r\n    480         utils.log(\r\n    481             (\r\n\r\nValueError: not enough values to unpack (expected 4, got 0)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/531", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/531/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/531/events", "html_url": "https://github.com/gboeing/osmnx/issues/531", "id": 656132120, "node_id": "MDU6SXNzdWU2NTYxMzIxMjA=", "number": 531, "title": "osmnx raising invalid input error even when the input is valid #583", "user": {"login": "Shasvat0601", "id": 52177950, "node_id": "MDQ6VXNlcjUyMTc3OTUw", "avatar_url": "https://avatars3.githubusercontent.com/u/52177950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shasvat0601", "html_url": "https://github.com/Shasvat0601", "followers_url": "https://api.github.com/users/Shasvat0601/followers", "following_url": "https://api.github.com/users/Shasvat0601/following{/other_user}", "gists_url": "https://api.github.com/users/Shasvat0601/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shasvat0601/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shasvat0601/subscriptions", "organizations_url": "https://api.github.com/users/Shasvat0601/orgs", "repos_url": "https://api.github.com/users/Shasvat0601/repos", "events_url": "https://api.github.com/users/Shasvat0601/events{/privacy}", "received_events_url": "https://api.github.com/users/Shasvat0601/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165091, "node_id": "MDU6TGFiZWw0MTMxNjUwOTE=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/bug", "name": "bug", "color": "e99695", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-13T20:54:01Z", "updated_at": "2020-07-17T16:04:24Z", "closed_at": "2020-07-17T16:04:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nQuery 1:\r\npolygon:((-118.333333 33.966667, -118.333333 33.983333, -118.316667 33.983333, -118.316667 33.966667, -118.333333 33.966667))\r\npolygon.bounds: (-118.333333, 33.966667, -118.316667, 33.983333)\r\nwhen I call: gdf = osmnx.footprints.footprints_from_polygon(\r\n                    polygon, footprint_type='building')\r\nIt raises these errors:\r\n1. at least 3 lat/lon float value pairs must be provided\r\n2. an even number of float values must be provided\r\n```\r\n\r\n```\r\nQuery 2:\r\npolygon:POLYGON ((-109.15 44.516667, -109.15 44.533333, -109.133333 44.533333, -109.133333 44.516667, -109.15 44.516667))\r\npolygon.bounds: (-109.15, 44.516667, -109.133333, 44.533333)\r\nwhen I call: gdf = osmnx.footprints.footprints_from_polygon(\r\n                    polygon, footprint_type='building')\r\nIt raises these errors:\r\n1. at least 3 lat/lon float value pairs must be provided\r\n2. an even number of float values must be provided\r\n```\r\n\r\nstacktrace:\r\n```JSONDecodeError                           Traceback (most recent call last)\r\n/opt/conda/envs/py3/lib/python3.7/site-packages/osmnx/downloader.py in overpass_request(data, pause, error_pause)\r\n    520         try:\r\n--> 521             response_json = response.json()\r\n    522             if \"remark\" in response_json:\r\n\r\n/opt/conda/envs/py3/lib/python3.7/site-packages/requests/models.py in json(self, **kwargs)\r\n    896                     pass\r\n--> 897         return complexjson.loads(self.text, **kwargs)\r\n    898 \r\n\r\n/opt/conda/envs/py3/lib/python3.7/json/__init__.py in loads(s, encoding, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\r\n    347             parse_constant is None and object_pairs_hook is None and not kw):\r\n--> 348         return _default_decoder.decode(s)\r\n    349     if cls is None:\r\n\r\n/opt/conda/envs/py3/lib/python3.7/json/decoder.py in decode(self, s, _w)\r\n    336         \"\"\"\r\n--> 337         obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n    338         end = _w(s, end).end()\r\n\r\n/opt/conda/envs/py3/lib/python3.7/json/decoder.py in raw_decode(self, s, idx)\r\n    354         except StopIteration as err:\r\n--> 355             raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\n    356         return obj, end\r\n\r\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nException                                 Traceback (most recent call last)\r\n<ipython-input-72-b48e0c011c6e> in <module>\r\n     11             #print(gdf)\r\n     12     gdf = ox.footprints.footprints_from_polygon(\r\n---> 13                    polygon, footprint_type='building')\r\n     14     #print(gdf)\r\n     15     #obj.query_building(tile_id)\r\n\r\n/opt/conda/envs/py3/lib/python3.7/site-packages/osmnx/footprints.py in footprints_from_polygon(polygon, footprint_type, retain_invalid)\r\n    494     other custom settings via ox.config().\r\n    495     \"\"\"\r\n--> 496     return _create_footprints_gdf(polygon, footprint_type, retain_invalid)\r\n\r\n/opt/conda/envs/py3/lib/python3.7/site-packages/osmnx/footprints.py in _create_footprints_gdf(polygon, footprint_type, retain_invalid, responses)\r\n     87 \r\n     88     if responses is None:\r\n---> 89         responses = _osm_footprints_download(polygon, footprint_type)\r\n     90 \r\n     91     # parse the list of responses into separate dicts of vertices, footprints and relations\r\n\r\n/opt/conda/envs/py3/lib/python3.7/site-packages/osmnx/footprints.py in _osm_footprints_download(polygon, footprint_type)\r\n     52             f'relation(poly:\"{polygon_coord_str}\")[\"{footprint_type}\"];(._;>;););out;'\r\n     53         )\r\n---> 54         response_json = downloader.overpass_request(data={\"data\": query_str})\r\n     55         response_jsons.append(response_json)\r\n     56     utils.log(\r\n\r\n/opt/conda/envs/py3/lib/python3.7/site-packages/osmnx/downloader.py in overpass_request(data, pause, error_pause)\r\n    537                 # else, this was an unhandled status_code, throw an exception\r\n    538                 utils.log(f\"{domain} returned {sc}\", level=lg.ERROR)\r\n--> 539                 raise Exception(f\"Server returned\\n{response} {response.reason}\\n{response.text}\")\r\n    540 \r\n    541         _save_to_cache(prepared_url, response_json)\r\n\r\nException: Server returned\r\n<Response [400]> Bad Request\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\r\n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<head>\r\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" lang=\"en\"/>\r\n  <title>OSM3S Response</title>\r\n</head>\r\n<body>\r\n\r\n<p>The data included in this document is from www.openstreetmap.org. The data is made available under ODbL.</p>\r\n<p><strong style=\"color:#FF0000\">Error</strong>: line 1: static error: For the attribute &quot;bounds&quot; of the element &quot;polygon-query&quot; an even number of float values must be provided. </p>\r\n<p><strong style=\"color:#FF0000\">Error</strong>: line 1: static error: For the attribute &quot;bounds&quot; of the element &quot;polygon-query&quot; at least 3 lat/lon float value pairs must be provided. </p>\r\n<p><strong style=\"color:#FF0000\">Error</strong>: line 1: static error: For the attribute &quot;bounds&quot; of the element &quot;polygon-query&quot; an even number of float values must be provided. </p>\r\n<p><strong style=\"color:#FF0000\">Error</strong>: line 1: static error: For the attribute &quot;bounds&quot; of the element &quot;polygon-query&quot; at least 3 lat/lon float value pairs must be provided. </p>\r\n\r\n</body>\r\n</html>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/530", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/530/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/530/events", "html_url": "https://github.com/gboeing/osmnx/issues/530", "id": 654239934, "node_id": "MDU6SXNzdWU2NTQyMzk5MzQ=", "number": 530, "title": "Big Sur compatibility", "user": {"login": "davidecallegaro", "id": 59137992, "node_id": "MDQ6VXNlcjU5MTM3OTky", "avatar_url": "https://avatars0.githubusercontent.com/u/59137992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidecallegaro", "html_url": "https://github.com/davidecallegaro", "followers_url": "https://api.github.com/users/davidecallegaro/followers", "following_url": "https://api.github.com/users/davidecallegaro/following{/other_user}", "gists_url": "https://api.github.com/users/davidecallegaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidecallegaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidecallegaro/subscriptions", "organizations_url": "https://api.github.com/users/davidecallegaro/orgs", "repos_url": "https://api.github.com/users/davidecallegaro/repos", "events_url": "https://api.github.com/users/davidecallegaro/events{/privacy}", "received_events_url": "https://api.github.com/users/davidecallegaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-09T17:48:03Z", "updated_at": "2020-07-09T19:02:30Z", "closed_at": "2020-07-09T19:02:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "When importing the libraries osmnx, geopandas, shapely, running MacOS Big Sur:\r\n\r\n\r\n---------------------------------------------------------------------------\r\nOSError                                   Traceback (most recent call last)\r\n<ipython-input-1-552856d55e3c> in <module>\r\n      1 import networkx as nx\r\n----> 2 import geopandas as gpd\r\n      3 import pandas as pd\r\n      4 import numpy as np\r\n      5 import matplotlib.pyplot as plt\r\n\r\n/usr/local/anaconda3/envs/py37/lib/python3.7/site-packages/geopandas/__init__.py in <module>\r\n----> 1 from geopandas.geoseries import GeoSeries  # noqa\r\n      2 from geopandas.geodataframe import GeoDataFrame  # noqa\r\n      3 from geopandas.array import _points_from_xy as points_from_xy  # noqa\r\n      4 \r\n      5 from geopandas.io.file import read_file  # noqa\r\n\r\n/usr/local/anaconda3/envs/py37/lib/python3.7/site-packages/geopandas/geoseries.py in <module>\r\n     10 \r\n     11 import pyproj\r\n---> 12 from shapely.geometry.base import BaseGeometry\r\n     13 from shapely.ops import transform\r\n     14 \r\n\r\n/usr/local/anaconda3/envs/py37/lib/python3.7/site-packages/shapely/geometry/__init__.py in <module>\r\n      2 \"\"\"\r\n      3 \r\n----> 4 from .base import CAP_STYLE, JOIN_STYLE\r\n      5 from .geo import box, shape, asShape, mapping\r\n      6 from .point import Point, asPoint\r\n\r\n/usr/local/anaconda3/envs/py37/lib/python3.7/site-packages/shapely/geometry/base.py in <module>\r\n     15 \r\n     16 from shapely.affinity import affine_transform\r\n---> 17 from shapely.coords import CoordinateSequence\r\n     18 from shapely.errors import WKBReadingError, WKTReadingError\r\n     19 from shapely.ftools import wraps\r\n\r\n/usr/local/anaconda3/envs/py37/lib/python3.7/site-packages/shapely/coords.py in <module>\r\n      6 from ctypes import byref, c_double, c_uint\r\n      7 \r\n----> 8 from shapely.geos import lgeos\r\n      9 from shapely.topology import Validating\r\n     10 \r\n\r\n/usr/local/anaconda3/envs/py37/lib/python3.7/site-packages/shapely/geos.py in <module>\r\n    111         _lgeos = load_dll('geos_c', fallbacks=alt_paths)\r\n    112 \r\n--> 113     free = load_dll('c').free\r\n    114     free.argtypes = [c_void_p]\r\n    115     free.restype = None\r\n\r\n/usr/local/anaconda3/envs/py37/lib/python3.7/site-packages/shapely/geos.py in load_dll(libname, fallbacks, mode)\r\n     54         raise OSError(\r\n     55             \"Could not find lib {0} or load any of its variants {1}.\".format(\r\n---> 56                 libname, fallbacks or []))\r\n     57 \r\n     58 _lgeos = None\r\n\r\nOSError: Could not find lib c or load any of its variants [].\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/529", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/529/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/529/events", "html_url": "https://github.com/gboeing/osmnx/issues/529", "id": 653278596, "node_id": "MDU6SXNzdWU2NTMyNzg1OTY=", "number": 529, "title": "From a graph generated by OSMnx, how to generate a matrix of edge length, speed, and travel time", "user": {"login": "SomiaBoubedra", "id": 67787106, "node_id": "MDQ6VXNlcjY3Nzg3MTA2", "avatar_url": "https://avatars3.githubusercontent.com/u/67787106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomiaBoubedra", "html_url": "https://github.com/SomiaBoubedra", "followers_url": "https://api.github.com/users/SomiaBoubedra/followers", "following_url": "https://api.github.com/users/SomiaBoubedra/following{/other_user}", "gists_url": "https://api.github.com/users/SomiaBoubedra/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomiaBoubedra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomiaBoubedra/subscriptions", "organizations_url": "https://api.github.com/users/SomiaBoubedra/orgs", "repos_url": "https://api.github.com/users/SomiaBoubedra/repos", "events_url": "https://api.github.com/users/SomiaBoubedra/events{/privacy}", "received_events_url": "https://api.github.com/users/SomiaBoubedra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-08T13:01:06Z", "updated_at": "2020-07-08T15:40:41Z", "closed_at": "2020-07-08T15:40:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "i am generating graphs using OSMnx, and i work on finding the optimal path in a smart city, so i need to extract the edges length, speed, and travel time to 3 matrix. \r\nThe first command return all data about all edges, and the second returns the length of a specific edge in the graph\r\n\r\n```python\r\nedges=G.edges(data=True)\r\nl=G[69579007][99503544][0]['length']\r\n```\r\nSo , the problem is in the ID of the nodes, it is not a sequential ID, can we do a FOR loop to do this, if yes , how can we do it ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/528", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/528/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/528/events", "html_url": "https://github.com/gboeing/osmnx/issues/528", "id": 652274210, "node_id": "MDU6SXNzdWU2NTIyNzQyMTA=", "number": 528, "title": "AttributeError: module 'osmnx' has no attribute 'geocode_to_gdf'", "user": {"login": "peanutj12", "id": 67956744, "node_id": "MDQ6VXNlcjY3OTU2NzQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/67956744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peanutj12", "html_url": "https://github.com/peanutj12", "followers_url": "https://api.github.com/users/peanutj12/followers", "following_url": "https://api.github.com/users/peanutj12/following{/other_user}", "gists_url": "https://api.github.com/users/peanutj12/gists{/gist_id}", "starred_url": "https://api.github.com/users/peanutj12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peanutj12/subscriptions", "organizations_url": "https://api.github.com/users/peanutj12/orgs", "repos_url": "https://api.github.com/users/peanutj12/repos", "events_url": "https://api.github.com/users/peanutj12/events{/privacy}", "received_events_url": "https://api.github.com/users/peanutj12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 547177833, "node_id": "MDU6TGFiZWw1NDcxNzc4MzM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/installation", "name": "installation", "color": "f9d0c4", "default": false, "description": null}, {"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-07T12:15:55Z", "updated_at": "2020-07-07T15:33:24Z", "closed_at": "2020-07-07T15:33:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I know that there are rules for posting questions, but I am really a beginner and I do not know how to explain things very well. I am trying to use OSMNX for the first time and I am testing the examples from the link:\r\n\r\nhttps://geoffboeing.com/2016/11/osmnx-python-street-networks/\r\n\r\nI installed the OSMNX via the following command at CONDA:\r\nconda install -c conda-forge/label/gcc7 osmnx\r\n\r\nI am using Jupyter to test the examples. I tried the first one:\r\nimport osmnx as ox\r\ncity = ox.geocode_to_gdf('Berkeley, California')\r\nax = ox.project_gdf(city).plot()\r\n_ = ax.axis('off')\r\n\r\nBut I receive the following message back:\r\nAttributeError: module 'osmnx' has no attribute 'geocode_to_gdf'\r\n\r\nI believe I am doing something wrong and it might be something very silly. But, as I said, I am really a beginner. My apologies if the question is really silly and thanks in advance.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/527", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/527/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/527/events", "html_url": "https://github.com/gboeing/osmnx/issues/527", "id": 651267735, "node_id": "MDU6SXNzdWU2NTEyNjc3MzU=", "number": 527, "title": "OSM file to graph: dealing with networks on multiple islands", "user": {"login": "shriv", "id": 3827179, "node_id": "MDQ6VXNlcjM4MjcxNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3827179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shriv", "html_url": "https://github.com/shriv", "followers_url": "https://api.github.com/users/shriv/followers", "following_url": "https://api.github.com/users/shriv/following{/other_user}", "gists_url": "https://api.github.com/users/shriv/gists{/gist_id}", "starred_url": "https://api.github.com/users/shriv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shriv/subscriptions", "organizations_url": "https://api.github.com/users/shriv/orgs", "repos_url": "https://api.github.com/users/shriv/repos", "events_url": "https://api.github.com/users/shriv/events{/privacy}", "received_events_url": "https://api.github.com/users/shriv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-06T05:53:21Z", "updated_at": "2020-07-06T05:58:22Z", "closed_at": "2020-07-06T05:58:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hiya, \r\nI've downloaded the NZ railway network from OpenStreetMap as a .osm file. When I use ` rail_net_ox = ox.graph_from_xml(\"data/turbo_rail_data.osm\")`, osmnx only seems to create a graph for one of the islands - NZ has two main islands covered by the rail network. I understand that graphs can have disconnected components but I'm not sure how to get the two components for the country, one per island, using osmnx. Any help would be greatly appreciated!  :-)\r\n\r\n![image](https://user-images.githubusercontent.com/3827179/86559824-014a8900-bfb1-11ea-9d72-ca6ba81b1355.png)\r\n\r\nI'm using osmnx 0.15.1 from conda-forge. The Overpass query to get the full dataset is given below. \r\n![image](https://user-images.githubusercontent.com/3827179/86559889-2a6b1980-bfb1-11ea-82c6-bf96a2a49bc3.png)\r\n\r\n```\r\n[out:xml][timeout:50];\r\n(\r\n node  [\"railway\"=\"rail\"] (-47.84,165.55,-33.5,179.27);\r\n way  [\"railway\"=\"rail\"] (-47.84,165.55,-33.5,179.27);\r\n relation  [\"railway\"=\"rail\"] (-47.84,165.55,-33.5,179.27);\r\n\r\n);\r\n(._;>;);\r\nout body;\r\n```\r\n\r\nThanks!! \r\nShrividya", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/525", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/525/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/525/events", "html_url": "https://github.com/gboeing/osmnx/issues/525", "id": 650813094, "node_id": "MDU6SXNzdWU2NTA4MTMwOTQ=", "number": 525, "title": "Queries regrading OSMnx - Route from source to destination", "user": {"login": "Arthi1904", "id": 64977517, "node_id": "MDQ6VXNlcjY0OTc3NTE3", "avatar_url": "https://avatars2.githubusercontent.com/u/64977517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arthi1904", "html_url": "https://github.com/Arthi1904", "followers_url": "https://api.github.com/users/Arthi1904/followers", "following_url": "https://api.github.com/users/Arthi1904/following{/other_user}", "gists_url": "https://api.github.com/users/Arthi1904/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arthi1904/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arthi1904/subscriptions", "organizations_url": "https://api.github.com/users/Arthi1904/orgs", "repos_url": "https://api.github.com/users/Arthi1904/repos", "events_url": "https://api.github.com/users/Arthi1904/events{/privacy}", "received_events_url": "https://api.github.com/users/Arthi1904/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-04T02:29:03Z", "updated_at": "2020-07-04T04:28:55Z", "closed_at": "2020-07-04T04:28:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm testing OSMNX and I want to plot the graph in US map and find the routes between source and destination. \r\n\r\n```\r\nimport osmnx as ox\r\nimport networkx as nx\r\nimport folium\r\n\r\n# REF: https://stackoverflow.com/questions/60578408/is-it-possible-to-draw-paths-in-folium\r\nox.config(log_console=True, use_cache=True)\r\n\r\nsrc_lat = 40.748441\r\nsrc_lon = -73.985664\r\ndest_lat = 40.748441\r\ndest_lon = -73.4\r\nmode = 'drive'\r\n\r\nG = ox.graph_from_place('Manhattan Island, New York City, New York, USA', network_type=mode)\r\norig_node = ox.get_nearest_node(G,\r\n                                (src_lat, src_lon))\r\ndest_node = ox.get_nearest_node(G,\r\n                                (dest_lat, dest_lon))\r\n\r\nroute = nx.shortest_path(G,\r\n                         orig_node,\r\n                         dest_node,\r\n                         weight='length')\r\n\r\nlength = nx.shortest_path_length(G,\r\n                         orig_node,\r\n                         dest_node,\r\n                         weight='length')\r\n\r\n# Length is in km or miles? \r\nprint(length)\r\n\r\n# Why destination marker and destination points are diffrent?\r\nroute_map = ox.plot_route_folium(G, route)\r\nfolium.Marker([src_lat, src_lon],icon=folium.Icon(color='red'),tooltip='Click here to see Popup').add_to(route_map)\r\nfolium.Marker([dest_lat, dest_lon],icon=folium.Icon(color='green'),tooltip='Click here to see Popup').add_to(route_map)\r\n\r\nroute_map.save('../html/route.html')\r\nroute_map\r\n```\r\noutput:\r\n![route_error](https://user-images.githubusercontent.com/64977517/86503247-df42e200-bdc9-11ea-8701-78b6a0d842d7.PNG)\r\n\r\nFollowing are my queries\r\n1. I'm marking source and destination point (folium.Marker) and the shortest route path is not pointing to the coorinates. Am I mising anything?\r\n\r\n2. In the above code, I've mentioned graph_from_place as \"Manhattan Island, New York City, New York, USA\". But in my testing, I won't be able to know the US state/place. I'll be getting the coorinates as input. \r\nI want to plot a route anywhere in US map(across any city/state/street). If I change the code as \r\n```\r\nG = ox.graph_from_place('USA', network_type=mode)\r\n```\r\n(or)\r\n```\r\nplace1 = 'Manhattan Island, New York City, New York, USA'\r\nplace2 = 'Dubuque, Iowa, USA'\r\n\r\nG = ox.graph_from_place([place1, place2],\r\n                             network_type=mode)\r\n```\r\nIt is throwing an error. \r\nErgo, what needs to added in graph_from_place() so that, I can cover all the states of America?\r\n\r\n3. Length of the shortest path is in km or miles?\r\n\r\n4. How to plot multiple routes for the same source and destination point? \r\nFor instance, show 2 or 3 possible route where, highlight the shortest route in red and other routes in grey.\r\nAlso, get the distance for all the routes? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/521", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/521/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/521/events", "html_url": "https://github.com/gboeing/osmnx/issues/521", "id": 649179530, "node_id": "MDU6SXNzdWU2NDkxNzk1MzA=", "number": 521, "title": "Does osmnx retrieve relation elements (e.g. [\"route\"=\"subway\"])?", "user": {"login": "AlbertoMCS", "id": 16774169, "node_id": "MDQ6VXNlcjE2Nzc0MTY5", "avatar_url": "https://avatars2.githubusercontent.com/u/16774169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlbertoMCS", "html_url": "https://github.com/AlbertoMCS", "followers_url": "https://api.github.com/users/AlbertoMCS/followers", "following_url": "https://api.github.com/users/AlbertoMCS/following{/other_user}", "gists_url": "https://api.github.com/users/AlbertoMCS/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlbertoMCS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlbertoMCS/subscriptions", "organizations_url": "https://api.github.com/users/AlbertoMCS/orgs", "repos_url": "https://api.github.com/users/AlbertoMCS/repos", "events_url": "https://api.github.com/users/AlbertoMCS/events{/privacy}", "received_events_url": "https://api.github.com/users/AlbertoMCS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-01T18:12:20Z", "updated_at": "2020-07-08T16:33:33Z", "closed_at": "2020-07-01T18:29:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Read these instructions carefully. If you don't provide the requested information we need in order to help you, your issue will be automatically closed. Before you proceed, please review the contributing guidelines in this repo's CONTRIBUTING.md.\r\n\r\nThis issue tracker is only for reporting bugs or proposing new features. Please ask \"how-to\" or usage questions on https://stackoverflow.com/ instead (if asked here, they will be automatically closed).\r\n\r\nIf you installed OSMnx via conda and are experiencing installation problems, please open an issue at https://github.com/conda-forge/osmnx-feedstock/issues\r\n\r\nIf you're having trouble with OSMnx, first search the open/closed issues (and Stack Overflow) to see if the problem has already been noted. If not, fill in the template below (we need this information to assist you):\r\n\r\n#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\n\r\n#### What operating system, Python version, and OSMnx version are you using?\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output between the two \"details\" tags below)\r\n\r\n<details>\r\n# Paste the output of your Python packages and their versions here, between these two \"details\" tags\r\n\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\n# your code goes here\r\n# make sure it's complete so we can independently run it from top to bottom\r\n# do NOT post a screenshot of your code or error message: copy/paste the text\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/519", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/519/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/519/events", "html_url": "https://github.com/gboeing/osmnx/issues/519", "id": 647616510, "node_id": "MDU6SXNzdWU2NDc2MTY1MTA=", "number": 519, "title": "geopandas 0.8 compatibility and warnings", "user": {"login": "gboeing", "id": 4977197, "node_id": "MDQ6VXNlcjQ5NzcxOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4977197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gboeing", "html_url": "https://github.com/gboeing", "followers_url": "https://api.github.com/users/gboeing/followers", "following_url": "https://api.github.com/users/gboeing/following{/other_user}", "gists_url": "https://api.github.com/users/gboeing/gists{/gist_id}", "starred_url": "https://api.github.com/users/gboeing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gboeing/subscriptions", "organizations_url": "https://api.github.com/users/gboeing/orgs", "repos_url": "https://api.github.com/users/gboeing/repos", "events_url": "https://api.github.com/users/gboeing/events{/privacy}", "received_events_url": "https://api.github.com/users/gboeing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-29T19:38:52Z", "updated_at": "2020-06-30T05:42:37Z", "closed_at": "2020-06-30T05:42:37Z", "author_association": "OWNER", "active_lock_reason": null, "body": "OSMnx v0.15.0 triggers a couple warnings with geopandas 0.8.\r\n\r\n```\r\nosmnx/utils_graph.py:56: FutureWarning: Assigning CRS to a GeoDataFrame without a geometry column is now deprecated and will not be supported in the future.\r\n  gdf_nodes = gpd.GeoDataFrame(data, index=nodes, crs=crs)\r\n```\r\n\r\n```\r\nosmnx/pois.py:370: UserWarning: Geometry is in a geographic CRS. Results from 'centroid' are likely incorrect. Use 'GeoSeries.to_crs()' to re-project geometries to a projected CRS before this operation.\r\n\r\n  gdf = gdf.loc[gdf[\"geometry\"].centroid.within(polygon)]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/516", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/516/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/516/events", "html_url": "https://github.com/gboeing/osmnx/issues/516", "id": 647495163, "node_id": "MDU6SXNzdWU2NDc0OTUxNjM=", "number": 516, "title": "Receive ValueError when saving in GeoPackage format", "user": {"login": "andrewalseth", "id": 31556838, "node_id": "MDQ6VXNlcjMxNTU2ODM4", "avatar_url": "https://avatars0.githubusercontent.com/u/31556838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewalseth", "html_url": "https://github.com/andrewalseth", "followers_url": "https://api.github.com/users/andrewalseth/followers", "following_url": "https://api.github.com/users/andrewalseth/following{/other_user}", "gists_url": "https://api.github.com/users/andrewalseth/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewalseth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewalseth/subscriptions", "organizations_url": "https://api.github.com/users/andrewalseth/orgs", "repos_url": "https://api.github.com/users/andrewalseth/repos", "events_url": "https://api.github.com/users/andrewalseth/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewalseth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-29T16:03:47Z", "updated_at": "2020-06-29T20:04:44Z", "closed_at": "2020-06-29T16:57:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\nI downloaded a graph from place with a filter, reprojected the graph to EPSG:3857, consolidated the intersections and attempted to save the resulting output to a geopackage format. Received ValueError each time, as below.\r\n\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-153-6be1e98cdb9d> in <module>\r\n----> 1 ox.io.save_graph_geopackage(G_test, 'data/Kirkwood_test.gpkg')\r\n\r\n~/opt/anaconda3/envs/ox/lib/python3.8/site-packages/osmnx/io.py in save_graph_geopackage(G, filepath, encoding)\r\n     51 \r\n     52     # save the nodes and edges as GeoPackage layers\r\n---> 53     gdf_nodes.to_file(filepath, layer=\"nodes\", driver=\"GPKG\", encoding=encoding)\r\n     54     gdf_edges.to_file(filepath, layer=\"edges\", driver=\"GPKG\", encoding=encoding)\r\n     55     utils.log(f'Saved graph as GeoPackage at \"{filepath}\"')\r\n\r\n~/opt/anaconda3/envs/ox/lib/python3.8/site-packages/geopandas/geodataframe.py in to_file(self, filename, driver, schema, index, **kwargs)\r\n    531         from geopandas.io.file import to_file\r\n    532 \r\n--> 533         to_file(self, filename, driver, schema, index, **kwargs)\r\n    534 \r\n    535     def to_crs(self, crs=None, epsg=None, inplace=False):\r\n\r\n~/opt/anaconda3/envs/ox/lib/python3.8/site-packages/geopandas/io/file.py in to_file(df, filename, driver, schema, index, **kwargs)\r\n    191             filename, \"w\", driver=driver, crs_wkt=crs_wkt, schema=schema, **kwargs\r\n    192         ) as colxn:\r\n--> 193             colxn.writerecords(df.iterfeatures())\r\n    194 \r\n    195 \r\n\r\n~/opt/anaconda3/envs/ox/lib/python3.8/site-packages/fiona/collection.py in writerecords(self, records)\r\n    340         if self.mode not in ('a', 'w'):\r\n    341             raise IOError(\"collection not open for writing\")\r\n--> 342         self.session.writerecs(records, self)\r\n    343         self._len = self.session.get_length()\r\n    344         self._bounds = self.session.get_extent()\r\n\r\nfiona/ogrext.pyx in fiona.ogrext.WritingSession.writerecs()\r\n\r\nfiona/ogrext.pyx in fiona.ogrext.OGRFeatureBuilder.build()\r\n\r\nValueError: Invalid field type <class 'numpy.int64'>\r\n\r\n\r\n```\r\n\r\nSaving as GraphML or shapefile format does not create a ValueError, however.\r\n\r\n#### What operating system, Python version, and OSMnx version are you using?\r\nOSX 10.15.4, Python 3.8, OSMnx 0.14.1\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output between the two \"details\" tags below)\r\n\r\n<details>\r\n# Paste the output of your Python packages and their versions here, between these two \"details\" tags\r\nappnope                   0.1.0           py38h32f6830_1001    conda-forge\r\nattrs                     19.3.0                     py_0    conda-forge\r\nbackcall                  0.1.0                      py_0    conda-forge\r\nbleach                    3.1.5              pyh9f0ad1d_0    conda-forge\r\nboost-cpp                 1.72.0               hdf9ef73_0    conda-forge\r\nbranca                    0.4.1                      py_0    conda-forge\r\nbrotlipy                  0.7.0           py38h64e0658_1000    conda-forge\r\nbzip2                     1.0.8                h0b31af3_2    conda-forge\r\nca-certificates           2020.4.5.2           hecda079_0    conda-forge\r\ncairo                     1.16.0            hec6a9b0_1003    conda-forge\r\ncertifi                   2020.4.5.2       py38h32f6830_0    conda-forge\r\ncffi                      1.14.0           py38h356ff06_0    conda-forge\r\ncfitsio                   3.470                hddc9c06_5    conda-forge\r\nchardet                   3.0.4           py38h32f6830_1006    conda-forge\r\nclick                     7.1.2              pyh9f0ad1d_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncoverage                  5.1              py38h64e0658_0    conda-forge\r\ncryptography              2.9.2            py38hb761dab_0    conda-forge\r\ncurl                      7.69.1               h2d98d24_0    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ndbus                      1.13.6               h2f22bb5_0    conda-forge\r\ndecorator                 4.4.2                      py_0    conda-forge\r\ndefusedxml                0.6.0                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\nentrypoints               0.3             py38h32f6830_1001    conda-forge\r\nexiv2                     0.27.1               ha4feea6_0    conda-forge\r\nexpat                     2.2.9                h4a8c4bd_2    conda-forge\r\nfiona                     1.8.13           py38he71f6a4_0    conda-forge\r\nfolium                    0.11.0                     py_0    conda-forge\r\nfontconfig                2.13.1            h6b1039f_1001    conda-forge\r\nfreetype                  2.10.2               h8da9a1a_0    conda-forge\r\nfreexl                    1.0.5             h1de35cc_1002    conda-forge\r\nfuture                    0.18.2           py38h32f6830_1    conda-forge\r\ngdal                      3.0.4           py38h9f7df5a_10    conda-forge\r\ngeopandas                 0.7.0                      py_1    conda-forge\r\ngeos                      3.8.1                h4a8c4bd_0    conda-forge\r\ngeotiff                   1.6.0                hd8796ba_0    conda-forge\r\ngettext                   0.19.8.1          h46ab8bc_1002    conda-forge\r\ngiflib                    5.2.1                h0b31af3_2    conda-forge\r\nglib                      2.64.3               h577aef8_0    conda-forge\r\ngsl                       2.6                  ha2d443c_0    conda-forge\r\nhdf4                      4.2.13            h84186c3_1003    conda-forge\r\nhdf5                      1.10.6          nompi_h3e39495_100    conda-forge\r\nhttplib2                  0.18.1             pyh9f0ad1d_0    conda-forge\r\nicu                       64.2                 h6de7cb9_1    conda-forge\r\nidna                      2.9                        py_1    conda-forge\r\nimportlib-metadata        1.6.1            py38h32f6830_0    conda-forge\r\nimportlib_metadata        1.6.1                         0    conda-forge\r\nipykernel                 5.3.0            py38h23f93f0_0    conda-forge\r\nipython                   7.15.0           py38h32f6830_0    conda-forge\r\nipython_genutils          0.2.0                      py_1    conda-forge\r\njedi                      0.17.0           py38h32f6830_0    conda-forge\r\njinja2                    2.11.2             pyh9f0ad1d_0    conda-forge\r\njoblib                    0.15.1                     py_0    conda-forge\r\njpeg                      9d                   h0b31af3_0    conda-forge\r\njson-c                    0.13.1            h575e443_1002    conda-forge\r\njson5                     0.9.0                      py_0    conda-forge\r\njsonschema                3.2.0            py38h32f6830_1    conda-forge\r\njupyter_client            6.1.3                      py_0    conda-forge\r\njupyter_core              4.6.3            py38h32f6830_1    conda-forge\r\njupyterlab                2.1.4                      py_0    conda-forge\r\njupyterlab_server         1.1.5                      py_0    conda-forge\r\njupyterthemes             0.20.0                     py_1    conda-forge\r\nkealib                    1.4.13               h40102fb_1    conda-forge\r\nkiwisolver                1.2.0            py38ha0d09dd_0    conda-forge\r\nkrb5                      1.17.1               h1752a42_0    conda-forge\r\nlesscpy                   0.13.0                     py_1    conda-forge\r\nlibblas                   3.8.0               16_openblas    conda-forge\r\nlibcblas                  3.8.0               16_openblas    conda-forge\r\nlibclang                  9.0.1           default_hf57f61e_0    conda-forge\r\nlibcurl                   7.69.1               hc0b9707_0    conda-forge\r\nlibcxx                    10.0.0               h1af66ff_2    conda-forge\r\nlibdap4                   3.20.6               h8c15375_0    conda-forge\r\nlibedit                   3.1.20191231         hed1e85f_0    conda-forge\r\nlibffi                    3.2.1             h4a8c4bd_1007    conda-forge\r\nlibgdal                   3.0.4               h242383b_10    conda-forge\r\nlibgfortran               4.0.0                         2    conda-forge\r\nlibiconv                  1.15              h0b31af3_1006    conda-forge\r\nlibkml                    1.3.0             h169b8f9_1011    conda-forge\r\nliblapack                 3.8.0               16_openblas    conda-forge\r\nlibllvm9                  9.0.1                h7475705_1    conda-forge\r\nlibnetcdf                 4.7.4           nompi_ha11d67f_104    conda-forge\r\nlibopenblas               0.3.9                h3d69b6c_0    conda-forge\r\nlibpng                    1.6.37               hbbe82c9_1    conda-forge\r\nlibpq                     12.2                 h489d428_1    conda-forge\r\nlibsodium                 1.0.17               h01d97ff_0    conda-forge\r\nlibspatialindex           1.9.3                h4a8c4bd_3    conda-forge\r\nlibspatialite             4.3.0a            h658e6c1_1038    conda-forge\r\nlibssh2                   1.9.0                h39bdce6_2    conda-forge\r\nlibtasn1                  4.14                 h01d97ff_0    conda-forge\r\nlibtiff                   4.1.0                h2ae36a8_6    conda-forge\r\nlibwebp-base              1.1.0                h0b31af3_3    conda-forge\r\nlibxml2                   2.9.10               h53d96d6_0    conda-forge\r\nlibzip                    1.5.1             h22952d1_1005    conda-forge\r\nllvm-openmp               10.0.0               h28b9765_0    conda-forge\r\nlz4-c                     1.9.2                h4a8c4bd_1    conda-forge\r\nmarkupsafe                1.1.1            py38h64e0658_1    conda-forge\r\nmatplotlib-base           3.2.1            py38h1300a51_0    conda-forge\r\nmistune                   0.8.4           py38h64e0658_1001    conda-forge\r\nmock                      4.0.2            py38h32f6830_0    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nnbconvert                 5.6.1            py38h32f6830_1    conda-forge\r\nnbformat                  5.0.6                      py_0    conda-forge\r\nncurses                   6.1               h0a44026_1002    conda-forge\r\nnetworkx                  2.4                        py_1    conda-forge\r\nnose2                     0.9.2                      py_0    conda-forge\r\nnotebook                  6.0.3            py38h32f6830_0    conda-forge\r\nnspr                      4.20              h0a44026_1000    conda-forge\r\nnss                       3.47                 hc0980d9_0    conda-forge\r\nnumpy                     1.18.5           py38h1f821a2_0    conda-forge\r\nopenjpeg                  2.3.1                h254dc36_3    conda-forge\r\nopenssl                   1.1.1g               h0b31af3_0    conda-forge\r\nosmnx                     0.14.1             pyh9f0ad1d_0    conda-forge\r\nowslib                    0.20.0                     py_0    conda-forge\r\npackaging                 20.4               pyh9f0ad1d_0    conda-forge\r\npandas                    1.0.4            py38h5fc983b_0    conda-forge\r\npandoc                    2.9.2.1                       0    conda-forge\r\npandocfilters             1.4.2                      py_1    conda-forge\r\nparso                     0.7.0              pyh9f0ad1d_0    conda-forge\r\npcre                      8.44                 h4a8c4bd_0    conda-forge\r\npexpect                   4.8.0            py38h32f6830_1    conda-forge\r\npickleshare               0.7.5           py38h32f6830_1001    conda-forge\r\npip                       20.1.1                     py_1    conda-forge\r\npixman                    0.38.0            h01d97ff_1003    conda-forge\r\nplotly                    4.8.1              pyh9f0ad1d_0    conda-forge\r\nply                       3.11                       py_1    conda-forge\r\npoppler                   0.87.0               h3232a60_1    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.2                 h62ab893_1    conda-forge\r\nproj                      7.0.0                hbce2d5c_4    conda-forge\r\nprometheus_client         0.8.0              pyh9f0ad1d_0    conda-forge\r\nprompt-toolkit            3.0.5                      py_0    conda-forge\r\npsycopg2                  2.8.5            py38hb761dab_1    conda-forge\r\nptyprocess                0.6.0                   py_1001    conda-forge\r\npycparser                 2.20                       py_0    conda-forge\r\npygments                  2.6.1                      py_0    conda-forge\r\npyopenssl                 19.1.0                     py_1    conda-forge\r\npyparsing                 2.4.7              pyh9f0ad1d_0    conda-forge\r\npyproj                    2.6.1.post1      py38h7d7e87d_0    conda-forge\r\npyqt                      5.12.3           py38hf180056_3    conda-forge\r\npyqt5-sip                 4.19.18                  pypi_0    pypi\r\npyqtchart                 5.12                     pypi_0    pypi\r\npyqtwebengine             5.12.1                   pypi_0    pypi\r\npyrsistent                0.16.0           py38h64e0658_0    conda-forge\r\npysocks                   1.7.1            py38h32f6830_1    conda-forge\r\npython                    3.8.3           cpython_hd5f0129_0    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npython_abi                3.8                      1_cp38    conda-forge\r\npytz                      2020.1             pyh9f0ad1d_0    conda-forge\r\npyyaml                    5.3.1            py38h64e0658_0    conda-forge\r\npyzmq                     19.0.1           py38h1fcdcd6_0    conda-forge\r\nqca                       2.2.1                hc763db3_3    conda-forge\r\nqgis                      3.12.2           py38h7226ff3_0    conda-forge\r\nqjson                     0.9.0             hc763db3_1006    conda-forge\r\nqscintilla2               2.11.2           py38h2815f34_2    conda-forge\r\nqt                        5.12.5               h514805e_3    conda-forge\r\nqtkeychain                0.10.0               h2815f34_0    conda-forge\r\nqtlocation                5.12.5               h4a8c4bd_0    conda-forge\r\nqtserialport              5.9.8                hc763db3_1    conda-forge\r\nqwt                       6.1.5                h2815f34_0    conda-forge\r\nqwtpolar                  1.1.1                h2815f34_7    conda-forge\r\nreadline                  8.0                  hcfe32e1_0    conda-forge\r\nrequests                  2.23.0             pyh8c360ce_2    conda-forge\r\nretrying                  1.3.3                      py_2    conda-forge\r\nrtree                     0.9.4            py38h08f867b_1    conda-forge\r\nscikit-learn              0.23.1           py38hb7f0800_0    conda-forge\r\nscipy                     1.4.1            py38h38b60c6_3    conda-forge\r\nsend2trash                1.5.0                      py_0    conda-forge\r\nsetuptools                47.1.1           py38h32f6830_0    conda-forge\r\nshapely                   1.7.0            py38h5b1fbde_3    conda-forge\r\nsip                       4.19.22          py38hc84c608_0    conda-forge\r\nsix                       1.15.0             pyh9f0ad1d_0    conda-forge\r\nsqlite                    3.30.1               h93121df_0    conda-forge\r\ntbb                       2019.9               ha1b3eb9_1    conda-forge\r\nterminado                 0.8.3            py38h32f6830_1    conda-forge\r\ntestpath                  0.4.4                      py_0    conda-forge\r\nthreadpoolctl             2.1.0              pyh5ca1d4c_0    conda-forge\r\ntiledb                    1.7.7                h84aa2a7_3    conda-forge\r\ntk                        8.6.10               hbbe82c9_0    conda-forge\r\ntornado                   6.0.4            py38h64e0658_1    conda-forge\r\ntraitlets                 4.3.3            py38h32f6830_1    conda-forge\r\ntzcode                    2020a                h0b31af3_0    conda-forge\r\nurllib3                   1.25.9                     py_0    conda-forge\r\nwcwidth                   0.2.4              pyh9f0ad1d_0    conda-forge\r\nwebencodings              0.5.1                      py_1    conda-forge\r\nwheel                     0.34.2                     py_1    conda-forge\r\nxerces-c                  3.2.2             h8f8adb3_1004    conda-forge\r\nxz                        5.2.5                h0b31af3_0    conda-forge\r\nyaml                      0.2.5                h0b31af3_0    conda-forge\r\nzeromq                    4.3.2                h6de7cb9_2    conda-forge\r\nzipp                      3.1.0                      py_0    conda-forge\r\nzlib                      1.2.11            h0b31af3_1006    conda-forge\r\nzstd                      1.4.4                h4b3e974_3    conda-forge\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\nplace = 'Kirkwood, Missouri, USA'\r\ncf = '[\"highway\"~\"motorway|motorway_link|primary|primary_link|secondary_link|tertiary|' +\\\r\n        'tertiary_link|trunk|trunk_link|unclassified|secondary\"]'\r\n\r\nG_test = ox.graph_from_place(place, network_type='drive', custom_filter=cf)\r\nG_test = ox.project_graph(G_test, to_crs='epsg:3857')\r\nG_test = ox.consolidate_intersections(G_test, tolerance=20)\r\n\r\nox.io.save_graph_geopackage(G_test, 'data/Kirkwood_test.gpkg')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/515", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/515/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/515/events", "html_url": "https://github.com/gboeing/osmnx/issues/515", "id": 646827128, "node_id": "MDU6SXNzdWU2NDY4MjcxMjg=", "number": 515, "title": "Error with plot.get_node_colors_by_attr() function", "user": {"login": "pthangeda", "id": 17803179, "node_id": "MDQ6VXNlcjE3ODAzMTc5", "avatar_url": "https://avatars2.githubusercontent.com/u/17803179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pthangeda", "html_url": "https://github.com/pthangeda", "followers_url": "https://api.github.com/users/pthangeda/followers", "following_url": "https://api.github.com/users/pthangeda/following{/other_user}", "gists_url": "https://api.github.com/users/pthangeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/pthangeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pthangeda/subscriptions", "organizations_url": "https://api.github.com/users/pthangeda/orgs", "repos_url": "https://api.github.com/users/pthangeda/repos", "events_url": "https://api.github.com/users/pthangeda/events{/privacy}", "received_events_url": "https://api.github.com/users/pthangeda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-28T03:22:21Z", "updated_at": "2020-06-29T17:48:12Z", "closed_at": "2020-06-29T17:48:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Problem description\r\nFunction ox.plot.get_node_colors_by_attr() raises ValueError when the node attribute considered for plotting has a highly biased distribution. This error comes down to an issue with the pd.qcut used to create bins. The function raises ValueError when edges are non unique and a quick fix would be to drop duplicate edges. \r\n\r\n\r\n#### What operating system, Python version, and OSMnx version are you using?\r\nUbuntu 18.04 and osmnx version 0.14.1\r\n\r\n\r\n<details>\r\nHere is the error message:\r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-81-e52a5c62776f> in <module>\r\n----> 1 nc1 = ox.plot.get_node_colors_by_attr(G, 'pop_score_block', cmap='plasma')\r\n      2 fig1, ax1 = ox.plot_graph(G, node_color=nc1, node_size=20, node_zorder=2,\r\n      3                         edge_linewidth=2, edge_color='#333333', bgcolor='k')\r\n\r\n~/miniconda3/envs/temp/lib/python3.6/site-packages/osmnx/plot.py in get_node_colors_by_attr(G, attr, num_bins, cmap, start, stop, na_color)\r\n    214     bin_labels = range(num_bins)\r\n    215     attr_values = pd.Series([data[attr] for node, data in G.nodes(data=True)])\r\n--> 216     cats = pd.qcut(x=attr_values, q=num_bins, labels=bin_labels)\r\n    217     colors = get_colors(num_bins, cmap, start, stop)\r\n    218     node_colors = [colors[int(cat)] if pd.notnull(cat) else na_color for cat in cats]\r\n\r\n~/miniconda3/envs/temp/lib/python3.6/site-packages/pandas/core/reshape/tile.py in qcut(x, q, labels, retbins, precision, duplicates)\r\n    346         include_lowest=True,\r\n    347         dtype=dtype,\r\n--> 348         duplicates=duplicates,\r\n    349     )\r\n    350 \r\n\r\n~/miniconda3/envs/temp/lib/python3.6/site-packages/pandas/core/reshape/tile.py in _bins_to_cuts(x, bins, right, labels, precision, include_lowest, dtype, duplicates)\r\n    379         if duplicates == \"raise\":\r\n    380             raise ValueError(\r\n--> 381                 f\"Bin edges must be unique: {repr(bins)}.\\n\"\r\n    382                 f\"You can drop duplicate edges by setting the 'duplicates' kwarg\"\r\n    383             )\r\n\r\nValueError: Bin edges must be unique: array([  0.        ,   0.        ,   0.        , ..., 769.40659062,\r\n       792.8       , 792.8       ]).\r\nYou can drop duplicate edges by setting the 'duplicates' kwarg\r\n\r\n</details>\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/512", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/512/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/512/events", "html_url": "https://github.com/gboeing/osmnx/issues/512", "id": 645678808, "node_id": "MDU6SXNzdWU2NDU2Nzg4MDg=", "number": 512, "title": "Add alternative elevation provider", "user": {"login": "janikmu", "id": 2056743, "node_id": "MDQ6VXNlcjIwNTY3NDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2056743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janikmu", "html_url": "https://github.com/janikmu", "followers_url": "https://api.github.com/users/janikmu/followers", "following_url": "https://api.github.com/users/janikmu/following{/other_user}", "gists_url": "https://api.github.com/users/janikmu/gists{/gist_id}", "starred_url": "https://api.github.com/users/janikmu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janikmu/subscriptions", "organizations_url": "https://api.github.com/users/janikmu/orgs", "repos_url": "https://api.github.com/users/janikmu/repos", "events_url": "https://api.github.com/users/janikmu/events{/privacy}", "received_events_url": "https://api.github.com/users/janikmu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-25T15:59:30Z", "updated_at": "2020-06-26T18:20:56Z", "closed_at": "2020-06-26T18:20:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because Google Maps is not free, and the monthly 200$ budget does not even cover fetching node elevations for one big city, I looked for alternative REST-style APIs that provide elevation data.\r\n\r\nAirmap (https://developers.airmap.com/docs/elevation-api) weirdly seems to be free, permanent and without quotas.\r\nI was able to add node elevation for three different network types (walk, bike, drive) for multiple cities without running into limitations. The biggest network was >80.000 nodes and fetching elevation data in batches of 1000 took less than two minutes.\r\n\r\nI am happy to prepare a pull request with the minor changes necessary to the elevation module such that one can use something like a `provider=Airmap` function parameter (defaulting to Google Maps?) when calling `add_node_elevations`.\r\n\r\nNote though, that the elevation resolution is not as good as with GMaps (elevation is in integer meters). The spatial resolution seems to be similar to SRTM30m datasets. A limitation is that the elevation dataset \"is limited to latitudes from 56\u00baS to 60\u00baN\" (another hint at SRTM30m).\r\nThese limitations, however seem like a fair trade-off for everyone that willingly uses the alternative provider. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/511", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/511/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/511/events", "html_url": "https://github.com/gboeing/osmnx/issues/511", "id": 645322614, "node_id": "MDU6SXNzdWU2NDUzMjI2MTQ=", "number": 511, "title": "Adding get_largest_component to core API?", "user": {"login": "ChrisStonehenge", "id": 52127598, "node_id": "MDQ6VXNlcjUyMTI3NTk4", "avatar_url": "https://avatars2.githubusercontent.com/u/52127598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisStonehenge", "html_url": "https://github.com/ChrisStonehenge", "followers_url": "https://api.github.com/users/ChrisStonehenge/followers", "following_url": "https://api.github.com/users/ChrisStonehenge/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisStonehenge/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisStonehenge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisStonehenge/subscriptions", "organizations_url": "https://api.github.com/users/ChrisStonehenge/orgs", "repos_url": "https://api.github.com/users/ChrisStonehenge/repos", "events_url": "https://api.github.com/users/ChrisStonehenge/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisStonehenge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-25T08:25:38Z", "updated_at": "2020-07-04T21:25:28Z", "closed_at": "2020-06-25T18:01:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nwhen I upgraded from 0.12.x to 0.14.1 I realised that some functions, including get_largest_component, are still part of the [public documentation](https://osmnx.readthedocs.io/en/stable/osmnx.html#osmnx.utils_graph.get_largest_component) but are not imported directly as part of the core API.\r\n\r\nAre those intentionally missing in the _api.py? Because for me it is a bit confusing to understand which functions are public and therefore part of the core API and which are internal.\r\n\r\nThanks,\r\nChris", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/507", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/507/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/507/events", "html_url": "https://github.com/gboeing/osmnx/issues/507", "id": 642351251, "node_id": "MDU6SXNzdWU2NDIzNTEyNTE=", "number": 507, "title": "AttributeError: module 'osmnx' has no attribute 'quadrat_cut_geometry'", "user": {"login": "KeeratKG", "id": 58954611, "node_id": "MDQ6VXNlcjU4OTU0NjEx", "avatar_url": "https://avatars1.githubusercontent.com/u/58954611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KeeratKG", "html_url": "https://github.com/KeeratKG", "followers_url": "https://api.github.com/users/KeeratKG/followers", "following_url": "https://api.github.com/users/KeeratKG/following{/other_user}", "gists_url": "https://api.github.com/users/KeeratKG/gists{/gist_id}", "starred_url": "https://api.github.com/users/KeeratKG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KeeratKG/subscriptions", "organizations_url": "https://api.github.com/users/KeeratKG/orgs", "repos_url": "https://api.github.com/users/KeeratKG/repos", "events_url": "https://api.github.com/users/KeeratKG/events{/privacy}", "received_events_url": "https://api.github.com/users/KeeratKG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-20T10:26:10Z", "updated_at": "2020-07-04T21:25:16Z", "closed_at": "2020-06-20T20:16:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. \r\n#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\nI ran the following lines of code:\r\n```\r\ngeometry_cut = ox.quadrat_cut_geometry(geometry, quadrat_width=750) #width in metres, to introduce gridlines\r\nprint(type(geometry_cut))\r\n```\r\nI expected the outcome:\r\n`<class 'shapely.geometry.multipolygon.MultiPolygon'>`\r\nBut instead got the error:\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-14-e7cf74efad96> in <module>\r\n----> 1 geometry_cut = ox.quadrat_cut_geometry(geometry, quadrat_width=750) #width in metres, to introduce gridlines\r\n      2 print(type(geometry_cut))\r\n\r\nAttributeError: module 'osmnx' has no attribute 'quadrat_cut_geometry'\r\n\r\n```\r\n#### What operating system, Python version, and OSMnx version are you using?\r\nOS: Linux_x64\r\nosmnx-0.14.1   \r\nPython version: 3.8.3\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output between the two \"details\" tags below)\r\n\r\n<details>\r\n# packages in environment at /home/keerat/anaconda3/envs/geo_env:\r\n#\r\n# Name                    Version                   Build  Channel\r\n_libgcc_mutex             0.1                 conda_forge    conda-forge\r\n_openmp_mutex             4.5                      1_llvm    conda-forge\r\nattrs                     19.3.0                     py_0    conda-forge\r\nbackcall                  0.2.0              pyh9f0ad1d_0    conda-forge\r\nbleach                    3.1.5              pyh9f0ad1d_0    conda-forge\r\nboost-cpp                 1.72.0               h8e57a91_0    conda-forge\r\nbranca                    0.4.1                      py_0    conda-forge\r\nbrotlipy                  0.7.0           py38h1e0a361_1000    conda-forge\r\nbzip2                     1.0.8                h516909a_2    conda-forge\r\nca-certificates           2020.4.5.2           hecda079_0    conda-forge\r\ncairo                     1.16.0            hcf35c78_1003    conda-forge\r\ncertifi                   2020.4.5.2       py38h32f6830_0    conda-forge\r\ncffi                      1.14.0           py38hd463f26_0    conda-forge\r\ncfitsio                   3.470                h3eac812_5    conda-forge\r\nchardet                   3.0.4           py38h32f6830_1006    conda-forge\r\nclick                     7.1.2              pyh9f0ad1d_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncryptography              2.9.2            py38h766eaa4_0    conda-forge\r\ncurl                      7.69.1               h33f0ec9_0    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ndecorator                 4.4.2                      py_0    conda-forge\r\ndefusedxml                0.6.0                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\nentrypoints               0.3             py38h32f6830_1001    conda-forge\r\nexpat                     2.2.9                he1b5a44_2    conda-forge\r\nfiona                     1.8.13           py38h033e0f6_1    conda-forge\r\nfolium                    0.11.0                     py_0    conda-forge\r\nfontconfig                2.13.1            h86ecdb6_1001    conda-forge\r\nfreetype                  2.10.2               he06d7ca_0    conda-forge\r\nfreexl                    1.0.5             h14c3975_1002    conda-forge\r\ngdal                      3.0.4           py38h172510d_10    conda-forge\r\ngeopandas                 0.7.0                      py_1    conda-forge\r\ngeos                      3.8.1                he1b5a44_0    conda-forge\r\ngeotiff                   1.6.0                h05acad5_0    conda-forge\r\ngettext                   0.19.8.1          hc5be6a0_1002    conda-forge\r\ngiflib                    5.2.1                h516909a_2    conda-forge\r\nglib                      2.64.3               h6f030ca_0    conda-forge\r\nhdf4                      4.2.13            hf30be14_1003    conda-forge\r\nhdf5                      1.10.6          nompi_h3c11f04_100    conda-forge\r\nicu                       64.2                 he1b5a44_1    conda-forge\r\nidna                      2.9                        py_1    conda-forge\r\nimportlib-metadata        1.6.1            py38h32f6830_0    conda-forge\r\nimportlib_metadata        1.6.1                         0    conda-forge\r\nipykernel                 5.3.0            py38h23f93f0_0    conda-forge\r\nipython                   7.15.0           py38h32f6830_0    conda-forge\r\nipython_genutils          0.2.0                      py_1    conda-forge\r\njedi                      0.17.1           py38h32f6830_0    conda-forge\r\njinja2                    2.11.2             pyh9f0ad1d_0    conda-forge\r\njoblib                    0.15.1                     py_0    conda-forge\r\njpeg                      9d                   h516909a_0    conda-forge\r\njson-c                    0.13.1            hbfbb72e_1002    conda-forge\r\njsonschema                3.2.0            py38h32f6830_1    conda-forge\r\njupyter_client            6.1.3                      py_0    conda-forge\r\njupyter_core              4.6.3            py38h32f6830_1    conda-forge\r\nkealib                    1.4.13               h33137a7_1    conda-forge\r\nkiwisolver                1.2.0            py38hbf85e49_0    conda-forge\r\nkrb5                      1.17.1               h2fd8d38_0    conda-forge\r\nld_impl_linux-64          2.34                 h53a641e_5    conda-forge\r\nlibblas                   3.8.0               16_openblas    conda-forge\r\nlibcblas                  3.8.0               16_openblas    conda-forge\r\nlibcurl                   7.69.1               hf7181ac_0    conda-forge\r\nlibdap4                   3.20.6               h1d1bd15_0    conda-forge\r\nlibedit                   3.1.20191231         h46ee950_0    conda-forge\r\nlibffi                    3.2.1             he1b5a44_1007    conda-forge\r\nlibgcc-ng                 9.2.0                h24d8f2e_2    conda-forge\r\nlibgdal                   3.0.4               he6a97d6_10    conda-forge\r\nlibgfortran-ng            7.5.0                hdf63c60_6    conda-forge\r\nlibiconv                  1.15              h516909a_1006    conda-forge\r\nlibkml                    1.3.0             hb574062_1011    conda-forge\r\nliblapack                 3.8.0               16_openblas    conda-forge\r\nlibnetcdf                 4.7.4           nompi_h84807e1_104    conda-forge\r\nlibopenblas               0.3.9                h5ec1e0e_0    conda-forge\r\nlibpng                    1.6.37               hed695b0_1    conda-forge\r\nlibpq                     12.2                 h5513abc_1    conda-forge\r\nlibsodium                 1.0.17               h516909a_0    conda-forge\r\nlibspatialindex           1.9.3                he1b5a44_3    conda-forge\r\nlibspatialite             4.3.0a            h2482549_1038    conda-forge\r\nlibssh2                   1.9.0                hab1572f_2    conda-forge\r\nlibstdcxx-ng              9.2.0                hdf63c60_2    conda-forge\r\nlibtiff                   4.1.0                hc7e4089_6    conda-forge\r\nlibuuid                   2.32.1            h14c3975_1000    conda-forge\r\nlibwebp-base              1.1.0                h516909a_3    conda-forge\r\nlibxcb                    1.13              h14c3975_1002    conda-forge\r\nlibxml2                   2.9.10               hee79883_0    conda-forge\r\nllvm-openmp               10.0.0               hc9558a2_0    conda-forge\r\nlz4-c                     1.9.2                he1b5a44_1    conda-forge\r\nmarkupsafe                1.1.1            py38h1e0a361_1    conda-forge\r\nmatplotlib-base           3.2.2            py38h2af1d28_0    conda-forge\r\nmistune                   0.8.4           py38h1e0a361_1001    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nnb_conda                  2.2.1                    py38_2    conda-forge\r\nnb_conda_kernels          2.2.3                    py38_0    conda-forge\r\nnbconvert                 5.6.1            py38h32f6830_1    conda-forge\r\nnbformat                  5.0.6                      py_0    conda-forge\r\nncurses                   6.1               hf484d3e_1002    conda-forge\r\nnetworkx                  2.4                        py_1    conda-forge\r\nnotebook                  6.0.3            py38h32f6830_0    conda-forge\r\nnumpy                     1.18.5           py38h8854b6b_0    conda-forge\r\nopenjpeg                  2.3.1                h981e76c_3    conda-forge\r\nopenssl                   1.1.1g               h516909a_0    conda-forge\r\nosmnx                     0.14.1             pyh9f0ad1d_0    conda-forge\r\npackaging                 20.4               pyh9f0ad1d_0    conda-forge\r\npandas                    1.0.5            py38hcb8c335_0    conda-forge\r\npandoc                    2.9.2.1                       0    conda-forge\r\npandocfilters             1.4.2                      py_1    conda-forge\r\nparso                     0.7.0              pyh9f0ad1d_0    conda-forge\r\npcre                      8.44                 he1b5a44_0    conda-forge\r\npexpect                   4.8.0            py38h32f6830_1    conda-forge\r\npickleshare               0.7.5           py38h32f6830_1001    conda-forge\r\npip                       20.1.1                     py_1    conda-forge\r\npixman                    0.38.0            h516909a_1003    conda-forge\r\npoppler                   0.87.0               h4190859_1    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.2                 h8573dbc_1    conda-forge\r\nproj                      7.0.0                h966b41f_4    conda-forge\r\nprometheus_client         0.8.0              pyh9f0ad1d_0    conda-forge\r\nprompt-toolkit            3.0.5                      py_1    conda-forge\r\npthread-stubs             0.4               h14c3975_1001    conda-forge\r\nptyprocess                0.6.0                   py_1001    conda-forge\r\npycparser                 2.20                       py_0    conda-forge\r\npygments                  2.6.1                      py_0    conda-forge\r\npyopenssl                 19.1.0                     py_1    conda-forge\r\npyparsing                 2.4.7              pyh9f0ad1d_0    conda-forge\r\npyproj                    2.6.1.post1      py38h7521cb9_0    conda-forge\r\npyrsistent                0.16.0           py38h1e0a361_0    conda-forge\r\npysocks                   1.7.1            py38h32f6830_1    conda-forge\r\npython                    3.8.3           cpython_he5300dc_0    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npython_abi                3.8                      1_cp38    conda-forge\r\npytz                      2020.1             pyh9f0ad1d_0    conda-forge\r\npyzmq                     19.0.1           py38ha71036d_0    conda-forge\r\nreadline                  8.0                  hf8c457e_0    conda-forge\r\nrequests                  2.24.0             pyh9f0ad1d_0    conda-forge\r\nrtree                     0.9.4            py38h08f867b_1    conda-forge\r\nscikit-learn              0.23.1           py38h3a94b23_0    conda-forge\r\nscipy                     1.4.1            py38h18bccfc_3    conda-forge\r\nsend2trash                1.5.0                      py_0    conda-forge\r\nsetuptools                47.3.1           py38h32f6830_0    conda-forge\r\nshapely                   1.7.0            py38hd168ffb_3    conda-forge\r\nsix                       1.15.0             pyh9f0ad1d_0    conda-forge\r\nsqlite                    3.30.1               hcee41ef_0    conda-forge\r\ntbb                       2020.1               hc9558a2_0    conda-forge\r\nterminado                 0.8.3            py38h32f6830_1    conda-forge\r\ntestpath                  0.4.4                      py_0    conda-forge\r\nthreadpoolctl             2.1.0              pyh5ca1d4c_0    conda-forge\r\ntiledb                    1.7.7                h8efa9f0_3    conda-forge\r\ntk                        8.6.10               hed695b0_0    conda-forge\r\ntornado                   6.0.4            py38h1e0a361_1    conda-forge\r\ntraitlets                 4.3.3            py38h32f6830_1    conda-forge\r\ntzcode                    2020a                h516909a_0    conda-forge\r\nurllib3                   1.25.9                     py_0    conda-forge\r\nwcwidth                   0.2.4              pyh9f0ad1d_0    conda-forge\r\nwebencodings              0.5.1                      py_1    conda-forge\r\nwheel                     0.34.2                     py_1    conda-forge\r\nxerces-c                  3.2.2             h8412b87_1004    conda-forge\r\nxorg-kbproto              1.0.7             h14c3975_1002    conda-forge\r\nxorg-libice               1.0.10               h516909a_0    conda-forge\r\nxorg-libsm                1.2.3             h84519dc_1000    conda-forge\r\nxorg-libx11               1.6.9                h516909a_0    conda-forge\r\nxorg-libxau               1.0.9                h14c3975_0    conda-forge\r\nxorg-libxdmcp             1.1.3                h516909a_0    conda-forge\r\nxorg-libxext              1.3.4                h516909a_0    conda-forge\r\nxorg-libxrender           0.9.10            h516909a_1002    conda-forge\r\nxorg-renderproto          0.11.1            h14c3975_1002    conda-forge\r\nxorg-xextproto            7.3.0             h14c3975_1002    conda-forge\r\nxorg-xproto               7.0.31            h14c3975_1007    conda-forge\r\nxz                        5.2.5                h516909a_0    conda-forge\r\nzeromq                    4.3.2                he1b5a44_2    conda-forge\r\nzipp                      3.1.0                      py_0    conda-forge\r\nzlib                      1.2.11            h516909a_1006    conda-forge\r\nzstd                      1.4.4                h6597ccf_3    conda-forge\r\n\r\nNote: you may need to restart the kernel to use updated packages.\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```import numpy as np \r\nimport pandas as pd \r\nimport matplotlib.pyplot as plt \r\nimport geopandas as gpd \r\nimport osmnx as ox \r\nfrom descartes import PolygonPatch\r\nfrom shapely.geometry import Point, LineString, Polygon, MultiPolygon \r\n#load Delhi from openstreetmap using osmnx api \r\nstate=ox.gdf_from_place(\"Delhi, India\", which_result=2)\r\nprint(state.crs)\r\nstate=ox.projection.project_gdf(state) #to convert from longlat system to metric system \r\nprint(state)\r\nfig, ax= ox.plot_shape(state)\r\nprint(state.crs)\r\ngeometry=state['geometry'].iloc[0] #0 indicates first row of table \r\nprint(type(geometry))\r\ngeometry_cut = ox.quadrat_cut_geometry(geometry, quadrat_width=750) #width in metres, to introduce gridlines\r\nprint(type(geometry_cut))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/505", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/505/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/505/events", "html_url": "https://github.com/gboeing/osmnx/issues/505", "id": 639522226, "node_id": "MDU6SXNzdWU2Mzk1MjIyMjY=", "number": 505, "title": "Retrieve graph closed edges as multipolygon", "user": {"login": "BCNecoder", "id": 47638539, "node_id": "MDQ6VXNlcjQ3NjM4NTM5", "avatar_url": "https://avatars3.githubusercontent.com/u/47638539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BCNecoder", "html_url": "https://github.com/BCNecoder", "followers_url": "https://api.github.com/users/BCNecoder/followers", "following_url": "https://api.github.com/users/BCNecoder/following{/other_user}", "gists_url": "https://api.github.com/users/BCNecoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/BCNecoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BCNecoder/subscriptions", "organizations_url": "https://api.github.com/users/BCNecoder/orgs", "repos_url": "https://api.github.com/users/BCNecoder/repos", "events_url": "https://api.github.com/users/BCNecoder/events{/privacy}", "received_events_url": "https://api.github.com/users/BCNecoder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-16T09:39:19Z", "updated_at": "2020-06-16T20:43:29Z", "closed_at": "2020-06-16T20:42:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI'm working on a project about available pedestrian urban space. I've realised that some areas in OSM are registered as closed linestrings instead of polygons.\r\n\r\nfor instance, I run the following snippet to retieve Bilbaos pedestrian areas:\r\n\r\n```\r\nG = ox.graph_from_place('Casco Viejo, Bilbao, Spain', network_type='walk', \r\n                        retain_all=True, buffer_dist = 50, which_result = 2,\r\n                        infrastructure = 'relation[\"highway\" = \"pedestrian\"]')\r\n```\r\nWhich yields this graph:\r\n\r\n`fig, ax = ox.plot_graph(G)`\r\n\r\n![image](https://user-images.githubusercontent.com/47638539/84758146-5ce2b180-afc5-11ea-903f-e9e0e4713df3.png)\r\n\r\nIs it possible to retrive this geometries directly as GeoDataframe made of multipolygon?\r\nIf not is it posible to improve thecode to get to it?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/489", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/489/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/489/events", "html_url": "https://github.com/gboeing/osmnx/issues/489", "id": 631082951, "node_id": "MDU6SXNzdWU2MzEwODI5NTE=", "number": 489, "title": "config function misbehaving", "user": {"login": "gboeing", "id": 4977197, "node_id": "MDQ6VXNlcjQ5NzcxOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4977197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gboeing", "html_url": "https://github.com/gboeing", "followers_url": "https://api.github.com/users/gboeing/followers", "following_url": "https://api.github.com/users/gboeing/following{/other_user}", "gists_url": "https://api.github.com/users/gboeing/gists{/gist_id}", "starred_url": "https://api.github.com/users/gboeing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gboeing/subscriptions", "organizations_url": "https://api.github.com/users/gboeing/orgs", "repos_url": "https://api.github.com/users/gboeing/repos", "events_url": "https://api.github.com/users/gboeing/events{/privacy}", "received_events_url": "https://api.github.com/users/gboeing/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165091, "node_id": "MDU6TGFiZWw0MTMxNjUwOTE=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/bug", "name": "bug", "color": "e99695", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-04T19:15:31Z", "updated_at": "2020-06-05T00:51:53Z", "closed_at": "2020-06-05T00:50:03Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Calling `ox.config()` lets you set the values of the global settings package-wide and resets any un-passed settings to their original default values. Per its docstring:\r\n```\r\nConfigure OSMnx by setting the default global settings' values.\r\n\r\nAny parameters not passed by the caller are set to their default values.\r\n```\r\n\r\nBut I noticed there is one odd exception to this for the `useful_tags_node` and `useful_tags_path` settings, which determine the OSM tags to add as graph node/edge attributes respectively. These settings are initially set the same way as the others, but then immediately overwritten with a superset of values:\r\n\r\nhttps://github.com/gboeing/osmnx/blob/59f6a8d61e69cda6e5d9112fbdbaf3d4648e7b23/osmnx/utils.py#L182-L185\r\n\r\nThis results in weird behavior like this:\r\n\r\n```python\r\nimport osmnx as ox\r\nprint(ox.settings.useful_tags_node)\r\n# ['ref', 'highway']\r\n\r\nox.config(use_cache=True)\r\nprint(ox.settings.useful_tags_node)\r\n# ['version', 'timestamp', 'uid', 'id', 'changeset', 'lon', 'user', 'highway', 'ref', 'lat']\r\n```\r\n\r\nUsing `ox.config` to turn on caching shouldn't change other settings from their default values. We need to prevent this, while offering a straightforward way for users looking to export to XML (who want to add those additional OSM tags/attributes during graph creation).\r\n\r\n@mxndrwgrdnr this is likely relevant to your interests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/488", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/488/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/488/events", "html_url": "https://github.com/gboeing/osmnx/issues/488", "id": 630786216, "node_id": "MDU6SXNzdWU2MzA3ODYyMTY=", "number": 488, "title": "Proposal: Enable simplification of long (rural) roads", "user": {"login": "pinselimo", "id": 22834676, "node_id": "MDQ6VXNlcjIyODM0Njc2", "avatar_url": "https://avatars3.githubusercontent.com/u/22834676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinselimo", "html_url": "https://github.com/pinselimo", "followers_url": "https://api.github.com/users/pinselimo/followers", "following_url": "https://api.github.com/users/pinselimo/following{/other_user}", "gists_url": "https://api.github.com/users/pinselimo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinselimo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinselimo/subscriptions", "organizations_url": "https://api.github.com/users/pinselimo/orgs", "repos_url": "https://api.github.com/users/pinselimo/repos", "events_url": "https://api.github.com/users/pinselimo/events{/privacy}", "received_events_url": "https://api.github.com/users/pinselimo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-04T12:39:56Z", "updated_at": "2020-06-08T18:24:19Z", "closed_at": "2020-06-08T18:24:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nDownloading a rural, mountainous and rather big area, I've run into the issue that some roads are not simplified properly. This is well documented and happens due to a ```RecursionError``` in ```simplification._build_path```. This error is subsequently caught in line 171 (commit 0ef7002) and logged.\r\n\r\nI've had this issue monkey patched so far. Now I forked osmnx and implemented it correctly. It is tested and ready for a PR, However, I opened the issue in order to conform to the contributing guidelines.\r\n\r\n#### Further changes for large networks and compatibility:\r\n\r\nIn a separate commit I've turned ```simplification._get_paths_to_simplify``` into a generator to keep its memory footprint in large networks lower. Also at some point I found that it raises errors with ```Python<3.5``` so I've exchanged ```RecursionError``` for ```RuntimeError```, where the prior is a subtype of the latter, so behaviour remains the same.\r\n\r\n#### Testing\r\n\r\nAll of the above mentioned commits on my branch have been tested according to the contributing guidelines.\r\n\r\ncheers,\r\nSimon\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/485", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/485/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/485/events", "html_url": "https://github.com/gboeing/osmnx/issues/485", "id": 630027983, "node_id": "MDU6SXNzdWU2MzAwMjc5ODM=", "number": 485, "title": "module 'osmnx' has no attribute 'get_colors'", "user": {"login": "Waywiser", "id": 65924806, "node_id": "MDQ6VXNlcjY1OTI0ODA2", "avatar_url": "https://avatars3.githubusercontent.com/u/65924806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Waywiser", "html_url": "https://github.com/Waywiser", "followers_url": "https://api.github.com/users/Waywiser/followers", "following_url": "https://api.github.com/users/Waywiser/following{/other_user}", "gists_url": "https://api.github.com/users/Waywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/Waywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Waywiser/subscriptions", "organizations_url": "https://api.github.com/users/Waywiser/orgs", "repos_url": "https://api.github.com/users/Waywiser/repos", "events_url": "https://api.github.com/users/Waywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/Waywiser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-03T14:08:47Z", "updated_at": "2020-07-04T21:25:40Z", "closed_at": "2020-06-03T16:08:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nRunning into an issue with the isochrone module for osmnx. I receive the following error when setting the colors. I am using osmnx '0.13.0'\r\n<img width=\"911\" alt=\"Screen Shot 2020-06-03 at 10 07 18 AM\" src=\"https://user-images.githubusercontent.com/65924806/83646847-344cc780-a582-11ea-8bf1-bf4840a90c4c.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/484", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/484/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/484/events", "html_url": "https://github.com/gboeing/osmnx/issues/484", "id": 629724166, "node_id": "MDU6SXNzdWU2Mjk3MjQxNjY=", "number": 484, "title": "Check if there are data before accessing", "user": {"login": "brenobeirigo", "id": 19824664, "node_id": "MDQ6VXNlcjE5ODI0NjY0", "avatar_url": "https://avatars1.githubusercontent.com/u/19824664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brenobeirigo", "html_url": "https://github.com/brenobeirigo", "followers_url": "https://api.github.com/users/brenobeirigo/followers", "following_url": "https://api.github.com/users/brenobeirigo/following{/other_user}", "gists_url": "https://api.github.com/users/brenobeirigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/brenobeirigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brenobeirigo/subscriptions", "organizations_url": "https://api.github.com/users/brenobeirigo/orgs", "repos_url": "https://api.github.com/users/brenobeirigo/repos", "events_url": "https://api.github.com/users/brenobeirigo/events{/privacy}", "received_events_url": "https://api.github.com/users/brenobeirigo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-03T06:18:09Z", "updated_at": "2020-06-03T16:56:44Z", "closed_at": "2020-06-03T16:56:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the function `node_list_to_coordinate_lines(G, node_list, use_geom=True)` of file `plot.py` the following excerpt raises an error when there is no edge data (i.e., `G.get_edge_data(u, v)` is None):\r\n\r\n`data = min(G.get_edge_data(u, v).values(), key=lambda x: x['length'])\r\n`\r\n\r\nIn my application, doing\r\n\r\n```\r\n try:\r\n     data = min(G.get_edge_data(u, v).values(), key=lambda x: x['length'])\r\n except:\r\n     data = {}\r\n```\r\n\r\nsolved the problem.\r\n\r\n\r\n\r\n       ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/480", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/480/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/480/events", "html_url": "https://github.com/gboeing/osmnx/issues/480", "id": 628311338, "node_id": "MDU6SXNzdWU2MjgzMTEzMzg=", "number": 480, "title": "Backward compatibility", "user": {"login": "martinfleis", "id": 36797143, "node_id": "MDQ6VXNlcjM2Nzk3MTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/36797143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinfleis", "html_url": "https://github.com/martinfleis", "followers_url": "https://api.github.com/users/martinfleis/followers", "following_url": "https://api.github.com/users/martinfleis/following{/other_user}", "gists_url": "https://api.github.com/users/martinfleis/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinfleis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinfleis/subscriptions", "organizations_url": "https://api.github.com/users/martinfleis/orgs", "repos_url": "https://api.github.com/users/martinfleis/repos", "events_url": "https://api.github.com/users/martinfleis/events{/privacy}", "received_events_url": "https://api.github.com/users/martinfleis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-01T10:03:06Z", "updated_at": "2020-07-04T21:28:34Z", "closed_at": "2020-06-03T18:41:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI just had a couple of issue using my code with the new release and figured out that version 0.13 is not backward compatible with some of the code written for 0.12. Since there was no deprecation warning, I assume it is not intentional?\r\n\r\n- Any function downloading the data `...from_points` has `distance` attribute in 0.12.1 but `dist` in 0.13.\r\n- `ox.project_gdf` has to be imported as `ox.projection.project_gdf`\r\n- and some issues related to the refactoring of the core modules, if you import functions from the module itself (like `ox.save_load.graph_to_gdfs` -> `ox.utils_graph.graph_to_gdfs`), which is what documentation actually seems to suggest.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/479", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/479/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/479/events", "html_url": "https://github.com/gboeing/osmnx/issues/479", "id": 627997345, "node_id": "MDU6SXNzdWU2Mjc5OTczNDU=", "number": 479, "title": "Use shapely.ops.split when subdividing big geometries", "user": {"login": "gboeing", "id": 4977197, "node_id": "MDQ6VXNlcjQ5NzcxOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4977197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gboeing", "html_url": "https://github.com/gboeing", "followers_url": "https://api.github.com/users/gboeing/followers", "following_url": "https://api.github.com/users/gboeing/following{/other_user}", "gists_url": "https://api.github.com/users/gboeing/gists{/gist_id}", "starred_url": "https://api.github.com/users/gboeing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gboeing/subscriptions", "organizations_url": "https://api.github.com/users/gboeing/orgs", "repos_url": "https://api.github.com/users/gboeing/repos", "events_url": "https://api.github.com/users/gboeing/events{/privacy}", "received_events_url": "https://api.github.com/users/gboeing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-31T16:31:18Z", "updated_at": "2020-06-03T06:10:15Z", "closed_at": "2020-06-03T06:10:15Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I was reminded this morning by @kuanb about [shapely.ops.split](https://shapely.readthedocs.io/en/stable/manual.html#shapely.ops.split), which should probably be used in the [quadrat_cut_geometry](https://github.com/gboeing/osmnx/blob/79b0dfccb6f2b8a196d0351b06e7081d62ed6bed/osmnx/utils_geo.py#L332) function instead of the longstanding hacky buffer/difference polygon cutting code. The shapely split function was released a few months after that chunk of code was developed, but would be a more elegant solution here. I'll try to do this next week.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/456", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/456/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/456/events", "html_url": "https://github.com/gboeing/osmnx/issues/456", "id": 619308375, "node_id": "MDU6SXNzdWU2MTkzMDgzNzU=", "number": 456, "title": "Getting nodes form ox.get_nearest_node() is giving wrong results", "user": {"login": "Dpm99", "id": 64794323, "node_id": "MDQ6VXNlcjY0Nzk0MzIz", "avatar_url": "https://avatars0.githubusercontent.com/u/64794323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dpm99", "html_url": "https://github.com/Dpm99", "followers_url": "https://api.github.com/users/Dpm99/followers", "following_url": "https://api.github.com/users/Dpm99/following{/other_user}", "gists_url": "https://api.github.com/users/Dpm99/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dpm99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dpm99/subscriptions", "organizations_url": "https://api.github.com/users/Dpm99/orgs", "repos_url": "https://api.github.com/users/Dpm99/repos", "events_url": "https://api.github.com/users/Dpm99/events{/privacy}", "received_events_url": "https://api.github.com/users/Dpm99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T22:33:54Z", "updated_at": "2020-05-16T00:20:43Z", "closed_at": "2020-05-16T00:20:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have a big issue when getting a node from geographical coordinates. When I use ox.get_nearest_node(), the node I get is way too far from the coordinates and I don't know why:\r\n\r\n```\r\nimport networkx as nx\r\nimport matplotlib.pyplot as plt\r\nimport osmnx as ox\r\nimport geopandas as gpd\r\nox.config(log_console=True, use_cache=True)\r\n\r\n\r\nplace = 'Portugal, Lisbon'\r\nG = ox.graph_from_place(place, network_type='drive')\r\nG = ox.project_graph(G)\r\nhospitals = ox.pois_from_place(place, amenities=['hospital'])\r\n\r\ncoord_1 = (38.69950, -9.18767)  \r\ntarget_1 = ox.get_nearest_node(G, coord_1)\r\nprint(target_1)\r\n\r\nnc = ['r' if node==target_1 else 'gray' for node in G.nodes()]\r\nns = [50 if node==target_1 else 1 for node in G.nodes()]\r\nfig, ax = ox.plot_graph(G, node_size=ns, node_color=nc, node_zorder=2)\r\n```\r\nFrom this I get the following node: 4751061000\r\n\r\nThe plot is:\r\n![image](https://user-images.githubusercontent.com/64794323/82101278-05220380-9704-11ea-9104-47555cc920e3.png)\r\n\r\n\r\nAnd the hospital should be near the sea:\r\n\r\n![image](https://user-images.githubusercontent.com/64794323/82101320-24209580-9704-11ea-9974-c06ae2d212da.png)\r\n\r\nI also tested for another set of coordinates and it gave me the exact same node which is very strange.\r\n\r\nThank you in advance for the help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/452", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/452/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/452/events", "html_url": "https://github.com/gboeing/osmnx/issues/452", "id": 618560974, "node_id": "MDU6SXNzdWU2MTg1NjA5NzQ=", "number": 452, "title": "Retrieve metadata (user, version, timestamp etc.) along OSM data", "user": {"login": "kadirm", "id": 63141088, "node_id": "MDQ6VXNlcjYzMTQxMDg4", "avatar_url": "https://avatars1.githubusercontent.com/u/63141088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kadirm", "html_url": "https://github.com/kadirm", "followers_url": "https://api.github.com/users/kadirm/followers", "following_url": "https://api.github.com/users/kadirm/following{/other_user}", "gists_url": "https://api.github.com/users/kadirm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kadirm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kadirm/subscriptions", "organizations_url": "https://api.github.com/users/kadirm/orgs", "repos_url": "https://api.github.com/users/kadirm/repos", "events_url": "https://api.github.com/users/kadirm/events{/privacy}", "received_events_url": "https://api.github.com/users/kadirm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-14T21:58:37Z", "updated_at": "2020-06-03T18:42:25Z", "closed_at": "2020-06-03T18:42:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nSince this OSMnx is a handy tool to gather information from OSM and use it with geopandas directly, it would be nice to have also metadata (user, version, timestamp, etc.) of the OSM data. It can be queried over the overpass API and perhaps can be integrated into OSMnx.\r\n\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/448", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/448/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/448/events", "html_url": "https://github.com/gboeing/osmnx/issues/448", "id": 615259084, "node_id": "MDU6SXNzdWU2MTUyNTkwODQ=", "number": 448, "title": "Bug report edge_df.length edge_df[\"length\"]", "user": {"login": "philippkiesling", "id": 65088541, "node_id": "MDQ6VXNlcjY1MDg4NTQx", "avatar_url": "https://avatars2.githubusercontent.com/u/65088541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philippkiesling", "html_url": "https://github.com/philippkiesling", "followers_url": "https://api.github.com/users/philippkiesling/followers", "following_url": "https://api.github.com/users/philippkiesling/following{/other_user}", "gists_url": "https://api.github.com/users/philippkiesling/gists{/gist_id}", "starred_url": "https://api.github.com/users/philippkiesling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philippkiesling/subscriptions", "organizations_url": "https://api.github.com/users/philippkiesling/orgs", "repos_url": "https://api.github.com/users/philippkiesling/repos", "events_url": "https://api.github.com/users/philippkiesling/events{/privacy}", "received_events_url": "https://api.github.com/users/philippkiesling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-09T21:00:53Z", "updated_at": "2020-05-11T16:31:10Z", "closed_at": "2020-05-11T16:31:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure if this is the right place to report this, but I ran into some odd behaviour using OSMNX: \r\n\r\nWhen I tried to access the length of an edge, df.length and df[\"length\"] give back different results.  \r\n\r\n\r\n`import osmnx as ox`\r\n`G = ox.graph_from_bbox(a, b, c, d, network_type= \"walk\")`\r\n`N,E = ox.graph_to_gdfs(G)`\r\n`print(E.length)`\r\n`print(E[\"length\"])`\r\n\r\n I guess `E.length`  references the gdfs geometry.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/447", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/447/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/447/events", "html_url": "https://github.com/gboeing/osmnx/issues/447", "id": 613683320, "node_id": "MDU6SXNzdWU2MTM2ODMzMjA=", "number": 447, "title": "Kernel dies and can't run the code", "user": {"login": "Dpm99", "id": 64794323, "node_id": "MDQ6VXNlcjY0Nzk0MzIz", "avatar_url": "https://avatars0.githubusercontent.com/u/64794323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dpm99", "html_url": "https://github.com/Dpm99", "followers_url": "https://api.github.com/users/Dpm99/followers", "following_url": "https://api.github.com/users/Dpm99/following{/other_user}", "gists_url": "https://api.github.com/users/Dpm99/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dpm99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dpm99/subscriptions", "organizations_url": "https://api.github.com/users/Dpm99/orgs", "repos_url": "https://api.github.com/users/Dpm99/repos", "events_url": "https://api.github.com/users/Dpm99/events{/privacy}", "received_events_url": "https://api.github.com/users/Dpm99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-06T23:57:23Z", "updated_at": "2020-05-07T16:38:02Z", "closed_at": "2020-05-07T00:16:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good evening, I am currently trying to download data from a polygon and I can't compile the code because kernel keeps dying.\r\nHere is the code:\r\n\r\n`import geopandas as gpd\r\nimport pandas as pd\r\nfrom shapely.geometry import Point, LineString, Polygon\r\nimport networkx as nx\r\nimport osmnx as ox\r\nimport matplotlib.pyplot as plt\r\nfrom descartes import PolygonPatch\r\nfrom IPython.display import IFrame\r\nox.config(log_console=True, use_cache=True)`\r\n\r\n`place = 'Portugal'`\r\n\r\n`G = ox.gdf_from_place(place)`\r\n\r\n`exploded_G = G.explode()`\r\n\r\n`exploded_G['area'] = exploded_G.area`\r\n`exploded_G.sort_values(by='area', inplace=True)`\r\n\r\n`Portugal= exploded_G.iloc[-1]['geometry']`\r\n\r\n`g = ox.graph_from_polygon(polygon = Portugal, network_type = 'drive')`\r\n\r\nKernel dies in the last line of code I have shared. I don't know why, I have created a new environment in anaconda and ran the code again and once again kernel died. I have uninstalled and installed anaconda and several packages. And yet my efforts have been unsuccessful.\r\n\r\nThank you in advance for the help.\r\n\r\nBest regards.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/445", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/445/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/445/events", "html_url": "https://github.com/gboeing/osmnx/issues/445", "id": 613220497, "node_id": "MDU6SXNzdWU2MTMyMjA0OTc=", "number": 445, "title": "Timeout Error from footprints_from_place", "user": {"login": "mgaury", "id": 64899622, "node_id": "MDQ6VXNlcjY0ODk5NjIy", "avatar_url": "https://avatars3.githubusercontent.com/u/64899622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgaury", "html_url": "https://github.com/mgaury", "followers_url": "https://api.github.com/users/mgaury/followers", "following_url": "https://api.github.com/users/mgaury/following{/other_user}", "gists_url": "https://api.github.com/users/mgaury/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgaury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgaury/subscriptions", "organizations_url": "https://api.github.com/users/mgaury/orgs", "repos_url": "https://api.github.com/users/mgaury/repos", "events_url": "https://api.github.com/users/mgaury/events{/privacy}", "received_events_url": "https://api.github.com/users/mgaury/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-06T10:40:28Z", "updated_at": "2020-06-07T00:03:24Z", "closed_at": "2020-05-07T15:26:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst of all, thank you for this project which appears really helpful.\r\n\r\nI have encountered a timeout error when I want to retrieve buildings plan from a place given : \r\nReadTimeout: HTTPConnectionPool(host='overpass-api.de', port=80): Read timed out. (read timeout=180)\r\n\r\nmy code is :\r\n\r\ncs = '[out:json][timeout:600]'\r\nbuildings2 = ox.footprints_from_place(ville, footprint_type='building', retain_invalid=False, which_result=1, custom_settings=cs)\r\n\r\nAre my settings wrong or is it just not possible to fix the timeout ?\r\n\r\nThank you for your answer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/444", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/444/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/444/events", "html_url": "https://github.com/gboeing/osmnx/issues/444", "id": 613034650, "node_id": "MDU6SXNzdWU2MTMwMzQ2NTA=", "number": 444, "title": "How do i get the bounding boxes of all my buildings in a city?", "user": {"login": "Hsengiv2000", "id": 46417635, "node_id": "MDQ6VXNlcjQ2NDE3NjM1", "avatar_url": "https://avatars0.githubusercontent.com/u/46417635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hsengiv2000", "html_url": "https://github.com/Hsengiv2000", "followers_url": "https://api.github.com/users/Hsengiv2000/followers", "following_url": "https://api.github.com/users/Hsengiv2000/following{/other_user}", "gists_url": "https://api.github.com/users/Hsengiv2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hsengiv2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hsengiv2000/subscriptions", "organizations_url": "https://api.github.com/users/Hsengiv2000/orgs", "repos_url": "https://api.github.com/users/Hsengiv2000/repos", "events_url": "https://api.github.com/users/Hsengiv2000/events{/privacy}", "received_events_url": "https://api.github.com/users/Hsengiv2000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T04:02:05Z", "updated_at": "2020-05-06T18:32:31Z", "closed_at": "2020-05-06T18:32:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "if i perform a buildings = ox.footprints_from_place(myplace), i get the buildings and I can plot them. however how do i get the bounding box of each building? One strategy I thought of is to iterate through all the nodes of a building and then collect their latitudes and longitudes. However I get a key error when i perform graph.nodes[nodeidfrombuilding]?\r\nKindly get back to me on this.\r\nThank you so much", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/441", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/441/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/441/events", "html_url": "https://github.com/gboeing/osmnx/issues/441", "id": 611955060, "node_id": "MDU6SXNzdWU2MTE5NTUwNjA=", "number": 441, "title": "Can't select Continental Portugal", "user": {"login": "Dpm99", "id": 64794323, "node_id": "MDQ6VXNlcjY0Nzk0MzIz", "avatar_url": "https://avatars0.githubusercontent.com/u/64794323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dpm99", "html_url": "https://github.com/Dpm99", "followers_url": "https://api.github.com/users/Dpm99/followers", "following_url": "https://api.github.com/users/Dpm99/following{/other_user}", "gists_url": "https://api.github.com/users/Dpm99/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dpm99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dpm99/subscriptions", "organizations_url": "https://api.github.com/users/Dpm99/orgs", "repos_url": "https://api.github.com/users/Dpm99/repos", "events_url": "https://api.github.com/users/Dpm99/events{/privacy}", "received_events_url": "https://api.github.com/users/Dpm99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-04T15:16:36Z", "updated_at": "2020-05-06T18:32:04Z", "closed_at": "2020-05-04T17:03:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good Afternoon,\r\n\r\nFirstly I would like to say that this project is amazing and has been extremely helpful, therefore thank you very much for creating it.\r\n\r\nThe issue I am having is the following: Portugal is a country next to Spain and it also has some islands. I want to select only Continental Portugal, what I mean by this is just the part of Portugal next to Spain and not include the islands.\r\n\r\nCan you help me please?\r\n\r\nThank you for the attention.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/438", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/438/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/438/events", "html_url": "https://github.com/gboeing/osmnx/issues/438", "id": 609642114, "node_id": "MDU6SXNzdWU2MDk2NDIxMTQ=", "number": 438, "title": "Directed graph in osmnx has no path", "user": {"login": "malikdoole", "id": 36185565, "node_id": "MDQ6VXNlcjM2MTg1NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/36185565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malikdoole", "html_url": "https://github.com/malikdoole", "followers_url": "https://api.github.com/users/malikdoole/followers", "following_url": "https://api.github.com/users/malikdoole/following{/other_user}", "gists_url": "https://api.github.com/users/malikdoole/gists{/gist_id}", "starred_url": "https://api.github.com/users/malikdoole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malikdoole/subscriptions", "organizations_url": "https://api.github.com/users/malikdoole/orgs", "repos_url": "https://api.github.com/users/malikdoole/repos", "events_url": "https://api.github.com/users/malikdoole/events{/privacy}", "received_events_url": "https://api.github.com/users/malikdoole/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T06:51:47Z", "updated_at": "2020-05-01T10:50:00Z", "closed_at": "2020-04-30T14:48:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to find the shortest path using networkx. I understand that in OSMnx the streets are directed in order to preserve one-way directionality (which is what I want) and therefore, when I try to find the shortest path using Networkx I get NetworkXNoPath: No path to (osmid). How do I fix this issue? I need to find the shortest path in a network with **one-way street directionality retained**. If I make the graph undirected then path is found, but I lose the one-way street directionality which is not the objective of my analysis. How can I tackle this in OSMnx?\r\nSee below for reproducible code:\r\n\r\nNote, the output I get is: **NetworkXNoPath: No path to 42443044**\r\n```\r\nimport osmnx as ox\r\nimport networkx as nx\r\n# define place\r\ncentreLat=40.771687\r\ncentreLon=-73.957233\r\n\r\n# download osm data\r\n \r\nG= ox.graph_from_point((centreLat,centreLon), distance=1000, network_type='drive',simplify = True)  \r\n\r\n# plot the graph\r\nfig,ax = ox.plot_graph(G)\r\n\r\n# Get origin x and y coordinates\r\norig_xy = 40.7647425, -73.9683181\r\n\r\n# Get target x and y coordinates\r\ntarget_xy =40.7804348, -73.9498809\r\n\r\n# Find the node in the graph that is closest to the origin point (here, we want to get the node id)\r\norig_node = ox.get_nearest_node(G, orig_xy)\r\n\r\n\r\n# Find the node in the graph that is closest to the target point (here, we want to get the node id)\r\ntarget_node = ox.get_nearest_node(G, target_xy)\r\n\r\n# Get shortest path \r\nroute = nx.shortest_path(G, source=orig_node, target=target_node, weight='length')\r\n\r\n# Plot the shortest path\r\nfig, ax = ox.plot_graph_route(G, route, origin_point=orig_xy, destination_point=target_xy)\r\n\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/436", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/436/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/436/events", "html_url": "https://github.com/gboeing/osmnx/issues/436", "id": 609373280, "node_id": "MDU6SXNzdWU2MDkzNzMyODA=", "number": 436, "title": "More informative error message with graph_from_file data import", "user": {"login": "anisotropi4", "id": 27144121, "node_id": "MDQ6VXNlcjI3MTQ0MTIx", "avatar_url": "https://avatars3.githubusercontent.com/u/27144121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anisotropi4", "html_url": "https://github.com/anisotropi4", "followers_url": "https://api.github.com/users/anisotropi4/followers", "following_url": "https://api.github.com/users/anisotropi4/following{/other_user}", "gists_url": "https://api.github.com/users/anisotropi4/gists{/gist_id}", "starred_url": "https://api.github.com/users/anisotropi4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anisotropi4/subscriptions", "organizations_url": "https://api.github.com/users/anisotropi4/orgs", "repos_url": "https://api.github.com/users/anisotropi4/repos", "events_url": "https://api.github.com/users/anisotropi4/events{/privacy}", "received_events_url": "https://api.github.com/users/anisotropi4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165092, "node_id": "MDU6TGFiZWw0MTMxNjUwOTI=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T21:31:19Z", "updated_at": "2020-04-30T03:09:12Z", "closed_at": "2020-04-30T03:09:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Importing using `graph_from_file` where edge data contains missing node raises a key error \r\n\r\nAs reported by @bradleyswilson in #323 KeyError: 'y' when poorly clipped OSM data (where edges are present without corresponding nodes) is imported using `graph_from_file` this raises a `KeyError 'y'` exception in the `add_edge_lengths`. \r\n\r\n#### Fails with a `KeyError: 'y'` when `G.nodes[{u,v}]` does not exist but the edge `u, v, k` does:\r\n```python\r\ncoords = np.array([[u, v, k, G.nodes[u]['y'], G.nodes[u]['x'], G.nodes[v]['y'], G.nodes[v]['x']] for u, v, k in G.edges(keys=True)])\r\n```\r\nThe proposed fix places this in a`try/except KeyError`block, identifies the missing node(s) referenced by edges and executes a `raise TypeError` with a more informative error message:\r\n\r\n#### Handles the `KeyError` and raises more informative clipping error `TypeError` detailing missing nodes\r\n```python\r\n    try:\r\n        coords = np.array([[u, v, k, G.nodes[u]['y'], G.nodes[u]['x'], G.nodes[v]['y'], G.nodes[v]['x']] for u, v, k in G.edges(keys=True)])\r\n    except KeyError:\r\n        missing_nodes = {str(i) for u, v, _ in G.edges(keys=True) if not(G.nodes[u] or G.nodes[u]) for i in (u, v) if not G.nodes[i]}\r\n        raise TypeError('Edge missing nodes {} likely due to a clipping issue'.format(','.join(missing_nodes)))\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/435", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/435/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/435/events", "html_url": "https://github.com/gboeing/osmnx/issues/435", "id": 609214566, "node_id": "MDU6SXNzdWU2MDkyMTQ1NjY=", "number": 435, "title": "Add returning of key as well as nodes in nearest edge finding functions", "user": {"login": "JNatael", "id": 9502300, "node_id": "MDQ6VXNlcjk1MDIzMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9502300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JNatael", "html_url": "https://github.com/JNatael", "followers_url": "https://api.github.com/users/JNatael/followers", "following_url": "https://api.github.com/users/JNatael/following{/other_user}", "gists_url": "https://api.github.com/users/JNatael/gists{/gist_id}", "starred_url": "https://api.github.com/users/JNatael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JNatael/subscriptions", "organizations_url": "https://api.github.com/users/JNatael/orgs", "repos_url": "https://api.github.com/users/JNatael/repos", "events_url": "https://api.github.com/users/JNatael/events{/privacy}", "received_events_url": "https://api.github.com/users/JNatael/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165092, "node_id": "MDU6TGFiZWw0MTMxNjUwOTI=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-29T17:04:26Z", "updated_at": "2020-04-30T08:27:11Z", "closed_at": "2020-04-30T08:26:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As noted in the StackOverflow question at https://stackoverflow.com/questions/61500820/osmnx-get-nearest-edges-function-results-unclear-on-which-key, I think the functions to find the nearest edge are missing a key (pun not intended) component ; namely the returning of the key as well as the nodes. In instances such as that discussed in the linked question, some nodes have multiple edges, and while the searching functions seem to find the correct edge, they report back only the end nodes of that edge, meaning there's no way for the user to identify which edge it is and leaving them likely to default to a wrong one.\r\n\r\nIf I missed some other way to get this information or am misunderstanding in some other way I'd love to know it, but as best I can tell this is basically a bug.\r\n\r\nI have accordingly tried to tweak the two functions in question to correct this. The updated code is below and includes the necessary imports at the top so anyone else having this issue right now can drop it into their use case (I'm using it in a colab notebook) and then call these functions instead of those in the library unless/until the library gets updated.\r\n\r\nI'm not sure if the approach I've taken is necessarily the one the library should do; it might make more sense to turn on the returning of keys as a default or have that be the only option since not having it opens the risk that a user will get wrong results. To maintain backwards compatibility for the moment though I've just added a flag that turns on the additional request for keys and made it optional to avoid breaking other code.\r\n\r\nI'd have done this as a pull request as well, but my local python environment is having issues right now and I don't have time to do comprehensive testing; apologies for that. I also held off on any documentation update in favor of deferring to the library author about what approach to take. I've checked that this code at least works with the flag on and off for all three modes and I figure that's enough for the moment; hopefully still helpful in jumpstarting a fix.\r\n\r\nThanks again for a great library!\r\n\r\n```from osmnx import graph_to_gdfs\r\nfrom shapely.geometry import Point\r\nfrom osmnx import redistribute_vertices\r\nimport logging as lg\r\nfrom osmnx.utils import log\r\nimport time\r\nfrom scipy.spatial import cKDTree\r\nfrom sklearn.neighbors import BallTree\r\n\r\ndef get_nearest_edge(G, point,return_key=False):\r\n    \"\"\"\r\n    Return the nearest edge to a pair of coordinates. Pass in a graph and a tuple\r\n    with the coordinates. We first get all the edges in the graph. Secondly we compute\r\n    the euclidean distance from the coordinates to the segments determined by each edge.\r\n    The last step is to sort the edge segments in ascending order based on the distance\r\n    from the coordinates to the edge. In the end, the first element in the list of edges\r\n    will be the closest edge that we will return as a tuple containing the shapely\r\n    geometry and the u, v nodes.\r\n    Parameters\r\n    ----------\r\n    G : networkx multidigraph\r\n    point : tuple\r\n        The (lat, lng) or (y, x) point for which we will find the nearest edge\r\n        in the graph\r\n    Returns\r\n    -------\r\n    closest_edge_to_point : tuple (shapely.geometry, u, v)\r\n        A geometry object representing the segment and the coordinates of the two\r\n        nodes that determine the edge section, u and v, the OSM ids of the nodes.\r\n    \"\"\"\r\n    start_time = time.time()\r\n\r\n    gdf = graph_to_gdfs(G, nodes=False, fill_edge_geometry=True)\r\n    if return_key:\r\n        graph_edges = gdf[[\"geometry\", \"u\", \"v\",\"key\"]].values.tolist()\r\n    else:\r\n        graph_edges = gdf[[\"geometry\", \"u\", \"v\"]].values.tolist()\r\n\r\n\r\n    edges_with_distances = [\r\n        (\r\n            graph_edge,\r\n            Point(tuple(reversed(point))).distance(graph_edge[0])\r\n        )\r\n        for graph_edge in graph_edges\r\n    ]\r\n\r\n    edges_with_distances = sorted(edges_with_distances, key=lambda x: x[1])\r\n    closest_edge_to_point = edges_with_distances[0][0]\r\n\r\n    if return_key:\r\n        geometry, u, v,key = closest_edge_to_point\r\n    else:\r\n        geometry, u, v = closest_edge_to_point\r\n\r\n    log('Found nearest edge ({}) to point {} in {:,.2f} seconds'.format((u, v), point, time.time() - start_time))\r\n\r\n    if return_key:\r\n        return geometry, u, v, key\r\n    else:\r\n        return geometry, u, v\r\n\r\n\r\ndef get_nearest_edges(G, X, Y, method=None, dist=0.0001,return_key=False):\r\n    \"\"\"\r\n    Return the graph edges nearest to a list of points. Pass in points\r\n    as separate vectors of X and Y coordinates. The 'kdtree' method\r\n    is by far the fastest with large data sets, but only finds approximate\r\n    nearest edges if working in unprojected coordinates like lat-lng (it\r\n    precisely finds the nearest edge if working in projected coordinates).\r\n    The 'balltree' method is second fastest with large data sets, but it\r\n    is precise if working in unprojected coordinates like lat-lng. As a\r\n    rule of thumb, if you have a small graph just use method=None. If you \r\n    have a large graph with lat-lng coordinates, use method='balltree'.\r\n    If you have a large graph with projected coordinates, use \r\n    method='kdtree'. Note that if you are working in units of lat-lng,\r\n    the X vector corresponds to longitude and the Y vector corresponds\r\n    to latitude.\r\n    Parameters\r\n    ----------\r\n    G : networkx multidigraph\r\n    X : list-like\r\n        The vector of longitudes or x's for which we will find the nearest\r\n        edge in the graph. For projected graphs, use the projected coordinates,\r\n        usually in meters.\r\n    Y : list-like\r\n        The vector of latitudes or y's for which we will find the nearest\r\n        edge in the graph. For projected graphs, use the projected coordinates,\r\n        usually in meters.\r\n    method : str {None, 'kdtree', 'balltree'}\r\n        Which method to use for finding nearest edge to each point.\r\n        If None, we manually find each edge one at a time using\r\n        osmnx.utils.get_nearest_edge. If 'kdtree' we use\r\n        scipy.spatial.cKDTree for very fast euclidean search. Recommended for\r\n        projected graphs. If 'balltree', we use sklearn.neighbors.BallTree for\r\n        fast haversine search. Recommended for unprojected graphs.\r\n    dist : float\r\n        spacing length along edges. Units are the same as the geom; Degrees for\r\n        unprojected geometries and meters for projected geometries. The smaller\r\n        the value, the more points are created.\r\n    Returns\r\n    -------\r\n    ne : ndarray\r\n        array of nearest edges represented by their startpoint and endpoint ids,\r\n        u and v, the OSM ids of the nodes.\r\n    Info\r\n    ----\r\n    The method creates equally distanced points along the edges of the network.\r\n    Then, these points are used in a kdTree or BallTree search to identify which\r\n    is nearest.Note that this method will not give the exact perpendicular point\r\n    along the edge, but the smaller the *dist* parameter, the closer the solution\r\n    will be.\r\n    Code is adapted from an answer by JHuw from this original question:\r\n    https://gis.stackexchange.com/questions/222315/geopandas-find-nearest-point\r\n    -in-other-dataframe\r\n    \"\"\"\r\n    start_time = time.time()\r\n\r\n    if method is None:\r\n        # calculate nearest edge one at a time for each (y, x) point\r\n        ne = [get_nearest_edge(G, (y, x),return_key) for x, y in zip(X, Y)]\r\n        if return_key:\r\n            ne = [(u, v,k) for _, u, v,k in ne]\r\n        else:\r\n            ne = [(u, v) for _, u, v in ne]\r\n\r\n    elif method == 'kdtree':\r\n\r\n        # check if we were able to import scipy.spatial.cKDTree successfully\r\n        if not cKDTree:\r\n            raise ImportError('The scipy package must be installed to use this optional feature.')\r\n\r\n        # transform graph into DataFrame\r\n        edges = graph_to_gdfs(G, nodes=False, fill_edge_geometry=True)\r\n\r\n        # transform edges into evenly spaced points\r\n        edges['points'] = edges.apply(lambda x: redistribute_vertices(x.geometry, dist), axis=1)\r\n\r\n        # develop edges data for each created points\r\n        extended = edges['points'].apply([pd.Series]).stack().reset_index(level=1, drop=True).join(edges).reset_index()\r\n\r\n        # Prepare btree arrays\r\n        nbdata = np.array(list(zip(extended['Series'].apply(lambda x: x.x),\r\n                                   extended['Series'].apply(lambda x: x.y))))\r\n\r\n        # build a k-d tree for euclidean nearest node search\r\n        btree = cKDTree(data=nbdata, compact_nodes=True, balanced_tree=True)\r\n\r\n        # query the tree for nearest node to each point\r\n        points = np.array([X, Y]).T\r\n        dist, idx = btree.query(points, k=1)  # Returns ids of closest point\r\n        eidx = extended.loc[idx, 'index']\r\n        if return_key:\r\n            ne = edges.loc[eidx, ['u', 'v','key']]\r\n        else:\r\n            ne = edges.loc[eidx, ['u', 'v']]\r\n\r\n    elif method == 'balltree':\r\n\r\n        # check if we were able to import sklearn.neighbors.BallTree successfully\r\n        if not BallTree:\r\n            raise ImportError('The scikit-learn package must be installed to use this optional feature.')\r\n\r\n        # transform graph into DataFrame\r\n        edges = graph_to_gdfs(G, nodes=False, fill_edge_geometry=True)\r\n\r\n        # transform edges into evenly spaced points\r\n        edges['points'] = edges.apply(lambda x: redistribute_vertices(x.geometry, dist), axis=1)\r\n\r\n        # develop edges data for each created points\r\n        extended = edges['points'].apply([pd.Series]).stack().reset_index(level=1, drop=True).join(edges).reset_index()\r\n\r\n        # haversine requires data in form of [lat, lng] and inputs/outputs in units of radians\r\n        nodes = pd.DataFrame({'x': extended['Series'].apply(lambda x: x.x),\r\n                              'y': extended['Series'].apply(lambda x: x.y)})\r\n        nodes_rad = np.deg2rad(nodes[['y', 'x']].values.astype(np.float))\r\n        points = np.array([Y, X]).T\r\n        points_rad = np.deg2rad(points)\r\n\r\n        # build a ball tree for haversine nearest node search\r\n        tree = BallTree(nodes_rad, metric='haversine')\r\n\r\n        # query the tree for nearest node to each point\r\n        idx = tree.query(points_rad, k=1, return_distance=False)\r\n        eidx = extended.loc[idx[:, 0], 'index']\r\n        if return_key:\r\n            ne = edges.loc[eidx, ['u', 'v','key']]\r\n        else:\r\n            ne = edges.loc[eidx, ['u', 'v']]\r\n\r\n    else:\r\n        raise ValueError('You must pass a valid method name, or None.')\r\n\r\n    log('Found nearest edges to {:,} points in {:,.2f} seconds'.format(len(X), time.time() - start_time))\r\n\r\n    return np.array(ne)```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/434", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/434/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/434/events", "html_url": "https://github.com/gboeing/osmnx/issues/434", "id": 606226792, "node_id": "MDU6SXNzdWU2MDYyMjY3OTI=", "number": 434, "title": "Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-qu23jn2x/Rtree/", "user": {"login": "sevku", "id": 23403917, "node_id": "MDQ6VXNlcjIzNDAzOTE3", "avatar_url": "https://avatars1.githubusercontent.com/u/23403917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sevku", "html_url": "https://github.com/sevku", "followers_url": "https://api.github.com/users/sevku/followers", "following_url": "https://api.github.com/users/sevku/following{/other_user}", "gists_url": "https://api.github.com/users/sevku/gists{/gist_id}", "starred_url": "https://api.github.com/users/sevku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sevku/subscriptions", "organizations_url": "https://api.github.com/users/sevku/orgs", "repos_url": "https://api.github.com/users/sevku/repos", "events_url": "https://api.github.com/users/sevku/events{/privacy}", "received_events_url": "https://api.github.com/users/sevku/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 547177833, "node_id": "MDU6TGFiZWw1NDcxNzc4MzM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/installation", "name": "installation", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-24T10:55:57Z", "updated_at": "2020-04-24T16:35:27Z", "closed_at": "2020-04-24T16:35:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ pip3 install osmnx\r\nCollecting osmnx\r\n  Using cached https://files.pythonhosted.org/packages/d3/16/e3975ec7dbece719d825259754d708312688732444779fd7dfd99322ce40/osmnx-0.12-py2.py3-none-any.whl\r\nCollecting pandas>=1.0 (from osmnx)\r\n  Using cached https://files.pythonhosted.org/packages/4a/6a/94b219b8ea0f2d580169e85ed1edc0163743f55aaeca8a44c2e8fc1e344e/pandas-1.0.3-cp37-cp37m-manylinux1_x86_64.whl\r\nCollecting geopandas>=0.7 (from osmnx)\r\n  Using cached https://files.pythonhosted.org/packages/83/c5/3cf9cdc39a6f2552922f79915f36b45a95b71fd343cfc51170a5b6ddb6e8/geopandas-0.7.0-py2.py3-none-any.whl\r\nCollecting matplotlib>=3.2 (from osmnx)\r\n  Using cached https://files.pythonhosted.org/packages/b2/c2/71fcf957710f3ba1f09088b35776a799ba7dd95f7c2b195ec800933b276b/matplotlib-3.2.1-cp37-cp37m-manylinux1_x86_64.whl\r\nCollecting numpy>=1.18 (from osmnx)\r\n  Using cached https://files.pythonhosted.org/packages/e7/38/f14d6706ae4fa327bdb023ef40b4d902bccd314d886fac4031687a8acc74/numpy-1.18.3-cp37-cp37m-manylinux1_x86_64.whl\r\nCollecting pyproj>=2.6 (from osmnx)\r\n  Using cached https://files.pythonhosted.org/packages/ae/d2/28fda2c7e9b43cc68837009ef6388b04499abbcfd25984ba953a2060b13d/pyproj-2.6.0-cp37-cp37m-manylinux1_x86_64.whl\r\nCollecting Rtree>=0.9 (from osmnx)\r\n  Using cached https://files.pythonhosted.org/packages/56/6f/f1e91001d5ad9fa9bed65875152f5a1c7955c5763168cae309546e6e9fda/Rtree-0.9.4.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-qu23jn2x/Rtree/setup.py\", line 3, in <module>\r\n        import rtree\r\n      File \"/tmp/pip-install-qu23jn2x/Rtree/rtree/__init__.py\", line 1, in <module>\r\n        from .index import Rtree\r\n      File \"/tmp/pip-install-qu23jn2x/Rtree/rtree/index.py\", line 6, in <module>\r\n        from . import core\r\n      File \"/tmp/pip-install-qu23jn2x/Rtree/rtree/core.py\", line 143, in <module>\r\n        rt.Error_GetLastErrorNum.restype = ctypes.c_int\r\n      File \"/usr/lib/python3.7/ctypes/__init__.py\", line 377, in __getattr__\r\n        func = self.__getitem__(name)\r\n      File \"/usr/lib/python3.7/ctypes/__init__.py\", line 382, in __getitem__\r\n        func = self._FuncPtr((name_or_ordinal, self))\r\n    AttributeError: /usr/bin/python3: undefined symbol: Error_GetLastErrorNum\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-qu23jn2x/Rtree/\r\n```\r\n\r\nI've tried to solve it, but the things I found online didn't work for me. Maybe someone here as a solution specific to osmnx. I didn't manage to install it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/428", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/428/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/428/events", "html_url": "https://github.com/gboeing/osmnx/issues/428", "id": 605028125, "node_id": "MDU6SXNzdWU2MDUwMjgxMjU=", "number": 428, "title": "plot_graph(): edge_colour ignores alpha if colour array is specified as RGBA", "user": {"login": "puntofisso", "id": 612999, "node_id": "MDQ6VXNlcjYxMjk5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/612999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puntofisso", "html_url": "https://github.com/puntofisso", "followers_url": "https://api.github.com/users/puntofisso/followers", "following_url": "https://api.github.com/users/puntofisso/following{/other_user}", "gists_url": "https://api.github.com/users/puntofisso/gists{/gist_id}", "starred_url": "https://api.github.com/users/puntofisso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puntofisso/subscriptions", "organizations_url": "https://api.github.com/users/puntofisso/orgs", "repos_url": "https://api.github.com/users/puntofisso/repos", "events_url": "https://api.github.com/users/puntofisso/events{/privacy}", "received_events_url": "https://api.github.com/users/puntofisso/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 547187209, "node_id": "MDU6TGFiZWw1NDcxODcyMDk=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/documentation", "name": "documentation", "color": "fef2c0", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-22T19:55:25Z", "updated_at": "2020-04-24T16:36:32Z", "closed_at": "2020-04-22T21:17:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use plot_graph to create street colouring maps this way: \r\n```\r\nfig, ax = ox.plot_graph(G, bgcolor=background, axis_off=True, node_size=0, node_color='w', node_edgecolor='gray', node_zorder=2, edge_color=ec, filename = place, file_format='svg', edge_linewidth=1, edge_alpha=1, fig_height=50, dpi=1200, save=save)\r\n```   \r\nWhere ```ec``` is thus built:\r\n\r\n```\r\nec = [colourcode(str(row['name']).lower()) for index, row in edge_attributes.iterrows()]\r\n```\r\n\r\nMy colourcode function simply takes the name and assigns colour hex codes based on road suffix (e.g. \"road\" is red, etc). For example, for a German-language map I do:\r\n\r\n```\r\ndef colourcode(x):\r\n        if ('stra\u00dfe' in x): \r\n            return '#f6cf71'\r\n        elif ('weg' in x):\r\n            return '#019868'\r\n        elif ('allee' in x):\r\n            return '#ec0b88'\r\n        else:\r\n            return '#c6c6c6'\r\n```\r\n\r\nIf instead of a RGB code I pass a RGBA code (as @gboeing suggests in [#239], the alpha channel seems to be ignored. For example, I get a black line whether I do\r\n```            return '#c6c6c6FF'```\r\nor\r\n```            return '#c6c6c600'```\r\n\r\nThis happens on a Jupyter notebook (6.0.2) run through anaconda on mac os, with matplotlib==3.1.1 and osmnx==0.11\r\n\r\nAm I doing something wrong, is this a matplotlib issue, or is there a genuine problem with plot_graph?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/427", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/427/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/427/events", "html_url": "https://github.com/gboeing/osmnx/issues/427", "id": 604411592, "node_id": "MDU6SXNzdWU2MDQ0MTE1OTI=", "number": 427, "title": "KeyError on Geometry when using simplify=True", "user": {"login": "tnoulas", "id": 7646271, "node_id": "MDQ6VXNlcjc2NDYyNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7646271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnoulas", "html_url": "https://github.com/tnoulas", "followers_url": "https://api.github.com/users/tnoulas/followers", "following_url": "https://api.github.com/users/tnoulas/following{/other_user}", "gists_url": "https://api.github.com/users/tnoulas/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnoulas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnoulas/subscriptions", "organizations_url": "https://api.github.com/users/tnoulas/orgs", "repos_url": "https://api.github.com/users/tnoulas/repos", "events_url": "https://api.github.com/users/tnoulas/events{/privacy}", "received_events_url": "https://api.github.com/users/tnoulas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-22T02:46:59Z", "updated_at": "2020-04-22T18:59:40Z", "closed_at": "2020-04-22T18:59:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nit looks like when I load a network setting simplify=False like this:\r\n\r\nG = ox.graph_from_point(chicago_center, distance=25000, network_type='drive', simplify=False) #check simplify parameter\r\n\r\n\r\nand subsequently try to read the geometry at the edge level \r\n\r\n for u, v, data in G.edges(keys=False, data=True):\r\n       print(data['geometry'].coords)\r\n\r\n\r\nI'm getting a key error. The error disappears when I am setting simplify=True for some reason. Any ideas whether this is an expected behaviour? I was looking for a more detailed view of the networks geometry actually. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/426", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/426/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/426/events", "html_url": "https://github.com/gboeing/osmnx/issues/426", "id": 602457796, "node_id": "MDU6SXNzdWU2MDI0NTc3OTY=", "number": 426, "title": "Feature Request: Expand simplify options in downloading functions", "user": {"login": "JNatael", "id": 9502300, "node_id": "MDQ6VXNlcjk1MDIzMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9502300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JNatael", "html_url": "https://github.com/JNatael", "followers_url": "https://api.github.com/users/JNatael/followers", "following_url": "https://api.github.com/users/JNatael/following{/other_user}", "gists_url": "https://api.github.com/users/JNatael/gists{/gist_id}", "starred_url": "https://api.github.com/users/JNatael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JNatael/subscriptions", "organizations_url": "https://api.github.com/users/JNatael/orgs", "repos_url": "https://api.github.com/users/JNatael/repos", "events_url": "https://api.github.com/users/JNatael/events{/privacy}", "received_events_url": "https://api.github.com/users/JNatael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-18T13:13:59Z", "updated_at": "2020-04-18T13:28:52Z", "closed_at": "2020-04-18T13:28:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The download functions currently have a Boolean simplify flag, allowing the downloaded network to be simplified or not. Would be great if this could be altered to include an 'intersections' option to download a network with simplified intersections instead of fully simplified.\r\n\r\nThis particularly (in my case) for the graph_from_point function (https://osmnx.readthedocs.io/en/stable/osmnx.html#osmnx.core.graph_from_point), but looking at the code it would seem to apply to the graph_from_bbox function as well, and maybe others.\r\n\r\nSmall tweak so not a high priority, but given the other options in these functions it would be nice if the simplification options were a bit more nuanced.\r\n\r\nThanks for a great library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/425", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/425/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/425/events", "html_url": "https://github.com/gboeing/osmnx/issues/425", "id": 602455903, "node_id": "MDU6SXNzdWU2MDI0NTU5MDM=", "number": 425, "title": "Docs github link is broken", "user": {"login": "JNatael", "id": 9502300, "node_id": "MDQ6VXNlcjk1MDIzMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9502300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JNatael", "html_url": "https://github.com/JNatael", "followers_url": "https://api.github.com/users/JNatael/followers", "following_url": "https://api.github.com/users/JNatael/following{/other_user}", "gists_url": "https://api.github.com/users/JNatael/gists{/gist_id}", "starred_url": "https://api.github.com/users/JNatael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JNatael/subscriptions", "organizations_url": "https://api.github.com/users/JNatael/orgs", "repos_url": "https://api.github.com/users/JNatael/repos", "events_url": "https://api.github.com/users/JNatael/events{/privacy}", "received_events_url": "https://api.github.com/users/JNatael/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 547187209, "node_id": "MDU6TGFiZWw1NDcxODcyMDk=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/documentation", "name": "documentation", "color": "fef2c0", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-18T13:03:58Z", "updated_at": "2020-04-24T16:36:25Z", "closed_at": "2020-04-23T21:11:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When one clicks \"Edit on Github\" in the docs it sends the browser to a github 404 page. The link appears to be broken.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/424", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/424/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/424/events", "html_url": "https://github.com/gboeing/osmnx/issues/424", "id": 600730680, "node_id": "MDU6SXNzdWU2MDA3MzA2ODA=", "number": 424, "title": "How do I use this library with self-hosted openstreetmap server?", "user": {"login": "kaushikCanada", "id": 21248009, "node_id": "MDQ6VXNlcjIxMjQ4MDA5", "avatar_url": "https://avatars2.githubusercontent.com/u/21248009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaushikCanada", "html_url": "https://github.com/kaushikCanada", "followers_url": "https://api.github.com/users/kaushikCanada/followers", "following_url": "https://api.github.com/users/kaushikCanada/following{/other_user}", "gists_url": "https://api.github.com/users/kaushikCanada/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaushikCanada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaushikCanada/subscriptions", "organizations_url": "https://api.github.com/users/kaushikCanada/orgs", "repos_url": "https://api.github.com/users/kaushikCanada/repos", "events_url": "https://api.github.com/users/kaushikCanada/events{/privacy}", "received_events_url": "https://api.github.com/users/kaushikCanada/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-16T04:01:09Z", "updated_at": "2020-04-16T18:10:39Z", "closed_at": "2020-04-16T18:10:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue tracker is for reporting bugs or proposing new features. Please ask \"how-to\" questions on https://stackoverflow.com/ instead. Before you proceed, please read the contributing guidelines in this repo's CONTRIBUTING.md.\r\n\r\nIf you installed OSMnx via conda and are experiencing installation problems, please open an issue at https://github.com/conda-forge/osmnx-feedstock/issues\r\n\r\nIf you're having trouble with OSMnx, first search the previously opened issues (and Stack Overflow) to see if the problem has already been noted. If not, fill in the template below:\r\n\r\n#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\nI think if we call the osmnx api it uses nominatim by default. how can i use my own postgis server and this library?\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n<details>\r\n# Paste the output of your Python packages and their versions here, between these two \"details\" tags\r\n\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\n# your code goes here\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/423", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/423/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/423/events", "html_url": "https://github.com/gboeing/osmnx/issues/423", "id": 600551375, "node_id": "MDU6SXNzdWU2MDA1NTEzNzU=", "number": 423, "title": "Find the distance to the nearest edge on a MultiDiGraph using OSMNx", "user": {"login": "TheCronus-agario", "id": 48311933, "node_id": "MDQ6VXNlcjQ4MzExOTMz", "avatar_url": "https://avatars1.githubusercontent.com/u/48311933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheCronus-agario", "html_url": "https://github.com/TheCronus-agario", "followers_url": "https://api.github.com/users/TheCronus-agario/followers", "following_url": "https://api.github.com/users/TheCronus-agario/following{/other_user}", "gists_url": "https://api.github.com/users/TheCronus-agario/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheCronus-agario/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheCronus-agario/subscriptions", "organizations_url": "https://api.github.com/users/TheCronus-agario/orgs", "repos_url": "https://api.github.com/users/TheCronus-agario/repos", "events_url": "https://api.github.com/users/TheCronus-agario/events{/privacy}", "received_events_url": "https://api.github.com/users/TheCronus-agario/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-15T19:57:10Z", "updated_at": "2020-05-06T22:48:50Z", "closed_at": "2020-05-06T22:48:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to find the distance in a MultiDiGraph from a given location to the closest edge and closest node. For example the specified location with latitude = 51.217220 and longitude = 4.418535. Firstly we compose a MultiDiGraph at that location with a radius of 350m. Here is the code:\r\n\r\n```\r\nimport osmnx as ox\r\nlat = 51.217220\r\nlon = 4.418535\r\nG = ox.graph_from_point((lat, lon), network_type='drive', distance=350, simplify=True)\r\n```\r\nThe OSMNx package has 2 valuable functions for my project: get_nearest_edge() and get_nearest_node(). get_nearest_node() finds the nearest node and returns it's ID. It also has an built-in option to return the distance to this nearest node:\r\n\r\nox.get_nearest_node(G, (lat,lon), method='haversine', return_dist=True) \r\nget_nearest_edge finds the nearest edge and returns the ID's of the 2 nodes that define the edge (each edge consists of 2 nodes being connected). However there's is no built-in option to get the distance to this edge.\r\n\r\nHow can I calculate the distance from the given location to the nearest edge? I was thinking that this could be a new feature in OSMNx to be added. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/422", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/422/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/422/events", "html_url": "https://github.com/gboeing/osmnx/issues/422", "id": 599620079, "node_id": "MDU6SXNzdWU1OTk2MjAwNzk=", "number": 422, "title": "ZeroDivisionError: division by zero", "user": {"login": "cletchy", "id": 9027570, "node_id": "MDQ6VXNlcjkwMjc1NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9027570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cletchy", "html_url": "https://github.com/cletchy", "followers_url": "https://api.github.com/users/cletchy/followers", "following_url": "https://api.github.com/users/cletchy/following{/other_user}", "gists_url": "https://api.github.com/users/cletchy/gists{/gist_id}", "starred_url": "https://api.github.com/users/cletchy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cletchy/subscriptions", "organizations_url": "https://api.github.com/users/cletchy/orgs", "repos_url": "https://api.github.com/users/cletchy/repos", "events_url": "https://api.github.com/users/cletchy/events{/privacy}", "received_events_url": "https://api.github.com/users/cletchy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-14T14:33:14Z", "updated_at": "2020-04-14T14:49:26Z", "closed_at": "2020-04-14T14:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue tracker is for reporting bugs or proposing new features. Please ask \"how-to\" questions on https://stackoverflow.com/ instead. Before you proceed, please read the contributing guidelines in this repo's CONTRIBUTING.md.\r\n\r\nIf you installed OSMnx via conda and are experiencing installation problems, please open an issue at https://github.com/conda-forge/osmnx-feedstock/issues\r\n\r\nIf you're having trouble with OSMnx, first search the previously opened issues (and Stack Overflow) to see if the problem has already been noted. If not, fill in the template below:\r\n\r\n#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n<details>\r\n# Paste the output of your Python packages and their versions here, between these two \"details\" tags\r\n\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\n# your code goes here\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/418", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/418/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/418/events", "html_url": "https://github.com/gboeing/osmnx/issues/418", "id": 597804560, "node_id": "MDU6SXNzdWU1OTc4MDQ1NjA=", "number": 418, "title": "Next release (0.11.5?) date", "user": {"login": "pmartincalvo", "id": 29076522, "node_id": "MDQ6VXNlcjI5MDc2NTIy", "avatar_url": "https://avatars0.githubusercontent.com/u/29076522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmartincalvo", "html_url": "https://github.com/pmartincalvo", "followers_url": "https://api.github.com/users/pmartincalvo/followers", "following_url": "https://api.github.com/users/pmartincalvo/following{/other_user}", "gists_url": "https://api.github.com/users/pmartincalvo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmartincalvo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmartincalvo/subscriptions", "organizations_url": "https://api.github.com/users/pmartincalvo/orgs", "repos_url": "https://api.github.com/users/pmartincalvo/repos", "events_url": "https://api.github.com/users/pmartincalvo/events{/privacy}", "received_events_url": "https://api.github.com/users/pmartincalvo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-10T09:51:49Z", "updated_at": "2020-04-10T20:59:39Z", "closed_at": "2020-04-10T17:34:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just a quick question: some of us are looking forward for some of the new features to be delivered in the next release. I simply wanted to ask if there's any planned date for the next release. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/417", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/417/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/417/events", "html_url": "https://github.com/gboeing/osmnx/issues/417", "id": 597696751, "node_id": "MDU6SXNzdWU1OTc2OTY3NTE=", "number": 417, "title": "truncate_by_edge not implemented in truncate_graph_polygon", "user": {"login": "KAI10", "id": 9108802, "node_id": "MDQ6VXNlcjkxMDg4MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/9108802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KAI10", "html_url": "https://github.com/KAI10", "followers_url": "https://api.github.com/users/KAI10/followers", "following_url": "https://api.github.com/users/KAI10/following{/other_user}", "gists_url": "https://api.github.com/users/KAI10/gists{/gist_id}", "starred_url": "https://api.github.com/users/KAI10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KAI10/subscriptions", "organizations_url": "https://api.github.com/users/KAI10/orgs", "repos_url": "https://api.github.com/users/KAI10/repos", "events_url": "https://api.github.com/users/KAI10/events{/privacy}", "received_events_url": "https://api.github.com/users/KAI10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-10T05:03:18Z", "updated_at": "2020-04-10T17:33:33Z", "closed_at": "2020-04-10T17:33:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I found that `truncate_by_edge` is not implemented for the method [truncate_graph_polygon](https://github.com/gboeing/osmnx/blob/998a764141d89b1adcd5456cc04a31c99a3a705b/osmnx/core.py#L703). I have implemented this part, would like to open a Pull Request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/416", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/416/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/416/events", "html_url": "https://github.com/gboeing/osmnx/issues/416", "id": 596482519, "node_id": "MDU6SXNzdWU1OTY0ODI1MTk=", "number": 416, "title": "Error geometry", "user": {"login": "adrianelizalde", "id": 33280517, "node_id": "MDQ6VXNlcjMzMjgwNTE3", "avatar_url": "https://avatars2.githubusercontent.com/u/33280517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianelizalde", "html_url": "https://github.com/adrianelizalde", "followers_url": "https://api.github.com/users/adrianelizalde/followers", "following_url": "https://api.github.com/users/adrianelizalde/following{/other_user}", "gists_url": "https://api.github.com/users/adrianelizalde/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianelizalde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianelizalde/subscriptions", "organizations_url": "https://api.github.com/users/adrianelizalde/orgs", "repos_url": "https://api.github.com/users/adrianelizalde/repos", "events_url": "https://api.github.com/users/adrianelizalde/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianelizalde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-08T10:43:12Z", "updated_at": "2020-04-11T14:38:42Z", "closed_at": "2020-04-08T16:23:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am trying to retrieve hotels and supermarkets and subways stops. I have tried several things but allways errors:\r\n\r\n```\r\nsupermarkets = ox.pois_from_place(barceloneta, amenities=['supermarket'])\r\nbuildings = ox.footprints_from_place(barceloneta, tourism=['hotel'])\r\n```\r\nKeyError: 'geometry'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/415", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/415/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/415/events", "html_url": "https://github.com/gboeing/osmnx/issues/415", "id": 596137926, "node_id": "MDU6SXNzdWU1OTYxMzc5MjY=", "number": 415, "title": "osmnx.gdfs_to_graph is dropping edges", "user": {"login": "cstutts", "id": 36861392, "node_id": "MDQ6VXNlcjM2ODYxMzky", "avatar_url": "https://avatars2.githubusercontent.com/u/36861392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cstutts", "html_url": "https://github.com/cstutts", "followers_url": "https://api.github.com/users/cstutts/followers", "following_url": "https://api.github.com/users/cstutts/following{/other_user}", "gists_url": "https://api.github.com/users/cstutts/gists{/gist_id}", "starred_url": "https://api.github.com/users/cstutts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cstutts/subscriptions", "organizations_url": "https://api.github.com/users/cstutts/orgs", "repos_url": "https://api.github.com/users/cstutts/repos", "events_url": "https://api.github.com/users/cstutts/events{/privacy}", "received_events_url": "https://api.github.com/users/cstutts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-07T20:39:04Z", "updated_at": "2020-04-08T03:33:12Z", "closed_at": "2020-04-08T01:04:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\n\r\nWhen I use osmnx.gdfs_to_graph(nodes,edges) I have noticed that several of my edges are getting dropped. This can be seen by converting the graph back to nodes and edges using nodes, edges = osmnx.graph_to_gdfs(G) and looking for the missing edge. In the example, you will see that there is one missing edge (old index 295) with road name \"Racehorse Drive\" in the new edges. Please use the attached NodesEdges.txt and **change name to NodesEdges.pkl** with the example.\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\n\r\nWindows 10 x64\r\nPython 3.8 osmnx version 0.11.4\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n<details>\r\n# Name Version Build Channel attrs 19.3.0 py_0 conda-forge backcall 0.1.0 py38_0 anaconda boost-cpp 1.70.0 h6a4c333_2 conda-forge branca 0.4.0 py_0 conda-forge bzip2 1.0.8 hfa6e2cd_2 conda-forge ca-certificates 2019.11.28 hecc5488_0 conda-forge certifi 2019.11.28 py38h32f6830_1 conda-forge cffi 1.14.0 py38ha419a9e_0 conda-forge cfitsio 3.470 hfa6e2cd_2 conda-forge chardet 3.0.4 py38h32f6830_1006 conda-forge click 7.0 py_0 conda-forge click-plugins 1.1.1 py_0 conda-forge cligj 0.5.0 py_0 conda-forge cloudpickle 1.2.2 py_1 conda-forge colorama 0.4.3 py_0 anaconda cryptography 2.8 py38hb32ad35_1 conda-forge curl 7.68.0 h4496350_0 conda-forge cycler 0.10.0 py_2 conda-forge cytoolz 0.10.1 py38hfa6e2cd_0 conda-forge dask-core 2.10.1 py_0 conda-forge decorator 4.4.1 py_0 conda-forge descartes 1.1.0 py_4 conda-forge expat 2.2.9 he025d50_2 conda-forge fiona 1.8.13 py38hb7fdc2d_0 conda-forge folium 0.10.1 py_0 conda-forge freetype 2.10.0 h563cfd7_1 conda-forge freexl 1.0.5 hd288d7e_1002 conda-forge gdal 3.0.4 py38h2fee047_0 conda-forge geographiclib 1.50 py_0 conda-forge geopandas 0.7.0 py_1 conda-forge geopy 1.21.0 py_0 conda-forge geos 3.8.0 he025d50_0 conda-forge geotiff 1.5.1 h9633a31_8 conda-forge gettext 0.19.8.1 hb01d8f6_1002 conda-forge glib 2.58.3 py38hc0c2ac7_1002 conda-forge hdf4 4.2.13 hf8e6fe8_1003 conda-forge hdf5 1.10.5 nompi_ha405e13_1104 conda-forge icc_rt 2019.0.0 h0cc432a_1 icu 64.2 he025d50_1 conda-forge idna 2.9 py_1 conda-forge imageio 2.6.1 py38_0 conda-forge intel-openmp 2019.4 245 ipython 7.12.0 py38h5ca1d4c_0 anaconda ipython_genutils 0.2.0 py38_0 anaconda jedi 0.16.0 py38_0 anaconda jinja2 2.11.1 py_0 conda-forge joblib 0.14.1 py_0 conda-forge jpeg 9c hfa6e2cd_1001 conda-forge kealib 1.4.10 hf7dc31f_1005 conda-forge kiwisolver 1.1.0 py38he980bc4_0 conda-forge krb5 1.16.4 hdd46e55_0 conda-forge libblas 3.8.0 14_mkl conda-forge libcblas 3.8.0 14_mkl conda-forge libclang 9.0.1 default_hf44288c_0 conda-forge libcurl 7.68.0 h4496350_0 conda-forge libffi 3.2.1 h6538335_1006 conda-forge libgdal 3.0.4 h90de84b_0 conda-forge libiconv 1.15 hfa6e2cd_1005 conda-forge libkml 1.3.0 h4ece8bf_1010 conda-forge liblapack 3.8.0 14_mkl conda-forge liblapacke 3.8.0 14_mkl conda-forge libnetcdf 4.7.3 nompi_hc957ea6_101 conda-forge libopencv 4.2.0 py38_2 conda-forge libpng 1.6.37 h7602738_0 conda-forge libpq 12.1 hb0bdaea_0 conda-forge libspatialindex 1.9.3 he025d50_3 conda-forge libspatialite 4.3.0a hd027ac7_1034 conda-forge libssh2 1.8.2 h642c060_2 conda-forge libtiff 4.1.0 h21b02b4_3 conda-forge libwebp 1.0.2 hfa6e2cd_5 conda-forge libxml2 2.9.10 h9ce36c8_0 conda-forge lz4-c 1.8.3 he025d50_1001 conda-forge m2w64-expat 2.1.1 2 m2w64-gcc-libgfortran 5.3.0 6 m2w64-gcc-libs 5.3.0 7 m2w64-gcc-libs-core 5.3.0 7 m2w64-gettext 0.19.7 2 m2w64-gmp 6.1.0 2 m2w64-libiconv 1.14 6 m2w64-libwinpthread-git 5.0.0.4634.697f757 2 m2w64-xz 5.2.2 2 markupsafe 1.1.1 py38h9de7a3e_1 conda-forge matplotlib-base 3.1.3 py38h2981e6d_0 conda-forge mkl 2019.4 245 msys2-conda-epoch 20160418 1 munch 2.5.0 py_0 conda-forge networkx 2.4 py_0 conda-forge numpy 1.18.1 py38hc71023c_0 conda-forge olefile 0.46 py_0 conda-forge opencv 4.2.0 py38_2 conda-forge openjpeg 2.3.1 h57dd2e7_3 conda-forge openssl 1.1.1e hfa6e2cd_0 conda-forge osmnx 0.11.4 py_1 conda-forge pandas 1.0.1 py38he350917_0 conda-forge parso 0.6.1 py_0 anaconda pcre 8.43 h6538335_0 conda-forge pickleshare 0.7.5 py38_1000 anaconda pillow 7.0.0 py38h9ea1dd6_0 conda-forge pip 20.0.2 py_2 conda-forge poppler 0.67.0 h1707e21_8 conda-forge poppler-data 0.4.9 1 conda-forge postgresql 12.1 h06f7779_0 conda-forge proj 6.3.0 ha7a8c7b_0 conda-forge prompt_toolkit 3.0.3 py_0 anaconda py-opencv 4.2.0 py38h5ca1d4c_2 conda-forge pycparser 2.20 py_0 conda-forge pygments 2.5.2 py_0 anaconda pyopenssl 19.1.0 py_1 conda-forge pyparsing 2.4.6 py_0 conda-forge pyproj 2.5.0 py38hc1560cf_0 conda-forge pysocks 1.7.1 py38h32f6830_1 conda-forge python 3.8.1 he1f5543_2 conda-forge python-dateutil 2.8.1 py_0 conda-forge python_abi 3.8 1_cp38 conda-forge pytz 2019.3 py_0 conda-forge pywavelets 1.1.1 py38hc8d92b1_0 conda-forge qt 5.12.5 h7ef1ec2_0 conda-forge requests 2.23.0 pyh8c360ce_2 conda-forge rtree 0.9.4 py38hbf79ddb_0 conda-forge scikit-image 0.16.2 py38he350917_0 conda-forge scikit-learn 0.22.2.post1 py38h7208079_0 conda-forge scipy 1.3.2 py38h582fac2_0 conda-forge setuptools 45.2.0 py38_0 conda-forge shapely 1.7.0 py38h2130f3d_0 conda-forge six 1.14.0 py38_0 conda-forge sqlite 3.30.1 hfa6e2cd_0 conda-forge tbb 2018.0.5 he980bc4_0 conda-forge tiledb 1.7.0 hffbbd95_2 conda-forge tk 8.6.10 hfa6e2cd_0 conda-forge toolz 0.10.0 py_0 conda-forge tornado 6.0.3 py38hfa6e2cd_3 conda-forge traitlets 4.3.3 py38_0 anaconda urllib3 1.25.7 py38h32f6830_1 conda-forge vc 14.1 h0510ff6_4 vincent 0.4.4 py_1 conda-forge vs2015_runtime 14.16.27012 hf0eaf9b_1 wcwidth 0.1.8 py_0 anaconda wheel 0.34.2 py_1 conda-forge win_inet_pton 1.1.0 py38_0 conda-forge wincertstore 0.2 py38_1003 conda-forge xerces-c 3.2.2 h6538335_1004 conda-forge xz 5.2.4 h2fa13f4_1001 conda-forge zlib 1.2.11 h2fa13f4_1006 conda-forge zstd 1.4.4 hd8a0e53_1 conda-forgetags\r\n\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\nimport pickle\r\nimport osmnx as ox\r\n\r\nwith open('NodesEdges.pkl', 'rb') as f:\r\n  nodes, edges = pickle.load(f)\r\n\r\nnodes.gdf_name = 'unnamed_UTM_UTM_nodes'\r\n\r\n#Find all the edges that belong to Racehorse Drive (There are 7)\r\nnp.where(edges.name.to_numpy()==\"Racehorse Drive\")\r\n# Should get: (array([204, 294, 295, 362, 363, 364, 656], dtype=int64),)\r\n\r\n#Index 295 will get dropped when converted to graph\r\nprint(edges.loc[295,:])\r\n\r\n#Convert to graph\r\nG = ox.gdfs_to_graph(nodes,edges)\r\n\r\n#Convert back to nodes, edges\r\nnew_nodes, new_edges = ox.graph_to_gdfs(G)\r\n\r\n#Find all the edges that belong to Racehorse Drive (There are only 6 now)\r\nnp.where(new_edges.name.to_numpy()==\"Racehorse Drive\")\r\n#Should get (array([621, 648, 649, 653, 667, 703], dtype=int64),)\r\n#There's one missing. This corresponds to old index 295\r\n\r\n\r\n\r\n```\r\n\r\n[NodesEdges.txt](https://github.com/gboeing/osmnx/files/4446901/NodesEdges.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/414", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/414/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/414/events", "html_url": "https://github.com/gboeing/osmnx/issues/414", "id": 594799368, "node_id": "MDU6SXNzdWU1OTQ3OTkzNjg=", "number": 414, "title": "get_nearest_edges() does not distinguish between parallel edges", "user": {"login": "ahvincent", "id": 6693613, "node_id": "MDQ6VXNlcjY2OTM2MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6693613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahvincent", "html_url": "https://github.com/ahvincent", "followers_url": "https://api.github.com/users/ahvincent/followers", "following_url": "https://api.github.com/users/ahvincent/following{/other_user}", "gists_url": "https://api.github.com/users/ahvincent/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahvincent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahvincent/subscriptions", "organizations_url": "https://api.github.com/users/ahvincent/orgs", "repos_url": "https://api.github.com/users/ahvincent/repos", "events_url": "https://api.github.com/users/ahvincent/events{/privacy}", "received_events_url": "https://api.github.com/users/ahvincent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-06T04:47:35Z", "updated_at": "2020-04-30T14:52:18Z", "closed_at": "2020-04-30T14:52:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\n\r\nget_nearest_edges() specifies each edge by returning the osmid of the \"u\" and \"v\" nodes for the edge. Because the graph is a MultiDiGraph and supports parallel edges, this function should return the Key of the edge as well. My suggested fix is as follows: \r\n\r\nOn line 461 in geo_utils.py, in the function get_nearest_edges(),\r\n\r\n```python\r\nne = edges.loc[eidx, ['u', 'v', 'key']]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/411", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/411/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/411/events", "html_url": "https://github.com/gboeing/osmnx/issues/411", "id": 592937353, "node_id": "MDU6SXNzdWU1OTI5MzczNTM=", "number": 411, "title": "Saving graphs to GeoPackages or PostgreSQL (PostGIS) tables?", "user": {"login": "swiss-knight", "id": 19967599, "node_id": "MDQ6VXNlcjE5OTY3NTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/19967599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swiss-knight", "html_url": "https://github.com/swiss-knight", "followers_url": "https://api.github.com/users/swiss-knight/followers", "following_url": "https://api.github.com/users/swiss-knight/following{/other_user}", "gists_url": "https://api.github.com/users/swiss-knight/gists{/gist_id}", "starred_url": "https://api.github.com/users/swiss-knight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swiss-knight/subscriptions", "organizations_url": "https://api.github.com/users/swiss-knight/orgs", "repos_url": "https://api.github.com/users/swiss-knight/repos", "events_url": "https://api.github.com/users/swiss-knight/events{/privacy}", "received_events_url": "https://api.github.com/users/swiss-knight/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-02T21:47:09Z", "updated_at": "2020-04-03T14:31:28Z", "closed_at": "2020-04-03T04:07:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI wonder if it would be possible to export a graph (within the `save_load` module e.g.) directly as:\r\n\r\n- two GeoPackages (nodes/edges)\r\n- two PostGIS tables (nodes/edges)\r\n\r\n\r\nThe ESRI Shapefile has some limitations (e.g. field names get truncated to 10 char).\r\n\r\nI would suggest to wait for GeoPandas 0.8 to be out for a direct export to PostGIS as it's already [on the track](https://github.com/geopandas/geopandas/pull/822).\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/410", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/410/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/410/events", "html_url": "https://github.com/gboeing/osmnx/issues/410", "id": 592901678, "node_id": "MDU6SXNzdWU1OTI5MDE2Nzg=", "number": 410, "title": "osmnx project_graph bug", "user": {"login": "cstutts", "id": 36861392, "node_id": "MDQ6VXNlcjM2ODYxMzky", "avatar_url": "https://avatars2.githubusercontent.com/u/36861392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cstutts", "html_url": "https://github.com/cstutts", "followers_url": "https://api.github.com/users/cstutts/followers", "following_url": "https://api.github.com/users/cstutts/following{/other_user}", "gists_url": "https://api.github.com/users/cstutts/gists{/gist_id}", "starred_url": "https://api.github.com/users/cstutts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cstutts/subscriptions", "organizations_url": "https://api.github.com/users/cstutts/orgs", "repos_url": "https://api.github.com/users/cstutts/repos", "events_url": "https://api.github.com/users/cstutts/events{/privacy}", "received_events_url": "https://api.github.com/users/cstutts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T20:23:33Z", "updated_at": "2020-04-03T04:23:19Z", "closed_at": "2020-04-03T04:23:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "osmnx.project_graph is reporting converted coordinates in incorrect fields. The below code generates the following print statements.\r\nBefore conversion\r\n{'y' : 32.80706, 'x': -96.992542, 'osmid': 82247680}\r\nAfter conversion to UTM\r\n{'y' : 3631682.3444373296, 'x': 687951.4587168699, 'osmid': 82247680, 'highway': nan, 'lon': -96.992542, 'lat': 32.80706}\r\nAfter conversion back to EPSG:4326\r\n{'y' : 32.80706, 'x': -96.992542, 'osmid': 82247680, 'highway': nan, 'lon': 687951.4587168699, 'lat': 3631682.3444373296}\r\n\r\nThe UTM coordinates are now in the \"lat\" \"lon\" fields. These should have the original Lat and Lon values as well.\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\nWindows 10 x64\r\nPython 3.8 osmnx version 0.11.4\r\n\r\n<details>\r\n# Name Version Build Channel attrs 19.3.0 py_0 conda-forge backcall 0.1.0 py38_0 anaconda boost-cpp 1.70.0 h6a4c333_2 conda-forge branca 0.4.0 py_0 conda-forge bzip2 1.0.8 hfa6e2cd_2 conda-forge ca-certificates 2019.11.28 hecc5488_0 conda-forge certifi 2019.11.28 py38h32f6830_1 conda-forge cffi 1.14.0 py38ha419a9e_0 conda-forge cfitsio 3.470 hfa6e2cd_2 conda-forge chardet 3.0.4 py38h32f6830_1006 conda-forge click 7.0 py_0 conda-forge click-plugins 1.1.1 py_0 conda-forge cligj 0.5.0 py_0 conda-forge cloudpickle 1.2.2 py_1 conda-forge colorama 0.4.3 py_0 anaconda cryptography 2.8 py38hb32ad35_1 conda-forge curl 7.68.0 h4496350_0 conda-forge cycler 0.10.0 py_2 conda-forge cytoolz 0.10.1 py38hfa6e2cd_0 conda-forge dask-core 2.10.1 py_0 conda-forge decorator 4.4.1 py_0 conda-forge descartes 1.1.0 py_4 conda-forge expat 2.2.9 he025d50_2 conda-forge fiona 1.8.13 py38hb7fdc2d_0 conda-forge folium 0.10.1 py_0 conda-forge freetype 2.10.0 h563cfd7_1 conda-forge freexl 1.0.5 hd288d7e_1002 conda-forge gdal 3.0.4 py38h2fee047_0 conda-forge geographiclib 1.50 py_0 conda-forge geopandas 0.7.0 py_1 conda-forge geopy 1.21.0 py_0 conda-forge geos 3.8.0 he025d50_0 conda-forge geotiff 1.5.1 h9633a31_8 conda-forge gettext 0.19.8.1 hb01d8f6_1002 conda-forge glib 2.58.3 py38hc0c2ac7_1002 conda-forge hdf4 4.2.13 hf8e6fe8_1003 conda-forge hdf5 1.10.5 nompi_ha405e13_1104 conda-forge icc_rt 2019.0.0 h0cc432a_1 icu 64.2 he025d50_1 conda-forge idna 2.9 py_1 conda-forge imageio 2.6.1 py38_0 conda-forge intel-openmp 2019.4 245 ipython 7.12.0 py38h5ca1d4c_0 anaconda ipython_genutils 0.2.0 py38_0 anaconda jedi 0.16.0 py38_0 anaconda jinja2 2.11.1 py_0 conda-forge joblib 0.14.1 py_0 conda-forge jpeg 9c hfa6e2cd_1001 conda-forge kealib 1.4.10 hf7dc31f_1005 conda-forge kiwisolver 1.1.0 py38he980bc4_0 conda-forge krb5 1.16.4 hdd46e55_0 conda-forge libblas 3.8.0 14_mkl conda-forge libcblas 3.8.0 14_mkl conda-forge libclang 9.0.1 default_hf44288c_0 conda-forge libcurl 7.68.0 h4496350_0 conda-forge libffi 3.2.1 h6538335_1006 conda-forge libgdal 3.0.4 h90de84b_0 conda-forge libiconv 1.15 hfa6e2cd_1005 conda-forge libkml 1.3.0 h4ece8bf_1010 conda-forge liblapack 3.8.0 14_mkl conda-forge liblapacke 3.8.0 14_mkl conda-forge libnetcdf 4.7.3 nompi_hc957ea6_101 conda-forge libopencv 4.2.0 py38_2 conda-forge libpng 1.6.37 h7602738_0 conda-forge libpq 12.1 hb0bdaea_0 conda-forge libspatialindex 1.9.3 he025d50_3 conda-forge libspatialite 4.3.0a hd027ac7_1034 conda-forge libssh2 1.8.2 h642c060_2 conda-forge libtiff 4.1.0 h21b02b4_3 conda-forge libwebp 1.0.2 hfa6e2cd_5 conda-forge libxml2 2.9.10 h9ce36c8_0 conda-forge lz4-c 1.8.3 he025d50_1001 conda-forge m2w64-expat 2.1.1 2 m2w64-gcc-libgfortran 5.3.0 6 m2w64-gcc-libs 5.3.0 7 m2w64-gcc-libs-core 5.3.0 7 m2w64-gettext 0.19.7 2 m2w64-gmp 6.1.0 2 m2w64-libiconv 1.14 6 m2w64-libwinpthread-git 5.0.0.4634.697f757 2 m2w64-xz 5.2.2 2 markupsafe 1.1.1 py38h9de7a3e_1 conda-forge matplotlib-base 3.1.3 py38h2981e6d_0 conda-forge mkl 2019.4 245 msys2-conda-epoch 20160418 1 munch 2.5.0 py_0 conda-forge networkx 2.4 py_0 conda-forge numpy 1.18.1 py38hc71023c_0 conda-forge olefile 0.46 py_0 conda-forge opencv 4.2.0 py38_2 conda-forge openjpeg 2.3.1 h57dd2e7_3 conda-forge openssl 1.1.1e hfa6e2cd_0 conda-forge osmnx 0.11.4 py_1 conda-forge pandas 1.0.1 py38he350917_0 conda-forge parso 0.6.1 py_0 anaconda pcre 8.43 h6538335_0 conda-forge pickleshare 0.7.5 py38_1000 anaconda pillow 7.0.0 py38h9ea1dd6_0 conda-forge pip 20.0.2 py_2 conda-forge poppler 0.67.0 h1707e21_8 conda-forge poppler-data 0.4.9 1 conda-forge postgresql 12.1 h06f7779_0 conda-forge proj 6.3.0 ha7a8c7b_0 conda-forge prompt_toolkit 3.0.3 py_0 anaconda py-opencv 4.2.0 py38h5ca1d4c_2 conda-forge pycparser 2.20 py_0 conda-forge pygments 2.5.2 py_0 anaconda pyopenssl 19.1.0 py_1 conda-forge pyparsing 2.4.6 py_0 conda-forge pyproj 2.5.0 py38hc1560cf_0 conda-forge pysocks 1.7.1 py38h32f6830_1 conda-forge python 3.8.1 he1f5543_2 conda-forge python-dateutil 2.8.1 py_0 conda-forge python_abi 3.8 1_cp38 conda-forge pytz 2019.3 py_0 conda-forge pywavelets 1.1.1 py38hc8d92b1_0 conda-forge qt 5.12.5 h7ef1ec2_0 conda-forge requests 2.23.0 pyh8c360ce_2 conda-forge rtree 0.9.4 py38hbf79ddb_0 conda-forge scikit-image 0.16.2 py38he350917_0 conda-forge scikit-learn 0.22.2.post1 py38h7208079_0 conda-forge scipy 1.3.2 py38h582fac2_0 conda-forge setuptools 45.2.0 py38_0 conda-forge shapely 1.7.0 py38h2130f3d_0 conda-forge six 1.14.0 py38_0 conda-forge sqlite 3.30.1 hfa6e2cd_0 conda-forge tbb 2018.0.5 he980bc4_0 conda-forge tiledb 1.7.0 hffbbd95_2 conda-forge tk 8.6.10 hfa6e2cd_0 conda-forge toolz 0.10.0 py_0 conda-forge tornado 6.0.3 py38hfa6e2cd_3 conda-forge traitlets 4.3.3 py38_0 anaconda urllib3 1.25.7 py38h32f6830_1 conda-forge vc 14.1 h0510ff6_4 vincent 0.4.4 py_1 conda-forge vs2015_runtime 14.16.27012 hf0eaf9b_1 wcwidth 0.1.8 py_0 anaconda wheel 0.34.2 py_1 conda-forge win_inet_pton 1.1.0 py38_0 conda-forge wincertstore 0.2 py38_1003 conda-forge xerces-c 3.2.2 h6538335_1004 conda-forge xz 5.2.4 h2fa13f4_1001 conda-forge zlib 1.2.11 h2fa13f4_1006 conda-forge zstd 1.4.4 hd8a0e53_1 conda-forge\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\nimport osmnx as ox\r\n\r\nG = ox.graph_from_bbox(32.812469,32.765161,-96.980091,-97.052905,simplify=False)\r\nprint(G.nodes[82247680])\r\nG = ox.project_graph(G)\r\nprint(G.nodes[82247680])\r\nG = ox.project_graph(G, to_crs=\"EPSG:4326\")\r\nprint(G.nodes[82247680])\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/409", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/409/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/409/events", "html_url": "https://github.com/gboeing/osmnx/issues/409", "id": 590772309, "node_id": "MDU6SXNzdWU1OTA3NzIzMDk=", "number": 409, "title": "Duplicate edge id in graphml ", "user": {"login": "chungyang", "id": 10239334, "node_id": "MDQ6VXNlcjEwMjM5MzM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10239334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chungyang", "html_url": "https://github.com/chungyang", "followers_url": "https://api.github.com/users/chungyang/followers", "following_url": "https://api.github.com/users/chungyang/following{/other_user}", "gists_url": "https://api.github.com/users/chungyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chungyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chungyang/subscriptions", "organizations_url": "https://api.github.com/users/chungyang/orgs", "repos_url": "https://api.github.com/users/chungyang/repos", "events_url": "https://api.github.com/users/chungyang/events{/privacy}", "received_events_url": "https://api.github.com/users/chungyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-31T04:01:50Z", "updated_at": "2020-03-31T04:31:04Z", "closed_at": "2020-03-31T04:31:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n#### Problem description \r\n\r\nI tried out the example code to generate graphml. The file generated seems to have the same id for all edges. \r\n![Screen Shot 2020-03-31 at 12 00 08 AM](https://user-images.githubusercontent.com/10239334/77985530-c4e8fc00-72e2-11ea-8058-e7a1fe7d2dc5.png)\r\nIs it intended to be this way?\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\n\r\nOSX 10.14.4, x86_64, python3.8, osmnx 0.11.4\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n<details>\r\nattrs                     19.3.0                     py_0    conda-forge\r\nboost-cpp                 1.72.0               hdf9ef73_0    conda-forge\r\nbranca                    0.4.0                      py_0    conda-forge\r\nbzip2                     1.0.8                h0b31af3_2    conda-forge\r\nca-certificates           2019.11.28           hecc5488_0    conda-forge\r\ncairo                     1.16.0            hec6a9b0_1003    conda-forge\r\ncertifi                   2019.11.28       py38h32f6830_1    conda-forge\r\ncffi                      1.14.0           py38h356ff06_0    conda-forge\r\ncfitsio                   3.470                h84d2f63_2    conda-forge\r\nchardet                   3.0.4           py38h32f6830_1006    conda-forge\r\nclick                     7.1.1              pyh8c360ce_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncryptography              2.8              py38hb761dab_2    conda-forge\r\ncurl                      7.68.0               h8754def_0    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ndecorator                 4.4.2                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\nexpat                     2.2.9                h4a8c4bd_2    conda-forge\r\nfiona                     1.8.13           py38he71f6a4_0    conda-forge\r\nfolium                    0.10.1                     py_0    conda-forge\r\nfontconfig                2.13.1            h6b1039f_1001    conda-forge\r\nfreetype                  2.10.1               h8da9a1a_0    conda-forge\r\nfreexl                    1.0.5             h1de35cc_1002    conda-forge\r\ngdal                      3.0.4            py38h9f7df5a_2    conda-forge\r\ngeographiclib             1.50                       py_0    conda-forge\r\ngeopandas                 0.6.3                      py_0    conda-forge\r\ngeopy                     1.21.0                     py_0    conda-forge\r\ngeos                      3.8.1                h4a8c4bd_0    conda-forge\r\ngeotiff                   1.5.1                h4bdff65_9    conda-forge\r\ngettext                   0.19.8.1          h46ab8bc_1002    conda-forge\r\ngiflib                    5.2.1                h0b31af3_2    conda-forge\r\nglib                      2.58.3          py38h338c551_1003    conda-forge\r\nhdf4                      4.2.13            h84186c3_1003    conda-forge\r\nhdf5                      1.10.5          nompi_h3e39495_1104    conda-forge\r\nicu                       64.2                 h6de7cb9_1    conda-forge\r\nidna                      2.9                        py_1    conda-forge\r\njinja2                    2.11.1                     py_0    conda-forge\r\njoblib                    0.14.1                     py_0    conda-forge\r\njpeg                      9c                h1de35cc_1001    conda-forge\r\njson-c                    0.13.1            h1de35cc_1001    conda-forge\r\nkealib                    1.4.12               h2324030_0    conda-forge\r\nkiwisolver                1.1.0            py38ha0d09dd_1    conda-forge\r\nkrb5                      1.16.4               h1752a42_0    conda-forge\r\nlibblas                   3.8.0               16_openblas    conda-forge\r\nlibcblas                  3.8.0               16_openblas    conda-forge\r\nlibcurl                   7.68.0               h709d2b2_0    conda-forge\r\nlibcxx                    9.0.1                         1    conda-forge\r\nlibdap4                   3.20.4               habf5908_0    conda-forge\r\nlibedit                   3.1.20170329      hcfe32e1_1001    conda-forge\r\nlibffi                    3.2.1             h4a8c4bd_1007    conda-forge\r\nlibgdal                   3.0.4                hbf8f8d6_2    conda-forge\r\nlibgfortran               4.0.0                         2    conda-forge\r\nlibiconv                  1.15              h0b31af3_1006    conda-forge\r\nlibkml                    1.3.0             h169b8f9_1011    conda-forge\r\nliblapack                 3.8.0               16_openblas    conda-forge\r\nlibnetcdf                 4.7.3           nompi_hda4e5f1_101    conda-forge\r\nlibopenblas               0.3.9                h3d69b6c_0    conda-forge\r\nlibpng                    1.6.37               hbbe82c9_1    conda-forge\r\nlibpq                     12.2                 h554dc5a_0    conda-forge\r\nlibspatialindex           1.9.3                h4a8c4bd_3    conda-forge\r\nlibspatialite             4.3.0a            hbcd37d4_1037    conda-forge\r\nlibssh2                   1.8.2                hcdc9a53_2    conda-forge\r\nlibtiff                   4.1.0                ha78913b_3    conda-forge\r\nlibwebp                   1.0.2                hd3bf737_5    conda-forge\r\nlibxml2                   2.9.10               h53d96d6_0    conda-forge\r\nllvm-openmp               9.0.1                h28b9765_2    conda-forge\r\nlz4-c                     1.8.3             h6de7cb9_1001    conda-forge\r\nmarkupsafe                1.1.1            py38h64e0658_1    conda-forge\r\nmatplotlib                3.2.1                         0    conda-forge\r\nmatplotlib-base           3.2.1            py38h1300a51_0    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nncurses                   6.1               h0a44026_1002    conda-forge\r\nnetworkx                  2.4                        py_1    conda-forge\r\nnumpy                     1.18.1           py38h1f821a2_1    conda-forge\r\nopenjpeg                  2.3.1                h254dc36_3    conda-forge\r\nopenssl                   1.1.1e               h0b31af3_0    conda-forge\r\nosmnx                     0.11.4                     py_1    conda-forge\r\npandas                    1.0.3            py38h5fc983b_0    conda-forge\r\npcre                      8.44                 h4a8c4bd_0    conda-forge\r\npip                       20.0.2                     py_2    conda-forge\r\npixman                    0.38.0            h01d97ff_1003    conda-forge\r\npoppler                   0.67.0               h16886b5_8    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.2                 h16d8c28_0    conda-forge\r\nproj                      6.3.1                h773a61f_1    conda-forge\r\npycparser                 2.20                       py_0    conda-forge\r\npyopenssl                 19.1.0                     py_1    conda-forge\r\npyparsing                 2.4.6                      py_0    conda-forge\r\npyproj                    2.6.0            py38hfccf04c_0    conda-forge\r\npysocks                   1.7.1            py38h32f6830_1    conda-forge\r\npython                    3.8.2           hd5f0129_5_cpython    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npython_abi                3.8                      1_cp38    conda-forge\r\npytz                      2019.3                     py_0    conda-forge\r\nreadline                  8.0                  hcfe32e1_0    conda-forge\r\nrequests                  2.23.0             pyh8c360ce_2    conda-forge\r\nrtree                     0.9.4            py38h08f867b_1    conda-forge\r\nscikit-learn              0.22.2.post1     py38h3dc85bc_0    conda-forge\r\nscipy                     1.4.1            py38h38b60c6_2    conda-forge\r\nsetuptools                46.1.3           py38h32f6830_0    conda-forge\r\nshapely                   1.7.0            py38h5b1fbde_2    conda-forge\r\nsix                       1.14.0                     py_1    conda-forge\r\nsqlite                    3.30.1               h93121df_0    conda-forge\r\ntbb                       2018.0.5             h2d50403_0    conda-forge\r\ntiledb                    1.7.0                hd5e958f_2    conda-forge\r\ntk                        8.6.10               hbbe82c9_0    conda-forge\r\ntornado                   6.0.4            py38h64e0658_1    conda-forge\r\ntzcode                    2019a             h01d97ff_1002    conda-forge\r\nurllib3                   1.25.7           py38h32f6830_1    conda-forge\r\nvincent                   0.4.4                      py_1    conda-forge\r\nwheel                     0.34.2                     py_1    conda-forge\r\nxerces-c                  3.2.2             h8f8adb3_1004    conda-forge\r\nxz                        5.2.4             h0b31af3_1002    conda-forge\r\nzlib                      1.2.11            h0b31af3_1006    conda-forge\r\nzstd                      1.4.4                hed8d7c8_2    conda-forge\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\nimport osmnx as ox\r\nG = ox.graph_from_place('Piedmont, California, USA', network_type='drive')\r\nG_projected = ox.project_graph(G)\r\nox.save_graphml(G_projected, filename='network.graphml')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/408", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/408/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/408/events", "html_url": "https://github.com/gboeing/osmnx/issues/408", "id": 589095773, "node_id": "MDU6SXNzdWU1ODkwOTU3NzM=", "number": 408, "title": "List street names in network maps", "user": {"login": "casemsee", "id": 18253918, "node_id": "MDQ6VXNlcjE4MjUzOTE4", "avatar_url": "https://avatars0.githubusercontent.com/u/18253918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casemsee", "html_url": "https://github.com/casemsee", "followers_url": "https://api.github.com/users/casemsee/followers", "following_url": "https://api.github.com/users/casemsee/following{/other_user}", "gists_url": "https://api.github.com/users/casemsee/gists{/gist_id}", "starred_url": "https://api.github.com/users/casemsee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casemsee/subscriptions", "organizations_url": "https://api.github.com/users/casemsee/orgs", "repos_url": "https://api.github.com/users/casemsee/repos", "events_url": "https://api.github.com/users/casemsee/events{/privacy}", "received_events_url": "https://api.github.com/users/casemsee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-27T12:20:29Z", "updated_at": "2020-03-27T16:03:47Z", "closed_at": "2020-03-27T16:01:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking for street information for the clean intersections that are produced by osmnx. \r\nI see that I can print lat/lon information, but is there a way to **include street/road names**  in network maps as well? I don't see how to do this in the documentation. Thanks!\r\n\r\n```\r\nimport osmnx as ox\r\nG = ox.graph_from_bbox(37.79, 37.78, -122.41, -122.43, network_type='drive')\r\nG_projected = ox.project_graph(G)\r\nox.plot_graph(G_projected)\r\n```\r\n@gboeing \r\n\r\n\r\n![image](https://user-images.githubusercontent.com/18253918/77755503-89032c00-7081-11ea-8b24-2f9580743f63.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/407", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/407/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/407/events", "html_url": "https://github.com/gboeing/osmnx/issues/407", "id": 588767656, "node_id": "MDU6SXNzdWU1ODg3Njc2NTY=", "number": 407, "title": "AttributeError GeoDataFrame object has no attribute 'gdf_name'", "user": {"login": "cstutts", "id": 36861392, "node_id": "MDQ6VXNlcjM2ODYxMzky", "avatar_url": "https://avatars2.githubusercontent.com/u/36861392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cstutts", "html_url": "https://github.com/cstutts", "followers_url": "https://api.github.com/users/cstutts/followers", "following_url": "https://api.github.com/users/cstutts/following{/other_user}", "gists_url": "https://api.github.com/users/cstutts/gists{/gist_id}", "starred_url": "https://api.github.com/users/cstutts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cstutts/subscriptions", "organizations_url": "https://api.github.com/users/cstutts/orgs", "repos_url": "https://api.github.com/users/cstutts/repos", "events_url": "https://api.github.com/users/cstutts/events{/privacy}", "received_events_url": "https://api.github.com/users/cstutts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T22:30:39Z", "updated_at": "2020-03-27T15:58:48Z", "closed_at": "2020-03-27T15:58:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to remove link type highways from an osmnx graph by converting the graph to a pandas dataframe, generating new nodes and edges dataframes that are a subset of the original and then converting the result back to a graph.  ox.gdfs_to_graph generates the following error\r\n\r\nFile <removed> line 776, in gdfs_to_graph\r\nG.graph['name'] = gdf_nodes.gdf_name.rstrip('_nodes')\r\nFile <removed>, line 5274, in __getattr__\r\nreturn object.__getattribute__(self, name)\r\n\r\nAttributeError: 'GeoDataFrame' object has no attribute 'gdf_name\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\nWindows 10 x64\r\nPython 3.8 osmnx version 0.11.4\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n<details>\r\n# Name                    Version                   Build  Channel\r\nattrs                     19.3.0                     py_0    conda-forge\r\nbackcall                  0.1.0                    py38_0    anaconda\r\nboost-cpp                 1.70.0               h6a4c333_2    conda-forge\r\nbranca                    0.4.0                      py_0    conda-forge\r\nbzip2                     1.0.8                hfa6e2cd_2    conda-forge\r\nca-certificates           2019.11.28           hecc5488_0    conda-forge\r\ncertifi                   2019.11.28       py38h32f6830_1    conda-forge\r\ncffi                      1.14.0           py38ha419a9e_0    conda-forge\r\ncfitsio                   3.470                hfa6e2cd_2    conda-forge\r\nchardet                   3.0.4           py38h32f6830_1006    conda-forge\r\nclick                     7.0                        py_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncloudpickle               1.2.2                      py_1    conda-forge\r\ncolorama                  0.4.3                      py_0    anaconda\r\ncryptography              2.8              py38hb32ad35_1    conda-forge\r\ncurl                      7.68.0               h4496350_0    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ncytoolz                   0.10.1           py38hfa6e2cd_0    conda-forge\r\ndask-core                 2.10.1                     py_0    conda-forge\r\ndecorator                 4.4.1                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\nexpat                     2.2.9                he025d50_2    conda-forge\r\nfiona                     1.8.13           py38hb7fdc2d_0    conda-forge\r\nfolium                    0.10.1                     py_0    conda-forge\r\nfreetype                  2.10.0               h563cfd7_1    conda-forge\r\nfreexl                    1.0.5             hd288d7e_1002    conda-forge\r\ngdal                      3.0.4            py38h2fee047_0    conda-forge\r\ngeographiclib             1.50                       py_0    conda-forge\r\ngeopandas                 0.7.0                      py_1    conda-forge\r\ngeopy                     1.21.0                     py_0    conda-forge\r\ngeos                      3.8.0                he025d50_0    conda-forge\r\ngeotiff                   1.5.1                h9633a31_8    conda-forge\r\ngettext                   0.19.8.1          hb01d8f6_1002    conda-forge\r\nglib                      2.58.3          py38hc0c2ac7_1002    conda-forge\r\nhdf4                      4.2.13            hf8e6fe8_1003    conda-forge\r\nhdf5                      1.10.5          nompi_ha405e13_1104    conda-forge\r\nicc_rt                    2019.0.0             h0cc432a_1\r\nicu                       64.2                 he025d50_1    conda-forge\r\nidna                      2.9                        py_1    conda-forge\r\nimageio                   2.6.1                    py38_0    conda-forge\r\nintel-openmp              2019.4                      245\r\nipython                   7.12.0           py38h5ca1d4c_0    anaconda\r\nipython_genutils          0.2.0                    py38_0    anaconda\r\njedi                      0.16.0                   py38_0    anaconda\r\njinja2                    2.11.1                     py_0    conda-forge\r\njoblib                    0.14.1                     py_0    conda-forge\r\njpeg                      9c                hfa6e2cd_1001    conda-forge\r\nkealib                    1.4.10            hf7dc31f_1005    conda-forge\r\nkiwisolver                1.1.0            py38he980bc4_0    conda-forge\r\nkrb5                      1.16.4               hdd46e55_0    conda-forge\r\nlibblas                   3.8.0                    14_mkl    conda-forge\r\nlibcblas                  3.8.0                    14_mkl    conda-forge\r\nlibclang                  9.0.1           default_hf44288c_0    conda-forge\r\nlibcurl                   7.68.0               h4496350_0    conda-forge\r\nlibffi                    3.2.1             h6538335_1006    conda-forge\r\nlibgdal                   3.0.4                h90de84b_0    conda-forge\r\nlibiconv                  1.15              hfa6e2cd_1005    conda-forge\r\nlibkml                    1.3.0             h4ece8bf_1010    conda-forge\r\nliblapack                 3.8.0                    14_mkl    conda-forge\r\nliblapacke                3.8.0                    14_mkl    conda-forge\r\nlibnetcdf                 4.7.3           nompi_hc957ea6_101    conda-forge\r\nlibopencv                 4.2.0                    py38_2    conda-forge\r\nlibpng                    1.6.37               h7602738_0    conda-forge\r\nlibpq                     12.1                 hb0bdaea_0    conda-forge\r\nlibspatialindex           1.9.3                he025d50_3    conda-forge\r\nlibspatialite             4.3.0a            hd027ac7_1034    conda-forge\r\nlibssh2                   1.8.2                h642c060_2    conda-forge\r\nlibtiff                   4.1.0                h21b02b4_3    conda-forge\r\nlibwebp                   1.0.2                hfa6e2cd_5    conda-forge\r\nlibxml2                   2.9.10               h9ce36c8_0    conda-forge\r\nlz4-c                     1.8.3             he025d50_1001    conda-forge\r\nm2w64-expat               2.1.1                         2\r\nm2w64-gcc-libgfortran     5.3.0                         6\r\nm2w64-gcc-libs            5.3.0                         7\r\nm2w64-gcc-libs-core       5.3.0                         7\r\nm2w64-gettext             0.19.7                        2\r\nm2w64-gmp                 6.1.0                         2\r\nm2w64-libiconv            1.14                          6\r\nm2w64-libwinpthread-git   5.0.0.4634.697f757               2\r\nm2w64-xz                  5.2.2                         2\r\nmarkupsafe                1.1.1            py38h9de7a3e_1    conda-forge\r\nmatplotlib-base           3.1.3            py38h2981e6d_0    conda-forge\r\nmkl                       2019.4                      245\r\nmsys2-conda-epoch         20160418                      1\r\nmunch                     2.5.0                      py_0    conda-forge\r\nnetworkx                  2.4                        py_0    conda-forge\r\nnumpy                     1.18.1           py38hc71023c_0    conda-forge\r\nolefile                   0.46                       py_0    conda-forge\r\nopencv                    4.2.0                    py38_2    conda-forge\r\nopenjpeg                  2.3.1                h57dd2e7_3    conda-forge\r\nopenssl                   1.1.1e               hfa6e2cd_0    conda-forge\r\nosmnx                     0.11.4                     py_1    conda-forge\r\npandas                    1.0.1            py38he350917_0    conda-forge\r\nparso                     0.6.1                      py_0    anaconda\r\npcre                      8.43                 h6538335_0    conda-forge\r\npickleshare               0.7.5                 py38_1000    anaconda\r\npillow                    7.0.0            py38h9ea1dd6_0    conda-forge\r\npip                       20.0.2                     py_2    conda-forge\r\npoppler                   0.67.0               h1707e21_8    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.1                 h06f7779_0    conda-forge\r\nproj                      6.3.0                ha7a8c7b_0    conda-forge\r\nprompt_toolkit            3.0.3                      py_0    anaconda\r\npy-opencv                 4.2.0            py38h5ca1d4c_2    conda-forge\r\npycparser                 2.20                       py_0    conda-forge\r\npygments                  2.5.2                      py_0    anaconda\r\npyopenssl                 19.1.0                     py_1    conda-forge\r\npyparsing                 2.4.6                      py_0    conda-forge\r\npyproj                    2.5.0            py38hc1560cf_0    conda-forge\r\npysocks                   1.7.1            py38h32f6830_1    conda-forge\r\npython                    3.8.1                he1f5543_2    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npython_abi                3.8                      1_cp38    conda-forge\r\npytz                      2019.3                     py_0    conda-forge\r\npywavelets                1.1.1            py38hc8d92b1_0    conda-forge\r\nqt                        5.12.5               h7ef1ec2_0    conda-forge\r\nrequests                  2.23.0             pyh8c360ce_2    conda-forge\r\nrtree                     0.9.4            py38hbf79ddb_0    conda-forge\r\nscikit-image              0.16.2           py38he350917_0    conda-forge\r\nscikit-learn              0.22.2.post1     py38h7208079_0    conda-forge\r\nscipy                     1.3.2            py38h582fac2_0    conda-forge\r\nsetuptools                45.2.0                   py38_0    conda-forge\r\nshapely                   1.7.0            py38h2130f3d_0    conda-forge\r\nsix                       1.14.0                   py38_0    conda-forge\r\nsqlite                    3.30.1               hfa6e2cd_0    conda-forge\r\ntbb                       2018.0.5             he980bc4_0    conda-forge\r\ntiledb                    1.7.0                hffbbd95_2    conda-forge\r\ntk                        8.6.10               hfa6e2cd_0    conda-forge\r\ntoolz                     0.10.0                     py_0    conda-forge\r\ntornado                   6.0.3            py38hfa6e2cd_3    conda-forge\r\ntraitlets                 4.3.3                    py38_0    anaconda\r\nurllib3                   1.25.7           py38h32f6830_1    conda-forge\r\nvc                        14.1                 h0510ff6_4\r\nvincent                   0.4.4                      py_1    conda-forge\r\nvs2015_runtime            14.16.27012          hf0eaf9b_1\r\nwcwidth                   0.1.8                      py_0    anaconda\r\nwheel                     0.34.2                     py_1    conda-forge\r\nwin_inet_pton             1.1.0                    py38_0    conda-forge\r\nwincertstore              0.2                   py38_1003    conda-forge\r\nxerces-c                  3.2.2             h6538335_1004    conda-forge\r\nxz                        5.2.4             h2fa13f4_1001    conda-forge\r\nzlib                      1.2.11            h2fa13f4_1006    conda-forge\r\nzstd                      1.4.4                hd8a0e53_1    conda-forge\r\n\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\nimport numpy as np\r\nimport osmnx_psf as ox\r\n\r\nG = ox.graph_from_bbox(32.812469,32.765161,-96.980091,-97.052905,simplify=False)\r\n\r\nwgs84_crs = \"EPSG:4326\" \r\nprint('projecting to %s...' % wgs84_crs)\r\nG = ox.project_graph(G, to_crs=wgs84_crs)\r\n\r\n# Remove primary, secondary, and tertiary highway links.\r\nnodes, edges = ox.graph_to_gdfs(G)\r\n\r\n#Get the highway category, edge start node (u), and edge end node (v) columns as a numpy object array\r\nhighways = edges.highway.to_numpy()\r\nu = edges.u.to_numpy()\r\nv = edges.v.to_numpy()\r\n\r\n#Get the rows for highways that are not links\r\nlinks = [\"primary_link\",\"secondary_link\",\"tertiary_link\"]\r\nedge_ids =  [row for row, highway in enumerate(highways) if any(link in highway for link in links) is False]\r\n\r\n#Store a new edges dataframe not containing links\r\nnew_edges = edges.iloc[edge_ids,:]\r\n\r\n#Get a list of remaining unique nodes in edges\r\nuv = np.unique(np.concatenate((u[edge_ids],v[edge_ids])))\r\n\r\n#Remove nodes that are not in this list\r\nnode_values = nodes.index.values\r\nnode_ids = [row for row,value in enumerate(node_values) if any(node == value for node in uv)]\r\nnew_nodes = nodes.iloc[node_ids,:]\r\n\r\nG = ox.gdfs_to_graph(new_nodes,new_edges)```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/404", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/404/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/404/events", "html_url": "https://github.com/gboeing/osmnx/issues/404", "id": 584202980, "node_id": "MDU6SXNzdWU1ODQyMDI5ODA=", "number": 404, "title": "How to calculate road density with a point?", "user": {"login": "Evelyn-Xin", "id": 37922973, "node_id": "MDQ6VXNlcjM3OTIyOTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/37922973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Evelyn-Xin", "html_url": "https://github.com/Evelyn-Xin", "followers_url": "https://api.github.com/users/Evelyn-Xin/followers", "following_url": "https://api.github.com/users/Evelyn-Xin/following{/other_user}", "gists_url": "https://api.github.com/users/Evelyn-Xin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Evelyn-Xin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Evelyn-Xin/subscriptions", "organizations_url": "https://api.github.com/users/Evelyn-Xin/orgs", "repos_url": "https://api.github.com/users/Evelyn-Xin/repos", "events_url": "https://api.github.com/users/Evelyn-Xin/events{/privacy}", "received_events_url": "https://api.github.com/users/Evelyn-Xin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T06:57:35Z", "updated_at": "2020-03-20T16:30:45Z", "closed_at": "2020-03-20T16:30:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear author, \r\n                  Very appreciate your work on osmnx. But I wonder how to calculate road density with a point per square maybe?\r\n                  Thank you very much.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/403", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/403/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/403/events", "html_url": "https://github.com/gboeing/osmnx/issues/403", "id": 584070204, "node_id": "MDU6SXNzdWU1ODQwNzAyMDQ=", "number": 403, "title": "Trouble with all_oneway, save_as_osm(), and nx.shortest_path()", "user": {"login": "mschroen", "id": 7942719, "node_id": "MDQ6VXNlcjc5NDI3MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7942719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mschroen", "html_url": "https://github.com/mschroen", "followers_url": "https://api.github.com/users/mschroen/followers", "following_url": "https://api.github.com/users/mschroen/following{/other_user}", "gists_url": "https://api.github.com/users/mschroen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mschroen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mschroen/subscriptions", "organizations_url": "https://api.github.com/users/mschroen/orgs", "repos_url": "https://api.github.com/users/mschroen/repos", "events_url": "https://api.github.com/users/mschroen/events{/privacy}", "received_events_url": "https://api.github.com/users/mschroen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-18T23:52:19Z", "updated_at": "2020-03-20T20:25:36Z", "closed_at": "2020-03-20T16:33:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Intended workflow:**\r\n1. download a graph,\r\n2. save it to disk,\r\n3. load it from disk later,\r\n4. calculate shortest paths.\r\n\r\nThis workflow will never work because of some strange behaviour of OSMnx:\r\n\r\n1. `save_as_osm()` only works for graphs generated with `all_oneway=True`,\r\n2. `nx.shortest_path()` only works for graphs generated with `all_oneway=False`.\r\n\r\nOf course I am keen to learn how the workflow could be realized despite those restrictions, but since this is not stackoverflow, I would like to start trying to understand what is going on here. Is this behaviour intended? If yes, why? If not, is it a bug or a missing feature?\r\n\r\nMinimal example:\r\n```\r\nimport osmnx as ox\r\nimport networkx as nx\r\n# some coordinates\r\nc1 = [33.3147, -111.90112]\r\nc2 = [33.3053, -111.89607]\r\n```\r\n\r\nDeijkstra works, save doesn't:\r\n```\r\n# Read with oneway=False\r\nox.utils.config(all_oneway=False)\r\nG = ox.graph_from_address('N. Sicily Pl., Chandler, Arizona', distance=800, network_type='drive')\r\nox.save_as_osm(G, filename='test')\r\n# Error: does not work with oneway=False\r\nroute = nx.shortest_path(G, ox.get_nearest_node(G, c1), ox.get_nearest_node(G, c2))\r\n# works!\r\n```\r\n\r\nSave works, deijkstra doesn't:\r\n```\r\n# Read with oneway=True\r\nox.utils.config(all_oneway=True)\r\nG = ox.graph_from_address('N. Sicily Pl., Chandler, Arizona', distance=800, network_type='drive')\r\nox.save_as_osm(G, filename='test')\r\n# works!\r\nroute = nx.shortest_path(G, ox.get_nearest_node(G, c1), ox.get_nearest_node(G, c2))\r\n# Error: No path between c1 and c2\r\n```\r\n\r\nI thought that saving the graph with `all_oneway=True` and reading it using the bidirectional flag could be a clever hack to get the workflow running. But no, it doesn't. Even on a saved osm file no shortest paths can be found:\r\n```\r\nG = ox.graph_from_file('data/test', simplify=False, bidirectional=True)\r\nroute = nx.shortest_path(G, ox.get_nearest_node(G, c1), ox.get_nearest_node(G, c2))\r\n# Error: No path between c1 and c2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/402", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/402/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/402/events", "html_url": "https://github.com/gboeing/osmnx/issues/402", "id": 582082380, "node_id": "MDU6SXNzdWU1ODIwODIzODA=", "number": 402, "title": "Cannot be install on Ubuntu 16.04.6 LTS with pip3.", "user": {"login": "catafest", "id": 2210118, "node_id": "MDQ6VXNlcjIyMTAxMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2210118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catafest", "html_url": "https://github.com/catafest", "followers_url": "https://api.github.com/users/catafest/followers", "following_url": "https://api.github.com/users/catafest/following{/other_user}", "gists_url": "https://api.github.com/users/catafest/gists{/gist_id}", "starred_url": "https://api.github.com/users/catafest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catafest/subscriptions", "organizations_url": "https://api.github.com/users/catafest/orgs", "repos_url": "https://api.github.com/users/catafest/repos", "events_url": "https://api.github.com/users/catafest/events{/privacy}", "received_events_url": "https://api.github.com/users/catafest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-16T08:03:08Z", "updated_at": "2020-03-18T16:53:57Z", "closed_at": "2020-03-18T16:53:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue tracker is for reporting bugs or proposing new features. Please ask \"how-to\" questions on https://stackoverflow.com/ instead. Before you proceed, please read the contributing guidelines in this repo's CONTRIBUTING.md.\r\n\r\nIf you installed OSMnx via conda and are experiencing installation problems, please open an issue at https://github.com/conda-forge/osmnx-feedstock/issues\r\n\r\nIf you're having trouble with OSMnx, first search the previously opened issues (and Stack Overflow) to see if the problem has already been noted. If not, fill in the template below:\r\n\r\n#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n```\r\ncatalin@Strix:~$ sudo apt-get install libgeos-dev\r\nReading package lists... Done\r\nBuilding dependency tree       \r\nReading state information... Done\r\nlibgeos-dev is already the newest version (3.5.0-1ubuntu2).\r\n0 upgraded, 0 newly installed, 0 to remove and 40 not upgraded.\r\n\r\n\r\ncatalin@Strix:~$ pip3 install osmnx \r\nDefaulting to user installation because normal site-packages is not writeable\r\nCollecting osmnx\r\n  Using cached osmnx-0.11.4-py2.py3-none-any.whl (77 kB)\r\nRequirement already satisfied: Shapely>=1.7 in ./.local/lib/python3.5/site-packages (from osmnx) (1.7.0)\r\nERROR: Could not find a version that satisfies the requirement matplotlib>=3.1 (from osmnx) (from versions: 0.86, 0.86.1, 0.86.2, 0.91.0, 0.91.1, 1.0.1, 1.1.0, 1.1.1, 1.2.0, 1.2.1, 1.3.0, 1.3.1, 1.4.0, 1.4.1rc1, 1.4.1, 1.4.2, 1.4.3, 1.5.0, 1.5.1, 1.5.2, 1.5.3, 2.0.0b1, 2.0.0b2, 2.0.0b3, 2.0.0b4, 2.0.0rc1, 2.0.0rc2, 2.0.0, 2.0.1, 2.0.2, 2.1.0rc1, 2.1.0, 2.1.1, 2.1.2, 2.2.0rc1, 2.2.0, 2.2.2, 2.2.3, 2.2.4, 2.2.5, 3.0.0rc2, 3.0.0, 3.0.1, 3.0.2, 3.0.3)\r\nERROR: No matching distribution found for matplotlib>=3.1 (from osmnx)\r\ncatalin@Strix:~$ pip3 install osmnx --user\r\nCollecting osmnx\r\n  Using cached osmnx-0.11.4-py2.py3-none-any.whl (77 kB)\r\nERROR: Could not find a version that satisfies the requirement matplotlib>=3.1 (from osmnx) (from versions: 0.86, 0.86.1, 0.86.2, 0.91.0, 0.91.1, 1.0.1, 1.1.0, 1.1.1, 1.2.0, 1.2.1, 1.3.0, 1.3.1, 1.4.0, 1.4.1rc1, 1.4.1, 1.4.2, 1.4.3, 1.5.0, 1.5.1, 1.5.2, 1.5.3, 2.0.0b1, 2.0.0b2, 2.0.0b3, 2.0.0b4, 2.0.0rc1, 2.0.0rc2, 2.0.0, 2.0.1, 2.0.2, 2.1.0rc1, 2.1.0, 2.1.1, 2.1.2, 2.2.0rc1, 2.2.0, 2.2.2, 2.2.3, 2.2.4, 2.2.5, 3.0.0rc2, 3.0.0, 3.0.1, 3.0.2, 3.0.3)\r\nERROR: No matching distribution found for matplotlib>=3.1 (from osmnx)\r\n\r\n\r\ncatalin@Strix:~$ pip3 list \r\nPackage                       Version               \r\n----------------------------- ----------------------\r\nabsl-py                       0.9.0                 \r\naiofiles                      0.4.0                 \r\napturl                        0.5.2                 \r\nastor                         0.8.1                 \r\nattrs                         19.3.0                \r\nAutomat                       0.8.0                 \r\nbcrypt                        3.1.7                 \r\nbeautifulsoup4                4.8.1                 \r\nblacksheep                    0.2.2                 \r\nblinker                       1.4                   \r\nBrlapi                        0.6.4                 \r\ncachetools                    4.0.0                 \r\ncchardet                      2.1.5                 \r\ncertifi                       2019.9.11             \r\ncffi                          1.13.2                \r\ncharacteristic                14.3.0                \r\nchardet                       3.0.4                 \r\ncheckbox-support              0.39.0                \r\nClick                         7.0                   \r\nclick-plugins                 1.1.1                 \r\ncligj                         0.5.0                 \r\ncommand-not-found             0.3                   \r\nconstantly                    15.1.0                \r\ncontextvars                   2.4                   \r\ncryptography                  2.8                   \r\ncycler                        0.9.0                 \r\ndecorator                     4.4.2                 \r\ndefer                         1.0.6                 \r\ndescartes                     1.1.0                 \r\nDjango                        2.2.7                 \r\nessentials                    1.1.2                 \r\nfeedparser                    5.2.1                 \r\nFiona                         1.8.13.post1          \r\nfuture                        0.18.2                \r\ngast                          0.2.2                 \r\ngeopandas                     0.7.0                 \r\ngoogle-auth                   1.11.2                \r\ngoogle-auth-oauthlib          0.4.1                 \r\ngoogle-pasta                  0.1.8                 \r\ngrpcio                        1.27.2                \r\nguacamole                     0.9.2                 \r\nguardpost                     0.0.5                 \r\nh11                           0.7.0                 \r\nh2                            3.2.0                 \r\nh5py                          2.10.0                \r\nhpack                         3.0.0                 \r\nhstspreload                   2020.2.25             \r\nhtml5lib                      1.0.1                 \r\nhttplib2                      0.14.0                \r\nhttptools                     0.1.1                 \r\nhttpx                         0.11.1                \r\nhyperframe                    5.2.0                 \r\nhyperlink                     19.0.0                \r\nidna                          2.8                   \r\nimmutables                    0.11                  \r\nimportlib-metadata            1.5.0                 \r\nimutils                       0.5.3                 \r\nincremental                   17.5.0                \r\nipython                       2.4.1                 \r\nitsdangerous                  1.1.0                 \r\nJinja2                        2.10.3                \r\njoblib                        0.14.1                \r\nkazam                         1.4.5                 \r\nKeras-Applications            1.0.8                 \r\nKeras-Preprocessing           1.1.0                 \r\nklein                         19.6.0                \r\nlanguage-selector             0.1                   \r\nlouis                         2.6.4                 \r\nlxml                          4.4.1                 \r\nMako                          1.1.0                 \r\nMarkdown                      3.2.1                 \r\nMarkupSafe                    1.1.1                 \r\nmatplotlib                    1.5.1                 \r\nmore-itertools                8.2.0                 \r\nmultidict                     4.7.4                 \r\nmunch                         2.5.0                 \r\nnetmiko                       2.4.2                 \r\nnetworkx                      2.4                   \r\nnumpy                         1.17.3                \r\noauthlib                      3.1.0                 \r\nonboard                       1.2.0                 \r\nopencv-python                 4.2.0.32              \r\nopt-einsum                    3.1.0                 \r\npackaging                     19.2                  \r\npadme                         1.1.1                 \r\npandas                        0.24.2                \r\nparamiko                      2.6.0                 \r\npathlib2                      2.3.5                 \r\npexpect                       4.7.0                 \r\nPillow                        6.2.1                 \r\npip                           20.0.2                \r\npip-review                    1.0                   \r\nplainbox                      0.38.0                \r\npluggy                        0.13.1                \r\nprotobuf                      3.11.3                \r\nptyprocess                    0.6.0                 \r\npy                            1.8.1                 \r\npyasn1                        0.4.7                 \r\npyasn1-modules                0.2.8                 \r\npycparser                     2.19                  \r\npycrypto                      2.6.1                 \r\npycups                        1.9.73                \r\npycurl                        7.43.0.3              \r\npygal                         2.4.0                 \r\npygobject                     3.20.0                \r\nPyHamcrest                    2.0.0                 \r\nPyJWT                         1.7.1                 \r\nPyMySQL                       0.9.3                 \r\nPyNaCl                        1.3.0                 \r\nPyOpenGL                      3.1.0                 \r\npyparsing                     2.4.4                 \r\npyprof2calltree               1.4.4                 \r\npyproj                        2.5.0                 \r\nPyQt5                         5.14.1                \r\nPyQt5-sip                     12.7.0                \r\nPyQtChart                     5.14.0                \r\nPyQtWebEngine                 5.13.2                \r\npyserial                      3.4                   \r\npytest                        5.3.5                 \r\npython-apt                    1.1.0b1+ubuntu0.16.4.8\r\npython-dateutil               2.8.1                 \r\npython-debian                 0.1.36                \r\npython-systemd                231                   \r\npytz                          2019.3                \r\npyxdg                         0.26                  \r\nQuart                         0.5.0                 \r\nreportlab                     3.5.32                \r\nrequests                      2.22.0                \r\nrequests-oauthlib             1.3.0                 \r\nrequests-unixsocket           0.2.0                 \r\nrfc3986                       1.3.2                 \r\nrobotframework                3.1.2                 \r\nrodi                          1.0.8                 \r\nrsa                           4.0                   \r\nscikit-learn                  0.22.2.post1          \r\nscipy                         1.4.1                 \r\nscp                           0.13.2                \r\nsessioninstaller              0.0.0                 \r\nsetuptools                    41.6.0                \r\nShapely                       1.7.0                 \r\nsimplegeneric                 0.8.1                 \r\nsix                           1.13.0                \r\nsklearn                       0.0                   \r\nsniffio                       1.1.0                 \r\nsortedcontainers              2.1.0                 \r\nsoupsieve                     1.9.5                 \r\nsqlparse                      0.3.0                 \r\nstarlette                     0.10.2                \r\nsystem-service                0.3                   \r\ntensorboard                   2.1.0                 \r\ntensorflow-estimator          2.1.0                 \r\ntermcolor                     1.1.0                 \r\ntextfsm                       1.1.0                 \r\ntflite-runtime                2.1.0.post1           \r\nTubes                         0.2.0                 \r\nTwisted                       19.10.0               \r\ntyping                        3.7.4.1               \r\nubuntu-drivers-common         0.0.0                 \r\nufw                           0.35                  \r\nunattended-upgrades           0.1                   \r\nunity-scope-calculator        0.1                   \r\nunity-scope-chromiumbookmarks 0.1                   \r\nunity-scope-colourlovers      0.1                   \r\nunity-scope-devhelp           0.1                   \r\nunity-scope-firefoxbookmarks  0.1                   \r\nunity-scope-gdrive            0.7                   \r\nunity-scope-manpages          0.1                   \r\nunity-scope-openclipart       0.1                   \r\nunity-scope-texdoc            0.1                   \r\nunity-scope-tomboy            0.1                   \r\nunity-scope-virtualbox        0.1                   \r\nunity-scope-yelp              0.1                   \r\nunity-scope-zotero            0.1                   \r\nunsync                        1.2.1                 \r\nurllib3                       1.25.6                \r\nusb-creator                   0.3.0                 \r\nuvloop                        0.14.0                \r\nvirtualenv                    16.7.7                \r\nwcwidth                       0.1.8                 \r\nwebencodings                  0.5.1                 \r\nWerkzeug                      1.0.0                 \r\nwheel                         0.29.0                \r\nwrapt                         1.12.0                \r\nwsproto                       0.14.1                \r\nxdiagnose                     3.8.4.1               \r\nxkit                          0.0.0                 \r\nXlsxWriter                    1.2.2                 \r\nzipp                          1.2.0                 \r\nzope.interface                4.7.1  \r\n```\r\n<details>\r\n# Paste the output of your Python packages and their versions here, between these two \"details\" tags\r\n\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\n# your code goes here\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/401", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/401/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/401/events", "html_url": "https://github.com/gboeing/osmnx/issues/401", "id": 581076685, "node_id": "MDU6SXNzdWU1ODEwNzY2ODU=", "number": 401, "title": "No Issue", "user": {"login": "zcanter", "id": 5613001, "node_id": "MDQ6VXNlcjU2MTMwMDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5613001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zcanter", "html_url": "https://github.com/zcanter", "followers_url": "https://api.github.com/users/zcanter/followers", "following_url": "https://api.github.com/users/zcanter/following{/other_user}", "gists_url": "https://api.github.com/users/zcanter/gists{/gist_id}", "starred_url": "https://api.github.com/users/zcanter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zcanter/subscriptions", "organizations_url": "https://api.github.com/users/zcanter/orgs", "repos_url": "https://api.github.com/users/zcanter/repos", "events_url": "https://api.github.com/users/zcanter/events{/privacy}", "received_events_url": "https://api.github.com/users/zcanter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-14T07:02:25Z", "updated_at": "2020-03-14T07:08:02Z", "closed_at": "2020-03-14T07:07:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/400", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/400/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/400/events", "html_url": "https://github.com/gboeing/osmnx/issues/400", "id": 580674164, "node_id": "MDU6SXNzdWU1ODA2NzQxNjQ=", "number": 400, "title": "ImportError: cannot import name 'CRS' from 'pyproj' (/opt/conda/lib/python3.7/site-packages/pyproj/__init__.py)", "user": {"login": "wangshGIS", "id": 7898665, "node_id": "MDQ6VXNlcjc4OTg2NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7898665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangshGIS", "html_url": "https://github.com/wangshGIS", "followers_url": "https://api.github.com/users/wangshGIS/followers", "following_url": "https://api.github.com/users/wangshGIS/following{/other_user}", "gists_url": "https://api.github.com/users/wangshGIS/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangshGIS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangshGIS/subscriptions", "organizations_url": "https://api.github.com/users/wangshGIS/orgs", "repos_url": "https://api.github.com/users/wangshGIS/repos", "events_url": "https://api.github.com/users/wangshGIS/events{/privacy}", "received_events_url": "https://api.github.com/users/wangshGIS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-03-13T15:25:25Z", "updated_at": "2020-07-17T16:38:32Z", "closed_at": "2020-03-13T17:41:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue tracker is for reporting bugs or proposing new features. Please ask \"how-to\" questions on https://stackoverflow.com/ instead. Before you proceed, please read the contributing guidelines in this repo's CONTRIBUTING.md.\r\n\r\nIf you installed OSMnx via conda and are experiencing installation problems, please open an issue at https://github.com/conda-forge/osmnx-feedstock/issues\r\n\r\nIf you're having trouble with OSMnx, first search the previously opened issues (and Stack Overflow) to see if the problem has already been noted. If not, fill in the template below:\r\n\r\n#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n<details>\r\n# Paste the output of your Python packages and their versions here, between these two \"details\" tags\r\n\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\n# your code goes here\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/399", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/399/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/399/events", "html_url": "https://github.com/gboeing/osmnx/issues/399", "id": 577039870, "node_id": "MDU6SXNzdWU1NzcwMzk4NzA=", "number": 399, "title": "Catch MultiPolygons with Topological Errors", "user": {"login": "AtelierLibre", "id": 36126654, "node_id": "MDQ6VXNlcjM2MTI2NjU0", "avatar_url": "https://avatars1.githubusercontent.com/u/36126654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AtelierLibre", "html_url": "https://github.com/AtelierLibre", "followers_url": "https://api.github.com/users/AtelierLibre/followers", "following_url": "https://api.github.com/users/AtelierLibre/following{/other_user}", "gists_url": "https://api.github.com/users/AtelierLibre/gists{/gist_id}", "starred_url": "https://api.github.com/users/AtelierLibre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AtelierLibre/subscriptions", "organizations_url": "https://api.github.com/users/AtelierLibre/orgs", "repos_url": "https://api.github.com/users/AtelierLibre/repos", "events_url": "https://api.github.com/users/AtelierLibre/events{/privacy}", "received_events_url": "https://api.github.com/users/AtelierLibre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165091, "node_id": "MDU6TGFiZWw0MTMxNjUwOTE=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/bug", "name": "bug", "color": "e99695", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-06T16:27:16Z", "updated_at": "2020-03-25T23:51:46Z", "closed_at": "2020-03-25T17:27:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Problem description\r\nAs described in recent comments on the closed issue #330, MultiPolygon Relations with invalid inner or outer rings currently cause a TopologicalError that prevents creation of a GeoDataFrame of Footprints.\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\nUbuntu 18.04, Python 3.7.6, OSMnx 0.11.4\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\nThe error can be reproduced by processing the attached zipped json as follows:\r\n```\r\nwith open('invalid_multipolygons.json', 'r', encoding='utf-8') as f:\r\n    response_jsons = json.load(f)\r\ntest_gdf = ox.create_footprints_gdf(retain_invalid=False, responses=response_jsons)\r\n```\r\n\r\nI have started a branch [in my repository](/AtelierLibre/osmnx/tree/iss330b) which includes a fix as suggested by @martibosch. It also logs in greater detail invalid geometries found during the creation of the footprints GDF and their removal.\r\n\r\nIf it's easier I can make this a pull request.\r\n\r\n[invalid_multipolygons.zip](https://github.com/gboeing/osmnx/files/4299172/invalid_multipolygons.zip)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/398", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/398/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/398/events", "html_url": "https://github.com/gboeing/osmnx/issues/398", "id": 576830514, "node_id": "MDU6SXNzdWU1NzY4MzA1MTQ=", "number": 398, "title": "'walk' filter doesn't include shared cycleways", "user": {"login": "swiss-knight", "id": 19967599, "node_id": "MDQ6VXNlcjE5OTY3NTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/19967599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swiss-knight", "html_url": "https://github.com/swiss-knight", "followers_url": "https://api.github.com/users/swiss-knight/followers", "following_url": "https://api.github.com/users/swiss-knight/following{/other_user}", "gists_url": "https://api.github.com/users/swiss-knight/gists{/gist_id}", "starred_url": "https://api.github.com/users/swiss-knight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swiss-knight/subscriptions", "organizations_url": "https://api.github.com/users/swiss-knight/orgs", "repos_url": "https://api.github.com/users/swiss-knight/repos", "events_url": "https://api.github.com/users/swiss-knight/events{/privacy}", "received_events_url": "https://api.github.com/users/swiss-knight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-06T10:15:02Z", "updated_at": "2020-03-13T17:47:36Z", "closed_at": "2020-03-13T17:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI installed `osmnx` using `pip3` on Ubuntu 18.04.\r\n\r\n\r\n#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\n\r\nI recently saw that the 'walk' filter doesn't take into account the shared cycleways.\r\nIn some cases where these are the only way to cross a river for pedestrians without having to make a detour of several kilometers, it would be nice if it could be added to the walk filter.\r\n\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\nPython 3.6.9 (default, Nov  7 2019, 10:44:02) \r\nUbuntu 18.04 LTS 64-bits (`5.3.0-40-generic x86_64 GNU/Linux`)\r\n`osmnx.__version__`  '0.11.4'\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\nimport osmnx as ox\r\nox.core.get_osm_filter('walk')\r\n\r\n'[\"area\"!~\"yes\"][\"highway\"!~\"cycleway|motor|proposed|construction|abandoned|platform|raceway\"][\"foot\"!~\"no\"][\"service\"!~\"private\"][\"access\"!~\"private\"]'\r\n```\r\nThis exclude the cycle-ways. Simply.    \r\nBut in fact, cycle-ways, when not explicitly forbidden for pedestrian may allow them to use them. In some other cases, they are explicitly shared or segregated :  https://wiki.openstreetmap.org/wiki/Key:segregated    \r\nConcretely, it's really rare that they're not allowed for pedestrians.\r\n\r\nI tried to modify the filter, but didn't succeed because I cannot figure out how I can tell a specific tag-based filter string to apply only on `cycleway` and not also to all others highways.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/397", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/397/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/397/events", "html_url": "https://github.com/gboeing/osmnx/issues/397", "id": 573069995, "node_id": "MDU6SXNzdWU1NzMwNjk5OTU=", "number": 397, "title": "save_gdf_shapefile() cannot be used directly on a Geodataframe created from pois_from_polygon()", "user": {"login": "tyk122", "id": 10229086, "node_id": "MDQ6VXNlcjEwMjI5MDg2", "avatar_url": "https://avatars2.githubusercontent.com/u/10229086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tyk122", "html_url": "https://github.com/tyk122", "followers_url": "https://api.github.com/users/tyk122/followers", "following_url": "https://api.github.com/users/tyk122/following{/other_user}", "gists_url": "https://api.github.com/users/tyk122/gists{/gist_id}", "starred_url": "https://api.github.com/users/tyk122/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tyk122/subscriptions", "organizations_url": "https://api.github.com/users/tyk122/orgs", "repos_url": "https://api.github.com/users/tyk122/repos", "events_url": "https://api.github.com/users/tyk122/events{/privacy}", "received_events_url": "https://api.github.com/users/tyk122/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-28T23:52:14Z", "updated_at": "2020-03-25T22:19:28Z", "closed_at": "2020-03-02T00:13:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am pretty new to all of this so I apologize if something here is not in line with the expectations and standards.\r\n\r\n#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\n\r\nI discovered that <code>save_gdf_shapefile()</code> will not work on a GDF created with `pois_from_place()`.  While I could not explicitly find the root cause, I eventually got this to work by separating the GDF by <code>element_type</code> (e.g. <code>gdf[gdf['element_type'] == 'way']</code>), otherwise the following error is produced:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"C:\\Miniconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3331, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-73-04a804becda8>\", line 1, in <module>\r\n    ox.save_gdf_shapefile(pois.loc[: ,cols[0]:cols[10]],\"test\",os.path.join(os.path.join(os.environ['USERPROFILE']), 'Desktop'))\r\n  File \"C:\\Miniconda3\\lib\\site-packages\\osmnx\\save_load.py\", line 62, in save_gdf_shapefile\r\n    gdf.to_file(folder_path)\r\n  File \"C:\\Miniconda3\\lib\\site-packages\\geopandas\\geodataframe.py\", line 533, in to_file\r\n    to_file(self, filename, driver, schema, index, **kwargs)\r\n  File \"C:\\Miniconda3\\lib\\site-packages\\geopandas\\io\\file.py\", line 193, in to_file\r\n    colxn.writerecords(df.iterfeatures())\r\n  File \"C:\\Miniconda3\\lib\\site-packages\\fiona\\collection.py\", line 342, in writerecords\r\n    self.session.writerecs(records, self)\r\n  File \"fiona/ogrext.pyx\", line 1198, in fiona.ogrext.WritingSession.writerecs\r\nRuntimeError: Failed to write record: {'id': '44580739', ....\r\n```\r\nAs such, it appears that this will not work if there are mixed geometries in the GDF.  This is not surprising, but may not be immediately obvious.  OSM has POIs as both polygons and points, which means that if pulled into a single GDF, they cannot be immediately processed as a shape file.\r\n\r\nI'm not really sure how this should be addressed.  That said, if anyone else is trying to do this, I spent a considerable amount of time tracking this issue down.  It would be helpful to note this somewhere.\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\n\r\n* **Operating System:** Windows 10\r\n* **Architecture:** 64-bit\r\n* **Python version:** 3.7.4\r\n* **OSMnx version:** 0.11.4\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n<details>\r\nNot relevant\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\nimport osmnx as ox\r\nimport os\r\n\r\n# Get city boundaries\r\ncity = ox.gdf_from_place('San Francisco, California')\r\n\r\n# Get all POIs in boundary\r\npois = ox.pois_from_polygon(city['geometry'].values[0])\r\n\r\n# Save as .shp\r\nox.save_gdf_shapefile(pois, 'tests', os.path.join(os.path.join(os.environ['USERPROFILE']), 'Desktop'))\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/396", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/396/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/396/events", "html_url": "https://github.com/gboeing/osmnx/issues/396", "id": 572291474, "node_id": "MDU6SXNzdWU1NzIyOTE0NzQ=", "number": 396, "title": "Allow folium plotting functions to accept FeatureGroup in place of Map, and **kwargs", "user": {"login": "eecharlie", "id": 36889, "node_id": "MDQ6VXNlcjM2ODg5", "avatar_url": "https://avatars3.githubusercontent.com/u/36889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eecharlie", "html_url": "https://github.com/eecharlie", "followers_url": "https://api.github.com/users/eecharlie/followers", "following_url": "https://api.github.com/users/eecharlie/following{/other_user}", "gists_url": "https://api.github.com/users/eecharlie/gists{/gist_id}", "starred_url": "https://api.github.com/users/eecharlie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eecharlie/subscriptions", "organizations_url": "https://api.github.com/users/eecharlie/orgs", "repos_url": "https://api.github.com/users/eecharlie/repos", "events_url": "https://api.github.com/users/eecharlie/events{/privacy}", "received_events_url": "https://api.github.com/users/eecharlie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-27T19:04:36Z", "updated_at": "2020-05-24T19:56:55Z", "closed_at": "2020-05-24T19:56:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Problem description \r\nI expected the following to work:\r\n\r\n```\r\nfg = folium.FeatureGroup(name='legend name', show=False)\r\nox.plot_route_folium(G, route, route_color='green', route_map=fg, tooltip='some tooltip')\r\n```\r\nHowever the extra argument (meant to be passed to folium) is not accepted, and `plot_route_folium` makes a member function call that a FeatureGroup does not have, \r\n`route_map.fit_bounds(bounds)`\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\n\r\nUbuntu 4.15.0, x86_64, Python 3.8.1\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n<details>\r\n_libgcc_mutex             0.1                 conda_forge    conda-forge\r\n_openmp_mutex             4.5                       0_gnu    conda-forge\r\nattrs                     19.3.0                     py_0    conda-forge\r\nbackcall                  0.1.0                      py_0    conda-forge\r\nbokeh                     1.4.0                    py38_0    conda-forge\r\nboost-cpp                 1.70.0               h8e57a91_2    conda-forge\r\nbranca                    0.3.1                      py_0    conda-forge\r\nbzip2                     1.0.8                h516909a_2    conda-forge\r\nca-certificates           2019.11.28           hecc5488_0    conda-forge\r\ncachetools                4.0.0                    pypi_0    pypi\r\ncairo                     1.16.0            hfb77d84_1002    conda-forge\r\ncertifi                   2019.11.28               py38_0    conda-forge\r\ncffi                      1.13.2           py38h8022711_0    conda-forge\r\ncfitsio                   3.470                hb60a0a2_2    conda-forge\r\nchardet                   3.0.4                 py38_1003    conda-forge\r\nclick                     7.0                        py_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncloudpickle               1.3.0                      py_0    conda-forge\r\ncryptography              2.8              py38h72c5cf5_1    conda-forge\r\ncurl                      7.68.0               hf8cf82a_0    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ncytoolz                   0.10.1           py38h516909a_0    conda-forge\r\ndask                      2.11.0                     py_0    conda-forge\r\ndask-core                 2.11.0                     py_0    conda-forge\r\ndbus                      1.13.6               he372182_0    conda-forge\r\ndecorator                 4.4.1                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\ndistributed               2.11.0                   py38_0    conda-forge\r\nentrypoints               0.3                   py38_1000    conda-forge\r\nexpat                     2.2.9                he1b5a44_2    conda-forge\r\nfiona                     1.8.13           py38h900e953_0    conda-forge\r\nfolium                    0.10.1                     py_0    conda-forge\r\nfontconfig                2.13.1            h86ecdb6_1001    conda-forge\r\nfreetype                  2.10.0               he983fc9_1    conda-forge\r\nfreexl                    1.0.5             h14c3975_1002    conda-forge\r\nfsspec                    0.6.2                      py_0    conda-forge\r\ngdal                      3.0.4            py38hbb6b9fb_0    conda-forge\r\ngeographiclib             1.50                       py_0    conda-forge\r\ngeopandas                 0.6.3                      py_0    conda-forge\r\ngeopy                     1.21.0                     py_0    conda-forge\r\ngeos                      3.8.0                he1b5a44_0    conda-forge\r\ngeotiff                   1.5.1                h38872f0_8    conda-forge\r\ngettext                   0.19.8.1          hc5be6a0_1002    conda-forge\r\ngiflib                    5.2.1                h516909a_1    conda-forge\r\nglib                      2.58.3          py38h6f030ca_1002    conda-forge\r\ngoogle-api-core           1.16.0                   pypi_0    pypi\r\ngoogle-auth               1.11.0                   pypi_0    pypi\r\ngoogle-auth-oauthlib      0.4.1                    pypi_0    pypi\r\ngoogle-cloud-bigquery     1.24.0                   pypi_0    pypi\r\ngoogle-cloud-core         1.3.0                    pypi_0    pypi\r\ngoogle-resumable-media    0.5.0                    pypi_0    pypi\r\ngoogleapis-common-protos  1.51.0                   pypi_0    pypi\r\ngst-plugins-base          1.14.5               h0935bb2_1    conda-forge\r\ngstreamer                 1.14.5               h36ae1b5_1    conda-forge\r\nhaversine                 2.2.0                      py_0    conda-forge\r\nhdf4                      4.2.13            hf30be14_1003    conda-forge\r\nhdf5                      1.10.5          nompi_h3c11f04_1104    conda-forge\r\nheapdict                  1.0.1                      py_0    conda-forge\r\nicu                       64.2                 he1b5a44_1    conda-forge\r\nidna                      2.8                   py38_1000    conda-forge\r\nipykernel                 5.1.4            py38h5ca1d4c_0    conda-forge\r\nipython                   7.12.0           py38h5ca1d4c_0    conda-forge\r\nipython_genutils          0.2.0                      py_1    conda-forge\r\njedi                      0.16.0                   py38_0    conda-forge\r\njinja2                    2.11.1                     py_0    conda-forge\r\njoblib                    0.14.1                     py_0    conda-forge\r\njpeg                      9c                h14c3975_1001    conda-forge\r\njson-c                    0.13.1            h14c3975_1001    conda-forge\r\njupyter_client            5.3.4                    py38_1    conda-forge\r\njupyter_core              4.6.1                    py38_0    conda-forge\r\nkealib                    1.4.10            h58c409b_1005    conda-forge\r\nkiwisolver                1.1.0            py38hc9558a2_0    conda-forge\r\nkrb5                      1.16.4               h2fd8d38_0    conda-forge\r\nld_impl_linux-64          2.33.1               h53a641e_8    conda-forge\r\nlibblas                   3.8.0               14_openblas    conda-forge\r\nlibcblas                  3.8.0               14_openblas    conda-forge\r\nlibclang                  9.0.1           default_hde54327_0    conda-forge\r\nlibcurl                   7.68.0               hda55be3_0    conda-forge\r\nlibdap4                   3.20.4               hd3bb157_0    conda-forge\r\nlibedit                   3.1.20170329      hf8c457e_1001    conda-forge\r\nlibffi                    3.2.1             he1b5a44_1006    conda-forge\r\nlibgcc-ng                 9.2.0                h24d8f2e_2    conda-forge\r\nlibgdal                   3.0.4                h20022a4_0    conda-forge\r\nlibgfortran-ng            7.3.0                hdf63c60_5    conda-forge\r\nlibgomp                   9.2.0                h24d8f2e_2    conda-forge\r\nlibiconv                  1.15              h516909a_1005    conda-forge\r\nlibkml                    1.3.0             h4fcabce_1010    conda-forge\r\nliblapack                 3.8.0               14_openblas    conda-forge\r\nlibllvm9                  9.0.1                hc9558a2_0    conda-forge\r\nlibnetcdf                 4.7.3           nompi_h9f9fd6a_101    conda-forge\r\nlibopenblas               0.3.7                h5ec1e0e_6    conda-forge\r\nlibpng                    1.6.37               hed695b0_0    conda-forge\r\nlibpq                     12.1                 hd9ab2ff_0    conda-forge\r\nlibsodium                 1.0.17               h516909a_0    conda-forge\r\nlibspatialindex           1.9.3                he1b5a44_3    conda-forge\r\nlibspatialite             4.3.0a            ha48a99a_1034    conda-forge\r\nlibssh2                   1.8.2                h22169c7_2    conda-forge\r\nlibstdcxx-ng              9.2.0                hdf63c60_2    conda-forge\r\nlibtiff                   4.1.0                hc3755c2_3    conda-forge\r\nlibuuid                   2.32.1            h14c3975_1000    conda-forge\r\nlibwebp                   1.0.2                h56121f0_5    conda-forge\r\nlibxcb                    1.13              h14c3975_1002    conda-forge\r\nlibxkbcommon              0.10.0               he1b5a44_0    conda-forge\r\nlibxml2                   2.9.10               hee79883_0    conda-forge\r\nlocket                    0.2.0                      py_2    conda-forge\r\nlz4-c                     1.8.3             he1b5a44_1001    conda-forge\r\nmarkupsafe                1.1.1            py38h516909a_0    conda-forge\r\nmatplotlib                3.1.3                    py38_0    conda-forge\r\nmatplotlib-base           3.1.3            py38h250f245_0    conda-forge\r\nmsgpack-python            1.0.0            py38hc9558a2_0    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nncurses                   6.1               hf484d3e_1002    conda-forge\r\nnetworkx                  2.4                        py_0    conda-forge\r\nnspr                      4.25                 he1b5a44_0    conda-forge\r\nnss                       3.47                 he751ad9_0    conda-forge\r\nnumpy                     1.18.1           py38h95a1406_0    conda-forge\r\noauthlib                  3.1.0                    pypi_0    pypi\r\nolefile                   0.46                       py_0    conda-forge\r\nopenjpeg                  2.3.1                h981e76c_3    conda-forge\r\nopenssl                   1.1.1d               h516909a_0    conda-forge\r\nosmnx                     0.11.4                     py_0    conda-forge\r\npackaging                 20.1                       py_0    conda-forge\r\npandas                    1.0.1            py38hb3f55d8_0    conda-forge\r\npandas-gbq                0.13.0                   pypi_0    pypi\r\nparso                     0.6.1                      py_0    conda-forge\r\npartd                     1.1.0                      py_0    conda-forge\r\npatsy                     0.5.1                      py_0    conda-forge\r\npcre                      8.43                 he1b5a44_0    conda-forge\r\npexpect                   4.8.0                    py38_0    conda-forge\r\npickleshare               0.7.5                 py38_1000    conda-forge\r\npillow                    7.0.0            py38hefe7db6_0    conda-forge\r\npip                       20.0.2                     py_2    conda-forge\r\npixman                    0.38.0            h516909a_1003    conda-forge\r\npoppler                   0.67.0               h14e79db_8    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.1                 hc63931a_0    conda-forge\r\nproj                      6.3.0                hc80f0dc_0    conda-forge\r\nprompt_toolkit            3.0.3                      py_0    conda-forge\r\nprotobuf                  3.11.3                   pypi_0    pypi\r\npsutil                    5.7.0            py38h516909a_0    conda-forge\r\npthread-stubs             0.4               h14c3975_1001    conda-forge\r\nptyprocess                0.6.0                   py_1001    conda-forge\r\npyasn1                    0.4.8                    pypi_0    pypi\r\npyasn1-modules            0.2.8                    pypi_0    pypi\r\npycparser                 2.19                     py38_1    conda-forge\r\npydata-google-auth        0.3.0                    pypi_0    pypi\r\npygments                  2.5.2                      py_0    conda-forge\r\npyopenssl                 19.1.0                   py38_0    conda-forge\r\npyparsing                 2.4.6                      py_0    conda-forge\r\npyproj                    2.4.2.post1      py38h8ff28aa_1    conda-forge\r\npyqt                      5.12.3           py38hcca6a23_1    conda-forge\r\npyqt5-sip                 4.19.18                  pypi_0    pypi\r\npyqtwebengine             5.12.1                   pypi_0    pypi\r\npysocks                   1.7.1                    py38_0    conda-forge\r\npython                    3.8.1                h357f687_2    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npytz                      2019.3                     py_0    conda-forge\r\npyyaml                    5.3              py38h516909a_0    conda-forge\r\npyzmq                     18.1.1           py38h1768529_0    conda-forge\r\nqt                        5.12.5               hd8c4c69_1    conda-forge\r\nreadline                  8.0                  hf8c457e_0    conda-forge\r\nrequests                  2.22.0                   py38_1    conda-forge\r\nrequests-oauthlib         1.3.0                    pypi_0    pypi\r\nrsa                       4.0                      pypi_0    pypi\r\nrtree                     0.9.3            py38h7b0cdae_0    conda-forge\r\nscikit-learn              0.22.1           py38hcdab131_1    conda-forge\r\nscipy                     1.4.1            py38h921218d_0    conda-forge\r\nseaborn                   0.10.0                     py_1    conda-forge\r\nsetuptools                45.2.0                   py38_0    conda-forge\r\nshapely                   1.7.0            py38h5d51c17_0    conda-forge\r\nsix                       1.14.0                   py38_0    conda-forge\r\nsortedcontainers          2.1.0                      py_0    conda-forge\r\nsqlite                    3.30.1               hcee41ef_0    conda-forge\r\nstatsmodels               0.11.1           py38h516909a_0    conda-forge\r\ntbb                       2018.0.5             h2d50403_0    conda-forge\r\ntblib                     1.6.0                      py_0    conda-forge\r\ntiledb                    1.7.0                hcde45ca_2    conda-forge\r\ntk                        8.6.10               hed695b0_0    conda-forge\r\ntoolz                     0.10.0                     py_0    conda-forge\r\ntornado                   6.0.3            py38h516909a_3    conda-forge\r\ntqdm                      4.42.1                     py_0    conda-forge\r\ntraitlets                 4.3.3                    py38_0    conda-forge\r\ntzcode                    2019a             h516909a_1002    conda-forge\r\nurllib3                   1.25.7                   py38_0    conda-forge\r\nutm                       0.5.0                      py_0    conda-forge\r\nvincent                   0.4.4                      py_1    conda-forge\r\nwcwidth                   0.1.8                      py_0    conda-forge\r\nwheel                     0.34.2                     py_1    conda-forge\r\nxerces-c                  3.2.2             h8412b87_1004    conda-forge\r\nxlrd                      1.2.0                      py_0    conda-forge\r\nxorg-kbproto              1.0.7             h14c3975_1002    conda-forge\r\nxorg-libice               1.0.10               h516909a_0    conda-forge\r\nxorg-libsm                1.2.3             h84519dc_1000    conda-forge\r\nxorg-libx11               1.6.9                h516909a_0    conda-forge\r\nxorg-libxau               1.0.9                h14c3975_0    conda-forge\r\nxorg-libxdmcp             1.1.3                h516909a_0    conda-forge\r\nxorg-libxext              1.3.4                h516909a_0    conda-forge\r\nxorg-libxrender           0.9.10            h516909a_1002    conda-forge\r\nxorg-renderproto          0.11.1            h14c3975_1002    conda-forge\r\nxorg-xextproto            7.3.0             h14c3975_1002    conda-forge\r\nxorg-xproto               7.0.31            h14c3975_1007    conda-forge\r\nxz                        5.2.4             h14c3975_1001    conda-forge\r\nyaml                      0.2.2                h516909a_1    conda-forge\r\nzeromq                    4.3.2                he1b5a44_2    conda-forge\r\nzict                      1.0.0                      py_0    conda-forge\r\nzlib                      1.2.11            h516909a_1006    conda-forge\r\nzstd                      1.4.4                h3b9ef0a_1    conda-forge\r\n\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\n# Minimal test case for osmnx feature request\r\n\r\nimport numpy as np\r\nimport osmnx as ox\r\nimport networkx as nx\r\nimport folium\r\n\r\n# creating a graph by using a point in downtown Omaha\r\nold_market = (41.255676, -95.931338)\r\nG = ox.graph_from_point(old_market, distance=500)\r\n\r\n# using NetworkX to calculate the shortest path between two random nodes\r\nroute = nx.shortest_path(G, np.random.choice(G.nodes), \r\n                         np.random.choice(G.nodes))\r\n\r\n# This works, as expected\r\nox.plot_graph_route(G, route, fig_height=10, fig_width=10)\r\n\r\n# Now I want to plot the route as part of a FeatureGroup so\r\n# it can be toggled etc., and I want to tweak aspects of the mapped\r\n# shape in addition color. \r\n# But I can't attach the route to a non-map Folium object, or pass-through\r\n# additional arguments that would go to e.g. Folium.PolyLine\r\n\r\nm = folium.Map()\r\nfg = folium.FeatureGroup(name='legend name', show=True)\r\n\r\n# Expect this function to accept other folium objects for route_map, \r\n# and pass on **kwargs to Folium primitive shape plotting functions\r\nox.plot_route_folium(G, route, route_color='green', \r\n                    route_map=fg, tooltip='some tooltip')\r\nm.add_child(fg)\r\ndisplay(m)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/395", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/395/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/395/events", "html_url": "https://github.com/gboeing/osmnx/issues/395", "id": 572048606, "node_id": "MDU6SXNzdWU1NzIwNDg2MDY=", "number": 395, "title": "ox.pois_from_place Error when multiple place ", "user": {"login": "168-B", "id": 55384629, "node_id": "MDQ6VXNlcjU1Mzg0NjI5", "avatar_url": "https://avatars3.githubusercontent.com/u/55384629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/168-B", "html_url": "https://github.com/168-B", "followers_url": "https://api.github.com/users/168-B/followers", "following_url": "https://api.github.com/users/168-B/following{/other_user}", "gists_url": "https://api.github.com/users/168-B/gists{/gist_id}", "starred_url": "https://api.github.com/users/168-B/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/168-B/subscriptions", "organizations_url": "https://api.github.com/users/168-B/orgs", "repos_url": "https://api.github.com/users/168-B/repos", "events_url": "https://api.github.com/users/168-B/events{/privacy}", "received_events_url": "https://api.github.com/users/168-B/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-27T12:26:07Z", "updated_at": "2020-03-11T20:30:11Z", "closed_at": "2020-02-28T01:12:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nFirst I was so much enjoy with your OSMNX package. Very helpful on my research. \r\n\r\nI now struggling with **ox.pois_from_place** function. I tried to pass two place names getting POI s in these locations. They'd done OK for ox.graph_from_place and ox.gdf_from_places as figure below.\r\n```\r\n# Specify the name that is used to search for the data\r\nplace_name = ['\u0e40\u0e02\u0e15\u0e25\u0e32\u0e14\u0e1e\u0e23\u0e49\u0e32\u0e27','\u0e40\u0e02\u0e15\u0e08\u0e15\u0e38\u0e08\u0e31\u0e01\u0e23']\r\n\r\n# Fetch OSM street network \r\nG = ox.graph_from_place(place_name, network_type='all', simplify=True) #, retain_all=True)\r\nG = ox.project_graph(G)\r\nfig, ax = ox.plot_graph(G, node_color='b', node_zorder=3, node_size=10, node_alpha=0.5, fig_height=7) \r\n\r\n# Print out of data type\r\n# DiGraph is a data type belonging to Networkx \r\nprint(type(G))\r\n```\r\n![image](https://user-images.githubusercontent.com/55384629/75445370-debbba00-5997-11ea-9098-09095b8862ef.png)\r\n\r\n```\r\n# Retrieve the footprint for area of interest \r\n# https://stackoverflow.com/questions/52335737/combining-osmnx-multipolygons\r\narea = ox.gdf_from_places(place_name, gdf_name='region_place_name')\r\nprint(type(area))\r\narea.head()\r\n```\r\n![image](https://user-images.githubusercontent.com/55384629/75445499-16c2fd00-5998-11ea-81a9-3b9166c43a50.png)\r\n\r\n\r\nBut when I pass the places to **ox.pois_from_place**.  I got an error said \"query must be a dict or a string\". Is there something I miss? Any suggestion?\r\n```\r\n# Retrieve all relavant POIs from areas of interest\r\nplace_name = ['\u0e40\u0e02\u0e15\u0e25\u0e32\u0e14\u0e1e\u0e23\u0e49\u0e32\u0e27','\u0e40\u0e02\u0e15\u0e08\u0e15\u0e38\u0e08\u0e31\u0e01\u0e23']\r\nPOI = ox.pois_from_place(place=place_name)\r\nprint(len(POI))\r\n```\r\nThanks, \r\nB", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/394", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/394/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/394/events", "html_url": "https://github.com/gboeing/osmnx/issues/394", "id": 571592006, "node_id": "MDU6SXNzdWU1NzE1OTIwMDY=", "number": 394, "title": "Feature Request: Edge length taking into account the geometry of the street", "user": {"login": "pareyesv", "id": 7954142, "node_id": "MDQ6VXNlcjc5NTQxNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7954142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pareyesv", "html_url": "https://github.com/pareyesv", "followers_url": "https://api.github.com/users/pareyesv/followers", "following_url": "https://api.github.com/users/pareyesv/following{/other_user}", "gists_url": "https://api.github.com/users/pareyesv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pareyesv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pareyesv/subscriptions", "organizations_url": "https://api.github.com/users/pareyesv/orgs", "repos_url": "https://api.github.com/users/pareyesv/repos", "events_url": "https://api.github.com/users/pareyesv/events{/privacy}", "received_events_url": "https://api.github.com/users/pareyesv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-26T19:02:13Z", "updated_at": "2020-03-13T17:48:20Z", "closed_at": "2020-03-13T17:48:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "AFAIK the edge attribute `length` (by using [`add_edge_length`](https://osmnx.readthedocs.io/en/stable/osmnx.html#osmnx.core.add_edge_lengths)) computes the `great_circle_vec` between the origin node and the destination node. So it doesn't take into account the full geometry of the edge, only the first and the last nodes of the edge.\r\n\r\nOn the other hand, the length of a (shapely) LineString (`edge[\"geometry\"].length`) takes into account the full geometry of the street, but the distance function is the Euclidean Distance or Linear distance between two points on a plane (And the result is not measured in meters).\r\n\r\nI think It'd be nice to have a sort-of _street_length_ (a function to compute `great_circle_vec` with the full geometry of the LineString). Maybe the running time is to long? I know that this new _street_length_ attribute would take longer compared to the current `length`...\r\n\r\nMy first approach is the following (Based on answers from [StackExchange](https://gis.stackexchange.com/a/115285) and [StackOverflow](https://stackoverflow.com/questions/1257413/1257446#1257446)):\r\n\r\n```\r\ndef street_length(line):\r\n    \"\"\"Calculate length of a line in meters, given in geographic coordinates.\r\n    Args:\r\n        line: a shapely LineString object\r\n    Returns:\r\n        Length of line in meters\r\n        \r\n    Source:\r\n        https://gis.stackexchange.com/a/115285\r\n    \"\"\"\r\n    # Swap shapely (lonlat) to geopy (latlon) points\r\n    latlon = lambda lonlat: (lonlat[1], lonlat[0])\r\n    total_length = sum(\r\n        great_circle_vec(*latlon(a), *latlon(b)) for (a, b) in pairs(line.coords)\r\n    )\r\n    return round(total_length, 0)\r\n\r\n\r\ndef pairs(lst):\r\n    \"\"\"Iterate over a list in overlapping pairs without wrap-around.\r\n\r\n    Args:\r\n        lst: an iterable/list\r\n\r\n    Returns:\r\n        Yields a pair of consecutive elements (lst[k], lst[k+1]) of lst. Last \r\n        call yields the last two elements.\r\n\r\n    Example:\r\n        lst = [4, 7, 11, 2]\r\n        pairs(lst) yields (4, 7), (7, 11), (11, 2)\r\n\r\n    Source:\r\n        https://stackoverflow.com/questions/1257413/1257446#1257446\r\n    \"\"\"\r\n    i = iter(lst)\r\n    prev = next(i)\r\n    for item in i:\r\n        yield prev, item\r\n        prev = item\r\n```\r\n\r\nPS: I started using osmnx a couple of months ago. So please correct me if I am wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/392", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/392/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/392/events", "html_url": "https://github.com/gboeing/osmnx/issues/392", "id": 568530202, "node_id": "MDU6SXNzdWU1Njg1MzAyMDI=", "number": 392, "title": "Not able to get route", "user": {"login": "Dartartmirus", "id": 60848256, "node_id": "MDQ6VXNlcjYwODQ4MjU2", "avatar_url": "https://avatars3.githubusercontent.com/u/60848256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dartartmirus", "html_url": "https://github.com/Dartartmirus", "followers_url": "https://api.github.com/users/Dartartmirus/followers", "following_url": "https://api.github.com/users/Dartartmirus/following{/other_user}", "gists_url": "https://api.github.com/users/Dartartmirus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dartartmirus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dartartmirus/subscriptions", "organizations_url": "https://api.github.com/users/Dartartmirus/orgs", "repos_url": "https://api.github.com/users/Dartartmirus/repos", "events_url": "https://api.github.com/users/Dartartmirus/events{/privacy}", "received_events_url": "https://api.github.com/users/Dartartmirus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T19:48:31Z", "updated_at": "2020-02-20T20:34:02Z", "closed_at": "2020-02-20T20:34:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I have been trying to get routes for Moscow, Russia, but for two destination graph shows the same node. What i do:\r\n```\r\nimport networkx as nx\r\nimport osmnx as ox\r\nimport requests\r\nimport matplotlib.cm as cm\r\nimport matplotlib.colors as colors\r\nox.config(use_cache=True, log_console=True)\r\nox.config(overpass_endpoint='https://lz4.overpass-api.de/api/interpreter')\r\nprint(ox.__version__)\r\nplace = {'city' : 'Moscow',\r\n         'country' : 'Russia'}\r\nG = ox.graph_from_place(place, network_type='drive')\r\nG_projected = ox.project_graph(G)\r\nox.save_graphml(G_projected, filename='NewnetworkDrive.graphml')\r\nG = ox.load_graphml('NewnetworkDrive.graphml')\r\n# get the nearest network node to each point\r\norig_node = ox.get_nearest_node(G, (55.754715, 37.583251))\r\ndest_node = ox.get_nearest_node(G, (55.753994, 37.656282))\r\nroute = nx.shortest_path(G, orig_node, dest_node, weight='time')\r\nfig, ax = ox.plot_graph_route(G, route, node_size=0)\r\n```\r\nThis is what i get as a result:\r\n<img width=\"505\" alt=\"image\" src=\"https://user-images.githubusercontent.com/60848256/74972326-8a15bd80-5432-11ea-8cb5-a79f64b6233e.png\">\r\n\r\nAnd when i try to calculate distance i get zero:\r\n`nx.shortest_path_length(G, orig_node, dest_node, weight='length')`\r\n\r\nI use osmnx 0.11.4 on MacOS. My conda packages:\r\n\r\n\r\n<details>\r\n# Name                    Version                   Build  Channel\r\nattrs                     19.3.0                     py_0    conda-forge\r\nboost-cpp                 1.70.0               h75728bb_2    conda-forge\r\nbranca                    0.3.1                      py_0    conda-forge\r\nbzip2                     1.0.8                h0b31af3_2    conda-forge\r\nca-certificates           2019.11.28           hecc5488_0    conda-forge\r\ncairo                     1.16.0            he1c11cd_1002    conda-forge\r\ncertifi                   2019.11.28               py38_0    conda-forge\r\ncffi                      1.13.2           py38h33e799b_0    conda-forge\r\ncfitsio                   3.470                h84d2f63_2    conda-forge\r\nchardet                   3.0.4                 py38_1003    conda-forge\r\nclick                     7.0                        py_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncryptography              2.8              py38hafa8578_1    conda-forge\r\ncurl                      7.68.0               h8754def_0    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ndecorator                 4.4.1                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\nexpat                     2.2.9                h4a8c4bd_2    conda-forge\r\nfiona                     1.8.13           py38he71f6a4_0    conda-forge\r\nfolium                    0.10.1                     py_0    conda-forge\r\nfontconfig                2.13.1            h6b1039f_1001    conda-forge\r\nfreetype                  2.10.0               h24853df_1    conda-forge\r\nfreexl                    1.0.5             h1de35cc_1002    conda-forge\r\ngdal                      3.0.4            py38h97c3584_0    conda-forge\r\ngeographiclib             1.50                       py_0    conda-forge\r\ngeopandas                 0.6.3                      py_0    conda-forge\r\ngeopy                     1.21.0                     py_0    conda-forge\r\ngeos                      3.8.0                h4a8c4bd_0    conda-forge\r\ngeotiff                   1.5.1                hc9fff18_8    conda-forge\r\ngettext                   0.19.8.1          h46ab8bc_1002    conda-forge\r\ngiflib                    5.2.1                h0b31af3_1    conda-forge\r\nglib                      2.58.3          py38h577aef8_1002    conda-forge\r\nhdf4                      4.2.13            h84186c3_1003    conda-forge\r\nhdf5                      1.10.5          nompi_h3e39495_1104    conda-forge\r\nicu                       64.2                 h6de7cb9_1    conda-forge\r\nidna                      2.8                   py38_1000    conda-forge\r\njinja2                    2.11.1                     py_0    conda-forge\r\njoblib                    0.14.1                     py_0    conda-forge\r\njpeg                      9c                h1de35cc_1001    conda-forge\r\njson-c                    0.13.1            h1de35cc_1001    conda-forge\r\nkealib                    1.4.10            h6659575_1005    conda-forge\r\nkiwisolver                1.1.0            py38ha1b3eb9_0    conda-forge\r\nkrb5                      1.16.4               h1752a42_0    conda-forge\r\nlibblas                   3.8.0               14_openblas    conda-forge\r\nlibcblas                  3.8.0               14_openblas    conda-forge\r\nlibcurl                   7.68.0               h709d2b2_0    conda-forge\r\nlibcxx                    9.0.1                         1    conda-forge\r\nlibdap4                   3.20.4               habf5908_0    conda-forge\r\nlibedit                   3.1.20170329      hcfe32e1_1001    conda-forge\r\nlibffi                    3.2.1             h6de7cb9_1006    conda-forge\r\nlibgdal                   3.0.4                hf96e369_0    conda-forge\r\nlibgfortran               4.0.0                         2    conda-forge\r\nlibiconv                  1.15              h01d97ff_1005    conda-forge\r\nlibkml                    1.3.0             hed7d534_1010    conda-forge\r\nliblapack                 3.8.0               14_openblas    conda-forge\r\nlibnetcdf                 4.7.3           nompi_hda4e5f1_101    conda-forge\r\nlibopenblas               0.3.7                h3d69b6c_7    conda-forge\r\nlibpng                    1.6.37               h2573ce8_0    conda-forge\r\nlibpq                     12.1                 h31a01ba_0    conda-forge\r\nlibspatialindex           1.9.3                h4a8c4bd_1    conda-forge\r\nlibspatialite             4.3.0a            h9c28a66_1034    conda-forge\r\nlibssh2                   1.8.2                hcdc9a53_2    conda-forge\r\nlibtiff                   4.1.0                ha78913b_3    conda-forge\r\nlibwebp                   1.0.2                hd3bf737_5    conda-forge\r\nlibxml2                   2.9.10               h53d96d6_0    conda-forge\r\nllvm-openmp               9.0.1                h28b9765_2    conda-forge\r\nlz4-c                     1.8.3             h6de7cb9_1001    conda-forge\r\nmarkupsafe                1.1.1            py38h0b31af3_0    conda-forge\r\nmatplotlib                3.1.3                    py38_0    conda-forge\r\nmatplotlib-base           3.1.3            py38h11da6c2_0    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nncurses                   6.1               h0a44026_1002    conda-forge\r\nnetworkx                  2.4                        py_0    conda-forge\r\nnumpy                     1.18.1           py38hde6bac1_0    conda-forge\r\nopenjpeg                  2.3.1                hcdae239_3    conda-forge\r\nopenssl                   1.1.1d               h0b31af3_0    conda-forge\r\nosmnx                     0.11.4                     py_0    conda-forge\r\npandas                    1.0.1            py38h4f17bb1_0    conda-forge\r\npcre                      8.43                 h4a8c4bd_0    conda-forge\r\npip                       20.0.2                     py_2    conda-forge\r\npixman                    0.38.0            h01d97ff_1003    conda-forge\r\npoppler                   0.67.0               h16886b5_8    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.1                 h26bc10f_0    conda-forge\r\nproj                      6.3.0                h773a61f_0    conda-forge\r\npycparser                 2.19                     py38_1    conda-forge\r\npyopenssl                 19.1.0                   py38_0    conda-forge\r\npyparsing                 2.4.6                      py_0    conda-forge\r\npyproj                    2.4.2.post1      py38hf8af742_1    conda-forge\r\npysocks                   1.7.1                    py38_0    conda-forge\r\npython                    3.8.1                hf2284b6_2    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npytz                      2019.3                     py_0    conda-forge\r\nreadline                  8.0                  hcfe32e1_0    conda-forge\r\nrequests                  2.22.0                   py38_1    conda-forge\r\nrtree                     0.9.3            py38h7b0cdae_0    conda-forge\r\nscikit-learn              0.22.1           py38h3dc85bc_1    conda-forge\r\nscipy                     1.4.1            py38h82752d6_0    conda-forge\r\nsetuptools                45.1.0                   py38_0    conda-forge\r\nshapely                   1.7.0            py38h999ffa5_0    conda-forge\r\nsix                       1.14.0                   py38_0    conda-forge\r\nsqlite                    3.30.1               h93121df_0    conda-forge\r\ntbb                       2018.0.5             h2d50403_0    conda-forge\r\ntiledb                    1.7.0                hd5e958f_2    conda-forge\r\ntk                        8.6.10               hbbe82c9_0    conda-forge\r\ntornado                   6.0.3            py38h0b31af3_2    conda-forge\r\ntzcode                    2019a             h01d97ff_1002    conda-forge\r\nurllib3                   1.25.7                   py38_0    conda-forge\r\nvincent                   0.4.4                      py_1    conda-forge\r\nwheel                     0.34.2                     py_1    conda-forge\r\nxerces-c                  3.2.2             h8f8adb3_1004    conda-forge\r\nxz                        5.2.4             h1de35cc_1001    conda-forge\r\nzlib                      1.2.11            h0b31af3_1006    conda-forge\r\nzstd                      1.4.4                he7fca8b_1    conda-forge\r\n\r\n</details>\r\nWhat should i do to calculate routes? I do everything like in example notebooks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/391", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/391/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/391/events", "html_url": "https://github.com/gboeing/osmnx/issues/391", "id": 567467773, "node_id": "MDU6SXNzdWU1Njc0Njc3NzM=", "number": 391, "title": "Numerical summaries of edge bearing distributions", "user": {"login": "mannbenji", "id": 61163158, "node_id": "MDQ6VXNlcjYxMTYzMTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/61163158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mannbenji", "html_url": "https://github.com/mannbenji", "followers_url": "https://api.github.com/users/mannbenji/followers", "following_url": "https://api.github.com/users/mannbenji/following{/other_user}", "gists_url": "https://api.github.com/users/mannbenji/gists{/gist_id}", "starred_url": "https://api.github.com/users/mannbenji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mannbenji/subscriptions", "organizations_url": "https://api.github.com/users/mannbenji/orgs", "repos_url": "https://api.github.com/users/mannbenji/repos", "events_url": "https://api.github.com/users/mannbenji/events{/privacy}", "received_events_url": "https://api.github.com/users/mannbenji/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-19T10:27:04Z", "updated_at": "2020-02-19T18:05:01Z", "closed_at": "2020-02-19T18:05:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, thanks again for this great package. I'm really interested in OSMnx's ability to derive street edge bearings. I'd like to use that property of street networks in a regression and so need a numerical summary of bearing distribution for a graph. I see from [this article](https://appliednetsci.springeropen.com/articles/10.1007/s41109-019-0189-1) that a normalised measure of orientation order (\u03c6 in the article) can be calculated. However, I was wondering whether osmnx already had this feature. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/389", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/389/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/389/events", "html_url": "https://github.com/gboeing/osmnx/issues/389", "id": 567085219, "node_id": "MDU6SXNzdWU1NjcwODUyMTk=", "number": 389, "title": "Feature request - adding bike-able walking segments in bike network type", "user": {"login": "niteshshah12", "id": 51802001, "node_id": "MDQ6VXNlcjUxODAyMDAx", "avatar_url": "https://avatars1.githubusercontent.com/u/51802001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niteshshah12", "html_url": "https://github.com/niteshshah12", "followers_url": "https://api.github.com/users/niteshshah12/followers", "following_url": "https://api.github.com/users/niteshshah12/following{/other_user}", "gists_url": "https://api.github.com/users/niteshshah12/gists{/gist_id}", "starred_url": "https://api.github.com/users/niteshshah12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niteshshah12/subscriptions", "organizations_url": "https://api.github.com/users/niteshshah12/orgs", "repos_url": "https://api.github.com/users/niteshshah12/repos", "events_url": "https://api.github.com/users/niteshshah12/events{/privacy}", "received_events_url": "https://api.github.com/users/niteshshah12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-18T18:42:13Z", "updated_at": "2020-02-19T18:56:06Z", "closed_at": "2020-02-19T00:07:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used the following code to import the bike network from osmnx.\r\n\r\n```python\r\n#import network data \r\nplace = \"Nashville, USA\"\r\nG0 = ox.graph_from_address(place, distance=1000, simplify=True, network_type='bike')\r\n\r\n#plot network graph\r\nfig, ax = ox.plot_graph(G0);\r\nplt.tight_layout()\r\nplt.show()\r\n```\r\nI am working with GPS trace data of bicycling, which has points on the Pedestrian bridge (pointed by a red circle in the image below). But osmnx doesn't download such segments if I pass \"bike\" as network type.\r\n![Image](https://user-images.githubusercontent.com/51802001/74767150-49604d80-5254-11ea-8e3c-88fbd7f7dd17.png)\r\nIs there any way to download such bike-able walking segments? Also, is there any quick way to clean up such a network?\r\n\r\nNitesh\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/388", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/388/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/388/events", "html_url": "https://github.com/gboeing/osmnx/issues/388", "id": 566487237, "node_id": "MDU6SXNzdWU1NjY0ODcyMzc=", "number": 388, "title": "Clipping OSMnx graphs", "user": {"login": "mannbenji", "id": 61163158, "node_id": "MDQ6VXNlcjYxMTYzMTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/61163158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mannbenji", "html_url": "https://github.com/mannbenji", "followers_url": "https://api.github.com/users/mannbenji/followers", "following_url": "https://api.github.com/users/mannbenji/following{/other_user}", "gists_url": "https://api.github.com/users/mannbenji/gists{/gist_id}", "starred_url": "https://api.github.com/users/mannbenji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mannbenji/subscriptions", "organizations_url": "https://api.github.com/users/mannbenji/orgs", "repos_url": "https://api.github.com/users/mannbenji/repos", "events_url": "https://api.github.com/users/mannbenji/events{/privacy}", "received_events_url": "https://api.github.com/users/mannbenji/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-17T19:44:08Z", "updated_at": "2020-02-17T22:30:50Z", "closed_at": "2020-02-17T22:30:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks a lot for this great package. I am currently running into two problems. Firstly, I am running a loop that computes a graph for each neighbourhood (polygon) of a list of cities (GeoDataFrames). It then computes some network statistics for the graph and writes the file out to disk. The problem is that the loop is extremely long to compute because the graph is computed for each row. If there is a good way to bypass this problem, could you suggest it? \r\n\r\nSecondly, the solution I am trying is that, instead of computing the graph for each neighbourhood, I compute it for the city as a whole, and then clip the graph to the neighbourhood boundaries. However, I am not aware of a function in OSMnx or in Networkx that does that. Could you confirm no such function does not exist? Thanks. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/387", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/387/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/387/events", "html_url": "https://github.com/gboeing/osmnx/issues/387", "id": 565577502, "node_id": "MDU6SXNzdWU1NjU1Nzc1MDI=", "number": 387, "title": "AttributeError: 'CRS' object has no attribute 'coordinate_operation'", "user": {"login": "zjans", "id": 39352402, "node_id": "MDQ6VXNlcjM5MzUyNDAy", "avatar_url": "https://avatars3.githubusercontent.com/u/39352402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zjans", "html_url": "https://github.com/zjans", "followers_url": "https://api.github.com/users/zjans/followers", "following_url": "https://api.github.com/users/zjans/following{/other_user}", "gists_url": "https://api.github.com/users/zjans/gists{/gist_id}", "starred_url": "https://api.github.com/users/zjans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zjans/subscriptions", "organizations_url": "https://api.github.com/users/zjans/orgs", "repos_url": "https://api.github.com/users/zjans/repos", "events_url": "https://api.github.com/users/zjans/events{/privacy}", "received_events_url": "https://api.github.com/users/zjans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-14T22:03:09Z", "updated_at": "2020-02-15T00:46:59Z", "closed_at": "2020-02-15T00:46:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Problem description \r\n\r\nTried running the first example from the project front page, but I get a \"AttributeError: 'CRS' object has no attribute 'coordinate_operation'\" error message. Example Code:\r\n\r\n```python\r\nimport osmnx as ox\r\nG = ox.graph_from_place('Manhattan Island, New York City, New York, USA', network_type='drive')\r\n```\r\n\r\n**Output Error log**\r\n<details>\r\n\r\n```python\r\n>ipython\r\nPython 3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 14:00:49) [MSC v.1915 64 bit (AMD64)]\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.12.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import osmnx as ox\r\n   ...: G = ox.graph_from_place('Manhattan Island, New York City, New York, USA', network_type='drive')\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-1-44f273d8ebf8> in <module>\r\n      1 import osmnx as ox\r\n----> 2 G = ox.graph_from_place('Manhattan Island, New York City, New York, USA', network_type='drive')\r\n\r\n~\\AppData\\Local\\ESRI\\conda\\envs\\urbandesign\\lib\\site-packages\\osmnx\\core.py in graph_from_place(query, network_type, simplify, retain_all, truncate_by_edge, name, which_result, buffer_dist, timeout, memory, max_query_area_size, clean_periphery, infrastructure, custom_filter)\r\n   1448                            max_query_area_size=max_query_area_size,\r\n   1449                            clean_periphery=clean_periphery, infrastructure=infrastructure,\r\n-> 1450                            custom_filter=custom_filter)\r\n   1451 \r\n   1452     log('graph_from_place() returning graph with {:,} nodes and {:,} edges'.format(len(list(G.nodes())), len(list(G.edges()))))\r\n\r\n~\\AppData\\Local\\ESRI\\conda\\envs\\urbandesign\\lib\\site-packages\\osmnx\\core.py in graph_from_polygon(polygon, network_type, simplify, retain_all, truncate_by_edge, name, \r\ntimeout, memory, max_query_area_size, clean_periphery, infrastructure, custom_filter)\r\n   1312         # create a new buffered polygon 0.5km around the desired one\r\n   1313         buffer_dist = 500\r\n-> 1314         polygon_utm, crs_utm = project_geometry(geometry=polygon)\r\n   1315         polygon_proj_buff = polygon_utm.buffer(buffer_dist)\r\n   1316         polygon_buffered, _ = project_geometry(geometry=polygon_proj_buff, crs=crs_utm, to_latlong=True)\r\n\r\n~\\AppData\\Local\\ESRI\\conda\\envs\\urbandesign\\lib\\site-packages\\osmnx\\projection.py in project_geometry(geometry, crs, to_crs, to_latlong)\r\n     74     gdf['geometry'] = None\r\n     75     gdf.loc[0, 'geometry'] = geometry\r\n---> 76     gdf_proj = project_gdf(gdf, to_crs=to_crs, to_latlong=to_latlong)\r\n     77     geometry_proj = gdf_proj['geometry'].iloc[0]\r\n     78     return geometry_proj, gdf_proj.crs\r\n\r\n~\\AppData\\Local\\ESRI\\conda\\envs\\urbandesign\\lib\\site-packages\\osmnx\\projection.py in project_gdf(gdf, to_crs, to_latlong)\r\n    123             # else, project the gdf to UTM\r\n    124             # if GeoDataFrame is already in UTM, just return it\r\n--> 125             if is_crs_utm(gdf.crs):\r\n    126                 return gdf\r\n    127\r\n\r\n~\\AppData\\Local\\ESRI\\conda\\envs\\urbandesign\\lib\\site-packages\\osmnx\\projection.py in is_crs_utm(crs)\r\n     35         return False\r\n     36     crs_obj = CRS.from_user_input(crs)\r\n---> 37     if crs_obj.coordinate_operation and crs_obj.coordinate_operation.name.upper().startswith('UTM'):\r\n     38         return True\r\n     39     return False\r\n\r\nAttributeError: 'CRS' object has no attribute 'coordinate_operation'\r\n```\r\n</details>\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\nWindows 10\r\nArcGIS Pro conda installation\r\nPython 3.6.9\r\nOSMnx 0.11.4\r\n\r\n#### Complete list of your environment's packages and their versions \r\n\r\n<details>\r\n\r\n```\r\narcgis                    1.7.1                  py36_969    esri\r\narcgispro                 2.5                           0    esri\r\nasn1crypto                1.3.0                    py36_0    conda-forge\r\nastroid                   2.3.3                     <pip>\r\natomicwrites              1.3.0                      py_0    conda-forge\r\nattrs                     19.3.0                     py_0    conda-forge\r\nbackcall                  0.1.0                      py_0    conda-forge\r\nblas                      1.0                         mkl\r\nbleach                    3.1.0                      py_0    conda-forge\r\nbranca                    0.3.1                      py_0    conda-forge\r\nbzip2                     1.0.8                he774522_0\r\nca-certificates           2019.11.28           hecc5488_0    conda-forge\r\ncertifi                   2019.11.28               py36_0    conda-forge\r\ncffi                      1.13.2           py36hb32ad35_0    conda-forge\r\ncfitsio                   3.470                he774522_2\r\ncftime                    1.0.0b1                  py36_0    conda-forge\r\nchardet                   3.0.4                 py36_1003    conda-forge\r\nclick                     7.0                        py_0\r\nclick-plugins             1.1.1                      py_0\r\ncligj                     0.5.0                    py36_0\r\ncolorama                  0.4.3                      py_0    conda-forge\r\ncryptography              2.8              py36hb32ad35_1    conda-forge\r\ncurl                      7.67.0               h2a8f88b_0\r\ncycler                    0.10.0                     py_2    conda-forge\r\ndecorator                 4.4.1                      py_0    conda-forge\r\ndefusedxml                0.6.0                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\ndespatch                  0.1.0                    py36_0    esri\r\nentrypoints               0.3                   py36_1000    conda-forge\r\net_xmlfile                1.0.1                   py_1001    conda-forge\r\nexpat                     2.2.9                he025d50_2    conda-forge\r\nfastcache                 1.1.0            py36hfa6e2cd_0    conda-forge\r\nfiona                     1.8.9.post2      py36h3234bc7_0    conda-forge\r\nfolium                    0.10.1                     py_0    conda-forge\r\nfreetype                  2.9.1                    vc14_0  [vc14]  esri\r\nfreexl                    1.0.5                hfa6e2cd_0\r\nfuture                    0.18.2                   py36_0    conda-forge\r\ngdal                      2.4.4            py36he6b6c38_0    conda-forge\r\ngeographiclib             1.50                       py_0    conda-forge\r\ngeopandas                 0.6.3                      py_0    conda-forge\r\ngeopy                     1.21.0                     py_0    conda-forge\r\ngeos                      3.8.0                h33f27b4_0\r\ngeotiff                   1.5.1                h9633a31_8    conda-forge\r\ngettext                   0.19.8.1          hb01d8f6_1002    conda-forge\r\nglib                      2.58.3          py36hc0c2ac7_1002    conda-forge\r\nh5py                      2.9.0           py36_arcgispro_2  [arcgispro]  esri\r\nhdf4                      4.2.13               h712560f_2\r\nhdf5                      1.10.5          nompi_ha405e13_1104    conda-forge\r\nhtml5lib                  1.0.1                      py_0    conda-forge\r\nicc_rt                    2019.0.4            arcgispro_0  [arcgispro]  esri\r\nicu                       64.2                 he025d50_1    conda-forge\r\nidna                      2.8                   py36_1000    conda-forge\r\nimportlib_metadata        1.5.0                    py36_0    conda-forge\r\nintel-openmp              2019.4            arcgispro_245  [arcgispro]  esri\r\nipykernel                 5.1.4            py36h5ca1d4c_0    conda-forge\r\nipython                   7.12.0           py36h5ca1d4c_0    conda-forge\r\nipython_genutils          0.2.0                      py_1    conda-forge\r\nipywidgets                7.5.1                      py_0    conda-forge\r\nisort                     4.3.21                    <pip>\r\njdcal                     1.4.1                      py_0    conda-forge\r\njedi                      0.16.0                   py36_0    conda-forge\r\njinja2                    2.11.1                     py_0    conda-forge\r\njoblib                    0.14.1                     py_0    conda-forge\r\njpeg                      9c                hfa6e2cd_1001    conda-forge\r\njson5                     0.9.0                      py_0    conda-forge\r\njsonschema                3.2.0                    py36_0    conda-forge\r\njupyter_client            5.3.1                      py_0    conda-forge\r\njupyter_console           5.1.0                    py36_0    conda-forge\r\njupyter_core              4.6.2                    py36_0    conda-forge\r\njupyterlab                1.2.6                      py_0    conda-forge\r\njupyterlab_server         1.0.6                      py_0    conda-forge\r\nkealib                    1.4.10            hf7dc31f_1005    conda-forge\r\nkeyring                   21.1.0                   py36_0    conda-forge\r\nkiwisolver                1.1.0            py36he980bc4_0    conda-forge\r\nkrb5                      1.16.4               hc04afaa_0\r\nlazy-object-proxy         1.4.3                     <pip>\r\nlibblas                   3.8.0                     8_mkl    conda-forge\r\nlibboost                  1.67.0               hd9e427e_4\r\nlibcblas                  3.8.0                     8_mkl    conda-forge\r\nlibcurl                   7.67.0               h2a8f88b_0\r\nlibffi                    3.2.1             h6538335_1006    conda-forge\r\nlibgdal                   2.4.4                h506876f_0    conda-forge\r\nlibiconv                  1.15                 h1df5818_7\r\nlibkml                    1.3.0                he5f2a48_4\r\nliblapack                 3.8.0                     8_mkl    conda-forge\r\nlibnetcdf                 4.7.3           nompi_hc957ea6_101    conda-forge\r\nlibpng                    1.6.37               h7602738_0    conda-forge\r\nlibpq                     12.1                 hb0bdaea_0    conda-forge\r\nlibsodium                 1.0.17               h2fa13f4_0    conda-forge\r\nlibspatialindex           1.9.3                h33f27b4_0\r\nlibspatialite             4.3.0a            hd027ac7_1034    conda-forge\r\nlibssh2                   1.8.2                h7a1dbc1_0\r\nlibtiff                   4.1.0                h21b02b4_3    conda-forge\r\nlibwebp                   1.0.2                hfa6e2cd_5    conda-forge\r\nlibxml2                   2.9.10               h9ce36c8_0    conda-forge\r\nlz4-c                     1.8.3             he025d50_1001    conda-forge\r\nm2w64-expat               2.1.1                         2\r\nm2w64-gcc-libgfortran     5.3.0                         6\r\nm2w64-gcc-libs            5.3.0                         7\r\nm2w64-gcc-libs-core       5.3.0                         7\r\nm2w64-gettext             0.19.7                        2\r\nm2w64-gmp                 6.1.0                         2\r\nm2w64-libiconv            1.14                          6\r\nm2w64-libwinpthread-git   5.0.0.4634.697f757               2\r\nm2w64-xz                  5.2.2                         2\r\nmarkupsafe                1.1.1            py36hfa6e2cd_0    conda-forge\r\nmatplotlib                3.1.1                   py36_0e  [arcgispro]  esri\r\nmatplotlib-base           3.1.3            py36h2981e6d_0    conda-forge\r\nmccabe                    0.6.1                     <pip>\r\nmistune                   0.8.4           py36hfa6e2cd_1000    conda-forge\r\nmkl                       2019.4            arcgispro_245  [arcgispro]  esri\r\nmkl-service               2.3.0            py36hfa6e2cd_0    conda-forge\r\nmkl_fft                   1.1.0            py36hc8d92b1_1    conda-forge\r\nmkl_random                1.1.0            py36he350917_0    conda-forge\r\nmore-itertools            8.2.0                      py_0    conda-forge\r\nmpmath                    1.1.0                      py_0    conda-forge\r\nmsys2-conda-epoch         20160418                      1\r\nmunch                     2.5.0                      py_0\r\nnbconvert                 5.6.1                    py36_0    conda-forge\r\nnbformat                  5.0.4                      py_0    conda-forge\r\nnetcdf4                   1.5.1.2         py36_arcgispro_1  [arcgispro]  esri\r\nnetworkx                  2.4                        py_0    conda-forge\r\nnose                      1.3.7                 py36_1003    conda-forge\r\nnotebook                  6.0.1                    py36_0    conda-forge\r\nnumexpr                   2.7.0            py36h6538335_0    conda-forge\r\nnumpy                     1.16.5           py36hc71023c_0    conda-forge\r\nnumpy-base                1.18.1           py36hc3f5095_1\r\nopenjpeg                  2.3.1                h57dd2e7_3    conda-forge\r\nopenpyxl                  3.0.3                      py_0    conda-forge\r\nopenssl                   1.1.1d               hfa6e2cd_0    conda-forge\r\nosmnx                     0.11.4                     py_0    conda-forge\r\npackaging                 20.1                       py_0    conda-forge\r\npandas                    1.0.1            py36he350917_0    conda-forge\r\npandoc                    2.9.1.1                       0    conda-forge\r\npandocfilters             1.4.2                      py_1    conda-forge\r\nparso                     0.6.1                      py_0    conda-forge\r\npcre                      8.43                 ha925a31_0\r\npickleshare               0.7.5                 py36_1000    conda-forge\r\npip                       20.0.2                     py_2    conda-forge\r\npluggy                    0.12.0                     py_0    conda-forge\r\npoppler                   0.67.0               h1707e21_8    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.1                 h06f7779_0    conda-forge\r\npro_notebook_integration  2.5                      py36_5    esri\r\nproj                      6.3.0                ha7a8c7b_0    conda-forge\r\nproj4                     6.0.0                         0    esri\r\nprometheus_client         0.7.1                      py_0    conda-forge\r\nprompt_toolkit            3.0.3                      py_0    conda-forge\r\npsutil                    5.6.7            py36hfa6e2cd_0    conda-forge\r\npy                        1.8.1                      py_0    conda-forge\r\npybind11                  2.4.3            py36he980bc4_1    conda-forge\r\npycparser                 2.19                     py36_1    conda-forge\r\npygments                  2.5.2                      py_0    conda-forge\r\npylint                    2.4.4                     <pip>\r\npyopenssl                 19.1.0                   py36_0    conda-forge\r\npyparsing                 2.4.6                      py_0    conda-forge\r\npypdf2                    1.26.0                     py_2    conda-forge\r\npyproj                    2.1.1                    py36_0    esri\r\npyrsistent                0.15.7           py36hfa6e2cd_0    conda-forge\r\npyshp                     1.2.12                     py_2    conda-forge\r\npysocks                   1.7.1                    py36_0    conda-forge\r\npytest                    5.3.5                    py36_1    conda-forge\r\npython                    3.6.9                         1    esri\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npytz                      2019.3                     py_0    conda-forge\r\npywin32                   225              py36hfa6e2cd_0    conda-forge\r\npywin32-ctypes            0.2.0                 py36_1000    conda-forge\r\npywinpty                  0.5.7                    py36_0    conda-forge\r\npyzmq                     18.1.1           py36h16f9016_0    conda-forge\r\nrequests                  2.22.0                   py36_1    conda-forge\r\nrtree                     0.9.3            py36h21ff451_0\r\nscikit-learn              0.22.1           py36h7208079_1    conda-forge\r\nscipy                     1.3.1            py36h29ff71c_0    conda-forge\r\nsend2trash                1.5.0                      py_0    conda-forge\r\nsetuptools                45.2.0                   py36_0    conda-forge\r\nshapely                   1.6.4            py36hd830579_0\r\nsimplegeneric             0.8.1                      py_1    conda-forge\r\nsix                       1.14.0                   py36_0    conda-forge\r\nsqlite                    3.30.1               hfa6e2cd_0    conda-forge\r\nsympy                     1.5.1                    py36_1    conda-forge\r\ntbb                       2018.0.5             he980bc4_0\r\nterminado                 0.8.3                    py36_0    conda-forge\r\ntestpath                  0.4.4                      py_0    conda-forge\r\ntiledb                    1.7.0                hffbbd95_2    conda-forge\r\ntk                        8.6.8                hfa6e2cd_0\r\ntornado                   6.0.3            py36hfa6e2cd_3    conda-forge\r\ntraitlets                 4.3.3                    py36_0    conda-forge\r\ntyped-ast                 1.4.1                     <pip>\r\nurllib3                   1.25.7                   py36_0    conda-forge\r\nvc                        14.1                 h0510ff6_4\r\nvincent                   0.4.4                      py_1    conda-forge\r\nvs2015_runtime            14.16.27012          hf0eaf9b_1\r\nwcwidth                   0.1.8                      py_0    conda-forge\r\nwebencodings              0.5.1                      py_1    conda-forge\r\nwheel                     0.34.2                     py_1    conda-forge\r\nwidgetsnbextension        3.5.1                    py36_0    conda-forge\r\nwin_inet_pton             1.1.0                    py36_0    conda-forge\r\nwincertstore              0.2                   py36_1003    conda-forge\r\nwinkerberos               0.7.0                    py36_1    conda-forge\r\nwinpty                    0.4.3                         4    conda-forge\r\nwrapt                     1.11.2                    <pip>\r\nx86cpu                    0.4                      py36_1    esri\r\nxerces-c                  3.2.2                ha925a31_0\r\nxeus                      0.23.4               h1ad3211_0    conda-forge\r\nxlrd                      1.2.0                      py_0    conda-forge\r\nxlwt                      1.3.0                      py_1    conda-forge\r\nxz                        5.2.4                h2fa13f4_4\r\nzeromq                    4.3.2                h6538335_2    conda-forge\r\nzipp                      2.2.0                      py_0    conda-forge\r\nzlib                      1.2.11            h2fa13f4_1006    conda-forge\r\nzstd                      1.4.4                hd8a0e53_1    conda-forge\r\n```\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\nimport osmnx as ox\r\nG = ox.graph_from_place('Manhattan Island, New York City, New York, USA', network_type='drive')\r\n```\r\n\r\nThanks for your help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/385", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/385/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/385/events", "html_url": "https://github.com/gboeing/osmnx/issues/385", "id": 564655300, "node_id": "MDU6SXNzdWU1NjQ2NTUzMDA=", "number": 385, "title": "JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "user": {"login": "yuriniet", "id": 44909812, "node_id": "MDQ6VXNlcjQ0OTA5ODEy", "avatar_url": "https://avatars2.githubusercontent.com/u/44909812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuriniet", "html_url": "https://github.com/yuriniet", "followers_url": "https://api.github.com/users/yuriniet/followers", "following_url": "https://api.github.com/users/yuriniet/following{/other_user}", "gists_url": "https://api.github.com/users/yuriniet/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuriniet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuriniet/subscriptions", "organizations_url": "https://api.github.com/users/yuriniet/orgs", "repos_url": "https://api.github.com/users/yuriniet/repos", "events_url": "https://api.github.com/users/yuriniet/events{/privacy}", "received_events_url": "https://api.github.com/users/yuriniet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-13T12:38:07Z", "updated_at": "2020-02-14T12:51:12Z", "closed_at": "2020-02-14T04:22:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nSince yesterday (12, February), the command graph_from_address is not working anymore.\r\n\r\nThe errors and details are in the image below. \r\n\r\n![c](https://user-images.githubusercontent.com/44909812/74436020-7a034a00-4e44-11ea-8344-1c390ba334a6.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/384", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/384/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/384/events", "html_url": "https://github.com/gboeing/osmnx/issues/384", "id": 563426599, "node_id": "MDU6SXNzdWU1NjM0MjY1OTk=", "number": 384, "title": "Feature Request: Retrieve OSM Data for Specific Date", "user": {"login": "kanaad", "id": 42788456, "node_id": "MDQ6VXNlcjQyNzg4NDU2", "avatar_url": "https://avatars2.githubusercontent.com/u/42788456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kanaad", "html_url": "https://github.com/kanaad", "followers_url": "https://api.github.com/users/kanaad/followers", "following_url": "https://api.github.com/users/kanaad/following{/other_user}", "gists_url": "https://api.github.com/users/kanaad/gists{/gist_id}", "starred_url": "https://api.github.com/users/kanaad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kanaad/subscriptions", "organizations_url": "https://api.github.com/users/kanaad/orgs", "repos_url": "https://api.github.com/users/kanaad/repos", "events_url": "https://api.github.com/users/kanaad/events{/privacy}", "received_events_url": "https://api.github.com/users/kanaad/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-11T19:30:20Z", "updated_at": "2020-03-25T16:54:32Z", "closed_at": "2020-03-25T16:54:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, osmnx is incredibe and has made a lot my work a lot easier, so thank you to all who have contributed!\r\n\r\nRecently, San Francisco closed Market Street, and now retrieving the the 'drive' network type does not include those edges - since the data I'm using in conjunction with the map is from last year, this presents a problem.\r\n\r\nI'm curious as to how possible it is to specify a date when retrieving OSM data, as just another argument in, for example, the graph_from methods.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/383", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/383/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/383/events", "html_url": "https://github.com/gboeing/osmnx/issues/383", "id": 562187170, "node_id": "MDU6SXNzdWU1NjIxODcxNzA=", "number": 383, "title": "JSONDecodeError while running demo jupyter notebook", "user": {"login": "Dartartmirus", "id": 60848256, "node_id": "MDQ6VXNlcjYwODQ4MjU2", "avatar_url": "https://avatars3.githubusercontent.com/u/60848256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dartartmirus", "html_url": "https://github.com/Dartartmirus", "followers_url": "https://api.github.com/users/Dartartmirus/followers", "following_url": "https://api.github.com/users/Dartartmirus/following{/other_user}", "gists_url": "https://api.github.com/users/Dartartmirus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dartartmirus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dartartmirus/subscriptions", "organizations_url": "https://api.github.com/users/Dartartmirus/orgs", "repos_url": "https://api.github.com/users/Dartartmirus/repos", "events_url": "https://api.github.com/users/Dartartmirus/events{/privacy}", "received_events_url": "https://api.github.com/users/Dartartmirus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-09T14:45:28Z", "updated_at": "2020-02-10T20:12:08Z", "closed_at": "2020-02-10T20:10:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i try to run 00-osmnx-features-demo.ipynb, on a second cell i get the following exception: JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nException                                 Traceback (most recent call last)\r\n<ipython-input-3-558d747dd660> in <module>\r\n      1 # get a graph for some city\r\n----> 2 G = ox.graph_from_place('Piedmont, California, USA', network_type='drive')\r\n      3 fig, ax = ox.plot_graph(G)\r\nI am on MacOS, running Python 3.6 and osmnx version 0.11.4\r\nMy packages:\r\n```\r\n# Name                    Version                   Build  Channel\r\nattrs                     19.3.0                     py_0    conda-forge\r\nboost-cpp                 1.70.0               h75728bb_2    conda-forge\r\nbranca                    0.3.1                      py_0    conda-forge\r\nbzip2                     1.0.8                h0b31af3_2    conda-forge\r\nca-certificates           2019.11.28           hecc5488_0    conda-forge\r\ncairo                     1.16.0            he1c11cd_1002    conda-forge\r\ncertifi                   2019.11.28               py38_0    conda-forge\r\ncffi                      1.13.2           py38h33e799b_0    conda-forge\r\ncfitsio                   3.470                h84d2f63_2    conda-forge\r\nchardet                   3.0.4                 py38_1003    conda-forge\r\nclick                     7.0                        py_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncryptography              2.8              py38hafa8578_1    conda-forge\r\ncurl                      7.68.0               h8754def_0    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ndecorator                 4.4.1                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\nexpat                     2.2.9                h4a8c4bd_2    conda-forge\r\nfiona                     1.8.13           py38he71f6a4_0    conda-forge\r\nfolium                    0.10.1                     py_0    conda-forge\r\nfontconfig                2.13.1            h6b1039f_1001    conda-forge\r\nfreetype                  2.10.0               h24853df_1    conda-forge\r\nfreexl                    1.0.5             h1de35cc_1002    conda-forge\r\ngdal                      3.0.4            py38h97c3584_0    conda-forge\r\ngeographiclib             1.50                       py_0    conda-forge\r\ngeopandas                 0.6.3                      py_0    conda-forge\r\ngeopy                     1.21.0                     py_0    conda-forge\r\ngeos                      3.8.0                h4a8c4bd_0    conda-forge\r\ngeotiff                   1.5.1                hc9fff18_8    conda-forge\r\ngettext                   0.19.8.1          h46ab8bc_1002    conda-forge\r\ngiflib                    5.2.1                h0b31af3_1    conda-forge\r\nglib                      2.58.3          py38h577aef8_1002    conda-forge\r\nhdf4                      4.2.13            h84186c3_1003    conda-forge\r\nhdf5                      1.10.5          nompi_h3e39495_1104    conda-forge\r\nicu                       64.2                 h6de7cb9_1    conda-forge\r\nidna                      2.8                   py38_1000    conda-forge\r\njinja2                    2.11.1                     py_0    conda-forge\r\njoblib                    0.14.1                     py_0    conda-forge\r\njpeg                      9c                h1de35cc_1001    conda-forge\r\njson-c                    0.13.1            h1de35cc_1001    conda-forge\r\nkealib                    1.4.10            h6659575_1005    conda-forge\r\nkiwisolver                1.1.0            py38ha1b3eb9_0    conda-forge\r\nkrb5                      1.16.4               h1752a42_0    conda-forge\r\nlibblas                   3.8.0               14_openblas    conda-forge\r\nlibcblas                  3.8.0               14_openblas    conda-forge\r\nlibcurl                   7.68.0               h709d2b2_0    conda-forge\r\nlibcxx                    9.0.1                         1    conda-forge\r\nlibdap4                   3.20.4               habf5908_0    conda-forge\r\nlibedit                   3.1.20170329      hcfe32e1_1001    conda-forge\r\nlibffi                    3.2.1             h6de7cb9_1006    conda-forge\r\nlibgdal                   3.0.4                hf96e369_0    conda-forge\r\nlibgfortran               4.0.0                         2    conda-forge\r\nlibiconv                  1.15              h01d97ff_1005    conda-forge\r\nlibkml                    1.3.0             hed7d534_1010    conda-forge\r\nliblapack                 3.8.0               14_openblas    conda-forge\r\nlibnetcdf                 4.7.3           nompi_hda4e5f1_101    conda-forge\r\nlibopenblas               0.3.7                h3d69b6c_7    conda-forge\r\nlibpng                    1.6.37               h2573ce8_0    conda-forge\r\nlibpq                     12.1                 h31a01ba_0    conda-forge\r\nlibspatialindex           1.9.3                h4a8c4bd_1    conda-forge\r\nlibspatialite             4.3.0a            h9c28a66_1034    conda-forge\r\nlibssh2                   1.8.2                hcdc9a53_2    conda-forge\r\nlibtiff                   4.1.0                ha78913b_3    conda-forge\r\nlibwebp                   1.0.2                hd3bf737_5    conda-forge\r\nlibxml2                   2.9.10               h53d96d6_0    conda-forge\r\nllvm-openmp               9.0.1                h28b9765_2    conda-forge\r\nlz4-c                     1.8.3             h6de7cb9_1001    conda-forge\r\nmarkupsafe                1.1.1            py38h0b31af3_0    conda-forge\r\nmatplotlib                3.1.3                    py38_0    conda-forge\r\nmatplotlib-base           3.1.3            py38h11da6c2_0    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nncurses                   6.1               h0a44026_1002    conda-forge\r\nnetworkx                  2.4                        py_0    conda-forge\r\nnumpy                     1.18.1           py38hde6bac1_0    conda-forge\r\nopenjpeg                  2.3.1                hcdae239_3    conda-forge\r\nopenssl                   1.1.1d               h0b31af3_0    conda-forge\r\nosmnx                     0.11.4                     py_0    conda-forge\r\npandas                    1.0.1            py38h4f17bb1_0    conda-forge\r\npcre                      8.43                 h4a8c4bd_0    conda-forge\r\npip                       20.0.2                     py_2    conda-forge\r\npixman                    0.38.0            h01d97ff_1003    conda-forge\r\npoppler                   0.67.0               h16886b5_8    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.1                 h26bc10f_0    conda-forge\r\nproj                      6.3.0                h773a61f_0    conda-forge\r\npycparser                 2.19                     py38_1    conda-forge\r\npyopenssl                 19.1.0                   py38_0    conda-forge\r\npyparsing                 2.4.6                      py_0    conda-forge\r\npyproj                    2.4.2.post1      py38hf8af742_1    conda-forge\r\npysocks                   1.7.1                    py38_0    conda-forge\r\npython                    3.8.1                hf2284b6_2    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npytz                      2019.3                     py_0    conda-forge\r\nreadline                  8.0                  hcfe32e1_0    conda-forge\r\nrequests                  2.22.0                   py38_1    conda-forge\r\nrtree                     0.9.3            py38h7b0cdae_0    conda-forge\r\nscikit-learn              0.22.1           py38h3dc85bc_1    conda-forge\r\nscipy                     1.4.1            py38h82752d6_0    conda-forge\r\nsetuptools                45.1.0                   py38_0    conda-forge\r\nshapely                   1.7.0            py38h999ffa5_0    conda-forge\r\nsix                       1.14.0                   py38_0    conda-forge\r\nsqlite                    3.30.1               h93121df_0    conda-forge\r\ntbb                       2018.0.5             h2d50403_0    conda-forge\r\ntiledb                    1.7.0                hd5e958f_2    conda-forge\r\ntk                        8.6.10               hbbe82c9_0    conda-forge\r\ntornado                   6.0.3            py38h0b31af3_2    conda-forge\r\ntzcode                    2019a             h01d97ff_1002    conda-forge\r\nurllib3                   1.25.7                   py38_0    conda-forge\r\nvincent                   0.4.4                      py_1    conda-forge\r\nwheel                     0.34.2                     py_1    conda-forge\r\nxerces-c                  3.2.2             h8f8adb3_1004    conda-forge\r\nxz                        5.2.4             h1de35cc_1001    conda-forge\r\nzlib                      1.2.11            h0b31af3_1006    conda-forge\r\nzstd                      1.4.4                he7fca8b_1    conda-forge\r\n```\r\n\r\nFull code:\r\n\r\n```\r\nimport networkx as nx\r\nimport osmnx as ox\r\nimport requests\r\nimport matplotlib.cm as cm\r\nimport matplotlib.colors as colors\r\nox.config(use_cache=True, log_console=True)\r\nox.__version__\r\nG = ox.graph_from_place('Piedmont, California, USA', network_type='drive')\r\n```\r\nException happens on a last line", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/382", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/382/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/382/events", "html_url": "https://github.com/gboeing/osmnx/issues/382", "id": 562163896, "node_id": "MDU6SXNzdWU1NjIxNjM4OTY=", "number": 382, "title": "`get_nearest_node()` returning same output irrespective of input after projecting", "user": {"login": "agdhruv", "id": 17107048, "node_id": "MDQ6VXNlcjE3MTA3MDQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/17107048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agdhruv", "html_url": "https://github.com/agdhruv", "followers_url": "https://api.github.com/users/agdhruv/followers", "following_url": "https://api.github.com/users/agdhruv/following{/other_user}", "gists_url": "https://api.github.com/users/agdhruv/gists{/gist_id}", "starred_url": "https://api.github.com/users/agdhruv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agdhruv/subscriptions", "organizations_url": "https://api.github.com/users/agdhruv/orgs", "repos_url": "https://api.github.com/users/agdhruv/repos", "events_url": "https://api.github.com/users/agdhruv/events{/privacy}", "received_events_url": "https://api.github.com/users/agdhruv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-09T11:44:43Z", "updated_at": "2020-02-14T09:41:18Z", "closed_at": "2020-02-14T04:23:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\nFirstly, amazing library -- I would love to be able to contribute to it one day! \r\nI downloaded a `graph_from_bbox` and projected the downloaded graph as stated in point 2a [here](https://geoffboeing.com/2016/11/osmnx-python-street-networks/). After doing these, every call to `get_nearest_node` always returns the same output. If I don't project, the outputs for different inputs are different, i.e. expected behavior.\r\n\r\nFor my use case, I need the latitude and longitude for each node. Hence, I cannot do without projecting the graph.\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\nMacOS Mojave 10.14, Python 3.7.6, OSMnx==0.11.4\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n<details>\r\n# Paste the output of your Python packages and their versions here, between these two \"details\" tags\r\nattrs              19.3.0     \r\nazure-core         1.2.1      \r\nazure-storage-blob 12.1.0     \r\ncertifi            2019.9.11  \r\ncffi               1.13.2     \r\nchardet            3.0.4      \r\nClick              7.0        \r\nclick-plugins      1.1.1      \r\ncligj              0.5.0      \r\ncryptography       2.8        \r\ncycler             0.10.0     \r\ndecorator          4.4.1      \r\ndescartes          1.1.0      \r\nFiona              1.8.13     \r\nFlask              1.1.1      \r\ngeographiclib      1.50       \r\ngeopandas          0.6.3      \r\ngeopy              1.20.0     \r\ngunicorn           20.0.4     \r\nidna               2.8        \r\nisodate            0.6.0      \r\nitsdangerous       1.1.0      \r\nJinja2             2.10.3     \r\nkiwisolver         1.1.0      \r\nMarkupSafe         1.1.1      \r\nmatplotlib         3.1.3      \r\nmsrest             0.6.10     \r\nmunch              2.5.0      \r\nnetworkx           2.4        \r\nnumpy              1.17.3     \r\noauthlib           3.1.0      \r\nosmnx              0.11.4     \r\npandas             1.0.1      \r\npip                20.0.2     \r\npolyline           1.4.0      \r\nprogressbar2       3.47.0     \r\npycparser          2.19       \r\npymongo            3.9.0      \r\npyparsing          2.4.5      \r\npyproj             2.4.2.post1\r\npython-dateutil    2.8.1      \r\npython-utils       2.3.0      \r\npytz               2019.3     \r\nrequests           2.22.0     \r\nrequests-oauthlib  1.3.0      \r\nRtree              0.9.3      \r\nsetuptools         45.1.0     \r\nShapely            1.7.0      \r\nsix                1.12.0     \r\nurllib3            1.25.7     \r\nWerkzeug           0.16.0     \r\nwheel              0.33.6 \r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\nbbox = (13.1105752581959, 12.8227927418041, 77.7679309759084, 77.4726182240916)\r\nG = ox.graph_from_bbox(*bbox, network_type='drive_service')\r\nG_projected = ox.project_graph(G)\r\n\r\n# lat-longs of two points: source and destination\r\ns = (12.9581809, 77.6022779)\r\nd = (12.961213, 77.690655)\r\n\r\n# using the unprojected graph\r\nox.get_nearest_node(G, s) # returns 60952298\r\nox.get_nearest_node(G, d) # returns 320630059\r\n\r\n# using the projected graph\r\nox.get_nearest_node(G_projected, s) # returns 1513928872\r\nox.get_nearest_node(G_projected, d) # returns 1513928872\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/381", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/381/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/381/events", "html_url": "https://github.com/gboeing/osmnx/issues/381", "id": 561503039, "node_id": "MDU6SXNzdWU1NjE1MDMwMzk=", "number": 381, "title": "Save as OSM XML does not work", "user": {"login": "mschroen", "id": 7942719, "node_id": "MDQ6VXNlcjc5NDI3MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7942719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mschroen", "html_url": "https://github.com/mschroen", "followers_url": "https://api.github.com/users/mschroen/followers", "following_url": "https://api.github.com/users/mschroen/following{/other_user}", "gists_url": "https://api.github.com/users/mschroen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mschroen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mschroen/subscriptions", "organizations_url": "https://api.github.com/users/mschroen/orgs", "repos_url": "https://api.github.com/users/mschroen/repos", "events_url": "https://api.github.com/users/mschroen/events{/privacy}", "received_events_url": "https://api.github.com/users/mschroen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-02-07T08:56:18Z", "updated_at": "2020-02-18T23:55:55Z", "closed_at": "2020-02-18T23:53:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Saving the osm graph to xml does not seem to work. The error is complaining about some str to integer conversion and some keyerror concerning highway. However, the graph contains highway keys. If I am doing something fundamentally wrong, it would be great if the documentation for this function could be improved.\r\n\r\n<details>\r\nWindows 10, python 3.7.6, osmnx 0.11.4\r\n</details>\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\nimport osmnx\r\nosmnx.utils.config(all_oneway=True)\r\nG = osmnx.graph_from_bbox(50.01, 50.000, 12.01, 12.000)\r\n#osmnx.plot_graph(G)\r\nosmnx.save_as_osm(G, filename='osm.xml')\r\n```\r\n\r\nOutputs a beautiful graph and the following error:\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nc:\\users\\XXX\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pandas\\core\\indexes\\base.py in get_value(self, series, key)\r\n   4410             try:\r\n-> 4411                 return libindex.get_value_at(s, key)\r\n   4412             except IndexError:\r\n\r\npandas\\_libs\\index.pyx in pandas._libs.index.get_value_at()\r\n\r\npandas\\_libs\\index.pyx in pandas._libs.index.get_value_at()\r\n\r\npandas\\_libs\\util.pxd in pandas._libs.util.get_value_at()\r\n\r\npandas\\_libs\\util.pxd in pandas._libs.util.validate_indexer()\r\n\r\nTypeError: 'str' object cannot be interpreted as an integer\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-118-0256ba19ccc6> in <module>\r\n      3 G = osmnx.graph_from_bbox(50.01, 50.000, 12.01, 12.000)\r\n      4 osmnx.plot_graph(G)\r\n----> 5 osmnx.save_as_osm(G, filename='osm.xml')\r\n\r\nc:\\users\\XXX\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\osmnx\\save_load.py in save_as_osm(data, node_tags, node_attrs, edge_tags, edge_attrs, oneway, merge_edges, edge_tag_aggs, filename, folder)\r\n    248         for tag in node_tags:\r\n    249             etree.SubElement(\r\n--> 250                 node, 'tag', attrib={'k': tag, 'v': row[tag]})\r\n    251 \r\n    252     # append edges to the XML tree\r\n\r\nc:\\users\\XXX\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pandas\\core\\series.py in __getitem__(self, key)\r\n    869         key = com.apply_if_callable(key, self)\r\n    870         try:\r\n--> 871             result = self.index.get_value(self, key)\r\n    872 \r\n    873             if not is_scalar(result):\r\n\r\nc:\\users\\XXX\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pandas\\core\\indexes\\base.py in get_value(self, series, key)\r\n   4417                     raise InvalidIndexError(key)\r\n   4418                 else:\r\n-> 4419                     raise e1\r\n   4420             except Exception:\r\n   4421                 raise e1\r\n\r\nc:\\users\\XXX\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pandas\\core\\indexes\\base.py in get_value(self, series, key)\r\n   4403         k = self._convert_scalar_indexer(k, kind=\"getitem\")\r\n   4404         try:\r\n-> 4405             return self._engine.get_value(s, k, tz=getattr(series.dtype, \"tz\", None))\r\n   4406         except KeyError as e1:\r\n   4407             if len(self) > 0 and (self.holds_integer() or self.is_boolean()):\r\n\r\npandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_value()\r\n\r\npandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_value()\r\n\r\npandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_loc()\r\n\r\npandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n\r\npandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()\r\n\r\nKeyError: 'highway'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/379", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/379/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/379/events", "html_url": "https://github.com/gboeing/osmnx/issues/379", "id": 560515615, "node_id": "MDU6SXNzdWU1NjA1MTU2MTU=", "number": 379, "title": "ox.geo_utils.redistribute_vertices() broken for MultiLineString geoms", "user": {"login": "mxndrwgrdnr", "id": 1395651, "node_id": "MDQ6VXNlcjEzOTU2NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1395651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mxndrwgrdnr", "html_url": "https://github.com/mxndrwgrdnr", "followers_url": "https://api.github.com/users/mxndrwgrdnr/followers", "following_url": "https://api.github.com/users/mxndrwgrdnr/following{/other_user}", "gists_url": "https://api.github.com/users/mxndrwgrdnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mxndrwgrdnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mxndrwgrdnr/subscriptions", "organizations_url": "https://api.github.com/users/mxndrwgrdnr/orgs", "repos_url": "https://api.github.com/users/mxndrwgrdnr/repos", "events_url": "https://api.github.com/users/mxndrwgrdnr/events{/privacy}", "received_events_url": "https://api.github.com/users/mxndrwgrdnr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-05T17:18:05Z", "updated_at": "2020-02-07T00:45:46Z", "closed_at": "2020-02-07T00:45:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure that this function has been tested for MultiLineString geometries, becauase it's breaking for me, and doesn't even pass the eye test. Looks like the bug originates back in the Stack Overflow answer it was copied from. The issue lies [here](https://github.com/gboeing/osmnx/blob/master/osmnx/geo_utils.py#L500), where\r\n```\r\n[p for p in parts if not p.is_empty]\r\n```\r\nbreaks because p is just a list, as defined above, and regular python lists don't have an `is_empty()` method defined. The code should simply read\r\n```\r\n[p for p in parts if not p]\r\n```\r\nbecause empty lists evaluate to `False`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/377", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/377/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/377/events", "html_url": "https://github.com/gboeing/osmnx/issues/377", "id": 558985248, "node_id": "MDU6SXNzdWU1NTg5ODUyNDg=", "number": 377, "title": "Allow use of existing axes without reassigning", "user": {"login": "asongtoruin", "id": 20771863, "node_id": "MDQ6VXNlcjIwNzcxODYz", "avatar_url": "https://avatars3.githubusercontent.com/u/20771863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asongtoruin", "html_url": "https://github.com/asongtoruin", "followers_url": "https://api.github.com/users/asongtoruin/followers", "following_url": "https://api.github.com/users/asongtoruin/following{/other_user}", "gists_url": "https://api.github.com/users/asongtoruin/gists{/gist_id}", "starred_url": "https://api.github.com/users/asongtoruin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asongtoruin/subscriptions", "organizations_url": "https://api.github.com/users/asongtoruin/orgs", "repos_url": "https://api.github.com/users/asongtoruin/repos", "events_url": "https://api.github.com/users/asongtoruin/events{/privacy}", "received_events_url": "https://api.github.com/users/asongtoruin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-03T10:24:37Z", "updated_at": "2020-03-06T16:51:26Z", "closed_at": "2020-03-06T16:51:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "As things stand with the module, it's very easy to create single plots but difficult to use `matplotlib`'s subplotting to create multiple plots on the same figure. This is in part because the calling of the `save_and_show` function is called at the end of most (all?) of these functions, which reassigns `fig` and `ax`.\r\n\r\nI'd like to propose adding in a parameter in each function to optionally prevent this from happening. As an initial try, here is what `plot_footprints` might look like if, for example, there was a new parameter called `use_active_ax` for this purpose (and reducing the function down to just the modified parts):\r\n\r\n```python\r\ndef plot_footprints(gdf, use_active_ax=False, fig=None, ax=None, figsize=None, color='#333333', bgcolor='w',\r\n                    set_bounds=True, bbox=None, save=False, show=True, close=False,\r\n                    filename='image', file_format='png', dpi=600):\r\n    \r\n    if use_active_ax:\r\n        ax = plt.gca()\r\n        fig = ax.figure\r\n    elif fig is None or ax is None:\r\n        fig, ax = plt.subplots(figsize=figsize, facecolor=bgcolor)\r\n    \r\n    ax.set_facecolor(bgcolor)\r\n\r\n   # ...\r\n\r\n    # make everything square\r\n    ax.set_aspect('equal')\r\n    \r\n    if not use_active_ax:\r\n        fig.canvas.draw()\r\n\r\n        fig, ax = ox.plot.save_and_show(fig=fig, ax=ax, save=save, show=show, close=close,\r\n                                filename=filename, file_format=file_format, dpi=dpi, axis_off=True)\r\n\r\n        return fig, ax\r\n```\r\n\r\nThis should allow us to quickly produce multiple plots on the same figure. Using the locations from the footprints example:\r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\nimport osmnx as ox\r\n\r\n\r\nplaces = [\r\n    ('Arc de Triomphe', (48.873446, 2.294255)),\r\n    ('Portland', (45.517309, -122.682138)),\r\n    ('NYC', (40.757920, -73.983393)),\r\n    ('Richmond', (37.781999, -122.472501))\r\n]\r\n\r\ndistance_m = 612\r\nsize = 7\r\n\r\nfig, axes = plt.subplots(figsize=(len(places)*size, size), ncols=len(places), facecolor='#333333')\r\n\r\nfor place, ax in zip(places, axes):\r\n    plt.sca(ax)\r\n    \r\n    fpr = ox.footprints_from_point(place[1], distance=distance_m)\r\n    os.plot_footprints(fpr, use_active_ax=True, bgcolor='#333333', color='orange')\r\n    ax.set_title(place[0], color='orange', fontsize='xx-large', weight='bold')\r\n```\r\n\r\n![Single figure multiple axes](https://user-images.githubusercontent.com/20771863/73645355-09ec0b80-466f-11ea-9067-88f6bd6f560f.png)\r\n\r\nI think this would also allow for easy use of `FacetGrid` in `seaborn` too. I'd be happy to work up a PR for this functionality later if this is something you think would be helpful.\r\n\r\nAny thoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/376", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/376/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/376/events", "html_url": "https://github.com/gboeing/osmnx/issues/376", "id": 558841027, "node_id": "MDU6SXNzdWU1NTg4NDEwMjc=", "number": 376, "title": "Please slow down Python3.8 transition", "user": {"login": "jgmbenoit", "id": 8476716, "node_id": "MDQ6VXNlcjg0NzY3MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8476716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgmbenoit", "html_url": "https://github.com/jgmbenoit", "followers_url": "https://api.github.com/users/jgmbenoit/followers", "following_url": "https://api.github.com/users/jgmbenoit/following{/other_user}", "gists_url": "https://api.github.com/users/jgmbenoit/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgmbenoit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgmbenoit/subscriptions", "organizations_url": "https://api.github.com/users/jgmbenoit/orgs", "repos_url": "https://api.github.com/users/jgmbenoit/repos", "events_url": "https://api.github.com/users/jgmbenoit/events{/privacy}", "received_events_url": "https://api.github.com/users/jgmbenoit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-03T04:52:46Z", "updated_at": "2020-02-03T05:20:45Z", "closed_at": "2020-02-03T05:20:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please consider to keep OSMnx compatible with Python3.7 to let time for Python3.8 transition.\r\nFor example, the current stable version of Debian (Buster) does not support Python3.8 .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/373", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/373/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/373/events", "html_url": "https://github.com/gboeing/osmnx/issues/373", "id": 558109181, "node_id": "MDU6SXNzdWU1NTgxMDkxODE=", "number": 373, "title": "OSM Tags for oneway roads", "user": {"login": "whereiszoe", "id": 60506769, "node_id": "MDQ6VXNlcjYwNTA2NzY5", "avatar_url": "https://avatars1.githubusercontent.com/u/60506769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whereiszoe", "html_url": "https://github.com/whereiszoe", "followers_url": "https://api.github.com/users/whereiszoe/followers", "following_url": "https://api.github.com/users/whereiszoe/following{/other_user}", "gists_url": "https://api.github.com/users/whereiszoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/whereiszoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whereiszoe/subscriptions", "organizations_url": "https://api.github.com/users/whereiszoe/orgs", "repos_url": "https://api.github.com/users/whereiszoe/repos", "events_url": "https://api.github.com/users/whereiszoe/events{/privacy}", "received_events_url": "https://api.github.com/users/whereiszoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-31T12:40:59Z", "updated_at": "2020-02-07T00:45:07Z", "closed_at": "2020-02-07T00:45:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thank you very much for the awesome package. I am new to GitHub, please bear with me if I raise the issue at the wrong section. \r\n\r\nIn the OSM dataset I am working with (i.e., Ho Chi Minh city in Vietnam), the Tag values for oneway are  \"F\", \"T\", or \"B\", rather than \"1\", \"-1\", \"yes\".\r\nI also found a document on interpreting OpenStreetMap Data (https://download.geofabrik.de/osm-data-in-gis-formats-free.pdf), which indicates that:\r\n\u201cF\u201d means that only driving in direction of the line string is allowed. \r\n\u201cT\u201d means that only the opposite direction is allowed. \r\n\u201cB\u201d (default value) means that both directions are ok.\r\n \r\nI wonder if the code should be modified so that it allows for the consideration of such values? Possible changes to the list of \"osm_oneway_values\" and the condition \"if data['oneway'] == '-1':\" in \"add_paths(G, paths, bidirectional=False)\"? Thanks for your answer in advance.\r\n\r\nThe relevant source code is pasted as below.\r\n \r\n```python\r\ndef add_paths(G, paths, bidirectional=False):\r\n    \"\"\"\r\n    Add a collection of paths to the graph.\r\n    Parameters\r\n    ----------\r\n    G : networkx multidigraph\r\n    paths : dict\r\n        the paths from OSM\r\n    bidirectional : bool\r\n        if True, create bidirectional edges for one-way streets\r\n    Returns\r\n    -------\r\n    None\r\n    \"\"\"\r\n\r\n    # the list of values OSM uses in its 'oneway' tag to denote True\r\n    osm_oneway_values = ['yes', 'true', '1', '-1']\r\n\r\n    for data in paths.values():\r\n\r\n        if settings.all_oneway is True:\r\n            add_path(G, data, one_way=True)\r\n        # if this path is tagged as one-way and if it is not a walking network,\r\n        # then we'll add the path in one direction only\r\n        elif ('oneway' in data and data['oneway'] in osm_oneway_values) and not bidirectional:\r\n            if data['oneway'] == '-1':\r\n                # paths with a one-way value of -1 are one-way, but in the\r\n                # reverse direction of the nodes' order, see osm documentation\r\n                data['nodes'] = list(reversed(data['nodes']))\r\n            # add this path (in only one direction) to the graph\r\n            add_path(G, data, one_way=True)\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/372", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/372/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/372/events", "html_url": "https://github.com/gboeing/osmnx/issues/372", "id": 557862201, "node_id": "MDU6SXNzdWU1NTc4NjIyMDE=", "number": 372, "title": "TypeError: unhashable type: 'dict'", "user": {"login": "liquidgenius", "id": 3987909, "node_id": "MDQ6VXNlcjM5ODc5MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3987909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liquidgenius", "html_url": "https://github.com/liquidgenius", "followers_url": "https://api.github.com/users/liquidgenius/followers", "following_url": "https://api.github.com/users/liquidgenius/following{/other_user}", "gists_url": "https://api.github.com/users/liquidgenius/gists{/gist_id}", "starred_url": "https://api.github.com/users/liquidgenius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liquidgenius/subscriptions", "organizations_url": "https://api.github.com/users/liquidgenius/orgs", "repos_url": "https://api.github.com/users/liquidgenius/repos", "events_url": "https://api.github.com/users/liquidgenius/events{/privacy}", "received_events_url": "https://api.github.com/users/liquidgenius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-31T01:45:30Z", "updated_at": "2020-01-31T21:41:00Z", "closed_at": "2020-01-31T18:21:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Problem description \r\n\r\ncreated a poetry project\r\nused pyenv to set the base interpreter as Python 3.8.0\r\npoetry shell\r\npoetry add networkx osmnx IPython ipyleaflet\r\ncreated maps.py with the following content and executed:\r\n```python\r\nimport networkx as nx\r\nimport osmnx as ox\r\nfrom IPython.display import IFrame\r\nox.config(log_console=True, use_cache=True)\r\n\r\n# download the street network for Piedmont, CA\r\n#{\u2018walk\u2019, \u2018bike\u2019, \u2018drive\u2019, \u2018drive_service\u2019, \u2018all\u2019, \u2018all_private\u2019}\r\nG = ox.graph_from_place('Piedmont, California, USA', network_type='drive', infrastructure='way[\"highway\"]', simplify=False)\r\n```\r\nreceived the following log and error:\r\n```shell\r\n/Users/liquidgenius/Library/Caches/pypoetry/virtualenvs/discovery-osmnx-maps-92MSC4tJ-py3.8/bin/python /Users/liquidgenius/Projects/discovery-osmnx-maps/src/maps.py\r\nConfigured osmnx\r\nRetrieved response from cache file \"cache/7a10ef7f51a32868ea1208e6d6162cd1.json\" for URL \"https://nominatim.openstreetmap.org/search?format=json&limit=1&dedupe=0&polygon_geojson=1&q=Piedmont%2C+California%2C+USA\"\r\nCreated GeoDataFrame with 1 row for query \"Piedmont, California, USA\"\r\nConstructed place geometry polygon(s) to query API\r\nProjected the GeoDataFrame \"geometry to project\" to UTM-10 in 0.04 seconds\r\nProjected the GeoDataFrame \"geometry to project\" to default_crs in 0.01 seconds\r\nRequesting network data within polygon from API in 1 request(s)\r\nRetrieved response from cache file \"cache/80e4ddd06d01fa3cf512ef17fdefa770.json\" for URL \"http://overpass-api.de/api/interpreter?data=%5Bout%3Ajson%5D%5Btimeout%3A180%5D%3B%28way%5B%22highway%22%5D%5B%22area%22%21~%22yes%22%5D%5B%22highway%22%21~%22cycleway%7Cfootway%7Cpath%7Cpedestrian%7Csteps%7Ctrack%7Ccorridor%7Celevator%7Cescalator%7Cproposed%7Cconstruction%7Cbridleway%7Cabandoned%7Cplatform%7Craceway%7Cservice%22%5D%5B%22motor_vehicle%22%21~%22no%22%5D%5B%22motorcar%22%21~%22no%22%5D%5B%22access%22%21~%22private%22%5D%5B%22service%22%21~%22parking%7Cparking_aisle%7Cdriveway%7Cprivate%7Cemergency_access%22%5D%28poly%3A%2237.823649+-122.249374+37.823390+-122.248859+37.823300+-122.248953+37.822939+-122.249336+37.822010+-122.248041+37.821599+-122.247468+37.821552+-122.247414+37.821424+-122.247267+37.820899+-122.246667+37.820725+-122.246468+37.820602+-122.246395+37.820499+-122.246322+37.820215+-122.246123+37.820079+-122.245992+37.819942+-122.245841+37.819700+-122.245554+37.819462+-122.245309+37.819297+-122.245125+37.819218+-122.245030+37.819172+-122.244801+37.819074+-122.244287+37.819027+-122.244191+37.818972+-122.244022+37.818807+-122.243518+37.818753+-122.243351+37.818722+-122.243173+37.818712+-122.243200+37.818592+-122.242747+37.818552+-122.242596+37.818460+-122.242198+37.818187+-122.241007+37.818096+-122.240610+37.818045+-122.240350+37.817892+-122.239570+37.817841+-122.239310+37.817756+-122.238966+37.817503+-122.237934+37.817419+-122.237591+37.817399+-122.237361+37.817341+-122.236673+37.817322+-122.236444+37.817277+-122.236208+37.817143+-122.235500+37.817099+-122.235265+37.817064+-122.235139+37.816961+-122.234761+37.816927+-122.234635+37.816850+-122.234363+37.816777+-122.234123+37.816621+-122.233549+37.816545+-122.233278+37.816476+-122.233067+37.816270+-122.232438+37.816202+-122.232228+37.816054+-122.231504+37.815613+-122.229332+37.815530+-122.228951+37.815466+-122.228609+37.815313+-122.227934+37.814855+-122.225912+37.814703+-122.225238+37.814660+-122.225084+37.814632+-122.224992+37.814420+-122.224256+37.814350+-122.224011+37.814286+-122.223735+37.814097+-122.222910+37.814034+-122.222635+37.813986+-122.222336+37.813845+-122.221439+37.813798+-122.221141+37.813748+-122.221006+37.813744+-122.220944+37.813583+-122.220355+37.813530+-122.220159+37.813430+-122.219694+37.813421+-122.219670+37.813110+-122.218295+37.813096+-122.218206+37.812988+-122.217718+37.812955+-122.217552+37.812945+-122.217478+37.812898+-122.217196+37.812818+-122.216760+37.812776+-122.216521+37.812677+-122.216250+37.812646+-122.216164+37.812543+-122.215945+37.812370+-122.215445+37.812276+-122.215174+37.812347+-122.215134+37.812381+-122.215111+37.812520+-122.215021+37.812554+-122.214993+37.812668+-122.214882+37.812695+-122.214857+37.812749+-122.214791+37.812892+-122.214645+37.812934+-122.214590+37.813024+-122.214476+37.813107+-122.214354+37.813201+-122.214237+37.813336+-122.214086+37.813383+-122.214044+37.813423+-122.214015+37.813473+-122.213978+37.813499+-122.213959+37.813591+-122.213901+37.813669+-122.213863+37.813712+-122.213847+37.813822+-122.213802+37.813968+-122.213728+37.814058+-122.213673+37.814122+-122.213623+37.814636+-122.213190+37.814772+-122.213108+37.814779+-122.213104+37.814913+-122.213054+37.815060+-122.213017+37.815202+-122.212988+37.815812+-122.212910+37.816077+-122.212848+37.816227+-122.212800+37.816384+-122.212731+37.816646+-122.212596+37.816830+-122.212480+37.817040+-122.212327+37.817268+-122.212129+37.817457+-122.211929+37.817707+-122.211610+37.817981+-122.211212+37.818320+-122.210724+37.818728+-122.210148+37.818866+-122.210410+37.819280+-122.211195+37.819419+-122.211458+37.819512+-122.211627+37.819791+-122.212135+37.819885+-122.212305+37.820117+-122.212719+37.820141+-122.212732+37.820911+-122.214013+37.821168+-122.214440+37.821281+-122.214649+37.821620+-122.215278+37.821734+-122.215488+37.821861+-122.215615+37.822003+-122.215767+37.822242+-122.215999+37.822370+-122.216127+37.822425+-122.216144+37.822487+-122.216172+37.822514+-122.216185+37.822604+-122.216302+37.822671+-122.216473+37.822673+-122.216491+37.822692+-122.216617+37.822742+-122.216714+37.822845+-122.216911+37.822895+-122.217006+37.822946+-122.217104+37.823018+-122.217254+37.823067+-122.217381+37.823432+-122.218212+37.823554+-122.218489+37.823788+-122.218785+37.824006+-122.219061+37.824242+-122.219360+37.824327+-122.219466+37.825364+-122.220777+37.825817+-122.221349+37.826102+-122.221499+37.826276+-122.221587+37.826330+-122.221625+37.826960+-122.221949+37.827246+-122.222100+37.827319+-122.222151+37.827424+-122.222260+37.827539+-122.222307+37.827613+-122.222359+37.827884+-122.222591+37.827972+-122.222666+37.828059+-122.222741+37.828126+-122.222798+37.829206+-122.223721+37.829695+-122.224083+37.830239+-122.224486+37.830440+-122.224594+37.831046+-122.224919+37.831249+-122.225028+37.831330+-122.225178+37.831573+-122.225631+37.831605+-122.225690+37.831655+-122.225782+37.831703+-122.225871+37.831847+-122.226139+37.831895+-122.226229+37.831929+-122.226280+37.831977+-122.226392+37.831982+-122.226408+37.832000+-122.226460+37.832029+-122.226752+37.832052+-122.226820+37.832079+-122.226873+37.832109+-122.226919+37.832148+-122.226962+37.832155+-122.226966+37.832247+-122.227016+37.832335+-122.227054+37.832473+-122.227258+37.832887+-122.227873+37.833026+-122.228079+37.832642+-122.229317+37.832363+-122.230218+37.832256+-122.230566+37.831726+-122.232279+37.831582+-122.233055+37.831348+-122.234331+37.831302+-122.234580+37.831163+-122.235330+37.831118+-122.235581+37.831072+-122.235855+37.831038+-122.236059+37.830846+-122.236656+37.830761+-122.236921+37.830786+-122.236966+37.830823+-122.237048+37.830842+-122.237151+37.830836+-122.237251+37.830817+-122.237299+37.830807+-122.237327+37.830696+-122.237552+37.830656+-122.237723+37.830623+-122.237892+37.830596+-122.238227+37.830581+-122.238456+37.830572+-122.238596+37.830537+-122.238852+37.830503+-122.239064+37.830479+-122.239668+37.830478+-122.239748+37.830466+-122.240781+37.830458+-122.240935+37.830439+-122.241087+37.830406+-122.241229+37.830107+-122.242351+37.830094+-122.242402+37.830021+-122.242715+37.830009+-122.242825+37.830007+-122.242915+37.830012+-122.243025+37.830063+-122.243288+37.830068+-122.243293+37.830083+-122.243311+37.830088+-122.243317+37.830048+-122.243348+37.829776+-122.243557+37.828839+-122.244279+37.828657+-122.244436+37.828501+-122.244367+37.828317+-122.244260+37.828293+-122.244292+37.828205+-122.244417+37.828135+-122.244548+37.828089+-122.244638+37.827978+-122.244805+37.827648+-122.245308+37.827538+-122.245476+37.827263+-122.245907+37.827239+-122.245945+37.826496+-122.247236+37.826241+-122.247680+37.826034+-122.247748+37.825417+-122.247953+37.825211+-122.248022+37.825131+-122.248040+37.824894+-122.248098+37.824815+-122.248118+37.824632+-122.248324+37.824586+-122.248373+37.823883+-122.249123+37.823649+-122.249374%22%29%3B%3E%3B%29%3Bout%3B\"\r\nGot all network data within polygon from API in 1 request(s) and 0.01 seconds\r\nCreating networkx graph from downloaded OSM data...\r\nCreated graph with 2,975 nodes and 5,936 edges in 0.04 seconds\r\nAdded edge lengths to graph in 0.08 seconds\r\nIdentifying all nodes that lie outside the polygon...\r\nCreated r-tree spatial index for 2,975 points in 0.11 seconds\r\nTraceback (most recent call last):\r\n  File \"/Users/liquidgenius/Projects/discovery-osmnx-maps/src/maps.py\", line 8, in <module>\r\n    G = ox.graph_from_place('Piedmont, California, USA', network_type='drive', infrastructure='way[\"highway\"]',\r\n  File \"/Users/liquidgenius/Library/Caches/pypoetry/virtualenvs/discovery-osmnx-maps-92MSC4tJ-py3.8/lib/python3.8/site-packages/osmnx/core.py\", line 1445, in graph_from_place\r\n    G = graph_from_polygon(polygon, network_type=network_type, simplify=simplify,\r\n  File \"/Users/liquidgenius/Library/Caches/pypoetry/virtualenvs/discovery-osmnx-maps-92MSC4tJ-py3.8/lib/python3.8/site-packages/osmnx/core.py\", line 1355, in graph_from_polygon\r\n    G = truncate_graph_polygon(G, polygon, retain_all=retain_all, truncate_by_edge=truncate_by_edge)\r\n  File \"/Users/liquidgenius/Library/Caches/pypoetry/virtualenvs/discovery-osmnx-maps-92MSC4tJ-py3.8/lib/python3.8/site-packages/osmnx/core.py\", line 733, in truncate_graph_polygon\r\n    points_within_geometry = intersect_index_quadrats(gdf_nodes, polygon, quadrat_width=quadrat_width, min_num=min_num, buffer_amount=buffer_amount)\r\n  File \"/Users/liquidgenius/Library/Caches/pypoetry/virtualenvs/discovery-osmnx-maps-92MSC4tJ-py3.8/lib/python3.8/site-packages/osmnx/core.py\", line 680, in intersect_index_quadrats\r\n    points_within_geometry = points_within_geometry.drop_duplicates(subset='node')\r\n  File \"/Users/liquidgenius/Library/Caches/pypoetry/virtualenvs/discovery-osmnx-maps-92MSC4tJ-py3.8/lib/python3.8/site-packages/pandas/core/frame.py\", line 4808, in drop_duplicates\r\n    duplicated = self.duplicated(subset, keep=keep)\r\n  File \"/Users/liquidgenius/Library/Caches/pypoetry/virtualenvs/discovery-osmnx-maps-92MSC4tJ-py3.8/lib/python3.8/site-packages/pandas/core/frame.py\", line 4885, in duplicated\r\n    labels, shape = map(list, zip(*map(f, vals)))\r\n  File \"/Users/liquidgenius/Library/Caches/pypoetry/virtualenvs/discovery-osmnx-maps-92MSC4tJ-py3.8/lib/python3.8/site-packages/pandas/core/frame.py\", line 4859, in f\r\n    labels, shape = algorithms.factorize(\r\n  File \"/Users/liquidgenius/Library/Caches/pypoetry/virtualenvs/discovery-osmnx-maps-92MSC4tJ-py3.8/lib/python3.8/site-packages/pandas/core/algorithms.py\", line 629, in factorize\r\n    codes, uniques = _factorize_array(\r\n  File \"/Users/liquidgenius/Library/Caches/pypoetry/virtualenvs/discovery-osmnx-maps-92MSC4tJ-py3.8/lib/python3.8/site-packages/pandas/core/algorithms.py\", line 478, in _factorize_array\r\n    uniques, codes = table.factorize(values, na_sentinel=na_sentinel, na_value=na_value)\r\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1806, in pandas._libs.hashtable.PyObjectHashTable.factorize\r\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1726, in pandas._libs.hashtable.PyObjectHashTable._unique\r\nTypeError: unhashable type: 'dict'\r\n\r\nProcess finished with exit code 1\r\n```\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\nmacOS 10.14.6\r\nPython 3.8.0\r\nOSMnx 0.11.3\r\n\r\n#### Complete list of your environment's packages and their versions\r\n\r\n```\r\nappnope            0.1.0       Disable App Nap on OS X 10.9\r\nattrs              19.3.0      Classes Without Boilerplate\r\nbackcall           0.1.0       Specifications for callback functions passed in to an API\r\nbleach             3.1.0       An easy safelist-based HTML-sanitizing tool.\r\nbranca             0.3.1       Generate complex HTML+JS pages with Python\r\ncertifi            2019.11.28  Python package for providing Mozilla's CA Bundle.\r\nchardet            3.0.4       Universal encoding detector for Python 2 and 3\r\nclick              7.0         Composable command line interface toolkit\r\nclick-plugins      1.1.1       An extension module for click to enable registering CLI commands via setuptools entry-points.\r\ncligj              0.5.0       Click params for commmand line interfaces to GeoJSON\r\ncycler             0.10.0      Composable style cycles\r\ndecorator          4.4.1       Decorators for Humans\r\ndefusedxml         0.6.0       XML bomb protection for Python stdlib modules\r\ndescartes          1.1.0       Use geometric objects as matplotlib paths and patches\r\nentrypoints        0.3         Discover and load entry points from installed packages.\r\nfiona              1.8.13      Fiona reads and writes spatial data files\r\ngeopandas          0.6.2       Geographic pandas extensions\r\nidna               2.8         Internationalized Domain Names in Applications (IDNA)\r\nipykernel          5.1.4       IPython Kernel for Jupyter\r\nipyleaflet         0.12.1      A Jupyter widget for dynamic Leaflet maps\r\nipython            7.11.1      IPython: Productive Interactive Computing\r\nipython-genutils   0.2.0       Vestigial utilities from IPython\r\nipywidgets         7.5.1       IPython HTML widgets for Jupyter\r\njedi               0.16.0      An autocompletion tool for Python that can be used for text editors.\r\njinja2             2.11.1      A very fast and expressive template engine.\r\njsonschema         3.2.0       An implementation of JSON Schema validation for Python\r\njupyter-client     5.3.4       Jupyter protocol implementation and client libraries\r\njupyter-core       4.6.1       Jupyter core package. A base package on which Jupyter projects rely.\r\nkiwisolver         1.1.0       A fast implementation of the Cassowary constraint solver\r\nmarkupsafe         1.1.1       Safely add untrusted strings to HTML/XML markup.\r\nmatplotlib         3.1.2       Python plotting package\r\nmistune            0.8.4       The fastest markdown parser in pure Python\r\nmore-itertools     8.2.0       More routines for operating on iterables, beyond itertools\r\nmunch              2.5.0       A dot-accessible dictionary (a la JavaScript objects)\r\nnbconvert          5.6.1       Converting Jupyter Notebooks\r\nnbformat           5.0.4       The Jupyter Notebook format\r\nnetworkx           2.4         Python package for creating and manipulating graphs and networks\r\nnotebook           6.0.3       A web-based notebook environment for interactive computing\r\nnumpy              1.18.1      NumPy is the fundamental package for array computing with Python.\r\nosmnx              0.11.3      Retrieve, model, analyze, and visualize OpenStreetMap street networks and other spatial data\r\npackaging          20.1        Core utilities for Python packages\r\npandas             1.0.0       Powerful data structures for data analysis, time series, and statistics\r\npandocfilters      1.4.2       Utilities for writing pandoc filters in python\r\nparso              0.6.0       A Python Parser\r\npexpect            4.8.0       Pexpect allows easy control of interactive console applications.\r\npickleshare        0.7.5       Tiny 'shelve'-like database with concurrency support\r\npluggy             0.13.1      plugin and hook calling mechanisms for python\r\nprometheus-client  0.7.1       Python client for the Prometheus monitoring system.\r\nprompt-toolkit     3.0.3       Library for building powerful interactive command lines in Python\r\nptyprocess         0.6.0       Run a subprocess in a pseudo terminal\r\npy                 1.8.1       library with cross-python path, ini-parsing, io, code, log facilities\r\npygments           2.5.2       Pygments is a syntax highlighting package written in Python.\r\npyparsing          2.4.6       Python parsing module\r\npyproj             2.4.2.post1 Python interface to PROJ (cartographic projections and coordinate transformations library)\r\npyrsistent         0.15.7      Persistent/Functional/Immutable data structures\r\npytest             5.3.5       pytest: simple powerful testing with Python\r\npython-dateutil    2.8.1       Extensions to the standard Python datetime module\r\npytz               2019.3      World timezone definitions, modern and historical\r\npyzmq              18.1.1      Python bindings for 0MQ\r\nrequests           2.22.0      Python HTTP for Humans.\r\nrtree              0.9.3       R-Tree spatial index for Python GIS\r\nsend2trash         1.5.0       Send file to trash natively under Mac OS X, Windows and Linux.\r\nshapely            1.7.0       Geometric objects, predicates, and operations\r\nsix                1.14.0      Python 2 and 3 compatibility utilities\r\nterminado          0.8.3       Terminals served to xterm.js using Tornado websockets\r\ntestpath           0.4.4       Test utilities for code working with files and commands\r\ntornado            6.0.3       Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.\r\ntraitlets          4.3.3       Traitlets Python config system\r\ntraittypes         0.2.1       Scipy trait types\r\nurllib3            1.25.8      HTTP library with thread-safe connection pooling, file post, and more.\r\nwcwidth            0.1.8       Measures number of Terminal column cells of wide-character codes\r\nwebencodings       0.5.1       Character encoding aliases for legacy web content\r\nwidgetsnbextension 3.5.1       IPython HTML widgets for Jupyter\r\nxarray             0.15.0      N-D labeled arrays and datasets in Python\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/370", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/370/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/370/events", "html_url": "https://github.com/gboeing/osmnx/issues/370", "id": 556191415, "node_id": "MDU6SXNzdWU1NTYxOTE0MTU=", "number": 370, "title": "ZeroDivisionError in basic_stats", "user": {"login": "janinaaa", "id": 48382145, "node_id": "MDQ6VXNlcjQ4MzgyMTQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/48382145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janinaaa", "html_url": "https://github.com/janinaaa", "followers_url": "https://api.github.com/users/janinaaa/followers", "following_url": "https://api.github.com/users/janinaaa/following{/other_user}", "gists_url": "https://api.github.com/users/janinaaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/janinaaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janinaaa/subscriptions", "organizations_url": "https://api.github.com/users/janinaaa/orgs", "repos_url": "https://api.github.com/users/janinaaa/repos", "events_url": "https://api.github.com/users/janinaaa/events{/privacy}", "received_events_url": "https://api.github.com/users/janinaaa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-28T12:55:39Z", "updated_at": "2020-01-28T16:40:18Z", "closed_at": "2020-01-28T16:40:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to calculate basic and extended network stats of a walking network, merge them together, and display them as done in the example (https://github.com/gboeing/osmnx-examples/blob/master/notebooks/06-example-osmnx-networkx.ipynb). Unfortunately, when I try to run the basic_stats, it throws a ZeroDivisionError. Apparently, when it tries to calculate node density as nodes per sq km (node_density_km = n / area_km), area_km is 0. I suspect that that's happening because we're guarding against null, but not zero here: https://github.com/gboeing/osmnx/blob/master/osmnx/stats.py#L153?\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\nI'm using OSMnx 0.11.3, Python 3.7, macOS Catalina\r\n\r\n#### Code snippet that independently and completely reproduces the issue\r\n\r\n```python\r\n# your code goes here\r\nimport networkx as nx\r\nimport osmnx as ox\r\nimport requests\r\nimport geopandas as gpd\r\n%matplotlib inline\r\nox.config(use_cache=True, log_console=True)\r\nox.__version__\r\n\r\nG = ox.graph_from_place('Leipzig, Saxony, Germany', network_type='walk', which_result=2)\r\nfig, ax = ox.plot_graph(G)\r\n\r\n# get the street network for a place, and its area in square meters\r\nplace = 'Leipzig, Saxony, Germany'\r\ngdf = ox.gdf_from_place(place)\r\narea = ox.project_gdf(gdf).unary_union.area\r\nG = ox.graph_from_place(place, network_type='walk', which_result=2)\r\n\r\n# calculate basic and extended network stats, merge them together, and display\r\nstats = ox.basic_stats(G, area=area)\r\nextended_stats = ox.extended_stats(G, ecc=True, bc=True, cc=True)\r\nfor key, value in extended_stats.items():\r\n    stats[key] = value\r\npd.Series(stats)\r\n```\r\n\r\n<img width=\"1121\" alt=\"Screenshot 2020-01-28 at 13 47 37\" src=\"https://user-images.githubusercontent.com/48382145/73265230-cb6cd180-41d4-11ea-8229-82dd3bce9e77.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/367", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/367/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/367/events", "html_url": "https://github.com/gboeing/osmnx/issues/367", "id": 547292394, "node_id": "MDU6SXNzdWU1NDcyOTIzOTQ=", "number": 367, "title": "Unnecessary print message \"here\" when loading data", "user": {"login": "HTenkanen", "id": 6659534, "node_id": "MDQ6VXNlcjY2NTk1MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6659534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HTenkanen", "html_url": "https://github.com/HTenkanen", "followers_url": "https://api.github.com/users/HTenkanen/followers", "following_url": "https://api.github.com/users/HTenkanen/following{/other_user}", "gists_url": "https://api.github.com/users/HTenkanen/gists{/gist_id}", "starred_url": "https://api.github.com/users/HTenkanen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HTenkanen/subscriptions", "organizations_url": "https://api.github.com/users/HTenkanen/orgs", "repos_url": "https://api.github.com/users/HTenkanen/repos", "events_url": "https://api.github.com/users/HTenkanen/events{/privacy}", "received_events_url": "https://api.github.com/users/HTenkanen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-09T07:09:24Z", "updated_at": "2020-01-09T17:25:38Z", "closed_at": "2020-01-09T17:25:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that somehow an extra print `\"here\"` has escaped to the latest release. \r\n\r\nSee it here:\r\nhttps://github.com/gboeing/osmnx/blob/master/osmnx/projection.py#L34\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/363", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/363/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/363/events", "html_url": "https://github.com/gboeing/osmnx/issues/363", "id": 544971466, "node_id": "MDU6SXNzdWU1NDQ5NzE0NjY=", "number": 363, "title": "'MultiDiGraph' object has no attribute 'node'", "user": {"login": "TMorville", "id": 4254061, "node_id": "MDQ6VXNlcjQyNTQwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4254061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TMorville", "html_url": "https://github.com/TMorville", "followers_url": "https://api.github.com/users/TMorville/followers", "following_url": "https://api.github.com/users/TMorville/following{/other_user}", "gists_url": "https://api.github.com/users/TMorville/gists{/gist_id}", "starred_url": "https://api.github.com/users/TMorville/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TMorville/subscriptions", "organizations_url": "https://api.github.com/users/TMorville/orgs", "repos_url": "https://api.github.com/users/TMorville/repos", "events_url": "https://api.github.com/users/TMorville/events{/privacy}", "received_events_url": "https://api.github.com/users/TMorville/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-03T12:17:24Z", "updated_at": "2020-01-03T17:43:37Z", "closed_at": "2020-01-03T17:43:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\n\r\nTrying to reproduce the answer found [here](https://github.com/gboeing/osmnx/issues/340#issuecomment-547021812). \r\n\r\n```\r\nimport osmnx as ox\r\n\r\nG = ox.graph_from_place('Piedmont, CA, USA', network_type='drive')\r\nnode_id = list(G.nodes())[0]\r\nG.node[node_id]['x'] #lon\r\nG.node[node_id]['y'] #lat\r\n```\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-9-ed3044f93f71> in <module>\r\n      3 G = ox.graph_from_place('Piedmont, CA, USA', network_type='drive')\r\n      4 node_id = list(G.nodes())[0]\r\n----> 5 G.node[node_id]['x'] #lon\r\n      6 G.node[node_id]['y'] #lat\r\n\r\nAttributeError: 'MultiDiGraph' object has no attribute 'node'\r\n```\r\n\r\nWorks fine when converting to gdf:\r\n\r\n```\r\nnodes = ox.graph_to_gdfs(G, edges=False)\r\nnodes[['x', 'y']]\r\n```\r\n\r\nIt seems that somewhere the `node` method as become `nodes` instead. Since there is no direct documentation in the API that explains any of the `.nodes` or `.node` methods (because they are `networkx`) and I can'd find the merge where the change happened, I have commented on [this SO post](https://stackoverflow.com/questions/46238813/osmnx-get-coordinates-of-nodes-using-osm-id) that ranks high when Googleing \"osmnx get latitude and longitude\". \r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\n\r\nOSx on x86\r\n`Python 3.8.0`\r\n\r\nTried on clean installations of OSMNX with `conda install --strict-channel-priority osmnx=0.10` and `conda install --strict-channel-priority osmnx`. \r\n\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n<details>\r\n# Paste the output of your Python packages and their versions here, between these two \"details\" tags\r\n\r\nappnope                   0.1.0                 py38_1000    conda-forge\r\nattrs                     19.3.0                     py_0    conda-forge\r\nbackcall                  0.1.0                      py_0    conda-forge\r\nbleach                    3.1.0                      py_0    conda-forge\r\nboost-cpp                 1.70.0               h75728bb_2    conda-forge\r\nbranca                    0.3.1                      py_0    conda-forge\r\nbzip2                     1.0.8                h0b31af3_2    conda-forge\r\nca-certificates           2019.11.28           hecc5488_0    conda-forge\r\ncairo                     1.16.0            he1c11cd_1002    conda-forge\r\ncertifi                   2019.11.28               py38_0    conda-forge\r\ncffi                      1.13.2           py38h33e799b_0    conda-forge\r\ncfitsio                   3.470                h84d2f63_2    conda-forge\r\nchardet                   3.0.4                 py38_1003    conda-forge\r\nclick                     7.0                        py_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncryptography              2.8              py38hafa8578_1    conda-forge\r\ncurl                      7.65.3               h22ea746_0    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ndecorator                 4.4.1                      py_0    conda-forge\r\ndefusedxml                0.6.0                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\nentrypoints               0.3                   py38_1000    conda-forge\r\nexpat                     2.2.5             h4a8c4bd_1004    conda-forge\r\nfiona                     1.8.13           py38he71f6a4_0    conda-forge\r\nfolium                    0.10.1                     py_0    conda-forge\r\nfontconfig                2.13.1            h6b1039f_1001    conda-forge\r\nfreetype                  2.10.0               h24853df_1    conda-forge\r\nfreexl                    1.0.5             h1de35cc_1002    conda-forge\r\ngdal                      3.0.2            py38h97c3584_6    conda-forge\r\ngeographiclib             1.50                       py_0    conda-forge\r\ngeopandas                 0.6.2                      py_0    conda-forge\r\ngeopy                     1.20.0                     py_0    conda-forge\r\ngeos                      3.8.0                h4a8c4bd_0    conda-forge\r\ngeotiff                   1.5.1                ha113b03_7    conda-forge\r\ngettext                   0.19.8.1          h46ab8bc_1002    conda-forge\r\ngiflib                    5.1.7                h01d97ff_1    conda-forge\r\nglib                      2.58.3          py38h577aef8_1002    conda-forge\r\nhdf4                      4.2.13            h84186c3_1003    conda-forge\r\nhdf5                      1.10.5          nompi_h3e39495_1104    conda-forge\r\nicu                       64.2                 h6de7cb9_1    conda-forge\r\nidna                      2.8                   py38_1000    conda-forge\r\nimportlib_metadata        1.3.0                    py38_0    conda-forge\r\nipykernel                 5.1.3            py38h5ca1d4c_0    conda-forge\r\nipython                   7.11.1           py38h5ca1d4c_0    conda-forge\r\nipython_genutils          0.2.0                      py_1    conda-forge\r\njedi                      0.15.2                   py38_0    conda-forge\r\njinja2                    2.10.3                     py_0    conda-forge\r\njoblib                    0.14.1                     py_0    conda-forge\r\njpeg                      9c                h1de35cc_1001    conda-forge\r\njson-c                    0.13.1            h1de35cc_1001    conda-forge\r\njson5                     0.8.5                      py_0    conda-forge\r\njsonschema                3.2.0                    py38_0    conda-forge\r\njupyter_client            5.3.3                    py38_1    conda-forge\r\njupyter_core              4.6.1                    py38_0    conda-forge\r\njupyterlab                1.2.4                      py_0    conda-forge\r\njupyterlab_server         1.0.6                      py_0    conda-forge\r\nkealib                    1.4.10            h6659575_1005    conda-forge\r\nkiwisolver                1.1.0            py38ha1b3eb9_0    conda-forge\r\nkrb5                      1.16.4               h1752a42_0    conda-forge\r\nlibblas                   3.8.0               14_openblas    conda-forge\r\nlibcblas                  3.8.0               14_openblas    conda-forge\r\nlibcurl                   7.65.3               h16faf7d_0    conda-forge\r\nlibcxx                    9.0.0                h89e68fa_1    conda-forge\r\nlibdap4                   3.20.4               habf5908_0    conda-forge\r\nlibedit                   3.1.20170329      hcfe32e1_1001    conda-forge\r\nlibffi                    3.2.1             h6de7cb9_1006    conda-forge\r\nlibgdal                   3.0.2                he6cd0a2_6    conda-forge\r\nlibgfortran               4.0.0                         2    conda-forge\r\nlibiconv                  1.15              h01d97ff_1005    conda-forge\r\nlibkml                    1.3.0             hed7d534_1010    conda-forge\r\nliblapack                 3.8.0               14_openblas    conda-forge\r\nlibnetcdf                 4.7.3           nompi_hec86efb_100    conda-forge\r\nlibopenblas               0.3.7                h3d69b6c_6    conda-forge\r\nlibpng                    1.6.37               h2573ce8_0    conda-forge\r\nlibpq                     12.1                 h31a01ba_0    conda-forge\r\nlibsodium                 1.0.17               h01d97ff_0    conda-forge\r\nlibspatialindex           1.9.3                h4a8c4bd_1    conda-forge\r\nlibspatialite             4.3.0a            h9691d84_1033    conda-forge\r\nlibssh2                   1.8.2                hcdc9a53_2    conda-forge\r\nlibtiff                   4.1.0                ha78913b_1    conda-forge\r\nlibwebp                   1.0.2                h20df551_3    conda-forge\r\nlibxml2                   2.9.10               h53d96d6_0    conda-forge\r\nllvm-openmp               9.0.0                h40edb58_0    conda-forge\r\nlz4-c                     1.8.3             h6de7cb9_1001    conda-forge\r\nmarkupsafe                1.1.1            py38h0b31af3_0    conda-forge\r\nmatplotlib                3.1.2                    py38_1    conda-forge\r\nmatplotlib-base           3.1.2            py38h11da6c2_1    conda-forge\r\nmistune                   0.8.4           py38h0b31af3_1000    conda-forge\r\nmore-itertools            8.0.2                      py_0    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nnbconvert                 5.6.1                    py38_0    conda-forge\r\nnbformat                  4.4.0                      py_1    conda-forge\r\nncurses                   6.1               h0a44026_1002    conda-forge\r\nnetworkx                  2.4                        py_0    conda-forge\r\nnotebook                  6.0.1                    py38_0    conda-forge\r\nnumpy                     1.17.3           py38hde6bac1_0    conda-forge\r\nopenjpeg                  2.3.1                hcdae239_3    conda-forge\r\nopenssl                   1.1.1d               h0b31af3_0    conda-forge\r\nosmnx                     0.11.1                     py_0    conda-forge\r\npandas                    0.25.3           py38h4f17bb1_0    conda-forge\r\npandoc                    2.9.1                         0    conda-forge\r\npandocfilters             1.4.2                      py_1    conda-forge\r\nparso                     0.5.2                      py_0    conda-forge\r\npcre                      8.43                 h4a8c4bd_0    conda-forge\r\npexpect                   4.7.0                    py38_0    conda-forge\r\npickleshare               0.7.5                 py38_1000    conda-forge\r\npip                       19.3.1                   py38_0    conda-forge\r\npixman                    0.38.0            h01d97ff_1003    conda-forge\r\npoppler                   0.67.0               h16886b5_8    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.1                 h26bc10f_0    conda-forge\r\nproj                      6.2.1                h773a61f_0    conda-forge\r\nprometheus_client         0.7.1                      py_0    conda-forge\r\nprompt_toolkit            3.0.2                      py_0    conda-forge\r\nptyprocess                0.6.0                   py_1001    conda-forge\r\npycparser                 2.19                     py38_1    conda-forge\r\npygments                  2.5.2                      py_0    conda-forge\r\npymongo                   3.10.0           py38h4a8c4bd_0    conda-forge\r\npyopenssl                 19.1.0                   py38_0    conda-forge\r\npyparsing                 2.4.6                      py_0    conda-forge\r\npyproj                    2.4.2.post1      py38h03a428a_0    conda-forge\r\npyrsistent                0.15.6           py38h0b31af3_0    conda-forge\r\npysocks                   1.7.1                    py38_0    conda-forge\r\npython                    3.8.0                hd366da7_5    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npytz                      2019.3                     py_0    conda-forge\r\npyzmq                     18.1.1           py38h4bf09a9_0    conda-forge\r\nreadline                  8.0                  hcfe32e1_0    conda-forge\r\nrequests                  2.22.0                   py38_1    conda-forge\r\nrtree                     0.9.3            py38h7b0cdae_0    conda-forge\r\nscikit-learn              0.22             py38h3dc85bc_1    conda-forge\r\nscipy                     1.4.1            py38h82752d6_0    conda-forge\r\nsend2trash                1.5.0                      py_0    conda-forge\r\nsetuptools                44.0.0                   py38_0    conda-forge\r\nshapely                   1.6.4           py38h999ffa5_1007    conda-forge\r\nsix                       1.13.0                   py38_0    conda-forge\r\nsqlite                    3.30.1               h93121df_0    conda-forge\r\ntbb                       2018.0.5             h2d50403_0    conda-forge\r\nterminado                 0.8.3                    py38_0    conda-forge\r\ntestpath                  0.4.4                      py_0    conda-forge\r\ntiledb                    1.7.0                hd5e958f_2    conda-forge\r\ntk                        8.6.10               hbbe82c9_0    conda-forge\r\ntornado                   6.0.3            py38h0b31af3_0    conda-forge\r\ntraitlets                 4.3.3                    py38_0    conda-forge\r\ntzcode                    2019a             h01d97ff_1002    conda-forge\r\nurllib3                   1.25.7                   py38_0    conda-forge\r\nvincent                   0.4.4                      py_1    conda-forge\r\nwcwidth                   0.1.7                      py_1    conda-forge\r\nwebencodings              0.5.1                      py_1    conda-forge\r\nwheel                     0.33.6                   py38_0    conda-forge\r\nxerces-c                  3.2.2             hbda6038_1004    conda-forge\r\nxz                        5.2.4             h1de35cc_1001    conda-forge\r\nzeromq                    4.3.2                h6de7cb9_2    conda-forge\r\nzipp                      0.6.0                      py_0    conda-forge\r\nzlib                      1.2.11            h0b31af3_1006    conda-forge\r\nzstd                      1.4.4                he7fca8b_1    conda-forge\r\n\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/362", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/362/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/362/events", "html_url": "https://github.com/gboeing/osmnx/issues/362", "id": 544971042, "node_id": "MDU6SXNzdWU1NDQ5NzEwNDI=", "number": 362, "title": "'MultiDiGraph' object has no attribute 'node'", "user": {"login": "tomonodes", "id": 54804349, "node_id": "MDQ6VXNlcjU0ODA0MzQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/54804349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomonodes", "html_url": "https://github.com/tomonodes", "followers_url": "https://api.github.com/users/tomonodes/followers", "following_url": "https://api.github.com/users/tomonodes/following{/other_user}", "gists_url": "https://api.github.com/users/tomonodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomonodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomonodes/subscriptions", "organizations_url": "https://api.github.com/users/tomonodes/orgs", "repos_url": "https://api.github.com/users/tomonodes/repos", "events_url": "https://api.github.com/users/tomonodes/events{/privacy}", "received_events_url": "https://api.github.com/users/tomonodes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-03T12:16:01Z", "updated_at": "2020-01-03T12:17:09Z", "closed_at": "2020-01-03T12:17:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\n\r\nTrying to reproduce the answer found [here](https://github.com/gboeing/osmnx/issues/340#issuecomment-547021812). \r\n\r\n```\r\nimport osmnx as ox\r\n\r\nG = ox.graph_from_place('Piedmont, CA, USA', network_type='drive')\r\nnode_id = list(G.nodes())[0]\r\nG.node[node_id]['x'] #lon\r\nG.node[node_id]['y'] #lat\r\n```\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-9-ed3044f93f71> in <module>\r\n      3 G = ox.graph_from_place('Piedmont, CA, USA', network_type='drive')\r\n      4 node_id = list(G.nodes())[0]\r\n----> 5 G.node[node_id]['x'] #lon\r\n      6 G.node[node_id]['y'] #lat\r\n\r\nAttributeError: 'MultiDiGraph' object has no attribute 'node'\r\n```\r\n\r\nWorks fine when converting to gdf:\r\n\r\n```\r\nnodes = ox.graph_to_gdfs(G, edges=False)\r\nnodes[['x', 'y']]\r\n```\r\n\r\nIt seems that somewhere the `node` method as become `nodes` instead. Since there is no direct documentation in the package that explains any of the methods and I can'd find the merge where the change happened, I have added a comment to [this SO post](https://stackoverflow.com/questions/46238813/osmnx-get-coordinates-of-nodes-using-osm-id) that ranks high when Googleing \"osmnx get latitude and longitude\".\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\n\r\nOSx on x86\r\n`Python 3.8.0`\r\n\r\nTried on clean installations of OSMNX with `conda install --strict-channel-priority osmnx=0.10` and `conda install --strict-channel-priority osmnx`. \r\n\r\n\r\n#### Complete list of your environment's packages and their versions (for example, run `conda list` or `pip list` then paste the output below, between the two \"details\" tags)\r\n\r\n<details>\r\n# Paste the output of your Python packages and their versions here, between these two \"details\" tags\r\n\r\nappnope                   0.1.0                 py38_1000    conda-forge\r\nattrs                     19.3.0                     py_0    conda-forge\r\nbackcall                  0.1.0                      py_0    conda-forge\r\nbleach                    3.1.0                      py_0    conda-forge\r\nboost-cpp                 1.70.0               h75728bb_2    conda-forge\r\nbranca                    0.3.1                      py_0    conda-forge\r\nbzip2                     1.0.8                h0b31af3_2    conda-forge\r\nca-certificates           2019.11.28           hecc5488_0    conda-forge\r\ncairo                     1.16.0            he1c11cd_1002    conda-forge\r\ncertifi                   2019.11.28               py38_0    conda-forge\r\ncffi                      1.13.2           py38h33e799b_0    conda-forge\r\ncfitsio                   3.470                h84d2f63_2    conda-forge\r\nchardet                   3.0.4                 py38_1003    conda-forge\r\nclick                     7.0                        py_0    conda-forge\r\nclick-plugins             1.1.1                      py_0    conda-forge\r\ncligj                     0.5.0                      py_0    conda-forge\r\ncryptography              2.8              py38hafa8578_1    conda-forge\r\ncurl                      7.65.3               h22ea746_0    conda-forge\r\ncycler                    0.10.0                     py_2    conda-forge\r\ndecorator                 4.4.1                      py_0    conda-forge\r\ndefusedxml                0.6.0                      py_0    conda-forge\r\ndescartes                 1.1.0                      py_4    conda-forge\r\nentrypoints               0.3                   py38_1000    conda-forge\r\nexpat                     2.2.5             h4a8c4bd_1004    conda-forge\r\nfiona                     1.8.13           py38he71f6a4_0    conda-forge\r\nfolium                    0.10.1                     py_0    conda-forge\r\nfontconfig                2.13.1            h6b1039f_1001    conda-forge\r\nfreetype                  2.10.0               h24853df_1    conda-forge\r\nfreexl                    1.0.5             h1de35cc_1002    conda-forge\r\ngdal                      3.0.2            py38h97c3584_6    conda-forge\r\ngeographiclib             1.50                       py_0    conda-forge\r\ngeopandas                 0.6.2                      py_0    conda-forge\r\ngeopy                     1.20.0                     py_0    conda-forge\r\ngeos                      3.8.0                h4a8c4bd_0    conda-forge\r\ngeotiff                   1.5.1                ha113b03_7    conda-forge\r\ngettext                   0.19.8.1          h46ab8bc_1002    conda-forge\r\ngiflib                    5.1.7                h01d97ff_1    conda-forge\r\nglib                      2.58.3          py38h577aef8_1002    conda-forge\r\nhdf4                      4.2.13            h84186c3_1003    conda-forge\r\nhdf5                      1.10.5          nompi_h3e39495_1104    conda-forge\r\nicu                       64.2                 h6de7cb9_1    conda-forge\r\nidna                      2.8                   py38_1000    conda-forge\r\nimportlib_metadata        1.3.0                    py38_0    conda-forge\r\nipykernel                 5.1.3            py38h5ca1d4c_0    conda-forge\r\nipython                   7.11.1           py38h5ca1d4c_0    conda-forge\r\nipython_genutils          0.2.0                      py_1    conda-forge\r\njedi                      0.15.2                   py38_0    conda-forge\r\njinja2                    2.10.3                     py_0    conda-forge\r\njoblib                    0.14.1                     py_0    conda-forge\r\njpeg                      9c                h1de35cc_1001    conda-forge\r\njson-c                    0.13.1            h1de35cc_1001    conda-forge\r\njson5                     0.8.5                      py_0    conda-forge\r\njsonschema                3.2.0                    py38_0    conda-forge\r\njupyter_client            5.3.3                    py38_1    conda-forge\r\njupyter_core              4.6.1                    py38_0    conda-forge\r\njupyterlab                1.2.4                      py_0    conda-forge\r\njupyterlab_server         1.0.6                      py_0    conda-forge\r\nkealib                    1.4.10            h6659575_1005    conda-forge\r\nkiwisolver                1.1.0            py38ha1b3eb9_0    conda-forge\r\nkrb5                      1.16.4               h1752a42_0    conda-forge\r\nlibblas                   3.8.0               14_openblas    conda-forge\r\nlibcblas                  3.8.0               14_openblas    conda-forge\r\nlibcurl                   7.65.3               h16faf7d_0    conda-forge\r\nlibcxx                    9.0.0                h89e68fa_1    conda-forge\r\nlibdap4                   3.20.4               habf5908_0    conda-forge\r\nlibedit                   3.1.20170329      hcfe32e1_1001    conda-forge\r\nlibffi                    3.2.1             h6de7cb9_1006    conda-forge\r\nlibgdal                   3.0.2                he6cd0a2_6    conda-forge\r\nlibgfortran               4.0.0                         2    conda-forge\r\nlibiconv                  1.15              h01d97ff_1005    conda-forge\r\nlibkml                    1.3.0             hed7d534_1010    conda-forge\r\nliblapack                 3.8.0               14_openblas    conda-forge\r\nlibnetcdf                 4.7.3           nompi_hec86efb_100    conda-forge\r\nlibopenblas               0.3.7                h3d69b6c_6    conda-forge\r\nlibpng                    1.6.37               h2573ce8_0    conda-forge\r\nlibpq                     12.1                 h31a01ba_0    conda-forge\r\nlibsodium                 1.0.17               h01d97ff_0    conda-forge\r\nlibspatialindex           1.9.3                h4a8c4bd_1    conda-forge\r\nlibspatialite             4.3.0a            h9691d84_1033    conda-forge\r\nlibssh2                   1.8.2                hcdc9a53_2    conda-forge\r\nlibtiff                   4.1.0                ha78913b_1    conda-forge\r\nlibwebp                   1.0.2                h20df551_3    conda-forge\r\nlibxml2                   2.9.10               h53d96d6_0    conda-forge\r\nllvm-openmp               9.0.0                h40edb58_0    conda-forge\r\nlz4-c                     1.8.3             h6de7cb9_1001    conda-forge\r\nmarkupsafe                1.1.1            py38h0b31af3_0    conda-forge\r\nmatplotlib                3.1.2                    py38_1    conda-forge\r\nmatplotlib-base           3.1.2            py38h11da6c2_1    conda-forge\r\nmistune                   0.8.4           py38h0b31af3_1000    conda-forge\r\nmore-itertools            8.0.2                      py_0    conda-forge\r\nmunch                     2.5.0                      py_0    conda-forge\r\nnbconvert                 5.6.1                    py38_0    conda-forge\r\nnbformat                  4.4.0                      py_1    conda-forge\r\nncurses                   6.1               h0a44026_1002    conda-forge\r\nnetworkx                  2.4                        py_0    conda-forge\r\nnotebook                  6.0.1                    py38_0    conda-forge\r\nnumpy                     1.17.3           py38hde6bac1_0    conda-forge\r\nopenjpeg                  2.3.1                hcdae239_3    conda-forge\r\nopenssl                   1.1.1d               h0b31af3_0    conda-forge\r\nosmnx                     0.11.1                     py_0    conda-forge\r\npandas                    0.25.3           py38h4f17bb1_0    conda-forge\r\npandoc                    2.9.1                         0    conda-forge\r\npandocfilters             1.4.2                      py_1    conda-forge\r\nparso                     0.5.2                      py_0    conda-forge\r\npcre                      8.43                 h4a8c4bd_0    conda-forge\r\npexpect                   4.7.0                    py38_0    conda-forge\r\npickleshare               0.7.5                 py38_1000    conda-forge\r\npip                       19.3.1                   py38_0    conda-forge\r\npixman                    0.38.0            h01d97ff_1003    conda-forge\r\npoppler                   0.67.0               h16886b5_8    conda-forge\r\npoppler-data              0.4.9                         1    conda-forge\r\npostgresql                12.1                 h26bc10f_0    conda-forge\r\nproj                      6.2.1                h773a61f_0    conda-forge\r\nprometheus_client         0.7.1                      py_0    conda-forge\r\nprompt_toolkit            3.0.2                      py_0    conda-forge\r\nptyprocess                0.6.0                   py_1001    conda-forge\r\npycparser                 2.19                     py38_1    conda-forge\r\npygments                  2.5.2                      py_0    conda-forge\r\npymongo                   3.10.0           py38h4a8c4bd_0    conda-forge\r\npyopenssl                 19.1.0                   py38_0    conda-forge\r\npyparsing                 2.4.6                      py_0    conda-forge\r\npyproj                    2.4.2.post1      py38h03a428a_0    conda-forge\r\npyrsistent                0.15.6           py38h0b31af3_0    conda-forge\r\npysocks                   1.7.1                    py38_0    conda-forge\r\npython                    3.8.0                hd366da7_5    conda-forge\r\npython-dateutil           2.8.1                      py_0    conda-forge\r\npytz                      2019.3                     py_0    conda-forge\r\npyzmq                     18.1.1           py38h4bf09a9_0    conda-forge\r\nreadline                  8.0                  hcfe32e1_0    conda-forge\r\nrequests                  2.22.0                   py38_1    conda-forge\r\nrtree                     0.9.3            py38h7b0cdae_0    conda-forge\r\nscikit-learn              0.22             py38h3dc85bc_1    conda-forge\r\nscipy                     1.4.1            py38h82752d6_0    conda-forge\r\nsend2trash                1.5.0                      py_0    conda-forge\r\nsetuptools                44.0.0                   py38_0    conda-forge\r\nshapely                   1.6.4           py38h999ffa5_1007    conda-forge\r\nsix                       1.13.0                   py38_0    conda-forge\r\nsqlite                    3.30.1               h93121df_0    conda-forge\r\ntbb                       2018.0.5             h2d50403_0    conda-forge\r\nterminado                 0.8.3                    py38_0    conda-forge\r\ntestpath                  0.4.4                      py_0    conda-forge\r\ntiledb                    1.7.0                hd5e958f_2    conda-forge\r\ntk                        8.6.10               hbbe82c9_0    conda-forge\r\ntornado                   6.0.3            py38h0b31af3_0    conda-forge\r\ntraitlets                 4.3.3                    py38_0    conda-forge\r\ntzcode                    2019a             h01d97ff_1002    conda-forge\r\nurllib3                   1.25.7                   py38_0    conda-forge\r\nvincent                   0.4.4                      py_1    conda-forge\r\nwcwidth                   0.1.7                      py_1    conda-forge\r\nwebencodings              0.5.1                      py_1    conda-forge\r\nwheel                     0.33.6                   py38_0    conda-forge\r\nxerces-c                  3.2.2             hbda6038_1004    conda-forge\r\nxz                        5.2.4             h1de35cc_1001    conda-forge\r\nzeromq                    4.3.2                h6de7cb9_2    conda-forge\r\nzipp                      0.6.0                      py_0    conda-forge\r\nzlib                      1.2.11            h0b31af3_1006    conda-forge\r\nzstd                      1.4.4                he7fca8b_1    conda-forge\r\n\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/360", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/360/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/360/events", "html_url": "https://github.com/gboeing/osmnx/issues/360", "id": 544116881, "node_id": "MDU6SXNzdWU1NDQxMTY4ODE=", "number": 360, "title": "Inconsistencies in get_nearest_edge(s)", "user": {"login": "TMorville", "id": 4254061, "node_id": "MDQ6VXNlcjQyNTQwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4254061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TMorville", "html_url": "https://github.com/TMorville", "followers_url": "https://api.github.com/users/TMorville/followers", "following_url": "https://api.github.com/users/TMorville/following{/other_user}", "gists_url": "https://api.github.com/users/TMorville/gists{/gist_id}", "starred_url": "https://api.github.com/users/TMorville/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TMorville/subscriptions", "organizations_url": "https://api.github.com/users/TMorville/orgs", "repos_url": "https://api.github.com/users/TMorville/repos", "events_url": "https://api.github.com/users/TMorville/events{/privacy}", "received_events_url": "https://api.github.com/users/TMorville/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165091, "node_id": "MDU6TGFiZWw0MTMxNjUwOTE=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/bug", "name": "bug", "color": "e99695", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-31T07:41:43Z", "updated_at": "2020-01-01T18:28:33Z", "closed_at": "2020-01-01T01:05:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, thanks for making this package and maintaining it. It's really great work.\r\n\r\n#### Problem description (what did you do, what did you expect to happen, and what actually happened)\r\n\r\nI have two issues with the `get_nearest_edges` method. One may be a bug and the other one seems like a performance issue.\r\n\r\nFirst, in [the documentation](https://osmnx.readthedocs.io/en/stable/osmnx.html) under `get_nearest_edges` is states that input should be X,Y or longitude latitude. However. the default method `None`, calls `get_nearest_edge` which is Y,X (latitude longitude). This results in errornous output without any warning when setting a new method.\r\n\r\nSecond, the performance of both `kdtree` and `balltree` seem identical, and both seem slower than `None`?\r\n\r\nThe following code reproduces both the bugs and the performance issue.\r\n\r\n```\r\n    graph = ox.graph_from_place('Copenhagen Municipality, Denmark')\r\n\r\n    lat = [55.67271538, 55.67333957, 55.67134307, 55.67340924, 55.67390186]\r\n    lng = [12.5893237, 12.59032014, 12.58719633, 12.59043931, 12.59126821]\r\n    \r\n    methods = [None, 'kdtree', 'balltree']\r\n    \r\n    for m in methods:\r\n        t0 = time.time()\r\n\r\n        ne = ox.get_nearest_edges(graph, lng, lat, method=m)\r\n        \r\n        t1 = time.time()\r\n        \r\n        print(m, t1-t0)\r\n        print(ne)\r\n```\r\n```\r\nNone 22.455718994140625\r\n[[282416810 282416811]\r\n [282416810 282416811]\r\n [282416810 282416811]\r\n [282416810 282416811]\r\n [282416810 282416811]]\r\nkdtree 42.809242725372314\r\n[[ 257790076    8891513]\r\n [   8891513    8891514]\r\n [1236259018 1236557323]\r\n [   8891513    8891514]\r\n [   8891513    8891514]]\r\nballtree 41.82496619224548\r\n[[ 257790076    8891513]\r\n [   8891513    8891514]\r\n [1236557323 1236259018]\r\n [   8891513    8891514]\r\n [   8891513    8891514]]\r\n```\r\n\r\nIt's seems clear that the output when using `None` is wrong. Also, it seems that `kdtree` and `balltree` have similar performance. I've reproduced the performance issue on much larger sets of data as well.\r\n\r\nWhen changing the order of `lat, lng` coordinates, results from `None` are correct, but performance of the other two methods deteriorate even more.\r\n\r\n```\r\nNone 21.603910207748413\r\n[[ 257790076    8891513]\r\n [   8891513    8891514]\r\n [1236557323 1236259018]\r\n [   8891513    8891514]\r\n [   8891513    8891514]]\r\nkdtree 58.87358808517456\r\n[[282416811 282416810]\r\n [282416811 282416810]\r\n [282416811 282416810]\r\n [282416811 282416810]\r\n [282416811 282416810]]\r\nballtree 72.93773794174194\r\n[[282416811 282416810]\r\n [282416811 282416810]\r\n [282416811 282416810]\r\n [282416811 282416810]\r\n [282416811 282416810]]\r\n```\r\n\r\n#### What operating system, architecture, Python version, and OSMnx version are you using?\r\n\r\n`osmnx==0.10`\r\n\r\n`Python 3.7.3`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/358", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/358/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/358/events", "html_url": "https://github.com/gboeing/osmnx/issues/358", "id": 539057581, "node_id": "MDU6SXNzdWU1MzkwNTc1ODE=", "number": 358, "title": "Simplify MultiGraph leads to error: 'MultiGraph' object has no attribute 'predecessors'", "user": {"login": "swiss-knight", "id": 19967599, "node_id": "MDQ6VXNlcjE5OTY3NTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/19967599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swiss-knight", "html_url": "https://github.com/swiss-knight", "followers_url": "https://api.github.com/users/swiss-knight/followers", "following_url": "https://api.github.com/users/swiss-knight/following{/other_user}", "gists_url": "https://api.github.com/users/swiss-knight/gists{/gist_id}", "starred_url": "https://api.github.com/users/swiss-knight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swiss-knight/subscriptions", "organizations_url": "https://api.github.com/users/swiss-knight/orgs", "repos_url": "https://api.github.com/users/swiss-knight/repos", "events_url": "https://api.github.com/users/swiss-knight/events{/privacy}", "received_events_url": "https://api.github.com/users/swiss-knight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-17T13:12:24Z", "updated_at": "2019-12-17T16:04:45Z", "closed_at": "2019-12-17T16:04:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\nHere is a small error I encountered while trying to simplify a MultiGraph.\r\n\r\n#### Problem description:\r\nI am trying to simplify a MultiGraph using `osmnx.simplify_graph()`.\r\n\r\n#### Environment:\r\nUbuntu 18.04 64bit, 5.0.0-37-generic x86_64 GNU/Linux.\r\nPython 3.6.9\r\nOsmnx : 0.10\r\nNetworkX: 2.4\r\nNumpy: 1.17.4\r\niPython: 7.8.0\r\nnotebook: 5.7.7 \r\ngeopandas: 0.6.1\r\npandas: 0.25.3\r\nmatplotlib: 3.1.2\r\n\r\n#### Code snippet that independently and completely reproduces the issue:\r\n\r\n```\r\nSIMPLIFY = True\r\n# Download any MultiDiGraph as variable G (for example using `osmnx.graph_from_bbox()` with the attribute `simplify=False` to keep all original OSM nodes) from OSM prior to the following:\r\n# G = G.to_undirected()  # uncomment this line to reproduce the error\r\nif SIMPLIFY and not ox.is_simplified(G):\r\n    print(\"Simplifying graph...\")\r\n    ox.simplify_graph(G)\r\n    print(\"Simplification finished.\")\r\nelse:\r\n    print(\"Simplification was not needed; graph was already simplified.\")\r\n```\r\nIf the `G = G.to_undirected()` step is uncommented, it produces the following error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-47-0771efe8a5e0> in <module>\r\n      3     if SIMPLIFY and not ox.is_simplified(G):\r\n      4         print(\"Simplifying graph...\")\r\n----> 5         ox.simplify_graph(G)\r\n      6         print(\"Simplification finished.\")\r\n      7     else:\r\n\r\n/usr/local/lib/python3.6/dist-packages/osmnx/simplify.py in simplify_graph(G, strict)\r\n    237 \r\n    238     # construct a list of all the paths that need to be simplified\r\n--> 239     paths = get_paths_to_simplify(G, strict=strict)\r\n    240 \r\n    241     start_time = time.time()\r\n\r\n/usr/local/lib/python3.6/dist-packages/osmnx/simplify.py in get_paths_to_simplify(G, strict)\r\n    155     # first identify all the nodes that are endpoints\r\n    156     start_time = time.time()\r\n--> 157     endpoints = set([node for node in G.nodes() if is_endpoint(G, node, strict=strict)])\r\n    158     log('Identified {:,} edge endpoints in {:,.2f} seconds'.format(len(endpoints), time.time()-start_time))\r\n    159 \r\n\r\n/usr/local/lib/python3.6/dist-packages/osmnx/simplify.py in <listcomp>(.0)\r\n    155     # first identify all the nodes that are endpoints\r\n    156     start_time = time.time()\r\n--> 157     endpoints = set([node for node in G.nodes() if is_endpoint(G, node, strict=strict)])\r\n    158     log('Identified {:,} edge endpoints in {:,.2f} seconds'.format(len(endpoints), time.time()-start_time))\r\n    159 \r\n\r\n/usr/local/lib/python3.6/dist-packages/osmnx/simplify.py in is_endpoint(G, node, strict)\r\n     44 \r\n     45     \"\"\"\r\n---> 46     neighbors = set(list(G.predecessors(node)) + list(G.successors(node)))\r\n     47     n = len(neighbors)\r\n     48     d = G.degree(node)\r\n\r\nAttributeError: 'MultiGraph' object has no attribute 'predecessors'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/357", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/357/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/357/events", "html_url": "https://github.com/gboeing/osmnx/issues/357", "id": 535489776, "node_id": "MDU6SXNzdWU1MzU0ODk3NzY=", "number": 357, "title": "Continuing the separation between OSMNx features", "user": {"login": "pedrocamargo", "id": 7377666, "node_id": "MDQ6VXNlcjczNzc2NjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7377666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pedrocamargo", "html_url": "https://github.com/pedrocamargo", "followers_url": "https://api.github.com/users/pedrocamargo/followers", "following_url": "https://api.github.com/users/pedrocamargo/following{/other_user}", "gists_url": "https://api.github.com/users/pedrocamargo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pedrocamargo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pedrocamargo/subscriptions", "organizations_url": "https://api.github.com/users/pedrocamargo/orgs", "repos_url": "https://api.github.com/users/pedrocamargo/repos", "events_url": "https://api.github.com/users/pedrocamargo/events{/privacy}", "received_events_url": "https://api.github.com/users/pedrocamargo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-10T04:44:44Z", "updated_at": "2019-12-10T10:16:59Z", "closed_at": "2019-12-10T10:16:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After looking into the code for version 0.11, it is clear that refactoring the code does not achieve the objective of being able to use OSMNx only for downloading OSM data while getting around the tricky dependencies that OSMNx has in order to support its full functionality (Fiona, Shapely, Rtree).\r\n\r\nCould we turn those dependencies as optional and allow the software to be installed without its full functionality?\r\n\r\n__init__.py would look something like the code below, and requirements.txt would be broken accordingly.\r\n\r\nimport importlib.util as iutil\r\nfrom warnings import warn\r\nfrom .utils import *\r\nfrom .downloader import *\r\n\r\nprocessing_packages = [\"descartes\", \"geopandas\", \"matplotlib\", \"networkx\", \"pandas\", \"Rtree\", \"Shapely\"]\r\n\r\nmissing_packages = []\r\nfor pkg in processing_packages:\r\n    spec = iutil.find_spec(pkg)\r\n    if spec is None:\r\n        missing_packages.append(pkg)\r\n\r\nif missing_packages:\r\n    warn('Not all dependencies are installed. For full support, please install: {}'.format(\r\n        ', '.join(missing_packages)))\r\nelse:\r\n    from .core import *\r\n    from .elevation import *\r\n    from .footprints import *\r\n    from .plot import *\r\n    from .pois import *\r\n    from .projection import *\r\n    from .save_load import *\r\n    from .simplify import *\r\n    from .stats import *\r\n    from .geo_utils import *\r\n\r\n__version__ = '0.11dev'\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/356", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/356/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/356/events", "html_url": "https://github.com/gboeing/osmnx/issues/356", "id": 534459071, "node_id": "MDU6SXNzdWU1MzQ0NTkwNzE=", "number": 356, "title": "Fix duplicate edges in save_graph_osm()", "user": {"login": "mxndrwgrdnr", "id": 1395651, "node_id": "MDQ6VXNlcjEzOTU2NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1395651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mxndrwgrdnr", "html_url": "https://github.com/mxndrwgrdnr", "followers_url": "https://api.github.com/users/mxndrwgrdnr/followers", "following_url": "https://api.github.com/users/mxndrwgrdnr/following{/other_user}", "gists_url": "https://api.github.com/users/mxndrwgrdnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mxndrwgrdnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mxndrwgrdnr/subscriptions", "organizations_url": "https://api.github.com/users/mxndrwgrdnr/orgs", "repos_url": "https://api.github.com/users/mxndrwgrdnr/repos", "events_url": "https://api.github.com/users/mxndrwgrdnr/events{/privacy}", "received_events_url": "https://api.github.com/users/mxndrwgrdnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-12-07T22:08:21Z", "updated_at": "2020-01-07T21:45:40Z", "closed_at": "2020-01-07T21:45:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I originally wrote this function, I didn't realize that the edges dataframe generated by `ox.graph_to_gdfs()` will contain multiple rows with the same `osmid` for any way that is associate with more than two nodes. As such, save_graph_osm() will generate XML like\r\n```\r\n<way id=\"123456789\"/>\r\n  <nd ref=\"1\"/>\r\n  <nd ref=\"2\"/>\r\n  <tag k=\"highway\" v=\"residential\"/>\r\n</way>\r\n<way id=\"123456789\"/>\r\n  <nd ref=\"2\"/>\r\n  <nd ref=\"3\"/>\r\n <tag k=\"highway\" v=\"residential\"/>\r\n</way>\r\n<way id=\"123456789\"/>\r\n  <nd ref=\"3\"/>\r\n  <nd ref=\"4\"/>\r\n  <tag k=\"highway\" v=\"residential\"/> \r\n</way>\r\n```\r\ninstead of \r\n```\r\n<way id=\"123456789\"/>\r\n  <nd ref=\"1\"/>\r\n  <nd ref=\"2\"/>\r\n  <nd ref=\"3\"/>\r\n  <nd ref=\"4\"/>\r\n  <tag k=\"highway\" v=\"residential\"/>\r\n</way>\r\n```\r\nThe XML will still validate, as was documented in the original PR, but it doesn't technically conform to the OSM XML design schema, nor is it the most efficient way of storing the data. Furthermore I'm just not sure what this might do for any downstream processes (e.g. routers) that make use of this re-formatted file. \r\n\r\nIn practice, this should be a straightforward fix, edit [this](https://github.com/gboeing/osmnx/blob/master/osmnx/save_load.py#L217-L224) chunk of code to check whether or not the tree already contains an edge with that id and if so just add the new nodes to it rather than creating a whole new way. However, according to the OSM wiki, OSM XML requires that the `<nd/>` tags be listed \"in the correct order\" (see the last sentence [here](https://wiki.openstreetmap.org/wiki/Way#Street_as_a_vector), and I'm unsure if its possible to infer that order from the order in which the duplicate `osmid` ways appear in the edges table.. \r\n\r\nSo, my questions are two-fold:\r\n1. Is this a big enough problem to worry about fixing?\r\n2. If so, is it possible to recover the correct node order from either the edges table or the original NetworkX graph object?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/355", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/355/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/355/events", "html_url": "https://github.com/gboeing/osmnx/issues/355", "id": 533471227, "node_id": "MDU6SXNzdWU1MzM0NzEyMjc=", "number": 355, "title": "Error when loading street network from poligon", "user": {"login": "AlbertoMCS", "id": 16774169, "node_id": "MDQ6VXNlcjE2Nzc0MTY5", "avatar_url": "https://avatars2.githubusercontent.com/u/16774169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlbertoMCS", "html_url": "https://github.com/AlbertoMCS", "followers_url": "https://api.github.com/users/AlbertoMCS/followers", "following_url": "https://api.github.com/users/AlbertoMCS/following{/other_user}", "gists_url": "https://api.github.com/users/AlbertoMCS/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlbertoMCS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlbertoMCS/subscriptions", "organizations_url": "https://api.github.com/users/AlbertoMCS/orgs", "repos_url": "https://api.github.com/users/AlbertoMCS/repos", "events_url": "https://api.github.com/users/AlbertoMCS/events{/privacy}", "received_events_url": "https://api.github.com/users/AlbertoMCS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-05T16:49:56Z", "updated_at": "2019-12-05T19:23:06Z", "closed_at": "2019-12-05T19:23:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi , \r\nI am following this post: https://geoffboeing.com/2016/11/osmnx-python-street-networks/#comment-42748 and replicating it. \r\n\r\nI want to get street network from a polygon I created. \r\nI loaded the polygon with geopandas and I wrote the code provided in the post but I get an error, here my code: \r\n\r\n`df1 = gdp.read_file('C:/Users/ATELLO/Desktop/shapefile/prueba.shp')\r\nK = ox.graph_from_polygon(df1, network_type='all')\r\n`\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-117-841b96eb89e7> in <module>()\r\n      1 df1 = gdp.read_file('C:/Users/ATELLO/Desktop/shapefile/prueba.shp')\r\n----> 2 K = ox.graph_from_polygon(df1, network_type='all')\r\n\r\nC:\\Program Files\\Anaconda3\\lib\\site-packages\\osmnx\\core.py in graph_from_polygon(polygon, network_type, simplify, retain_all, truncate_by_edge, name, timeout, memory, max_query_area_size, clean_periphery, infrastructure, custom_filter)\r\n   1296     # verify that the geometry is valid and is a shapely Polygon/MultiPolygon\r\n   1297     # before proceeding\r\n-> 1298     if not polygon.is_valid:\r\n   1299         raise TypeError('Shape does not have a valid geometry')\r\n   1300     if not isinstance(polygon, (Polygon, MultiPolygon)):\r\n\r\nC:\\Program Files\\Anaconda3\\lib\\site-packages\\pandas\\core\\generic.py in __nonzero__(self)\r\n   1553             \"The truth value of a {0} is ambiguous. \"\r\n   1554             \"Use a.empty, a.bool(), a.item(), a.any() or a.all().\".format(\r\n-> 1555                 self.__class__.__name__\r\n   1556             )\r\n   1557         )\r\n\r\nValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().\r\n\r\nMany thanks!,\r\nAlberto.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/354", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/354/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/354/events", "html_url": "https://github.com/gboeing/osmnx/issues/354", "id": 530567329, "node_id": "MDU6SXNzdWU1MzA1NjczMjk=", "number": 354, "title": "Why the shortest path length smaller than the distance between two point??", "user": {"login": "lmingde", "id": 38581341, "node_id": "MDQ6VXNlcjM4NTgxMzQx", "avatar_url": "https://avatars0.githubusercontent.com/u/38581341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmingde", "html_url": "https://github.com/lmingde", "followers_url": "https://api.github.com/users/lmingde/followers", "following_url": "https://api.github.com/users/lmingde/following{/other_user}", "gists_url": "https://api.github.com/users/lmingde/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmingde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmingde/subscriptions", "organizations_url": "https://api.github.com/users/lmingde/orgs", "repos_url": "https://api.github.com/users/lmingde/repos", "events_url": "https://api.github.com/users/lmingde/events{/privacy}", "received_events_url": "https://api.github.com/users/lmingde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-30T11:30:07Z", "updated_at": "2019-11-30T11:56:34Z", "closed_at": "2019-11-30T11:56:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI, I use the `nx.shortest_path_length()` to get the length of the shortest path between two points, but I find it smaller than the straight-line length between two points:\r\nBTW, I wonder what the unit message of the shortest path length? Kilometer\uff1f Hundred meters\uff1f Meter? \r\nMy codes:\r\n```python\r\nonline_graph = ox.graph_from_place('Nanshan, Shenzhen, China',network_type='drive_service')\r\ngraph_proj = ox.project_graph(online_graph)\r\nnodes,edegs = ox.graph_to_gdfs(graph_proj)\r\nind1,ind2 = np.random.choice(len(nodes),2,replace=False)\r\nid1,id2 = nodes.iloc[ind1]['osmid'],nodes.iloc[ind2]['osmid']\r\nnode1,node2 = nodes.iloc[ind1]['geometry'],nodes.iloc[ind2]['geometry']\r\nprint('the distance between two point:',node1.distance(node2),'the shortes path length:',nx.shortest_path_length(graph_proj,id1,id2))\r\nroute = nx.shortest_path(graph_proj,id1,id2)\r\nselections = nodes.iloc[[ind1,ind2]]\r\nox.plot_graph_route(graph_proj,route,fig_height=10,fig_width=10,)\r\n```\r\n\r\nIn my Ipython:\r\n![osmnx_dist_error](https://user-images.githubusercontent.com/38581341/69899823-b5928a00-13a6-11ea-9d4a-91f15b729db1.png)\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/353", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/353/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/353/events", "html_url": "https://github.com/gboeing/osmnx/issues/353", "id": 530528087, "node_id": "MDU6SXNzdWU1MzA1MjgwODc=", "number": 353, "title": "Error in plot_graph after read graph from file", "user": {"login": "lmingde", "id": 38581341, "node_id": "MDQ6VXNlcjM4NTgxMzQx", "avatar_url": "https://avatars0.githubusercontent.com/u/38581341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmingde", "html_url": "https://github.com/lmingde", "followers_url": "https://api.github.com/users/lmingde/followers", "following_url": "https://api.github.com/users/lmingde/following{/other_user}", "gists_url": "https://api.github.com/users/lmingde/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmingde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmingde/subscriptions", "organizations_url": "https://api.github.com/users/lmingde/orgs", "repos_url": "https://api.github.com/users/lmingde/repos", "events_url": "https://api.github.com/users/lmingde/events{/privacy}", "received_events_url": "https://api.github.com/users/lmingde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-30T03:47:23Z", "updated_at": "2019-12-04T01:47:10Z", "closed_at": "2019-12-04T01:47:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi, I get graph by `ox.graph_from_palce()` then save it to osm.file and read it, but I meet problem in plot the graph which read from osm file, here are my codes:\r\n```python\r\nonline_graph = ox.graph_from_place('Nanshan, Shenzhen, China',network_type='drive_service')\r\ngraph_proj = ox.project_graph(online_graph)\r\nox.plot_graph(graph_proj)\r\nox.save_graph_osm(graph_proj,filename='nanshan_proj_drive_service.osm')\r\nnanshan = ox.graph_from_file('./data/nanshan_proj_drive_service.osm')\r\nox.plot_graph(nanshan)\r\n```\r\n\r\nError:\r\n![osmnx_plot_problem](https://user-images.githubusercontent.com/38581341/69895220-f9fe3580-1366-11ea-915d-7018742976f7.png)\r\n\r\n```shell\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-17-21eab64c0ba7> in <module>\r\n      1 nanshan = ox.graph_from_file('./data/nanshan_proj_drive_service.osm')\r\n----> 2 ox.plot_graph(nanshan)\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\osmnx\\plot.py in plot_graph(G, bbox, fig_height, fig_width, margin, axis_off, equal_aspect, bgcolor, show, save, close, file_format, filename, dpi, annotate, node_color, node_size, node_alpha, node_edgecolor, node_zorder, edge_color, edge_linewidth, edge_alpha, use_geom)\r\n    433             coslat = np.cos((min(node_Ys) + max(node_Ys)) / 2. / 180. * np.pi)\r\n    434             ax.set_aspect(1. / coslat)\r\n--> 435             fig.canvas.draw()\r\n    436 \r\n    437     # annotate the axis with node IDs if annotate=True\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\backends\\backend_agg.py in draw(self)\r\n    386         self.renderer = self.get_renderer(cleared=True)\r\n    387         with RendererAgg.lock:\r\n--> 388             self.figure.draw(self.renderer)\r\n    389             # A GUI class may be need to update a window using this draw, so\r\n    390             # don't forget to call the superclass.\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\artist.py in draw_wrapper(artist, renderer, *args, **kwargs)\r\n     36                 renderer.start_filter()\r\n     37 \r\n---> 38             return draw(artist, renderer, *args, **kwargs)\r\n     39         finally:\r\n     40             if artist.get_agg_filter() is not None:\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\figure.py in draw(self, renderer)\r\n   1682                 ax.apply_aspect(pos)\r\n   1683             else:\r\n-> 1684                 ax.apply_aspect()\r\n   1685 \r\n   1686             for child in ax.get_children():\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\axes\\_base.py in apply_aspect(self, position)\r\n   1511                 box_aspect = A * self.get_data_ratio()\r\n   1512             pb = position.frozen()\r\n-> 1513             pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\r\n   1514             self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\r\n   1515             return\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\transforms.py in shrunk_to_aspect(self, box_aspect, container, fig_aspect)\r\n    590         \"\"\"\r\n    591         if box_aspect <= 0 or fig_aspect <= 0:\r\n--> 592             raise ValueError(\"'box_aspect' and 'fig_aspect' must be positive\")\r\n    593         if container is None:\r\n    594             container = self\r\n\r\nValueError: 'box_aspect' and 'fig_aspect' must be positive\r\n\r\nError in callback <function install_repl_displayhook.<locals>.post_execute at 0x0000016612566950> (for post_execute):\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\pyplot.py in post_execute()\r\n    107             def post_execute():\r\n    108                 if matplotlib.is_interactive():\r\n--> 109                     draw_all()\r\n    110 \r\n    111             # IPython >= 2\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\_pylab_helpers.py in draw_all(cls, force)\r\n    126         for f_mgr in cls.get_all_fig_managers():\r\n    127             if force or f_mgr.canvas.figure.stale:\r\n--> 128                 f_mgr.canvas.draw_idle()\r\n    129 \r\n    130 atexit.register(Gcf.destroy_all)\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\backend_bases.py in draw_idle(self, *args, **kwargs)\r\n   1905         if not self._is_idle_drawing:\r\n   1906             with self._idle_draw_cntx():\r\n-> 1907                 self.draw(*args, **kwargs)\r\n   1908 \r\n   1909     def draw_cursor(self, event):\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\backends\\backend_agg.py in draw(self)\r\n    386         self.renderer = self.get_renderer(cleared=True)\r\n    387         with RendererAgg.lock:\r\n--> 388             self.figure.draw(self.renderer)\r\n    389             # A GUI class may be need to update a window using this draw, so\r\n    390             # don't forget to call the superclass.\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\artist.py in draw_wrapper(artist, renderer, *args, **kwargs)\r\n     36                 renderer.start_filter()\r\n     37 \r\n---> 38             return draw(artist, renderer, *args, **kwargs)\r\n     39         finally:\r\n     40             if artist.get_agg_filter() is not None:\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\figure.py in draw(self, renderer)\r\n   1682                 ax.apply_aspect(pos)\r\n   1683             else:\r\n-> 1684                 ax.apply_aspect()\r\n   1685 \r\n   1686             for child in ax.get_children():\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\axes\\_base.py in apply_aspect(self, position)\r\n   1511                 box_aspect = A * self.get_data_ratio()\r\n   1512             pb = position.frozen()\r\n-> 1513             pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\r\n   1514             self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\r\n   1515             return\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\transforms.py in shrunk_to_aspect(self, box_aspect, container, fig_aspect)\r\n    590         \"\"\"\r\n    591         if box_aspect <= 0 or fig_aspect <= 0:\r\n--> 592             raise ValueError(\"'box_aspect' and 'fig_aspect' must be positive\")\r\n    593         if container is None:\r\n    594             container = self\r\n\r\nValueError: 'box_aspect' and 'fig_aspect' must be positive\r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\IPython\\core\\formatters.py in __call__(self, obj)\r\n    339                 pass\r\n    340             else:\r\n--> 341                 return printer(obj)\r\n    342             # Finally look for special method names\r\n    343             method = get_real_method(obj, self.print_method)\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\IPython\\core\\pylabtools.py in <lambda>(fig)\r\n    242 \r\n    243     if 'png' in formats:\r\n--> 244         png_formatter.for_type(Figure, lambda fig: print_figure(fig, 'png', **kwargs))\r\n    245     if 'retina' in formats or 'png2x' in formats:\r\n    246         png_formatter.for_type(Figure, lambda fig: retina_figure(fig, **kwargs))\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\IPython\\core\\pylabtools.py in print_figure(fig, fmt, bbox_inches, **kwargs)\r\n    126 \r\n    127     bytes_io = BytesIO()\r\n--> 128     fig.canvas.print_figure(bytes_io, **kw)\r\n    129     data = bytes_io.getvalue()\r\n    130     if fmt == 'svg':\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\backend_bases.py in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, **kwargs)\r\n   2054                         orientation=orientation,\r\n   2055                         dryrun=True,\r\n-> 2056                         **kwargs)\r\n   2057                     renderer = self.figure._cachedRenderer\r\n   2058                     bbox_artists = kwargs.pop(\"bbox_extra_artists\", None)\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\backends\\backend_agg.py in print_png(self, filename_or_obj, metadata, pil_kwargs, *args, **kwargs)\r\n    525 \r\n    526         else:\r\n--> 527             FigureCanvasAgg.draw(self)\r\n    528             renderer = self.get_renderer()\r\n    529             with cbook._setattr_cm(renderer, dpi=self.figure.dpi), \\\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\backends\\backend_agg.py in draw(self)\r\n    386         self.renderer = self.get_renderer(cleared=True)\r\n    387         with RendererAgg.lock:\r\n--> 388             self.figure.draw(self.renderer)\r\n    389             # A GUI class may be need to update a window using this draw, so\r\n    390             # don't forget to call the superclass.\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\artist.py in draw_wrapper(artist, renderer, *args, **kwargs)\r\n     36                 renderer.start_filter()\r\n     37 \r\n---> 38             return draw(artist, renderer, *args, **kwargs)\r\n     39         finally:\r\n     40             if artist.get_agg_filter() is not None:\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\figure.py in draw(self, renderer)\r\n   1682                 ax.apply_aspect(pos)\r\n   1683             else:\r\n-> 1684                 ax.apply_aspect()\r\n   1685 \r\n   1686             for child in ax.get_children():\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\axes\\_base.py in apply_aspect(self, position)\r\n   1511                 box_aspect = A * self.get_data_ratio()\r\n   1512             pb = position.frozen()\r\n-> 1513             pb1 = pb.shrunk_to_aspect(box_aspect, pb, fig_aspect)\r\n   1514             self._set_position(pb1.anchored(self.get_anchor(), pb), 'active')\r\n   1515             return\r\n\r\nD:\\tool\\Anaconda3\\lib\\site-packages\\matplotlib\\transforms.py in shrunk_to_aspect(self, box_aspect, container, fig_aspect)\r\n    590         \"\"\"\r\n    591         if box_aspect <= 0 or fig_aspect <= 0:\r\n--> 592             raise ValueError(\"'box_aspect' and 'fig_aspect' must be positive\")\r\n    593         if container is None:\r\n    594             container = self\r\n\r\nValueError: 'box_aspect' and 'fig_aspect' must be positive\r\n\r\n<Figure size 331.1x432 with 1 Axes>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/349", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/349/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/349/events", "html_url": "https://github.com/gboeing/osmnx/issues/349", "id": 528918619, "node_id": "MDU6SXNzdWU1Mjg5MTg2MTk=", "number": 349, "title": "libspatialindex_c.so: cannot open shared object file", "user": {"login": "Georgepop", "id": 20091642, "node_id": "MDQ6VXNlcjIwMDkxNjQy", "avatar_url": "https://avatars2.githubusercontent.com/u/20091642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Georgepop", "html_url": "https://github.com/Georgepop", "followers_url": "https://api.github.com/users/Georgepop/followers", "following_url": "https://api.github.com/users/Georgepop/following{/other_user}", "gists_url": "https://api.github.com/users/Georgepop/gists{/gist_id}", "starred_url": "https://api.github.com/users/Georgepop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Georgepop/subscriptions", "organizations_url": "https://api.github.com/users/Georgepop/orgs", "repos_url": "https://api.github.com/users/Georgepop/repos", "events_url": "https://api.github.com/users/Georgepop/events{/privacy}", "received_events_url": "https://api.github.com/users/Georgepop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-26T19:09:44Z", "updated_at": "2019-11-27T04:43:53Z", "closed_at": "2019-11-27T04:17:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello i can't pull docker image of your library !!\r\ngives error: libspatialindex\r\nPLease help !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/348", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/348/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/348/events", "html_url": "https://github.com/gboeing/osmnx/issues/348", "id": 527552768, "node_id": "MDU6SXNzdWU1Mjc1NTI3Njg=", "number": 348, "title": "ox.graph_from_place / Need some advice", "user": {"login": "RCC-GIT", "id": 54035708, "node_id": "MDQ6VXNlcjU0MDM1NzA4", "avatar_url": "https://avatars0.githubusercontent.com/u/54035708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RCC-GIT", "html_url": "https://github.com/RCC-GIT", "followers_url": "https://api.github.com/users/RCC-GIT/followers", "following_url": "https://api.github.com/users/RCC-GIT/following{/other_user}", "gists_url": "https://api.github.com/users/RCC-GIT/gists{/gist_id}", "starred_url": "https://api.github.com/users/RCC-GIT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RCC-GIT/subscriptions", "organizations_url": "https://api.github.com/users/RCC-GIT/orgs", "repos_url": "https://api.github.com/users/RCC-GIT/repos", "events_url": "https://api.github.com/users/RCC-GIT/events{/privacy}", "received_events_url": "https://api.github.com/users/RCC-GIT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-23T12:40:36Z", "updated_at": "2020-06-07T00:20:48Z", "closed_at": "2019-11-25T00:31:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am testing OSMNX which very efficient ...I want to get roads in Shape files for France.\r\nSo this is my first code :\r\n ```\r\n> dept=\"Finist\u00e9re, Bretagne, France\"\r\n> G = ox.graph_from_place(dept, network_type='drive',infrastructure='way[\"highway\"~\"primary\"]')\r\n> G_projected = ox.project_graph(G)\r\n> save_R='dep-finistere-primary-shape'\r\n> ox.save_graph_shapefile(G_projected, filename=save_R)\r\n```\r\n\r\nI Works OK  but I have 2 issues : \r\n\r\nWhen I wants to get all the drive of this big area , it goes endless ... I think because the quantity of data is too big .... So What are the limitations ? Can I get only the .shp files because the .dbf files can we very  big rapidly ? How can I reduce the size of data to download ?\r\n\r\nI do the retreive with => infrastructure='way[\"highway\"~\"primary\"]' , But I am olnly interested at this level with  the drives on which information is in column REF (D15 or N12 ....)  . Is it possbile to retreive on REF in order to reduce the quantity of data .?\r\n\r\n\r\nhighway,C,80 | junction,C,80 | oneway,C,80 | length,C,80 | from,C,80 | to,C,80 | ref,C,80\r\n-- | -- | -- | -- | -- | -- | --\r\nprimary | roundabout | True | 58.28900000000001 | 371859457 | 371859508 | \u00a0\r\nprimary | \u00a0 | True | 47.620999999999995 | 1105578227 | 371859457 | D 15\r\nprimary | roundabout | True | 20.845 | 264212327 | 371859457 | \u00a0\r\nprimary | roundabout | True | 46.182 | 355328006 | 258054122 | \u00a0\r\nprimary | roundabout | True | 31.186 | 371867466 | 355328006 | \u00a0\r\nprimary | \u00a0 | True | 398.45500000000004 | 264212327 | 355328006 | D 15\r\nprimary | \u00a0 | True | 26.51 | 1134555144 | 1134555204 | D 783\r\nprimary | \u00a0 | False | 769.7739999999999 | 1134637928 | 1134555144 | D 783\r\nprimary | \u00a0 | True | 30.277 | 1134555098 | 1134555144 | D 783\r\n\r\n\r\nThanls for your advice. \r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/347", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/347/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/347/events", "html_url": "https://github.com/gboeing/osmnx/issues/347", "id": 523815493, "node_id": "MDU6SXNzdWU1MjM4MTU0OTM=", "number": 347, "title": "test_stats: stats4 failed", "user": {"login": "jgmbenoit", "id": 8476716, "node_id": "MDQ6VXNlcjg0NzY3MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8476716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgmbenoit", "html_url": "https://github.com/jgmbenoit", "followers_url": "https://api.github.com/users/jgmbenoit/followers", "following_url": "https://api.github.com/users/jgmbenoit/following{/other_user}", "gists_url": "https://api.github.com/users/jgmbenoit/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgmbenoit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgmbenoit/subscriptions", "organizations_url": "https://api.github.com/users/jgmbenoit/orgs", "repos_url": "https://api.github.com/users/jgmbenoit/repos", "events_url": "https://api.github.com/users/jgmbenoit/events{/privacy}", "received_events_url": "https://api.github.com/users/jgmbenoit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165091, "node_id": "MDU6TGFiZWw0MTMxNjUwOTE=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/bug", "name": "bug", "color": "e99695", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-16T08:31:26Z", "updated_at": "2019-11-27T19:19:18Z", "closed_at": "2019-11-27T19:18:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "In debian Sid environment, the stats4 in test_stats in tests/test_osmnx.py fails with the message:\r\nE           networkx.exception.NetworkXNotImplemented: not implemented for multigraph type\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/346", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/346/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/346/events", "html_url": "https://github.com/gboeing/osmnx/issues/346", "id": 520835364, "node_id": "MDU6SXNzdWU1MjA4MzUzNjQ=", "number": 346, "title": "Would it be feasible to complete network on areas such as places or plaza?", "user": {"login": "swiss-knight", "id": 19967599, "node_id": "MDQ6VXNlcjE5OTY3NTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/19967599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swiss-knight", "html_url": "https://github.com/swiss-knight", "followers_url": "https://api.github.com/users/swiss-knight/followers", "following_url": "https://api.github.com/users/swiss-knight/following{/other_user}", "gists_url": "https://api.github.com/users/swiss-knight/gists{/gist_id}", "starred_url": "https://api.github.com/users/swiss-knight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swiss-knight/subscriptions", "organizations_url": "https://api.github.com/users/swiss-knight/orgs", "repos_url": "https://api.github.com/users/swiss-knight/repos", "events_url": "https://api.github.com/users/swiss-knight/events{/privacy}", "received_events_url": "https://api.github.com/users/swiss-knight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-11T09:28:51Z", "updated_at": "2019-11-27T16:47:52Z", "closed_at": "2019-11-27T16:47:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Problem description\r\n\r\nAs described here: https://gis.stackexchange.com/questions/341204 I'm wondering if it would be possible to complete a network on some areas where incoming edges are not directly connected to each other, but only through that particular area, such a pedestrian plaza?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/344", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/344/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/344/events", "html_url": "https://github.com/gboeing/osmnx/issues/344", "id": 518316729, "node_id": "MDU6SXNzdWU1MTgzMTY3Mjk=", "number": 344, "title": "Feature Request: asynchronous requests", "user": {"login": "duccioa", "id": 9646542, "node_id": "MDQ6VXNlcjk2NDY1NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9646542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duccioa", "html_url": "https://github.com/duccioa", "followers_url": "https://api.github.com/users/duccioa/followers", "following_url": "https://api.github.com/users/duccioa/following{/other_user}", "gists_url": "https://api.github.com/users/duccioa/gists{/gist_id}", "starred_url": "https://api.github.com/users/duccioa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duccioa/subscriptions", "organizations_url": "https://api.github.com/users/duccioa/orgs", "repos_url": "https://api.github.com/users/duccioa/repos", "events_url": "https://api.github.com/users/duccioa/events{/privacy}", "received_events_url": "https://api.github.com/users/duccioa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-06T08:30:40Z", "updated_at": "2019-11-19T17:51:12Z", "closed_at": "2019-11-19T17:51:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI am trying to download graphs from cells like administrative boundaries or statistical units. This consists on looping through the geometries of a  `geopandas` dataframe  and send a request with `graph_from_polygon`.    \r\nBeside the problem of overloading the Overpass API (as I understand #328 should allow the use of a different endpoint), my problem is that these geometries can count up to the ten-thousands or even more and the process can take weeks.    \r\nWould it be feasible to add a function say `graph_from_geopandas` that makes use of threading, multiprocessing or asynchronous requests to speed up the downloading (it seems to me that `asyncio` could do the job)? Would you be interested in adding it to the package?\r\nIf I wanted to try to implement such a function, how would you go about it?\r\n\r\nAnyway, thank you for the great work! I really appreciate what you are doing.\r\nDuccio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/341", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/341/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/341/events", "html_url": "https://github.com/gboeing/osmnx/issues/341", "id": 515390508, "node_id": "MDU6SXNzdWU1MTUzOTA1MDg=", "number": 341, "title": "Feature Request: New elevation provider", "user": {"login": "kylebarron", "id": 15164633, "node_id": "MDQ6VXNlcjE1MTY0NjMz", "avatar_url": "https://avatars3.githubusercontent.com/u/15164633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylebarron", "html_url": "https://github.com/kylebarron", "followers_url": "https://api.github.com/users/kylebarron/followers", "following_url": "https://api.github.com/users/kylebarron/following{/other_user}", "gists_url": "https://api.github.com/users/kylebarron/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylebarron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylebarron/subscriptions", "organizations_url": "https://api.github.com/users/kylebarron/orgs", "repos_url": "https://api.github.com/users/kylebarron/repos", "events_url": "https://api.github.com/users/kylebarron/events{/privacy}", "received_events_url": "https://api.github.com/users/kylebarron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-31T12:25:16Z", "updated_at": "2020-05-11T20:16:30Z", "closed_at": "2020-05-11T20:16:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! This is an amazing project, and I'm happy to finally have a project to test out osmnx.\r\n\r\nI'm working with OSM data of trails, and adding elevation data to trails is important. Currently, the only elevation provider supported is Google Maps, and this has a couple drawbacks. For one they're currently restricting API usage: \r\n> Notice: New customers will need to contact sales for access to the Elevation API.\r\n\r\nThis might mean they only care about large-scale, large-budge projects, and in any case restricts small developers from using it. There are a couple other elevation APIs, but they all have the drawbacks of being web services.\r\n\r\nI wrote code for myself to import elevations from a local DEM using `rasterio`. Would you accept a PR for this? \r\n\r\nUsing local DEMs are more scalable than APIs. They can be more accurate since most APIs use at most 30m SRTM data, and there exists 10m data for the contiguous US and 1m for some cities from new LIDAR data.\r\n\r\nMaybe there could also be a helper function to download predefined types of elevation DEMs, like SRTM, 3DEP for the US, etc. for the area covered by the current Graph.\r\n\r\nDrawbacks:\r\n\r\nUsing `rasterio` would add a dependency on GDAL, which is not insignificant. I'd propose that it not be included in `requirements.txt`, but that a user who's interested in using this function could self install, and it would be imported conditionally.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/340", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/340/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/340/events", "html_url": "https://github.com/gboeing/osmnx/issues/340", "id": 512500498, "node_id": "MDU6SXNzdWU1MTI1MDA0OTg=", "number": 340, "title": "Node Coordinates", "user": {"login": "ozgurgundogan", "id": 11398500, "node_id": "MDQ6VXNlcjExMzk4NTAw", "avatar_url": "https://avatars1.githubusercontent.com/u/11398500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozgurgundogan", "html_url": "https://github.com/ozgurgundogan", "followers_url": "https://api.github.com/users/ozgurgundogan/followers", "following_url": "https://api.github.com/users/ozgurgundogan/following{/other_user}", "gists_url": "https://api.github.com/users/ozgurgundogan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozgurgundogan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozgurgundogan/subscriptions", "organizations_url": "https://api.github.com/users/ozgurgundogan/orgs", "repos_url": "https://api.github.com/users/ozgurgundogan/repos", "events_url": "https://api.github.com/users/ozgurgundogan/events{/privacy}", "received_events_url": "https://api.github.com/users/ozgurgundogan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165096, "node_id": "MDU6TGFiZWw0MTMxNjUwOTY=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-25T12:54:51Z", "updated_at": "2020-01-03T17:45:21Z", "closed_at": "2019-10-28T16:11:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nGreat job first of all. thanks for your effort.\r\nI tried many things to obtain node coordinates but I couldnt be successful. \r\nHow can I get node coordinates ? \r\nI saw a couple example related to this problem ( https://stackoverflow.com/questions/46238813/osmnx-get-coordinates-of-nodes-using-osm-id ). However, as I understand G[node_id] does not give us latitude and longitude anymore.\r\nIs there any possible way to get the coordinates ? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/gboeing/osmnx/issues/338", "repository_url": "https://api.github.com/repos/gboeing/osmnx", "labels_url": "https://api.github.com/repos/gboeing/osmnx/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/gboeing/osmnx/issues/338/comments", "events_url": "https://api.github.com/repos/gboeing/osmnx/issues/338/events", "html_url": "https://github.com/gboeing/osmnx/issues/338", "id": 507175404, "node_id": "MDU6SXNzdWU1MDcxNzU0MDQ=", "number": 338, "title": "Feature request - coarse graining a network", "user": {"login": "debsankha", "id": 313429, "node_id": "MDQ6VXNlcjMxMzQyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/313429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debsankha", "html_url": "https://github.com/debsankha", "followers_url": "https://api.github.com/users/debsankha/followers", "following_url": "https://api.github.com/users/debsankha/following{/other_user}", "gists_url": "https://api.github.com/users/debsankha/gists{/gist_id}", "starred_url": "https://api.github.com/users/debsankha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debsankha/subscriptions", "organizations_url": "https://api.github.com/users/debsankha/orgs", "repos_url": "https://api.github.com/users/debsankha/repos", "events_url": "https://api.github.com/users/debsankha/events{/privacy}", "received_events_url": "https://api.github.com/users/debsankha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413165093, "node_id": "MDU6TGFiZWw0MTMxNjUwOTM=", "url": "https://api.github.com/repos/gboeing/osmnx/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-15T11:12:33Z", "updated_at": "2020-05-12T03:27:09Z", "closed_at": "2020-05-12T03:27:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like a functionality to convert a larger street network to one with less amount of nodes: Created by merging nodes that are closer than a threshold. \r\n\r\nSample usage would be something like:\r\n```python\r\n>>> G = ox.graph_from_address(\"Berlin, Germany\", distance=1000, distance_type='bbox')\r\n>>> G.number_of_nodes(), G.number_of_edges()\r\n(2417, 6163)\r\n>>> H = ox.simplify.coarse_grain(G, radius=100) # collapses all nodes within 100m radius\r\n>>> H.number_of_nodes(), H.number_of_edges() # H is a smaller graph\r\n(800, 2400)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}