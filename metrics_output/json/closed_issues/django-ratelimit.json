{"total_count": 92, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/204", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/204/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/204/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/204", "id": 665065935, "node_id": "MDU6SXNzdWU2NjUwNjU5MzU=", "number": 204, "title": "Dotted-path to a callable for rate= argument does not work", "user": {"login": "shubham17sm", "id": 17808486, "node_id": "MDQ6VXNlcjE3ODA4NDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/17808486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shubham17sm", "html_url": "https://github.com/shubham17sm", "followers_url": "https://api.github.com/users/shubham17sm/followers", "following_url": "https://api.github.com/users/shubham17sm/following{/other_user}", "gists_url": "https://api.github.com/users/shubham17sm/gists{/gist_id}", "starred_url": "https://api.github.com/users/shubham17sm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shubham17sm/subscriptions", "organizations_url": "https://api.github.com/users/shubham17sm/orgs", "repos_url": "https://api.github.com/users/shubham17sm/repos", "events_url": "https://api.github.com/users/shubham17sm/events{/privacy}", "received_events_url": "https://api.github.com/users/shubham17sm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2020-07-24T10:11:12Z", "updated_at": "2020-07-25T19:10:47Z", "closed_at": "2020-07-25T19:02:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Environment:\r\n\r\n\r\nRequest Method: GET\r\nRequest URL: http://127.0.0.1:8000/convert/75/eng/\r\n\r\nDjango Version: 2.1.5\r\nPython Version: 3.8.2\r\nInstalled Applications:\r\n['django.contrib.admin',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'django.contrib.sites',\r\n 'myapp',\r\n 'allauth',\r\n 'allauth.account',\r\n 'allauth.socialaccount',\r\n 'debug_toolbar']\r\nInstalled Middleware:\r\n['django.middleware.security.SecurityMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n 'debug_toolbar.middleware.DebugToolbarMiddleware']\r\n\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/home/dev/projects/findr/lib/python3.8/site-packages/django/core/handlers/exception.py\" in inner\r\n  34.             response = get_response(request)\r\n\r\nFile \"/home/dev/projects/findr/lib/python3.8/site-packages/django/core/handlers/base.py\" in _get_response\r\n  126.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/home/dev/projects/findr/lib/python3.8/site-packages/django/core/handlers/base.py\" in _get_response\r\n  124.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/home/dev/projects/findr/lib/python3.8/site-packages/django/contrib/auth/decorators.py\" in _wrapped_view\r\n  21.                 return view_func(request, *args, **kwargs)\r\n\r\nFile \"/home/dev/projects/findr/lib/python3.8/site-packages/ratelimit/decorators.py\" in _wrapped\r\n  18.             ratelimited = is_ratelimited(request=request, group=group, fn=fn,\r\n\r\nFile \"/home/dev/projects/findr/lib/python3.8/site-packages/ratelimit/core.py\" in is_ratelimited\r\n  119.     usage = get_usage(request, group, fn, key, rate, method, increment)\r\n\r\nFile \"/home/dev/projects/findr/lib/python3.8/site-packages/ratelimit/core.py\" in get_usage\r\n  162.     limit, period = _split_rate(rate)\r\n\r\nFile \"/home/dev/projects/findr/lib/python3.8/site-packages/ratelimit/core.py\" in _split_rate\r\n  81.     count, multi, period = rate_re.match(rate).groups()\r\n\r\nException Type: AttributeError at /convert/75/eng/\r\nException Value: 'NoneType' object has no attribute 'groups'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/203", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/203/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/203/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/203", "id": 661555232, "node_id": "MDU6SXNzdWU2NjE1NTUyMzI=", "number": 203, "title": "Add `block_for` argument in @ratelimit", "user": {"login": "Ashish-Bansal", "id": 6122999, "node_id": "MDQ6VXNlcjYxMjI5OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6122999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ashish-Bansal", "html_url": "https://github.com/Ashish-Bansal", "followers_url": "https://api.github.com/users/Ashish-Bansal/followers", "following_url": "https://api.github.com/users/Ashish-Bansal/following{/other_user}", "gists_url": "https://api.github.com/users/Ashish-Bansal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ashish-Bansal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ashish-Bansal/subscriptions", "organizations_url": "https://api.github.com/users/Ashish-Bansal/orgs", "repos_url": "https://api.github.com/users/Ashish-Bansal/repos", "events_url": "https://api.github.com/users/Ashish-Bansal/events{/privacy}", "received_events_url": "https://api.github.com/users/Ashish-Bansal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-20T08:53:36Z", "updated_at": "2020-07-28T18:33:31Z", "closed_at": "2020-07-21T03:58:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description\r\n\r\n```\r\ndef ratelimit(group=None, key=None, rate=None, method=ALL, block=False, block_for: int = -1):\r\n    pass\r\n```\r\n\r\nIn case, `block_for` (in seconds) is mentioned, when rate limiter is triggered, we will block requests for that user/ip/key for `block_for` seconds. \r\n\r\n\r\n#### Usecase\r\n\r\nIt would be more efficient for rate limiting and blocking scraping bots and spammers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/202", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/202/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/202/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/202", "id": 653768083, "node_id": "MDU6SXNzdWU2NTM3NjgwODM=", "number": 202, "title": "Custom Admin decorator broken with upgrade?", "user": {"login": "getup8", "id": 4086934, "node_id": "MDQ6VXNlcjQwODY5MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4086934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/getup8", "html_url": "https://github.com/getup8", "followers_url": "https://api.github.com/users/getup8/followers", "following_url": "https://api.github.com/users/getup8/following{/other_user}", "gists_url": "https://api.github.com/users/getup8/gists{/gist_id}", "starred_url": "https://api.github.com/users/getup8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/getup8/subscriptions", "organizations_url": "https://api.github.com/users/getup8/orgs", "repos_url": "https://api.github.com/users/getup8/repos", "events_url": "https://api.github.com/users/getup8/events{/privacy}", "received_events_url": "https://api.github.com/users/getup8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-09T05:09:28Z", "updated_at": "2020-07-11T17:18:23Z", "closed_at": "2020-07-11T17:18:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Haven't had time to fully debug this so chance this is a red herring, but I didn't change anything in this implementation:\r\n\r\n```python\r\nclass CustomAdminSite(admin.AdminSite):\r\n\r\n    @never_cache\r\n    @ratelimit(key='ip', rate='3/m', method=ratelimit.UNSAFE, block=True)\r\n    @ratelimit(key='post:username', rate='3/m', method=ratelimit.UNSAFE, block=True)  # noqa\r\n    def login(self, request, extra_context=None):\r\n        return super(CustomAdminSite, self).login(request, extra_context)\r\n```\r\n\r\nAnd I'm getting the error:\r\n```\r\nAttributeError: 'CustomAdminSite' object has no attribute 'method'\r\n(3 additional frame(s) were not displayed)\r\n...\r\n  File \"django/views/decorators/cache.py\", line 44, in _wrapped_view_func\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"ratelimit/decorators.py\", line 18, in _wrapped\r\n    ratelimited = is_ratelimited(request=request, group=group, fn=fn,\r\n  File \"ratelimit/core.py\", line 119, in is_ratelimited\r\n    usage = get_usage(request, group, fn, key, rate, method, increment)\r\n  File \"ratelimit/core.py\", line 135, in get_usage\r\n    if not _method_match(request, method):\r\n  File \"ratelimit/core.py\", line 72, in _method_match\r\n    return request.method in [m.upper() for m in method]\r\n```\r\n\r\nAny advice?\r\n\r\nAs an aside, I imagine using this for the Django Admin is pretty common? Would be great to have an example in the docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/199", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/199/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/199/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/199", "id": 648563331, "node_id": "MDU6SXNzdWU2NDg1NjMzMzE=", "number": 199, "title": "Updated primary branch to `main`", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-06-30T23:29:15Z", "updated_at": "2020-07-24T14:53:32Z", "closed_at": "2020-06-30T23:29:34Z", "author_association": "OWNER", "active_lock_reason": null, "body": "If you have a clone, from now on please use the `main` branch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/196", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/196/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/196/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/196", "id": 594461878, "node_id": "MDU6SXNzdWU1OTQ0NjE4Nzg=", "number": 196, "title": "Why use a new cache key for every window?", "user": {"login": "laixintao", "id": 9675939, "node_id": "MDQ6VXNlcjk2NzU5Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9675939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laixintao", "html_url": "https://github.com/laixintao", "followers_url": "https://api.github.com/users/laixintao/followers", "following_url": "https://api.github.com/users/laixintao/following{/other_user}", "gists_url": "https://api.github.com/users/laixintao/gists{/gist_id}", "starred_url": "https://api.github.com/users/laixintao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laixintao/subscriptions", "organizations_url": "https://api.github.com/users/laixintao/orgs", "repos_url": "https://api.github.com/users/laixintao/repos", "events_url": "https://api.github.com/users/laixintao/events{/privacy}", "received_events_url": "https://api.github.com/users/laixintao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-05T13:41:00Z", "updated_at": "2020-07-01T04:30:46Z", "closed_at": "2020-07-01T00:07:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @jsocol I read the source code and it's excellent!\r\n\r\nI have one question and can't figure out by myself, beg you for some clues :)\r\n\r\nSo if I implemented a rate limit, I will the same key for every time window, and reset it in a new time window. E.g. I will `set rate_limit:ip 0 expire 1hour`, then `incr rate_limit 1` for every request. Then `set rate_limit:ip 0 expire 1 hour` again in a new hour.\r\n\r\nI saw that you use a different key for every window, I think your way is better, but I just can't figure out why. Can you come up with the drawbacks of my \"expire the same key for every windows\" method?\r\n\r\nThanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/193", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/193/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/193/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/193", "id": 565335846, "node_id": "MDU6SXNzdWU1NjUzMzU4NDY=", "number": 193, "title": "Django 2.2", "user": {"login": "Blodwynn", "id": 4106395, "node_id": "MDQ6VXNlcjQxMDYzOTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4106395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Blodwynn", "html_url": "https://github.com/Blodwynn", "followers_url": "https://api.github.com/users/Blodwynn/followers", "following_url": "https://api.github.com/users/Blodwynn/following{/other_user}", "gists_url": "https://api.github.com/users/Blodwynn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Blodwynn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Blodwynn/subscriptions", "organizations_url": "https://api.github.com/users/Blodwynn/orgs", "repos_url": "https://api.github.com/users/Blodwynn/repos", "events_url": "https://api.github.com/users/Blodwynn/events{/privacy}", "received_events_url": "https://api.github.com/users/Blodwynn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-14T13:46:28Z", "updated_at": "2020-06-30T23:31:11Z", "closed_at": "2020-06-30T23:31:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Will you update to support Django 2.2? That's the LTS release, a lot of people may need it. :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/191", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/191/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/191/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/191", "id": 540534051, "node_id": "MDU6SXNzdWU1NDA1MzQwNTE=", "number": 191, "title": "[master] usage.rst contains buggy lamba example?", "user": {"login": "hartwork", "id": 1577132, "node_id": "MDQ6VXNlcjE1NzcxMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1577132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hartwork", "html_url": "https://github.com/hartwork", "followers_url": "https://api.github.com/users/hartwork/followers", "following_url": "https://api.github.com/users/hartwork/following{/other_user}", "gists_url": "https://api.github.com/users/hartwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/hartwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hartwork/subscriptions", "organizations_url": "https://api.github.com/users/hartwork/orgs", "repos_url": "https://api.github.com/users/hartwork/repos", "events_url": "https://api.github.com/users/hartwork/events{/privacy}", "received_events_url": "https://api.github.com/users/hartwork/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-19T20:08:19Z", "updated_at": "2019-12-20T10:07:39Z", "closed_at": "2019-12-20T10:07:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At https://github.com/jsocol/django-ratelimit/blame/master/docs/usage.rst#L121 the docs read:\r\n> rate = lambda g, r: None if request.user.is_authenticated else '100/h'\r\n\r\nI believe it needs this patch:\r\n```diff\r\n--- rate = lambda g, r: None if request.user.is_authenticated else '100/h'\r\n+++ rate = lambda g, r: None if       r.user.is_authenticated else '100/h'\r\n```\r\nWould you accept a pull request (with proper whitespace) about this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/188", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/188/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/188/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/188", "id": 487069230, "node_id": "MDU6SXNzdWU0ODcwNjkyMzA=", "number": 188, "title": "implement different rate limit messages for different views.", "user": {"login": "AigerXD", "id": 54680750, "node_id": "MDQ6VXNlcjU0NjgwNzUw", "avatar_url": "https://avatars0.githubusercontent.com/u/54680750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AigerXD", "html_url": "https://github.com/AigerXD", "followers_url": "https://api.github.com/users/AigerXD/followers", "following_url": "https://api.github.com/users/AigerXD/following{/other_user}", "gists_url": "https://api.github.com/users/AigerXD/gists{/gist_id}", "starred_url": "https://api.github.com/users/AigerXD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AigerXD/subscriptions", "organizations_url": "https://api.github.com/users/AigerXD/orgs", "repos_url": "https://api.github.com/users/AigerXD/repos", "events_url": "https://api.github.com/users/AigerXD/events{/privacy}", "received_events_url": "https://api.github.com/users/AigerXD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658209179, "node_id": "MDU6TGFiZWw2NTgyMDkxNzk=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-29T16:47:51Z", "updated_at": "2019-09-08T17:21:07Z", "closed_at": "2019-09-08T17:20:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/187", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/187/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/187/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/187", "id": 476939776, "node_id": "MDU6SXNzdWU0NzY5Mzk3NzY=", "number": 187, "title": "Documentation refers to RatelimitMixin that does not exist anymore", "user": {"login": "kylegibson", "id": 243791, "node_id": "MDQ6VXNlcjI0Mzc5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/243791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylegibson", "html_url": "https://github.com/kylegibson", "followers_url": "https://api.github.com/users/kylegibson/followers", "following_url": "https://api.github.com/users/kylegibson/following{/other_user}", "gists_url": "https://api.github.com/users/kylegibson/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylegibson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylegibson/subscriptions", "organizations_url": "https://api.github.com/users/kylegibson/orgs", "repos_url": "https://api.github.com/users/kylegibson/repos", "events_url": "https://api.github.com/users/kylegibson/events{/privacy}", "received_events_url": "https://api.github.com/users/kylegibson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658211353, "node_id": "MDU6TGFiZWw2NTgyMTEzNTM=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/documentation", "name": "documentation", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-08-05T16:01:03Z", "updated_at": "2019-10-26T19:52:08Z", "closed_at": "2019-10-26T19:51:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reference: https://django-ratelimit.readthedocs.io/en/stable/usage.html#class-based-view-mixin", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/186", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/186/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/186/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/186", "id": 474613442, "node_id": "MDU6SXNzdWU0NzQ2MTM0NDI=", "number": 186, "title": "Please update new version to PyPi", "user": {"login": "andrei-kondakov", "id": 10554164, "node_id": "MDQ6VXNlcjEwNTU0MTY0", "avatar_url": "https://avatars3.githubusercontent.com/u/10554164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrei-kondakov", "html_url": "https://github.com/andrei-kondakov", "followers_url": "https://api.github.com/users/andrei-kondakov/followers", "following_url": "https://api.github.com/users/andrei-kondakov/following{/other_user}", "gists_url": "https://api.github.com/users/andrei-kondakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrei-kondakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrei-kondakov/subscriptions", "organizations_url": "https://api.github.com/users/andrei-kondakov/orgs", "repos_url": "https://api.github.com/users/andrei-kondakov/repos", "events_url": "https://api.github.com/users/andrei-kondakov/events{/privacy}", "received_events_url": "https://api.github.com/users/andrei-kondakov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-30T14:19:00Z", "updated_at": "2020-06-30T23:58:11Z", "closed_at": "2020-06-30T23:58:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please upload new stable version of django-ratelimit to PyPi.\r\n\r\n2.0 isn't working with Django 2.1 due to:\r\n\r\n`\"ratelimit/utils.py\", line 109, in is_ratelimited\r\n    parts = (fn.__module__, fn.__name__)\r\nAttributeError: 'functools.partial' object has no attribute '__module__'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/182", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/182/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/182/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/182", "id": 455646286, "node_id": "MDU6SXNzdWU0NTU2NDYyODY=", "number": 182, "title": "Rate limit example with lambda rate is wrong", "user": {"login": "xrobin", "id": 1047170, "node_id": "MDQ6VXNlcjEwNDcxNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1047170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xrobin", "html_url": "https://github.com/xrobin", "followers_url": "https://api.github.com/users/xrobin/followers", "following_url": "https://api.github.com/users/xrobin/following{/other_user}", "gists_url": "https://api.github.com/users/xrobin/gists{/gist_id}", "starred_url": "https://api.github.com/users/xrobin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xrobin/subscriptions", "organizations_url": "https://api.github.com/users/xrobin/orgs", "repos_url": "https://api.github.com/users/xrobin/repos", "events_url": "https://api.github.com/users/xrobin/events{/privacy}", "received_events_url": "https://api.github.com/users/xrobin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-13T09:56:12Z", "updated_at": "2019-06-14T20:22:32Z", "closed_at": "2019-06-14T20:22:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "On page https://django-ratelimit.readthedocs.io/en/stable/usage.html#examples , in the examples, the following seems to be wrong:\r\n\r\n    rate = lambda r: None if request.user.is_authenticated else '100/h'\r\n\r\nGave me a `TypeError: takes exactly 1 argument (2 given)`\r\n\r\nI had to change it to:\r\n\r\n    rate = lambda g, r: None if r.user.is_authenticated else '100/h'\r\n\r\nand it worked fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/179", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/179/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/179/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/179", "id": 437458711, "node_id": "MDU6SXNzdWU0Mzc0NTg3MTE=", "number": 179, "title": "dos possible by clashing cache keys", "user": {"login": "devkral", "id": 658768, "node_id": "MDQ6VXNlcjY1ODc2OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/658768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devkral", "html_url": "https://github.com/devkral", "followers_url": "https://api.github.com/users/devkral/followers", "following_url": "https://api.github.com/users/devkral/following{/other_user}", "gists_url": "https://api.github.com/users/devkral/gists{/gist_id}", "starred_url": "https://api.github.com/users/devkral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devkral/subscriptions", "organizations_url": "https://api.github.com/users/devkral/orgs", "repos_url": "https://api.github.com/users/devkral/repos", "events_url": "https://api.github.com/users/devkral/events{/privacy}", "received_events_url": "https://api.github.com/users/devkral/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2019-04-26T01:16:58Z", "updated_at": "2019-05-05T15:11:31Z", "closed_at": "2019-05-01T19:41:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ratelimit uses md5 (a broken hash function). This allows an adversary to forge ip addresses or usernames and trigger a rate limit for another user or ip.\r\n\r\nThis way the targeted user or ip cannot access the server = denial of service (for this user).\r\n\r\nEasy fix: switch to sha256 instead of md5\r\nOther (not that effective) fix: hash \"group\" separate from other parts. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/177", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/177/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/177/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/177", "id": 428670449, "node_id": "MDU6SXNzdWU0Mjg2NzA0NDk=", "number": 177, "title": "[Docs] More information on using the `is_ratelimited` function", "user": {"login": "ibolit", "id": 172044, "node_id": "MDQ6VXNlcjE3MjA0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/172044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibolit", "html_url": "https://github.com/ibolit", "followers_url": "https://api.github.com/users/ibolit/followers", "following_url": "https://api.github.com/users/ibolit/following{/other_user}", "gists_url": "https://api.github.com/users/ibolit/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibolit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibolit/subscriptions", "organizations_url": "https://api.github.com/users/ibolit/orgs", "repos_url": "https://api.github.com/users/ibolit/repos", "events_url": "https://api.github.com/users/ibolit/events{/privacy}", "received_events_url": "https://api.github.com/users/ibolit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658211353, "node_id": "MDU6TGFiZWw2NTgyMTEzNTM=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/documentation", "name": "documentation", "color": "d4c5f9", "default": true, "description": null}, {"id": 1406812513, "node_id": "MDU6TGFiZWwxNDA2ODEyNTEz", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/stale", "name": "stale", "color": "cccccc", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-03T09:47:37Z", "updated_at": "2019-06-14T20:25:47Z", "closed_at": "2019-06-14T20:25:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the docs about the `is_ratelimited` function are quite vague: all they say is \"sometimes the mixin is not flexible enough, but you can use the `is_ratelimited` function. I couldn't figure out how.\r\n\r\nBasically, I want to write my own mixin derived from the `RatelimitMixin` with two rates, like `5/m` and `15/h`, but currently I can't understand how to do that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/175", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/175/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/175/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/175", "id": 413825006, "node_id": "MDU6SXNzdWU0MTM4MjUwMDY=", "number": 175, "title": "IPv6 subnet blocking", "user": {"login": "whs", "id": 345483, "node_id": "MDQ6VXNlcjM0NTQ4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/345483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whs", "html_url": "https://github.com/whs", "followers_url": "https://api.github.com/users/whs/followers", "following_url": "https://api.github.com/users/whs/following{/other_user}", "gists_url": "https://api.github.com/users/whs/gists{/gist_id}", "starred_url": "https://api.github.com/users/whs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whs/subscriptions", "organizations_url": "https://api.github.com/users/whs/orgs", "repos_url": "https://api.github.com/users/whs/repos", "events_url": "https://api.github.com/users/whs/events{/privacy}", "received_events_url": "https://api.github.com/users/whs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-24T13:59:09Z", "updated_at": "2019-05-21T16:43:58Z", "closed_at": "2019-05-21T16:43:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "IPv6 deployments often are given a block of IP, so blocks with the entire IP can be evaded easily.\r\n\r\nI've seen a local ISP hand out /64 block and AWS hand out [/56 block](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html) for each VPC. Let's Encrypt's Boulder use [/48](https://github.com/letsencrypt/boulder/blob/6f44b8bde7f18ab05f2d3101c3beb1d60f711074/sa/sa.go#L296:6) block for rate limiting.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/164", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/164/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/164/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/164", "id": 412642476, "node_id": "MDU6SXNzdWU0MTI2NDI0NzY=", "number": 164, "title": "Refactor is_ratelimited/get_usage_count", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/7", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7/labels", "id": 4074260, "node_id": "MDk6TWlsZXN0b25lNDA3NDI2MA==", "number": 7, "title": "3.0", "description": "Time to drop Python 2.7 and Django 1.x. Will take the opportunity to make some other changes.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 11, "state": "open", "created_at": "2019-02-20T21:32:57Z", "updated_at": "2020-06-30T23:28:49Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2019-02-20T21:43:02Z", "updated_at": "2019-02-21T23:11:02Z", "closed_at": "2019-02-21T23:11:02Z", "author_association": "OWNER", "active_lock_reason": null, "body": "There's a bunch of functionality that doesn't work in `get_usage_count` for no real reason, it's just defined in `is_ratelimited`:\r\n\r\n- undefined `group` values\r\n- HTTP method-based short circuiting\r\n- callable rates\r\n- undefined rates\r\n\r\nand some things that are weirdly complex, like cache failure behavior.\r\n\r\nWe should refactor to push as much logic into `get_usage_count` as possible, including something like `should_limit`, since it's a more powerful API, and make `is_ratelimited` a thin wrapper that continues to return a boolean.\r\n\r\n#163 will make this easier by moving the request-mutating logic into the `@ratelimit` decorator, so that should happen first.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/163", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/163/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/163/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/163", "id": 412642122, "node_id": "MDU6SXNzdWU0MTI2NDIxMjI=", "number": 163, "title": "Don't mutate `request` in `is_ratelimited`", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/7", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7/labels", "id": 4074260, "node_id": "MDk6TWlsZXN0b25lNDA3NDI2MA==", "number": 7, "title": "3.0", "description": "Time to drop Python 2.7 and Django 1.x. Will take the opportunity to make some other changes.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 11, "state": "open", "created_at": "2019-02-20T21:32:57Z", "updated_at": "2020-06-30T23:28:49Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2019-02-20T21:42:09Z", "updated_at": "2019-02-21T21:16:27Z", "closed_at": "2019-02-21T21:16:27Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This behavior is strange and complicates some other refactoring work I'd like to do. The decorator can/should mutate the `request` object, but the `is_ratelimited` utility method shouldn't. We can move this entirely into the decorator by changing it to something like:\r\n\r\n```py\r\nratelimited = is_ratelimited(...)\r\nalready_limited = getattr(request, 'limited', False)\r\nrequest.limited = ratelimited or already_limited\r\n```\r\n\r\nThis would technically be a breaking change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/160", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/160/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/160/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/160", "id": 394805419, "node_id": "MDU6SXNzdWUzOTQ4MDU0MTk=", "number": 160, "title": "Does the app spport `rate='20/5m'`?", "user": {"login": "wahello", "id": 3362049, "node_id": "MDQ6VXNlcjMzNjIwNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3362049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wahello", "html_url": "https://github.com/wahello", "followers_url": "https://api.github.com/users/wahello/followers", "following_url": "https://api.github.com/users/wahello/following{/other_user}", "gists_url": "https://api.github.com/users/wahello/gists{/gist_id}", "starred_url": "https://api.github.com/users/wahello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wahello/subscriptions", "organizations_url": "https://api.github.com/users/wahello/orgs", "repos_url": "https://api.github.com/users/wahello/repos", "events_url": "https://api.github.com/users/wahello/events{/privacy}", "received_events_url": "https://api.github.com/users/wahello/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658209179, "node_id": "MDU6TGFiZWw2NTgyMDkxNzk=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-29T15:49:39Z", "updated_at": "2018-12-29T17:17:20Z", "closed_at": "2018-12-29T17:17:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does this app spport \r\n\r\n` @ratelimit(key=\"ip\", rate='20/5m', block=True )`\r\n\r\nlike [flask-limiter](https://github.com/alisaifee/flask-limiter)\r\nAnd like\r\n ` @ratelimit(key=\"ip\", rate='20/5m;100/h', block=True )`\r\nmultiple limit rule in one rate, delimited by \";\" or other delimiter.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/159", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/159/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/159/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/159", "id": 388496882, "node_id": "MDU6SXNzdWUzODg0OTY4ODI=", "number": 159, "title": "Builds are failing on Travis for Django 2.x because of redis-py 3", "user": {"login": "gregsadetsky", "id": 1017304, "node_id": "MDQ6VXNlcjEwMTczMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1017304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregsadetsky", "html_url": "https://github.com/gregsadetsky", "followers_url": "https://api.github.com/users/gregsadetsky/followers", "following_url": "https://api.github.com/users/gregsadetsky/following{/other_user}", "gists_url": "https://api.github.com/users/gregsadetsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregsadetsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregsadetsky/subscriptions", "organizations_url": "https://api.github.com/users/gregsadetsky/orgs", "repos_url": "https://api.github.com/users/gregsadetsky/repos", "events_url": "https://api.github.com/users/gregsadetsky/events{/privacy}", "received_events_url": "https://api.github.com/users/gregsadetsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-07T04:00:43Z", "updated_at": "2018-12-29T17:43:38Z", "closed_at": "2018-12-29T17:43:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [most recent build](https://travis-ci.org/jsocol/django-ratelimit/builds/462235691) fails for all `DJANGO_VERSION` values of 2.0 and 2.1. The error message for all 5 failing jobs is the same:\r\n\r\n\"redis.exceptions.DataError: Invalid input of type: 'CacheKey'. Convert to a byte, string or number first.\"\r\n\r\nThe issue is documented [here](https://github.com/niwinz/django-redis/issues/342). A suggested [fix](https://github.com/niwinz/django-redis/issues/342#issuecomment-439143517) is to pin `redis==2.10.6` in requirements.txt.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/158", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/158/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/158/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/158", "id": 388495711, "node_id": "MDU6SXNzdWUzODg0OTU3MTE=", "number": 158, "title": "Link from README.md to documentation site does not point to latest version", "user": {"login": "gregsadetsky", "id": 1017304, "node_id": "MDQ6VXNlcjEwMTczMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1017304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregsadetsky", "html_url": "https://github.com/gregsadetsky", "followers_url": "https://api.github.com/users/gregsadetsky/followers", "following_url": "https://api.github.com/users/gregsadetsky/following{/other_user}", "gists_url": "https://api.github.com/users/gregsadetsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregsadetsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregsadetsky/subscriptions", "organizations_url": "https://api.github.com/users/gregsadetsky/orgs", "repos_url": "https://api.github.com/users/gregsadetsky/repos", "events_url": "https://api.github.com/users/gregsadetsky/events{/privacy}", "received_events_url": "https://api.github.com/users/gregsadetsky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658211353, "node_id": "MDU6TGFiZWw2NTgyMTEzNTM=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/documentation", "name": "documentation", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-07T03:53:40Z", "updated_at": "2018-12-29T17:23:42Z", "closed_at": "2018-12-29T17:23:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "`README.md` points to http://django-ratelimit.readthedocs.io/ which redirects to https://django-ratelimit.readthedocs.io/en/v1.0.0/\r\n\r\nAt the top of that page, a warning appears: \"You are not reading the most recent version of this documentation. v1.1.0 is the latest version available.\" with a link to https://django-ratelimit.readthedocs.io/en/v1.1.0/\r\n\r\nI guess that [this line](https://github.com/jsocol/django-ratelimit/blob/master/docs/conf.py#L53) should be updated for everything to work?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/151", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/151/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/151/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/151", "id": 359347005, "node_id": "MDU6SXNzdWUzNTkzNDcwMDU=", "number": 151, "title": "how can I send self object to my_key while using mixin?", "user": {"login": "niharika88", "id": 11318225, "node_id": "MDQ6VXNlcjExMzE4MjI1", "avatar_url": "https://avatars0.githubusercontent.com/u/11318225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niharika88", "html_url": "https://github.com/niharika88", "followers_url": "https://api.github.com/users/niharika88/followers", "following_url": "https://api.github.com/users/niharika88/following{/other_user}", "gists_url": "https://api.github.com/users/niharika88/gists{/gist_id}", "starred_url": "https://api.github.com/users/niharika88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niharika88/subscriptions", "organizations_url": "https://api.github.com/users/niharika88/orgs", "repos_url": "https://api.github.com/users/niharika88/repos", "events_url": "https://api.github.com/users/niharika88/events{/privacy}", "received_events_url": "https://api.github.com/users/niharika88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-12T07:21:15Z", "updated_at": "2018-09-12T13:22:49Z", "closed_at": "2018-09-12T13:22:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/148", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/148/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/148/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/148", "id": 351063705, "node_id": "MDU6SXNzdWUzNTEwNjM3MDU=", "number": 148, "title": "How to customize 403 page when user is blacked out", "user": {"login": "stfenjobs", "id": 6580897, "node_id": "MDQ6VXNlcjY1ODA4OTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6580897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stfenjobs", "html_url": "https://github.com/stfenjobs", "followers_url": "https://api.github.com/users/stfenjobs/followers", "following_url": "https://api.github.com/users/stfenjobs/following{/other_user}", "gists_url": "https://api.github.com/users/stfenjobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/stfenjobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stfenjobs/subscriptions", "organizations_url": "https://api.github.com/users/stfenjobs/orgs", "repos_url": "https://api.github.com/users/stfenjobs/repos", "events_url": "https://api.github.com/users/stfenjobs/events{/privacy}", "received_events_url": "https://api.github.com/users/stfenjobs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-08-16T05:48:02Z", "updated_at": "2018-08-18T12:31:49Z", "closed_at": "2018-08-18T12:31:49Z", "author_association": "NONE", "active_lock_reason": null, "body": " when the user is blacked out,  \r\nThe page return **403 Forbidden** \r\ni want it return **sorry, you are blocked, Please come back after 30 seconds.**\r\n\r\nthanks \ud83d\ude00", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/146", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/146/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/146/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/146", "id": 345200688, "node_id": "MDU6SXNzdWUzNDUyMDA2ODg=", "number": 146, "title": "Django 2.0 compatibility", "user": {"login": "BarnabasSzabolcs", "id": 2684538, "node_id": "MDQ6VXNlcjI2ODQ1Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2684538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BarnabasSzabolcs", "html_url": "https://github.com/BarnabasSzabolcs", "followers_url": "https://api.github.com/users/BarnabasSzabolcs/followers", "following_url": "https://api.github.com/users/BarnabasSzabolcs/following{/other_user}", "gists_url": "https://api.github.com/users/BarnabasSzabolcs/gists{/gist_id}", "starred_url": "https://api.github.com/users/BarnabasSzabolcs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BarnabasSzabolcs/subscriptions", "organizations_url": "https://api.github.com/users/BarnabasSzabolcs/orgs", "repos_url": "https://api.github.com/users/BarnabasSzabolcs/repos", "events_url": "https://api.github.com/users/BarnabasSzabolcs/events{/privacy}", "received_events_url": "https://api.github.com/users/BarnabasSzabolcs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-07-27T12:03:09Z", "updated_at": "2018-12-29T18:23:24Z", "closed_at": "2018-08-18T03:50:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "user_or_ip uses user.is_authenticated() which is a bool not a function in Django 2.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/145", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/145/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/145/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/145", "id": 337536142, "node_id": "MDU6SXNzdWUzMzc1MzYxNDI=", "number": 145, "title": "Rate limit on URL parameters?", "user": {"login": "phillbaker", "id": 94505, "node_id": "MDQ6VXNlcjk0NTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/94505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phillbaker", "html_url": "https://github.com/phillbaker", "followers_url": "https://api.github.com/users/phillbaker/followers", "following_url": "https://api.github.com/users/phillbaker/following{/other_user}", "gists_url": "https://api.github.com/users/phillbaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/phillbaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phillbaker/subscriptions", "organizations_url": "https://api.github.com/users/phillbaker/orgs", "repos_url": "https://api.github.com/users/phillbaker/repos", "events_url": "https://api.github.com/users/phillbaker/events{/privacy}", "received_events_url": "https://api.github.com/users/phillbaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-02T14:12:35Z", "updated_at": "2018-07-02T15:16:17Z", "closed_at": "2018-07-02T14:31:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for your work on this library!\r\n\r\nParameters captured by Django's URLconf are passed into the view function as parameters, e.g.:\r\n\r\n```py\r\n# urls.py\r\nurl(regex=r'^user/(?P<username>\\w{1,50})/$', view='views.profile_page')\r\n\r\n# views.py\r\ndef profile_page(request, username=None):\r\n    user = User.objects.get(username=username)\r\n   # ...\r\n```\r\n\r\nThese parameters are not available on the request object itself (or in `request.{GET,POST,META}`), what would be the recommended approach to rate limit on parameters like the `username` parameter?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/143", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/143/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/143/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/143", "id": 327553546, "node_id": "MDU6SXNzdWUzMjc1NTM1NDY=", "number": 143, "title": "Passing request data to loggers in view specified by RATELIMIT_VIEW", "user": {"login": "rschwiebert", "id": 8643352, "node_id": "MDQ6VXNlcjg2NDMzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8643352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rschwiebert", "html_url": "https://github.com/rschwiebert", "followers_url": "https://api.github.com/users/rschwiebert/followers", "following_url": "https://api.github.com/users/rschwiebert/following{/other_user}", "gists_url": "https://api.github.com/users/rschwiebert/gists{/gist_id}", "starred_url": "https://api.github.com/users/rschwiebert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rschwiebert/subscriptions", "organizations_url": "https://api.github.com/users/rschwiebert/orgs", "repos_url": "https://api.github.com/users/rschwiebert/repos", "events_url": "https://api.github.com/users/rschwiebert/events{/privacy}", "received_events_url": "https://api.github.com/users/rschwiebert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658209179, "node_id": "MDU6TGFiZWw2NTgyMDkxNzk=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-05-30T02:43:18Z", "updated_at": "2019-02-28T11:49:22Z", "closed_at": "2019-02-27T16:26:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been using the AdminEmailHandler to forward errors from my website, but the problem is that the ratelimited exceptions that come through are missing something that is useful, namely the info about the identity of the sender.\r\n\r\nIt looks like the handler attaches the request if it exists, but apparently in the case of the ratelimit middleware it's falling into this except clause:\r\n\r\n    ` except Exception:\r\n            subject = '%s: %s' % (\r\n                record.levelname,\r\n                record.getMessage()\r\n            )\r\n            request = None`\r\n\r\n   in the implementation of AdminEmailHandler https://docs.djangoproject.com/en/1.11/_modules/django/utils/log/\r\n\r\nThe resulting email contains the url of the ratelimited request, but nothing else about the request, such as the sender. In the body it says `Request data not supplied`.\r\n\r\nIs this a problem that can be fixed on your end or is it rather a problem in django? Or how can I go about making sure I can see which sender is harrying my endpoint?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/142", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/142/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/142/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/142", "id": 310760996, "node_id": "MDU6SXNzdWUzMTA3NjA5OTY=", "number": 142, "title": "Request for usage clarification", "user": {"login": "estianross", "id": 27760780, "node_id": "MDQ6VXNlcjI3NzYwNzgw", "avatar_url": "https://avatars0.githubusercontent.com/u/27760780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estianross", "html_url": "https://github.com/estianross", "followers_url": "https://api.github.com/users/estianross/followers", "following_url": "https://api.github.com/users/estianross/following{/other_user}", "gists_url": "https://api.github.com/users/estianross/gists{/gist_id}", "starred_url": "https://api.github.com/users/estianross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estianross/subscriptions", "organizations_url": "https://api.github.com/users/estianross/orgs", "repos_url": "https://api.github.com/users/estianross/repos", "events_url": "https://api.github.com/users/estianross/events{/privacy}", "received_events_url": "https://api.github.com/users/estianross/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658209179, "node_id": "MDU6TGFiZWw2NTgyMDkxNzk=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-03T09:32:05Z", "updated_at": "2018-06-08T11:42:11Z", "closed_at": "2018-06-08T11:42:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Been going over the documentation and can't figure out if there is a way to do what I need. I need to combine 2 rate limits on a view.\r\n\r\nThe first seems quite simple as it's just 1 request to the view per ip per sec so the following should be adequate:\r\n `@ratelimit(key='ip', rate='1/sec')`\r\n\r\nThe second is trickier and is what I need advice figuring out, it should limit ALL requests to the view regardless of ip or user or auth to 10 requests per sec, is this doable with this package?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/141", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/141/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/141/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/141", "id": 307484433, "node_id": "MDU6SXNzdWUzMDc0ODQ0MzM=", "number": 141, "title": "Ratelimit for 1/h allow 2 requests", "user": {"login": "brunohkbx", "id": 6487206, "node_id": "MDQ6VXNlcjY0ODcyMDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6487206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunohkbx", "html_url": "https://github.com/brunohkbx", "followers_url": "https://api.github.com/users/brunohkbx/followers", "following_url": "https://api.github.com/users/brunohkbx/following{/other_user}", "gists_url": "https://api.github.com/users/brunohkbx/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunohkbx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunohkbx/subscriptions", "organizations_url": "https://api.github.com/users/brunohkbx/orgs", "repos_url": "https://api.github.com/users/brunohkbx/repos", "events_url": "https://api.github.com/users/brunohkbx/events{/privacy}", "received_events_url": "https://api.github.com/users/brunohkbx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-22T02:32:05Z", "updated_at": "2018-03-22T21:02:43Z", "closed_at": "2018-03-22T21:02:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why this rate is allowing more than one request per hour?\r\n\r\n ```\r\nif is_ratelimited(\r\n    request,\r\n    'invites',\r\n    key=lambda group, request: self.kwargs['pk'],\r\n    rate='1/h',\r\n    increment=True\r\n):\r\n    return Response(status=status.HTTP_429_TOO_MANY_REQUESTS)\r\nelse:\r\n    SendInviteEmailService(invite).send_email()\r\n    return Response(status=status.HTTP_200_OK)\r\n```\r\n\r\n**[22/Mar/2018 01:03:15] \"POST /api/v1/personal_trainers/1/invites/2/resend_email/ HTTP/1.1\" 200 0**\r\n[22/Mar/2018 01:03:16] \"POST /api/v1/personal_trainers/1/invites/2/resend_email/ HTTP/1.1\" 429 0\r\n[22/Mar/2018 01:03:17] \"POST /api/v1/personal_trainers/1/invites/2/resend_email/ HTTP/1.1\" 429 0\r\n[22/Mar/2018 01:13:23] \"POST /api/v1/personal_trainers/1/invites/2/resend_email/ HTTP/1.1\" 429 0\r\n[22/Mar/2018 01:13:24] \"POST /api/v1/personal_trainers/1/invites/2/resend_email/ HTTP/1.1\" 429 0\r\n[22/Mar/2018 01:33:28] \"POST /api/v1/personal_trainers/1/invites/2/resend_email/ HTTP/1.1\" 429 0\r\n[22/Mar/2018 01:33:29] \"POST /api/v1/personal_trainers/1/invites/2/resend_email/ HTTP/1.1\" 429 0\r\n[22/Mar/2018 01:43:32] \"POST /api/v1/personal_trainers/1/invites/2/resend_email/ HTTP/1.1\" 429 0\r\n[22/Mar/2018 01:43:33] \"POST /api/v1/personal_trainers/1/invites/2/resend_email/ HTTP/1.1\" 429 0\r\n[22/Mar/2018 01:43:33] \"POST /api/v1/personal_trainers/1/invites/2/resend_email/ HTTP/1.1\" 429 0\r\n**[22/Mar/2018 01:53:36] \"POST /api/v1/personal_trainers/1/invites/2/resend_email/ HTTP/1.1\" 200 0**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/140", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/140/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/140/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/140", "id": 307438971, "node_id": "MDU6SXNzdWUzMDc0Mzg5NzE=", "number": 140, "title": "How to throttling a view depending on the accessed object?", "user": {"login": "brunohkbx", "id": 6487206, "node_id": "MDQ6VXNlcjY0ODcyMDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6487206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunohkbx", "html_url": "https://github.com/brunohkbx", "followers_url": "https://api.github.com/users/brunohkbx/followers", "following_url": "https://api.github.com/users/brunohkbx/following{/other_user}", "gists_url": "https://api.github.com/users/brunohkbx/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunohkbx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunohkbx/subscriptions", "organizations_url": "https://api.github.com/users/brunohkbx/orgs", "repos_url": "https://api.github.com/users/brunohkbx/repos", "events_url": "https://api.github.com/users/brunohkbx/events{/privacy}", "received_events_url": "https://api.github.com/users/brunohkbx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-21T22:21:57Z", "updated_at": "2018-03-22T02:28:11Z", "closed_at": "2018-03-22T02:28:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an API with this endpoint\r\n`api/v1/personal_trainers/{personal_trainer_pk}/invites/{pk}/resend_email/`\r\n\r\nI have tried something like that:\r\n\r\n```\r\n@ratelimit(key='user' rate='5/m', block=True)\r\n@detail_route(methods=['post'])\r\ndef resend_email(self, request, personal_trainer_pk, pk=None):\r\n    invite = get_object_or_404(Invite, pk=pk, personal_trainer_id=personal_trainer_pk)\r\n\r\n    SendInviteEmailService(invite).send_email()\r\n\r\n   return Response(status=status.HTTP_200_OK)\r\n```\r\n\r\nBut I need to block by invite's PK instead of user.\r\nIs it possible to limit the access using this lib?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/139", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/139/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/139/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/139", "id": 305594349, "node_id": "MDU6SXNzdWUzMDU1OTQzNDk=", "number": 139, "title": "django-ratelimit not working in a RHEL WebServer", "user": {"login": "obautista01", "id": 37388702, "node_id": "MDQ6VXNlcjM3Mzg4NzAy", "avatar_url": "https://avatars3.githubusercontent.com/u/37388702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obautista01", "html_url": "https://github.com/obautista01", "followers_url": "https://api.github.com/users/obautista01/followers", "following_url": "https://api.github.com/users/obautista01/following{/other_user}", "gists_url": "https://api.github.com/users/obautista01/gists{/gist_id}", "starred_url": "https://api.github.com/users/obautista01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obautista01/subscriptions", "organizations_url": "https://api.github.com/users/obautista01/orgs", "repos_url": "https://api.github.com/users/obautista01/repos", "events_url": "https://api.github.com/users/obautista01/events{/privacy}", "received_events_url": "https://api.github.com/users/obautista01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658202169, "node_id": "MDU6TGFiZWw2NTgyMDIxNjk=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/input%20needed", "name": "input needed", "color": "fef2c0", "default": false, "description": null}, {"id": 658209179, "node_id": "MDU6TGFiZWw2NTgyMDkxNzk=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-15T15:12:43Z", "updated_at": "2018-08-18T03:46:37Z", "closed_at": "2018-08-18T03:46:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've been tasked with a script that looks at every incoming packet and blocks if the incoming rate > 50 Requests/s from a given IP. This needs to be done on a rolling window of 60 mins.\r\n\r\nI went ahead and installed django-ratelimit in a Linux Web server and executed the script below.\r\nSimultaneously I'm sending a bunch of HTTP GET requests from a different machine (in the same network, NO LB in between) using curl in an infinite loop.\r\n\r\nThe rate limit script is not doing anything; it executes in a couple of seconds and exits with no error.\r\nNo single HTTP request is being blocked.\r\n\r\nAny idea of what could I be missing here?\r\nI've been trying different rates like 1/m, 2/m, the result is the same.\r\n\r\n--------------------------\r\n#!/usr/bin/python\r\nfrom ratelimit.decorators import ratelimit\r\n\r\n@ratelimit(key='ip', rate='1/m', method='GET', block=True)\r\ndef myview(request):\r\n    was_limited = getattr(request, 'limited', False)\r\n    return HttpResponse()\r\n-----------------\r\n\r\nThank you very much!\r\n- Octavio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/137", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/137/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/137/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/137", "id": 304179794, "node_id": "MDU6SXNzdWUzMDQxNzk3OTQ=", "number": 137, "title": "IndexError: tuple out of range", "user": {"login": "EvanZ", "id": 1295082, "node_id": "MDQ6VXNlcjEyOTUwODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1295082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EvanZ", "html_url": "https://github.com/EvanZ", "followers_url": "https://api.github.com/users/EvanZ/followers", "following_url": "https://api.github.com/users/EvanZ/following{/other_user}", "gists_url": "https://api.github.com/users/EvanZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/EvanZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EvanZ/subscriptions", "organizations_url": "https://api.github.com/users/EvanZ/orgs", "repos_url": "https://api.github.com/users/EvanZ/repos", "events_url": "https://api.github.com/users/EvanZ/events{/privacy}", "received_events_url": "https://api.github.com/users/EvanZ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658202169, "node_id": "MDU6TGFiZWw2NTgyMDIxNjk=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/input%20needed", "name": "input needed", "color": "fef2c0", "default": false, "description": null}, {"id": 658209179, "node_id": "MDU6TGFiZWw2NTgyMDkxNzk=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-11T18:10:05Z", "updated_at": "2018-08-18T03:48:58Z", "closed_at": "2018-08-18T03:48:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting an error with the following code:\r\n\r\n```\r\n@api_view(['GET', 'POST'])\r\n@renderer_classes((JSONRenderer,))\r\n@authentication_classes((TokenAuthentication,))\r\n@ratelimit(key='ip', rate='3/h')\r\ndef label(request):\r\n    response = client.annotate_image({\r\n        'image': {\r\n            'source': {\r\n                'image_uri': request.data['url']\r\n            }\r\n        },\r\n        'features': [\r\n            {\r\n                'type': vision.enums.Feature.Type.WEB_DETECTION\r\n            },\r\n            {\r\n                'type': vision.enums.Feature.Type.CROP_HINTS\r\n            }\r\n        ]\r\n    })\r\n    entities = [json.loads(MessageToJson(entity)) for entity in response.web_detection.web_entities]\r\n    images = [json.loads(MessageToJson(image)) for image in\r\n              response.web_detection.full_matching_images]\r\n    partials = [json.loads(MessageToJson(image)) for image in\r\n              response.web_detection.partial_matching_images]\r\n    pages = [json.loads(MessageToJson(page)) for page in\r\n             response.web_detection.pages_with_matching_images]\r\n    return Response({\r\n        'entities': entities,\r\n        'images': images,\r\n        'partials': partials,\r\n        'pages': pages\r\n```\r\n    })\r\n\r\n```\r\n  File \"/.virtualenv/lib/python3.6/site-packages/ratelimit/decorators.py\", line 23, in _wrapped\r\n    request = args[1]\r\nIndexError: tuple index out of range\r\n```\r\n\r\nUsing Django 1.11 and django-rest-framework (is it not compatible or something?).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/135", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/135/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/135/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/135", "id": 288516210, "node_id": "MDU6SXNzdWUyODg1MTYyMTA=", "number": 135, "title": "Catch ratelimit exception", "user": {"login": "ahsan-ul-haq", "id": 7567613, "node_id": "MDQ6VXNlcjc1Njc2MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7567613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahsan-ul-haq", "html_url": "https://github.com/ahsan-ul-haq", "followers_url": "https://api.github.com/users/ahsan-ul-haq/followers", "following_url": "https://api.github.com/users/ahsan-ul-haq/following{/other_user}", "gists_url": "https://api.github.com/users/ahsan-ul-haq/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahsan-ul-haq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahsan-ul-haq/subscriptions", "organizations_url": "https://api.github.com/users/ahsan-ul-haq/orgs", "repos_url": "https://api.github.com/users/ahsan-ul-haq/repos", "events_url": "https://api.github.com/users/ahsan-ul-haq/events{/privacy}", "received_events_url": "https://api.github.com/users/ahsan-ul-haq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-15T08:39:02Z", "updated_at": "2018-01-22T10:38:37Z", "closed_at": "2018-01-22T10:38:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using this package to rate limit one of my views. As the site is very widely used the ratelimit exception is caused many times how can I handle the exception in code \r\nhttps://github.com/edx/edx-platform/blob/master/openedx/core/djangoapps/oauth_dispatch/views.py#L89", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/134", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/134/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/134/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/134", "id": 279166277, "node_id": "MDU6SXNzdWUyNzkxNjYyNzc=", "number": 134, "title": "Crash in utils.py in user_or_ip with Django 2.0", "user": {"login": "lmdsp", "id": 1681470, "node_id": "MDQ6VXNlcjE2ODE0NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1681470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmdsp", "html_url": "https://github.com/lmdsp", "followers_url": "https://api.github.com/users/lmdsp/followers", "following_url": "https://api.github.com/users/lmdsp/following{/other_user}", "gists_url": "https://api.github.com/users/lmdsp/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmdsp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmdsp/subscriptions", "organizations_url": "https://api.github.com/users/lmdsp/orgs", "repos_url": "https://api.github.com/users/lmdsp/repos", "events_url": "https://api.github.com/users/lmdsp/events{/privacy}", "received_events_url": "https://api.github.com/users/lmdsp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-04T22:00:51Z", "updated_at": "2018-08-18T03:49:33Z", "closed_at": "2018-08-18T03:49:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "utils.py l.28 uses `user.is_authenticated()` which is [deprecated in Django 1.10](https://docs.djangoproject.com/en/2.0/releases/1.10/#using-user-is-authenticated-and-user-is-anonymous-as-methods) and [removed in 2.0](https://docs.djangoproject.com/en/2.0/releases/2.0/#features-removed-in-2-0),\r\nraising at TypeError exception ('bool' object is not callable).\r\nThe function has been replaced with the corresponding property `user.is_authenticated`\r\n\r\n```python\r\ndef user_or_ip(request):\r\n    if request.user.is_authenticated(): # Removed in Django 2.0\r\n        return str(request.user.pk)\r\n    return request.META['REMOTE_ADDR']\r\n```\r\n\r\nSince Django 2.0:\r\n\r\n> Using User.is_authenticated() and User.is_anonymous() as methods rather than properties is no longer supported.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/133", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/133/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/133/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/133", "id": 272298680, "node_id": "MDU6SXNzdWUyNzIyOTg2ODA=", "number": 133, "title": "How to whitelist bots/IP addresses?", "user": {"login": "mlissner", "id": 236970, "node_id": "MDQ6VXNlcjIzNjk3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/236970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlissner", "html_url": "https://github.com/mlissner", "followers_url": "https://api.github.com/users/mlissner/followers", "following_url": "https://api.github.com/users/mlissner/following{/other_user}", "gists_url": "https://api.github.com/users/mlissner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlissner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlissner/subscriptions", "organizations_url": "https://api.github.com/users/mlissner/orgs", "repos_url": "https://api.github.com/users/mlissner/repos", "events_url": "https://api.github.com/users/mlissner/events{/privacy}", "received_events_url": "https://api.github.com/users/mlissner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-08T18:18:40Z", "updated_at": "2017-11-20T22:58:10Z", "closed_at": "2017-11-20T22:43:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I put ratelimits in place last week, and now I'm getting errors from Google that it can't crawl as fast as it wants to, and is getting 429 errors as a result.\r\n\r\nThe easiest fix would be to have a whitelist of IP addresses that are allowed to crawl. That'd work for partner organizations with static IPs, but according to [Google's support page][google], the Googlebot's IP address changes from time to time, so you are expected to verify it by using the `host` command.\r\n\r\nSo: is there a way to whitelist Google's IP addresses or to run a custom function for whitelisting? \r\n\r\nI could see an API like this for the simple case:\r\n\r\n    @ratelimit(key='ip', rate='100/h', block=True, whitelist=[some-list-of-ip-addresses])\r\n\r\nAnd like this for the hard case of having to verify the crawler:\r\n\r\n    @ratelimit(key='ip', rate='100/h', block=True, whitelist=is_whitelisted)\r\n\r\nThe callable would then look something like this:\r\n\r\n    def is_whitelisted(request):\r\n        \"\"\"Check if the IP is in our list of trusted static IPs or if it's Google.\"\"\"\r\n        ip = request.get('IP_ADDRESS'))\r\n        if ip in settings['WHITELIST']:\r\n            return True\r\n        # Not in our static whitelist. Is it Google?\r\n        is_google = verify_google_by_hostname(ip)\r\n        return is_google\r\n\r\nIs there an easy way to handle this? If not would pull requests be welcome? I might be able to find time to do this, though I know I'll struggle to figure out how to pass the request object to the whitelist callable if we go with this API (I'm no good at making wrappers).\r\n\r\nThoughts?\r\n\r\n[google]: https://support.google.com/webmasters/answer/80553?hl=en", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/130", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/130/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/130/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/130", "id": 270060032, "node_id": "MDU6SXNzdWUyNzAwNjAwMzI=", "number": 130, "title": "Use Redis Cache Expiration to Minimize Memory Usage (or Encourage a Cron job)", "user": {"login": "mlissner", "id": 236970, "node_id": "MDQ6VXNlcjIzNjk3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/236970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlissner", "html_url": "https://github.com/mlissner", "followers_url": "https://api.github.com/users/mlissner/followers", "following_url": "https://api.github.com/users/mlissner/following{/other_user}", "gists_url": "https://api.github.com/users/mlissner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlissner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlissner/subscriptions", "organizations_url": "https://api.github.com/users/mlissner/orgs", "repos_url": "https://api.github.com/users/mlissner/repos", "events_url": "https://api.github.com/users/mlissner/events{/privacy}", "received_events_url": "https://api.github.com/users/mlissner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658211353, "node_id": "MDU6TGFiZWw2NTgyMTEzNTM=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/documentation", "name": "documentation", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-31T18:03:05Z", "updated_at": "2017-11-08T18:04:23Z", "closed_at": "2017-11-08T18:04:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unless I'm missing something, enabling this app will slowly but steadily take up more and more memory/hd space as more and more IP addresses visit your site. I can see two solutions for this:\r\n\r\n1. For those that use Redis for their cache, we can use [the EXPIRE command][1] to make it so keys go away when they're no longer relevant. For example, if the rate is 5/hour and the last time an IP hit was an hour ago, we can expire the key.\r\n\r\n1. For those that don't use Redis, we should encourage a cron job, similar to [the one that's used to clear old old sessions][sess]. The cron job could just run a management command that clears out the entire cache. Run it once a week, and it should be OK for most people.\r\n\r\nAs it is now, we have neither of these things and this app is essentially a memory leak for those using an in-memory cache. Not great.\r\n\r\n[1]: https://redis.io/commands/expire\r\n[sess]: https://docs.djangoproject.com/en/1.11/topics/http/sessions/#clearing-the-session-store", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/127", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/127/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/127/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/127", "id": 247345501, "node_id": "MDU6SXNzdWUyNDczNDU1MDE=", "number": 127, "title": "CBV + multiple ratelimit decorator + dispatch + per site cache", "user": {"login": "lechup", "id": 957803, "node_id": "MDQ6VXNlcjk1NzgwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/957803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lechup", "html_url": "https://github.com/lechup", "followers_url": "https://api.github.com/users/lechup/followers", "following_url": "https://api.github.com/users/lechup/following{/other_user}", "gists_url": "https://api.github.com/users/lechup/gists{/gist_id}", "starred_url": "https://api.github.com/users/lechup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lechup/subscriptions", "organizations_url": "https://api.github.com/users/lechup/orgs", "repos_url": "https://api.github.com/users/lechup/repos", "events_url": "https://api.github.com/users/lechup/events{/privacy}", "received_events_url": "https://api.github.com/users/lechup/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658209179, "node_id": "MDU6TGFiZWw2NTgyMDkxNzk=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-02T10:39:04Z", "updated_at": "2017-08-02T11:31:41Z", "closed_at": "2017-08-02T11:31:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to enable ratelimit on my site. I have problems with actually reatelimiting views, i'm using code like:\r\n\r\n```python\r\n@method_decorator(ratelimit(key='ip', rate='3/s', block=True), name='dispatch')\r\n@method_decorator(ratelimit(key='ip', rate='20/m', block=True), name='dispatch')\r\n@method_decorator(ratelimit(key='ip', rate='50/h', block=True), name='dispatch')\r\n@method_decorator(vary_on_headers('X-subdomain'), name='dispatch')\r\nclass BaseListView(ListView):\r\n    paginate_by = 100\r\n```\r\n\r\nI've enabled CACHE:\r\n\r\n```python\r\nCACHES = {\r\n    'default': {\r\n        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',\r\n        'LOCATION': 'lechup',\r\n    }\r\n}\r\n```\r\n\r\nI've refreshed page 100 times within 1 minute and I still do not get 403 ...\r\n\r\nIf I set `rate='0/s'`, I'm getting 403 page. Any clues what could be wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/126", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/126/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/126/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/126", "id": 246604282, "node_id": "MDU6SXNzdWUyNDY2MDQyODI=", "number": 126, "title": "Update supported Django versions and tests (mid 2017)", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658202076, "node_id": "MDU6TGFiZWw2NTgyMDIwNzY=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/help%20wanted", "name": "help wanted", "color": "c2e0c6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/4", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/4", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/4/labels", "id": 785220, "node_id": "MDk6TWlsZXN0b25lNzg1MjIw", "number": 4, "title": "1.1", "description": "- Deprecate that which needs deprecating (mixin, `field:` key shortcut).\r\n- `settings.RATELIMIT_OPTIONS` configuration options, based on `group`.\r\n- Document things better", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2014-09-10T17:44:07Z", "updated_at": "2019-02-20T21:33:51Z", "due_on": null, "closed_at": "2019-02-20T21:33:51Z"}, "comments": 0, "created_at": "2017-07-30T19:38:30Z", "updated_at": "2017-11-02T03:30:21Z", "closed_at": "2017-11-02T03:30:21Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Test against\r\n\r\n- Django 1.8 (LTS) on Python 2.7, 3.3, 3.4, 3.5, 3.6\r\n- Django 1.10 on Python 2.7, 3.4, 3.5\r\n- Django 1.11 on Python 2.7, 3.4, 3.5, 3.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/125", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/125/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/125/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/125", "id": 246603820, "node_id": "MDU6SXNzdWUyNDY2MDM4MjA=", "number": 125, "title": "Remove examples and discourage password as `key` value", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658211353, "node_id": "MDU6TGFiZWw2NTgyMTEzNTM=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/documentation", "name": "documentation", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/4", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/4", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/4/labels", "id": 785220, "node_id": "MDk6TWlsZXN0b25lNzg1MjIw", "number": 4, "title": "1.1", "description": "- Deprecate that which needs deprecating (mixin, `field:` key shortcut).\r\n- `settings.RATELIMIT_OPTIONS` configuration options, based on `group`.\r\n- Document things better", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2014-09-10T17:44:07Z", "updated_at": "2019-02-20T21:33:51Z", "due_on": null, "closed_at": "2019-02-20T21:33:51Z"}, "comments": 2, "created_at": "2017-07-30T19:30:19Z", "updated_at": "2018-12-29T17:43:02Z", "closed_at": "2018-12-29T17:43:02Z", "author_association": "OWNER", "active_lock_reason": null, "body": "There are some potential risks around using `key='post:password'`, especially with cache stores like Redis that make it possible to enumerate cache keys. @willkg and I decided to replace those examples with a note similar to \r\n\r\n> We don't recommend creating ratelimit keys using any kind of secrets like passwords, api keys, aws keys, private keys or things like that. The way ratelimit works means that those things would come in as strings, get md5 hashed and then stored in your cache backend creating a virtually-plain-text copy of secret things in your cache backend. That's a terrible situation to be in security-wise. Don't do it.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/124", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/124/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/124/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/124", "id": 246603653, "node_id": "MDU6SXNzdWUyNDY2MDM2NTM=", "number": 124, "title": "Update docs middleware examples to Django 1.10-style", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658211353, "node_id": "MDU6TGFiZWw2NTgyMTEzNTM=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/documentation", "name": "documentation", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/7", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7/labels", "id": 4074260, "node_id": "MDk6TWlsZXN0b25lNDA3NDI2MA==", "number": 7, "title": "3.0", "description": "Time to drop Python 2.7 and Django 1.x. Will take the opportunity to make some other changes.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 11, "state": "open", "created_at": "2019-02-20T21:32:57Z", "updated_at": "2020-06-30T23:28:49Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2017-07-30T19:26:47Z", "updated_at": "2019-02-21T23:31:26Z", "closed_at": "2019-02-21T23:31:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "There is at least one example in the docs using old-style middleware: https://django-ratelimit.readthedocs.io/en/latest/security.html#middleware We should find any examples and update them to new/1.10-style.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/123", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/123/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/123/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/123", "id": 246603453, "node_id": "MDU6SXNzdWUyNDY2MDM0NTM=", "number": 123, "title": "Example of per-user ratelimits", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658211353, "node_id": "MDU6TGFiZWw2NTgyMTEzNTM=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/documentation", "name": "documentation", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/7", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7/labels", "id": 4074260, "node_id": "MDk6TWlsZXN0b25lNDA3NDI2MA==", "number": 7, "title": "3.0", "description": "Time to drop Python 2.7 and Django 1.x. Will take the opportunity to make some other changes.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 11, "state": "open", "created_at": "2019-02-20T21:32:57Z", "updated_at": "2020-06-30T23:28:49Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2017-07-30T19:23:25Z", "updated_at": "2019-02-27T23:29:45Z", "closed_at": "2019-02-27T23:29:45Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Rather than actually doing #52 in the library, let's just add an example from it to the docs. Perhaps a \"cookbook\" section.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/122", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/122/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/122/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/122", "id": 246603095, "node_id": "MDU6SXNzdWUyNDY2MDMwOTU=", "number": 122, "title": "Better document `rate=None`, `rate='0/s'`", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658211353, "node_id": "MDU6TGFiZWw2NTgyMTEzNTM=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/documentation", "name": "documentation", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/7", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7/labels", "id": 4074260, "node_id": "MDk6TWlsZXN0b25lNDA3NDI2MA==", "number": 7, "title": "3.0", "description": "Time to drop Python 2.7 and Django 1.x. Will take the opportunity to make some other changes.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 11, "state": "open", "created_at": "2019-02-20T21:32:57Z", "updated_at": "2020-06-30T23:28:49Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2017-07-30T19:16:47Z", "updated_at": "2019-02-21T23:37:39Z", "closed_at": "2019-02-21T23:37:39Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The behavior when ratelimits are set to `None` (i.e. disabled) or `0` (i.e. always disallow requests) is not well-documented, it's hidden at the bottom of the Rates page. It should probably its own section or otherwise called out.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/119", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/119/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/119/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/119", "id": 211336948, "node_id": "MDU6SXNzdWUyMTEzMzY5NDg=", "number": 119, "title": "Ability to disable, reset or empty rate limit temporarily?", "user": {"login": "parisk", "id": 1188592, "node_id": "MDQ6VXNlcjExODg1OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1188592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parisk", "html_url": "https://github.com/parisk", "followers_url": "https://api.github.com/users/parisk/followers", "following_url": "https://api.github.com/users/parisk/following{/other_user}", "gists_url": "https://api.github.com/users/parisk/gists{/gist_id}", "starred_url": "https://api.github.com/users/parisk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parisk/subscriptions", "organizations_url": "https://api.github.com/users/parisk/orgs", "repos_url": "https://api.github.com/users/parisk/repos", "events_url": "https://api.github.com/users/parisk/events{/privacy}", "received_events_url": "https://api.github.com/users/parisk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-02T09:37:42Z", "updated_at": "2018-03-21T15:13:41Z", "closed_at": "2017-03-02T22:23:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI am using django-ratelimit in one of my projects and I am running into the following issue:\r\n\r\nI am performing functionality tests in various rate-limited endpoints but some times when I run the test suite, django-ratelimit rejects some of the test client's requests with error 429 (I guess it gets lots of requests in a fraction of time).\r\n\r\nDisabling it completely is not an option, because I am testing a few endpoints that they are indeed rate limited and behave consistently.\r\n\r\nHow would you propose me to handle this case?\r\n\r\nThanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/118", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/118/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/118/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/118", "id": 209852164, "node_id": "MDU6SXNzdWUyMDk4NTIxNjQ=", "number": 118, "title": "Dont work uWSGI + Nginx", "user": {"login": "eseffair", "id": 6043716, "node_id": "MDQ6VXNlcjYwNDM3MTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6043716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eseffair", "html_url": "https://github.com/eseffair", "followers_url": "https://api.github.com/users/eseffair/followers", "following_url": "https://api.github.com/users/eseffair/following{/other_user}", "gists_url": "https://api.github.com/users/eseffair/gists{/gist_id}", "starred_url": "https://api.github.com/users/eseffair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eseffair/subscriptions", "organizations_url": "https://api.github.com/users/eseffair/orgs", "repos_url": "https://api.github.com/users/eseffair/repos", "events_url": "https://api.github.com/users/eseffair/events{/privacy}", "received_events_url": "https://api.github.com/users/eseffair/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-23T18:59:20Z", "updated_at": "2017-07-30T19:02:33Z", "closed_at": "2017-07-30T19:02:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rate limit dont work in this deployment scenario...Any idea?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/116", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/116/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/116/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/116", "id": 194755165, "node_id": "MDU6SXNzdWUxOTQ3NTUxNjU=", "number": 116, "title": " ImportError: cannot import name 'ALL'", "user": {"login": "mymusise", "id": 6883957, "node_id": "MDQ6VXNlcjY4ODM5NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6883957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mymusise", "html_url": "https://github.com/mymusise", "followers_url": "https://api.github.com/users/mymusise/followers", "following_url": "https://api.github.com/users/mymusise/following{/other_user}", "gists_url": "https://api.github.com/users/mymusise/gists{/gist_id}", "starred_url": "https://api.github.com/users/mymusise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mymusise/subscriptions", "organizations_url": "https://api.github.com/users/mymusise/orgs", "repos_url": "https://api.github.com/users/mymusise/repos", "events_url": "https://api.github.com/users/mymusise/events{/privacy}", "received_events_url": "https://api.github.com/users/mymusise/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-10T09:09:23Z", "updated_at": "2016-12-16T15:27:07Z", "closed_at": "2016-12-16T15:20:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got a error in version 1.0.1 like this \r\n\r\n    decorators.py\", line 7, in <module>\r\n        from ratelimit import ALL, UNSAFE\r\n    ImportError: cannot import name 'ALL'\r\n\r\nbut it work in version 1.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/115", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/115/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/115/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/115", "id": 187915336, "node_id": "MDU6SXNzdWUxODc5MTUzMzY=", "number": 115, "title": "django caches Compatible ", "user": {"login": "mymusise", "id": 6883957, "node_id": "MDQ6VXNlcjY4ODM5NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6883957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mymusise", "html_url": "https://github.com/mymusise", "followers_url": "https://api.github.com/users/mymusise/followers", "following_url": "https://api.github.com/users/mymusise/following{/other_user}", "gists_url": "https://api.github.com/users/mymusise/gists{/gist_id}", "starred_url": "https://api.github.com/users/mymusise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mymusise/subscriptions", "organizations_url": "https://api.github.com/users/mymusise/orgs", "repos_url": "https://api.github.com/users/mymusise/repos", "events_url": "https://api.github.com/users/mymusise/events{/privacy}", "received_events_url": "https://api.github.com/users/mymusise/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-08T06:51:06Z", "updated_at": "2016-11-08T08:54:05Z", "closed_at": "2016-11-08T08:34:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, guy~\r\nIs django-ratelimit still compatible with 1.6.x\uff1fI got a error `ImportError: cannot import name caches` from utils.py. Just like #60 \uff0c`from django.core.cache import caches` and `caches['cache_name']` not work  in django 1.6.x. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/114", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/114/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/114/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/114", "id": 182000262, "node_id": "MDU6SXNzdWUxODIwMDAyNjI=", "number": 114, "title": "No 1.0.1 update in master", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-10T12:15:39Z", "updated_at": "2016-10-10T15:08:27Z", "closed_at": "2016-10-10T13:54:19Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Hey @adamchainz can you push the commit bumping the version to master and tag it, and update the changelog?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/111", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/111/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/111/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/111", "id": 177904195, "node_id": "MDU6SXNzdWUxNzc5MDQxOTU=", "number": 111, "title": "Is it possible to increment rate limit on one view and consume on others?", "user": {"login": "ryanwilsonperkin", "id": 3004111, "node_id": "MDQ6VXNlcjMwMDQxMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3004111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanwilsonperkin", "html_url": "https://github.com/ryanwilsonperkin", "followers_url": "https://api.github.com/users/ryanwilsonperkin/followers", "following_url": "https://api.github.com/users/ryanwilsonperkin/following{/other_user}", "gists_url": "https://api.github.com/users/ryanwilsonperkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanwilsonperkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanwilsonperkin/subscriptions", "organizations_url": "https://api.github.com/users/ryanwilsonperkin/orgs", "repos_url": "https://api.github.com/users/ryanwilsonperkin/repos", "events_url": "https://api.github.com/users/ryanwilsonperkin/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanwilsonperkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-19T21:33:50Z", "updated_at": "2016-10-03T18:22:04Z", "closed_at": "2016-10-03T18:22:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking to use django-ratelimit to increment a rate limit when a user POSTs to a view, and show a notice if the limit has been exceeded, on either a POST _or_ a GET. Is this feature supported?\n\nMy goal would be something like so:\n\n``` python\nfrom django.views.generic import FormView\nfrom ratelimit.mixins import RatelimitMixin\n\nclass ExampleView(RatelimitMixin, FormView):\n    ratelimit_key = 'ip'\n    ratelimit_method = 'POST'\n    ratelimit_rate = '3/m'\n\n    def get_context_data(self, **kwargs):\n        context = super(ExampleView, self).get_context_data(**kwargs)\n        context['limited'] = self.request.limited\n```\n\nHowever, this raises an AttributeError when this view processes a GET, since the `limited` attribute is only applied on `request`s for a POST. I could change `ratelimit_method` to `ALL`, but I _don't_ want to increment the counter for GETs.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/109", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/109/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/109/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/109", "id": 174800816, "node_id": "MDU6SXNzdWUxNzQ4MDA4MTY=", "number": 109, "title": "Django 1.10 Middleware Compatibility", "user": {"login": "louis-haddrell", "id": 10925856, "node_id": "MDQ6VXNlcjEwOTI1ODU2", "avatar_url": "https://avatars3.githubusercontent.com/u/10925856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/louis-haddrell", "html_url": "https://github.com/louis-haddrell", "followers_url": "https://api.github.com/users/louis-haddrell/followers", "following_url": "https://api.github.com/users/louis-haddrell/following{/other_user}", "gists_url": "https://api.github.com/users/louis-haddrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/louis-haddrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/louis-haddrell/subscriptions", "organizations_url": "https://api.github.com/users/louis-haddrell/orgs", "repos_url": "https://api.github.com/users/louis-haddrell/repos", "events_url": "https://api.github.com/users/louis-haddrell/events{/privacy}", "received_events_url": "https://api.github.com/users/louis-haddrell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-02T16:38:00Z", "updated_at": "2016-09-02T19:42:06Z", "closed_at": "2016-09-02T19:42:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The ratelimit middleware isn't compatible with Django 1.10's new middleware style\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/105", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/105/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/105/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/105", "id": 153219603, "node_id": "MDU6SXNzdWUxNTMyMTk2MDM=", "number": 105, "title": "ImportError: No module named importlib", "user": {"login": "kevthehermit", "id": 2545096, "node_id": "MDQ6VXNlcjI1NDUwOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2545096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevthehermit", "html_url": "https://github.com/kevthehermit", "followers_url": "https://api.github.com/users/kevthehermit/followers", "following_url": "https://api.github.com/users/kevthehermit/following{/other_user}", "gists_url": "https://api.github.com/users/kevthehermit/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevthehermit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevthehermit/subscriptions", "organizations_url": "https://api.github.com/users/kevthehermit/orgs", "repos_url": "https://api.github.com/users/kevthehermit/repos", "events_url": "https://api.github.com/users/kevthehermit/events{/privacy}", "received_events_url": "https://api.github.com/users/kevthehermit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-05T12:07:15Z", "updated_at": "2016-05-05T12:38:46Z", "closed_at": "2016-05-05T12:38:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django 1.9 No longer supports django.utils.importlib import_module\n\nhttps://github.com/jsocol/django-ratelimit/blob/f9b1e161d1389d8d83a51e6e97822d8475a73554/ratelimit/middleware.py#L2\n\n```\ndjango.utils.importlib is a compatibility library for when Python 2.6 was still supported. It has been obsolete since Django 1.7, which dropped support for Python 2.6, and is removed in 1.9 per the deprecation cycle.\n\nUse Python's import_module function instead:\n\nfrom importlib import import_module\nThe reason you can import it from django.utils.module_loading is that importlib.import_module is imported in that module, it is not because module_loading in any way defines the actual function.\n\nSince django.utils.module_loading.import_module is not part of the public API, it can be removed at any time if it is no longer used - even in a minor version upgrade.\n```\n\nSource - https://stackoverflow.com/questions/32761566/django-1-9-importerror-for-import-module\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/104", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/104/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/104/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/104", "id": 142666090, "node_id": "MDU6SXNzdWUxNDI2NjYwOTA=", "number": 104, "title": "is_ratelimited increment=True does not seem to work", "user": {"login": "jplehmann", "id": 460964, "node_id": "MDQ6VXNlcjQ2MDk2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/460964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplehmann", "html_url": "https://github.com/jplehmann", "followers_url": "https://api.github.com/users/jplehmann/followers", "following_url": "https://api.github.com/users/jplehmann/following{/other_user}", "gists_url": "https://api.github.com/users/jplehmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplehmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplehmann/subscriptions", "organizations_url": "https://api.github.com/users/jplehmann/orgs", "repos_url": "https://api.github.com/users/jplehmann/repos", "events_url": "https://api.github.com/users/jplehmann/events{/privacy}", "received_events_url": "https://api.github.com/users/jplehmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658209179, "node_id": "MDU6TGFiZWw2NTgyMDkxNzk=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/question", "name": "question", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-22T14:26:11Z", "updated_at": "2017-07-30T19:11:16Z", "closed_at": "2017-07-30T19:11:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tested with decorator usage and it worked as expected (with the exception of issue #73). However using the helper function in middleware as documented:\n\n```\n    def process_request(self, request):\n        if is_ratelimited(request, group=\"all\", key='user_or_ip', rate='2/m', method='ALL', increment=True):\n            log.warn(\"Request is over rate-limit: %s\", request)\n        else:\n            log.warn(\"Just checked\")\n```\n\nDoes not appear to work in that the \"over limit\" message is never displayed, despite `increment=True`.\n\nI believe my caching is working fine since as I stated, the decorator behaves properly.  I am moving forward using the decorator so it's not urgent for me.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/103", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/103/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/103/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/103", "id": 142164048, "node_id": "MDU6SXNzdWUxNDIxNjQwNDg=", "number": 103, "title": "Rate-limiting all views", "user": {"login": "jplehmann", "id": 460964, "node_id": "MDQ6VXNlcjQ2MDk2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/460964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplehmann", "html_url": "https://github.com/jplehmann", "followers_url": "https://api.github.com/users/jplehmann/followers", "following_url": "https://api.github.com/users/jplehmann/following{/other_user}", "gists_url": "https://api.github.com/users/jplehmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplehmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplehmann/subscriptions", "organizations_url": "https://api.github.com/users/jplehmann/orgs", "repos_url": "https://api.github.com/users/jplehmann/repos", "events_url": "https://api.github.com/users/jplehmann/events{/privacy}", "received_events_url": "https://api.github.com/users/jplehmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-03-20T13:31:14Z", "updated_at": "2016-03-22T14:23:27Z", "closed_at": "2016-03-20T22:25:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a feature request / solicitation for advice.\n\nI was looking for something like this except I don't necessarily want to apply it per view but for my whole site.  I didn't see that this is possible with `django-ratelimit` but it doesn't seem like that would be a difficult extension. Is there a reason this isn't an option? Is it a bad idea?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/99", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/99/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/99/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/99", "id": 130469179, "node_id": "MDU6SXNzdWUxMzA0NjkxNzk=", "number": 99, "title": "A new release?", "user": {"login": "SevenDeadlySins", "id": 1319968, "node_id": "MDQ6VXNlcjEzMTk5Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1319968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SevenDeadlySins", "html_url": "https://github.com/SevenDeadlySins", "followers_url": "https://api.github.com/users/SevenDeadlySins/followers", "following_url": "https://api.github.com/users/SevenDeadlySins/following{/other_user}", "gists_url": "https://api.github.com/users/SevenDeadlySins/gists{/gist_id}", "starred_url": "https://api.github.com/users/SevenDeadlySins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SevenDeadlySins/subscriptions", "organizations_url": "https://api.github.com/users/SevenDeadlySins/orgs", "repos_url": "https://api.github.com/users/SevenDeadlySins/repos", "events_url": "https://api.github.com/users/SevenDeadlySins/events{/privacy}", "received_events_url": "https://api.github.com/users/SevenDeadlySins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-02-01T20:08:43Z", "updated_at": "2016-05-28T18:56:48Z", "closed_at": "2016-05-28T16:41:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now that Django 1.9 is out, it'd be nice to have an official release that supports it, so that we don't have to pull from repo in order to use this with Django 1.9. Any way that can happen?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/97", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/97/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/97/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/97", "id": 121916216, "node_id": "MDU6SXNzdWUxMjE5MTYyMTY=", "number": 97, "title": "ratelimit broken for Django 1.9", "user": {"login": "jvc26", "id": 502300, "node_id": "MDQ6VXNlcjUwMjMwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/502300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvc26", "html_url": "https://github.com/jvc26", "followers_url": "https://api.github.com/users/jvc26/followers", "following_url": "https://api.github.com/users/jvc26/following{/other_user}", "gists_url": "https://api.github.com/users/jvc26/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvc26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvc26/subscriptions", "organizations_url": "https://api.github.com/users/jvc26/orgs", "repos_url": "https://api.github.com/users/jvc26/repos", "events_url": "https://api.github.com/users/jvc26/events{/privacy}", "received_events_url": "https://api.github.com/users/jvc26/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-13T12:18:54Z", "updated_at": "2016-01-09T15:45:08Z", "closed_at": "2016-01-09T15:45:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django removes `utils.importlib`, as this is now present in the standard library as of Python 2.7. This is a planned deprecation from Django 1.7. See related PR jsocol/django-ratelimit#96 for a suggested resolution.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/95", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/95/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/95/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/95", "id": 118096573, "node_id": "MDU6SXNzdWUxMTgwOTY1NzM=", "number": 95, "title": "Any way to whitelist/temporarily remove or alter ratelimit?", "user": {"login": "dan-passaro", "id": 7405774, "node_id": "MDQ6VXNlcjc0MDU3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7405774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dan-passaro", "html_url": "https://github.com/dan-passaro", "followers_url": "https://api.github.com/users/dan-passaro/followers", "following_url": "https://api.github.com/users/dan-passaro/following{/other_user}", "gists_url": "https://api.github.com/users/dan-passaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/dan-passaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dan-passaro/subscriptions", "organizations_url": "https://api.github.com/users/dan-passaro/orgs", "repos_url": "https://api.github.com/users/dan-passaro/repos", "events_url": "https://api.github.com/users/dan-passaro/events{/privacy}", "received_events_url": "https://api.github.com/users/dan-passaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-20T18:20:58Z", "updated_at": "2016-01-21T15:43:19Z", "closed_at": "2016-01-21T15:43:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say for example we limit account signups to 20 per hour per IP, but then a few months down the road we hold a conference that provokes say 100 signups within the hour. I know `cache.clear()` can be a crude way to reset the ratelimit restrictions, but is there anyway to tell this software, say, \"For the next hour, don't limit IP nnn.nn.nn.nnn\"? Or limit them to 1000/hr?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/90", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/90/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/90/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/90", "id": 111644552, "node_id": "MDU6SXNzdWUxMTE2NDQ1NTI=", "number": 90, "title": "Finish documentation from #86", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/4", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/4", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/4/labels", "id": 785220, "node_id": "MDk6TWlsZXN0b25lNzg1MjIw", "number": 4, "title": "1.1", "description": "- Deprecate that which needs deprecating (mixin, `field:` key shortcut).\r\n- `settings.RATELIMIT_OPTIONS` configuration options, based on `group`.\r\n- Document things better", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2014-09-10T17:44:07Z", "updated_at": "2019-02-20T21:33:51Z", "due_on": null, "closed_at": "2019-02-20T21:33:51Z"}, "comments": 1, "created_at": "2015-10-15T15:36:39Z", "updated_at": "2015-10-30T23:13:26Z", "closed_at": "2015-10-30T23:13:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "In #86, we decided that more documentation was necessary:\n\n> otherwise, i agree with the TODOs in that list, which are all documentation:\n> 1. put a ..warning: on the common keys list\n> 2. update the description of that behavior to be accurate, and probably add a prose note about empty values\n> 3. add a section to the security chapter on trusting GET/POST/header data\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/89", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/89/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/89/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/89", "id": 110201381, "node_id": "MDU6SXNzdWUxMTAyMDEzODE=", "number": 89, "title": "Document how to send a 429 response instead of 403", "user": {"login": "nferrari", "id": 1780838, "node_id": "MDQ6VXNlcjE3ODA4Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1780838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nferrari", "html_url": "https://github.com/nferrari", "followers_url": "https://api.github.com/users/nferrari/followers", "following_url": "https://api.github.com/users/nferrari/following{/other_user}", "gists_url": "https://api.github.com/users/nferrari/gists{/gist_id}", "starred_url": "https://api.github.com/users/nferrari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nferrari/subscriptions", "organizations_url": "https://api.github.com/users/nferrari/orgs", "repos_url": "https://api.github.com/users/nferrari/repos", "events_url": "https://api.github.com/users/nferrari/events{/privacy}", "received_events_url": "https://api.github.com/users/nferrari/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658211353, "node_id": "MDU6TGFiZWw2NTgyMTEzNTM=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/documentation", "name": "documentation", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/7", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7/labels", "id": 4074260, "node_id": "MDk6TWlsZXN0b25lNDA3NDI2MA==", "number": 7, "title": "3.0", "description": "Time to drop Python 2.7 and Django 1.x. Will take the opportunity to make some other changes.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 11, "state": "open", "created_at": "2019-02-20T21:32:57Z", "updated_at": "2020-06-30T23:28:49Z", "due_on": null, "closed_at": null}, "comments": 7, "created_at": "2015-10-07T11:07:18Z", "updated_at": "2019-02-27T23:29:45Z", "closed_at": "2019-02-27T23:29:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "As defined on the [RFC6585](https://tools.ietf.org/html/rfc6585), a 429 HTTP response stands for **Too many requests**.\n\nIf that's ok for you, I'll submit a PR. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/85", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/85/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/85/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/85", "id": 107039676, "node_id": "MDU6SXNzdWUxMDcwMzk2NzY=", "number": 85, "title": "Cache TIMEOUT should be higher than the largest period specified in rate", "user": {"login": "bitcity", "id": 4221404, "node_id": "MDQ6VXNlcjQyMjE0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4221404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitcity", "html_url": "https://github.com/bitcity", "followers_url": "https://api.github.com/users/bitcity/followers", "following_url": "https://api.github.com/users/bitcity/following{/other_user}", "gists_url": "https://api.github.com/users/bitcity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitcity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitcity/subscriptions", "organizations_url": "https://api.github.com/users/bitcity/orgs", "repos_url": "https://api.github.com/users/bitcity/repos", "events_url": "https://api.github.com/users/bitcity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitcity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/4", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/4", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/4/labels", "id": 785220, "node_id": "MDk6TWlsZXN0b25lNzg1MjIw", "number": 4, "title": "1.1", "description": "- Deprecate that which needs deprecating (mixin, `field:` key shortcut).\r\n- `settings.RATELIMIT_OPTIONS` configuration options, based on `group`.\r\n- Document things better", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2014-09-10T17:44:07Z", "updated_at": "2019-02-20T21:33:51Z", "due_on": null, "closed_at": "2019-02-20T21:33:51Z"}, "comments": 6, "created_at": "2015-09-17T18:05:19Z", "updated_at": "2017-07-30T19:11:02Z", "closed_at": "2017-07-30T19:11:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Django specifies a default timeout of [300 seconds](https://docs.djangoproject.com/en/1.8/ref/settings/#std:setting-CACHES-TIMEOUT). If there are ratelimit decorators that have a rate with a period that exceeds this number e.g. `5/h` (i.e. 5 requests per hour), would the key expire after Timeout & be eventually overwritten depending on the cache expiration policy ? I tried to re-create this scenario using `backends.locmem.LocMemCache` however after the expiry time, the key was still accessible. Perhaps its marked as stale and is not reliable. I'm not sure how other backends will behave. \n\nIt would be nice if `django-ratelimit` can look at the `settings.CACHES` and alert if `TIMEOUT` is lesser than the largest period specified in rate. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/84", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/84/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/84/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/84", "id": 106932944, "node_id": "MDU6SXNzdWUxMDY5MzI5NDQ=", "number": 84, "title": "How's the period (expiry / timeout) information set in the cache", "user": {"login": "bitcity", "id": 4221404, "node_id": "MDQ6VXNlcjQyMjE0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4221404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitcity", "html_url": "https://github.com/bitcity", "followers_url": "https://api.github.com/users/bitcity/followers", "following_url": "https://api.github.com/users/bitcity/following{/other_user}", "gists_url": "https://api.github.com/users/bitcity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitcity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitcity/subscriptions", "organizations_url": "https://api.github.com/users/bitcity/orgs", "repos_url": "https://api.github.com/users/bitcity/repos", "events_url": "https://api.github.com/users/bitcity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitcity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-17T08:20:36Z", "updated_at": "2015-09-17T15:34:32Z", "closed_at": "2015-09-17T14:07:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In a previous version (0.4.0), the cache expiry was set explicitly like this in `helpers.py`\n\n```\ncache.set_many(counts, timeout=timeout)\n```\n\nwhere timeout was derived by splitting the rate into `count` & `period`. \n\nIn the current version (0.6.0), the file `utils.py` still splits the rate into count (limit) & period, but the period information is not conveyed to the cache. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/83", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/83/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/83/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/83", "id": 106828541, "node_id": "MDU6SXNzdWUxMDY4Mjg1NDE=", "number": 83, "title": "What does \"annotate\" request mean?", "user": {"login": "Schwankenson", "id": 803955, "node_id": "MDQ6VXNlcjgwMzk1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/803955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Schwankenson", "html_url": "https://github.com/Schwankenson", "followers_url": "https://api.github.com/users/Schwankenson/followers", "following_url": "https://api.github.com/users/Schwankenson/following{/other_user}", "gists_url": "https://api.github.com/users/Schwankenson/gists{/gist_id}", "starred_url": "https://api.github.com/users/Schwankenson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Schwankenson/subscriptions", "organizations_url": "https://api.github.com/users/Schwankenson/orgs", "repos_url": "https://api.github.com/users/Schwankenson/repos", "events_url": "https://api.github.com/users/Schwankenson/events{/privacy}", "received_events_url": "https://api.github.com/users/Schwankenson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-16T18:08:53Z", "updated_at": "2015-09-16T18:57:27Z", "closed_at": "2015-09-16T18:14:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI don?t understand what happens with a request if block is False.\n\nI created a stackoverflow thread for it:\nhttp://stackoverflow.com/revisions/32608010/2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/77", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/77/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/77/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/77", "id": 101132430, "node_id": "MDU6SXNzdWUxMDExMzI0MzA=", "number": 77, "title": "README says wrong license", "user": {"login": "hodgesmr", "id": 1208575, "node_id": "MDQ6VXNlcjEyMDg1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1208575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hodgesmr", "html_url": "https://github.com/hodgesmr", "followers_url": "https://api.github.com/users/hodgesmr/followers", "following_url": "https://api.github.com/users/hodgesmr/following{/other_user}", "gists_url": "https://api.github.com/users/hodgesmr/gists{/gist_id}", "starred_url": "https://api.github.com/users/hodgesmr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hodgesmr/subscriptions", "organizations_url": "https://api.github.com/users/hodgesmr/orgs", "repos_url": "https://api.github.com/users/hodgesmr/repos", "events_url": "https://api.github.com/users/hodgesmr/events{/privacy}", "received_events_url": "https://api.github.com/users/hodgesmr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-15T02:30:56Z", "updated_at": "2015-08-15T17:24:26Z", "closed_at": "2015-08-15T17:24:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Readme says it's a BSD license. LICENSE file says Apache.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/76", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/76/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/76/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/76", "id": 100255365, "node_id": "MDU6SXNzdWUxMDAyNTUzNjU=", "number": 76, "title": "Ratelimits for 1/h appear to allow 2, but no more", "user": {"login": "jvc26", "id": 502300, "node_id": "MDQ6VXNlcjUwMjMwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/502300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvc26", "html_url": "https://github.com/jvc26", "followers_url": "https://api.github.com/users/jvc26/followers", "following_url": "https://api.github.com/users/jvc26/following{/other_user}", "gists_url": "https://api.github.com/users/jvc26/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvc26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvc26/subscriptions", "organizations_url": "https://api.github.com/users/jvc26/orgs", "repos_url": "https://api.github.com/users/jvc26/repos", "events_url": "https://api.github.com/users/jvc26/events{/privacy}", "received_events_url": "https://api.github.com/users/jvc26/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-11T08:17:43Z", "updated_at": "2015-08-11T14:44:55Z", "closed_at": "2015-08-11T14:17:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the helper as I don't want to increment all requests, only ones where a successful submission has taken place:\n\n```\nclass RateLimitedFormView(FormView):\n    ratelimit_key = 'ip'\n    ratelimit_block = True\n    ratelimit_rate = '1/h'\n    ratelimit_group = None\n\n    def dispatch(self, *args, **kwargs):\n        ratelimited = is_ratelimited(request=self.request,\n                                     group=self.ratelimit_group,\n                                     key=self.ratelimit_key,\n                                     rate=self.ratelimit_rate,\n                                     increment=False)\n        if ratelimited and self.ratelimit_block:\n            raise Ratelimited()\n        return super(RateLimitedFormView, self).dispatch(*args, **kwargs)\n\n\nclass RegistrationView(RateLimitedFormView):\n    template_name = 'accounts/register.html'\n    form_class = EmailUserCreationForm\n    ratelimit_group = 'registration'\n\n    def form_valid(self, form):\n        # Saves the form and does login here ... [ snip ]\n        # Calls is_ratelimited here to increment the counter\n        is_ratelimited(request=self.request, group=self.ratelimit_group, key=self.ratelimit_key,\n                       rate=self.ratelimit_rate, increment=True)\n        return super(RegistrationView, self).form_valid(form)\n```\n\nOne would expect the above to increment the counter by 1 for every form_valid call, and therefore get ratelimited at the second `dispatch()`. However, this does not happen:\n\n```\n{'': {}}\n{'': {u':1:rl:bd2e7d391ec4f6cc09024ab9b8f38395': '\\x80\\x02K\\x01.'}}\n{'': {u':1:rl:bd2e7d391ec4f6cc09024ab9b8f38395': '\\x80\\x02K\\x02.'}}\n{'': {u':1:rl:bd2e7d391ec4f6cc09024ab9b8f38395': '\\x80\\x02K\\x02.'}}\n```\n\nThe above are the four lines of output from a test, printing the contents of the cache on each subsequent request to the `RegistrationView`. At round one, it adds the cache key, but at round two, the dispatch override returns `False` from `is_ratelimited`, even though the rate is `1/h`, and then allows a second request to go through, before ratelimiting on the third.\n\nWhy is this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/75", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/75/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/75/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/75", "id": 99742079, "node_id": "MDU6SXNzdWU5OTc0MjA3OQ==", "number": 75, "title": "django.utils.importlib deprecated", "user": {"login": "tayden", "id": 6541671, "node_id": "MDQ6VXNlcjY1NDE2NzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6541671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tayden", "html_url": "https://github.com/tayden", "followers_url": "https://api.github.com/users/tayden/followers", "following_url": "https://api.github.com/users/tayden/following{/other_user}", "gists_url": "https://api.github.com/users/tayden/gists{/gist_id}", "starred_url": "https://api.github.com/users/tayden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tayden/subscriptions", "organizations_url": "https://api.github.com/users/tayden/orgs", "repos_url": "https://api.github.com/users/tayden/repos", "events_url": "https://api.github.com/users/tayden/events{/privacy}", "received_events_url": "https://api.github.com/users/tayden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-07T22:41:45Z", "updated_at": "2015-08-07T23:36:34Z", "closed_at": "2015-08-07T23:36:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting warning:\n\n```\nC:\\...\\ratelimit\\utils.py:9: RemovedInDjango19Warning:\ndjango.utils.importlib will be removed in Django 1.9.\n    from django.utils.importlib import import_module\n```\n\nMy understanding is that this should just be changed to `from importlib import import_module`\n\n[Relevant docs link](https://docs.djangoproject.com/en/1.8/releases/1.7/#django-utils-dictconfig-django-utils-importlib)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/74", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/74/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/74/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/74", "id": 98719642, "node_id": "MDU6SXNzdWU5ODcxOTY0Mg==", "number": 74, "title": "Feature Request: combine key with specific values", "user": {"login": "jlgne", "id": 13585963, "node_id": "MDQ6VXNlcjEzNTg1OTYz", "avatar_url": "https://avatars0.githubusercontent.com/u/13585963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlgne", "html_url": "https://github.com/jlgne", "followers_url": "https://api.github.com/users/jlgne/followers", "following_url": "https://api.github.com/users/jlgne/following{/other_user}", "gists_url": "https://api.github.com/users/jlgne/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlgne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlgne/subscriptions", "organizations_url": "https://api.github.com/users/jlgne/orgs", "repos_url": "https://api.github.com/users/jlgne/repos", "events_url": "https://api.github.com/users/jlgne/events{/privacy}", "received_events_url": "https://api.github.com/users/jlgne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-03T11:02:33Z", "updated_at": "2015-08-03T11:12:27Z", "closed_at": "2015-08-03T11:12:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes it is required to check for some keys together for throttling requests e.g. \n\n```\n if ('post:username' == 'admin' and 'post:password' is not '' ):\n    forward_to_captcha()\n```\n\nIt would be useful to (i) combine multiple keys (ii) have ratelimit only for specific key values\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/73", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/73/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/73/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/73", "id": 98674767, "node_id": "MDU6SXNzdWU5ODY3NDc2Nw==", "number": 73, "title": "group name isn't correct for CBVs", "user": {"login": "bitcity", "id": 4221404, "node_id": "MDQ6VXNlcjQyMjE0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4221404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitcity", "html_url": "https://github.com/bitcity", "followers_url": "https://api.github.com/users/bitcity/followers", "following_url": "https://api.github.com/users/bitcity/following{/other_user}", "gists_url": "https://api.github.com/users/bitcity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitcity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitcity/subscriptions", "organizations_url": "https://api.github.com/users/bitcity/orgs", "repos_url": "https://api.github.com/users/bitcity/repos", "events_url": "https://api.github.com/users/bitcity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitcity/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658202076, "node_id": "MDU6TGFiZWw2NTgyMDIwNzY=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/help%20wanted", "name": "help wanted", "color": "c2e0c6", "default": true, "description": null}, {"id": 658202169, "node_id": "MDU6TGFiZWw2NTgyMDIxNjk=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/input%20needed", "name": "input needed", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/7", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7/labels", "id": 4074260, "node_id": "MDk6TWlsZXN0b25lNDA3NDI2MA==", "number": 7, "title": "3.0", "description": "Time to drop Python 2.7 and Django 1.x. Will take the opportunity to make some other changes.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 11, "state": "open", "created_at": "2019-02-20T21:32:57Z", "updated_at": "2020-06-30T23:28:49Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2015-08-03T05:26:46Z", "updated_at": "2019-02-21T21:03:56Z", "closed_at": "2019-02-21T21:03:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Inside `is_ratelimited` function, the value of group is always `django.utils.decorators.bound_func` instead of the actual function name.\n\nThis is how I'm using the ratelimit decorator:\n\n```\nrl = method_decorator(ratelimit(key='post:username', rate='1/s'))\nclass Expensive():\n    @rl \n    def dispatch():\n    ...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/72", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/72/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/72/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/72", "id": 98402936, "node_id": "MDU6SXNzdWU5ODQwMjkzNg==", "number": 72, "title": "Should blank values be allowed ? ", "user": {"login": "bitcity", "id": 4221404, "node_id": "MDQ6VXNlcjQyMjE0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4221404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitcity", "html_url": "https://github.com/bitcity", "followers_url": "https://api.github.com/users/bitcity/followers", "following_url": "https://api.github.com/users/bitcity/following{/other_user}", "gists_url": "https://api.github.com/users/bitcity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitcity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitcity/subscriptions", "organizations_url": "https://api.github.com/users/bitcity/orgs", "repos_url": "https://api.github.com/users/bitcity/repos", "events_url": "https://api.github.com/users/bitcity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitcity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-31T14:32:41Z", "updated_at": "2015-08-07T20:06:17Z", "closed_at": "2015-08-07T20:04:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If key values of the type `post:<keyname>` or `get:<keyname>` is an empty string, it is still counted towards the limit. Imagine a login form where you type your username and press enter in a hurry, you would reached the `blocked` page instead of seeing an error that says `password field shouldn't be empty`. \n\nPerhaps this should be a an arg in the `ratelimit` decorator to county empty values towards limit or ignore them.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/71", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/71/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/71/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/71", "id": 98204463, "node_id": "MDU6SXNzdWU5ODIwNDQ2Mw==", "number": 71, "title": "Question on example in docs", "user": {"login": "bitcity", "id": 4221404, "node_id": "MDQ6VXNlcjQyMjE0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4221404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitcity", "html_url": "https://github.com/bitcity", "followers_url": "https://api.github.com/users/bitcity/followers", "following_url": "https://api.github.com/users/bitcity/following{/other_user}", "gists_url": "https://api.github.com/users/bitcity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitcity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitcity/subscriptions", "organizations_url": "https://api.github.com/users/bitcity/orgs", "repos_url": "https://api.github.com/users/bitcity/repos", "events_url": "https://api.github.com/users/bitcity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitcity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-30T15:59:06Z", "updated_at": "2015-09-16T09:15:57Z", "closed_at": "2015-09-16T09:15:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm looking at the [usage examples](https://django-ratelimit.readthedocs.org/en/latest/usage.html) in docs, \n\nThe one below says `if same username OR IP is used ...` , Shouldn't this be just username (no IP address) ?\n\n```\n@ratelimit(key='post:username', rate='5/m', method=['GET', 'POST'])\ndef login(request):\n    # If the same username OR IP is used >5 times/min, this will be True.\n    # The `username` value will come from GET or POST, determined by the\n    # request method.\n    was_limited = getattr(request, 'limited', False)\n    return HttpResponse()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/69", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/69/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/69/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/69", "id": 95793118, "node_id": "MDU6SXNzdWU5NTc5MzExOA==", "number": 69, "title": "Limit per parameter", "user": {"login": "anishmenon", "id": 3235476, "node_id": "MDQ6VXNlcjMyMzU0NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3235476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anishmenon", "html_url": "https://github.com/anishmenon", "followers_url": "https://api.github.com/users/anishmenon/followers", "following_url": "https://api.github.com/users/anishmenon/following{/other_user}", "gists_url": "https://api.github.com/users/anishmenon/gists{/gist_id}", "starred_url": "https://api.github.com/users/anishmenon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anishmenon/subscriptions", "organizations_url": "https://api.github.com/users/anishmenon/orgs", "repos_url": "https://api.github.com/users/anishmenon/repos", "events_url": "https://api.github.com/users/anishmenon/events{/privacy}", "received_events_url": "https://api.github.com/users/anishmenon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-18T06:10:43Z", "updated_at": "2015-08-09T04:47:03Z", "closed_at": "2015-08-07T20:43:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "i've a url \n\nmydomain.com/contactme?email='sssss@cccc.com'\n\n@ratelimit(rate='5/m',block=True,field='email', method=['GET'])\ndef contactme(request):\n    retrurn pass\n\nwhen i hit simply hit \n\nmydomain.com/contactme\n\ny its blocking after 5 attempts per minute . There is no parameter 'email' . Only need to block when the same email value for parameter email 5/min\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/64", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/64/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/64/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/64", "id": 68144140, "node_id": "MDU6SXNzdWU2ODE0NDE0MA==", "number": 64, "title": "Intermittent CI fail with ratelimit", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-13T17:00:08Z", "updated_at": "2015-04-13T19:26:49Z", "closed_at": "2015-04-13T19:05:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're using ratelimit for our login page:\n\n```\n@ratelimit(key='ip', rate=settings.LOGIN_LIMIT)\n@ratelimit(key='post:username', rate=settings.LOGIN_LIMIT)\ndef login(request):\n    ...\n```\n\n(in settings `LOGIN_LIMIT = '4/m'`)\n\nAnd test the rate limit is working on tests:\n\n```\n    @override_settings(RATELIMIT_ENABLE=True)\n    def test_login_form_captcha(self):\n        \"\"\"\n        Test repeated login attempts yield a captcha.\n        \"\"\"\n        # check that captcha is not here initially\n        response = self.client.get(self.login_url)\n        self.assertEqual(response.status_code, 200)\n        self.assertNotIn('captcha', response.content)\n        # try to login many times\n        wrong_credentials = {'username': 'testing@example.com', 'password': 'wrong'}\n        for _ in range(3):\n            response = self.client.post(self.login_url, wrong_credentials)\n            self.assertEqual(response.status_code, 200)\n            self.assertFalse(response.context['login_form'].is_valid())\n            self.assertNotContains(response, 'captcha')\n        # one time more and captcha appears\n        response = self.client.post(self.login_url, wrong_credentials)\n        self.assertEqual(response.status_code, 200)\n        self.assertFalse(response.context['login_form'].is_valid())\n        self.assertContains(response, 'captcha')\n```\n\nThis always works locally and works about 95% of the time on CI but just occationally fails with\n\n```\nAssertionError: Couldn't find 'captcha' in response\n```\n\nI'm aware there's a good chance this could be a weird error unique to our system but I thought it was worth asking whether there's any pointer as to what's causing ratelimit not to kick in?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/60", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/60/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/60/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/60", "id": 63516761, "node_id": "MDU6SXNzdWU2MzUxNjc2MQ==", "number": 60, "title": "Deprecated importlib module and deprecated get_cache", "user": {"login": "SimonSteinberger", "id": 1267443, "node_id": "MDQ6VXNlcjEyNjc0NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1267443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSteinberger", "html_url": "https://github.com/SimonSteinberger", "followers_url": "https://api.github.com/users/SimonSteinberger/followers", "following_url": "https://api.github.com/users/SimonSteinberger/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSteinberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSteinberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSteinberger/subscriptions", "organizations_url": "https://api.github.com/users/SimonSteinberger/orgs", "repos_url": "https://api.github.com/users/SimonSteinberger/repos", "events_url": "https://api.github.com/users/SimonSteinberger/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSteinberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/5", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/5", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/5/labels", "id": 1246033, "node_id": "MDk6TWlsZXN0b25lMTI0NjAzMw==", "number": 5, "title": "0.6", "description": "Clean up and fixes.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2015-08-07T20:17:32Z", "updated_at": "2015-08-07T20:32:16Z", "due_on": null, "closed_at": "2015-08-07T20:31:00Z"}, "comments": 2, "created_at": "2015-03-22T10:02:29Z", "updated_at": "2015-08-07T20:32:16Z", "closed_at": "2015-08-07T20:14:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django's importlib module will be removed with the next version (1.9).\nAlso, 'get_cache' is deprecated in favor of 'caches'.\n\nPlease replace in utils.py:\n\n> from django.utils.importlib import import_module\n\nWith the Python importlib:\n\n> from importlib import import_module\n\nYou can modify the get_cache import like that, so it works with all Django versions:\n\n> try:\n> ----from django.core.cache import caches\n> except:\n> ----from django.core.cache import get_cache as caches\n\nThen load the cache like so:\n\n> cache = hasattr(caches, '**call**') and caches(cache_name) or caches[cache_name]\n\nWonderful tool by the way! Thank you :-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/58", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/58/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/58/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/58", "id": 62552253, "node_id": "MDU6SXNzdWU2MjU1MjI1Mw==", "number": 58, "title": "key callable only takes one argument but docs say two", "user": {"login": "pmclanahan", "id": 19934, "node_id": "MDQ6VXNlcjE5OTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/19934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmclanahan", "html_url": "https://github.com/pmclanahan", "followers_url": "https://api.github.com/users/pmclanahan/followers", "following_url": "https://api.github.com/users/pmclanahan/following{/other_user}", "gists_url": "https://api.github.com/users/pmclanahan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmclanahan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmclanahan/subscriptions", "organizations_url": "https://api.github.com/users/pmclanahan/orgs", "repos_url": "https://api.github.com/users/pmclanahan/repos", "events_url": "https://api.github.com/users/pmclanahan/events{/privacy}", "received_events_url": "https://api.github.com/users/pmclanahan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/5", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/5", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/5/labels", "id": 1246033, "node_id": "MDk6TWlsZXN0b25lMTI0NjAzMw==", "number": 5, "title": "0.6", "description": "Clean up and fixes.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2015-08-07T20:17:32Z", "updated_at": "2015-08-07T20:32:16Z", "due_on": null, "closed_at": "2015-08-07T20:31:00Z"}, "comments": 7, "created_at": "2015-03-18T00:47:30Z", "updated_at": "2015-08-07T20:31:24Z", "closed_at": "2015-03-18T02:50:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Actually it looks like a callable passed in is only passed the request, but a dotted string which results in a callable is passed the group also. I thought the docs were wrong, but maybe it's the fact that a callable is only being passed a single argument. Perhaps for backward compatibility you can accept an alternate second param and shuffle if it remains `None`.\n\nI should have a PR shortly with a recommendation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/56", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/56/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/56/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/56", "id": 55593946, "node_id": "MDU6SXNzdWU1NTU5Mzk0Ng==", "number": 56, "title": "Rate limit based on session ID", "user": {"login": "getub", "id": 7886657, "node_id": "MDQ6VXNlcjc4ODY2NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7886657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/getub", "html_url": "https://github.com/getub", "followers_url": "https://api.github.com/users/getub/followers", "following_url": "https://api.github.com/users/getub/following{/other_user}", "gists_url": "https://api.github.com/users/getub/gists{/gist_id}", "starred_url": "https://api.github.com/users/getub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/getub/subscriptions", "organizations_url": "https://api.github.com/users/getub/orgs", "repos_url": "https://api.github.com/users/getub/repos", "events_url": "https://api.github.com/users/getub/events{/privacy}", "received_events_url": "https://api.github.com/users/getub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-27T09:25:32Z", "updated_at": "2015-08-07T20:34:26Z", "closed_at": "2015-01-27T14:07:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I could not find any discussion in the issues on support of session ID for ratelimiting. Wouldn't it be a more suitable parameter rather than IP address. This would especially be useful for visitors that share a common IP address e.g. a corporation. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/55", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/55/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/55/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/55", "id": 47867749, "node_id": "MDU6SXNzdWU0Nzg2Nzc0OQ==", "number": 55, "title": "ip ratelimiting when using a proxy like cloudflare", "user": {"login": "mrcoles", "id": 136651, "node_id": "MDQ6VXNlcjEzNjY1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrcoles", "html_url": "https://github.com/mrcoles", "followers_url": "https://api.github.com/users/mrcoles/followers", "following_url": "https://api.github.com/users/mrcoles/following{/other_user}", "gists_url": "https://api.github.com/users/mrcoles/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrcoles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrcoles/subscriptions", "organizations_url": "https://api.github.com/users/mrcoles/orgs", "repos_url": "https://api.github.com/users/mrcoles/repos", "events_url": "https://api.github.com/users/mrcoles/events{/privacy}", "received_events_url": "https://api.github.com/users/mrcoles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-11-05T18:04:00Z", "updated_at": "2020-07-10T15:54:59Z", "closed_at": "2014-11-05T18:23:41Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "If you are using the 'ip' ratelimitnig key and a proxy like cloudflare, then it will always return the same ipaddress, which could be disastrous.\n\nA simple cloudflare solution would be for users of this library to create their own callable for the key as such:\n\n``` python\ndef get_client_ip(request):\n    return request.META.get('HTTP_CF_CONNECTING_IP') or request.META['REMOTE_ADDR']\n\n@ratelimit(key=get_client_ip, rate='10/m')\ndef dummy_view(request):\n    # view code in here\n```\n\nHowever, I wonder if there's a more general solution for using `X-FORWARDED-FOR` or if that's too easily spoofed? A change in `utils.py` like:\n\n``` python\ndef _ip(request):\n    return (request.META['HTTP_X_FORWARDED_FOR'].split(',')[-1]\n            if request.get('HTTP_X_FORWARDED_FOR') else request.META['REMOTE_ADDR'])\n\ndef user_or_ip(request):\n    return str(request.user.pk) if request.user.is_authenticated() else _ip(request)\n\n_SIMPLE_KEYS = {\n    'ip': _ip,\n    'user': lambda r: str(r.user.pk),\n    'user_or_ip': user_or_ip,\n}\n```\n\nDoes anyone know what risks there could be in using x-forwarded-for?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/54", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/54/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/54/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/54", "id": 47434880, "node_id": "MDU6SXNzdWU0NzQzNDg4MA==", "number": 54, "title": "Database error", "user": {"login": "clabra", "id": 1704770, "node_id": "MDQ6VXNlcjE3MDQ3NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1704770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clabra", "html_url": "https://github.com/clabra", "followers_url": "https://api.github.com/users/clabra/followers", "following_url": "https://api.github.com/users/clabra/following{/other_user}", "gists_url": "https://api.github.com/users/clabra/gists{/gist_id}", "starred_url": "https://api.github.com/users/clabra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clabra/subscriptions", "organizations_url": "https://api.github.com/users/clabra/orgs", "repos_url": "https://api.github.com/users/clabra/repos", "events_url": "https://api.github.com/users/clabra/events{/privacy}", "received_events_url": "https://api.github.com/users/clabra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-31T19:21:27Z", "updated_at": "2015-01-27T14:08:33Z", "closed_at": "2015-01-27T14:08:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "After install django-ratelimit I'm getting the error: \n\n```\nsql \nu'SELECT cache_key, value, expires FROM \"cache_django\" WHERE cache_key = \\':1:rld740ef2ea296561a2c63c04605639082\\''\n...\nquery   \nu'SELECT cache_key, value, expires FROM \"cache_django\" WHERE cache_key = %s'\nself    \n<django.db.backends.postgresql_psycopg2.base.CursorWrapper object at 0x1112ef550>\nargs    \n[u':1:rld740ef2ea296561a2c63c04605639082']\n\nInternalError('current transaction is aborted, commands ignored until end of transaction block\\n',)\n\n```\n\nInstalled via: \n\n```\npip install django-ratelimit\n```\n\nUsing Django 1.5 with settings.py: \n\n```\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',\n        'LOCATION': 'cache_django', # create this db table with python manage.py createcachetable cache_django\n    }\n}\n```\n\nThe table 'cache_django' exists in DB. If I type in a Postgres client (Note: without escape cache_key single quotes): \n\n```\nSELECT cache_key, value, expires FROM \"cache_django\" WHERE cache_key = '1:rl:d740ef2ea296561a2c63c04605639082'\n```\n\nI don't get any error, but if I type (scaping single quotes): \n\n```\nSELECT cache_key, value, expires FROM \"cache_django\" WHERE cache_key = \\':1:rld740ef2ea296561a2c63c04605639082\\'\n```\n\nI get a syntax error\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/53", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/53/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/53/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/53", "id": 46951778, "node_id": "MDU6SXNzdWU0Njk1MTc3OA==", "number": 53, "title": "is_ratelimited is broken if group is None and fn  is None", "user": {"login": "carlshimer", "id": 247782, "node_id": "MDQ6VXNlcjI0Nzc4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/247782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlshimer", "html_url": "https://github.com/carlshimer", "followers_url": "https://api.github.com/users/carlshimer/followers", "following_url": "https://api.github.com/users/carlshimer/following{/other_user}", "gists_url": "https://api.github.com/users/carlshimer/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlshimer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlshimer/subscriptions", "organizations_url": "https://api.github.com/users/carlshimer/orgs", "repos_url": "https://api.github.com/users/carlshimer/repos", "events_url": "https://api.github.com/users/carlshimer/events{/privacy}", "received_events_url": "https://api.github.com/users/carlshimer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 658211353, "node_id": "MDU6TGFiZWw2NTgyMTEzNTM=", "url": "https://api.github.com/repos/jsocol/django-ratelimit/labels/documentation", "name": "documentation", "color": "d4c5f9", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/7", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/7/labels", "id": 4074260, "node_id": "MDk6TWlsZXN0b25lNDA3NDI2MA==", "number": 7, "title": "3.0", "description": "Time to drop Python 2.7 and Django 1.x. Will take the opportunity to make some other changes.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 5, "closed_issues": 11, "state": "open", "created_at": "2019-02-20T21:32:57Z", "updated_at": "2020-06-30T23:28:49Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2014-10-27T19:57:17Z", "updated_at": "2019-02-21T23:37:58Z", "closed_at": "2019-02-21T23:37:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "subject says it all.  The docs don't indicate that one or the other is required.  Will crash on try to look for **module** on fn which is null.\n\n<pre>\n  if group is None:\n        if hasattr(fn, '__self__'):\n            parts = fn.__module__, fn.__self__.__class__.__name__, fn.__name__\n        else:\n            parts = (fn.__module__, fn.__name__)\n        group = '.'.join(parts)\n</pre>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/52", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/52/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/52/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/52", "id": 46854243, "node_id": "MDU6SXNzdWU0Njg1NDI0Mw==", "number": 52, "title": "Per-user ratelimits", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/6", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/6", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/6/labels", "id": 1357453, "node_id": "MDk6TWlsZXN0b25lMTM1NzQ1Mw==", "number": 6, "title": "1.2", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2015-10-15T14:47:21Z", "updated_at": "2019-02-20T21:33:53Z", "due_on": null, "closed_at": "2019-02-20T21:33:53Z"}, "comments": 8, "created_at": "2014-10-26T20:49:40Z", "updated_at": "2017-07-30T19:22:01Z", "closed_at": "2017-07-30T19:22:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "One very common need is to customize ratelimits per user. E.g., an automated internal \"user\" may get 100x the requests of a free user, while a \"pro\" user might have negotiated for 20x and a researcher may get 10x. Callable rates make this possible, but you don't want to have to either a) hard-code users into source, or b) update and deploy every time a user changes some state or deal.\n\nIn my head, this looks something like:\n\n``` python\n# ratelimit/models.py\n\nclass Ratelimit(models.Model):\n    group = models.CharField(db_index=True)\n    user = models.ForeignKey(null=True)  # One option for \"default\"\n    rate = models.CharField()\n\n    @classmethod\n    def get(cls, group, user=None):\n        # use cache if possible\n        try:\n            return cls.objects.get(group=group, user=user)\n        except cls.DoesNotExist:\n            return cls.objects.get(group=group, user=None)\n\n# ratelimit/utils.py\n\ndef per_user(group, request):\n    return Ratelimit.get(group, request.user).rate  # Handle unauth, too\n```\n\nThere are two ways I see of handling defaults: either in the DB with a null user, as above, or in definitions, e.g.:\n\n``` python\n# in settings\nRATELIMIT_GROUPS = {\n    'mygroup': {\n        'default_rate': '100/h',\n        # ...\n    },\n}\n\n# at call-site\n@ratelimit(key='user', rate=per_user, default_rate='100/h')\ndef myview(request):\n    pass\n```\n\nIn in that case, we'd let `per_user` return some sentinel value, since `None` still means \"no limit\", and then fallback to `default`. Not keeping the default in the DB sounds like a nicer idea to me, even if it means relying more heavily on configuration in settings.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/48", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/48/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/48/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/48", "id": 41655648, "node_id": "MDU6SXNzdWU0MTY1NTY0OA==", "number": 48, "title": "Simpler and more powerful @ratelimit decorator", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/3", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/3", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/3/labels", "id": 785218, "node_id": "MDk6TWlsZXN0b25lNzg1MjE4", "number": 3, "title": "0.5", "description": "The API and internals rewrite, plus relevant changes, in #49.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2014-09-10T17:42:41Z", "updated_at": "2015-01-27T14:10:30Z", "due_on": null, "closed_at": "2015-01-27T14:10:30Z"}, "comments": 18, "created_at": "2014-09-01T18:16:21Z", "updated_at": "2014-10-26T20:03:06Z", "closed_at": "2014-10-26T20:03:06Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I have a new, hopefully better, idea of how ratelimit can work, internally, so I want to write it down here, and get @willkg's opinion and sanity check (also also if anyone else has comments) before I dive into it.\n## Problems\n### Multiple cache keys per decorator\n\nRight now, each `@ratelimit` decorator can create several keys, all of which are then treated with the same expiration (and see below about that). Except, if you stack decorators, they may generate the same key (e.g. for the IP address) and then things just stop making any sense at all.\n\nSo what we're doing is updating counters but in a really non-intuitive way, and we break stacking, which seems to be a natural way people try to use the library. It also costs us atomicity because we can't use `cache.incr`.\n### Good actors can get stuck in sliding windows\n\nBecause we push back the TTL on every increment, once a client gets ratelimited, they are stuck until they wait the full period to reset, so if the limit is `1/h` and they wait 59 minutes, they then have to wait another hour, not just one minute, because they jumped the gun a little.\n### Per-method (or group) is a pain\n\nImplementing per-method or method-group rate limits would require something `keys=lambda r: 'group'+r.META['REMOTE_ADDR']` everywhere.\n## Solution\n\nThis is a **big, backwards-incompatible change**. Fortunately, it's pre-1.0, so whatever. This would, hopefully, be a step toward something we'd call 1.0.\n### One counter per decorator\n\nThe biggest change: each decorator should result in a single counter (cache key, whatever). So\n\n``` python\ndef user_or_ip(r):\n    u = request.user\n    return u.getusername() if u.is_authenticated() else r.META['REMOTE_ADDR']\n\n@ratelimit(key=user_or_ip, rate='100/h')\ndef some_view(request):\n```\n\nWould result in exactly one counter, that uses a combination of the method name, the key value, and the rate (and probably the current time, but hang on) probably MD5ed together to get a name.\n\nThen, if you wanted to do, say, a burst limit, you could do:\n\n``` python\n@ratelimit(key=user_or_ip, rate='10/s')\n@ratelimit(key=user_or_ip, rate='100/h')\ndef some_view(request):\n```\n\nSince the rate is part of the key, these two get incremented independently. And if the next method had:\n\n``` python\n@ratelimit(key=user_or_ip, rate='10/s')\n@ratelimit(key=user_or_ip, rate='100h')\ndef another_view(request):\n```\n\nthe default behavior would be to ratelimit these views independently.\n### Fixed windows\n\nI've come around to the view that each attempt shouldn't completely reset the clock on the timer. We should be creating windows. The window needs to be staggered somehow by key, so that we don't, for example, open all the flood gates every hour on the hour. (We can definitely skip staggering that for seconds and possibly for minutes.)\n\nSo, for example, if the rate is `100/h` then we'd do something like:\n\n``` python\ndef k(value, period=3600):\n    ts = int(time.time())\n    m = ts - (ts % period) + (zlib.crc32(value) % period)\n    if m < ts:\n        return m + period\n    return m\n```\n\nThen we append the counter name/cache key with this value. The value should be different for every key and should change every `period`, but its staggered within the `period` according to the wall clock.\n\nWe can even somehow return this to the view to allow it to send `Retry-After` if we want.\n### The new signature\n\nIt should be simpler, and better reflect that each decorator is an individual counter, while still providing shortcuts for common use cases:\n\n``` python\n@ratelimit(\n    group=None,\n    key=None,\n    rate=None,\n    method=['POST'],\n    block=False)\n```\n\nMost of this should be straightforward, but:\n- `group` defaults to the dotted name of the method (e.g. `myapp.views.myview`). That limits each view individually, but you can set it to, e.g. `group='myviewgroup'` to count a number of views together.\n- `rate` works as now (`'X/Yu'` where `X` and `Y` are integers and `u` is a unit from `{s,m,h,d}`) _or_ `rate` is a callable (or a dotted path to a callable) that is passed the group and the request and returns either a rate string, or a tuple: `(limit, period-in-secods)`. I think this is a better method of handling `skip_if` because the callable could return `None` for \"no limit\" (or `0` for \"never allow). And, it opens up a whole new thing that would be, I think, very useful (see below).\n- `key` is one of a few well-known strings, a callable, or a dotted path to a callable. Callables would get the group and the request. Well-known strings would include at least:\n  - `'ip'` - `request.META['REMOTE_ADDR]`\n  - `get:X` - `request.GET['X']`\n  - `post:X` - `request.POST['X']`\n  - `field:X` - `d = request.POST if request.method == 'POST' else request.GET; d['X']`\n  - `header:what-ever` - `request.META['HTTP_WHAT_EVER']`\n  - `user` - `request.user`\n  - `user_or_ip` - `request.user if request.user.is_authenticated() else request.META['REMOTE_ADDR']` (very common use case, nice to have)\n- `method` works as now, a method or a list of methods, or `None` for all\n- `block` works as now, `True` to raise a `Ratelimited` exception, `False` to annotate the request.\n### Generating the counter name/cache key\n\nWe combine all of this to get a key that we increment:\n\n``` python\ncache_key = PREFIX + md5(group + rate + key_value + window)\n```\n\nWe don't worry about expiring it. We just do `limited = cache.incr(cache_key) > limit` and call it good. The values age out of the LRU.\n## Current use cases\n### Login forms\n\nA very common form to protect right now is a login form, which can be done with one decorator:\n\n``` python\n# old\n@ratelimit(ip=true, field='username', rate='5/m')\n\n# new\n@ratelimit(key='ip', rate='10/m')\n@ratelimit(key='field:username', rate='5/m')\n```\n\nYou'll need two decorators to provide the same (one-IP/many-users and many-IPs/one-user) protections, but you get more control. If you expect users to be behind NAT, you can allow a higher single-IP rate, while still preventing dictionary attacks against a username.\n## New stuff\n\nThis opens up some cool stuff. Stacking now works as intended/expected, like in the burst rate examples above. But there's more that could happen in subsequent versions:\n### Callable `rates`\n\nA pretty trivial use case for callable rates is customizing them by user or user type.\n\n``` python\ndef get_rate_limit(group, request):\n    if request.user.is_authenticated():\n        return '1000/h'\n    return '100/h'\n```\n\nA cool thing to build in would be per-user limiting, e.g.:\n\n``` python\nclass UserRateLimit(models.Model):\n    group = models.CharField(db_index=True)\n    user = models.ForeignKeyField(null=True)  # 'null' for default\n    rate = models.CharField()\n\n    @classmethod\n    def get_for_user(cls, group, request):\n        user = request.user\n        if not user.is_authenticate():\n            rate = cls.objects.get(group=group, user=None)\n            return rate.rate\n        try:\n            rate = cls.objects.get(group=group, user=user)\n            return rate.rate\n        except cls.DoesNotExist:\n            default = cls.objects.get(group=group, user=None)\n            return default.rate\n```\n\n(Or something, maybe better supporting anonymous users with `user=0` or similar. And of course with caching.)\n### Definitions in settings\n\nOnce `group` is a thing, it becomes easy to do something like this:\n\n``` python\n# settings.py\nRATE_LIMIT_CONFIG = {\n    '*': {  # global default\n        'key': 'user_or_ip',\n        'rate': '10/m',\n    },\n    'some_group': {\n        'key': 'ip',\n        'rate': '100/m',\n    },\n}\n```\n\nThe decorator (or helper methods) could pull these settings unless they're specifically overridden by the invocation.\n\nThat makes it less error-prone to use a helper like `is_ratelimited` and also change things (like temporary remove limits) in settings without messing with actual source modules.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/47", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/47/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/47/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/47", "id": 41593626, "node_id": "MDU6SXNzdWU0MTU5MzYyNg==", "number": 47, "title": "New feature: reset rate limite counters", "user": {"login": "getub", "id": 7886657, "node_id": "MDQ6VXNlcjc4ODY2NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7886657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/getub", "html_url": "https://github.com/getub", "followers_url": "https://api.github.com/users/getub/followers", "following_url": "https://api.github.com/users/getub/following{/other_user}", "gists_url": "https://api.github.com/users/getub/gists{/gist_id}", "starred_url": "https://api.github.com/users/getub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/getub/subscriptions", "organizations_url": "https://api.github.com/users/getub/orgs", "repos_url": "https://api.github.com/users/getub/repos", "events_url": "https://api.github.com/users/getub/events{/privacy}", "received_events_url": "https://api.github.com/users/getub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-31T19:14:35Z", "updated_at": "2014-09-01T19:07:16Z", "closed_at": "2014-09-01T19:07:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to set certain rate limits on my views and then throw a captcha if they are violated (something like [Stackoverflow human verification](http://stackoverflow.com/captcha) ). When I can ascertain that it's a human on the other end, I'd like to reset the counters i.e. start counting up ratelimit afresh for that IP or key. Where would be a good place to modify the current code to achieve that?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/46", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/46/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/46/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/46", "id": 41592433, "node_id": "MDU6SXNzdWU0MTU5MjQzMw==", "number": 46, "title": "Stacking decorators shouldn't have a common key", "user": {"login": "bitcity", "id": 4221404, "node_id": "MDQ6VXNlcjQyMjE0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4221404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitcity", "html_url": "https://github.com/bitcity", "followers_url": "https://api.github.com/users/bitcity/followers", "following_url": "https://api.github.com/users/bitcity/following{/other_user}", "gists_url": "https://api.github.com/users/bitcity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitcity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitcity/subscriptions", "organizations_url": "https://api.github.com/users/bitcity/orgs", "repos_url": "https://api.github.com/users/bitcity/repos", "events_url": "https://api.github.com/users/bitcity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitcity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-31T18:16:01Z", "updated_at": "2014-09-01T19:05:59Z", "closed_at": "2014-09-01T19:05:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the example of stacking rate limits, `ip=True` by default. This adds an additional common key to all 3 decorators (e.g. `ip:127.0.0.1`) which increments at thrice the rate. Shouldn't you set `ip=False` explicitly in this example below. The test doesn't catch the error because the specified rate is hit anyway after first request. If you increase the rate of first decorator to say `3/m`, the test would fail at the second request. \n\n[Example](https://django-ratelimit.readthedocs.org/en/latest/usage.html):\n\n```\n@ratelimit(keys=lambda x: 'min', rate='1/m')\n@ratelimit(keys=lambda x: 'hour', rate='10/h')\n@ratelimit(keys=lambda x: 'day', rate='50/d')\n```\n\n**Update**: Is the end user expected to pass keys that are unique per IP ? e.g. in the above, shouldn't the key be something like `keys=lambda x: 'min-'+<ip_addr>, rate='1/m'`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/45", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/45/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/45/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/45", "id": 41532112, "node_id": "MDU6SXNzdWU0MTUzMjExMg==", "number": 45, "title": "Observing a harsher rate limit than defined", "user": {"login": "bitcity", "id": 4221404, "node_id": "MDQ6VXNlcjQyMjE0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4221404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitcity", "html_url": "https://github.com/bitcity", "followers_url": "https://api.github.com/users/bitcity/followers", "following_url": "https://api.github.com/users/bitcity/following{/other_user}", "gists_url": "https://api.github.com/users/bitcity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitcity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitcity/subscriptions", "organizations_url": "https://api.github.com/users/bitcity/orgs", "repos_url": "https://api.github.com/users/bitcity/repos", "events_url": "https://api.github.com/users/bitcity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitcity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-29T19:25:24Z", "updated_at": "2014-09-01T19:06:34Z", "closed_at": "2014-09-01T19:06:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using the following settings with the ratelimit decorator to allow 5 requests per second. \n\n```\n@ratelimit(ip=True, block=True, method=None, rate='5/s')\n```\n\nThe log below shows the time lapsed in seconds. As I go from `38s` mark to `40s` mark, requests start getting blocked. My understanding according to the log below is that my request rate isn't exceeding 2 or 3 per second. Why do I see requests getting blocked in that case if the ratelimit should allow 5 per second? \n\nSecondly, once I start getting a 403, I've to wait for 1 second (or whatever period was set in rate) to resume. Is it possible to ignore the requests once 403 is raised until next successful request goes through (something like what this issue talks about https://github.com/jsocol/django-ratelimit/issues/11)\n\nP.S. Using Django's default cache backend i.e. `'django.core.cache.backends.locmem.LocMemCache'`\n\n```\n[30/Aug/2014 00:34:38] \"GET /my_site/ HTTP/1.1\" 200 412\n[30/Aug/2014 00:34:38] \"GET /my_site/ HTTP/1.1\" 200 294\n[30/Aug/2014 00:34:39] \"GET /my_site/ HTTP/1.1\" 200 269\n[30/Aug/2014 00:34:39] \"GET /my_site/ HTTP/1.1\" 200 269\n[30/Aug/2014 00:34:39] \"GET /my_site/ HTTP/1.1\" 200 269\n\nForbidden (Permission denied): /my_site/\n[30/Aug/2014 00:34:40] \"GET /my_site/ HTTP/1.1\" 403 22\n\nForbidden (Permission denied): /my_site/\n[30/Aug/2014 00:34:40] \"GET /my_site/ HTTP/1.1\" 403 22\n\nForbidden (Permission denied): /my_site/\n[30/Aug/2014 00:34:41] \"GET /my_site/ HTTP/1.1\" 403 22\n\nForbidden (Permission denied): /my_site/\n[30/Aug/2014 00:34:41] \"GET /my_site/ HTTP/1.1\" 403 22\n\nForbidden (Permission denied): /my_site/\n[30/Aug/2014 00:34:42] \"GET /my_site/ HTTP/1.1\" 403 22\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/44", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/44/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/44/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/44", "id": 41493635, "node_id": "MDU6SXNzdWU0MTQ5MzYzNQ==", "number": 44, "title": "Is it possible to limit based on ('ip' and 'request.user.username')", "user": {"login": "bitcity", "id": 4221404, "node_id": "MDQ6VXNlcjQyMjE0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4221404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitcity", "html_url": "https://github.com/bitcity", "followers_url": "https://api.github.com/users/bitcity/followers", "following_url": "https://api.github.com/users/bitcity/following{/other_user}", "gists_url": "https://api.github.com/users/bitcity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitcity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitcity/subscriptions", "organizations_url": "https://api.github.com/users/bitcity/orgs", "repos_url": "https://api.github.com/users/bitcity/repos", "events_url": "https://api.github.com/users/bitcity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitcity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-08-29T11:56:28Z", "updated_at": "2014-08-29T18:13:20Z", "closed_at": "2014-08-29T13:42:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I want to set ratelimit per IP per logged-in user for views that are accessible by logged-in users only. To explain it futher, if the limit is `5/m`, then `user-a` and `user-b`, both can make 5 request per minute from the same IP address. Maybe it's possible with `keys` argument since it says `for example, use an authenticated user ID or unauthenticated IP address`, but I can't figure out how.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/43", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/43/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/43/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/43", "id": 41470089, "node_id": "MDU6SXNzdWU0MTQ3MDA4OQ==", "number": 43, "title": "Drop `compat.get_caches`, use new `caches` api", "user": {"login": "bitcity", "id": 4221404, "node_id": "MDQ6VXNlcjQyMjE0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4221404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitcity", "html_url": "https://github.com/bitcity", "followers_url": "https://api.github.com/users/bitcity/followers", "following_url": "https://api.github.com/users/bitcity/following{/other_user}", "gists_url": "https://api.github.com/users/bitcity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitcity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitcity/subscriptions", "organizations_url": "https://api.github.com/users/bitcity/orgs", "repos_url": "https://api.github.com/users/bitcity/repos", "events_url": "https://api.github.com/users/bitcity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitcity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/6", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/6", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/6/labels", "id": 1357453, "node_id": "MDk6TWlsZXN0b25lMTM1NzQ1Mw==", "number": 6, "title": "1.2", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2015-10-15T14:47:21Z", "updated_at": "2019-02-20T21:33:53Z", "due_on": null, "closed_at": "2019-02-20T21:33:53Z"}, "comments": 6, "created_at": "2014-08-29T04:34:53Z", "updated_at": "2016-05-28T19:10:05Z", "closed_at": "2016-05-28T19:10:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Leaving a note for future change: \n\nDjango 1.7 has deprecated [`get_cache`](https://docs.djangoproject.com/en/dev/topics/cache/#django.core.cache.get_cache) in favor of [`caches`](https://docs.djangoproject.com/en/dev/topics/cache/#django.core.cache.caches)\n\nThis [line here](https://github.com/jsocol/django-ratelimit/blob/master/ratelimit/helpers.py#L5) would need a change sometime in the near future. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/42", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/42/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/42/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/42", "id": 35163114, "node_id": "MDU6SXNzdWUzNTE2MzExNA==", "number": 42, "title": "A way to use this wait Tastypie", "user": {"login": "sankaet", "id": 1951158, "node_id": "MDQ6VXNlcjE5NTExNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1951158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sankaet", "html_url": "https://github.com/sankaet", "followers_url": "https://api.github.com/users/sankaet/followers", "following_url": "https://api.github.com/users/sankaet/following{/other_user}", "gists_url": "https://api.github.com/users/sankaet/gists{/gist_id}", "starred_url": "https://api.github.com/users/sankaet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sankaet/subscriptions", "organizations_url": "https://api.github.com/users/sankaet/orgs", "repos_url": "https://api.github.com/users/sankaet/repos", "events_url": "https://api.github.com/users/sankaet/events{/privacy}", "received_events_url": "https://api.github.com/users/sankaet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-06T16:55:57Z", "updated_at": "2014-09-01T19:07:41Z", "closed_at": "2014-09-01T19:07:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I was just wondering if there was anything in the pipeline that will make it work with Tastypie as well?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/40", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/40/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/40/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/40", "id": 29745879, "node_id": "MDU6SXNzdWUyOTc0NTg3OQ==", "number": 40, "title": "Increment optionally", "user": {"login": "jvc26", "id": 502300, "node_id": "MDQ6VXNlcjUwMjMwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/502300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvc26", "html_url": "https://github.com/jvc26", "followers_url": "https://api.github.com/users/jvc26/followers", "following_url": "https://api.github.com/users/jvc26/following{/other_user}", "gists_url": "https://api.github.com/users/jvc26/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvc26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvc26/subscriptions", "organizations_url": "https://api.github.com/users/jvc26/orgs", "repos_url": "https://api.github.com/users/jvc26/repos", "events_url": "https://api.github.com/users/jvc26/events{/privacy}", "received_events_url": "https://api.github.com/users/jvc26/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-19T16:06:25Z", "updated_at": "2014-03-19T16:47:46Z", "closed_at": "2014-03-19T16:30:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm wondering what the developers think to a 'optional increment' flag for the ratelimit decorator. This would have the advantage of allowing one to flexibly increment, or merely check the ratelimit, in a similar manner to [django-brake](https://github.com/gmcquillan/django-brake)?\n\nThe underlying code exists - there is an increment flag on is_ratelimited, is the idea that if required, you just roll your own version of the decorator?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/38", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/38/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/38/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/38", "id": 29726772, "node_id": "MDU6SXNzdWUyOTcyNjc3Mg==", "number": 38, "title": "Does not work with override_settings", "user": {"login": "jvc26", "id": 502300, "node_id": "MDQ6VXNlcjUwMjMwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/502300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvc26", "html_url": "https://github.com/jvc26", "followers_url": "https://api.github.com/users/jvc26/followers", "following_url": "https://api.github.com/users/jvc26/following{/other_user}", "gists_url": "https://api.github.com/users/jvc26/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvc26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvc26/subscriptions", "organizations_url": "https://api.github.com/users/jvc26/orgs", "repos_url": "https://api.github.com/users/jvc26/repos", "events_url": "https://api.github.com/users/jvc26/events{/privacy}", "received_events_url": "https://api.github.com/users/jvc26/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-19T12:10:05Z", "updated_at": "2014-03-19T15:26:52Z", "closed_at": "2014-03-19T15:26:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ratelimit does not appear to work with override settings in tests:\n\n```\ndef test_settings(self):\n    self.assertFalse(settings.RATELIMIT_ENABLE)\n\n@override_settings(RATELIMIT_ENABLE=True)\ndef test_settings_overridden(self):\n    self.assertTrue(settings.RATELIMIT_ENABLE)\n    ... ratelimited view here fails to limit ...\n```\n\nThis is a pain for testing purposes, where I need ratelimit enabled at times, and disabled in others.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/37", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/37/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/37/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/37", "id": 29718184, "node_id": "MDU6SXNzdWUyOTcxODE4NA==", "number": 37, "title": "Ratelimit POST only if successful", "user": {"login": "jvc26", "id": 502300, "node_id": "MDQ6VXNlcjUwMjMwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/502300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvc26", "html_url": "https://github.com/jvc26", "followers_url": "https://api.github.com/users/jvc26/followers", "following_url": "https://api.github.com/users/jvc26/following{/other_user}", "gists_url": "https://api.github.com/users/jvc26/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvc26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvc26/subscriptions", "organizations_url": "https://api.github.com/users/jvc26/orgs", "repos_url": "https://api.github.com/users/jvc26/repos", "events_url": "https://api.github.com/users/jvc26/events{/privacy}", "received_events_url": "https://api.github.com/users/jvc26/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-03-19T09:46:33Z", "updated_at": "2014-03-19T12:02:31Z", "closed_at": "2014-03-19T12:02:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ratelimiting POST methods is a simple way of controlling POST-ing to a given (e.g. Register) url, however, if a user is failing to validate the form correctly (read broken email, mismatched passwords) this still iterates the ratelimit counter. It would be really neat if it could allow you to check whether the POST was successful or not, and ratelimit if it was.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/34", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/34/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/34/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/34", "id": 25433273, "node_id": "MDU6SXNzdWUyNTQzMzI3Mw==", "number": 34, "title": "Use the decorator with Class Based Views", "user": {"login": "iambibhas", "id": 357253, "node_id": "MDQ6VXNlcjM1NzI1Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/357253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iambibhas", "html_url": "https://github.com/iambibhas", "followers_url": "https://api.github.com/users/iambibhas/followers", "following_url": "https://api.github.com/users/iambibhas/following{/other_user}", "gists_url": "https://api.github.com/users/iambibhas/gists{/gist_id}", "starred_url": "https://api.github.com/users/iambibhas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iambibhas/subscriptions", "organizations_url": "https://api.github.com/users/iambibhas/orgs", "repos_url": "https://api.github.com/users/iambibhas/repos", "events_url": "https://api.github.com/users/iambibhas/events{/privacy}", "received_events_url": "https://api.github.com/users/iambibhas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/3", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/3", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/3/labels", "id": 785218, "node_id": "MDk6TWlsZXN0b25lNzg1MjE4", "number": 3, "title": "0.5", "description": "The API and internals rewrite, plus relevant changes, in #49.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2014-09-10T17:42:41Z", "updated_at": "2015-01-27T14:10:30Z", "due_on": null, "closed_at": "2015-01-27T14:10:30Z"}, "comments": 3, "created_at": "2014-01-11T00:45:57Z", "updated_at": "2014-10-26T20:03:19Z", "closed_at": "2014-10-26T20:03:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I use the decorator with CBV? I cannot seem to pass arguments to `method_decorator()`. Any clue about this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/27", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/27/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/27/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/27", "id": 21787012, "node_id": "MDU6SXNzdWUyMTc4NzAxMg==", "number": 27, "title": "support multiple limits", "user": {"login": "willkg", "id": 820826, "node_id": "MDQ6VXNlcjgyMDgyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/820826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willkg", "html_url": "https://github.com/willkg", "followers_url": "https://api.github.com/users/willkg/followers", "following_url": "https://api.github.com/users/willkg/following{/other_user}", "gists_url": "https://api.github.com/users/willkg/gists{/gist_id}", "starred_url": "https://api.github.com/users/willkg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willkg/subscriptions", "organizations_url": "https://api.github.com/users/willkg/orgs", "repos_url": "https://api.github.com/users/willkg/repos", "events_url": "https://api.github.com/users/willkg/events{/privacy}", "received_events_url": "https://api.github.com/users/willkg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-29T20:51:32Z", "updated_at": "2014-09-01T19:07:55Z", "closed_at": "2014-09-01T19:07:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The docs suggest to use the `keys` argument to support multiple limits:\n\n```\n@ratelimit(keys=lambda x: 'min', rate='1/m')\n@ratelimit(keys=lambda x: 'hour', rate='10/h')\n@ratelimit(keys=lambda x: 'day', rate='50/d')\ndef post(request):\n    # Stack them.\n    # Note: once a decorator limits the request, the ones after\n    # won't count the request for limiting.\n    return HttpResponse()\n```\n\nWithout that `keys` argument, then all three limits use the same cache key and therefore whichever gets cleared first clears them all.\n\nIt'd be nice if stacking ratelimits worked better with cache keys.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/25", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/25/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/25/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/25", "id": 21722392, "node_id": "MDU6SXNzdWUyMTcyMjM5Mg==", "number": 25, "title": "Drop Django 1.3 test runs, add 1.6", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-10-28T21:29:17Z", "updated_at": "2013-10-29T14:01:26Z", "closed_at": "2013-10-29T13:56:04Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Django 1.3 is not a supported target, but 1.6 is already a release candidate and needs to be tested.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/22", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/22/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/22/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/22", "id": 17356022, "node_id": "MDU6SXNzdWUxNzM1NjAyMg==", "number": 22, "title": "django-ratelimit does not check limit with call is_ratelimited(increment=False)", "user": {"login": "randnm", "id": 5115463, "node_id": "MDQ6VXNlcjUxMTU0NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5115463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randnm", "html_url": "https://github.com/randnm", "followers_url": "https://api.github.com/users/randnm/followers", "following_url": "https://api.github.com/users/randnm/following{/other_user}", "gists_url": "https://api.github.com/users/randnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/randnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randnm/subscriptions", "organizations_url": "https://api.github.com/users/randnm/orgs", "repos_url": "https://api.github.com/users/randnm/repos", "events_url": "https://api.github.com/users/randnm/events{/privacy}", "received_events_url": "https://api.github.com/users/randnm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/3", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/3", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/3/labels", "id": 785218, "node_id": "MDk6TWlsZXN0b25lNzg1MjE4", "number": 3, "title": "0.5", "description": "The API and internals rewrite, plus relevant changes, in #49.", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2014-09-10T17:42:41Z", "updated_at": "2015-01-27T14:10:30Z", "due_on": null, "closed_at": "2015-01-27T14:10:30Z"}, "comments": 2, "created_at": "2013-07-29T18:44:14Z", "updated_at": "2014-10-26T20:04:29Z", "closed_at": "2014-10-26T20:04:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a bug in the is_ratelimited function. When it is called with the purpose of just checking if a view/request is to be blocked based on previous requests this can be done with:\n\n```\nblock = django-ratelimit(increment=False)\n```\n\nHowever this doesn't seem to work.\nLooking at the implementation of is_ratelimited it becomes apparent that in this case the limited variable will always be false:\n\nFunction implementation:\n\n```\ndef is_ratelimited(request, increment=False, ip=True, method=['POST'],\n                   field=None, rate='5/m', keys=None):\n    count, period = _split_rate(rate)\n    cache = getattr(settings, 'RATELIMIT_USE_CACHE', 'default')\n    cache = get_cache(cache)\n\n    request.limited = getattr(request, 'limited', False)\n    if (not request.limited and increment and RATELIMIT_ENABLE and\n            _method_match(request, method)):\n        _keys = _get_keys(request, ip, field, keys)\n        counts = _incr(cache, _keys, period)\n        if any([c > count for c in counts.values()]):\n            request.limited = True\n    return request.limited\n```\n\nFlow:\nThe request object doesn't (initially) contain an increment attribute. getattr will therefore always return False. Since increment is set to false it won't be changed later and the return value will be false\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/12", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/12/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/12/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/12", "id": 8984974, "node_id": "MDU6SXNzdWU4OTg0OTc0", "number": 12, "title": "Rate per second doesn't work", "user": {"login": "morenopc", "id": 577383, "node_id": "MDQ6VXNlcjU3NzM4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/577383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morenopc", "html_url": "https://github.com/morenopc", "followers_url": "https://api.github.com/users/morenopc/followers", "following_url": "https://api.github.com/users/morenopc/following{/other_user}", "gists_url": "https://api.github.com/users/morenopc/gists{/gist_id}", "starred_url": "https://api.github.com/users/morenopc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morenopc/subscriptions", "organizations_url": "https://api.github.com/users/morenopc/orgs", "repos_url": "https://api.github.com/users/morenopc/repos", "events_url": "https://api.github.com/users/morenopc/events{/privacy}", "received_events_url": "https://api.github.com/users/morenopc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-12-04T14:14:36Z", "updated_at": "2013-01-04T18:07:37Z", "closed_at": "2013-01-04T18:07:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I set `@ratelimit(block=True, method=['GET','POST'], rate='1/m')` it blocks but if I set `@ratelimit(block=True, method=['GET','POST'], rate='59/s')` it doesn't block. (rate='60/s' doesn't work too)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/11", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/11/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/11/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/11", "id": 8249943, "node_id": "MDU6SXNzdWU4MjQ5OTQz", "number": 11, "title": "Rate limiting countdown resets on failed retries", "user": {"login": "bradbeattie", "id": 54340, "node_id": "MDQ6VXNlcjU0MzQw", "avatar_url": "https://avatars0.githubusercontent.com/u/54340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradbeattie", "html_url": "https://github.com/bradbeattie", "followers_url": "https://api.github.com/users/bradbeattie/followers", "following_url": "https://api.github.com/users/bradbeattie/following{/other_user}", "gists_url": "https://api.github.com/users/bradbeattie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradbeattie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradbeattie/subscriptions", "organizations_url": "https://api.github.com/users/bradbeattie/orgs", "repos_url": "https://api.github.com/users/bradbeattie/repos", "events_url": "https://api.github.com/users/bradbeattie/events{/privacy}", "received_events_url": "https://api.github.com/users/bradbeattie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-11-09T19:47:02Z", "updated_at": "2014-08-29T19:25:24Z", "closed_at": "2012-11-09T20:09:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I set my rate to 1/h, try once successfully, retry a second time and get throttled, I have to wait an hour for my cache to clear to make another successful attempt.\n\nIf I don't wait an hour, but instead keep retrying every 45 minutes, my cache will never clear due to the period not being adjusted in https://github.com/jsocol/django-ratelimit/blob/master/ratelimit/backends/cachebe.py#L32\n\nI've created an alternate caching project (\nhttps://github.com/bradbeattie/django-cache-throttle/blob/master/cache_throttle/utils.py) with a throttling mechanism you might be interested in copying. Instead of storing the number of attempts, it instead stores how tired it is of seeing the key and when the key was last seen. It can then calculate how much of the key stamina should be regenerated based on the time difference.\n\nShould be doable to modify cachebe to have this behaviour if you're interested. :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/5", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/5/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/5/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/5", "id": 2059024, "node_id": "MDU6SXNzdWUyMDU5MDI0", "number": 5, "title": "Ratelimited method should be POST by default", "user": {"login": "cvan", "id": 203725, "node_id": "MDQ6VXNlcjIwMzcyNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/203725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cvan", "html_url": "https://github.com/cvan", "followers_url": "https://api.github.com/users/cvan/followers", "following_url": "https://api.github.com/users/cvan/following{/other_user}", "gists_url": "https://api.github.com/users/cvan/gists{/gist_id}", "starred_url": "https://api.github.com/users/cvan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cvan/subscriptions", "organizations_url": "https://api.github.com/users/cvan/orgs", "repos_url": "https://api.github.com/users/cvan/repos", "events_url": "https://api.github.com/users/cvan/events{/privacy}", "received_events_url": "https://api.github.com/users/cvan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/1", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/1", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/1/labels", "id": 126076, "node_id": "MDk6TWlsZXN0b25lMTI2MDc2", "number": 1, "title": "0.2", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2012-05-31T03:44:35Z", "updated_at": "2013-01-04T21:32:08Z", "due_on": null, "closed_at": "2013-01-04T21:32:08Z"}, "comments": 1, "created_at": "2011-10-26T17:11:55Z", "updated_at": "2014-03-13T12:08:26Z", "closed_at": "2012-08-17T14:25:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The default `method=None` includes `GET`, which I'd venture to say is probably unexpected by most. `POST` ought to be the default IMO.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/3", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/3/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/3/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/3", "id": 1790993, "node_id": "MDU6SXNzdWUxNzkwOTkz", "number": 3, "title": "For some field data, Memcache backend raises MemcachedKeyCharacterError: Control characters not allowed", "user": {"login": "pcraciunoiu", "id": 191195, "node_id": "MDQ6VXNlcjE5MTE5NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/191195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcraciunoiu", "html_url": "https://github.com/pcraciunoiu", "followers_url": "https://api.github.com/users/pcraciunoiu/followers", "following_url": "https://api.github.com/users/pcraciunoiu/following{/other_user}", "gists_url": "https://api.github.com/users/pcraciunoiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcraciunoiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcraciunoiu/subscriptions", "organizations_url": "https://api.github.com/users/pcraciunoiu/orgs", "repos_url": "https://api.github.com/users/pcraciunoiu/repos", "events_url": "https://api.github.com/users/pcraciunoiu/events{/privacy}", "received_events_url": "https://api.github.com/users/pcraciunoiu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2011-10-01T07:02:36Z", "updated_at": "2011-10-03T14:08:08Z", "closed_at": "2011-10-03T14:08:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pull request to follow.\n\nThe stack trace ends with this:\nFile \"/var/www/sowink/so_wink/vendor/src/django-ratelimit/ratelimit/decorators.py\" in _wrapped\n1.                 _backend.count(request, ip, field, period)\n   File \"/var/www/sowink/so_wink/vendor/src/django-ratelimit/ratelimit/backends/cachebe.py\" in count\n2.         counters.update(cache.get_many(counters.keys()))\n   File \"/var/www/sowink/so_wink/vendor/src/django/django/core/cache/backends/memcached.py\" in get_many\n3.         ret = self._cache.get_multi(new_keys)\n   File \"/var/www/sowink/so_wink/vendor/packages/python-memcached/memcache.py\" in get_multi\n4.         server_keys, prefixed_to_orig_key = self._map_and_prefix_keys(keys, key_prefix)\n   File \"/var/www/sowink/so_wink/vendor/packages/python-memcached/memcache.py\" in _map_and_prefix_keys\n5.             self.check_key(str_orig_key, key_extra_len=key_extra_len)\n   File \"/var/www/sowink/so_wink/vendor/packages/python-memcached/memcache.py\" in check_key\n6.                             \"Control characters not allowed\")\n\nException Type: MemcachedKeyCharacterError at /messages/new\nException Value: Control characters not allowed\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/1", "repository_url": "https://api.github.com/repos/jsocol/django-ratelimit", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/1/comments", "events_url": "https://api.github.com/repos/jsocol/django-ratelimit/issues/1/events", "html_url": "https://github.com/jsocol/django-ratelimit/issues/1", "id": 1146248, "node_id": "MDU6SXNzdWUxMTQ2MjQ4", "number": 1, "title": "Always add `limited` attr", "user": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/1", "html_url": "https://github.com/jsocol/django-ratelimit/milestone/1", "labels_url": "https://api.github.com/repos/jsocol/django-ratelimit/milestones/1/labels", "id": 126076, "node_id": "MDk6TWlsZXN0b25lMTI2MDc2", "number": 1, "title": "0.2", "description": "", "creator": {"login": "jsocol", "id": 180459, "node_id": "MDQ6VXNlcjE4MDQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsocol", "html_url": "https://github.com/jsocol", "followers_url": "https://api.github.com/users/jsocol/followers", "following_url": "https://api.github.com/users/jsocol/following{/other_user}", "gists_url": "https://api.github.com/users/jsocol/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsocol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsocol/subscriptions", "organizations_url": "https://api.github.com/users/jsocol/orgs", "repos_url": "https://api.github.com/users/jsocol/repos", "events_url": "https://api.github.com/users/jsocol/events{/privacy}", "received_events_url": "https://api.github.com/users/jsocol/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2012-05-31T03:44:35Z", "updated_at": "2013-01-04T21:32:08Z", "due_on": null, "closed_at": "2013-01-04T21:32:08Z"}, "comments": 0, "created_at": "2011-06-30T20:12:32Z", "updated_at": "2012-08-17T14:25:04Z", "closed_at": "2012-08-17T14:25:04Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Right now, checking for the `limited` attr has to be done with `getattr(request, 'limited', False)`. That's just silly.\n", "performed_via_github_app": null, "score": 1.0}]}