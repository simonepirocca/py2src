{"total_count": 77, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/238", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/238/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/238/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/238", "id": 665409110, "node_id": "MDU6SXNzdWU2NjU0MDkxMTA=", "number": 238, "title": "Flask request traces missing method, path, IP", "user": {"login": "revmischa", "id": 245131, "node_id": "MDQ6VXNlcjI0NTEzMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/245131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revmischa", "html_url": "https://github.com/revmischa", "followers_url": "https://api.github.com/users/revmischa/followers", "following_url": "https://api.github.com/users/revmischa/following{/other_user}", "gists_url": "https://api.github.com/users/revmischa/gists{/gist_id}", "starred_url": "https://api.github.com/users/revmischa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revmischa/subscriptions", "organizations_url": "https://api.github.com/users/revmischa/orgs", "repos_url": "https://api.github.com/users/revmischa/repos", "events_url": "https://api.github.com/users/revmischa/events{/privacy}", "received_events_url": "https://api.github.com/users/revmischa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-24T20:46:57Z", "updated_at": "2020-08-02T19:11:45Z", "closed_at": "2020-08-02T19:11:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the Flask middleware:\r\n```python\r\n    patcher.patch((\"requests\", \"boto3\"))  # xray tracing for external requests\r\n    xray_recorder.configure(service=\"hr\")\r\n    XRayMiddleware(app, xray_recorder)\r\n```\r\n\r\nSQLAlchemy queries are properly annotated, traces are created. But they are missing method, URL, client IP.\r\n\r\n<img width=\"1496\" alt=\"Screen Shot 2020-07-24 at 11 45 30 PM\" src=\"https://user-images.githubusercontent.com/245131/88433955-cbf2c780-ce07-11ea-9cb6-3c0a0ae0b481.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/236", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/236/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/236/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/236", "id": 661812938, "node_id": "MDU6SXNzdWU2NjE4MTI5Mzg=", "number": 236, "title": "Sending segment batch failed with: NoCredentialProviders: no valid provider", "user": {"login": "Hassan1175", "id": 32792059, "node_id": "MDQ6VXNlcjMyNzkyMDU5", "avatar_url": "https://avatars0.githubusercontent.com/u/32792059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hassan1175", "html_url": "https://github.com/Hassan1175", "followers_url": "https://api.github.com/users/Hassan1175/followers", "following_url": "https://api.github.com/users/Hassan1175/following{/other_user}", "gists_url": "https://api.github.com/users/Hassan1175/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hassan1175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hassan1175/subscriptions", "organizations_url": "https://api.github.com/users/Hassan1175/orgs", "repos_url": "https://api.github.com/users/Hassan1175/repos", "events_url": "https://api.github.com/users/Hassan1175/events{/privacy}", "received_events_url": "https://api.github.com/users/Hassan1175/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-20T13:17:25Z", "updated_at": "2020-07-20T16:14:43Z", "closed_at": "2020-07-20T16:14:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running daemon locally for my Django project to get traces.\r\nI have configured the credentials in environment variables  and ~/.aws/credentials file as well. But still facing that issue. Can anybody please help me in figuring out issue.\r\nThe error which I am facing is\r\n\r\nSending segment batch failed with: NoCredentialProviders: no valid provider", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/219", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/219/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/219/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/219", "id": 599818804, "node_id": "MDU6SXNzdWU1OTk4MTg4MDQ=", "number": 219, "title": "patch() throws error for `pymysql` in aws lambda", "user": {"login": "aniljaiswal", "id": 43805107, "node_id": "MDQ6VXNlcjQzODA1MTA3", "avatar_url": "https://avatars2.githubusercontent.com/u/43805107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aniljaiswal", "html_url": "https://github.com/aniljaiswal", "followers_url": "https://api.github.com/users/aniljaiswal/followers", "following_url": "https://api.github.com/users/aniljaiswal/following{/other_user}", "gists_url": "https://api.github.com/users/aniljaiswal/gists{/gist_id}", "starred_url": "https://api.github.com/users/aniljaiswal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aniljaiswal/subscriptions", "organizations_url": "https://api.github.com/users/aniljaiswal/orgs", "repos_url": "https://api.github.com/users/aniljaiswal/repos", "events_url": "https://api.github.com/users/aniljaiswal/events{/privacy}", "received_events_url": "https://api.github.com/users/aniljaiswal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-14T19:51:31Z", "updated_at": "2020-04-15T13:14:05Z", "closed_at": "2020-04-15T13:13:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have updated the requirements.txt with the latest version of the SDK i.e. v2.5.0 and also enabled tracing for `pymysql`, the support for which was added in the latest release (#214). \r\n\r\nMy x-ray config:\r\n\r\n```python\r\n# Patch All third party libraries for AWS X-Ray\r\nglobal_sdk_config.set_sdk_enabled(env.X_RAY_SDK_ENABLED)\r\nxray_recorder.configure(service=lambda_name)\r\nlibs_to_patch = (\"boto3\", \"requests\", \"pymysql\")\r\npatch(libs_to_patch)\r\n```\r\n\r\nI package all the libraries using a Lambda Layer and I have verified the contents of the layer by downloading it and looking at the source code. In the CloudWatch logs, I see the below:\r\n\r\n```\r\n[ERROR] Exception: modules pymysql are currently not supported for patching\r\nTraceback (most recent call last):\r\n  File \"/var/task/serverless_sdk/__init__.py\", line 130, in wrapped_handler\r\n    return user_handler(event, context)\r\n  File \"/var/task/s_receiveJob.py\", line 23, in error_handler\r\n    raise e\r\n  File \"/var/task/s_receiveJob.py\", line 18, in <module>\r\n    user_handler = serverless_sdk.get_user_handler('datadog_handlers/receiveJob.handler')\r\n  File \"/var/task/serverless_sdk/__init__.py\", line 54, in get_user_handler\r\n    user_module = import_module(user_module_name)\r\n  File \"/var/lang/lib/python3.8/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 671, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 783, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"datadog_handlers/receiveJob.py\", line 2, in <module>\r\n    from src.handlers.job import handler as handler_impl\r\n  File \"/var/task/src/handlers/job.py\", line 18, in <module>\r\n    start_lambda_services(\"eventProcessor\")\r\n  File \"/var/task/src/lib/lambda_initializer.py\", line 15, in start_lambda_services\r\n    patch(libs_to_patch)\r\n  File \"/opt/python/lib/python3.8/site-packages/aws_xray_sdk/core/patcher.py\", line 92, in patch\r\n    raise Exception('modules %s are currently not supported for patching'\r\n```\r\n\r\nIt is clearly visible from the error logs that the Lambda is somehow using the older version of the SDK (v2.4.3) as the `raise Exception` line has been moved from `92` to `94` in v2.5.0\r\n\r\nDetails:\r\n\r\nPython: 3.8\r\nXray SDK: 2.5.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/216", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/216/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/216/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/216", "id": 598113049, "node_id": "MDU6SXNzdWU1OTgxMTMwNDk=", "number": 216, "title": "asyncio.Task.current_task PendingDeprecation warning", "user": {"login": "Amertz08", "id": 8210235, "node_id": "MDQ6VXNlcjgyMTAyMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8210235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amertz08", "html_url": "https://github.com/Amertz08", "followers_url": "https://api.github.com/users/Amertz08/followers", "following_url": "https://api.github.com/users/Amertz08/following{/other_user}", "gists_url": "https://api.github.com/users/Amertz08/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amertz08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amertz08/subscriptions", "organizations_url": "https://api.github.com/users/Amertz08/orgs", "repos_url": "https://api.github.com/users/Amertz08/repos", "events_url": "https://api.github.com/users/Amertz08/events{/privacy}", "received_events_url": "https://api.github.com/users/Amertz08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-10T21:59:21Z", "updated_at": "2020-06-08T22:10:18Z", "closed_at": "2020-04-21T00:10:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Getting a lot of `PendingDeprecation` warnings in the logs.\r\n\r\n/usr/local/lib/python3.7/site-packages/aws_xray_sdk/core/async_context.py:64: PendingDeprecationWarning: Task.current_task() is deprecated, use asyncio.current_task() instead\r\n\r\n\r\nShould be an easy fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/214", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/214/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/214/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/214", "id": 595705394, "node_id": "MDU6SXNzdWU1OTU3MDUzOTQ=", "number": 214, "title": "Support for pymysql", "user": {"login": "aniljaiswal", "id": 43805107, "node_id": "MDQ6VXNlcjQzODA1MTA3", "avatar_url": "https://avatars2.githubusercontent.com/u/43805107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aniljaiswal", "html_url": "https://github.com/aniljaiswal", "followers_url": "https://api.github.com/users/aniljaiswal/followers", "following_url": "https://api.github.com/users/aniljaiswal/following{/other_user}", "gists_url": "https://api.github.com/users/aniljaiswal/gists{/gist_id}", "starred_url": "https://api.github.com/users/aniljaiswal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aniljaiswal/subscriptions", "organizations_url": "https://api.github.com/users/aniljaiswal/orgs", "repos_url": "https://api.github.com/users/aniljaiswal/repos", "events_url": "https://api.github.com/users/aniljaiswal/events{/privacy}", "received_events_url": "https://api.github.com/users/aniljaiswal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "srprash", "id": 50466688, "node_id": "MDQ6VXNlcjUwNDY2Njg4", "avatar_url": "https://avatars1.githubusercontent.com/u/50466688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srprash", "html_url": "https://github.com/srprash", "followers_url": "https://api.github.com/users/srprash/followers", "following_url": "https://api.github.com/users/srprash/following{/other_user}", "gists_url": "https://api.github.com/users/srprash/gists{/gist_id}", "starred_url": "https://api.github.com/users/srprash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srprash/subscriptions", "organizations_url": "https://api.github.com/users/srprash/orgs", "repos_url": "https://api.github.com/users/srprash/repos", "events_url": "https://api.github.com/users/srprash/events{/privacy}", "received_events_url": "https://api.github.com/users/srprash/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "srprash", "id": 50466688, "node_id": "MDQ6VXNlcjUwNDY2Njg4", "avatar_url": "https://avatars1.githubusercontent.com/u/50466688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srprash", "html_url": "https://github.com/srprash", "followers_url": "https://api.github.com/users/srprash/followers", "following_url": "https://api.github.com/users/srprash/following{/other_user}", "gists_url": "https://api.github.com/users/srprash/gists{/gist_id}", "starred_url": "https://api.github.com/users/srprash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srprash/subscriptions", "organizations_url": "https://api.github.com/users/srprash/orgs", "repos_url": "https://api.github.com/users/srprash/repos", "events_url": "https://api.github.com/users/srprash/events{/privacy}", "received_events_url": "https://api.github.com/users/srprash/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-04-07T08:54:41Z", "updated_at": "2020-04-14T18:29:45Z", "closed_at": "2020-04-14T18:23:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would you please consider adding support for https://github.com/PyMySQL/PyMySQL as a quite popular client library for MySQL DB.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/213", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/213/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/213/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/213", "id": 595481727, "node_id": "MDU6SXNzdWU1OTU0ODE3Mjc=", "number": 213, "title": "SQS trace header fails for unsampled traces", "user": {"login": "jimjshields", "id": 8121098, "node_id": "MDQ6VXNlcjgxMjEwOTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8121098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimjshields", "html_url": "https://github.com/jimjshields", "followers_url": "https://api.github.com/users/jimjshields/followers", "following_url": "https://api.github.com/users/jimjshields/following{/other_user}", "gists_url": "https://api.github.com/users/jimjshields/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimjshields/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimjshields/subscriptions", "organizations_url": "https://api.github.com/users/jimjshields/orgs", "repos_url": "https://api.github.com/users/jimjshields/repos", "events_url": "https://api.github.com/users/jimjshields/events{/privacy}", "received_events_url": "https://api.github.com/users/jimjshields/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "srprash", "id": 50466688, "node_id": "MDQ6VXNlcjUwNDY2Njg4", "avatar_url": "https://avatars1.githubusercontent.com/u/50466688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srprash", "html_url": "https://github.com/srprash", "followers_url": "https://api.github.com/users/srprash/followers", "following_url": "https://api.github.com/users/srprash/following{/other_user}", "gists_url": "https://api.github.com/users/srprash/gists{/gist_id}", "starred_url": "https://api.github.com/users/srprash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srprash/subscriptions", "organizations_url": "https://api.github.com/users/srprash/orgs", "repos_url": "https://api.github.com/users/srprash/repos", "events_url": "https://api.github.com/users/srprash/events{/privacy}", "received_events_url": "https://api.github.com/users/srprash/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "srprash", "id": 50466688, "node_id": "MDQ6VXNlcjUwNDY2Njg4", "avatar_url": "https://avatars1.githubusercontent.com/u/50466688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srprash", "html_url": "https://github.com/srprash", "followers_url": "https://api.github.com/users/srprash/followers", "following_url": "https://api.github.com/users/srprash/following{/other_user}", "gists_url": "https://api.github.com/users/srprash/gists{/gist_id}", "starred_url": "https://api.github.com/users/srprash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srprash/subscriptions", "organizations_url": "https://api.github.com/users/srprash/orgs", "repos_url": "https://api.github.com/users/srprash/repos", "events_url": "https://api.github.com/users/srprash/events{/privacy}", "received_events_url": "https://api.github.com/users/srprash/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2020-04-06T23:06:38Z", "updated_at": "2020-07-27T20:14:12Z", "closed_at": "2020-07-27T20:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're using the XRay SDK for tracing our Django apps, which use SQS for asynchronous work. For the most part, it's sending traces of Django requests successfully and we can see them in the console.\r\n\r\nHowever, we had an unsampled request that happened to interact with SQS, and it failed with this error:\r\n```python\r\nClientError(\"An error occurred (InvalidParameterValue) when calling the GetQueueUrl operation: The request has a 'X-Amzn-Trace-Id' HTTP header which is reserved for AWS X-Ray trace header and has an invalid value 'Root=dummy;Parent={real_parent_id};Sampled=0'\",)\r\n```\r\n\r\nIt seems like unsampled requests get the `Root` of `dummy`, which seems to cause this validation exception in SQS. Ideally, it'd either have a real ID, or that header wouldn't be injected for unsampled requests.\r\n\r\nWe have:\r\n* `python`: 3.6.5\r\n* `aws-xray-sdk`: 2.4.2\r\n* `boto3`: 1.9.230\r\n* `botocore`: 1.12.253\r\n* `django`: 2.0.4\r\n\r\nHere's our configuration in `settings.py`:\r\n```python\r\nXRAY_RECORDER = {\r\n    'AWS_XRAY_DAEMON_ADDRESS': f\"{EC2_PRIVATE_IP}:{XRAY_PORT}\",\r\n    'AWS_XRAY_TRACING_NAME': xray_tracing_name,\r\n    'AWS_XRAY_CONTEXT_MISSING': 'LOG_ERROR',\r\n    'PATCH_MODULES': [\r\n        'boto3',\r\n        'requests'\r\n    ],\r\n    'PLUGINS': ('EC2Plugin', 'ECSPlugin')\r\n}\r\n```\r\nAnd the SDK is in our `INSTALLED_APPS` and `MIDDLEWARE`.\r\n\r\nLet me know if you need more information. Thanks for the work on this library, I think it'll help us a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/208", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/208/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/208/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/208", "id": 583605525, "node_id": "MDU6SXNzdWU1ODM2MDU1MjU=", "number": 208, "title": "xray_recorder.configure daemon_address being ignored?", "user": {"login": "sebolabs", "id": 8235212, "node_id": "MDQ6VXNlcjgyMzUyMTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8235212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebolabs", "html_url": "https://github.com/sebolabs", "followers_url": "https://api.github.com/users/sebolabs/followers", "following_url": "https://api.github.com/users/sebolabs/following{/other_user}", "gists_url": "https://api.github.com/users/sebolabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebolabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebolabs/subscriptions", "organizations_url": "https://api.github.com/users/sebolabs/orgs", "repos_url": "https://api.github.com/users/sebolabs/repos", "events_url": "https://api.github.com/users/sebolabs/events{/privacy}", "received_events_url": "https://api.github.com/users/sebolabs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-18T09:54:06Z", "updated_at": "2020-03-18T13:38:54Z", "closed_at": "2020-03-18T13:38:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Kubernetes configuration in AWS for running XRay Daemon.\r\nService: `xray-service` - exposing the deamon on port 2000.\r\nIt's running fine:\r\n```\r\nListening on UDP 0.0.0.0:2000\r\nUsing region: eu-west-1\r\n```\r\n\r\nHere's my xray_recorder config in my app (different pod):\r\n```\r\n    xray_recorder.configure(\r\n        daemon_address='xray-service:2000',\r\n        plugins=['EC2Plugin'],\r\n        context_missing='LOG_ERROR',\r\n    )\r\n```\r\n\r\nWhen the app starts I'm getting the following errors:\r\n```\r\nEncountered an issue while polling sampling rules.\r\n[...] connection.py, line 70, in create_connection sock.connect(sa)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\nbotocore.exceptions.EndpointConnectionError: Could not connect to the endpoint URL: \"http://127.0.0.1:2000/GetSamplingRules\"\r\n```\r\n\r\nI can't figure out what I'm missing here as it keeps trying to connect to the `localhost:2000` instead of to the `xray-service:2000`. Would appreciate any help with that.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/207", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/207/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/207/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/207", "id": 583109734, "node_id": "MDU6SXNzdWU1ODMxMDk3MzQ=", "number": 207, "title": "xray sdk with boto patch shouldn't trace itself", "user": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-17T15:45:14Z", "updated_at": "2020-03-24T06:37:11Z", "closed_at": "2020-03-24T06:35:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "i've done some custom integration for aws xray sdk into a project that also uses boto, when i end the segment, and then try to send to xray service api i'll get an error that the segment is already closed, because the xray sdk patch is trying to trace the put segments api call. if i leave the segment open, i can't send it because its open. feels like a catch 22. at a previous version of the xray sdk library this did actually work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/202", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/202/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/202/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/202", "id": 560918186, "node_id": "MDU6SXNzdWU1NjA5MTgxODY=", "number": 202, "title": "Is there need in Bottle plugin for xray sdk, I will contribute", "user": {"login": "polamayster", "id": 3791902, "node_id": "MDQ6VXNlcjM3OTE5MDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3791902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polamayster", "html_url": "https://github.com/polamayster", "followers_url": "https://api.github.com/users/polamayster/followers", "following_url": "https://api.github.com/users/polamayster/following{/other_user}", "gists_url": "https://api.github.com/users/polamayster/gists{/gist_id}", "starred_url": "https://api.github.com/users/polamayster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polamayster/subscriptions", "organizations_url": "https://api.github.com/users/polamayster/orgs", "repos_url": "https://api.github.com/users/polamayster/repos", "events_url": "https://api.github.com/users/polamayster/events{/privacy}", "received_events_url": "https://api.github.com/users/polamayster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1831846715, "node_id": "MDU6TGFiZWwxODMxODQ2NzE1", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/feature", "name": "feature", "color": "f76267", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T10:28:53Z", "updated_at": "2020-03-06T16:41:58Z", "closed_at": "2020-03-06T16:41:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would you find having Bottle plugin useful, in addition to existing Flask and Django middlewares/extentions, so it would be easier even for a broader auditory of Python projects to integrate/use aws-xray-sdk-python? And if so, I will contribute.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/195", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/195/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/195/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/195", "id": 538737479, "node_id": "MDU6SXNzdWU1Mzg3Mzc0Nzk=", "number": 195, "title": "Fix failing Travis CI", "user": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-16T23:24:23Z", "updated_at": "2019-12-19T21:26:53Z", "closed_at": "2019-12-19T21:26:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After the merge of PR #186, we are noticing segment missing failures. However it most likely is not related the merging of the PR.\r\n\r\nAfter experimentation, it looks like someting's happening with the sqlite3 test suite. This is still under investigation, but perhaps the version of sqlite3 was increased.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/191", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/191/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/191/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/191", "id": 533646583, "node_id": "MDU6SXNzdWU1MzM2NDY1ODM=", "number": 191, "title": "Downstream http requests should use the hostname as a subsegment name", "user": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-05T22:57:39Z", "updated_at": "2019-12-06T00:17:13Z", "closed_at": "2019-12-06T00:17:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Requests, HttpLib, and Aiohttp should all generate subsegments whose name is assigned as the hostname, rather than the full URL path.\r\n\r\nReproduction:\r\n```\r\npatch_all()\r\nxray_recorder.begin_segment(\"segment\")\r\nrequests.get(\"https://aws.amazon.com/some/url/endpoint\")\r\nxray_recorder.end_segment()\r\n```\r\n\r\nobserve that the subsegment name is `https://aws.amazon.com/some/url/endpoint` instead of \"aws.amazon.com`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/189", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/189/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/189/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/189", "id": 532074007, "node_id": "MDU6SXNzdWU1MzIwNzQwMDc=", "number": 189, "title": "patch will not work with certain paths", "user": {"login": "errietta", "id": 134585, "node_id": "MDQ6VXNlcjEzNDU4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/134585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/errietta", "html_url": "https://github.com/errietta", "followers_url": "https://api.github.com/users/errietta/followers", "following_url": "https://api.github.com/users/errietta/following{/other_user}", "gists_url": "https://api.github.com/users/errietta/gists{/gist_id}", "starred_url": "https://api.github.com/users/errietta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/errietta/subscriptions", "organizations_url": "https://api.github.com/users/errietta/orgs", "repos_url": "https://api.github.com/users/errietta/repos", "events_url": "https://api.github.com/users/errietta/events{/privacy}", "received_events_url": "https://api.github.com/users/errietta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-03T15:39:59Z", "updated_at": "2019-12-19T21:33:31Z", "closed_at": "2019-12-19T21:33:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say I want to patch an external import: \"/usr/local/lib/python3.6/site-packages/my_module/\"\r\nBecause of the `.` in `python3.6`, this line will break the path:\r\n` module = module.replace('.', '/')`\r\n\r\nhttps://github.com/aws/aws-xray-sdk-python/blob/324d18590363a9e926599f15c1aac0368d99d30e/aws_xray_sdk/core/patcher.py#L51\r\n\r\nUnless I'm misunderstanding something, I don't understand how this is supposed to work with external modules in general, unless one gives the full path and the path doesn't contain a dot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/179", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/179/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/179/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/179", "id": 514505931, "node_id": "MDU6SXNzdWU1MTQ1MDU5MzE=", "number": 179, "title": "patch((\"pynamodb\",)) not working with botocore 1.13", "user": {"login": "laurent-leconte", "id": 3740284, "node_id": "MDQ6VXNlcjM3NDAyODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3740284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurent-leconte", "html_url": "https://github.com/laurent-leconte", "followers_url": "https://api.github.com/users/laurent-leconte/followers", "following_url": "https://api.github.com/users/laurent-leconte/following{/other_user}", "gists_url": "https://api.github.com/users/laurent-leconte/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurent-leconte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurent-leconte/subscriptions", "organizations_url": "https://api.github.com/users/laurent-leconte/orgs", "repos_url": "https://api.github.com/users/laurent-leconte/repos", "events_url": "https://api.github.com/users/laurent-leconte/events{/privacy}", "received_events_url": "https://api.github.com/users/laurent-leconte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-30T09:15:08Z", "updated_at": "2019-11-19T19:17:33Z", "closed_at": "2019-11-19T19:17:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "`requests` was removed from `botocore` 1.13 (see https://www.awsfeed.com/2019/10/01/removing-the-vendored-version-of-requests-from-botocore/)\r\n\r\nHowever the vendored version of `requests` is still imported in `aws_xray_sdk/ext/pynamodb/patch.py`, resulting in an `ImportError` when trying to patch pynamodb.\r\n\r\nSteps to reproduce: \r\n```\r\nfrom aws_xray_sdk.core import patch\r\n\r\npatch((\"pynamodb\",))\r\n``` \r\n\r\nRunning this code with botocore >= 1.13 yields the following stack trace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test_xray.py\", line 3, in <module>\r\n    patch((\"pynamodb\",))\r\n  File \"~/.venv/lib/site-packages/aws_xray_sdk/core/patcher.py\", line 96, in patch\r\n    _patch_module(m, raise_errors)\r\n  File \"~/.venv/lib/site-packages/aws_xray_sdk/core/patcher.py\", line 105, in _patch_module\r\n    _patch(module_to_patch)\r\n  File \"~/.venv/lib/site-packages/aws_xray_sdk/core/patcher.py\", line 120, in _patch\r\n    imported_module = importlib.import_module(path)\r\n  File \"~/.venv/lib/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 978, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 961, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 950, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 205, in _call_with_frames_removed\r\n  File \"~/.venv/lib/site-packages/aws_xray_sdk/ext/pynamodb/__init__.py\", line 1, in <module>\r\n    from .patch import patch\r\n  File \"~/.venv/lib/site-packages/aws_xray_sdk/ext/pynamodb/patch.py\", line 1, in <module>\r\n    import botocore.vendored.requests.sessions\r\nModuleNotFoundError: No module named 'botocore.vendored.requests.sessions'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/174", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/174/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/174/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/174", "id": 493107052, "node_id": "MDU6SXNzdWU0OTMxMDcwNTI=", "number": 174, "title": "Is it possible to make xray_recorder.capture add subsegments recursively?", "user": {"login": "rokka-n", "id": 4412410, "node_id": "MDQ6VXNlcjQ0MTI0MTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4412410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rokka-n", "html_url": "https://github.com/rokka-n", "followers_url": "https://api.github.com/users/rokka-n/followers", "following_url": "https://api.github.com/users/rokka-n/following{/other_user}", "gists_url": "https://api.github.com/users/rokka-n/gists{/gist_id}", "starred_url": "https://api.github.com/users/rokka-n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rokka-n/subscriptions", "organizations_url": "https://api.github.com/users/rokka-n/orgs", "repos_url": "https://api.github.com/users/rokka-n/repos", "events_url": "https://api.github.com/users/rokka-n/events{/privacy}", "received_events_url": "https://api.github.com/users/rokka-n/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-13T02:19:54Z", "updated_at": "2019-10-17T19:08:27Z", "closed_at": "2019-10-17T17:52:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking at readme here\r\n> An xray_recorder.capture() decorator will be applied to all functions and class methods in the given module and all the modules inside them recursively. Some files/modules can be excluded by providing to the patch function a regex that matches them.\r\n\r\nand assumed that adding a decorator to entry method would create subsegments for all recursive methods - named after methods. Which is quite handy when looking at traces.\r\n\r\nsay for something like this snippet below I expected x-ray to have method m2 as a subsegment for whatever setup for m1. However, it records subsegment only for patched libraries in recursive calls. So if m2 has boto method to get an object from s3, it would be recorded.\r\n\r\n```\r\n@xray_recorder.capture()\r\ndef m1():\r\n  m2()\r\n\r\ndef m2():\r\n   print('Hola')\r\n\r\nm1()\r\n```\r\n\r\nIs it feasible to make subsegments recorded automatically after method names?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/171", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/171/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/171/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/171", "id": 480464952, "node_id": "MDU6SXNzdWU0ODA0NjQ5NTI=", "number": 171, "title": "Not working with PynamoDB 4.0.0", "user": {"login": "yan12125", "id": 1937689, "node_id": "MDQ6VXNlcjE5Mzc2ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1937689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yan12125", "html_url": "https://github.com/yan12125", "followers_url": "https://api.github.com/users/yan12125/followers", "following_url": "https://api.github.com/users/yan12125/following{/other_user}", "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}", "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions", "organizations_url": "https://api.github.com/users/yan12125/orgs", "repos_url": "https://api.github.com/users/yan12125/repos", "events_url": "https://api.github.com/users/yan12125/events{/privacy}", "received_events_url": "https://api.github.com/users/yan12125/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-14T03:36:51Z", "updated_at": "2019-10-09T19:29:01Z", "closed_at": "2019-10-09T19:29:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With PynamoDB 4.0.0, a test failed:\r\n```\r\n=================================== FAILURES ===================================\r\n________________________________ test_exception ________________________________\r\n\r\n    def test_exception():\r\n        class SampleModel(Model):\r\n            class Meta:\r\n                region = 'us-west-2'\r\n                table_name = 'mytable'\r\n    \r\n            sample_attribute = UnicodeAttribute(hash_key=True)\r\n    \r\n        try:\r\n            SampleModel.describe_table()\r\n        except Exception:\r\n            pass\r\n    \r\n        subsegments = xray_recorder.current_segment().subsegments\r\n>       assert len(subsegments) == 1\r\nE       assert 0 == 1\r\nE         -0\r\nE         +1\r\n\r\ntests/ext/pynamodb/test_pynamodb.py:45: AssertionError\r\n```\r\n\r\nI guess the cause is that PynamoDB now uses urllib3 instead of requests: https://github.com/pynamodb/PynamoDB/blob/master/docs/release_notes.rst", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/168", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/168/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/168/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/168", "id": 473769325, "node_id": "MDU6SXNzdWU0NzM3NjkzMjU=", "number": 168, "title": "Subsegment name serialization causing MissingName error", "user": {"login": "Jacob-Doetsch", "id": 15638167, "node_id": "MDQ6VXNlcjE1NjM4MTY3", "avatar_url": "https://avatars3.githubusercontent.com/u/15638167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jacob-Doetsch", "html_url": "https://github.com/Jacob-Doetsch", "followers_url": "https://api.github.com/users/Jacob-Doetsch/followers", "following_url": "https://api.github.com/users/Jacob-Doetsch/following{/other_user}", "gists_url": "https://api.github.com/users/Jacob-Doetsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jacob-Doetsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jacob-Doetsch/subscriptions", "organizations_url": "https://api.github.com/users/Jacob-Doetsch/orgs", "repos_url": "https://api.github.com/users/Jacob-Doetsch/repos", "events_url": "https://api.github.com/users/Jacob-Doetsch/events{/privacy}", "received_events_url": "https://api.github.com/users/Jacob-Doetsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-28T17:54:35Z", "updated_at": "2020-03-06T17:30:11Z", "closed_at": "2020-03-06T17:30:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "XRay Daemon reports the following error:\r\n```bash\r\nxray-daemon_1  | 2019-07-28T17:35:30Z [Info] Successfully sent batch of 1 segments (0.481 seconds)\r\nxray-daemon_1  | 2019-07-28T17:35:30Z [Error] Unprocessed segment: {\r\nxray-daemon_1  |   ErrorCode: \"MissingName\",\r\nxray-daemon_1  |   Id: \"3bdcccc4799c57fa\",\r\nxray-daemon_1  |   Message: \"Invalid subsegment. ErrorCode: MissingName, Cause: null\"\r\nxray-daemon_1  | }\r\nxray-daemon_1  | 2019-07-28T17:35:30Z [Warn] Batch that contains unprocessed segments\r\n```\r\n\r\nSimple setup. Django app, using middleware. setup includes:\r\n```python\r\nXRAY_RECORDER = {\r\n    'AWS_XRAY_DAEMON_ADDRESS': 'xray-daemon:2000',\r\n    'AWS_XRAY_TRACING_NAME': 'TheNextBigThing',\r\n    'AWS_XRAY_CONTEXT_MISSING': 'LOG_ERROR'\r\n}\r\n\r\nINSTALLED_APPS = [\r\n    ...\r\n    'aws_xray_sdk.ext.django',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'aws_xray_sdk.ext.django.middleware.XRayMiddleware',\r\n    ...\r\n]\r\n```\r\n\r\nI think subsegments' subsegments' names are not being serialized correctly. Below is a snippet from the XRay Daemon payload.Notice the `\"name\": {\"py/newargs\": [\"core/snippets/ga.html\"]}` name of the subsegment, which should instead be a string according to the segment JSON schema.\r\n\r\n```json\r\n    ...\r\n    \"subsegments\": [\r\n        {\r\n            ...\r\n            \"in_progress\": false,\r\n            \"name\": \"account/login.html\",\r\n            \"namespace\": \"local\",\r\n            \"parent_id\": \"c572ac3f20a195dc\",\r\n            \"subsegments\": [\r\n                {\r\n                    \"id\": \"69ef19799fec25ba\",\r\n                    \"in_progress\": false,\r\n                    \"name\": {\r\n                        \"py/newargs\": [\r\n                            \"core/snippets/ga.html\"\r\n                        ]\r\n                    },\r\n                    \"namespace\": \"local\",\r\n                    \"parent_id\": \"5ecd89473a50fa17\",\r\n                    \"type\": \"subsegment\"\r\n                },\r\n                ...\r\n            ]\r\n            ...\r\n        }        \r\n```\r\n\r\nAll SDK versions between 2.0.1 and 2.4.2 were tested and have the same issue. Same issue on Python 3.6 and 3.7 as well. Django version is 2.2.3. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/167", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/167/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/167/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/167", "id": 472174042, "node_id": "MDU6SXNzdWU0NzIxNzQwNDI=", "number": 167, "title": "X-RAY creates new session with hardcoded region", "user": {"login": "polamayster", "id": 3791902, "node_id": "MDQ6VXNlcjM3OTE5MDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3791902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polamayster", "html_url": "https://github.com/polamayster", "followers_url": "https://api.github.com/users/polamayster/followers", "following_url": "https://api.github.com/users/polamayster/following{/other_user}", "gists_url": "https://api.github.com/users/polamayster/gists{/gist_id}", "starred_url": "https://api.github.com/users/polamayster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polamayster/subscriptions", "organizations_url": "https://api.github.com/users/polamayster/orgs", "repos_url": "https://api.github.com/users/polamayster/repos", "events_url": "https://api.github.com/users/polamayster/events{/privacy}", "received_events_url": "https://api.github.com/users/polamayster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-07-24T09:24:33Z", "updated_at": "2019-11-21T20:00:04Z", "closed_at": "2019-11-21T20:00:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is probably a reason why new session is created with specific region us-west-2 (is X-Ray available only in this region?):\r\n```python\r\ndef _create_xray_client(self, ip='127.0.0.1', port='2000'):\r\n    session = botocore.session.get_session()\r\n    url = 'http://%s:%s' % (ip, port)\r\n    return session.create_client('xray', endpoint_url=url,\r\n                                 region_name='us-west-2',\r\n                                 config=Config(signature_version=UNSIGNED)\r\n                                 )\r\n```\r\nbut can it be changed to:\r\n```python\r\nboto3.client('xray',...)\r\n```\r\nso existing default boto3 session could be reused under the hood?\r\nUsecase: application using IAM role to not throttle on call to `/v2/credentials/` in each process/worker when those credentials were already retrieved and stored in session?\r\nIf so, I can create MR with a change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/162", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/162/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/162/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/162", "id": 453449936, "node_id": "MDU6SXNzdWU0NTM0NDk5MzY=", "number": 162, "title": "Failure in Fetching Global Sampling Rules", "user": {"login": "Edward-Francis", "id": 6524322, "node_id": "MDQ6VXNlcjY1MjQzMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6524322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edward-Francis", "html_url": "https://github.com/Edward-Francis", "followers_url": "https://api.github.com/users/Edward-Francis/followers", "following_url": "https://api.github.com/users/Edward-Francis/following{/other_user}", "gists_url": "https://api.github.com/users/Edward-Francis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edward-Francis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edward-Francis/subscriptions", "organizations_url": "https://api.github.com/users/Edward-Francis/orgs", "repos_url": "https://api.github.com/users/Edward-Francis/repos", "events_url": "https://api.github.com/users/Edward-Francis/events{/privacy}", "received_events_url": "https://api.github.com/users/Edward-Francis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-07T10:42:16Z", "updated_at": "2019-06-12T08:02:21Z", "closed_at": "2019-06-12T08:02:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having problems with the `aws_xray_sdk` package fetching global sampling configuration. If I understand correctly when the recorder is initialised the Sampler attempts to fetch rules from the `RulePoller()` and then re-fetches these rules every 5 minutes period. However the following test code doesn't seem to fetch the configuration unless I specifically force it too. This setup is running in Docker images and is using the [X-Ray daemon (v3.0.1)](https://hub.docker.com/r/amazon/aws-xray-daemon/).\r\n\r\n## CODE\r\n\r\n```\r\nimport logging\r\nfrom aws_xray_sdk.core import xray_recorder\r\n\r\nlogging.basicConfig(level=logging.DEBUG)\r\nxray_recorder.configure(service=\"My Application\")\r\n\r\nsegment = xray_recorder.begin_segment(\"Test Segment\")\r\nsegment.put_annotation(\"test\", \"1\")\r\nxray_recorder.end_segment()\r\n\r\n# Un-comment forces the sampler to gather global rules \r\n# xray_recorder.sampler._rule_poller._refresh_cache()\r\n# print(xray_recorder.sampler._cache.rules) # [<SamplingRule>, <SamplingRule>]\r\n\r\nprint(xray_recorder.sampler._cache.rules) # []\r\n```\r\n\r\n## DEBUG\r\n\r\nWithout force `_refresh_cache()` - missing *DEBUG:urllib3.connectionpool:http Response*:\r\n```\r\nDEBUG:botocore.hooks:Event request-created.xray.GetSamplingRules: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x7f6034a4cd68>>\r\nDEBUG:botocore.hooks:Event choose-signer.xray.GetSamplingRules: calling handler <function set_operation_specific_signer at 0x7f6035200488>\r\nDEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=http://xray-daemon:2000/GetSamplingRules, headers={'User-Agent': b'Botocore/1.12.59 Python/3.6.6 Linux/4.14.106-79.86.amzn1.x86_64', 'Content-Length': '0'}>\r\nDEBUG:urllib3.util.retry:Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)\r\nDEBUG:urllib3.connectionpool:Starting new HTTP connection (1): xray-daemon:2000\r\nINFO:aws_xray_sdk.core.sampling.sampler:No effective centralized sampling rule match. Fallback to local rules.\r\n```\r\n\r\nWith force `_refresh_cache()`:\r\n```\r\nDEBUG:botocore.hooks:Event request-created.xray.GetSamplingRules: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x7f25c5774da0>>\r\nDEBUG:botocore.hooks:Event choose-signer.xray.GetSamplingRules: calling handler <function set_operation_specific_signer at 0x7f25c5f29488>\r\nDEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=http://xray-daemon:2000/GetSamplingRules, headers={'User-Agent': b'Botocore/1.12.59 Python/3.6.6 Linux/4.14.106-79.86.amzn1.x86_64', 'Content-Length': '0'}>\r\nDEBUG:urllib3.util.retry:Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)\r\nDEBUG:urllib3.connectionpool:Starting new HTTP connection (1): xray-daemon:2000\r\nDEBUG:urllib3.connectionpool:http://xray-daemon:2000 \"POST /GetSamplingRules HTTP/1.1\" 200 725\r\nDEBUG:botocore.parsers:Response headers: {'Content-Length': '725', 'Content-Type': 'application/json', 'Date': 'Fri, 07 Jun 2019 10:34:30 GMT', 'X-Amzn-Requestid': 'd508d0a2-890f-11e9-96dd-5ff356ea9bca'}\r\n```\r\nAny help would be appreciated!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/160", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/160/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/160/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/160", "id": 451598239, "node_id": "MDU6SXNzdWU0NTE1OTgyMzk=", "number": 160, "title": "Update readme to include Python 3.7 Support.", "user": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1030146189, "node_id": "MDU6TGFiZWwxMDMwMTQ2MTg5", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/documentation", "name": "documentation", "color": "cfed95", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-06-03T17:20:43Z", "updated_at": "2019-06-06T23:06:20Z", "closed_at": "2019-06-06T23:06:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since AWS Lambda now supports Python 3.7, we should add official X-Ray support with that version as well. With the introduction of PR #157 we now have testing support with Python 3.7, so we should let customers know we publicly support this by updating the readme.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/159", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/159/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/159/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/159", "id": 451594062, "node_id": "MDU6SXNzdWU0NTE1OTQwNjI=", "number": 159, "title": "Investigate why test_psycopg2 is failing with \"UndefinedColumn\" instead of \"ProgrammingError\"", "user": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-03T17:10:12Z", "updated_at": "2019-06-13T22:27:55Z", "closed_at": "2019-06-13T22:27:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The test for some reason now is failing. This is aside from any recent changes that we've made.  \r\n\r\n```\r\n...\r\n        exception = subsegment.cause['exceptions'][0]\r\n>       assert exception.type == 'ProgrammingError'\r\nE       AssertionError: assert 'UndefinedColumn' == 'ProgrammingError'\r\nE         - UndefinedColumn\r\nE         + ProgrammingError\r\ntests/ext/psycopg2/test_psycopg2.py:147: AssertionError\r\n...\r\n```\r\n\r\nWe re-ran the test for a build that had previously worked and now it appears to be failing. This issue is  made to investigate this and will be updated when further information is found.\r\n\r\nPlease refer to this [link](https://github.com/aws/aws-xray-sdk-python/pull/157#issuecomment-497534572) for the build re-run of a previously passing build.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/156", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/156/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/156/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/156", "id": 446130807, "node_id": "MDU6SXNzdWU0NDYxMzA4MDc=", "number": 156, "title": "Test with python3.7", "user": {"login": "luzfcb", "id": 807599, "node_id": "MDQ6VXNlcjgwNzU5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/807599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luzfcb", "html_url": "https://github.com/luzfcb", "followers_url": "https://api.github.com/users/luzfcb/followers", "following_url": "https://api.github.com/users/luzfcb/following{/other_user}", "gists_url": "https://api.github.com/users/luzfcb/gists{/gist_id}", "starred_url": "https://api.github.com/users/luzfcb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luzfcb/subscriptions", "organizations_url": "https://api.github.com/users/luzfcb/orgs", "repos_url": "https://api.github.com/users/luzfcb/repos", "events_url": "https://api.github.com/users/luzfcb/events{/privacy}", "received_events_url": "https://api.github.com/users/luzfcb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-20T13:53:11Z", "updated_at": "2019-06-03T17:12:47Z", "closed_at": "2019-06-03T17:12:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In November of last year, AWS Lambda included official support for Python3.7 on Lambda, however, this project is not being tested using Python3.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/151", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/151/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/151/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/151", "id": 427891216, "node_id": "MDU6SXNzdWU0Mjc4OTEyMTY=", "number": 151, "title": "Pynamodb tracing exception", "user": {"login": "Ismael", "id": 120270, "node_id": "MDQ6VXNlcjEyMDI3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/120270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ismael", "html_url": "https://github.com/Ismael", "followers_url": "https://api.github.com/users/Ismael/followers", "following_url": "https://api.github.com/users/Ismael/following{/other_user}", "gists_url": "https://api.github.com/users/Ismael/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ismael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ismael/subscriptions", "organizations_url": "https://api.github.com/users/Ismael/orgs", "repos_url": "https://api.github.com/users/Ismael/repos", "events_url": "https://api.github.com/users/Ismael/events{/privacy}", "received_events_url": "https://api.github.com/users/Ismael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-01T20:13:38Z", "updated_at": "2020-01-10T00:35:44Z", "closed_at": "2020-01-10T00:35:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "On doing a save on pynamodb\r\nUsing pynamodb 3.3.3 and aws-xray-sdk 2.4.2\r\n\r\n```\r\n  File \"/usr/local/lib/python2.7/dist-packages/pynamodb/models.py\", line 457, in save\r\n    return self._get_connection().put_item(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pynamodb/connection/table.py\", line 115, in put_item\r\n    return_item_collection_metrics=return_item_collection_metrics)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pynamodb/connection/base.py\", line 959, in put_item\r\n    operation_kwargs.update(self.get_identifier_map(table_name, hash_key, range_key, key=ITEM))\r\n  File \"/usr/local/lib/python2.7/dist-packages/pynamodb/connection/base.py\", line 755, in get_identifier_map\r\n    tbl = self.get_meta_table(table_name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pynamodb/connection/base.py\", line 504, in get_meta_table\r\n    data = self.dispatch(DESCRIBE_TABLE, operation_kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pynamodb/connection/base.py\", line 313, in dispatch\r\n    data = self._make_api_call(operation_name, operation_kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pynamodb/connection/base.py\", line 362, in _make_api_call\r\n    proxies=proxies,\r\n  File \"/usr/local/lib/python2.7/dist-packages/aws_xray_sdk/ext/pynamodb/patch.py\", line 39, in _xray_traced_pynamodb\r\n    meta_processor=pynamodb_meta_processor,\r\n  File \"/usr/local/lib/python2.7/dist-packages/aws_xray_sdk/core/recorder.py\", line 443, in record_subsegment\r\n    stack=stack,\r\n  File \"/usr/local/lib/python2.7/dist-packages/aws_xray_sdk/ext/pynamodb/patch.py\", line 46, in pynamodb_meta_processor\r\n    region = args[0].url.split('.')[1]\r\nIndexError: list index out of range\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/149", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/149/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/149/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/149", "id": 424254527, "node_id": "MDU6SXNzdWU0MjQyNTQ1Mjc=", "number": 149, "title": "urllib[3] not being patched in AWS lambda/python3.6?", "user": {"login": "kjpgit", "id": 8010221, "node_id": "MDQ6VXNlcjgwMTAyMjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8010221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjpgit", "html_url": "https://github.com/kjpgit", "followers_url": "https://api.github.com/users/kjpgit/followers", "following_url": "https://api.github.com/users/kjpgit/following{/other_user}", "gists_url": "https://api.github.com/users/kjpgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjpgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjpgit/subscriptions", "organizations_url": "https://api.github.com/users/kjpgit/orgs", "repos_url": "https://api.github.com/users/kjpgit/repos", "events_url": "https://api.github.com/users/kjpgit/events{/privacy}", "received_events_url": "https://api.github.com/users/kjpgit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940844, "node_id": "MDU6TGFiZWw2OTU5NDA4NDQ=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-22T15:03:52Z", "updated_at": "2019-09-16T17:49:20Z", "closed_at": "2019-03-25T17:30:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, is python3 urllib / urllib3 not being patched? I'd greatly like to avoid using 3rd party bloated libraries for https calls.  I tried urllib, urllib3, and requests, and only requests seems to be traced.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/143", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/143/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/143/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/143", "id": 415813801, "node_id": "MDU6SXNzdWU0MTU4MTM4MDE=", "number": 143, "title": "Add support for Dynamic Naming in Django", "user": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-28T20:41:33Z", "updated_at": "2019-02-28T21:33:09Z", "closed_at": "2019-02-28T21:33:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When configuring the Django web framework with X-Ray, specifying the segment name is mandatory and throws a  `SegmentNameMissingException` when one is not specified. The segment name today can be specified either through the `settings.py` configuration of the Django app or through an environment variable with the key `AWS_XRAY_TRACING_NAME`.\r\n\r\nWhen Dynamic Naming is activated and no segment name is configured, the `SegmentNameMissingException` is still thrown. Although we do specify in the [API reference](https://docs.aws.amazon.com/xray-sdk-for-python/latest/reference/frameworks.html) that a segment name must be configured in Django, the `DYNAMIC_NAMING` configuration parameter is present in the example. This can be misleading to customers because we do not actually support dynamic naming today in Django.\r\n\r\nTwo Choices:\r\n1. Enable Dynamic Naming in Django by changing the following [lines](https://github.com/aws/aws-xray-sdk-python/blob/master/aws_xray_sdk/ext/django/apps.py#L26-L27) to:\r\n```\r\nif not settings.AWS_XRAY_TRACING_NAME and not settings.DYNAMIC_NAMING:\r\n    raise SegmentNameMissingException('Segment name is required.')\r\n```\r\n2. Remove the `DYNAMIC_NAMING` configuration parameter from the API reference.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/141", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/141/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/141/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/141", "id": 415683259, "node_id": "MDU6SXNzdWU0MTU2ODMyNTk=", "number": 141, "title": "Django documentation should mention that defining AWS_XRAY_TRACING_NAME is mandatory", "user": {"login": "millarm", "id": 1769044, "node_id": "MDQ6VXNlcjE3NjkwNDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1769044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/millarm", "html_url": "https://github.com/millarm", "followers_url": "https://api.github.com/users/millarm/followers", "following_url": "https://api.github.com/users/millarm/following{/other_user}", "gists_url": "https://api.github.com/users/millarm/gists{/gist_id}", "starred_url": "https://api.github.com/users/millarm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/millarm/subscriptions", "organizations_url": "https://api.github.com/users/millarm/orgs", "repos_url": "https://api.github.com/users/millarm/repos", "events_url": "https://api.github.com/users/millarm/events{/privacy}", "received_events_url": "https://api.github.com/users/millarm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1030146189, "node_id": "MDU6TGFiZWwxMDMwMTQ2MTg5", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/documentation", "name": "documentation", "color": "cfed95", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-02-28T15:33:48Z", "updated_at": "2019-02-28T20:00:46Z", "closed_at": "2019-02-28T20:00:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "In settings.py you must, at a minimum have\r\n\r\n```\r\nXRAY_RECORDER = {\r\n    'AWS_XRAY_TRACING_NAME': 'My application',\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/138", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/138/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/138/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/138", "id": 415287955, "node_id": "MDU6SXNzdWU0MTUyODc5NTU=", "number": 138, "title": "Middlewares should create subsegments only when in the Lambda context running under a Lambda environment", "user": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-02-27T19:26:50Z", "updated_at": "2019-02-28T00:53:19Z", "closed_at": "2019-02-28T00:53:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current behavior of the Middlewares is that it opts to generate subsegments only if the current execution environment is in lambda, otherwise it generates segments.\r\n\r\nThis is problematic if customers choose to create their own custom context and proceed to use that context in a Lambda environment. If for example the custom context is designed to allow users to call put_segment and end_segment, the middlewares would still call begin_subsegment if the context is run in a Lambda environment.\r\n\r\nThe expected behavior of the middleware is to only generate subsegments if it's in a **Lambda context** running in the **Lambda environment**, and if the middleware is run otherwise, it should only generate segments.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/137", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/137/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/137/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/137", "id": 415142369, "node_id": "MDU6SXNzdWU0MTUxNDIzNjk=", "number": 137, "title": "Segment assumed started under lambda results in exception", "user": {"login": "IlyaSukhanov", "id": 1637068, "node_id": "MDQ6VXNlcjE2MzcwNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1637068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlyaSukhanov", "html_url": "https://github.com/IlyaSukhanov", "followers_url": "https://api.github.com/users/IlyaSukhanov/followers", "following_url": "https://api.github.com/users/IlyaSukhanov/following{/other_user}", "gists_url": "https://api.github.com/users/IlyaSukhanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlyaSukhanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlyaSukhanov/subscriptions", "organizations_url": "https://api.github.com/users/IlyaSukhanov/orgs", "repos_url": "https://api.github.com/users/IlyaSukhanov/repos", "events_url": "https://api.github.com/users/IlyaSukhanov/events{/privacy}", "received_events_url": "https://api.github.com/users/IlyaSukhanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-27T14:07:53Z", "updated_at": "2019-02-27T20:45:50Z", "closed_at": "2019-02-27T20:45:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a regression from https://github.com/aws/aws-xray-sdk-python/pull/127\r\n\r\n```\r\n[ERROR]\tcannot find the current segment/subsegment, please make sure you have a segment open\r\n[WARNING]\tNo segment found, cannot begin subsegment foo.app.\r\n[ERROR]\t\tException on / [GET]\r\nTraceback (most recent call last):\r\nFile \"/var/task/flask/app.py\", line 2292, in wsgi_app\r\nresponse = self.full_dispatch_request()\r\nFile \"/var/task/flask/app.py\", line 1815, in full_dispatch_request\r\nrv = self.handle_user_exception(e)\r\nFile \"/var/task/flask_cors/extension.py\", line 161, in wrapped_function\r\nreturn cors_after_request(app.make_response(f(*args, **kwargs)))\r\nFile \"/var/task/flask/app.py\", line 1718, in handle_user_exception\r\nreraise(exc_type, exc_value, tb)\r\nFile \"/var/task/flask/_compat.py\", line 35, in reraise\r\nraise value\r\nFile \"/var/task/flask/app.py\", line 1811, in full_dispatch_request\r\nrv = self.preprocess_request()\r\nFile \"/var/task/flask/app.py\", line 2087, in preprocess_request\r\nrv = func()\r\nFile \"/var/task/aws_xray_sdk/ext/flask/middleware.py\", line 57, in _before_request\r\nsegment.save_origin_trace_header(xray_header)\r\nAttributeError: 'NoneType' object has no attribute 'save_origin_trace_header'\r\n```\r\n\r\nFor context this is under lambda execution of zappa/flask and aws-xray-sdk-python is initiated as follows:\r\n```\r\nfrom aws_xray_sdk.core import xray_recorder, patch_all\r\nfrom aws_xray_sdk.core.lambda_launcher import check_in_lambda\r\nfrom aws_xray_sdk.core.context import Context\r\nfrom aws_xray_sdk.ext.flask.middleware import XRayMiddleware\r\n[...snip...]\r\n  if check_in_lambda():\r\n      xray_recorder.configure(service=__name__, sampling=False, context=Context())\r\n      XRayMiddleware(app, xray_recorder)\r\n      patch_all()\r\n```\r\nIts obvious that this is related to application not being able to start segment (not entirely clear to me why that is happening), however if segment is not found for what ever reason expectation is that application starts (with warning) rather than crash with exception.\r\n\r\n[Assumption that if code is under lambda it must already have segment created](https://github.com/aws/aws-xray-sdk-python/pull/127/files#diff-30472d2c5bf9c358f49f099229b4aebfR47) is not entirely accurate?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/134", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/134/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/134/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/134", "id": 412779445, "node_id": "MDU6SXNzdWU0MTI3Nzk0NDU=", "number": 134, "title": "Poller threads block main thread from exiting", "user": {"login": "bendog", "id": 894916, "node_id": "MDQ6VXNlcjg5NDkxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/894916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bendog", "html_url": "https://github.com/bendog", "followers_url": "https://api.github.com/users/bendog/followers", "following_url": "https://api.github.com/users/bendog/following{/other_user}", "gists_url": "https://api.github.com/users/bendog/gists{/gist_id}", "starred_url": "https://api.github.com/users/bendog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bendog/subscriptions", "organizations_url": "https://api.github.com/users/bendog/orgs", "repos_url": "https://api.github.com/users/bendog/repos", "events_url": "https://api.github.com/users/bendog/events{/privacy}", "received_events_url": "https://api.github.com/users/bendog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-02-21T07:11:48Z", "updated_at": "2019-03-05T18:42:13Z", "closed_at": "2019-03-01T21:16:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "My script appeared to be completing all of it's steps, but wouldn't exit.\r\nI set logging to debug and it appears that aws-xray-sdk is preventing the script from exiting.\r\nIt continuously logs this line forever.\r\n`target_poller.py->_do_work:36 - DEBUG - There is no sampling rule statistics to report. Skipping`\r\n\r\nI'm assuming there is something wrong with the config of my system as the aws xray console doesn't appear to have any traces showing up, however this still feels like a bug to me.\r\n\r\nusing: `aws-xray-sdk==2.3.0`\r\non EC2 (ubuntu 18.04) with `AWS X-Ray daemon version: 3.0.0`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/131", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/131/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/131/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/131", "id": 410920689, "node_id": "MDU6SXNzdWU0MTA5MjA2ODk=", "number": 131, "title": "SQLAlchemy patching does not correctly remove password component from URL", "user": {"login": "WFT", "id": 1696960, "node_id": "MDQ6VXNlcjE2OTY5NjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1696960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WFT", "html_url": "https://github.com/WFT", "followers_url": "https://api.github.com/users/WFT/followers", "following_url": "https://api.github.com/users/WFT/following{/other_user}", "gists_url": "https://api.github.com/users/WFT/gists{/gist_id}", "starred_url": "https://api.github.com/users/WFT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WFT/subscriptions", "organizations_url": "https://api.github.com/users/WFT/orgs", "repos_url": "https://api.github.com/users/WFT/repos", "events_url": "https://api.github.com/users/WFT/events{/privacy}", "received_events_url": "https://api.github.com/users/WFT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-15T19:55:50Z", "updated_at": "2019-02-16T01:06:45Z", "closed_at": "2019-02-16T01:06:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This was noticed when using `flask_sqlalchemy`, but I believe it affects plain `SQLAlchemy` as well.\r\n\r\n```python\r\napp = Flask(__name__) \r\napp.config[\"SQLALCHEMY_DATABASE_URI\"] = \"postgresql://foo:bar@baz.us-east-1.rds.amazonaws.com:2834/thing\"\r\ndb = XRayFlaskSqlAlchemy(app)\r\n```\r\n\r\nSubsegments get recorded with the name `postgresql://foo:***@baz.us-east-1.rds.amazonaws.com:2834/thing`. Note that the password text is not present in the subsegment name (woohoo!), but it is composed of invalid characters, resulting in an error log message:\r\n```\r\nRemoving Segment/Subsugment Name invalid characters from postgresql://foo:***@baz.us-east-1.rds.amazonaws.com:2834/thing\r\n```\r\n\r\nI believe that the issue lies here: https://github.com/aws/aws-xray-sdk-python/blob/dcb08012532d12403df0ec698c7158ab98a45878/aws_xray_sdk/ext/sqlalchemy/util/decorators.py#L104-L107\r\n\r\nThe URL is parsed and the password stripped, but the old URL is assigned to `safe_url`. The method `ParseResult._replace` returns a new `ParseResult` but does not modify the initial `ParseResult`.\r\n\r\nBecause the fix seems to be so simple, I'll put up a PR before hearing back, but please let me know if there's something I've misunderstood about this.\r\n\r\nConfiguration:\r\naws-xray-sdk-python == 2.3.0\r\nPython 3.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/129", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/129/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/129/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/129", "id": 408929848, "node_id": "MDU6SXNzdWU0MDg5Mjk4NDg=", "number": 129, "title": "Exception thrown when Lambda is not initialized in begin_subsegment", "user": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2019-02-11T19:04:48Z", "updated_at": "2019-02-18T18:18:20Z", "closed_at": "2019-02-12T01:09:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When Lambda is not initialized in begin_subsegment(), an exception is thrown because the global SDK config module was improperly named.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/124", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/124/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/124/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/124", "id": 402790975, "node_id": "MDU6SXNzdWU0MDI3OTA5NzU=", "number": 124, "title": "Patching sqlalchemy", "user": {"login": "zhammer", "id": 6956487, "node_id": "MDQ6VXNlcjY5NTY0ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6956487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhammer", "html_url": "https://github.com/zhammer", "followers_url": "https://api.github.com/users/zhammer/followers", "following_url": "https://api.github.com/users/zhammer/following{/other_user}", "gists_url": "https://api.github.com/users/zhammer/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhammer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhammer/subscriptions", "organizations_url": "https://api.github.com/users/zhammer/orgs", "repos_url": "https://api.github.com/users/zhammer/repos", "events_url": "https://api.github.com/users/zhammer/events{/privacy}", "received_events_url": "https://api.github.com/users/zhammer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-24T16:30:54Z", "updated_at": "2019-02-05T00:55:42Z", "closed_at": "2019-02-05T00:55:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a reason we can't just patch out the sqlalchemy `SessionMaker` with the `XRaySessionMaker`?\r\n\r\nCurious why this is isolated from the rest of the patching.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/121", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/121/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/121/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/121", "id": 400890341, "node_id": "MDU6SXNzdWU0MDA4OTAzNDE=", "number": 121, "title": "httplib patcher: False identifying outoing HTTPS requests as HTTP", "user": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-01-18T21:11:24Z", "updated_at": "2019-02-07T18:25:00Z", "closed_at": "2019-02-07T18:25:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, X-Ray detects outgoing HTTP/HTTPS requests made through the urllib httplib client automatically get identified as HTTP. The issue is that the underlying check in the patcher is no longer valid: \r\nhttps://github.com/aws/aws-xray-sdk-python/blob/master/aws_xray_sdk/ext/httplib/patch.py#L95\r\n\r\nThe SSLContext name of a https connection instance varies depending on if the underlying request instance is utilizing urllib's VerifiedHTTPSConnection or httplib's HTTPSConnection object. For the former, ssl_context is the variable name for its SSLContext, where as _context is the variable name for the latter's SSLContext\r\n\r\nThe overall effect on this misidentification causes other libraries such as Requests and Botocore which utilize urllib to also misidentify their http/https url endpoints during metadata capture.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/120", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/120/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/120/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/120", "id": 400875282, "node_id": "MDU6SXNzdWU0MDA4NzUyODI=", "number": 120, "title": "Configure max_trace_back= 0 returns full exception stack", "user": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-01-18T20:20:51Z", "updated_at": "2019-02-07T18:25:48Z", "closed_at": "2019-02-07T18:25:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, if the recorder is configured to have a max_trace_back of 0, the full exception trace is returned on its subsegment. If the max_trace_back is 1, only one line of the exception trace is returned. \r\n\r\nThis is an unexpected behavior and should instead return an empty trace stack if max_trace_back is configured to be 0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/110", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/110/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/110/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/110", "id": 370185947, "node_id": "MDU6SXNzdWUzNzAxODU5NDc=", "number": 110, "title": "Multiple instrumented segments", "user": {"login": "abivolmv", "id": 39116856, "node_id": "MDQ6VXNlcjM5MTE2ODU2", "avatar_url": "https://avatars3.githubusercontent.com/u/39116856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abivolmv", "html_url": "https://github.com/abivolmv", "followers_url": "https://api.github.com/users/abivolmv/followers", "following_url": "https://api.github.com/users/abivolmv/following{/other_user}", "gists_url": "https://api.github.com/users/abivolmv/gists{/gist_id}", "starred_url": "https://api.github.com/users/abivolmv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abivolmv/subscriptions", "organizations_url": "https://api.github.com/users/abivolmv/orgs", "repos_url": "https://api.github.com/users/abivolmv/repos", "events_url": "https://api.github.com/users/abivolmv/events{/privacy}", "received_events_url": "https://api.github.com/users/abivolmv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940844, "node_id": "MDU6TGFiZWw2OTU5NDA4NDQ=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-15T14:18:51Z", "updated_at": "2019-05-17T05:47:21Z", "closed_at": "2018-10-18T13:22:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am trying to chain multiple segments into one trace. Here is the test code:\r\n\r\n```python\r\ntraceid = TraceId().to_id()\r\nparent = xray_recorder.begin_segment(\"Test I\",traceid)\r\nxray_recorder.end_segment()\r\nchild = xray_recorder.begin_segment(\"Test II\",traceid, parent.id)\r\nxray_recorder.end_segment()\r\ngrandchild = xray_recorder.begin_segment(\"Test III\",traceid, child.id)\r\nxray_recorder.end_segment()\r\n```\r\n\r\nBut I get only \"Test I\" in XRay console:\r\n```\r\n{\r\n    \"Duration\": 0.001,\r\n    \"Id\": \"1-5bc4a0da-2797590e7348c26b256a5f53\",\r\n    \"Segments\": [\r\n        {\r\n            \"Document\": {\r\n                \"id\": \"8e21697cecb35f3d\",\r\n                \"name\": \"Test Ix\",\r\n                \"start_time\": 1539612890.062,\r\n                \"end_time\": 1539612890.063,\r\n                \"aws\": {\r\n                    \"xray\": {\r\n                        \"sdk_version\": \"2.2.0\",\r\n                        \"sdk\": \"X-Ray for Python\"\r\n                    }\r\n                },\r\n                \"service\": {\r\n                    \"runtime\": \"CPython\",\r\n                    \"runtime_version\": \"2.7.15\"\r\n                },\r\n                \"trace_id\": \"1-5bc4a0da-2797590e7348c26b256a5f53\"\r\n            },\r\n            \"Id\": \"8e21697cecb35f3d\"\r\n        }\r\n    ]\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/107", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/107/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/107/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/107", "id": 368344654, "node_id": "MDU6SXNzdWUzNjgzNDQ2NTQ=", "number": 107, "title": "How to mock @xray_recorder.capture ?", "user": {"login": "gregkonushev-okta", "id": 42911834, "node_id": "MDQ6VXNlcjQyOTExODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/42911834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregkonushev-okta", "html_url": "https://github.com/gregkonushev-okta", "followers_url": "https://api.github.com/users/gregkonushev-okta/followers", "following_url": "https://api.github.com/users/gregkonushev-okta/following{/other_user}", "gists_url": "https://api.github.com/users/gregkonushev-okta/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregkonushev-okta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregkonushev-okta/subscriptions", "organizations_url": "https://api.github.com/users/gregkonushev-okta/orgs", "repos_url": "https://api.github.com/users/gregkonushev-okta/repos", "events_url": "https://api.github.com/users/gregkonushev-okta/events{/privacy}", "received_events_url": "https://api.github.com/users/gregkonushev-okta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-09T18:43:53Z", "updated_at": "2018-10-11T21:35:13Z", "closed_at": "2018-10-11T21:34:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been trying to mock this decorator on my tests to have xray_recorder disabled while I am doing my tests. However I failed at all attempts to mock out this function. Is there any recommendation or example for this use case? How do I disable xray_recorder completely in my test runs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/106", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/106/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/106/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/106", "id": 368277684, "node_id": "MDU6SXNzdWUzNjgyNzc2ODQ=", "number": 106, "title": "Not patching after pyinstaller used", "user": {"login": "abivolmv", "id": 39116856, "node_id": "MDQ6VXNlcjM5MTE2ODU2", "avatar_url": "https://avatars3.githubusercontent.com/u/39116856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abivolmv", "html_url": "https://github.com/abivolmv", "followers_url": "https://api.github.com/users/abivolmv/followers", "following_url": "https://api.github.com/users/abivolmv/following{/other_user}", "gists_url": "https://api.github.com/users/abivolmv/gists{/gist_id}", "starred_url": "https://api.github.com/users/abivolmv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abivolmv/subscriptions", "organizations_url": "https://api.github.com/users/abivolmv/orgs", "repos_url": "https://api.github.com/users/abivolmv/repos", "events_url": "https://api.github.com/users/abivolmv/events{/privacy}", "received_events_url": "https://api.github.com/users/abivolmv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940844, "node_id": "MDU6TGFiZWw2OTU5NDA4NDQ=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-09T15:47:21Z", "updated_at": "2018-10-11T08:32:11Z", "closed_at": "2018-10-11T08:32:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this belongs here , but if you have some hints ...\r\nSo the issue is that after I package the custom script with pyinstaller I don't get the request to aws services in the traces :\r\n![xray_with_pyinstaller](https://user-images.githubusercontent.com/39116856/46681178-f354b200-cbea-11e8-8ecb-70f5a30eee09.JPG)\r\n\r\nThis is how it looks when I run the script directly (without pyinstaller) :\r\n\r\n![xray_without_pyinstaller](https://user-images.githubusercontent.com/39116856/46681206-036c9180-cbeb-11e8-9ebc-971db9b1047d.JPG)\r\n\r\nIt seems that the libraries are not patched ?\r\nI added the required json from the manifest to the .spec file - didn't help.\r\n\r\n```\r\n# -*- mode: python -*-\r\n\r\nblock_cipher = None\r\n\r\nneeded_aws_xray_sdk_files = [(r'aws_xray_sdk\\core\\sampling\\local\\sampling_rule.json',\r\n                           r'C:\\Users\\xxxx\\repos\\surreal-queue-dispatcher\\venv\\Lib\\site-packages\\aws_xray_sdk\\core\\sampling\\local\\sampling_rule.json',\r\n                          'DATA'),\r\n                          (r'aws_xray_sdk\\ext\\resources\\aws_para_whitelist.json',\r\n                           r'C:\\Users\\xxxx\\repos\\surreal-queue-dispatcher\\venv\\Lib\\site-packages\\aws_xray_sdk\\ext\\resources\\aws_para_whitelist.json',\r\n                          'DATA')]\r\n\r\npatched_dateutil = [(r'dateutil\\tz\\tz.py',\r\n                           r'C:\\Users\\xxxx\\repos\\surreal-queue-dispatcher\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py',\r\n                          'DATA')]\r\n\r\na = Analysis(['run_surreal.py'],\r\n             pathex=['.', './notifications'],\r\n             binaries=[],\r\n             datas=[\r\n                 ('./notifications/*.pem', './notifications'),\r\n                 ('./notifications/*.key', './notifications'),\r\n                 ('./notifications/*.crt', './notifications')\r\n             ],\r\n             hiddenimports=[],\r\n             hookspath=[],\r\n             runtime_hooks=[],\r\n             excludes=[],\r\n             win_no_prefer_redirects=False,\r\n             win_private_assemblies=False,\r\n             cipher=block_cipher)\r\npyz = PYZ(a.pure, a.zipped_data,\r\n             cipher=block_cipher)\r\nexe = EXE(pyz,\r\n          a.scripts,\r\n          exclude_binaries=True,\r\n          name='message_dispatcher',\r\n          debug=False,\r\n          strip=False,\r\n          upx=True,\r\n          console=True )\r\ncoll = COLLECT(exe,\r\n               a.binaries,\r\n               needed_aws_xray_sdk_files,\r\n               patched_dateutil,\r\n               a.zipfiles,\r\n               a.datas,\r\n               strip=False,\r\n               upx=True,\r\n               name='message_dispatcher')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/105", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/105/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/105/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/105", "id": 367254481, "node_id": "MDU6SXNzdWUzNjcyNTQ0ODE=", "number": 105, "title": "Pyinstaller missing sampling_rule.json", "user": {"login": "abivolmv", "id": 39116856, "node_id": "MDQ6VXNlcjM5MTE2ODU2", "avatar_url": "https://avatars3.githubusercontent.com/u/39116856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abivolmv", "html_url": "https://github.com/abivolmv", "followers_url": "https://api.github.com/users/abivolmv/followers", "following_url": "https://api.github.com/users/abivolmv/following{/other_user}", "gists_url": "https://api.github.com/users/abivolmv/gists{/gist_id}", "starred_url": "https://api.github.com/users/abivolmv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abivolmv/subscriptions", "organizations_url": "https://api.github.com/users/abivolmv/orgs", "repos_url": "https://api.github.com/users/abivolmv/repos", "events_url": "https://api.github.com/users/abivolmv/events{/privacy}", "received_events_url": "https://api.github.com/users/abivolmv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940844, "node_id": "MDU6TGFiZWw2OTU5NDA4NDQ=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-05T15:13:24Z", "updated_at": "2018-10-10T19:29:09Z", "closed_at": "2018-10-08T07:20:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nwhen packaging custom python app that imports this sdk :\r\n```\r\nfrom aws_xray_sdk.core import xray_recorder\r\n```\r\nit runs successfully but when trying to execute the packaged app I get this error :\r\n```\r\nC:\\Users\\abivol\\repos\\surreal-queue-dispatcher\\dist\\message_dispatcher>message_dispatcher.exe\r\nTraceback (most recent call last):\r\n  File \"run_surreal.py\", line 13, in <module>\r\n  File \"c:\\python27\\Lib\\site-packages\\PyInstaller\\loader\\pyimod03_importers.py\", line 395, in load_module\r\n    exec(bytecode, module.__dict__)\r\n  File \"surreal\\surreal.py\", line 18, in <module>\r\n  File \"c:\\python27\\Lib\\site-packages\\PyInstaller\\loader\\pyimod03_importers.py\", line 395, in load_module\r\n    exec(bytecode, module.__dict__)\r\n  File \"site-packages\\aws_xray_sdk\\core\\__init__.py\", line 1, in <module>\r\n  File \"c:\\python27\\Lib\\site-packages\\PyInstaller\\loader\\pyimod03_importers.py\", line 395, in load_module\r\n    exec(bytecode, module.__dict__)\r\n  File \"site-packages\\aws_xray_sdk\\core\\recorder.py\", line 16, in <module>\r\n  File \"c:\\python27\\Lib\\site-packages\\PyInstaller\\loader\\pyimod03_importers.py\", line 395, in load_module\r\n    exec(bytecode, module.__dict__)\r\n  File \"site-packages\\aws_xray_sdk\\core\\sampling\\sampler.py\", line 6, in <module>\r\n  File \"c:\\python27\\Lib\\site-packages\\PyInstaller\\loader\\pyimod03_importers.py\", line 395, in load_module\r\n    exec(bytecode, module.__dict__)\r\n  File \"site-packages\\aws_xray_sdk\\core\\sampling\\local\\sampler.py\", line 9, in <module>\r\nIOError: [Errno 2] No such file or directory: 'C:\\\\Users\\\\abivol\\\\repos\\\\SURREA~1\\\\dist\\\\MESSAG~1\\\\aws_xray_sdk\\\\core\\\\sampling\\\\local\\\\samp\r\nling_rule.json'\r\n[1384] Failed to execute script run_surreal\r\n```\r\n\r\nThe only warning I get about xray when building with debug mode on is :\r\n```\r\ninvalid module named aws_xray_sdk.core.async_recorder - imported by aws_xray_sdk.core (conditional)\r\n```\r\n\r\nPyinstaller 3.4\r\nPython 2.7.15\r\n`pyinstaller --log-level=DEBUG --onedir -y -p ./ surreal.spec`\r\nand spec file attached\r\n[warn-surreal.txt](https://github.com/aws/aws-xray-sdk-python/files/2450872/warn-surreal.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/103", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/103/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/103/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/103", "id": 365825165, "node_id": "MDU6SXNzdWUzNjU4MjUxNjU=", "number": 103, "title": "Sampling pollers have an issue on Windows OS", "user": {"login": "abivolmv", "id": 39116856, "node_id": "MDQ6VXNlcjM5MTE2ODU2", "avatar_url": "https://avatars3.githubusercontent.com/u/39116856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abivolmv", "html_url": "https://github.com/abivolmv", "followers_url": "https://api.github.com/users/abivolmv/followers", "following_url": "https://api.github.com/users/abivolmv/following{/other_user}", "gists_url": "https://api.github.com/users/abivolmv/gists{/gist_id}", "starred_url": "https://api.github.com/users/abivolmv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abivolmv/subscriptions", "organizations_url": "https://api.github.com/users/abivolmv/orgs", "repos_url": "https://api.github.com/users/abivolmv/repos", "events_url": "https://api.github.com/users/abivolmv/events{/privacy}", "received_events_url": "https://api.github.com/users/abivolmv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-02T10:00:35Z", "updated_at": "2018-10-05T19:53:47Z", "closed_at": "2018-10-05T19:53:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI get the following error when using the sdk :\r\n\r\n![xray_sampling_error](https://user-images.githubusercontent.com/39116856/46342286-a9902880-c63a-11e8-8c19-96d35e33f4ac.PNG)\r\n\r\nThis is the call to sampling rules in case its needed:\r\n\r\n![xray_sampling_error1](https://user-images.githubusercontent.com/39116856/46342306-b280fa00-c63a-11e8-9313-6ce6394fa430.PNG)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/102", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/102/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/102/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/102", "id": 364833197, "node_id": "MDU6SXNzdWUzNjQ4MzMxOTc=", "number": 102, "title": "Python 2.7 SyntaxError", "user": {"login": "abivolmv", "id": 39116856, "node_id": "MDQ6VXNlcjM5MTE2ODU2", "avatar_url": "https://avatars3.githubusercontent.com/u/39116856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abivolmv", "html_url": "https://github.com/abivolmv", "followers_url": "https://api.github.com/users/abivolmv/followers", "following_url": "https://api.github.com/users/abivolmv/following{/other_user}", "gists_url": "https://api.github.com/users/abivolmv/gists{/gist_id}", "starred_url": "https://api.github.com/users/abivolmv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abivolmv/subscriptions", "organizations_url": "https://api.github.com/users/abivolmv/orgs", "repos_url": "https://api.github.com/users/abivolmv/repos", "events_url": "https://api.github.com/users/abivolmv/events{/privacy}", "received_events_url": "https://api.github.com/users/abivolmv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940844, "node_id": "MDU6TGFiZWw2OTU5NDA4NDQ=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-28T10:32:21Z", "updated_at": "2018-10-05T07:50:24Z", "closed_at": "2018-10-05T07:50:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error when running a local script with python 2.7.15 on Windows :\r\n\r\n```\r\npython run_surreal.py\r\nTraceback (most recent call last):\r\n  File \"run_surreal.py\", line 19, in <module>\r\n    from surreal.surreal import SQSController\r\n  File \"C:\\Users\\xxx\\repos\\surreal-queue-dispatcher\\surreal\\surreal.py\", line 20, in <module>\r\n    from aws_xray_sdk.core.async_context import AsyncContext\r\n  File \"C:\\Users\\xxx\\repos\\surreal-queue-dispatcher\\venv\\lib\\site-packages\\aws_xray_sdk\\core\\async_context.py\", line 14\r\n    def __init__(self, *args, loop=None, use_task_factory=True, **kwargs):\r\n                                 ^\r\nSyntaxError: invalid syntax\r\n```\r\nI guess this line is not python 2.x compatible :\r\nhttps://github.com/aws/aws-xray-sdk-python/blob/master/aws_xray_sdk/core/async_context.py#L14", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/99", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/99/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/99/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/99", "id": 361780727, "node_id": "MDU6SXNzdWUzNjE3ODA3Mjc=", "number": 99, "title": "patch_all() can patch modules multiple times, causing RecursionErrors", "user": {"login": "nathanreynolds-kcom", "id": 25300673, "node_id": "MDQ6VXNlcjI1MzAwNjcz", "avatar_url": "https://avatars0.githubusercontent.com/u/25300673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanreynolds-kcom", "html_url": "https://github.com/nathanreynolds-kcom", "followers_url": "https://api.github.com/users/nathanreynolds-kcom/followers", "following_url": "https://api.github.com/users/nathanreynolds-kcom/following{/other_user}", "gists_url": "https://api.github.com/users/nathanreynolds-kcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanreynolds-kcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanreynolds-kcom/subscriptions", "organizations_url": "https://api.github.com/users/nathanreynolds-kcom/orgs", "repos_url": "https://api.github.com/users/nathanreynolds-kcom/repos", "events_url": "https://api.github.com/users/nathanreynolds-kcom/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanreynolds-kcom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-19T14:37:59Z", "updated_at": "2018-10-05T19:54:41Z", "closed_at": "2018-10-05T19:54:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "We hit an issue where patch_all() was used in a Lambda function - after the 1000th call we saw a RecursionError when calling `requests.get()`.\r\n\r\nExample:\r\n\r\n```python\r\nfrom aws_xray_sdk.core import patch_all\r\nimport requests\r\nimport sys\r\n\r\ndef lambda_handler(event, _context):\r\n    for i in range(sys.getrecursionlimit()):\r\n        patch_all()\r\n    requests.get('https://google.com')\u00a0# Triggers RecursionError\r\n```\r\n\r\nWe should have called `patch_all()` outside of the function, but this still feels like a gotcha.\r\n\r\n`core.patcher._patch` has this code:\r\n\r\n```python\r\ndef _patch(module_to_patch):\r\n    # [...]\r\n    if module_to_patch in _PATCHED_MODULES:\r\n        log.debug('%s already patched', module_to_patch)\r\n```\r\n\r\nSo it recognises the multiple patch, but repatches anyway.\r\n\r\nShould `_patch` return early if it recognises the patch is already in place?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/98", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/98/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/98/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/98", "id": 360912212, "node_id": "MDU6SXNzdWUzNjA5MTIyMTI=", "number": 98, "title": "end_segment should not break when context_missing is LOG_ERROR", "user": {"login": "jaysonsantos", "id": 51510, "node_id": "MDQ6VXNlcjUxNTEw", "avatar_url": "https://avatars1.githubusercontent.com/u/51510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaysonsantos", "html_url": "https://github.com/jaysonsantos", "followers_url": "https://api.github.com/users/jaysonsantos/followers", "following_url": "https://api.github.com/users/jaysonsantos/following{/other_user}", "gists_url": "https://api.github.com/users/jaysonsantos/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaysonsantos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaysonsantos/subscriptions", "organizations_url": "https://api.github.com/users/jaysonsantos/orgs", "repos_url": "https://api.github.com/users/jaysonsantos/repos", "events_url": "https://api.github.com/users/jaysonsantos/events{/privacy}", "received_events_url": "https://api.github.com/users/jaysonsantos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-17T15:03:31Z", "updated_at": "2018-10-05T19:55:27Z", "closed_at": "2018-10-05T19:55:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now, calls to end_segment will break when `context_missing='LOG_ERROR'`, should that happen?\r\n\r\n```python\r\n>>> xray_recorder.end_segment()\r\ncannot find the current segment/subsegment, please make sure you have a segment open\r\nNo segment to end\r\ncannot find the current segment/subsegment, please make sure you have a segment open\r\nTraceback (most recent call last):\r\n...\r\n  File \".../aws-xray-sdk/aws_xray_sdk/core/recorder.py\", line 229, in end_segment\r\n    if self.current_segment().ready_to_send():\r\nAttributeError: 'NoneType' object has no attribute 'ready_to_send'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/96", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/96/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/96/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/96", "id": 359507759, "node_id": "MDU6SXNzdWUzNTk1MDc3NTk=", "number": 96, "title": "Issue with using xray with async function", "user": {"login": "oba11", "id": 2796222, "node_id": "MDQ6VXNlcjI3OTYyMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2796222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oba11", "html_url": "https://github.com/oba11", "followers_url": "https://api.github.com/users/oba11/followers", "following_url": "https://api.github.com/users/oba11/following{/other_user}", "gists_url": "https://api.github.com/users/oba11/gists{/gist_id}", "starred_url": "https://api.github.com/users/oba11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oba11/subscriptions", "organizations_url": "https://api.github.com/users/oba11/orgs", "repos_url": "https://api.github.com/users/oba11/repos", "events_url": "https://api.github.com/users/oba11/events{/privacy}", "received_events_url": "https://api.github.com/users/oba11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-12T14:28:47Z", "updated_at": "2018-10-03T00:15:21Z", "closed_at": "2018-10-03T00:15:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried using xray with async function but keep getting this error \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"app.py\", line 333, in <module>\r\n    xray_recorder.end_segment()\r\n  File \"/usr/local/lib/python3.6/site-packages/aws_xray_sdk/core/recorder.py\", line 206, in end_segment\r\n    if self.current_segment().ready_to_send():\r\nAttributeError: 'NoneType' object has no attribute 'ready_to_send'\r\n```\r\n\r\n**PIP**\r\n```\r\naiobotocore     0.9.4\r\naws-xray-sdk    1.1\r\nboto3           1.7.58\r\nbotocore        1.10.58\r\n```\r\n\r\n> N.B: I know latest version of `aws-xray-sdk` is not supported with `aiobotocore`\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/90", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/90/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/90/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/90", "id": 357833244, "node_id": "MDU6SXNzdWUzNTc4MzMyNDQ=", "number": 90, "title": "Psycopg <class 'IndexError'> tuple index out of range", "user": {"login": "IlyaSukhanov", "id": 1637068, "node_id": "MDQ6VXNlcjE2MzcwNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1637068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlyaSukhanov", "html_url": "https://github.com/IlyaSukhanov", "followers_url": "https://api.github.com/users/IlyaSukhanov/followers", "following_url": "https://api.github.com/users/IlyaSukhanov/following{/other_user}", "gists_url": "https://api.github.com/users/IlyaSukhanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlyaSukhanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlyaSukhanov/subscriptions", "organizations_url": "https://api.github.com/users/IlyaSukhanov/orgs", "repos_url": "https://api.github.com/users/IlyaSukhanov/repos", "events_url": "https://api.github.com/users/IlyaSukhanov/events{/privacy}", "received_events_url": "https://api.github.com/users/IlyaSukhanov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-09-06T21:24:32Z", "updated_at": "2018-10-05T19:55:49Z", "closed_at": "2018-10-05T19:55:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n  File \"/var/task/sqlalchemy/engine/default.py\", line 412, in connect\r\n    return self.dbapi.connect(*cargs, **cparams)\r\n  File \"/var/task/aws_xray_sdk/ext/psycopg2/patch.py\", line 20, in _xray_traced_connect\r\n    dbname = kwargs['dbname'] if 'dbname' in kwargs else re.search(r'dbname=(\\S+)\\b', args[0]).groups()[0]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/87", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/87/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/87/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/87", "id": 356533812, "node_id": "MDU6SXNzdWUzNTY1MzM4MTI=", "number": 87, "title": "try/except around serialization blocks some workflows", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 950898486, "node_id": "MDU6TGFiZWw5NTA4OTg0ODY=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/discussion", "name": "discussion", "color": "f2c782", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-03T14:49:44Z", "updated_at": "2018-09-06T18:16:22Z", "closed_at": "2018-09-06T18:16:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm running long running functions AWS Lambda and using a `signal.signal(signal.SIGALRM, ...)` handler to raise a special exception to reschedule them when they approach the Lambda timeout. (They're structured in such a way that work done is saved in the DB so no progress is lost).\r\n\r\nUnfortunately it rarely happens that the signal fires at the same time as some object is being serialized by the X-Ray SDK, inside the `try/except` in `serialize()` https://github.com/aws/aws-xray-sdk-python/blob/master/aws_xray_sdk/core/models/entity.py#L231  . I end up with a stack trace like:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/var/task/aws_xray_sdk/core/models/entity.py\", line 238, in serialize\r\n    return jsonpickle.encode(self, unpicklable=False)\r\n  File \"/var/task/jsonpickle/__init__.py\", line 132, in encode\r\n    numeric_keys=numeric_keys)\r\n  File \"/var/task/jsonpickle/pickler.py\", line 43, in encode\r\n    return backend.encode(context.flatten(value, reset=reset))\r\n  File \"/var/task/jsonpickle/pickler.py\", line 156, in flatten\r\n    return self._flatten(obj)\r\n  File \"/var/task/jsonpickle/pickler.py\", line 160, in _flatten\r\n    return self._pop(self._flatten_obj(obj))\r\n  File \"/var/task/jsonpickle/pickler.py\", line 176, in _flatten_obj\r\n    return flatten_func(obj)\r\n  File \"/var/task/jsonpickle/pickler.py\", line 234, in _ref_obj_instance\r\n    return self._flatten_obj_instance(obj)\r\n  File \"/var/task/jsonpickle/pickler.py\", line 262, in _flatten_obj_instance\r\n    has_getnewargs = util.has_method(obj, '__getnewargs__')\r\n  File \"/var/task/jsonpickle/util.py\", line 52, in has_method\r\n    def has_method(obj, name):\r\n  File \"/var/task/...\", line ..., in ...\r\n    raise Reschedule()\r\n```\r\n\r\nThe `try / except` was added in the \"initial commit\" so it's not clear if it's really necessary to be so broad, maybe it can just cover `TypeError` ? [jsonpickle docs for encode()](https://jsonpickle.github.io/api.html#jsonpickle-high-level-api) don't even list a set of potential exceptions. There are also a bunch of other `try / except Exception`s littered through the library which might be able to be reduced in power.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/86", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/86/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/86/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/86", "id": 356452888, "node_id": "MDU6SXNzdWUzNTY0NTI4ODg=", "number": 86, "title": "Django integration failing on exception", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-09-03T10:44:06Z", "updated_at": "2019-03-05T18:42:29Z", "closed_at": "2019-03-05T18:42:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using Django 2.0 on Python 3.6, with a view that raises `PermissionDenied`, which Django will convert to a 403 response, the `XRayMiddleware` dies:\r\n\r\n```\r\n[ERROR]\t2018-08-29T15:48:07.91Z\tec1dfd19-aba2-11e8-870f-1f51d52b6dae\tInternal Server Error: /graphql/\r\nTraceback (most recent call last):\r\nFile \"/var/task/django/core/handlers/base.py\", line 126, in _get_response\r\nresponse = wrapped_callback(request, *callback_args, **callback_kwargs)\r\nFile \"/var/task/django/views/generic/base.py\", line 69, in view\r\nreturn self.dispatch(request, *args, **kwargs)\r\nFile <redacted>\r\nraise PermissionDenied('Not authenticated')\r\ndjango.core.exceptions.PermissionDenied: Not authenticated\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\nFile \"/var/task/django/core/handlers/exception.py\", line 35, in inner\r\nresponse = get_response(request)\r\nFile \"/var/task/django/core/handlers/base.py\", line 128, in _get_response\r\nresponse = self.process_exception_by_middleware(e, request)\r\nFile \"/var/task/django/core/handlers/base.py\", line 168, in process_exception_by_middleware\r\nresponse = middleware_method(request, exception)\r\nFile \"/var/task/aws_xray_sdk/ext/django/middleware.py\", line 84, in process_exception\r\nsegment.put_http_meta(http.STATUS, 500)\r\nFile \"/var/task/aws_xray_sdk/core/models/facade_segment.py\", line 42, in put_http_meta\r\nraise FacadeSegmentMutationException(MUTATION_UNSUPPORTED_MESSAGE)\r\naws_xray_sdk.core.exceptions.exceptions.FacadeSegmentMutationException: FacadeSegments cannot be mutated.\r\n```\r\n\r\nI tried to replicate it in the test suite, but this passes for me (using Python 2.7 rather than 3.X, because I only have 3.7 on my local machine and various parts of this test suite don't work on 3.7):\r\n\r\n```patch\r\ndiff --git a/tests/ext/django/app/views.py b/tests/ext/django/app/views.py\r\nindex 6bb5edf..dd05ce3 100644\r\n--- a/tests/ext/django/app/views.py\r\n+++ b/tests/ext/django/app/views.py\r\n@@ -1,5 +1,6 @@\r\n import sqlite3\r\n \r\n+from django.core.exceptions import PermissionDenied\r\n from django.http import HttpResponse\r\n from django.conf.urls import url\r\n from django.views.generic import TemplateView\r\n@@ -13,6 +14,10 @@ def ok(request):\r\n     return HttpResponse(status=200)\r\n \r\n \r\n+def denied(request):\r\n+    raise PermissionDenied('Not allowed')\r\n+\r\n+\r\n def fault(request):\r\n     {}['key']\r\n \r\n@@ -24,11 +29,9 @@ def call_db(request):\r\n     return HttpResponse(status=201)\r\n \r\n \r\n-# def template(request):\r\n-\r\n-\r\n urlpatterns = [\r\n     url(r'^200ok/$', ok, name='200ok'),\r\n+    url(r'^403denied/$', denied, name='403denied'),\r\n     url(r'^500fault/$', fault, name='500fault'),\r\n     url(r'^call_db/$', call_db, name='call_db'),\r\n     url(r'^template/$', IndexView.as_view(), name='template'),\r\ndiff --git a/tests/ext/django/test_middleware.py b/tests/ext/django/test_middleware.py\r\nindex 66e9648..d1eea72 100644\r\n--- a/tests/ext/django/test_middleware.py\r\n+++ b/tests/ext/django/test_middleware.py\r\n@@ -1,5 +1,5 @@\r\n import django\r\n-from django.core.urlresolvers import reverse\r\n+from django.urls import reverse\r\n from django.test import TestCase\r\n \r\n from aws_xray_sdk.core import xray_recorder\r\n@@ -42,6 +42,18 @@ class XRayTestCase(TestCase):\r\n         assert request['client_ip'] == '127.0.0.1'\r\n         assert response['status'] == 404\r\n \r\n+    def test_denied(self):\r\n+        self.client.get('/403denied/')\r\n+        segment = xray_recorder.emitter.pop()\r\n+        assert segment.error\r\n+\r\n+        request = segment.http['request']\r\n+        response = segment.http['response']\r\n+\r\n+        assert request['method'] == 'GET'\r\n+        assert request['client_ip'] == '127.0.0.1'\r\n+        assert response['status'] == 403\r\n+\r\n     def test_fault(self):\r\n         url = reverse('500fault')\r\n         try:\r\n```\r\n\r\nIt could be related to changes in Python 3.X, or Django 2.0 which isn't being tested here yet and I made #85 for.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/85", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/85/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/85/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/85", "id": 356450325, "node_id": "MDU6SXNzdWUzNTY0NTAzMjU=", "number": 85, "title": "Test with Django 2.0+", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-03T10:36:22Z", "updated_at": "2020-06-08T22:12:27Z", "closed_at": "2020-06-08T22:12:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the `tox` file installs:\r\n\r\n```\r\ndjango >= 1.10, <2.0\r\n```\r\n\r\nPlease test with Django 2.0 and 2.1 and confirm compatibility with them. 2.0+ is Python 3 only, perhaps why this restriction was added in the first place?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/84", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/84/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/84/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/84", "id": 356027735, "node_id": "MDU6SXNzdWUzNTYwMjc3MzU=", "number": 84, "title": "Add SNS Service \"Publish\" operation to the aws_para_whitelist", "user": {"login": "Tankanow", "id": 2100107, "node_id": "MDQ6VXNlcjIxMDAxMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2100107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tankanow", "html_url": "https://github.com/Tankanow", "followers_url": "https://api.github.com/users/Tankanow/followers", "following_url": "https://api.github.com/users/Tankanow/following{/other_user}", "gists_url": "https://api.github.com/users/Tankanow/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tankanow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tankanow/subscriptions", "organizations_url": "https://api.github.com/users/Tankanow/orgs", "repos_url": "https://api.github.com/users/Tankanow/repos", "events_url": "https://api.github.com/users/Tankanow/events{/privacy}", "received_events_url": "https://api.github.com/users/Tankanow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-31T15:31:20Z", "updated_at": "2018-09-10T19:38:03Z", "closed_at": "2018-09-10T19:38:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the SNS publish operation shows up with a minimum set of metadata:\r\n```\r\n\"aws\": {\r\n    \"operation\": \"Publish\",\r\n    \"region\": \"us-east-1\",\r\n    \"request_id\": \"a939cee1-7c48-5675-b385-9ae2206dc121\"\r\n}\r\n```\r\n\r\nThis should include at least the known internal AWS resources like `TopicArn` or `TargetArn` and maybe even the `PhoneNumber`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/81", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/81/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/81/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/81", "id": 355191275, "node_id": "MDU6SXNzdWUzNTUxOTEyNzU=", "number": 81, "title": "Recorder Exception When Beginning Segment", "user": {"login": "mjtieman", "id": 2328777, "node_id": "MDQ6VXNlcjIzMjg3Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2328777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjtieman", "html_url": "https://github.com/mjtieman", "followers_url": "https://api.github.com/users/mjtieman/followers", "following_url": "https://api.github.com/users/mjtieman/following{/other_user}", "gists_url": "https://api.github.com/users/mjtieman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjtieman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjtieman/subscriptions", "organizations_url": "https://api.github.com/users/mjtieman/orgs", "repos_url": "https://api.github.com/users/mjtieman/repos", "events_url": "https://api.github.com/users/mjtieman/events{/privacy}", "received_events_url": "https://api.github.com/users/mjtieman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-29T14:35:16Z", "updated_at": "2018-08-29T20:51:48Z", "closed_at": "2018-08-29T20:51:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`AWSXRayRecorder` is throwing a `TypeError` when creating a new segment. The exception is being thrown because the recorder is calling `should_trace` on the sampler, which starting in 2.0 requires `sample_req`.\r\n\r\nStack trace\r\n```\r\nshould_trace() takes exactly 2 arguments (1 given): TypeError\r\nTraceback (most recent call last):\r\nFile \"/var/task/src/setup_database.py\", line 55, in handler\r\nxray_recorder.begin_segment('setup_database.handler')\r\nFile \"/var/task/aws_xray_sdk/core/recorder.py\", line 208, in begin_segment\r\ndecision = self._sampler.should_trace()\r\nTypeError: should_trace() takes exactly 2 arguments (1 given)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/80", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/80/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/80/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/80", "id": 354383575, "node_id": "MDU6SXNzdWUzNTQzODM1NzU=", "number": 80, "title": "Psycopg Support?", "user": {"login": "Tankanow", "id": 2100107, "node_id": "MDQ6VXNlcjIxMDAxMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2100107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tankanow", "html_url": "https://github.com/Tankanow", "followers_url": "https://api.github.com/users/Tankanow/followers", "following_url": "https://api.github.com/users/Tankanow/following{/other_user}", "gists_url": "https://api.github.com/users/Tankanow/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tankanow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tankanow/subscriptions", "organizations_url": "https://api.github.com/users/Tankanow/orgs", "repos_url": "https://api.github.com/users/Tankanow/repos", "events_url": "https://api.github.com/users/Tankanow/events{/privacy}", "received_events_url": "https://api.github.com/users/Tankanow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-27T16:17:22Z", "updated_at": "2018-09-05T12:44:11Z", "closed_at": "2018-09-05T12:44:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We use Psycopg for our connections to Postgres. Are there any plans to support Psycopg? It uses the DB API 2.0 (PEP 249), so we should be able to use the existing `aws_xray_sdk/ext/dbapi2.py` module. I will happily work on this if you approve and no one else is working on it. =)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/77", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/77/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/77/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/77", "id": 352971014, "node_id": "MDU6SXNzdWUzNTI5NzEwMTQ=", "number": 77, "title": "Provide xray_recorder.capture() as context manager", "user": {"login": "Dunedan", "id": 1735355, "node_id": "MDQ6VXNlcjE3MzUzNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1735355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dunedan", "html_url": "https://github.com/Dunedan", "followers_url": "https://api.github.com/users/Dunedan/followers", "following_url": "https://api.github.com/users/Dunedan/following{/other_user}", "gists_url": "https://api.github.com/users/Dunedan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dunedan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dunedan/subscriptions", "organizations_url": "https://api.github.com/users/Dunedan/orgs", "repos_url": "https://api.github.com/users/Dunedan/repos", "events_url": "https://api.github.com/users/Dunedan/events{/privacy}", "received_events_url": "https://api.github.com/users/Dunedan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-22T14:09:50Z", "updated_at": "2018-10-05T19:56:24Z", "closed_at": "2018-10-05T19:56:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a feature request to be able to use the functionality of `AWSXRayRecorder.capture()` as context manager. \r\nThe motivation for that is to have something to replace `begin_subsegment()` and `end_subsegment()` calls with a context manager which does proper exception handling. That's especially important when using nested subsegments, as subsegment-traces in one \"branch\" below the current segment will only be streamed to X-Ray if all subsegments in that branch got closed properly. When doing no proper exception handling manually to ensure to close all subsegments that quickly leads to missing data in X-Ray. What contributes to that is that `AWSXRayRecorder.end_subsegment()` doesn't close a specific subsegment, but rather the current open one and because of that `AWSXRayRecorder` isn't able to notice if one got missed.\r\n\r\nCurrently one would have to do something like that for every subsegment:\r\n\r\n```python\r\ndef some_function():\r\n    print(\"code without custom subsegment\")\r\n    subsegment = xray_recorder.begin_subsegment(\"my_subsegment\")\r\n    exception = None\r\n    stack = None\r\n    try:\r\n        print(\"code to trace as custom subsegment\")\r\n    except Exception as exception:\r\n        stack = traceback.extract_stack(limit=self.max_trace_back)\r\n        raise\r\n    finally:\r\n        if subsegment is not None:\r\n            if exception:\r\n                subsegment.add_exception(exception, stack)\r\n            xray_recorder.end_subsegment()\r\n```\r\n\r\nWith `capture()` available as context manager that would be as simple as:\r\n\r\n```python\r\ndef some_function():\r\n    print(\"code without custom subsegment\")\r\n    with xray_recorder.capture(\"my_subsegment\"):\r\n        print(\"code to trace as custom subsegment\")\r\n```\r\n\r\nAs a workaround we currently use the following custom context manager, but it would be nicer if `AWSXRayRecorder.capture()` would support it directly of course:\r\n\r\n```python\r\nclass XRayCaptureContextManager:\r\n    def __init__(self, name):\r\n        self.name = name\r\n        self.subsegment = None\r\n\r\n    def __enter__(self):\r\n        self.subsegment = xray_recorder.begin_subsegment(self.name)\r\n\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        if self.subsegment is not None:\r\n            if exc_val:\r\n                self.subsegment.add_exception(exc_val, traceback.extract_tb(exc_tb))\r\n            xray_recorder.end_subsegment()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/75", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/75/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/75/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/75", "id": 347660182, "node_id": "MDU6SXNzdWUzNDc2NjAxODI=", "number": 75, "title": "Safer Flask teardown request function", "user": {"login": "luyun-aa", "id": 17242340, "node_id": "MDQ6VXNlcjE3MjQyMzQw", "avatar_url": "https://avatars3.githubusercontent.com/u/17242340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luyun-aa", "html_url": "https://github.com/luyun-aa", "followers_url": "https://api.github.com/users/luyun-aa/followers", "following_url": "https://api.github.com/users/luyun-aa/following{/other_user}", "gists_url": "https://api.github.com/users/luyun-aa/gists{/gist_id}", "starred_url": "https://api.github.com/users/luyun-aa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luyun-aa/subscriptions", "organizations_url": "https://api.github.com/users/luyun-aa/orgs", "repos_url": "https://api.github.com/users/luyun-aa/repos", "events_url": "https://api.github.com/users/luyun-aa/events{/privacy}", "received_events_url": "https://api.github.com/users/luyun-aa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-05T01:16:18Z", "updated_at": "2018-08-29T02:37:32Z", "closed_at": "2018-08-28T23:19:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ref: http://flask.pocoo.org/docs/0.12/reqcontext/#callbacks-and-errors\r\n\r\nFlask requests that `teardown_request` function should never fail. The request teardown function implementation in XRay SDK is not robust enough because if before_request is not executed, `context.current_segment` would return None. Any operation on the \"None\" segment would fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/74", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/74/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/74/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/74", "id": 347660180, "node_id": "MDU6SXNzdWUzNDc2NjAxODA=", "number": 74, "title": "Safer Flask  km,", "user": {"login": "luyun-aa", "id": 17242340, "node_id": "MDQ6VXNlcjE3MjQyMzQw", "avatar_url": "https://avatars3.githubusercontent.com/u/17242340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luyun-aa", "html_url": "https://github.com/luyun-aa", "followers_url": "https://api.github.com/users/luyun-aa/followers", "following_url": "https://api.github.com/users/luyun-aa/following{/other_user}", "gists_url": "https://api.github.com/users/luyun-aa/gists{/gist_id}", "starred_url": "https://api.github.com/users/luyun-aa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luyun-aa/subscriptions", "organizations_url": "https://api.github.com/users/luyun-aa/orgs", "repos_url": "https://api.github.com/users/luyun-aa/repos", "events_url": "https://api.github.com/users/luyun-aa/events{/privacy}", "received_events_url": "https://api.github.com/users/luyun-aa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-05T01:16:17Z", "updated_at": "2018-08-06T07:30:36Z", "closed_at": "2018-08-06T07:30:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/67", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/67/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/67/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/67", "id": 330077737, "node_id": "MDU6SXNzdWUzMzAwNzc3Mzc=", "number": 67, "title": "unparented segment/subsegment resolution", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 950898486, "node_id": "MDU6TGFiZWw5NTA4OTg0ODY=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/discussion", "name": "discussion", "color": "f2c782", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-07T00:33:15Z", "updated_at": "2018-06-26T23:48:10Z", "closed_at": "2018-06-26T23:48:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using aws-xray-sdk to trace an application which uses the google pubsub module.  Unfortunately this module uses various threads which means that I get a lot of `SegmentNotFoundException` exceptions causing my application to fail.\r\n\r\nIt's going to be impossible for me to track down all the locations where it creates threads and pass the trace entity and call `xray_recorder.set_trace_entity`.\r\n\r\n~How about if this SDK provides support for a \"root thread\" which it will use to resolve the segment/subsegment if the current context does not have one?~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/64", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/64/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/64/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/64", "id": 327750328, "node_id": "MDU6SXNzdWUzMjc3NTAzMjg=", "number": 64, "title": "Considering the usage of strip_url to name a node as a none perfect solution", "user": {"login": "pfreixes", "id": 1226121, "node_id": "MDQ6VXNlcjEyMjYxMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1226121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfreixes", "html_url": "https://github.com/pfreixes", "followers_url": "https://api.github.com/users/pfreixes/followers", "following_url": "https://api.github.com/users/pfreixes/following{/other_user}", "gists_url": "https://api.github.com/users/pfreixes/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfreixes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfreixes/subscriptions", "organizations_url": "https://api.github.com/users/pfreixes/orgs", "repos_url": "https://api.github.com/users/pfreixes/repos", "events_url": "https://api.github.com/users/pfreixes/events{/privacy}", "received_events_url": "https://api.github.com/users/pfreixes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-05-30T14:13:26Z", "updated_at": "2019-12-30T16:39:13Z", "closed_at": "2019-12-30T16:39:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now most of the extensions that implement patches or machinery to allow instrumentalize HTTP clients such as Aiohttp, Requests or HTTPLib use by default the `strip_url` as fallback when there is no name given [1] or even as a primary way to name a subsegment [2][3].\r\n\r\nRelying on the output of this function when there is no an alternative name, the number of nodes that are created in the AWS Xray console is as many different URLrs has been generated, so the following URLs will end up creating different nodes each one. While common sense says that all of them refer to the same service:\r\n\r\n```python\r\n>>> strip_url(\"http://localhost/resource/1?debug=true\")\r\n'http://localhost/resource/1'\r\n>>> strip_url(\"http://localhost/resource/2\")\r\n'http://localhost/resource/2'\r\n>>> strip_url(\"http://localhost/resource/1,2,3\")\r\n'http://localhost/resource/1,2,3'\r\n>>> strip_url(\"http://localhost/resource/1,2,3\")\r\n'http://localhost/resource/1,2,3'\r\n````\r\n\r\nSo, IMO we must address this situation or at least give to the user a way of inferring the name the segment based on the URL hosts or any strategy that allows the user to group those queries that belong to the same node. Taking as example the previous set of URLs all of them will be named as `http://localhost`.\r\n\r\nI guess there is no a silver bullet for that, but before start digging into a proper solution I would like to gather your feedback about the issue by itself, and ofc if you have any proposal I will like to hear them\r\n\r\n\r\n[1] https://github.com/aws/aws-xray-sdk-python/blob/master/aws_xray_sdk/ext/aiohttp/client.py#L25\r\n[2] https://github.com/aws/aws-xray-sdk-python/blob/master/aws_xray_sdk/ext/requests/patch.py#L29\r\n[3] https://github.com/aws/aws-xray-sdk-python/blob/master/aws_xray_sdk/ext/httplib/patch.py#L54", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/63", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/63/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/63/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/63", "id": 327651815, "node_id": "MDU6SXNzdWUzMjc2NTE4MTU=", "number": 63, "title": "patch_all should take a flag for an alternative patching strategy", "user": {"login": "xplorld", "id": 7023694, "node_id": "MDQ6VXNlcjcwMjM2OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7023694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xplorld", "html_url": "https://github.com/xplorld", "followers_url": "https://api.github.com/users/xplorld/followers", "following_url": "https://api.github.com/users/xplorld/following{/other_user}", "gists_url": "https://api.github.com/users/xplorld/gists{/gist_id}", "starred_url": "https://api.github.com/users/xplorld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xplorld/subscriptions", "organizations_url": "https://api.github.com/users/xplorld/orgs", "repos_url": "https://api.github.com/users/xplorld/repos", "events_url": "https://api.github.com/users/xplorld/events{/privacy}", "received_events_url": "https://api.github.com/users/xplorld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-30T09:39:21Z", "updated_at": "2018-08-28T23:19:51Z", "closed_at": "2018-08-28T23:19:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I created a lambda calling itself recursively for 3 times.\r\nThe lambda is set to\u201cEnable active tracing\u201d, and called `patch_all()`\r\nIt uses `boto3` to send request.\r\n\r\n### Code:\r\n```py\r\nimport boto3\r\nimport json\r\nimport requests\r\nfrom aws_xray_sdk.core import xray_recorder\r\nfrom aws_xray_sdk.core import patch_all\r\n\r\npatch_all()\r\n\r\nclient = boto3.client('lambda')\r\n\r\ndef lambda_handler(event, context):\r\n    action = event['action']\r\n    return globals()[action](event, context)\r\n\r\n\r\n# input event['i']\r\n# output {'result': j}, where j = 1^2 + 2^2 + .. + i^2\r\ndef square_sum(event, context):\r\n    i = event['i']\r\n    if i <= 0:\r\n        return {'result': 0}\r\n    if i == 1:\r\n        return {'result': 1}\r\n    payload_str = json.dumps({'action': 'square_sum', 'i': i-1})\r\n    payload_b = bytes(payload_str, 'utf-8')\r\n    tailcall = client.invoke(FunctionName='Test-Xray-Caller',\r\n                             InvocationType='RequestResponse',\r\n                             Payload=payload_b)\r\n    tailcall_result = json.loads(tailcall['Payload'].read())\r\n    result = tailcall_result['result'] + i * i\r\n    return {'result': result}\r\n\r\n```\r\n### Expected graph\r\n![image](https://user-images.githubusercontent.com/7023694/40712225-bcd3126c-642f-11e8-8dad-b7926e0dd325.png)\r\n\r\n\r\n### Real graph\r\n![image](https://user-images.githubusercontent.com/7023694/40711801-b5d98b7c-642e-11e8-9c72-38251ac8bd1c.png)\r\n\r\n### Thinkings\r\n\r\nIn my understanding, a \"remote\" service means X-Ray does not recognize what endpoint it is, e.g. a non-AWS service. A call to AWS Lambda, shall have no \"remote\" services, with only one clean edge from the caller AWS service to the callee AWS service.\r\n\r\nThis redundant edge occurs more than here: When I call from lambda to Elastic Beanstalk endpoint, it still has \"remote\" services. \r\n\r\nHow do I get rid of them? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/61", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/61/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/61/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/61", "id": 325414289, "node_id": "MDU6SXNzdWUzMjU0MTQyODk=", "number": 61, "title": "sqlalchemy.utils.decorators.parse_bind assumes bind is a Engine", "user": {"login": "azatoth", "id": 146477, "node_id": "MDQ6VXNlcjE0NjQ3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/146477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azatoth", "html_url": "https://github.com/azatoth", "followers_url": "https://api.github.com/users/azatoth/followers", "following_url": "https://api.github.com/users/azatoth/following{/other_user}", "gists_url": "https://api.github.com/users/azatoth/gists{/gist_id}", "starred_url": "https://api.github.com/users/azatoth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azatoth/subscriptions", "organizations_url": "https://api.github.com/users/azatoth/orgs", "repos_url": "https://api.github.com/users/azatoth/repos", "events_url": "https://api.github.com/users/azatoth/events{/privacy}", "received_events_url": "https://api.github.com/users/azatoth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-22T18:33:59Z", "updated_at": "2018-08-28T23:20:18Z", "closed_at": "2018-08-28T23:20:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you create a session in sqlalchemy the `bind` parameter can be either a `Engine` or a `Connection`, but if a  `Connection` is used `parse_bind` will break.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/60", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/60/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/60/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/60", "id": 324965445, "node_id": "MDU6SXNzdWUzMjQ5NjU0NDU=", "number": 60, "title": "New 1.2 release with last fixes", "user": {"login": "pfreixes", "id": 1226121, "node_id": "MDQ6VXNlcjEyMjYxMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1226121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfreixes", "html_url": "https://github.com/pfreixes", "followers_url": "https://api.github.com/users/pfreixes/followers", "following_url": "https://api.github.com/users/pfreixes/following{/other_user}", "gists_url": "https://api.github.com/users/pfreixes/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfreixes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfreixes/subscriptions", "organizations_url": "https://api.github.com/users/pfreixes/orgs", "repos_url": "https://api.github.com/users/pfreixes/repos", "events_url": "https://api.github.com/users/pfreixes/events{/privacy}", "received_events_url": "https://api.github.com/users/pfreixes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-21T15:48:41Z", "updated_at": "2018-05-21T20:43:03Z", "closed_at": "2018-05-21T20:43:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nDo you have any ETA for the next 1.2 release with the last Aiottp fixes. We have some dependencies blocked waiting for a new release.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/49", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/49/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/49/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/49", "id": 312837778, "node_id": "MDU6SXNzdWUzMTI4Mzc3Nzg=", "number": 49, "title": "Module name decerators seems a typo", "user": {"login": "shouichi", "id": 99586, "node_id": "MDQ6VXNlcjk5NTg2", "avatar_url": "https://avatars0.githubusercontent.com/u/99586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shouichi", "html_url": "https://github.com/shouichi", "followers_url": "https://api.github.com/users/shouichi/followers", "following_url": "https://api.github.com/users/shouichi/following{/other_user}", "gists_url": "https://api.github.com/users/shouichi/gists{/gist_id}", "starred_url": "https://api.github.com/users/shouichi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shouichi/subscriptions", "organizations_url": "https://api.github.com/users/shouichi/orgs", "repos_url": "https://api.github.com/users/shouichi/repos", "events_url": "https://api.github.com/users/shouichi/events{/privacy}", "received_events_url": "https://api.github.com/users/shouichi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-10T09:15:51Z", "updated_at": "2018-04-11T00:12:44Z", "closed_at": "2018-04-11T00:12:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is `aws_xray_sdk.ext.sqlalchemy.util.decerators` module. Is this a typo of `decorator`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/48", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/48/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/48/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/48", "id": 312150151, "node_id": "MDU6SXNzdWUzMTIxNTAxNTE=", "number": 48, "title": "httplib patcher:  \ufffcAttributeError: 'HTTPResponse' object has no attribute '_xray_prop'", "user": {"login": "IlyaSukhanov", "id": 1637068, "node_id": "MDQ6VXNlcjE2MzcwNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1637068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlyaSukhanov", "html_url": "https://github.com/IlyaSukhanov", "followers_url": "https://api.github.com/users/IlyaSukhanov/followers", "following_url": "https://api.github.com/users/IlyaSukhanov/following{/other_user}", "gists_url": "https://api.github.com/users/IlyaSukhanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlyaSukhanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlyaSukhanov/subscriptions", "organizations_url": "https://api.github.com/users/IlyaSukhanov/orgs", "repos_url": "https://api.github.com/users/IlyaSukhanov/repos", "events_url": "https://api.github.com/users/IlyaSukhanov/events{/privacy}", "received_events_url": "https://api.github.com/users/IlyaSukhanov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-06T23:45:36Z", "updated_at": "2018-04-19T20:16:18Z", "closed_at": "2018-04-19T20:16:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "AWS Xray SDK errors out when executed outside of segment/subsegment\r\n\r\nExpected behavior warn but do not fail on this error.\r\n\r\n```\r\n  File \"/......../parsers.py\", line 40, in .............\r\n  df = pandas.read_csv(s3_url)\r\n  File \"/var/task/pandas/io/parsers.py\", line 655, in parser_f\r\n  return _read(filepath_or_buffer, kwds)\r\n  File \"/var/task/pandas/io/parsers.py\", line 405, in _read\r\n  parser = TextFileReader(filepath_or_buffer, **kwds)\r\n  File \"/var/task/pandas/io/parsers.py\", line 764, in __init__\r\n  self._make_engine(self.engine)\r\n  File \"/var/task/pandas/io/parsers.py\", line 985, in _make_engine\r\n  self._engine = CParserWrapper(self.f, **self.options)\r\n  File \"/var/task/pandas/io/parsers.py\", line 1605, in __init__\r\n  self._reader = parsers.TextReader(src, **kwds)\r\n  File \"pandas/_libs/parsers.pyx\", line 562, in pandas._libs.parsers.TextReader.__cinit__ (pandas/_libs/parsers.c:6175)\r\n  File \"pandas/_libs/parsers.pyx\", line 751, in pandas._libs.parsers.TextReader._get_header (pandas/_libs/parsers.c:9268)\r\n  File \"pandas/_libs/parsers.pyx\", line 953, in pandas._libs.parsers.TextReader._tokenize_rows (pandas/_libs/parsers.c:11755)\r\n  File \"pandas/_libs/parsers.pyx\", line 2173, in pandas._libs.parsers.raise_parser_error (pandas/_libs/parsers.c:28589)\r\n  File \"/var/task/s3fs/core.py\", line 1243, in _fetch_range\r\n  return resp['Body'].read()\r\n  File \"/var/runtime/botocore/response.py\", line 74, in read\r\n  chunk = self._raw_stream.read(amt)\r\n  File \"/var/runtime/botocore/vendored/requests/packages/urllib3/response.py\", line 239, in read\r\n  data = self._fp.read()\r\n  File \"/var/task/aws_xray_sdk/ext/httplib/patch.py\", line 106, in _xray_traced_http_client_read\r\n  xray_data = getattr(instance, _XRAY_PROP)\r\nAttributeError: 'HTTPResponse' object has no attribute '_xray_prop'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/43", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/43/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/43/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/43", "id": 306988105, "node_id": "MDU6SXNzdWUzMDY5ODgxMDU=", "number": 43, "title": "Swallowed `return_value` in `record_subsegment(...)`?", "user": {"login": "nelz9999", "id": 10950, "node_id": "MDQ6VXNlcjEwOTUw", "avatar_url": "https://avatars1.githubusercontent.com/u/10950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nelz9999", "html_url": "https://github.com/nelz9999", "followers_url": "https://api.github.com/users/nelz9999/followers", "following_url": "https://api.github.com/users/nelz9999/following{/other_user}", "gists_url": "https://api.github.com/users/nelz9999/gists{/gist_id}", "starred_url": "https://api.github.com/users/nelz9999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nelz9999/subscriptions", "organizations_url": "https://api.github.com/users/nelz9999/orgs", "repos_url": "https://api.github.com/users/nelz9999/repos", "events_url": "https://api.github.com/users/nelz9999/events{/privacy}", "received_events_url": "https://api.github.com/users/nelz9999/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-20T18:31:40Z", "updated_at": "2018-03-21T19:38:50Z", "closed_at": "2018-03-21T19:38:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "My Python may not be super strong, but in my reading of `try: except: finally:`, it seems that the `return_value` is being trashed in the `LOG_ERROR` case.\r\n\r\nFrom https://github.com/aws/aws-xray-sdk-python/blob/master/aws_xray_sdk/core/recorder.py:\r\n```\r\n        return_value = None\r\n\r\n        try:\r\n            return_value = wrapped(*args, **kwargs)\r\n            return return_value\r\n        except Exception as e:\r\n            exception = e\r\n            stack = traceback.extract_stack(limit=self._max_trace_back)\r\n            raise\r\n        finally:\r\n            # No-op if subsegment is `None` due to `LOG_ERROR`.\r\n            if subsegment is None:\r\n                return\r\n```\r\n\r\nIsn't that last `return` actually equivalent to `return None`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/36", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/36/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/36/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/36", "id": 303657403, "node_id": "MDU6SXNzdWUzMDM2NTc0MDM=", "number": 36, "title": "Loosen entity name validation", "user": {"login": "haotianw465", "id": 3795229, "node_id": "MDQ6VXNlcjM3OTUyMjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3795229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haotianw465", "html_url": "https://github.com/haotianw465", "followers_url": "https://api.github.com/users/haotianw465/followers", "following_url": "https://api.github.com/users/haotianw465/following{/other_user}", "gists_url": "https://api.github.com/users/haotianw465/gists{/gist_id}", "starred_url": "https://api.github.com/users/haotianw465/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haotianw465/subscriptions", "organizations_url": "https://api.github.com/users/haotianw465/orgs", "repos_url": "https://api.github.com/users/haotianw465/repos", "events_url": "https://api.github.com/users/haotianw465/events{/privacy}", "received_events_url": "https://api.github.com/users/haotianw465/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 695940842, "node_id": "MDU6TGFiZWw2OTU5NDA4NDI=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-08T22:34:27Z", "updated_at": "2018-03-28T18:47:58Z", "closed_at": "2018-03-28T18:47:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The segment/subsegment name supports unicode characters per schema provided in https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html. Here is the content of the schema regarding name property:\r\n\r\n```json\r\n    \"name\": {\r\n      \"type\": \"string\",\r\n      \"pattern\": \"^[A-Za-z\\\\u00aa\\\\u00b5\\\\u00ba\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u037f\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u048a-\\\\u052f\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0620-\\\\u064a\\\\u066e\\\\u066f\\\\u0671-\\\\u06d3\\\\u06d5\\\\u06e5\\\\u06e6\\\\u06ee\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff\\\\u0710\\\\u0712-\\\\u072f\\\\u074d-\\\\u07a5\\\\u07b1\\\\u07ca-\\\\u07ea\\\\u07f4\\\\u07f5\\\\u07fa\\\\u0800-\\\\u0815\\\\u081a\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08a0-\\\\u08b4\\\\u0904-\\\\u0939\\\\u093d\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bd\\\\u09ce\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e1\\\\u09f0\\\\u09f1\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a72-\\\\u0a74\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abd\\\\u0ad0\\\\u0ae0\\\\u0ae1\\\\u0af9\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3d\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b61\\\\u0b71\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bd0\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c39\\\\u0c3d\\\\u0c58-\\\\u0c5a\\\\u0c60\\\\u0c61\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbd\\\\u0cde\\\\u0ce0\\\\u0ce1\\\\u0cf1\\\\u0cf2\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d\\\\u0d4e\\\\u0d5f-\\\\u0d61\\\\u0d7a-\\\\u0d7f\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0e01-\\\\u0e30\\\\u0e32\\\\u0e33\\\\u0e40-\\\\u0e46\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb0\\\\u0eb2\\\\u0eb3\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f40-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f88-\\\\u0f8c\\\\u1000-\\\\u102a\\\\u103f\\\\u1050-\\\\u1055\\\\u105a-\\\\u105d\\\\u1061\\\\u1065\\\\u1066\\\\u106e-\\\\u1070\\\\u1075-\\\\u1081\\\\u108e\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f5\\\\u13f8-\\\\u13fd\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16f1-\\\\u16f8\\\\u1700-\\\\u170c\\\\u170e-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1780-\\\\u17b3\\\\u17d7\\\\u17dc\\\\u1820-\\\\u1877\\\\u1880-\\\\u18a8\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191e\\\\u1950-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19b0-\\\\u19c9\\\\u1a00-\\\\u1a16\\\\u1a20-\\\\u1a54\\\\u1aa7\\\\u1b05-\\\\u1b33\\\\u1b45-\\\\u1b4b\\\\u1b83-\\\\u1ba0\\\\u1bae\\\\u1baf\\\\u1bba-\\\\u1be5\\\\u1c00-\\\\u1c23\\\\u1c4d-\\\\u1c4f\\\\u1c5a-\\\\u1c7d\\\\u1ce9-\\\\u1cec\\\\u1cee-\\\\u1cf1\\\\u1cf5\\\\u1cf6\\\\u1d00-\\\\u1dbf\\\\u1e00-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2183\\\\u2184\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cee\\\\u2cf2\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d80-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2e2f\\\\u3005\\\\u3006\\\\u3031-\\\\u3035\\\\u303b\\\\u303c\\\\u3041-\\\\u3096\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400-\\\\u4db5\\\\u4e00-\\\\u9fd5\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua61f\\\\ua62a\\\\ua62b\\\\ua640-\\\\ua66e\\\\ua67f-\\\\ua69d\\\\ua6a0-\\\\ua6e5\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua7ad\\\\ua7b0-\\\\ua7b7\\\\ua7f7-\\\\ua801\\\\ua803-\\\\ua805\\\\ua807-\\\\ua80a\\\\ua80c-\\\\ua822\\\\ua840-\\\\ua873\\\\ua882-\\\\ua8b3\\\\ua8f2-\\\\ua8f7\\\\ua8fb\\\\ua8fd\\\\ua90a-\\\\ua925\\\\ua930-\\\\ua946\\\\ua960-\\\\ua97c\\\\ua984-\\\\ua9b2\\\\ua9cf\\\\ua9e0-\\\\ua9e4\\\\ua9e6-\\\\ua9ef\\\\ua9fa-\\\\ua9fe\\\\uaa00-\\\\uaa28\\\\uaa40-\\\\uaa42\\\\uaa44-\\\\uaa4b\\\\uaa60-\\\\uaa76\\\\uaa7a\\\\uaa7e-\\\\uaaaf\\\\uaab1\\\\uaab5\\\\uaab6\\\\uaab9-\\\\uaabd\\\\uaac0\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaea\\\\uaaf2-\\\\uaaf4\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uab30-\\\\uab5a\\\\uab5c-\\\\uab65\\\\uab70-\\\\uabe2\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d\\\\ufb1f-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u30000-9\\\\u00b2\\\\u00b3\\\\u00b9\\\\u00bc-\\\\u00be\\\\u0660-\\\\u0669\\\\u06f0-\\\\u06f9\\\\u07c0-\\\\u07c9\\\\u0966-\\\\u096f\\\\u09e6-\\\\u09ef\\\\u09f4-\\\\u09f9\\\\u0a66-\\\\u0a6f\\\\u0ae6-\\\\u0aef\\\\u0b66-\\\\u0b6f\\\\u0b72-\\\\u0b77\\\\u0be6-\\\\u0bf2\\\\u0c66-\\\\u0c6f\\\\u0c78-\\\\u0c7e\\\\u0ce6-\\\\u0cef\\\\u0d66-\\\\u0d75\\\\u0de6-\\\\u0def\\\\u0e50-\\\\u0e59\\\\u0ed0-\\\\u0ed9\\\\u0f20-\\\\u0f33\\\\u1040-\\\\u1049\\\\u1090-\\\\u1099\\\\u1369-\\\\u137c\\\\u16ee-\\\\u16f0\\\\u17e0-\\\\u17e9\\\\u17f0-\\\\u17f9\\\\u1810-\\\\u1819\\\\u1946-\\\\u194f\\\\u19d0-\\\\u19da\\\\u1a80-\\\\u1a89\\\\u1a90-\\\\u1a99\\\\u1b50-\\\\u1b59\\\\u1bb0-\\\\u1bb9\\\\u1c40-\\\\u1c49\\\\u1c50-\\\\u1c59\\\\u2070\\\\u2074-\\\\u2079\\\\u2080-\\\\u2089\\\\u2150-\\\\u2182\\\\u2185-\\\\u2189\\\\u2460-\\\\u249b\\\\u24ea-\\\\u24ff\\\\u2776-\\\\u2793\\\\u2cfd\\\\u3007\\\\u3021-\\\\u3029\\\\u3038-\\\\u303a\\\\u3192-\\\\u3195\\\\u3220-\\\\u3229\\\\u3248-\\\\u324f\\\\u3251-\\\\u325f\\\\u3280-\\\\u3289\\\\u32b1-\\\\u32bf\\\\ua620-\\\\ua629\\\\ua6e6-\\\\ua6ef\\\\ua830-\\\\ua835\\\\ua8d0-\\\\ua8d9\\\\ua900-\\\\ua909\\\\ua9d0-\\\\ua9d9\\\\ua9f0-\\\\ua9f9\\\\uaa50-\\\\uaa59\\\\uabf0-\\\\uabf9\\\\uff10-\\\\uff19_.:\\/%&#=+\\\\-@]{1,200}$\",\r\n      \"java_pattern\": \"([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/%&#=+\\\\-@]*)$\"\r\n    },\r\n```\r\n\r\nHowever, the SDK is dropping characters that are not ASCII: https://github.com/aws/aws-xray-sdk-python/blob/master/aws_xray_sdk/core/models/entity.py#L18.\r\n\r\nIf a segment/subsegment name has invalid characters, that segment/subsegment will not be accepted by X-Ray service back-end. But since the X-Ray daemon sends segments on batches, the invalid segment/subsegment will be in \"Unprocessed\" of the API `PutTraceSegments`'s response body but the call will succeed. This is the background of the sanitization happening on the SDK side to make sure valuable data will not be dropped due to invalid characters on names.\r\n\r\nThe SDK should have equal or at least loosen restriction than the back-end has. Doing a full regex using `([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/%&#=+\\\\-@]*)$` adds performance overhead since this regex match happens for every single segment/subsegment capture.\r\n\r\nThe purpose is to have the SDK to switch to blacklist based sanitization. It drops common invalid characters like `? * $ ; ( ) [ ] { }`. This ensures the lightweight design and unicode letters from non-English nature languages pass through.\r\n\r\nAny feedback is welcome.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/35", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/35/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/35/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/35", "id": 303441995, "node_id": "MDU6SXNzdWUzMDM0NDE5OTU=", "number": 35, "title": "No exception information for PynamoDB integration", "user": {"login": "Dunedan", "id": 1735355, "node_id": "MDQ6VXNlcjE3MzUzNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1735355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dunedan", "html_url": "https://github.com/Dunedan", "followers_url": "https://api.github.com/users/Dunedan/followers", "following_url": "https://api.github.com/users/Dunedan/following{/other_user}", "gists_url": "https://api.github.com/users/Dunedan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dunedan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dunedan/subscriptions", "organizations_url": "https://api.github.com/users/Dunedan/orgs", "repos_url": "https://api.github.com/users/Dunedan/repos", "events_url": "https://api.github.com/users/Dunedan/events{/privacy}", "received_events_url": "https://api.github.com/users/Dunedan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940844, "node_id": "MDU6TGFiZWw2OTU5NDA4NDQ=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-08T11:08:08Z", "updated_at": "2018-03-19T18:33:31Z", "closed_at": "2018-03-19T18:33:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the PynamoDB integration doesn't provide stack traces for failed requests to DynamoDB. The reason is pretty simple: As `requests` needs to be patched for it, there simply is no exception yet, when the response is processed for X-Ray, as the PynamoDB code wasn't called yet.\r\n\r\nAny idea what'd be the best way to handle that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/33", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/33/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/33/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/33", "id": 302525772, "node_id": "MDU6SXNzdWUzMDI1MjU3NzI=", "number": 33, "title": "What information does Flask-SQLAlchemy send?", "user": {"login": "harveyslash", "id": 7107410, "node_id": "MDQ6VXNlcjcxMDc0MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7107410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harveyslash", "html_url": "https://github.com/harveyslash", "followers_url": "https://api.github.com/users/harveyslash/followers", "following_url": "https://api.github.com/users/harveyslash/following{/other_user}", "gists_url": "https://api.github.com/users/harveyslash/gists{/gist_id}", "starred_url": "https://api.github.com/users/harveyslash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harveyslash/subscriptions", "organizations_url": "https://api.github.com/users/harveyslash/orgs", "repos_url": "https://api.github.com/users/harveyslash/repos", "events_url": "https://api.github.com/users/harveyslash/events{/privacy}", "received_events_url": "https://api.github.com/users/harveyslash/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-06T01:13:13Z", "updated_at": "2018-03-08T22:47:30Z", "closed_at": "2018-03-08T22:47:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to get the actual queries that are being executed along with the time it took to execute them. \r\n\r\nRight now the most informative text that I can see is \r\n`sqlalchemy.orm.query.one` (indicating that i performed a one() query) \r\n\r\nIs there any way to get actual sql query data , or the queries itself ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/31", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/31/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/31/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/31", "id": 302160389, "node_id": "MDU6SXNzdWUzMDIxNjAzODk=", "number": 31, "title": "Removing Segment/Subsugment Name invalid characters.", "user": {"login": "harveyslash", "id": 7107410, "node_id": "MDQ6VXNlcjcxMDc0MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7107410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harveyslash", "html_url": "https://github.com/harveyslash", "followers_url": "https://api.github.com/users/harveyslash/followers", "following_url": "https://api.github.com/users/harveyslash/following{/other_user}", "gists_url": "https://api.github.com/users/harveyslash/gists{/gist_id}", "starred_url": "https://api.github.com/users/harveyslash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harveyslash/subscriptions", "organizations_url": "https://api.github.com/users/harveyslash/orgs", "repos_url": "https://api.github.com/users/harveyslash/repos", "events_url": "https://api.github.com/users/harveyslash/events{/privacy}", "received_events_url": "https://api.github.com/users/harveyslash/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-05T03:26:13Z", "updated_at": "2018-03-08T22:43:37Z", "closed_at": "2018-03-08T22:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using Mysql with flask sqlalchemy, i get this log: \r\n```Removing Segment/Subsugment Name invalid characters.```\r\n\r\nMy SQLALCHEMY URI IS : \r\n\r\nmysql://user:pass@url.something.ap-south-1.rds.amazonaws.com:3306/semiprod?charset=utf8mb4\r\n\r\nEven if I remove the ?charset, it seems to be automatically added by sqlalchemy", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/30", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/30/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/30/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/30", "id": 301574737, "node_id": "MDU6SXNzdWUzMDE1NzQ3Mzc=", "number": 30, "title": "pypi doc issue", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-01T21:57:40Z", "updated_at": "2018-03-28T18:48:10Z", "closed_at": "2018-03-28T18:48:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "if you compare xray: https://pypi.python.org/pypi/aws-xray-sdk/0.96\r\nto aiohttp: https://pypi.python.org/pypi/aiohttp\r\n\r\nYou can tell something is broken :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/28", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/28/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/28/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/28", "id": 300667958, "node_id": "MDU6SXNzdWUzMDA2Njc5NTg=", "number": 28, "title": "Aiohttp improvements, feedback wanted", "user": {"login": "pfreixes", "id": 1226121, "node_id": "MDQ6VXNlcjEyMjYxMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1226121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfreixes", "html_url": "https://github.com/pfreixes", "followers_url": "https://api.github.com/users/pfreixes/followers", "following_url": "https://api.github.com/users/pfreixes/following{/other_user}", "gists_url": "https://api.github.com/users/pfreixes/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfreixes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfreixes/subscriptions", "organizations_url": "https://api.github.com/users/pfreixes/orgs", "repos_url": "https://api.github.com/users/pfreixes/repos", "events_url": "https://api.github.com/users/pfreixes/events{/privacy}", "received_events_url": "https://api.github.com/users/pfreixes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-27T15:09:13Z", "updated_at": "2018-03-07T21:03:16Z", "closed_at": "2018-03-07T21:03:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi folks,\r\n\r\nI'm thinking in work on a pair of PR to improve the functionality of AWS-XRay for the Aiohttp framework.\r\n\r\nFirst of all, I would like to add a new `TraceConfig` object - the new Aiohttp Client tracing system since 3.0 [1] - that will allow users just make something like that to inject the specific headers:\r\n\r\n```python\r\nimport aiohttp\r\n\r\nfrom aws_xray_sdk.ext.aiohttp.client import TraceConfig\r\n\r\nasync with aiohttp.ClientSession(trace_configs=[TraceConfig()]) as client:\r\n    await client.get('http://example.com/some/redirect/')\r\n```\r\n\r\nMy main concern with that is how to deal with different Aiohttp versions, is there any requirement or advice with that? \r\n\r\nSecond, I would like to deprecate - remove? - the current middleware implementation that uses a deprecated pattern since the 2.X version, we strongly recommend the new one  [2], any concerns?.\r\n\r\n\r\n[1] https://docs.aiohttp.org/en/stable/client_advanced.html#client-tracing\r\n[2] https://docs.aiohttp.org/en/stable/web_advanced.html?highlight=middleware#middlewares", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/26", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/26/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/26/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/26", "id": 299881327, "node_id": "MDU6SXNzdWUyOTk4ODEzMjc=", "number": 26, "title": "Add ability to run disabled", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-02-23T23:22:43Z", "updated_at": "2019-02-08T01:42:00Z", "closed_at": "2019-02-08T01:42:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "datadog tracing (https://github.com/DataDog/dd-trace-py) has the ability to disable tracing via a `enabled` parameter to their `configure` method (https://github.com/DataDog/dd-trace-py/blob/master/ddtrace/tracer.py#L82).  This is really useful so one can control the behavior of tracing via an environment variable for example without having to change code, allowing for local and prod behaviors.  I suggest a similar mechanism for xray", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/25", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/25/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/25/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/25", "id": 299850344, "node_id": "MDU6SXNzdWUyOTk4NTAzNDQ=", "number": 25, "title": "TypeError: __init__() takes exactly 2 arguments (1 given)", "user": {"login": "michaelhelmick", "id": 352270, "node_id": "MDQ6VXNlcjM1MjI3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/352270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelhelmick", "html_url": "https://github.com/michaelhelmick", "followers_url": "https://api.github.com/users/michaelhelmick/followers", "following_url": "https://api.github.com/users/michaelhelmick/following{/other_user}", "gists_url": "https://api.github.com/users/michaelhelmick/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelhelmick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelhelmick/subscriptions", "organizations_url": "https://api.github.com/users/michaelhelmick/orgs", "repos_url": "https://api.github.com/users/michaelhelmick/repos", "events_url": "https://api.github.com/users/michaelhelmick/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelhelmick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-02-23T21:07:05Z", "updated_at": "2018-03-18T19:04:01Z", "closed_at": "2018-02-23T22:11:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nDjango==1.11.8\r\naws-xray-sdk==0.95\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/mikehelmick/.virtualenvs/test-x-ray/lib/python2.7/site-packages/django/utils/autoreload.py\", line 228, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/mikehelmick/.virtualenvs/test-x-ray/lib/python2.7/site-packages/django/core/management/commands/runserver.py\", line 147, in inner_run\r\n    handler = self.get_handler(*args, **options)\r\n  File \"/Users/mikehelmick/.virtualenvs/test-x-ray/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/runserver.py\", line 28, in get_handler\r\n    handler = super(Command, self).get_handler(*args, **options)\r\n  File \"/Users/mikehelmick/.virtualenvs/test-x-ray/lib/python2.7/site-packages/django/core/management/commands/runserver.py\", line 68, in get_handler\r\n    return get_internal_wsgi_application()\r\n  File \"/Users/mikehelmick/.virtualenvs/test-x-ray/lib/python2.7/site-packages/django/core/servers/basehttp.py\", line 44, in get_internal_wsgi_application\r\n    return get_wsgi_application()\r\n  File \"/Users/mikehelmick/.virtualenvs/test-x-ray/lib/python2.7/site-packages/django/core/wsgi.py\", line 14, in get_wsgi_application\r\n    return WSGIHandler()\r\n  File \"/Users/mikehelmick/.virtualenvs/test-x-ray/lib/python2.7/site-packages/django/core/handlers/wsgi.py\", line 151, in __init__\r\n    self.load_middleware()\r\n  File \"/Users/mikehelmick/.virtualenvs/test-x-ray/lib/python2.7/site-packages/django/core/handlers/base.py\", line 58, in load_middleware\r\n    mw_instance = mw_class()\r\nTypeError: __init__() takes exactly 2 arguments (1 given)\r\n```\r\n\r\nI tried setting up my env based off of documentation I pieced together from:\r\n- README.md\r\n- https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-python-middleware.html\r\n- https://docs.aws.amazon.com/xray-sdk-for-python/latest/reference/frameworks.html#django\r\n\r\n*settings.py*\r\n```python\r\nXRAY_RECORDER = {\r\n    'AUTO_INSTRUMENT': True,  # If turned on built-in database queries and template rendering will be recorded as subsegments\r\n    'AWS_XRAY_CONTEXT_MISSING': 'LOG_ERROR',\r\n    'AWS_XRAY_TRACING_NAME': 'Site',\r\n    'DYNAMIC_NAMING': '*.local.site.net', # defines a pattern that host names should match\r\n}\r\n```\r\n\r\nI added the MIDDLEWARE and the INSTALLED_APP.\r\n\r\nPrior to this error I was getting something similar to #4 \r\n\r\n```\r\naws_xray_sdk.core.exceptions.exceptions.SegmentNotFoundException: cannot find the current segment/subsegment, please make sure you have a segment open\r\n```\r\n\r\nI had to set the `AWS_XRAY_CONTEXT_MISSING` setting to `LOG_ERROR` to avoid it and then got this error. Any help is appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/21", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/21/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/21/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/21", "id": 297294204, "node_id": "MDU6SXNzdWUyOTcyOTQyMDQ=", "number": 21, "title": "message too long errors", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 695940842, "node_id": "MDU6TGFiZWw2OTU5NDA4NDI=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-15T00:30:54Z", "updated_at": "2018-03-06T22:22:29Z", "closed_at": "2018-03-01T19:30:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Occasionally I'll get the following error from the udp_emitter:\r\n\r\n```\r\n2018-02-14 16:28:46,744 - aws_xray_sdk.core.emitters.udp_emitter - ERROR - failed to send data to X-Ray daemon.\r\nTraceback (most recent call last):\r\n  File \"/Users/amohr/.pyenv/versions/3.6.3/lib/python3.6/site-packages/aws_xray_sdk/core/emitters/udp_emitter.py\", line 55, in _send_data\r\n    self._port))\r\nOSError: [Errno 40] Message too long\r\n```\r\n\r\nmy guess is that there's too much data in the trace.  This sounds like a library problem, if there's too much data it should split it into multiple packets.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/20", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/20/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/20/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/20", "id": 297199334, "node_id": "MDU6SXNzdWUyOTcxOTkzMzQ=", "number": 20, "title": "subsegment name special characters", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940838, "node_id": "MDU6TGFiZWw2OTU5NDA4Mzg=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 695940842, "node_id": "MDU6TGFiZWw2OTU5NDA4NDI=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-14T18:30:10Z", "updated_at": "2018-02-23T00:15:59Z", "closed_at": "2018-02-23T00:15:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "currently the following is allowed: `string.ascii_letters + string.digits + '_.:/%&#=+\\-@ '` per entity.py.  However in the requests module (and httplib module I'm proposing based on it) it uses the url, which can include a `?` character which yields a lot of warnings.  Was the intention that everything after '?' would be stripped off?  If so the requests module isn't doing this either.  Could either do simple string clipping or use something like yarl", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/18", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/18/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/18/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/18", "id": 296363313, "node_id": "MDU6SXNzdWUyOTYzNjMzMTM=", "number": 18, "title": "Annotations with special characters in name are silently ignored", "user": {"login": "MarSoft", "id": 171243, "node_id": "MDQ6VXNlcjE3MTI0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/171243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarSoft", "html_url": "https://github.com/MarSoft", "followers_url": "https://api.github.com/users/MarSoft/followers", "following_url": "https://api.github.com/users/MarSoft/following{/other_user}", "gists_url": "https://api.github.com/users/MarSoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarSoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarSoft/subscriptions", "organizations_url": "https://api.github.com/users/MarSoft/orgs", "repos_url": "https://api.github.com/users/MarSoft/repos", "events_url": "https://api.github.com/users/MarSoft/events{/privacy}", "received_events_url": "https://api.github.com/users/MarSoft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 695940842, "node_id": "MDU6TGFiZWw2OTU5NDA4NDI=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-12T12:46:36Z", "updated_at": "2018-02-20T01:22:00Z", "closed_at": "2018-02-20T01:22:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider this code:\r\n\r\n    s = xray_recorder.begin_subsegment('test')\r\n    s.put_annotation('log.mydata', 42)\r\n\r\nIt is executed without any error or exception, but the annotation just does not appear in XRay console.\r\nIf I look at the raw segment data I will see `\"annotations\": {}` - empty object for annotations. Looks like it is either an issue with XRay backend (silently ignores values with name containing special characters like dot `.` or colon `:`) or an issue with docs & this framework (docs should mention this limitation, and the framework should prohibit such names).\r\nUnderscore seems allowed though.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/16", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/16/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/16/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/16", "id": 285421436, "node_id": "MDU6SXNzdWUyODU0MjE0MzY=", "number": 16, "title": "No module named pkg_resources with Serverless Framework", "user": {"login": "gcampionpae", "id": 19410820, "node_id": "MDQ6VXNlcjE5NDEwODIw", "avatar_url": "https://avatars3.githubusercontent.com/u/19410820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcampionpae", "html_url": "https://github.com/gcampionpae", "followers_url": "https://api.github.com/users/gcampionpae/followers", "following_url": "https://api.github.com/users/gcampionpae/following{/other_user}", "gists_url": "https://api.github.com/users/gcampionpae/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcampionpae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcampionpae/subscriptions", "organizations_url": "https://api.github.com/users/gcampionpae/orgs", "repos_url": "https://api.github.com/users/gcampionpae/repos", "events_url": "https://api.github.com/users/gcampionpae/events{/privacy}", "received_events_url": "https://api.github.com/users/gcampionpae/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-01-02T12:45:37Z", "updated_at": "2018-01-16T10:02:58Z", "closed_at": "2018-01-16T10:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are deploying our Lambda functions with the Serverless Framework and when we use version .95, our Lambda functions throw this error: \r\n\r\nUnable to import module 'lib/cancel_trial_subscription': No module named pkg_resources\r\n\r\nWhen using version .94, there isn't an issue.  Also, if a deployment is made from a mac instead of through our CI/CD pipeline, which runs on Linux, it's also not an issue.  Any ideas how this could be happening?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/12", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/12/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/12/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/12", "id": 280270057, "node_id": "MDU6SXNzdWUyODAyNzAwNTc=", "number": 12, "title": "PIP 0.94 missing Aiohttp Enhancement", "user": {"login": "ezeasharma", "id": 13368270, "node_id": "MDQ6VXNlcjEzMzY4Mjcw", "avatar_url": "https://avatars3.githubusercontent.com/u/13368270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezeasharma", "html_url": "https://github.com/ezeasharma", "followers_url": "https://api.github.com/users/ezeasharma/followers", "following_url": "https://api.github.com/users/ezeasharma/following{/other_user}", "gists_url": "https://api.github.com/users/ezeasharma/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezeasharma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezeasharma/subscriptions", "organizations_url": "https://api.github.com/users/ezeasharma/orgs", "repos_url": "https://api.github.com/users/ezeasharma/repos", "events_url": "https://api.github.com/users/ezeasharma/events{/privacy}", "received_events_url": "https://api.github.com/users/ezeasharma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-07T20:35:22Z", "updated_at": "2017-12-08T01:40:02Z", "closed_at": "2017-12-08T01:40:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed 0.94 using pip and its missing all the AioHttp enhancement\r\nscreenshot of the compat.py code installed\r\n![image](https://user-images.githubusercontent.com/13368270/33737479-3a8ecf02-db64-11e7-8437-1eff8471e35d.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/5", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/5/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/5/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/5", "id": 272974803, "node_id": "MDU6SXNzdWUyNzI5NzQ4MDM=", "number": 5, "title": "Supporting aiobotocore", "user": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-11-10T15:48:41Z", "updated_at": "2017-11-15T23:25:42Z", "closed_at": "2017-11-15T23:25:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Back again with more async stuff :smile:\r\n\r\nI've been using the aiobotocore library which essentially wraps botocore and uses aiohttp to perform async http requests.\r\n\r\nI was looking into patching parts of it so the SDK creates subsegments when queries to AWS are made.\r\nI've gotten it to work but its a bit messy. \r\n\r\nThe following is based off the botocore patcher. (The injecting headers bit is exactly the same bar a different class needs patching)\r\n\r\n```python\r\n    wrapt.wrap_function_wrapper(\r\n        'aiobotocore.client',\r\n        'AioBaseClient._make_api_call',\r\n        _xray_traced_aiobotocore,\r\n    )\r\n\r\nasync def _xray_traced_aiobotocore(wrapped, instance, args, kwargs):\r\n    service = instance._service_model.metadata[\"endpointPrefix\"]\r\n\r\n    return await xray_recorder.record_subsegment_async(\r\n        wrapped, instance, args, kwargs,\r\n        name=service,\r\n        namespace='aws',\r\n        meta_processor=aws_meta_processor,\r\n    )\r\n```\r\nWhen wrapt runs, the wrapped service is a coroutine which needs to be awaited.\r\nUntil its awaited, the injecting of headers wont run.\r\n\r\nI created a copy of `record_subsegment` called `record_subsegment_async` which is also a coroutine and it runs  `return_value = await wrapped(*args, **kwargs)` which during that the headers are injected and then the result is returned. After that everything else works.\r\n\r\nI tried awaiting the wrapped function inside of `_xray_traced_aiobotocore` but when the headers are injected the subsegment hasn't begun as thats done inside of `record_subsegment`.\r\n\r\nWhat would you reckon is the best way for solving this, I was thinking of subclassing xray_recorder but if there is a simpler way I'm up for that. Then another PR will come your way :smile:.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/4", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/4/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/4/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/4", "id": 270611545, "node_id": "MDU6SXNzdWUyNzA2MTE1NDU=", "number": 4, "title": "SegmentNotFoundException patching boto3", "user": {"login": "artemnesterenko", "id": 5736988, "node_id": "MDQ6VXNlcjU3MzY5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5736988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artemnesterenko", "html_url": "https://github.com/artemnesterenko", "followers_url": "https://api.github.com/users/artemnesterenko/followers", "following_url": "https://api.github.com/users/artemnesterenko/following{/other_user}", "gists_url": "https://api.github.com/users/artemnesterenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/artemnesterenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artemnesterenko/subscriptions", "organizations_url": "https://api.github.com/users/artemnesterenko/orgs", "repos_url": "https://api.github.com/users/artemnesterenko/repos", "events_url": "https://api.github.com/users/artemnesterenko/events{/privacy}", "received_events_url": "https://api.github.com/users/artemnesterenko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-11-02T10:58:38Z", "updated_at": "2018-04-19T20:55:41Z", "closed_at": "2018-04-19T20:55:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following requirements:\r\nDjango==1.11.6\r\nboto3==1.4.7\r\ndjango-storages==1.6.5\r\naws-xray-sdk==0.93\r\nI want to store media files in an S3 bucket. To trace that I do:\r\n```python\r\nif 'aws_xray_sdk.ext.django' in settings.INSTALLED_APPS:\r\n    from aws_xray_sdk.core import patch_all\r\n    patch_all()\r\n```\r\nAfter that, when I try to upload file to my site, a SegmentNotFoundException is raised.\r\nIf I do:\r\n```python\r\nif 'aws_xray_sdk.ext.django' in settings.INSTALLED_APPS:\r\n    from aws_xray_sdk.core import patch\r\n    patch(['requests'])\r\n```\r\nthen all is good, but, obviously, there are no traces for boto3.\r\nThe xray middleware is in the list of middleware classes, and the xray app is in the INSTALLED_APPS list.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/2", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/2/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/2/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/2", "id": 268827133, "node_id": "MDU6SXNzdWUyNjg4MjcxMzM=", "number": 2, "title": "Serverless framework support", "user": {"login": "datar-ai", "id": 13550005, "node_id": "MDQ6VXNlcjEzNTUwMDA1", "avatar_url": "https://avatars1.githubusercontent.com/u/13550005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/datar-ai", "html_url": "https://github.com/datar-ai", "followers_url": "https://api.github.com/users/datar-ai/followers", "following_url": "https://api.github.com/users/datar-ai/following{/other_user}", "gists_url": "https://api.github.com/users/datar-ai/gists{/gist_id}", "starred_url": "https://api.github.com/users/datar-ai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/datar-ai/subscriptions", "organizations_url": "https://api.github.com/users/datar-ai/orgs", "repos_url": "https://api.github.com/users/datar-ai/repos", "events_url": "https://api.github.com/users/datar-ai/events{/privacy}", "received_events_url": "https://api.github.com/users/datar-ai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 695940840, "node_id": "MDU6TGFiZWw2OTU5NDA4NDA=", "url": "https://api.github.com/repos/aws/aws-xray-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chanchiem", "id": 8852794, "node_id": "MDQ6VXNlcjg4NTI3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8852794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanchiem", "html_url": "https://github.com/chanchiem", "followers_url": "https://api.github.com/users/chanchiem/followers", "following_url": "https://api.github.com/users/chanchiem/following{/other_user}", "gists_url": "https://api.github.com/users/chanchiem/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanchiem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanchiem/subscriptions", "organizations_url": "https://api.github.com/users/chanchiem/orgs", "repos_url": "https://api.github.com/users/chanchiem/repos", "events_url": "https://api.github.com/users/chanchiem/events{/privacy}", "received_events_url": "https://api.github.com/users/chanchiem/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2017-10-26T16:26:49Z", "updated_at": "2019-02-26T21:13:50Z", "closed_at": "2019-02-26T21:13:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using aws-xray-sdk 0.92 on Lambda to trace a Flask application, adding the Flask middleware results in this log and traceback.\r\n\r\n\r\n[1509032914734] Traceback (most recent call last):\r\n[1509032914734] File \"/var/task/flask/app.py\", line 1982, in wsgi_app\r\n[1509032914734] response = self.full_dispatch_request()\r\n[1509032914734] File \"/var/task/flask/app.py\", line 1615, in full_dispatch_request\r\n[1509032914734] return self.finalize_request(rv)\r\n[1509032914734] File \"/var/task/flask/app.py\", line 1632, in finalize_request\r\n[1509032914734] response = self.process_response(response)\r\n[1509032914734] File \"/var/task/flask/app.py\", line 1856, in process_response\r\n[1509032914734] response = handler(response)\r\n[1509032914734] File \"/var/task/aws_xray_sdk/ext/flask/middleware.py\", line 59, in _after_request\r\n[1509032914734] segment.put_http_meta(http.STATUS, response.status_code)\r\n[1509032914734] File \"/var/task/aws_xray_sdk/core/models/facade_segment.py\", line 42, in put_http_meta\r\n[1509032914734] raise FacadeSegmentMutationException(MUTATION_UNSUPPORTED_MESSAGE)\r\n[1509032914734] aws_xray_sdk.core.exceptions.exceptions.FacadeSegmentMutationException: FacadeSegments cannot be mutated.\r\n[1509032914734] FacadeSegments cannot be mutated.\r\n\r\nPlease check the forums for the detail info : \r\n[https://forums.aws.amazon.com/thread.jspa?messageID=803898&tstart=0](url)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/1", "repository_url": "https://api.github.com/repos/aws/aws-xray-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/1/comments", "events_url": "https://api.github.com/repos/aws/aws-xray-sdk-python/issues/1/events", "html_url": "https://github.com/aws/aws-xray-sdk-python/issues/1", "id": 267115629, "node_id": "MDU6SXNzdWUyNjcxMTU2Mjk=", "number": 1, "title": "Missing src package on pypi", "user": {"login": "frivoire", "id": 2462709, "node_id": "MDQ6VXNlcjI0NjI3MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2462709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frivoire", "html_url": "https://github.com/frivoire", "followers_url": "https://api.github.com/users/frivoire/followers", "following_url": "https://api.github.com/users/frivoire/following{/other_user}", "gists_url": "https://api.github.com/users/frivoire/gists{/gist_id}", "starred_url": "https://api.github.com/users/frivoire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frivoire/subscriptions", "organizations_url": "https://api.github.com/users/frivoire/orgs", "repos_url": "https://api.github.com/users/frivoire/repos", "events_url": "https://api.github.com/users/frivoire/events{/privacy}", "received_events_url": "https://api.github.com/users/frivoire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-20T09:27:21Z", "updated_at": "2017-10-20T21:27:36Z", "closed_at": "2017-10-20T21:27:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI've looked at : https://pypi.python.org/simple/aws-xray-sdk/\r\nAnd currently, there is :\r\n```\r\naws-xray-sdk-0.91.tar.gz\r\naws_xray_sdk-0.91.1-py2.py3-none-any.whl\r\naws_xray_sdk-0.92-py2.py3-none-any.whl\r\naws_xray_sdk-0.92.1-py2.py3-none-any.whl\r\naws_xray_sdk-0.92.2-py2.py3-none-any.whl\r\naws_xray_sdk-0.93-py2.py3-none-any.whl\r\n```\r\n\r\nCould you publish both the source (tar.gz) and wheel for all versions ?\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}]}