{"total_count": 15, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/MagicStack/immutables/issues/48", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/48/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/48/events", "html_url": "https://github.com/MagicStack/immutables/issues/48", "id": 664894520, "node_id": "MDU6SXNzdWU2NjQ4OTQ1MjA=", "number": 48, "title": "No Python 3.5 Windows Wheel on pypi", "user": {"login": "rongduan-zhu", "id": 5406634, "node_id": "MDQ6VXNlcjU0MDY2MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5406634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongduan-zhu", "html_url": "https://github.com/rongduan-zhu", "followers_url": "https://api.github.com/users/rongduan-zhu/followers", "following_url": "https://api.github.com/users/rongduan-zhu/following{/other_user}", "gists_url": "https://api.github.com/users/rongduan-zhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongduan-zhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongduan-zhu/subscriptions", "organizations_url": "https://api.github.com/users/rongduan-zhu/orgs", "repos_url": "https://api.github.com/users/rongduan-zhu/repos", "events_url": "https://api.github.com/users/rongduan-zhu/events{/privacy}", "received_events_url": "https://api.github.com/users/rongduan-zhu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-24T03:38:56Z", "updated_at": "2020-07-24T03:47:02Z", "closed_at": "2020-07-24T03:47:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are wheels published for all three platforms (win, mac, linux) for python 3.6 to python 3.8 but for python 3.5, there are only wheels for mac and linux. https://pypi.org/project/immutables/#files\r\n\r\nIs it possible to publish Python 3.5 wheel for Windows as well?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/47", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/47/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/47/events", "html_url": "https://github.com/MagicStack/immutables/issues/47", "id": 628774277, "node_id": "MDU6SXNzdWU2Mjg3NzQyNzc=", "number": 47, "title": "Immutables Class", "user": {"login": "li-dennis", "id": 1820599, "node_id": "MDQ6VXNlcjE4MjA1OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1820599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-dennis", "html_url": "https://github.com/li-dennis", "followers_url": "https://api.github.com/users/li-dennis/followers", "following_url": "https://api.github.com/users/li-dennis/following{/other_user}", "gists_url": "https://api.github.com/users/li-dennis/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-dennis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-dennis/subscriptions", "organizations_url": "https://api.github.com/users/li-dennis/orgs", "repos_url": "https://api.github.com/users/li-dennis/repos", "events_url": "https://api.github.com/users/li-dennis/events{/privacy}", "received_events_url": "https://api.github.com/users/li-dennis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-01T22:42:13Z", "updated_at": "2020-06-01T23:26:41Z", "closed_at": "2020-06-01T22:50:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe i'm missing something in the docs, but is there an immutables class that can be used/inherited from, or is this just a Map?\r\n\r\ne.g. I'm hoping for an interface like this\r\n\r\n```\r\nclass CustomClass(Immutables.Class):\r\n  def __init__(self):\r\n    self.x = 'x'\r\n\r\n  def foo(self):\r\n    self.x = 'y'\r\n    pass\r\n\r\nobj = CustomClass()\r\nwith obj.mutate() as obj:\r\n  obj.foo()\r\n  obj2 = obj.finish()\r\n\r\nobj.x # returns x\r\nobj2.x # returns y\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/30", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/30/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/30/events", "html_url": "https://github.com/MagicStack/immutables/issues/30", "id": 605237171, "node_id": "MDU6SXNzdWU2MDUyMzcxNzE=", "number": 30, "title": "Please add a changelog", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-23T04:52:31Z", "updated_at": "2020-04-23T05:10:35Z", "closed_at": "2020-04-23T05:10:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like the new release might have some great improvements, but it\u2019s harder to tell what they are without a changelog (or any description associated with the release on GitHub, for those of us watching releases).\r\n\r\nThanks for your work on Immutables!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/26", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/26/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/26/events", "html_url": "https://github.com/MagicStack/immutables/issues/26", "id": 600688339, "node_id": "MDU6SXNzdWU2MDA2ODgzMzk=", "number": 26, "title": "Some validations are always disabled", "user": {"login": "TIGirardi", "id": 55336837, "node_id": "MDQ6VXNlcjU1MzM2ODM3", "avatar_url": "https://avatars2.githubusercontent.com/u/55336837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TIGirardi", "html_url": "https://github.com/TIGirardi", "followers_url": "https://api.github.com/users/TIGirardi/followers", "following_url": "https://api.github.com/users/TIGirardi/following{/other_user}", "gists_url": "https://api.github.com/users/TIGirardi/gists{/gist_id}", "starred_url": "https://api.github.com/users/TIGirardi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TIGirardi/subscriptions", "organizations_url": "https://api.github.com/users/TIGirardi/orgs", "repos_url": "https://api.github.com/users/TIGirardi/repos", "events_url": "https://api.github.com/users/TIGirardi/events{/privacy}", "received_events_url": "https://api.github.com/users/TIGirardi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-16T01:46:02Z", "updated_at": "2020-04-23T00:04:57Z", "closed_at": "2020-04-23T00:04:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "These should probably be `#ifndef`. In particular, the first would catch #24 \r\n\r\nhttps://github.com/MagicStack/immutables/blob/11863b29e3fbcd7d25335befce706e21a785f5e0/immutables/_map.c#L396-L415\r\n\r\nhttps://github.com/MagicStack/immutables/blob/11863b29e3fbcd7d25335befce706e21a785f5e0/immutables/_map.c#L1112-L1120\r\n\r\nhttps://github.com/MagicStack/immutables/blob/11863b29e3fbcd7d25335befce706e21a785f5e0/immutables/_map.c#L2009-L2018\r\n\r\nhttps://github.com/MagicStack/immutables/blob/11863b29e3fbcd7d25335befce706e21a785f5e0/immutables/_map.c#L2301-L2304\r\n\r\nhttps://github.com/MagicStack/immutables/blob/11863b29e3fbcd7d25335befce706e21a785f5e0/immutables/_map.c#L2338-L2341\r\n\r\nhttps://github.com/MagicStack/immutables/blob/11863b29e3fbcd7d25335befce706e21a785f5e0/immutables/_map.c#L2362-L2365\r\n\r\nhttps://github.com/MagicStack/immutables/blob/11863b29e3fbcd7d25335befce706e21a785f5e0/immutables/_map.c#L2384-L2387\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/24", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/24/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/24/events", "html_url": "https://github.com/MagicStack/immutables/issues/24", "id": 593599247, "node_id": "MDU6SXNzdWU1OTM1OTkyNDc=", "number": 24, "title": "Help on KeyError being raised", "user": {"login": "chrizzFTD", "id": 8294116, "node_id": "MDQ6VXNlcjgyOTQxMTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8294116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrizzFTD", "html_url": "https://github.com/chrizzFTD", "followers_url": "https://api.github.com/users/chrizzFTD/followers", "following_url": "https://api.github.com/users/chrizzFTD/following{/other_user}", "gists_url": "https://api.github.com/users/chrizzFTD/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrizzFTD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrizzFTD/subscriptions", "organizations_url": "https://api.github.com/users/chrizzFTD/orgs", "repos_url": "https://api.github.com/users/chrizzFTD/repos", "events_url": "https://api.github.com/users/chrizzFTD/events{/privacy}", "received_events_url": "https://api.github.com/users/chrizzFTD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-03T19:40:33Z", "updated_at": "2020-07-14T08:45:26Z", "closed_at": "2020-07-14T08:45:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, first of all thanks for this package!\r\n\r\nI've found very useful the ability to hash immutable mappings.\r\n\r\nRecently I came across a very strange issue and I can not tell why it's happening. I was able to reproduce it with this snippet:\r\n\r\n```python\r\nPython 3.8.2 (default, Mar 26 2020, 15:53:00)\r\n[GCC 7.3.0] :: Anaconda, Inc. on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from immutables import Map\r\n>>> keys = range(27)\r\n>>> new_entries = dict.fromkeys(keys, True)\r\n>>> m = Map(new_entries)\r\n>>> print(f\"{17 in m=}\")\r\n17 in m=True\r\n>>>\r\n>>> with m.mutate() as mm:\r\n...     for i in keys:\r\n...         print(f\"Deleting {i=}\")\r\n...         try:\r\n...             del mm[i]\r\n...         except KeyError as exc:\r\n...             print(f\"Did not find: {i}\")\r\n...             print(f\"{i in m=}\")\r\n...             print(f\"{i in mm=}\")\r\n...             print(type(i))\r\n...             raise\r\n...     mm.update(new_entries)\r\n...     m2 = mm.finish()\r\n...     print(\"ok\")\r\n...\r\nDeleting i=0\r\nDeleting i=1\r\nDeleting i=2\r\nDeleting i=3\r\nDeleting i=4\r\nDeleting i=5\r\nDeleting i=6\r\nDeleting i=7\r\nDeleting i=8\r\nDeleting i=9\r\nDeleting i=10\r\nDeleting i=11\r\nDeleting i=12\r\nDeleting i=13\r\nDeleting i=14\r\nDeleting i=15\r\nDeleting i=16\r\nDeleting i=17\r\nDid not find: 17\r\ni in m=True\r\ni in mm=False\r\n<class 'int'>\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 5, in <module>\r\nKeyError: 17\r\n>>> m.delete(17)\r\n<immutables.Map({0: True, 1: True, 2: True, 3: True, 4: True, 5: True, 6: True, 7: True, 8: True, 9: True, 10: True, 11: True, 12: True, 13: True\r\n, 14: True, 15: True, 16: True, 18: True, 19: True, 20: True, 21: True, 22: True, 23: True, 24: True, 25: True, 26: True}) at 0x7ff586fb57c0>\r\n>>>\r\n```\r\nEvery key after 17 is not able to be deleted on the `mutate` context manager, but they are in the mapping. I would expect mutate to be able to delete everything. \r\n\r\nIs that expectation correct?\r\n\r\nTested on windows:\r\n```\r\nPython 3.7.3 (default, Apr 24 2019, 15:29:51) [MSC v.1915 64 bit (AMD64)] :: Anaconda, Inc. on win32\r\n>>> import immutables\r\n>>> immutables.__version__\r\n'0.11'\r\n```\r\nubuntu WSL\r\n```\r\nPython 3.8.2 (default, Mar 26 2020, 15:53:00)\r\n[GCC 7.3.0] :: Anaconda, Inc. on linux\r\n>>> import immutables\r\n>>> immutables.__version__\r\n'0.11'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/22", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/22/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/22/events", "html_url": "https://github.com/MagicStack/immutables/issues/22", "id": 590408955, "node_id": "MDU6SXNzdWU1OTA0MDg5NTU=", "number": 22, "title": "Add performance comparison vs dict", "user": {"login": "jruere", "id": 1299142, "node_id": "MDQ6VXNlcjEyOTkxNDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1299142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jruere", "html_url": "https://github.com/jruere", "followers_url": "https://api.github.com/users/jruere/followers", "following_url": "https://api.github.com/users/jruere/following{/other_user}", "gists_url": "https://api.github.com/users/jruere/gists{/gist_id}", "starred_url": "https://api.github.com/users/jruere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jruere/subscriptions", "organizations_url": "https://api.github.com/users/jruere/orgs", "repos_url": "https://api.github.com/users/jruere/repos", "events_url": "https://api.github.com/users/jruere/events{/privacy}", "received_events_url": "https://api.github.com/users/jruere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-30T16:04:33Z", "updated_at": "2020-03-31T00:22:18Z", "closed_at": "2020-03-31T00:22:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nIt would be very useful to have a comparison of the performance of the library vs dict for each operation when using small and large datasets.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/19", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/19/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/19/events", "html_url": "https://github.com/MagicStack/immutables/issues/19", "id": 577783854, "node_id": "MDU6SXNzdWU1Nzc3ODM4NTQ=", "number": 19, "title": "python 3.8.2 has smal change in AssertionError wording", "user": {"login": "mimi1vx", "id": 931039, "node_id": "MDQ6VXNlcjkzMTAzOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/931039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mimi1vx", "html_url": "https://github.com/mimi1vx", "followers_url": "https://api.github.com/users/mimi1vx/followers", "following_url": "https://api.github.com/users/mimi1vx/following{/other_user}", "gists_url": "https://api.github.com/users/mimi1vx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mimi1vx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mimi1vx/subscriptions", "organizations_url": "https://api.github.com/users/mimi1vx/orgs", "repos_url": "https://api.github.com/users/mimi1vx/repos", "events_url": "https://api.github.com/users/mimi1vx/events{/privacy}", "received_events_url": "https://api.github.com/users/mimi1vx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T09:55:23Z", "updated_at": "2020-03-09T11:52:20Z", "closed_at": "2020-03-09T11:52:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n[   11s] ======================================================================\r\n[   11s] FAIL: test_map_pickle (test_map.CMapTest)\r\n[   11s] ----------------------------------------------------------------------\r\n[   11s] TypeError: cannot pickle 'immutables._map.MapMutation' object\r\n[   11s] \r\n[   11s] During handling of the above exception, another exception occurred:\r\n[   11s] \r\n[   11s] Traceback (most recent call last):\r\n[   11s]   File \"/home/abuild/rpmbuild/BUILD/immutables-0.11/tests/test_map.py\", line 1298, in test_map_pickle\r\n[   11s]     pickle.dumps(h.mutate())\r\n[   11s] AssertionError: \"can't pickle\" does not match \"cannot pickle 'immutables._map.MapMutation' object\"\r\n[   11s] \r\n[   11s] ----------------------------------------------------------------------\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/18", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/18/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/18/events", "html_url": "https://github.com/MagicStack/immutables/issues/18", "id": 559929150, "node_id": "MDU6SXNzdWU1NTk5MjkxNTA=", "number": 18, "title": "`immutables.Map` is not JSON Serializable", "user": {"login": "rowillia", "id": 808798, "node_id": "MDQ6VXNlcjgwODc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/808798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rowillia", "html_url": "https://github.com/rowillia", "followers_url": "https://api.github.com/users/rowillia/followers", "following_url": "https://api.github.com/users/rowillia/following{/other_user}", "gists_url": "https://api.github.com/users/rowillia/gists{/gist_id}", "starred_url": "https://api.github.com/users/rowillia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rowillia/subscriptions", "organizations_url": "https://api.github.com/users/rowillia/orgs", "repos_url": "https://api.github.com/users/rowillia/repos", "events_url": "https://api.github.com/users/rowillia/events{/privacy}", "received_events_url": "https://api.github.com/users/rowillia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-04T19:26:12Z", "updated_at": "2020-02-04T20:48:48Z", "closed_at": "2020-02-04T19:40:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport json\r\nimport immutables\r\nprint(json.dumps(immutables.Map({'hello': 'world'})))\r\n```\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 3, in <module>\r\n    print(json.dumps(immutables.Map({'hello': 'world'})))\r\n  File \"/opt/lyft/brew/Cellar/python36/3.6.5_1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/__init__.py\", line 231, in dumps\r\n    return _default_encoder.encode(obj)\r\n  File \"/opt/lyft/brew/Cellar/python36/3.6.5_1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py\", line 199, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/opt/lyft/brew/Cellar/python36/3.6.5_1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py\", line 257, in iterencode\r\n    return _iterencode(o, 0)\r\n  File \"/opt/lyft/brew/Cellar/python36/3.6.5_1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py\", line 180, in default\r\n    o.__class__.__name__)\r\nTypeError: Object of type 'Map' is not JSON serializable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/15", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/15/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/15/events", "html_url": "https://github.com/MagicStack/immutables/issues/15", "id": 516616900, "node_id": "MDU6SXNzdWU1MTY2MTY5MDA=", "number": 15, "title": "Python 3.8 support?", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-02T14:47:19Z", "updated_at": "2019-11-02T20:56:25Z", "closed_at": "2019-11-02T20:56:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nI'm one of the maintainers of the [immutables feedstock at conda-forge](https://github.com/conda-forge/immutables-feedstock). With the recent release of Python 3.8, conda-forge has started to build its packages for that new version.\r\n\r\nImmutables builds cleanly, but one test fails on Python 3.8 (in Windows, Linux and OSX):\r\n\r\n```\r\n+ pytest tests\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.8.0, pytest-3.2.2, py-1.8.0, pluggy-0.4.0\r\nrootdir: $SRC_DIR, inifile:\r\ncollected 114 items\r\n\r\ntests/test_map.py ...........................................................................................................F......\r\n\r\n=================================== FAILURES ===================================\r\n___________________________ CMapTest.test_map_pickle ___________________________\r\nTypeError: cannot pickle 'immutables._map.MapMutation' object\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nself = <tests.test_map.CMapTest testMethod=test_map_pickle>\r\n\r\n    def test_map_pickle(self):\r\n        h = self.Map(a=1, b=2)\r\n        for proto in range(pickle.HIGHEST_PROTOCOL):\r\n            p = pickle.dumps(h, proto)\r\n            uh = pickle.loads(p)\r\n    \r\n            self.assertTrue(isinstance(uh, self.Map))\r\n            self.assertEqual(h, uh)\r\n    \r\n        with self.assertRaisesRegex(TypeError, \"can't pickle\"):\r\n>           pickle.dumps(h.mutate())\r\nE           AssertionError: \"can't pickle\" does not match \"cannot pickle 'immutables._map.MapMutation' object\"\r\n\r\ntests/test_map.py:1298: AssertionError\r\n===================== 1 failed, 113 passed in 7.77 seconds =====================\r\n```\r\n\r\nLink: https://github.com/conda-forge/immutables-feedstock/pull/10\r\n\r\nI will open a PR shortly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/12", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/12/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/12/events", "html_url": "https://github.com/MagicStack/immutables/issues/12", "id": 452923507, "node_id": "MDU6SXNzdWU0NTI5MjM1MDc=", "number": 12, "title": "mypy integration", "user": {"login": "iddan", "id": 12671072, "node_id": "MDQ6VXNlcjEyNjcxMDcy", "avatar_url": "https://avatars2.githubusercontent.com/u/12671072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iddan", "html_url": "https://github.com/iddan", "followers_url": "https://api.github.com/users/iddan/followers", "following_url": "https://api.github.com/users/iddan/following{/other_user}", "gists_url": "https://api.github.com/users/iddan/gists{/gist_id}", "starred_url": "https://api.github.com/users/iddan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iddan/subscriptions", "organizations_url": "https://api.github.com/users/iddan/orgs", "repos_url": "https://api.github.com/users/iddan/repos", "events_url": "https://api.github.com/users/iddan/events{/privacy}", "received_events_url": "https://api.github.com/users/iddan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-06T09:23:00Z", "updated_at": "2019-10-03T21:03:56Z", "closed_at": "2019-10-03T21:03:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Collections should implement [mypy Mapping generic](https://mypy.readthedocs.io/en/stable/generics.html#defining-sub-classes-of-generic-classes) to be properly typed", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/7", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/7/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/7/events", "html_url": "https://github.com/MagicStack/immutables/issues/7", "id": 345565622, "node_id": "MDU6SXNzdWUzNDU1NjU2MjI=", "number": 7, "title": "Apparent segfault in immutables.Map.__init__", "user": {"login": "njsmith", "id": 609896, "node_id": "MDQ6VXNlcjYwOTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njsmith", "html_url": "https://github.com/njsmith", "followers_url": "https://api.github.com/users/njsmith/followers", "following_url": "https://api.github.com/users/njsmith/following{/other_user}", "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions", "organizations_url": "https://api.github.com/users/njsmith/orgs", "repos_url": "https://api.github.com/users/njsmith/repos", "events_url": "https://api.github.com/users/njsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/njsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-29T21:50:31Z", "updated_at": "2018-07-31T00:43:55Z", "closed_at": "2018-07-30T15:45:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're getting an intermittent segfault in the `contextvars` library, on our MacOS CI: https://ci.cryptography.io/blue/rest/organizations/jenkins/pipelines/python-trio/pipelines/trio/branches/PR-575/runs/2/nodes/6/steps/33/log/?start=0\r\n\r\nThe crash-handler traceback shows it as happening on line 27 of `contextvars/__init__.py`, which seems to be:\r\n\r\n```python\r\n        self._data = immutables.Map()\r\n```\r\n\r\nSo our current hypothesis is that `immutables.Map()` sometimes segfaults? Does that ring any bells?\r\n\r\nWe don't know how to reproduce it locally, but I believe that's the python.org build of 3.6.1.\r\n\r\nPrevious discussion: https://github.com/python-trio/trio/issues/200#issuecomment-408670447", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/6", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/6/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/6/events", "html_url": "https://github.com/MagicStack/immutables/issues/6", "id": 339180330, "node_id": "MDU6SXNzdWUzMzkxODAzMzA=", "number": 6, "title": "Cannot install on Windows-Python-2.7 due to: AttributeError: 'tuple' object has no attribute system", "user": {"login": "ankostis", "id": 501585, "node_id": "MDQ6VXNlcjUwMTU4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/501585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankostis", "html_url": "https://github.com/ankostis", "followers_url": "https://api.github.com/users/ankostis/followers", "following_url": "https://api.github.com/users/ankostis/following{/other_user}", "gists_url": "https://api.github.com/users/ankostis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankostis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankostis/subscriptions", "organizations_url": "https://api.github.com/users/ankostis/orgs", "repos_url": "https://api.github.com/users/ankostis/repos", "events_url": "https://api.github.com/users/ankostis/events{/privacy}", "received_events_url": "https://api.github.com/users/ankostis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-07T22:42:49Z", "updated_at": "2018-07-30T15:46:38Z", "closed_at": "2018-07-30T15:46:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Windows & Python-2.7.10, pip-installing  fails with this:\r\n\r\n```\r\n> pip install immutables\r\nCollecting immutables\r\n  Downloading https://files.pythonhosted.org/packages/dc/22/e8c6a0b77657612b21f45519b3c08067793371e62bf027af84d49ac9d3e9/immutables-0.6.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"c:\\users\\joe\\appdata\\local\\temp\\pip-install-5psh9p\\immutables\\setup.py\", line 7, in <module>\r\n        if platform.uname().system != 'Windows':\r\n    AttributeError: 'tuple' object has no attribute 'system'\r\n```\r\nNow, i noticed that in the project's classifiers it is written only python-3,\r\nbut `immutable` is actually fetched as a transitive dependency of `contextvars` *backported package*.\r\n\r\nAnyhow, the problem is that:\r\n\r\n- on Python 3, `platform.uname()` returns a class \"like\" a named-tuple:\r\n  ```python\r\n   >>> import platform\r\n   >>> n = platform.uname(); n\r\n    uname_result(system='Windows', node='hal', release='10', version='10.0.17134', machine='AMD64', processor='Intel64 Family 6 Model 69 Stepping 1, MonkeyIntel')\r\n    >>> type(n).mro()\r\n    [<class 'platform.uname_result'>, <class 'tuple'>, <class 'object'>]\r\n  ```\r\n\r\n- while on Python-2, it is a simple tuple:\r\n  ```python\r\n   >>> n\r\n    ('Windows', 'hal', '8', '6.2.9200', 'AMD64', 'Intel64 Family 6 Model 69 Stepping 1, MonkeyIntel')\r\n    >>> type(n)\r\n    <type 'tuple'>\r\n  ```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/5", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/5/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/5/events", "html_url": "https://github.com/MagicStack/immutables/issues/5", "id": 331184345, "node_id": "MDU6SXNzdWUzMzExODQzNDU=", "number": 5, "title": "Data from benchmark and plot do not match", "user": {"login": "curusarn", "id": 10132717, "node_id": "MDQ6VXNlcjEwMTMyNzE3", "avatar_url": "https://avatars2.githubusercontent.com/u/10132717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/curusarn", "html_url": "https://github.com/curusarn", "followers_url": "https://api.github.com/users/curusarn/followers", "following_url": "https://api.github.com/users/curusarn/following{/other_user}", "gists_url": "https://api.github.com/users/curusarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/curusarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/curusarn/subscriptions", "organizations_url": "https://api.github.com/users/curusarn/orgs", "repos_url": "https://api.github.com/users/curusarn/repos", "events_url": "https://api.github.com/users/curusarn/events{/privacy}", "received_events_url": "https://api.github.com/users/curusarn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-11T13:15:51Z", "updated_at": "2018-07-30T15:48:00Z", "closed_at": "2018-07-30T15:48:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why is reguar dict faster than HAMT?\r\n\r\nPlot does not seem to match with times that can be found alongside the banchmark code: https://gist.github.com/1st1/292e3f0bbe43bd65ff3256f80aa2637d", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/4", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/4/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/4/events", "html_url": "https://github.com/MagicStack/immutables/issues/4", "id": 326202451, "node_id": "MDU6SXNzdWUzMjYyMDI0NTE=", "number": 4, "title": "Setting from dict", "user": {"login": "jrbrodie77", "id": 5175843, "node_id": "MDQ6VXNlcjUxNzU4NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5175843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrbrodie77", "html_url": "https://github.com/jrbrodie77", "followers_url": "https://api.github.com/users/jrbrodie77/followers", "following_url": "https://api.github.com/users/jrbrodie77/following{/other_user}", "gists_url": "https://api.github.com/users/jrbrodie77/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrbrodie77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrbrodie77/subscriptions", "organizations_url": "https://api.github.com/users/jrbrodie77/orgs", "repos_url": "https://api.github.com/users/jrbrodie77/repos", "events_url": "https://api.github.com/users/jrbrodie77/events{/privacy}", "received_events_url": "https://api.github.com/users/jrbrodie77/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 885193034, "node_id": "MDU6TGFiZWw4ODUxOTMwMzQ=", "url": "https://api.github.com/repos/MagicStack/immutables/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-24T16:39:04Z", "updated_at": "2018-11-20T19:25:08Z", "closed_at": "2018-11-20T19:25:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "It doesn't look like you support `Map({'a':1, 'b':2})`\r\n\r\nMap.set also looks like it only accepts one pair of key,vals \r\n\r\nAny reason why not?  It's a bit tedious to set each key,val individually.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MagicStack/immutables/issues/2", "repository_url": "https://api.github.com/repos/MagicStack/immutables", "labels_url": "https://api.github.com/repos/MagicStack/immutables/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/MagicStack/immutables/issues/2/comments", "events_url": "https://api.github.com/repos/MagicStack/immutables/issues/2/events", "html_url": "https://github.com/MagicStack/immutables/issues/2", "id": 313658337, "node_id": "MDU6SXNzdWUzMTM2NTgzMzc=", "number": 2, "title": "better document divergence from dict, misc. suggestions", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-12T10:02:31Z", "updated_at": "2018-05-01T15:16:13Z", "closed_at": "2018-05-01T15:16:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, I just discovered this library \u2013 very cool! (I'm the author of https://github.com/jab/bidict so am particularly interested in other Mapping implementations. [1])\r\n\r\nI noticed the README says\r\n\r\n> The Map object implements collections.abc.Mapping ABC so working with it is very similar to working with Python dicts.\r\n>\r\n> The only exception are its Map.set() and Map.delete() methods which return a new instance of Map\r\n\r\nBut right off the bat I noticed some additional discrepancies that seem worth documenting:\r\n\r\n- If you pass items via `*args` and/or `**kwargs` into the `Map(...)` initializer they're ignored?\r\n\r\n```python\r\nIn [37]: Map([(1, 2), (3, 4)])\r\nOut[37]: <immutables.Map({}) at 0x107788ea0>\r\n\r\nIn [38]: Map({1: 2, 3: 4})\r\nOut[38]: <immutables.Map({}) at 0x107788ea0>\r\n\r\nIn [39]: Map(one=1, two=2)\r\nOut[39]: <immutables.Map({}) at 0x107788ea0>\r\n```\r\n\r\n- `map.get('missing')` does not raise `KeyError` as `dict.get('missing')` does, but rather behaves like `dict.get('missing', default=None)`\r\n\r\nAre these bugs or are they intentional? If intentional, I think these are significantly divergent enough to warrant documenting.\r\n\r\n### Other suggestions\r\n- add an `update()` method that returns a new `Map` based on the current one with the provided items set\r\n- add an `immutables.__version__` attribute\r\n\r\n[1] I was immediately curious to see what it would take to implement an alternate version of [`frozenbidict`](https://bidict.readthedocs.io/other-bidict-types.html#frozenbidict) that used `immutables.Map` for the backing forward and inverse maps, but the divergence from `dict.__init__()` and `dict.get()` made me hesitate. I still might put together a recipe for https://bidict.readthedocs.io/extending.html though if I come up with something useful after playing with it some more.", "performed_via_github_app": null, "score": 1.0}]}